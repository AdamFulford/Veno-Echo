ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB781:
  61              	.LBI781:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE781:
  66              	.LBB782:
  67              	.LBI782:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE782:
  72              	.LBB783:
  73              	.LBI783:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE783:
  78              	.LBB784:
  79              	.LBI784:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE784:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_;
  37:taptempo.h    ****         bool tapflag_;
  38:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  39:taptempo.h    **** 
  40:taptempo.h    ****     public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 14


  41:taptempo.h    **** 
  42:taptempo.h    ****     Taptempo()  //default constructor
  43:taptempo.h    ****     {
  44:taptempo.h    ****         tapflag_ = false;
  45:taptempo.h    ****         tap_tolerance_ = 1.25f;
  46:taptempo.h    ****         maxtap_ = 2000;
  47:taptempo.h    ****         mintap_ = 80;
  48:taptempo.h    ****         lastTapLength_ = 0;
  49:taptempo.h    ****         tempo_ = 500.0f;
  50:taptempo.h    ****         lastTime_ = 0;
  51:taptempo.h    ****         currentTime_ = 0;
  52:taptempo.h    ****         tapRatio_ = 1.0f;
  53:taptempo.h    ****         clockLength_ = 0;
  54:taptempo.h    ****         lastClockLength_ = 0;
  55:taptempo.h    ****         clockThresh_ = 10; //ms change
  56:taptempo.h    ****     }
  57:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 57 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 57 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 15


  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB785:
 285              	.LBI785:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 16


 289              	.LBE785:
 290              	.LBB786:
 291              	.LBI786:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE786:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 17


  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB787:
 321              	.LBI787:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE787:
 325              	.LBB788:
 326              	.LBI788:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE788:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 18


   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB789:
 356              	.LBI789:
  48:LEDs.h        **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 19


 357              		.loc 14 48 1 view .LVU39
 358              	.LBB790:
 359              	.LBI790:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE790:
 363              	.LBB791:
 364              	.LBI791:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE791:
 368              	.LBE789:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4912:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 20


  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4912:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4915:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 21


  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4915:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 22


   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 23


  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 24


 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 143:Veno-Echo.cpp **** 
 144:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 145:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr LPF_Env;
 148:Veno-Echo.cpp **** static Adsr HPF_Env;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 151:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade WidthXfade;
 154:Veno-Echo.cpp **** 
 155:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 156:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 157:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 158:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 159:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 160:Veno-Echo.cpp **** 
 161:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 162:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 166:Veno-Echo.cpp **** 
 167:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 168:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 169:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 170:Veno-Echo.cpp **** 
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** //Gate inputs
 175:Veno-Echo.cpp **** Switch ReverseGateL;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 25


 176:Veno-Echo.cpp **** Switch ReverseGateR;
 177:Veno-Echo.cpp **** 
 178:Veno-Echo.cpp **** //Switch TapButton;
 179:Veno-Echo.cpp **** Switch Sync;
 180:Veno-Echo.cpp **** Switch ClockIn;
 181:Veno-Echo.cpp **** 
 182:Veno-Echo.cpp **** //Tap tempo
 183:Veno-Echo.cpp **** Taptempo BaseTempo; 
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** Settings AltControls;
 186:Veno-Echo.cpp **** 
 187:Veno-Echo.cpp **** //default alt control values
 188:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 189:Veno-Echo.cpp **** {
 190:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 191:Veno-Echo.cpp ****     1.0f,   //tapRatio
 192:Veno-Echo.cpp ****     0.0f,   //ModDepth
 193:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 194:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 195:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 196:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 197:Veno-Echo.cpp ****     0.0f
 198:Veno-Echo.cpp **** };
 199:Veno-Echo.cpp **** 
 200:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 201:Veno-Echo.cpp **** void Update_DelayTimeL();
 202:Veno-Echo.cpp **** 
 203:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 204:Veno-Echo.cpp **** void Update_DelayTimeR();
 205:Veno-Echo.cpp **** 
 206:Veno-Echo.cpp **** void Update_feedbackL_CV();
 207:Veno-Echo.cpp **** void Update_feedbackL();
 208:Veno-Echo.cpp **** 
 209:Veno-Echo.cpp **** void Update_feedbackR_CV();
 210:Veno-Echo.cpp **** void Update_feedbackR();
 211:Veno-Echo.cpp **** 
 212:Veno-Echo.cpp **** void Update_drywet_CV();
 213:Veno-Echo.cpp **** void Update_drywet();
 214:Veno-Echo.cpp **** 
 215:Veno-Echo.cpp **** void Update_width_CV();
 216:Veno-Echo.cpp **** void Update_width();
 217:Veno-Echo.cpp **** 
 218:Veno-Echo.cpp **** void Update_crossfeedback();
 219:Veno-Echo.cpp **** void Update_filterXfade();
 220:Veno-Echo.cpp **** 
 221:Veno-Echo.cpp **** void Update_Buttons();
 222:Veno-Echo.cpp **** void Update_BaseTempoLED();
 223:Veno-Echo.cpp **** void Update_Mod();
 224:Veno-Echo.cpp **** void GetModCV();
 225:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 226:Veno-Echo.cpp **** void UpdateClock();
 227:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 228:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 229:Veno-Echo.cpp **** void TurnOnAllLEDs();
 230:Veno-Echo.cpp **** void ResetAllLEDs();
 231:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 232:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 26


 233:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 234:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 235:Veno-Echo.cpp **** 
 236:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 237:Veno-Echo.cpp **** {
 238:Veno-Echo.cpp **** 
 239:Veno-Echo.cpp **** /*
 240:Veno-Echo.cpp **** static uint32_t funcLength{};
 241:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 242:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 243:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 244:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 245:Veno-Echo.cpp **** 
 246:Veno-Echo.cpp **** */
 247:Veno-Echo.cpp **** 
 248:Veno-Echo.cpp **** static int Counter{};
 249:Veno-Echo.cpp **** 
 250:Veno-Echo.cpp **** /*
 251:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 254:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 255:Veno-Echo.cpp ****     {
 256:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 257:Veno-Echo.cpp ****     }
 258:Veno-Echo.cpp **** 
 259:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 260:Veno-Echo.cpp ****     {
 261:Veno-Echo.cpp ****         minFuncLength = funcLength;
 262:Veno-Echo.cpp ****     }
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp **** */
 265:Veno-Echo.cpp **** 
 266:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 267:Veno-Echo.cpp **** 
 268:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 269:Veno-Echo.cpp **** {
 270:Veno-Echo.cpp ****     /*
 271:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 272:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 273:Veno-Echo.cpp ****         //init timeofCall as current time
 274:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 275:Veno-Echo.cpp **** 
 276:Veno-Echo.cpp ****         //wait for random Dither time
 277:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 278:Veno-Echo.cpp ****         {}
 279:Veno-Echo.cpp ****     */
 280:Veno-Echo.cpp **** 
 281:Veno-Echo.cpp ****         switch (Counter)
 282:Veno-Echo.cpp ****         {
 283:Veno-Echo.cpp ****             case 0:
 284:Veno-Echo.cpp ****                 Update_Buttons();
 285:Veno-Echo.cpp ****                 GetModCV();
 286:Veno-Echo.cpp ****             break;
 287:Veno-Echo.cpp **** 
 288:Veno-Echo.cpp ****             case 1:
 289:Veno-Echo.cpp ****                 Update_DelayTimeL();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 27


 290:Veno-Echo.cpp ****             break;
 291:Veno-Echo.cpp **** 
 292:Veno-Echo.cpp ****             case 2:
 293:Veno-Echo.cpp ****                 Update_DelayTimeR();
 294:Veno-Echo.cpp ****             break;
 295:Veno-Echo.cpp **** 
 296:Veno-Echo.cpp ****             case 3:
 297:Veno-Echo.cpp ****                 Update_feedbackL();
 298:Veno-Echo.cpp ****             break;
 299:Veno-Echo.cpp **** 
 300:Veno-Echo.cpp ****             case 4:
 301:Veno-Echo.cpp ****                 Update_feedbackR();
 302:Veno-Echo.cpp ****             break;
 303:Veno-Echo.cpp **** 
 304:Veno-Echo.cpp ****             case 5:
 305:Veno-Echo.cpp ****                 Update_drywet();
 306:Veno-Echo.cpp ****             break;
 307:Veno-Echo.cpp **** 
 308:Veno-Echo.cpp ****             case 6:
 309:Veno-Echo.cpp ****                 Update_width();
 310:Veno-Echo.cpp ****             break;
 311:Veno-Echo.cpp **** 
 312:Veno-Echo.cpp ****             case 7:
 313:Veno-Echo.cpp ****                 //Update_crossfeedback();
 314:Veno-Echo.cpp ****                 Update_filterXfade();
 315:Veno-Echo.cpp ****             break;
 316:Veno-Echo.cpp ****         }
 317:Veno-Echo.cpp **** }
 318:Veno-Echo.cpp **** 
 319:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 320:Veno-Echo.cpp ****     {   
 321:Veno-Echo.cpp ****         UpdateClock(); 
 322:Veno-Echo.cpp ****         Update_Mod();
 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 325:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 326:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 327:Veno-Echo.cpp ****         
 328:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 329:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 330:Veno-Echo.cpp **** 
 331:Veno-Echo.cpp ****         //set xfade positions      
 332:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 333:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 334:Veno-Echo.cpp ****         
 335:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 336:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 337:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 338:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 339:Veno-Echo.cpp **** 
 340:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 341:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 342:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 343:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 344:Veno-Echo.cpp **** 
 345:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 346:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 28


 347:Veno-Echo.cpp **** 
 348:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 349:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 350:Veno-Echo.cpp **** 
 351:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 352:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 353:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 354:Veno-Echo.cpp **** 
 355:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 356:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 357:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 358:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 359:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 360:Veno-Echo.cpp **** 
 361:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 362:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 363:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 364:Veno-Echo.cpp **** 
 365:Veno-Echo.cpp ****         //Get combined output from all delay heads
 366:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 367:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 368:Veno-Echo.cpp **** 
 369:Veno-Echo.cpp ****         //Update Base Tempo LED
 370:Veno-Echo.cpp ****         Update_BaseTempoLED();
 371:Veno-Echo.cpp **** 
 372:Veno-Echo.cpp ****         //hard limit
 373:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 374:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 375:Veno-Echo.cpp **** 
 376:Veno-Echo.cpp **** if(!PostFilters)
 377:Veno-Echo.cpp **** {
 378:Veno-Echo.cpp **** //****************************************************************************************
 379:Veno-Echo.cpp ****         //pre filters
 380:Veno-Echo.cpp ****         //process LPF
 381:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 382:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 383:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 384:Veno-Echo.cpp **** 
 385:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 386:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 387:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 388:Veno-Echo.cpp ****         
 389:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 390:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 391:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 392:Veno-Echo.cpp **** 
 393:Veno-Echo.cpp ****         //hard limit
 394:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 395:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 396:Veno-Echo.cpp **** 
 397:Veno-Echo.cpp ****         //process HPF
 398:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 399:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 400:Veno-Echo.cpp **** 
 401:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 402:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 403:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 29


 404:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 405:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 406:Veno-Echo.cpp **** 
 407:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 408:Veno-Echo.cpp **** 
 409:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 410:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 411:Veno-Echo.cpp **** 
 412:Veno-Echo.cpp **** //****************************************************************************************
 413:Veno-Echo.cpp **** }
 414:Veno-Echo.cpp **** 
 415:Veno-Echo.cpp **** else
 416:Veno-Echo.cpp **** {
 417:Veno-Echo.cpp ****     /* code */
 418:Veno-Echo.cpp **** }
 419:Veno-Echo.cpp **** 
 420:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 421:Veno-Echo.cpp ****         static float RNegFB{};
 422:Veno-Echo.cpp **** 
 423:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 424:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 425:Veno-Echo.cpp ****             LNegFB = 0.0f;
 426:Veno-Echo.cpp ****         
 427:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 428:Veno-Echo.cpp ****             RNegFB = 0.0f;
 429:Veno-Echo.cpp **** 
 430:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 431:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 432:Veno-Echo.cpp **** 
 433:Veno-Echo.cpp ****         //crossfeedback:
 434:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 435:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 436:Veno-Echo.cpp **** 
 437:Veno-Echo.cpp **** 
 438:Veno-Echo.cpp ****         //get envelopes for feedback signals
 439:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 440:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 441:Veno-Echo.cpp **** 
 442:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 443:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 444:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 445:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 446:Veno-Echo.cpp ****             else LNegFB = 0.0;
 447:Veno-Echo.cpp ****             
 448:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 449:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 450:Veno-Echo.cpp ****             else RNegFB = 0.0;
 451:Veno-Echo.cpp **** 
 452:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 453:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 454:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 455:Veno-Echo.cpp ****  
 456:Veno-Echo.cpp ****         //hard limit
 457:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 458:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 459:Veno-Echo.cpp **** 
 460:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 30


 461:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 462:Veno-Echo.cpp **** 
 463:Veno-Echo.cpp ****         // floats for wet dry mix
 464:Veno-Echo.cpp ****         float mixL;
 465:Veno-Echo.cpp ****         float mixR;
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 468:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 469:Veno-Echo.cpp **** 
 470:Veno-Echo.cpp ****         //hard limit
 471:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 472:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 473:Veno-Echo.cpp **** 
 474:Veno-Echo.cpp **** if(PostFilters)
 475:Veno-Echo.cpp **** {
 476:Veno-Echo.cpp ****     //****************************************************************************************
 477:Veno-Echo.cpp ****         //post filters
 478:Veno-Echo.cpp ****         //process LPF
 479:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 480:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 481:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 482:Veno-Echo.cpp **** 
 483:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 484:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 485:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 486:Veno-Echo.cpp ****         
 487:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 488:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 489:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 490:Veno-Echo.cpp **** 
 491:Veno-Echo.cpp ****         //hard limit
 492:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 493:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 494:Veno-Echo.cpp **** 
 495:Veno-Echo.cpp ****         //process HPF
 496:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 497:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 498:Veno-Echo.cpp **** 
 499:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 500:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 501:Veno-Echo.cpp **** 
 502:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 503:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 504:Veno-Echo.cpp **** 
 505:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 506:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 507:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 508:Veno-Echo.cpp **** 
 509:Veno-Echo.cpp ****     //****************************************************************************************
 510:Veno-Echo.cpp **** }
 511:Veno-Echo.cpp **** else
 512:Veno-Echo.cpp **** {
 513:Veno-Echo.cpp ****     /* code */
 514:Veno-Echo.cpp **** }
 515:Veno-Echo.cpp ****         if(drywet < 0.5f)
 516:Veno-Echo.cpp ****         {
 517:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 31


 518:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 519:Veno-Echo.cpp ****         }
 520:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 521:Veno-Echo.cpp ****         {
 522:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 523:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 524:Veno-Echo.cpp ****         }
 525:Veno-Echo.cpp ****         else
 526:Veno-Echo.cpp ****         {
 527:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 528:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 529:Veno-Echo.cpp ****         }
 530:Veno-Echo.cpp **** 
 531:Veno-Echo.cpp ****         //send mixes to outputs
 532:Veno-Echo.cpp ****         if(mute)
 533:Veno-Echo.cpp ****         {
 534:Veno-Echo.cpp ****             out[i] = 0.0f;
 535:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 536:Veno-Echo.cpp ****         }
 537:Veno-Echo.cpp ****         else
 538:Veno-Echo.cpp ****         {
 539:Veno-Echo.cpp ****             out[i] = mixL;
 540:Veno-Echo.cpp ****             out[i+1] = mixR;
 541:Veno-Echo.cpp ****         }
 542:Veno-Echo.cpp **** 
 543:Veno-Echo.cpp ****         //write to DAC for debug
 544:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 545:Veno-Echo.cpp **** 
 546:Veno-Echo.cpp ****     }
 547:Veno-Echo.cpp **** 
 548:Veno-Echo.cpp **** }
 549:Veno-Echo.cpp **** 
 550:Veno-Echo.cpp **** void InitDelays(float samplerate)
 551:Veno-Echo.cpp **** {
 439              		.loc 20 551 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 552:Veno-Echo.cpp **** 
 553:Veno-Echo.cpp ****     //Init fwd delays
 554:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 554 5 view .LVU50
 444              	.LBB792:
 445              	.LBI792:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB793:
 448              	.LBB794:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE794:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 32


 453              	.LBE793:
 454              	.LBE792:
 551:Veno-Echo.cpp **** 
 455              		.loc 20 551 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB799:
 470              	.LBB798:
 471              	.LBB795:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE795:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB796:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE796:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB797:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 33


  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE797:
 525              	.LBE798:
 526              	.LBE799:
 527              	.LBB800:
 528              	.LBB801:
 529              	.LBB802:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE802:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 34


  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB803:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE803:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB804:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE804:
 576              	.LBE801:
 577              	.LBE800:
 555:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 556:Veno-Echo.cpp **** 
 557:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 558:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 558 5 is_stmt 1 view .LVU91
 559:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 559 16 is_stmt 0 view .LVU92
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 35


 580 0068 484C     		ldr	r4, .L36+20
 560:Veno-Echo.cpp **** 
 561:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 561 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 558:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 558 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 559:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 559 5 is_stmt 1 view .LVU95
 588              	.LBB805:
 589              	.LBB806:
 590              	.LBB807:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE807:
 594              	.LBE806:
 595              	.LBE805:
 559:Veno-Echo.cpp **** 
 596              		.loc 20 559 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 561 5 is_stmt 1 view .LVU98
 599              		.loc 20 561 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 561 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 562:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 562 5 is_stmt 1 view .LVU101
 611              		.loc 20 562 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB819:
 618              	.LBB814:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 36


 619              	.LBB809:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE809:
 623              	.LBE814:
 624              	.LBE819:
 625              		.loc 20 562 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 563:Veno-Echo.cpp **** 
 564:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 565:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 566:Veno-Echo.cpp **** 
 567:Veno-Echo.cpp ****     //Init rev delays
 568:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 568 5 is_stmt 1 view .LVU105
 632              	.LBB820:
 633              	.LBI805:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB815:
 636              	.LBI806:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB810:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB808:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE808:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 37


 660              	.LBE810:
 661              	.LBE815:
 662              	.LBE820:
 663              	.LBB821:
 664              	.LBB822:
 665              	.LBB823:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE823:
 675              	.LBE822:
 676              	.LBE821:
 677              	.LBB846:
 678              	.LBB816:
 679              	.LBB811:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE811:
 683              	.LBE816:
 684              	.LBE846:
 685              	.LBB847:
 686              	.LBB836:
 687              	.LBB826:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE826:
 691              	.LBE836:
 692              	.LBE847:
 693              	.LBB848:
 694              	.LBB817:
 695              	.LBB812:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 38


 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE812:
 714              	.LBE817:
 715              	.LBE848:
 569:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 569 5 is_stmt 1 view .LVU128
 717              	.LBB849:
 718              	.LBI821:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB837:
 721              	.LBI822:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB827:
 724              	.LBB824:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE824:
 727              	.LBE827:
 728              	.LBE837:
 729              	.LBE849:
 730              	.LBB850:
 731              	.LBB818:
 732              	.LBB813:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE813:
 742              	.LBE818:
 743              	.LBE850:
 744              	.LBB851:
 745              	.LBB838:
 746              	.LBB828:
 747              	.LBB825:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 39


 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE825:
 756              	.LBE828:
 757              	.LBE838:
 758              	.LBE851:
 570:Veno-Echo.cpp **** 
 571:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 572:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 572 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB852:
 762              	.LBB839:
 763              	.LBB829:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE829:
 767              	.LBE839:
 768              	.LBE852:
 769              	.LBB853:
 770              	.LBB854:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE854:
 780              	.LBE853:
 781              	.LBB868:
 782              	.LBB840:
 783              	.LBB830:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE830:
 787              	.LBE840:
 788              	.LBE868:
 789              	.LBB869:
 790              	.LBB863:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE863:
 794              	.LBE869:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 40


 795              	.LBB870:
 796              	.LBB841:
 797              	.LBB831:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE831:
 803              	.LBE841:
 804              	.LBE870:
 805              	.LBB871:
 806              	.LBB864:
 807              	.LBB855:
 808              	.LBB856:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 41


  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE856:
 813              	.LBE855:
 814              	.LBE864:
 815              	.LBE871:
 816              	.LBB872:
 817              	.LBB842:
 818              	.LBB832:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE832:
 826              	.LBE842:
 827              	.LBE872:
 828              	.LBB873:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 42


 829              	.LBB865:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE865:
 833              	.LBE873:
 834              	.LBB874:
 835              	.LBB843:
 836              	.LBB833:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE833:
 842              	.LBE843:
 843              	.LBE874:
 844              		.loc 20 572 5 is_stmt 1 view .LVU155
 573:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 573 5 view .LVU156
 572:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 572 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB875:
 849              	.LBB844:
 850              	.LBB834:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE834:
 854              	.LBE844:
 855              	.LBE875:
 856              	.LBB876:
 857              	.LBB866:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE866:
 861              	.LBE876:
 862              	.LBB877:
 863              	.LBB845:
 864              	.LBB835:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE835:
 868              	.LBE845:
 869              	.LBE877:
 870              		.loc 20 573 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 574:Veno-Echo.cpp **** 
 575:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 576:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 576 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB878:
 876              	.LBI853:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 43


  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB867:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB858:
 881              	.LBI855:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB857:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE857:
 887              	.LBE858:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB859:
 892              	.LBB860:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE860:
 896              	.LBE859:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB862:
 902              	.LBI859:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB861:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE861:
 913              	.LBE862:
 914              	.LBE867:
 915              	.LBE878:
 577:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 44


 916              		.loc 20 577 5 is_stmt 1 view .LVU177
 917              	.LBB879:
 918              	.LBI879:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB880:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB881:
 926              	.LBI881:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB882:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE882:
 932              	.LBE881:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB884:
 942              	.LBB883:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE883:
 946              	.LBE884:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB885:
 953              	.LBB886:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE886:
 959              	.LBE885:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 45


 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB888:
 965              	.LBI885:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB887:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE887:
 976              	.LBE888:
 977              	.LBE880:
 978              	.LBE879:
 578:Veno-Echo.cpp **** 
 579:Veno-Echo.cpp **** }
 979              		.loc 20 579 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 46


 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 580:Veno-Echo.cpp **** 
 581:Veno-Echo.cpp **** int main(void)
 582:Veno-Echo.cpp **** {
 583:Veno-Echo.cpp ****     // initialize hardware.
 584:Veno-Echo.cpp ****     hw.Configure();
 585:Veno-Echo.cpp ****     hw.Init();
 586:Veno-Echo.cpp ****     
 587:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 588:Veno-Echo.cpp **** 
 589:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(12),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 590:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 591:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 592:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 593:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 594:Veno-Echo.cpp **** 
 595:Veno-Echo.cpp ****     //Gates
 596:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 597:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 598:Veno-Echo.cpp **** 
 599:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 600:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 601:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 602:Veno-Echo.cpp ****     
 603:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 604:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 605:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 606:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 607:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 608:Veno-Echo.cpp **** 
 609:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 610:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 611:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 612:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 613:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 614:Veno-Echo.cpp **** 
 615:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 616:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 617:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 618:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 619:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 620:Veno-Echo.cpp **** 
 621:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 622:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 623:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 624:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 625:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 626:Veno-Echo.cpp **** 
 627:Veno-Echo.cpp ****     // set params for CrossFade objects
 628:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 629:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 47


 630:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 631:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 632:Veno-Echo.cpp **** 
 633:Veno-Echo.cpp ****     WidthXfade.Init();
 634:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 635:Veno-Echo.cpp **** 
 636:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 637:Veno-Echo.cpp **** 
 638:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 639:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 640:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 641:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 642:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 643:Veno-Echo.cpp **** 
 644:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 645:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 646:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 647:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 648:Veno-Echo.cpp **** 
 649:Veno-Echo.cpp ****     //setup L and R High Pass filters
 650:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 651:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 652:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 653:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 654:Veno-Echo.cpp **** 
 655:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 656:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 657:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 658:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 659:Veno-Echo.cpp **** 
 660:Veno-Echo.cpp ****     //post filters
 661:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 662:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 663:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 664:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 665:Veno-Echo.cpp **** 
 666:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 667:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 668:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 669:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 670:Veno-Echo.cpp **** 
 671:Veno-Echo.cpp ****     //setup L and R High Pass filters
 672:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 673:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 674:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 675:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 676:Veno-Echo.cpp **** 
 677:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 678:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 679:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 680:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 681:Veno-Echo.cpp **** 
 682:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 683:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 684:Veno-Echo.cpp **** 
 685:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 686:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 48


 687:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 688:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 689:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 690:Veno-Echo.cpp **** 
 691:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 692:Veno-Echo.cpp **** 
 693:Veno-Echo.cpp ****     //setup tempo indicators
 694:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 695:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 696:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 697:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 698:Veno-Echo.cpp **** 
 699:Veno-Echo.cpp ****     //load settings from flash
 700:Veno-Echo.cpp **** 
 701:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 702:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 703:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 704:Veno-Echo.cpp **** 
 705:Veno-Echo.cpp ****     //initialize DAC
 706:Veno-Echo.cpp **** 
 707:Veno-Echo.cpp ****     //ADC
 708:Veno-Echo.cpp ****     AdcChannelConfig adc[8];
 709:Veno-Echo.cpp **** 
 710:Veno-Echo.cpp ****     adc[0].InitSingle(hw.GetPin(15));
 711:Veno-Echo.cpp ****     adc[1].InitSingle(hw.GetPin(16));
 712:Veno-Echo.cpp ****     adc[2].InitSingle(hw.GetPin(17));
 713:Veno-Echo.cpp ****     adc[3].InitSingle(hw.GetPin(18));
 714:Veno-Echo.cpp ****     adc[4].InitSingle(hw.GetPin(19));
 715:Veno-Echo.cpp ****     adc[5].InitSingle(hw.GetPin(20));
 716:Veno-Echo.cpp ****     adc[6].InitSingle(hw.GetPin(21));
 717:Veno-Echo.cpp ****     adc[7].InitSingle(hw.GetPin(22));
 718:Veno-Echo.cpp **** 
 719:Veno-Echo.cpp ****     hw.adc.Init(adc, 8);
 720:Veno-Echo.cpp ****     hw.adc.Start();
 721:Veno-Echo.cpp **** 
 722:Veno-Echo.cpp **** 
 723:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 724:Veno-Echo.cpp ****     // start audio callback
 725:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 726:Veno-Echo.cpp **** 
 727:Veno-Echo.cpp ****     
 728:Veno-Echo.cpp **** 
 729:Veno-Echo.cpp ****      for(;;)
 730:Veno-Echo.cpp ****      {
 731:Veno-Echo.cpp **** 
 732:Veno-Echo.cpp **** /*
 733:Veno-Echo.cpp ****         if(save_flag)
 734:Veno-Echo.cpp ****         {
 735:Veno-Echo.cpp **** 
 736:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 737:Veno-Echo.cpp ****             {
 738:Veno-Echo.cpp ****                 //reset flag
 739:Veno-Echo.cpp ****                 //System::Delay(1000);
 740:Veno-Echo.cpp ****                 save_flag = false;
 741:Veno-Echo.cpp ****             }
 742:Veno-Echo.cpp ****         }
 743:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 49


 744:Veno-Echo.cpp **** */
 745:Veno-Echo.cpp ****      }
 746:Veno-Echo.cpp **** 
 747:Veno-Echo.cpp **** }
 748:Veno-Echo.cpp **** 
 749:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 750:Veno-Echo.cpp **** {
 1022              		.loc 20 750 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 751:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 751 5 view .LVU201
 750:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 750 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 751 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 751 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 752:Veno-Echo.cpp **** }
 1040              		.loc 20 752 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 753:Veno-Echo.cpp **** 
 754:Veno-Echo.cpp **** void Update_DelayTimeL()
 755:Veno-Echo.cpp **** {
 1061              		.loc 20 755 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 756:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 756 5 view .LVU207
 757:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 50


 1066              		.loc 20 757 5 view .LVU208
 758:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 758 5 view .LVU209
 759:Veno-Echo.cpp ****     
 760:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 760 5 view .LVU210
 761:Veno-Echo.cpp **** 
 762:Veno-Echo.cpp ****     //update pot values
 763:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetFloat(0)};
 1069              		.loc 20 763 5 view .LVU211
 755:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 755 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 763 41 view .LVU213
 1076 0002 0021     		movs	r1, #0
 1077 0004 6E48     		ldr	r0, .L75
 755:Veno-Echo.cpp ****     static bool lastShift{};
 1078              		.loc 20 755 1 view .LVU214
 1079 0006 2DED028B 		vpush.64	{d8}
 1080              		.cfi_def_cfa_offset 16
 1081              		.cfi_offset 80, -16
 1082              		.cfi_offset 81, -12
 1083              		.loc 20 763 41 view .LVU215
 1084 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1085              	.LVL40:
 764:Veno-Echo.cpp **** 
 765:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 766:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 767:Veno-Echo.cpp ****     static int counterL{};
 768:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 768 26 view .LVU216
 1087 000e 6D48     		ldr	r0, .L75+4
 1088              		.loc 20 768 31 view .LVU217
 1089 0010 6D4B     		ldr	r3, .L75+8
 1090              	.LVL41:
 767:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1091              		.loc 20 767 5 is_stmt 1 view .LVU218
 1092              		.loc 20 768 5 view .LVU219
 1093              		.loc 20 768 26 is_stmt 0 view .LVU220
 1094 0012 0268     		ldr	r2, [r0]
 1095              	.LBB889:
 769:Veno-Echo.cpp **** 
 770:Veno-Echo.cpp ****     if (!shift) //default control
 1096              		.loc 20 770 9 view .LVU221
 1097 0014 6D49     		ldr	r1, .L75+12
 1098              	.LBE889:
 768:Veno-Echo.cpp **** 
 1099              		.loc 20 768 26 view .LVU222
 1100 0016 0132     		adds	r2, r2, #1
 1101              	.LBB952:
 1102              		.loc 20 770 5 view .LVU223
 1103 0018 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1104              	.LBE952:
 768:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 51


 1105              		.loc 20 768 31 view .LVU224
 1106 001a 83FB0231 		smull	r3, r1, r3, r2
 1107 001e D317     		asrs	r3, r2, #31
 1108 0020 C3EB6113 		rsb	r3, r3, r1, asr #5
 1109 0024 03EB4303 		add	r3, r3, r3, lsl #1
 1110 0028 A2EB8313 		sub	r3, r2, r3, lsl #6
 1111              	.LBB953:
 1112              	.LBB890:
 771:Veno-Echo.cpp ****     {
 772:Veno-Echo.cpp ****         static float delayTimeL_new{};
 773:Veno-Echo.cpp ****         //udpate pickup
 774:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1113              		.loc 20 774 19 view .LVU225
 1114 002c 684A     		ldr	r2, .L75+16
 1115              	.LBE890:
 1116              	.LBE953:
 768:Veno-Echo.cpp **** 
 1117              		.loc 20 768 14 view .LVU226
 1118 002e 0360     		str	r3, [r0]
 770:Veno-Echo.cpp ****     {
 1119              		.loc 20 770 5 is_stmt 1 view .LVU227
 1120              	.LBB954:
 1121 0030 84BB     		cbnz	r4, .L43
 1122              	.LBB905:
 772:Veno-Echo.cpp ****         //udpate pickup
 1123              		.loc 20 772 9 view .LVU228
 1124              		.loc 20 774 9 view .LVU229
 1125 0032 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1126 0034 0029     		cmp	r1, #0
 1127 0036 39D0     		beq	.L44
 775:Veno-Echo.cpp ****         {
 776:Veno-Echo.cpp ****             lastShift = shift;
 1128              		.loc 20 776 13 view .LVU230
 777:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1129              		.loc 20 777 31 is_stmt 0 view .LVU231
 1130 0038 6648     		ldr	r0, .L75+20
 778:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1131              		.loc 20 778 28 view .LVU232
 1132 003a 6749     		ldr	r1, .L75+24
 776:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1133              		.loc 20 776 23 view .LVU233
 1134 003c 1470     		strb	r4, [r2]
 777:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1135              		.loc 20 777 13 is_stmt 1 view .LVU234
 777:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1136              		.loc 20 777 31 is_stmt 0 view .LVU235
 1137 003e 0470     		strb	r4, [r0]
 1138              		.loc 20 778 13 is_stmt 1 view .LVU236
 1139              		.loc 20 778 28 is_stmt 0 view .LVU237
 1140 0040 81ED000A 		vstr.32	s0, [r1]
 1141              	.L45:
 779:Veno-Echo.cpp ****         } 
 780:Veno-Echo.cpp ****         else    //not a recent shift change
 781:Veno-Echo.cpp ****         {
 782:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 783:Veno-Echo.cpp ****             {
 784:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 52


 785:Veno-Echo.cpp ****                 {
 786:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 787:Veno-Echo.cpp ****                 }
 788:Veno-Echo.cpp ****             }
 789:Veno-Echo.cpp ****         }
 790:Veno-Echo.cpp **** 
 791:Veno-Echo.cpp ****         float delayTimeL{};
 1142              		.loc 20 791 9 is_stmt 1 view .LVU238
 1143              	.LVL42:
 792:Veno-Echo.cpp **** 
 793:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1144              		.loc 20 793 9 view .LVU239
 794:Veno-Echo.cpp ****         {
 795:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,0.5f);  //combine pot value and CV
 796:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 797:Veno-Echo.cpp ****         }
 798:Veno-Echo.cpp **** 
 799:Veno-Echo.cpp ****         else
 800:Veno-Echo.cpp ****         {
 801:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,0.5f); //combine last pot value and CV
 1145              		.loc 20 801 13 view .LVU240
 1146              	.LBB891:
 1147              	.LBI891:
 802:Veno-Echo.cpp ****         }
 803:Veno-Echo.cpp **** 
 804:Veno-Echo.cpp ****         if(counterL == 0)
 805:Veno-Echo.cpp ****         {
 806:Veno-Echo.cpp ****             if(delayL.SetDelayTime(1.0f - delayTimeL,BaseTempo.getTapLength(),syncMode))
 807:Veno-Echo.cpp ****             {
 808:Veno-Echo.cpp ****             };
 809:Veno-Echo.cpp ****         }
 810:Veno-Echo.cpp **** 
 811:Veno-Echo.cpp ****     }   //not shift mode
 812:Veno-Echo.cpp **** 
 813:Veno-Echo.cpp ****     else    //shift mode
 814:Veno-Echo.cpp ****     {
 815:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 816:Veno-Echo.cpp **** 
 817:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 818:Veno-Echo.cpp ****         {
 819:Veno-Echo.cpp ****             lastShift = shift;
 820:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 821:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 822:Veno-Echo.cpp ****         }
 823:Veno-Echo.cpp **** 
 824:Veno-Echo.cpp ****         else    //not a recent shift change
 825:Veno-Echo.cpp ****         {
 826:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 827:Veno-Echo.cpp ****             {
 828:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 829:Veno-Echo.cpp ****                 {
 830:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 831:Veno-Echo.cpp ****                 }
 832:Veno-Echo.cpp ****             }
 833:Veno-Echo.cpp ****         }
 834:Veno-Echo.cpp **** 
 835:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 53


 836:Veno-Echo.cpp ****         {
 837:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 838:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 839:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 840:Veno-Echo.cpp ****             //save setting:
 841:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 842:Veno-Echo.cpp ****         }
 843:Veno-Echo.cpp ****     }
 844:Veno-Echo.cpp ****     
 845:Veno-Echo.cpp **** }
 846:Veno-Echo.cpp **** 
 847:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 848:Veno-Echo.cpp **** {
 849:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 850:Veno-Echo.cpp **** }
 851:Veno-Echo.cpp **** 
 852:Veno-Echo.cpp **** void Update_DelayTimeR()
 853:Veno-Echo.cpp **** {
 854:Veno-Echo.cpp ****     static bool lastShift{};
 855:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 856:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 857:Veno-Echo.cpp ****     
 858:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 859:Veno-Echo.cpp **** 
 860:Veno-Echo.cpp ****     //update pot values
 861:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetFloat(1)};
 862:Veno-Echo.cpp **** 
 863:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 864:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 865:Veno-Echo.cpp ****     static int counterR{};
 866:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 867:Veno-Echo.cpp **** 
 868:Veno-Echo.cpp ****     if (!shift) //default control
 869:Veno-Echo.cpp ****     {
 870:Veno-Echo.cpp ****         static float delayTimeR_new{};
 871:Veno-Echo.cpp ****         //udpate pickup
 872:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 873:Veno-Echo.cpp ****         {
 874:Veno-Echo.cpp ****             lastShift = shift;
 875:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 876:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 877:Veno-Echo.cpp ****         } 
 878:Veno-Echo.cpp ****         else    //not a default shift change
 879:Veno-Echo.cpp ****         {
 880:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 881:Veno-Echo.cpp ****             {
 882:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 883:Veno-Echo.cpp ****                 {
 884:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 885:Veno-Echo.cpp ****                 }
 886:Veno-Echo.cpp ****             }
 887:Veno-Echo.cpp ****         }
 888:Veno-Echo.cpp **** 
 889:Veno-Echo.cpp ****         float delayTimeR{};
 890:Veno-Echo.cpp **** 
 891:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 892:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 54


 893:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,0.5f);
 894:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 895:Veno-Echo.cpp ****         }
 896:Veno-Echo.cpp **** 
 897:Veno-Echo.cpp ****         else
 898:Veno-Echo.cpp ****         {
 899:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,0.5f);
 900:Veno-Echo.cpp ****         }
 901:Veno-Echo.cpp **** 
 902:Veno-Echo.cpp ****         if(counterR == 0)
 903:Veno-Echo.cpp ****         {
 904:Veno-Echo.cpp ****             if(delayR.SetDelayTime(1.0f - delayTimeR,BaseTempo.getTapLength(),syncMode))
 905:Veno-Echo.cpp ****             {
 906:Veno-Echo.cpp ****             };
 907:Veno-Echo.cpp **** 
 908:Veno-Echo.cpp ****         }
 909:Veno-Echo.cpp ****     }   //not shift mode
 910:Veno-Echo.cpp **** 
 911:Veno-Echo.cpp ****     else    //shift mode
 912:Veno-Echo.cpp ****     {
 913:Veno-Echo.cpp **** 
 914:Veno-Echo.cpp ****         static float tapRatio_new{};
 915:Veno-Echo.cpp **** 
 916:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 917:Veno-Echo.cpp ****         {
 918:Veno-Echo.cpp ****             lastShift = shift;
 919:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 920:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 921:Veno-Echo.cpp ****         }
 922:Veno-Echo.cpp **** 
 923:Veno-Echo.cpp ****         else    //not a recent shift change
 924:Veno-Echo.cpp ****         {
 925:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
 926:Veno-Echo.cpp ****             {
 927:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
 928:Veno-Echo.cpp ****                 {
 929:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
 930:Veno-Echo.cpp ****                 }
 931:Veno-Echo.cpp ****             }
 932:Veno-Echo.cpp ****         }
 933:Veno-Echo.cpp **** 
 934:Veno-Echo.cpp ****         if(tapRatio_pickup)
 935:Veno-Echo.cpp ****         {
 936:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
 937:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 938:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 939:Veno-Echo.cpp ****             //save setting:
 940:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 941:Veno-Echo.cpp ****         }
 942:Veno-Echo.cpp ****     }
 943:Veno-Echo.cpp ****     
 944:Veno-Echo.cpp **** }
 945:Veno-Echo.cpp **** void Update_feedbackL_CV()
 946:Veno-Echo.cpp **** {
 947:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 948:Veno-Echo.cpp **** }
 949:Veno-Echo.cpp **** void Update_feedbackL()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 55


 950:Veno-Echo.cpp **** {
 951:Veno-Echo.cpp ****     static bool lastShift{};
 952:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 953:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 954:Veno-Echo.cpp **** 
 955:Veno-Echo.cpp ****     static float feedbackL_Last{};
 956:Veno-Echo.cpp **** 
 957:Veno-Echo.cpp ****     //get pot values:
 958:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 959:Veno-Echo.cpp ****     float feedbackL_Pot{1.0f - hw.adc.GetFloat(2)};
 960:Veno-Echo.cpp **** 
 961:Veno-Echo.cpp ****     if (!shift) //default controls
 962:Veno-Echo.cpp ****     {   
 963:Veno-Echo.cpp ****         static float feedbackL_new{};
 964:Veno-Echo.cpp ****         //update pickup
 965:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 966:Veno-Echo.cpp ****         {
 967:Veno-Echo.cpp ****             lastShift = shift;
 968:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 969:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 970:Veno-Echo.cpp ****         } 
 971:Veno-Echo.cpp ****         else    //not a default shift change
 972:Veno-Echo.cpp ****         {
 973:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
 974:Veno-Echo.cpp ****             {
 975:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
 976:Veno-Echo.cpp ****                 {
 977:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
 978:Veno-Echo.cpp ****                 }
 979:Veno-Echo.cpp ****             }
 980:Veno-Echo.cpp ****         }
 981:Veno-Echo.cpp **** 
 982:Veno-Echo.cpp ****         float feedbackL_combo{};
 983:Veno-Echo.cpp **** 
 984:Veno-Echo.cpp ****         if(feedbackL_pickup)
 985:Veno-Echo.cpp ****         {
 986:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,0.5f);
 987:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 988:Veno-Echo.cpp ****         }
 989:Veno-Echo.cpp **** 
 990:Veno-Echo.cpp ****         else
 991:Veno-Echo.cpp ****         {
 992:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,0.5f);
 993:Veno-Echo.cpp ****         }
 994:Veno-Echo.cpp ****   
 995:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
 996:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 997:Veno-Echo.cpp ****     }
 998:Veno-Echo.cpp ****     else    //alternate controls
 999:Veno-Echo.cpp ****     {
1000:Veno-Echo.cpp ****         static float HPCutoff_new{};
1001:Veno-Echo.cpp **** 
1002:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1003:Veno-Echo.cpp ****         {
1004:Veno-Echo.cpp ****             lastShift = shift;
1005:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1006:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 56


1007:Veno-Echo.cpp ****         }
1008:Veno-Echo.cpp **** 
1009:Veno-Echo.cpp ****         else    //not a recent shift change
1010:Veno-Echo.cpp ****         {
1011:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1012:Veno-Echo.cpp ****             {
1013:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1014:Veno-Echo.cpp ****                 {
1015:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1016:Veno-Echo.cpp ****                 }
1017:Veno-Echo.cpp ****             }
1018:Veno-Echo.cpp ****         }
1019:Veno-Echo.cpp **** 
1020:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1021:Veno-Echo.cpp ****         {
1022:Veno-Echo.cpp ****             float HPCutoff{};
1023:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1024:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1025:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1026:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1027:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1028:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1029:Veno-Echo.cpp ****         }
1030:Veno-Echo.cpp ****     }
1031:Veno-Echo.cpp **** }
1032:Veno-Echo.cpp **** 
1033:Veno-Echo.cpp **** void Update_feedbackR_CV()
1034:Veno-Echo.cpp **** {
1035:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1036:Veno-Echo.cpp **** }
1037:Veno-Echo.cpp **** 
1038:Veno-Echo.cpp **** void Update_feedbackR()
1039:Veno-Echo.cpp **** {
1040:Veno-Echo.cpp ****     static bool lastShift{};
1041:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1042:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1043:Veno-Echo.cpp **** 
1044:Veno-Echo.cpp ****     static float feedbackR_Last{};
1045:Veno-Echo.cpp **** 
1046:Veno-Echo.cpp ****     //get pot values:
1047:Veno-Echo.cpp ****     float feedbackR_Pot{1.0f - hw.adc.GetFloat(3)};
1048:Veno-Echo.cpp **** 
1049:Veno-Echo.cpp ****     if (!shift) //default controls
1050:Veno-Echo.cpp ****     {   
1051:Veno-Echo.cpp ****         static float feedbackR_new{};
1052:Veno-Echo.cpp ****         //update pickup
1053:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1054:Veno-Echo.cpp ****         {
1055:Veno-Echo.cpp ****             lastShift = shift;
1056:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1057:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1058:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1059:Veno-Echo.cpp ****         } 
1060:Veno-Echo.cpp ****         else    //not a recent shift change
1061:Veno-Echo.cpp ****         {
1062:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1063:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 57


1064:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1065:Veno-Echo.cpp ****                 {
1066:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1067:Veno-Echo.cpp ****                 }
1068:Veno-Echo.cpp ****             }
1069:Veno-Echo.cpp ****         }
1070:Veno-Echo.cpp **** 
1071:Veno-Echo.cpp ****         float feedbackR_combo{};
1072:Veno-Echo.cpp ****         
1073:Veno-Echo.cpp ****         if(feedbackR_pickup)
1074:Veno-Echo.cpp ****         {
1075:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,0.5f);
1076:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1077:Veno-Echo.cpp ****         }
1078:Veno-Echo.cpp **** 
1079:Veno-Echo.cpp ****         else
1080:Veno-Echo.cpp ****         {
1081:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,0.5f);
1082:Veno-Echo.cpp ****         }
1083:Veno-Echo.cpp **** 
1084:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1085:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1086:Veno-Echo.cpp ****     }
1087:Veno-Echo.cpp ****     else    //alternate controls
1088:Veno-Echo.cpp ****     {
1089:Veno-Echo.cpp **** 
1090:Veno-Echo.cpp ****         static float LPCutoff_new{};
1091:Veno-Echo.cpp **** 
1092:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1093:Veno-Echo.cpp ****         {
1094:Veno-Echo.cpp ****             lastShift = shift;
1095:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1096:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1097:Veno-Echo.cpp ****         }
1098:Veno-Echo.cpp **** 
1099:Veno-Echo.cpp ****         else    //not a recent shift change
1100:Veno-Echo.cpp ****         {
1101:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1102:Veno-Echo.cpp ****             {
1103:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1104:Veno-Echo.cpp ****                 {
1105:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1106:Veno-Echo.cpp ****                 }
1107:Veno-Echo.cpp ****             }
1108:Veno-Echo.cpp ****         }
1109:Veno-Echo.cpp **** 
1110:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1111:Veno-Echo.cpp ****         {
1112:Veno-Echo.cpp ****             float LPCutoff{};
1113:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1114:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1115:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1116:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1117:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1118:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1119:Veno-Echo.cpp ****         }
1120:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 58


1121:Veno-Echo.cpp **** }
1122:Veno-Echo.cpp **** 
1123:Veno-Echo.cpp **** void Update_drywet_CV()
1124:Veno-Echo.cpp **** {
1125:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1126:Veno-Echo.cpp **** }
1127:Veno-Echo.cpp **** 
1128:Veno-Echo.cpp **** void Update_drywet()
1129:Veno-Echo.cpp **** {
1130:Veno-Echo.cpp ****     static bool lastShift{};
1131:Veno-Echo.cpp ****     static bool drywet_pickup{};
1132:Veno-Echo.cpp ****     static bool Res_pickup{};
1133:Veno-Echo.cpp **** 
1134:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1135:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1136:Veno-Echo.cpp **** 
1137:Veno-Echo.cpp ****     //get pot values:
1138:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1139:Veno-Echo.cpp ****     float drywet_Pot{1.0f - hw.adc.GetFloat(4)}; //read current pot position
1140:Veno-Echo.cpp **** 
1141:Veno-Echo.cpp ****     if (!shift) //default controls
1142:Veno-Echo.cpp ****     {   
1143:Veno-Echo.cpp **** 
1144:Veno-Echo.cpp ****         static float drywet_new{};
1145:Veno-Echo.cpp **** 
1146:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1147:Veno-Echo.cpp ****         {
1148:Veno-Echo.cpp ****             lastShift = shift;
1149:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1150:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1151:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1152:Veno-Echo.cpp ****         } 
1153:Veno-Echo.cpp ****         
1154:Veno-Echo.cpp ****         else    //not a recent shift change
1155:Veno-Echo.cpp ****         {
1156:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1157:Veno-Echo.cpp ****             {
1158:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1159:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1160:Veno-Echo.cpp ****                 {
1161:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1162:Veno-Echo.cpp ****                 }
1163:Veno-Echo.cpp ****             }
1164:Veno-Echo.cpp **** 
1165:Veno-Echo.cpp ****         }
1166:Veno-Echo.cpp ****         
1167:Veno-Echo.cpp ****         float drywetcombo{};
1168:Veno-Echo.cpp **** 
1169:Veno-Echo.cpp ****         if (drywet_pickup)
1170:Veno-Echo.cpp ****         {
1171:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,0.5f);    //combine pot and CV
1172:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1173:Veno-Echo.cpp ****         }
1174:Veno-Echo.cpp **** 
1175:Veno-Echo.cpp ****         else
1176:Veno-Echo.cpp ****         {
1177:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,0.5f);    //combine last pot value and CV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 59


1178:Veno-Echo.cpp ****         }
1179:Veno-Echo.cpp **** 
1180:Veno-Echo.cpp ****         float drywetTarget{};
1181:Veno-Echo.cpp **** 
1182:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1183:Veno-Echo.cpp ****         {
1184:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1185:Veno-Echo.cpp ****         }
1186:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1187:Veno-Echo.cpp ****         {
1188:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1189:Veno-Echo.cpp ****         }
1190:Veno-Echo.cpp ****         else
1191:Veno-Echo.cpp ****         {
1192:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1193:Veno-Echo.cpp ****         }
1194:Veno-Echo.cpp **** 
1195:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1196:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1197:Veno-Echo.cpp ****     }
1198:Veno-Echo.cpp ****     else    //alternate controls
1199:Veno-Echo.cpp ****     {
1200:Veno-Echo.cpp ****         static float Res_new{};
1201:Veno-Echo.cpp **** 
1202:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1203:Veno-Echo.cpp ****         {
1204:Veno-Echo.cpp ****             lastShift = shift;
1205:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1206:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1207:Veno-Echo.cpp ****         }
1208:Veno-Echo.cpp **** 
1209:Veno-Echo.cpp ****         else    //not a recent shift change
1210:Veno-Echo.cpp ****         {
1211:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1212:Veno-Echo.cpp ****             {
1213:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1214:Veno-Echo.cpp ****                 {
1215:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1216:Veno-Echo.cpp ****                 }
1217:Veno-Echo.cpp ****             }
1218:Veno-Echo.cpp ****         }
1219:Veno-Echo.cpp **** 
1220:Veno-Echo.cpp ****         if(Res_pickup)
1221:Veno-Echo.cpp ****         {
1222:Veno-Echo.cpp ****             float Res{};
1223:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1224:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1225:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1226:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1227:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1228:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1229:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1230:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1231:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1232:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1233:Veno-Echo.cpp ****         }
1234:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 60


1235:Veno-Echo.cpp **** }
1236:Veno-Echo.cpp **** 
1237:Veno-Echo.cpp **** void Update_width_CV()
1238:Veno-Echo.cpp **** {
1239:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1240:Veno-Echo.cpp **** }
1241:Veno-Echo.cpp **** 
1242:Veno-Echo.cpp **** void Update_width()
1243:Veno-Echo.cpp **** {
1244:Veno-Echo.cpp ****     static bool lastShift{};
1245:Veno-Echo.cpp ****     static bool width_pickup{};
1246:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1247:Veno-Echo.cpp **** 
1248:Veno-Echo.cpp ****     static float width_Last{};
1249:Veno-Echo.cpp **** 
1250:Veno-Echo.cpp ****     //get pot values:
1251:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetFloat(5)};
1252:Veno-Echo.cpp **** 
1253:Veno-Echo.cpp ****     if (!shift) //default controls
1254:Veno-Echo.cpp ****     {   
1255:Veno-Echo.cpp ****         static float width_new{};
1256:Veno-Echo.cpp ****         //update pickup
1257:Veno-Echo.cpp ****         if (shift != lastShift)
1258:Veno-Echo.cpp ****         {
1259:Veno-Echo.cpp ****             lastShift = shift;
1260:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1261:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1262:Veno-Echo.cpp ****         }
1263:Veno-Echo.cpp **** 
1264:Veno-Echo.cpp ****         else
1265:Veno-Echo.cpp ****         {
1266:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1267:Veno-Echo.cpp ****             {
1268:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1269:Veno-Echo.cpp ****                 {
1270:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1271:Veno-Echo.cpp ****                 }
1272:Veno-Echo.cpp ****             }
1273:Veno-Echo.cpp **** 
1274:Veno-Echo.cpp ****         }
1275:Veno-Echo.cpp **** 
1276:Veno-Echo.cpp ****         float widthTarget{};
1277:Veno-Echo.cpp **** 
1278:Veno-Echo.cpp ****         if(width_pickup)
1279:Veno-Echo.cpp ****         {
1280:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,0.5f),0.0f,0.5f,LINEAR);
1281:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1282:Veno-Echo.cpp ****         }
1283:Veno-Echo.cpp **** 
1284:Veno-Echo.cpp ****         else
1285:Veno-Echo.cpp ****         {        
1286:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,0.5f),0.0f,0.5f,LINEAR);
1287:Veno-Echo.cpp ****         }
1288:Veno-Echo.cpp ****             
1289:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1290:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1291:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 61


1292:Veno-Echo.cpp **** 
1293:Veno-Echo.cpp ****     else    //alternate controls
1294:Veno-Echo.cpp ****     {
1295:Veno-Echo.cpp ****         static float ModDepth_new{};
1296:Veno-Echo.cpp **** 
1297:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1298:Veno-Echo.cpp ****         {
1299:Veno-Echo.cpp ****             lastShift = shift;
1300:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1301:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1302:Veno-Echo.cpp ****         }
1303:Veno-Echo.cpp **** 
1304:Veno-Echo.cpp ****         else    //not a recent shift change
1305:Veno-Echo.cpp ****         {
1306:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1307:Veno-Echo.cpp ****             {
1308:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1309:Veno-Echo.cpp ****                 {
1310:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1311:Veno-Echo.cpp ****                 }
1312:Veno-Echo.cpp ****             }
1313:Veno-Echo.cpp ****         }
1314:Veno-Echo.cpp **** 
1315:Veno-Echo.cpp ****         if(ModDepth_pickup)
1316:Veno-Echo.cpp ****         {
1317:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1318:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1319:Veno-Echo.cpp ****         }
1320:Veno-Echo.cpp ****     }
1321:Veno-Echo.cpp **** }
1322:Veno-Echo.cpp **** 
1323:Veno-Echo.cpp **** void Update_crossfeedback()
1324:Veno-Echo.cpp **** {
1325:Veno-Echo.cpp ****     static bool lastShift{};
1326:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1327:Veno-Echo.cpp ****     static bool modRate_pickup{};
1328:Veno-Echo.cpp **** 
1329:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1330:Veno-Echo.cpp **** 
1331:Veno-Echo.cpp ****     //get pot values:
1332:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetFloat(6)};
1333:Veno-Echo.cpp **** 
1334:Veno-Echo.cpp ****     if (!shift) //default controls
1335:Veno-Echo.cpp ****     {   
1336:Veno-Echo.cpp ****         static float crossfeedback_new{};
1337:Veno-Echo.cpp ****         //update pickup
1338:Veno-Echo.cpp ****         if (shift != lastShift)
1339:Veno-Echo.cpp ****         {
1340:Veno-Echo.cpp ****             lastShift = shift;
1341:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1342:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1343:Veno-Echo.cpp ****         }
1344:Veno-Echo.cpp **** 
1345:Veno-Echo.cpp ****         else
1346:Veno-Echo.cpp ****         {
1347:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1348:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 62


1349:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1350:Veno-Echo.cpp ****                 {
1351:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1352:Veno-Echo.cpp ****                 }
1353:Veno-Echo.cpp ****             }
1354:Veno-Echo.cpp ****         }
1355:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1356:Veno-Echo.cpp **** 
1357:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1358:Veno-Echo.cpp ****         {
1359:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1360:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1361:Veno-Echo.cpp ****         }
1362:Veno-Echo.cpp **** 
1363:Veno-Echo.cpp ****         else
1364:Veno-Echo.cpp ****         {
1365:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1366:Veno-Echo.cpp ****         }
1367:Veno-Echo.cpp **** 
1368:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1369:Veno-Echo.cpp ****     }
1370:Veno-Echo.cpp ****     else    //alternate controls
1371:Veno-Echo.cpp ****     {
1372:Veno-Echo.cpp ****         static float modRate_new{};
1373:Veno-Echo.cpp **** 
1374:Veno-Echo.cpp ****         if (shift != lastShift)
1375:Veno-Echo.cpp ****         {
1376:Veno-Echo.cpp ****             lastShift = shift;
1377:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1378:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1379:Veno-Echo.cpp ****         }
1380:Veno-Echo.cpp **** 
1381:Veno-Echo.cpp ****         else
1382:Veno-Echo.cpp ****         {
1383:Veno-Echo.cpp ****             if(!modRate_pickup)
1384:Veno-Echo.cpp ****             {
1385:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1386:Veno-Echo.cpp ****                 {
1387:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1388:Veno-Echo.cpp ****                 }
1389:Veno-Echo.cpp ****             }
1390:Veno-Echo.cpp ****         }
1391:Veno-Echo.cpp **** 
1392:Veno-Echo.cpp ****         if(modRate_pickup)
1393:Veno-Echo.cpp ****         {
1394:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1395:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1396:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1397:Veno-Echo.cpp ****         }
1398:Veno-Echo.cpp ****     }
1399:Veno-Echo.cpp **** }
1400:Veno-Echo.cpp **** 
1401:Veno-Echo.cpp **** void Update_filterXfade()
1402:Veno-Echo.cpp **** {
1403:Veno-Echo.cpp ****     static bool lastShift{};
1404:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1405:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 63


1406:Veno-Echo.cpp **** 
1407:Veno-Echo.cpp ****     static float filterXfade_last{};
1408:Veno-Echo.cpp **** 
1409:Veno-Echo.cpp ****     //get pot values:
1410:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetFloat(6)};
1411:Veno-Echo.cpp **** 
1412:Veno-Echo.cpp ****     if (!shift) //default controls
1413:Veno-Echo.cpp ****     {   
1414:Veno-Echo.cpp ****         static float filterXfade_new{};
1415:Veno-Echo.cpp ****         //update pickup
1416:Veno-Echo.cpp ****         if (shift != lastShift)
1417:Veno-Echo.cpp ****         {
1418:Veno-Echo.cpp ****             lastShift = shift;
1419:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1420:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1421:Veno-Echo.cpp ****         }
1422:Veno-Echo.cpp **** 
1423:Veno-Echo.cpp ****         else
1424:Veno-Echo.cpp ****         {
1425:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1426:Veno-Echo.cpp ****             {
1427:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1428:Veno-Echo.cpp ****                 {
1429:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1430:Veno-Echo.cpp ****                 }
1431:Veno-Echo.cpp ****             }
1432:Veno-Echo.cpp ****         }
1433:Veno-Echo.cpp **** 
1434:Veno-Echo.cpp ****         float filterXfadeTarget{};
1435:Veno-Echo.cpp **** 
1436:Veno-Echo.cpp ****         if(filterXfade_pickup)
1437:Veno-Echo.cpp ****         {
1438:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1439:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1440:Veno-Echo.cpp ****         }
1441:Veno-Echo.cpp **** 
1442:Veno-Echo.cpp ****         else
1443:Veno-Echo.cpp ****         {
1444:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1445:Veno-Echo.cpp ****         }
1446:Veno-Echo.cpp **** 
1447:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1448:Veno-Echo.cpp ****     }
1449:Veno-Echo.cpp ****     else    //alternate controls
1450:Veno-Echo.cpp ****     {
1451:Veno-Echo.cpp **** 
1452:Veno-Echo.cpp ****         static float PostFilters_new{};
1453:Veno-Echo.cpp **** 
1454:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1455:Veno-Echo.cpp ****         {
1456:Veno-Echo.cpp ****             lastShift = shift;
1457:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1458:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1459:Veno-Echo.cpp ****         }
1460:Veno-Echo.cpp **** 
1461:Veno-Echo.cpp ****         else    //not a recent shift change
1462:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 64


1463:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1464:Veno-Echo.cpp ****             {
1465:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1466:Veno-Echo.cpp ****                 {
1467:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1468:Veno-Echo.cpp ****                 }
1469:Veno-Echo.cpp ****             }
1470:Veno-Echo.cpp ****         }
1471:Veno-Echo.cpp ****         
1472:Veno-Echo.cpp ****         if(PostFilters_pickup)
1473:Veno-Echo.cpp ****         {
1474:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1475:Veno-Echo.cpp ****             {
1476:Veno-Echo.cpp ****                 PostFilters = false;
1477:Veno-Echo.cpp ****             }
1478:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1479:Veno-Echo.cpp ****             {
1480:Veno-Echo.cpp ****                 PostFilters = true;
1481:Veno-Echo.cpp ****             }
1482:Veno-Echo.cpp ****             else
1483:Veno-Echo.cpp ****             {
1484:Veno-Echo.cpp ****               //do nothing
1485:Veno-Echo.cpp ****             }
1486:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1487:Veno-Echo.cpp ****         }  
1488:Veno-Echo.cpp ****     }
1489:Veno-Echo.cpp **** }
1490:Veno-Echo.cpp **** 
1491:Veno-Echo.cpp **** void GetModCV()
1492:Veno-Echo.cpp **** {
1493:Veno-Echo.cpp ****     //get modulation CV input
1494:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(7),-1.0f * maxModAmp,maxModAmp,LINEAR);
1495:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1496:Veno-Echo.cpp **** }
1497:Veno-Echo.cpp **** 
1498:Veno-Echo.cpp **** void Update_Mod()
1499:Veno-Echo.cpp **** {    
1500:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1501:Veno-Echo.cpp ****     static float modulation_CV{};
1502:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1503:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1504:Veno-Echo.cpp ****     //calculate InternalMod
1505:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1506:Veno-Echo.cpp ****     //apply modulation to delay lines
1507:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1508:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1509:Veno-Echo.cpp **** }
1510:Veno-Echo.cpp **** 
1511:Veno-Echo.cpp **** void UpdateClock()
1512:Veno-Echo.cpp **** {
1513:Veno-Echo.cpp ****     static int divCounter{};
1514:Veno-Echo.cpp ****     ClockIn.Debounce();
1515:Veno-Echo.cpp **** 
1516:Veno-Echo.cpp ****     //if clock in pulse received
1517:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1518:Veno-Echo.cpp ****     {   
1519:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 65


1520:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1521:Veno-Echo.cpp ****         if(divCounter == 0)
1522:Veno-Echo.cpp ****         {
1523:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1524:Veno-Echo.cpp ****             {
1525:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1526:Veno-Echo.cpp ****                 
1527:Veno-Echo.cpp ****             }
1528:Veno-Echo.cpp ****         }
1529:Veno-Echo.cpp ****     }
1530:Veno-Echo.cpp ****     
1531:Veno-Echo.cpp **** }
1532:Veno-Echo.cpp **** 
1533:Veno-Echo.cpp **** void Update_Buttons()
1534:Veno-Echo.cpp **** {  
1535:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1536:Veno-Echo.cpp ****     static uint32_t resetTime{};
1537:Veno-Echo.cpp ****     static int buttonstate{};
1538:Veno-Echo.cpp **** 
1539:Veno-Echo.cpp ****     Rev_L_sw.update();
1540:Veno-Echo.cpp ****     Rev_R_sw.update();
1541:Veno-Echo.cpp ****     LPF_sw.update();
1542:Veno-Echo.cpp ****     HPF_sw.update();
1543:Veno-Echo.cpp ****     Tap_Button.update();
1544:Veno-Echo.cpp **** 
1545:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1546:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1547:Veno-Echo.cpp ****     //TapButton.Debounce();
1548:Veno-Echo.cpp ****     Sync.Debounce();
1549:Veno-Echo.cpp ****     ClockIn.Debounce();
1550:Veno-Echo.cpp ****     //gate inputs
1551:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1552:Veno-Echo.cpp ****     {
1553:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1554:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1555:Veno-Echo.cpp ****     }
1556:Veno-Echo.cpp **** 
1557:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1558:Veno-Echo.cpp ****     {
1559:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1560:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1561:Veno-Echo.cpp ****     }
1562:Veno-Echo.cpp **** 
1563:Veno-Echo.cpp ****     //buttons
1564:Veno-Echo.cpp **** 
1565:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1566:Veno-Echo.cpp ****     {
1567:Veno-Echo.cpp ****         buttonstate += 1;
1568:Veno-Echo.cpp ****         if (buttonstate == 3)
1569:Veno-Echo.cpp ****         {
1570:Veno-Echo.cpp ****             resetTime = System::GetNow();
1571:Veno-Echo.cpp ****         }
1572:Veno-Echo.cpp ****     }
1573:Veno-Echo.cpp **** 
1574:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1575:Veno-Echo.cpp ****     {
1576:Veno-Echo.cpp ****         buttonstate -= 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 66


1577:Veno-Echo.cpp ****     }
1578:Veno-Echo.cpp **** 
1579:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1580:Veno-Echo.cpp ****     {
1581:Veno-Echo.cpp ****         buttonstate += 1;
1582:Veno-Echo.cpp ****         if (buttonstate == 3)
1583:Veno-Echo.cpp ****         {
1584:Veno-Echo.cpp ****             resetTime = System::GetNow();
1585:Veno-Echo.cpp ****         }
1586:Veno-Echo.cpp ****     }
1587:Veno-Echo.cpp **** 
1588:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1589:Veno-Echo.cpp ****     {
1590:Veno-Echo.cpp ****         buttonstate -= 1;
1591:Veno-Echo.cpp ****     }
1592:Veno-Echo.cpp **** 
1593:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1594:Veno-Echo.cpp ****     {
1595:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1596:Veno-Echo.cpp ****         {
1597:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1598:Veno-Echo.cpp ****         }
1599:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1600:Veno-Echo.cpp ****         
1601:Veno-Echo.cpp **** 
1602:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1603:Veno-Echo.cpp ****         buttonstate += 1;
1604:Veno-Echo.cpp ****         
1605:Veno-Echo.cpp ****         if (buttonstate == 3)
1606:Veno-Echo.cpp ****         {
1607:Veno-Echo.cpp ****             resetTime = System::GetNow();
1608:Veno-Echo.cpp ****         }
1609:Veno-Echo.cpp **** 
1610:Veno-Echo.cpp ****     }
1611:Veno-Echo.cpp **** 
1612:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1613:Veno-Echo.cpp ****     {
1614:Veno-Echo.cpp ****         shift = false;
1615:Veno-Echo.cpp ****         buttonstate -= 1;
1616:Veno-Echo.cpp ****         mute = false;
1617:Veno-Echo.cpp ****     }
1618:Veno-Echo.cpp **** 
1619:Veno-Echo.cpp ****     if (Tap_Button.getState())
1620:Veno-Echo.cpp ****     {
1621:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1622:Veno-Echo.cpp ****         {
1623:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1624:Veno-Echo.cpp ****         } 
1625:Veno-Echo.cpp ****     }
1626:Veno-Echo.cpp **** 
1627:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1628:Veno-Echo.cpp ****     {
1629:Veno-Echo.cpp **** 
1630:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1631:Veno-Echo.cpp ****             {
1632:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1633:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 67


1634:Veno-Echo.cpp ****                 ResetAllLEDs();
1635:Veno-Echo.cpp ****                 //don't let reset or shift update
1636:Veno-Echo.cpp ****                 shift = false;
1637:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1638:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1639:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1640:Veno-Echo.cpp ****             }
1641:Veno-Echo.cpp ****     } 
1642:Veno-Echo.cpp **** 
1643:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1644:Veno-Echo.cpp **** 
1645:Veno-Echo.cpp ****     //update syncMode
1646:Veno-Echo.cpp ****     delayL.SetSync(syncMode);
1647:Veno-Echo.cpp ****     delayR.SetSync(syncMode);
1648:Veno-Echo.cpp **** }
1649:Veno-Echo.cpp **** 
1650:Veno-Echo.cpp **** void Update_BaseTempoLED()
1651:Veno-Echo.cpp **** {
1652:Veno-Echo.cpp ****     tempoLED_BASE.update();
1653:Veno-Echo.cpp **** 
1654:Veno-Echo.cpp ****     static int phaseCounter{};
1655:Veno-Echo.cpp **** 
1656:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1657:Veno-Echo.cpp ****     {
1658:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1659:Veno-Echo.cpp ****     }
1660:Veno-Echo.cpp **** 
1661:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1662:Veno-Echo.cpp ****     //update base phase for both delay lines
1663:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1664:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1665:Veno-Echo.cpp **** }
1666:Veno-Echo.cpp **** 
1667:Veno-Echo.cpp **** 
1668:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1669:Veno-Echo.cpp **** {
1670:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1671:Veno-Echo.cpp ****     {
1672:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1673:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1674:Veno-Echo.cpp ****     }
1675:Veno-Echo.cpp ****     else
1676:Veno-Echo.cpp ****     {
1677:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1678:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1679:Veno-Echo.cpp ****     }
1680:Veno-Echo.cpp **** 
1681:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1682:Veno-Echo.cpp ****     {
1683:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1684:Veno-Echo.cpp ****     }
1685:Veno-Echo.cpp ****     else
1686:Veno-Echo.cpp ****     {
1687:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1688:Veno-Echo.cpp ****     }
1689:Veno-Echo.cpp **** 
1690:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 68


1691:Veno-Echo.cpp ****     {
1692:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1693:Veno-Echo.cpp ****     }
1694:Veno-Echo.cpp ****     else
1695:Veno-Echo.cpp ****     {
1696:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1697:Veno-Echo.cpp ****     }
1698:Veno-Echo.cpp **** 
1699:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1700:Veno-Echo.cpp ****     {
1701:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1702:Veno-Echo.cpp ****     }
1703:Veno-Echo.cpp ****     else
1704:Veno-Echo.cpp ****     {
1705:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1706:Veno-Echo.cpp ****     }
1707:Veno-Echo.cpp **** 
1708:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1709:Veno-Echo.cpp ****     {
1710:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1711:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1712:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1713:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1714:Veno-Echo.cpp ****     }
1715:Veno-Echo.cpp ****     else
1716:Veno-Echo.cpp ****     {
1717:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1718:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1719:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1720:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1721:Veno-Echo.cpp ****     }
1722:Veno-Echo.cpp ****     
1723:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1724:Veno-Echo.cpp ****     {
1725:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1726:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1727:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1728:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1729:Veno-Echo.cpp ****     }
1730:Veno-Echo.cpp ****     else
1731:Veno-Echo.cpp ****     {
1732:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1733:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1734:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1735:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1736:Veno-Echo.cpp **** 
1737:Veno-Echo.cpp ****     }
1738:Veno-Echo.cpp **** 
1739:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1740:Veno-Echo.cpp ****     {
1741:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1742:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1743:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1744:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1745:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1746:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1747:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 69


1748:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1749:Veno-Echo.cpp ****     }
1750:Veno-Echo.cpp **** 
1751:Veno-Echo.cpp ****     else
1752:Veno-Echo.cpp ****     {
1753:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1754:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1755:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1756:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1757:Veno-Echo.cpp ****     }
1758:Veno-Echo.cpp **** 
1759:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1760:Veno-Echo.cpp ****     {
1761:Veno-Echo.cpp ****         PostFilters = false;
1762:Veno-Echo.cpp ****     }
1763:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1764:Veno-Echo.cpp ****     {
1765:Veno-Echo.cpp ****         PostFilters = true;
1766:Veno-Echo.cpp ****     }
1767:Veno-Echo.cpp ****     else
1768:Veno-Echo.cpp ****     {
1769:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1770:Veno-Echo.cpp ****     }
1771:Veno-Echo.cpp **** 
1772:Veno-Echo.cpp **** }
1773:Veno-Echo.cpp **** 
1774:Veno-Echo.cpp **** void TurnOnAllLEDs()
1775:Veno-Echo.cpp **** {
1776:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1777:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1778:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1779:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1780:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1781:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1782:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1783:Veno-Echo.cpp **** }
1784:Veno-Echo.cpp **** 
1785:Veno-Echo.cpp **** void ResetAllLEDs()
1786:Veno-Echo.cpp **** {
1787:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1788:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1789:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1790:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1791:Veno-Echo.cpp ****     {
1792:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1793:Veno-Echo.cpp ****     }
1794:Veno-Echo.cpp ****     else
1795:Veno-Echo.cpp ****     {
1796:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1797:Veno-Echo.cpp ****     }
1798:Veno-Echo.cpp **** 
1799:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1800:Veno-Echo.cpp ****     {
1801:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1802:Veno-Echo.cpp ****     }
1803:Veno-Echo.cpp ****     else
1804:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 70


1805:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1806:Veno-Echo.cpp ****     }
1807:Veno-Echo.cpp ****     
1808:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1809:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1810:Veno-Echo.cpp **** }
1811:Veno-Echo.cpp **** 
1812:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1813:Veno-Echo.cpp **** {
1814:Veno-Echo.cpp ****     float returnval{};
1815:Veno-Echo.cpp ****     if (input > limit)
1816:Veno-Echo.cpp ****         returnval = limit;
1817:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1818:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1819:Veno-Echo.cpp ****     else
1820:Veno-Echo.cpp ****         returnval = input;
1821:Veno-Echo.cpp **** 
1822:Veno-Echo.cpp ****     return returnval;   
1823:Veno-Echo.cpp **** }
1824:Veno-Echo.cpp **** 
1825:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1148              		.loc 20 1825 7 view .LVU241
 1149              	.LBB892:
1826:Veno-Echo.cpp **** {
1827:Veno-Echo.cpp ****     float output{};
 1150              		.loc 20 1827 5 view .LVU242
1828:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1151              		.loc 20 1828 5 view .LVU243
 1152              	.LBE892:
 1153              	.LBE891:
 801:Veno-Echo.cpp ****         }
 1154              		.loc 20 801 36 is_stmt 0 view .LVU244
 1155 0044 654A     		ldr	r2, .L75+28
 1156              	.LBB895:
 1157              	.LBB893:
 1158              		.loc 20 1828 12 view .LVU245
 1159 0046 DFED667A 		vldr.32	s15, .L75+32
 1160 004a 92ED008A 		vldr.32	s16, [r2]
 1161 004e 38EE278A 		vadd.f32	s16, s16, s15
 1162              	.LVL43:
1829:Veno-Echo.cpp **** 
1830:Veno-Echo.cpp ****     if(output < 0.0f)
 1163              		.loc 20 1830 5 is_stmt 1 view .LVU246
 1164 0052 B4EEE78A 		vcmpe.f32	s16, s15
 1165 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1166 005a 00F1AB80 		bmi	.L73
1831:Veno-Echo.cpp ****     {
1832:Veno-Echo.cpp ****         output = 0.0f;
1833:Veno-Echo.cpp ****     }
1834:Veno-Echo.cpp **** 
1835:Veno-Echo.cpp ****     if(output > 1.0f)
 1167              		.loc 20 1835 5 view .LVU247
 1168 005e F7EE007A 		vmov.f32	s15, #1.0e+0
1836:Veno-Echo.cpp ****     {
1837:Veno-Echo.cpp ****         output = 1.0f;
 1169              		.loc 20 1837 16 is_stmt 0 view .LVU248
 1170 0062 B4EE678A 		vcmp.f32	s16, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 71


 1171 0066 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1172 006a 37FE888A 		vselgt.f32	s16, s15, s16
 1173              	.LVL44:
 1174              	.L50:
 1175              		.loc 20 1837 16 view .LVU249
 1176              	.LBE893:
 1177              	.LBE895:
 804:Veno-Echo.cpp ****         {
 1178              		.loc 20 804 9 is_stmt 1 view .LVU250
 1179 006e D3B9     		cbnz	r3, .L42
 806:Veno-Echo.cpp ****             {
 1180              		.loc 20 806 13 view .LVU251
 806:Veno-Echo.cpp ****             {
 1181              		.loc 20 806 35 is_stmt 0 view .LVU252
 1182 0070 5C48     		ldr	r0, .L75+36
 1183 0072 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 1184              	.LVL45:
 806:Veno-Echo.cpp ****             {
 1185              		.loc 20 806 35 view .LVU253
 1186 0076 F0EE400A 		vmov.f32	s1, s0
 1187 007a B7EE000A 		vmov.f32	s0, #1.0e+0
 1188 007e 5A4B     		ldr	r3, .L75+40
 1189 0080 5A48     		ldr	r0, .L75+44
 1190 0082 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1191 0084 30EE480A 		vsub.f32	s0, s0, s16
 1192              	.LBE905:
 1193              	.LBE954:
 845:Veno-Echo.cpp **** 
 1194              		.loc 20 845 1 view .LVU254
 1195 0088 BDEC028B 		vldm	sp!, {d8}
 1196              		.cfi_remember_state
 1197              		.cfi_restore 80
 1198              		.cfi_restore 81
 1199              		.cfi_def_cfa_offset 8
 1200              	.LVL46:
 845:Veno-Echo.cpp **** 
 1201              		.loc 20 845 1 view .LVU255
 1202 008c BDE81040 		pop	{r4, lr}
 1203              		.cfi_restore 14
 1204              		.cfi_restore 4
 1205              		.cfi_def_cfa_offset 0
 1206              	.LBB955:
 1207              	.LBB906:
 806:Veno-Echo.cpp ****             {
 1208              		.loc 20 806 35 view .LVU256
 1209 0090 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEffb
 1210              	.LVL47:
 1211              	.L43:
 1212              		.cfi_restore_state
 806:Veno-Echo.cpp ****             {
 1213              		.loc 20 806 35 view .LVU257
 1214              	.LBE906:
 1215              	.LBB907:
 815:Veno-Echo.cpp **** 
 1216              		.loc 20 815 9 is_stmt 1 view .LVU258
 817:Veno-Echo.cpp ****         {
 1217              		.loc 20 817 9 view .LVU259
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 72


 1218 0094 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1219 0096 8BBB     		cbnz	r3, .L53
 819:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1220              		.loc 20 819 13 view .LVU260
 819:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1221              		.loc 20 819 23 is_stmt 0 view .LVU261
 1222 0098 0124     		movs	r4, #1
 820:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1223              		.loc 20 820 34 view .LVU262
 1224 009a 5548     		ldr	r0, .L75+48
 821:Veno-Echo.cpp ****         }
 1225              		.loc 20 821 31 view .LVU263
 1226 009c 5549     		ldr	r1, .L75+52
 819:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1227              		.loc 20 819 23 view .LVU264
 1228 009e 1470     		strb	r4, [r2]
 820:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1229              		.loc 20 820 13 is_stmt 1 view .LVU265
 820:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1230              		.loc 20 820 34 is_stmt 0 view .LVU266
 1231 00a0 0370     		strb	r3, [r0]
 821:Veno-Echo.cpp ****         }
 1232              		.loc 20 821 13 is_stmt 1 view .LVU267
 821:Veno-Echo.cpp ****         }
 1233              		.loc 20 821 31 is_stmt 0 view .LVU268
 1234 00a2 81ED000A 		vstr.32	s0, [r1]
 1235              	.L42:
 821:Veno-Echo.cpp ****         }
 1236              		.loc 20 821 31 view .LVU269
 1237              	.LBE907:
 1238              	.LBE955:
 845:Veno-Echo.cpp **** 
 1239              		.loc 20 845 1 view .LVU270
 1240 00a6 BDEC028B 		vldm	sp!, {d8}
 1241              		.cfi_remember_state
 1242              		.cfi_restore 80
 1243              		.cfi_restore 81
 1244              		.cfi_def_cfa_offset 8
 1245 00aa 10BD     		pop	{r4, pc}
 1246              	.L44:
 1247              		.cfi_restore_state
 1248              	.LBB956:
 1249              	.LBB948:
 782:Veno-Echo.cpp ****             {
 1250              		.loc 20 782 13 is_stmt 1 view .LVU271
 782:Veno-Echo.cpp ****             {
 1251              		.loc 20 782 16 is_stmt 0 view .LVU272
 1252 00ac 494A     		ldr	r2, .L75+20
 782:Veno-Echo.cpp ****             {
 1253              		.loc 20 782 13 view .LVU273
 1254 00ae 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1255 00b0 79B9     		cbnz	r1, .L46
 784:Veno-Echo.cpp ****                 {
 1256              		.loc 20 784 17 is_stmt 1 view .LVU274
 1257              	.LVL48:
 1258              	.LBB896:
 1259              	.LBI896:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 73


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1260              		.loc 21 75 3 view .LVU275
 1261              	.LBB897:
 1262              		.loc 21 76 5 view .LVU276
 1263              		.loc 21 76 5 is_stmt 0 view .LVU277
 1264              	.LBE897:
 1265              	.LBE896:
 784:Veno-Echo.cpp ****                 {
 1266              		.loc 20 784 23 view .LVU278
 1267 00b2 4949     		ldr	r1, .L75+24
 784:Veno-Echo.cpp ****                 {
 1268              		.loc 20 784 17 view .LVU279
 1269 00b4 9FED507A 		vldr.32	s14, .L75+56
 784:Veno-Echo.cpp ****                 {
 1270              		.loc 20 784 23 view .LVU280
 1271 00b8 D1ED007A 		vldr.32	s15, [r1]
 1272 00bc 70EE677A 		vsub.f32	s15, s0, s15
 1273              	.LBB899:
 1274              	.LBB898:
 1275              		.loc 21 76 31 view .LVU281
 1276 00c0 F0EEE77A 		vabs.f32	s15, s15
 1277              	.LBE898:
 1278              	.LBE899:
 784:Veno-Echo.cpp ****                 {
 1279              		.loc 20 784 17 view .LVU282
 1280 00c4 F4EEC77A 		vcmpe.f32	s15, s14
 1281 00c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1282 00cc BADD     		ble	.L45
 786:Veno-Echo.cpp ****                 }
 1283              		.loc 20 786 21 is_stmt 1 view .LVU283
 786:Veno-Echo.cpp ****                 }
 1284              		.loc 20 786 39 is_stmt 0 view .LVU284
 1285 00ce 0121     		movs	r1, #1
 1286 00d0 1170     		strb	r1, [r2]
 1287              	.L46:
 791:Veno-Echo.cpp **** 
 1288              		.loc 20 791 9 is_stmt 1 view .LVU285
 1289              	.LVL49:
 793:Veno-Echo.cpp ****         {
 1290              		.loc 20 793 9 view .LVU286
 795:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1291              		.loc 20 795 13 view .LVU287
 1292              	.LBB900:
 1293              	.LBI900:
1825:Veno-Echo.cpp **** {
 1294              		.loc 20 1825 7 view .LVU288
 1295              	.LBB901:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1296              		.loc 20 1827 5 view .LVU289
1828:Veno-Echo.cpp **** 
 1297              		.loc 20 1828 5 view .LVU290
1828:Veno-Echo.cpp **** 
 1298              		.loc 20 1828 12 is_stmt 0 view .LVU291
 1299 00d2 DFED437A 		vldr.32	s15, .L75+32
 1300 00d6 30EE278A 		vadd.f32	s16, s0, s15
 1301              	.LVL50:
1830:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 74


 1302              		.loc 20 1830 5 is_stmt 1 view .LVU292
 1303 00da B4EEE78A 		vcmpe.f32	s16, s15
 1304 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1305 00e2 6AD4     		bmi	.L74
1835:Veno-Echo.cpp ****     {
 1306              		.loc 20 1835 5 view .LVU293
 1307 00e4 F7EE007A 		vmov.f32	s15, #1.0e+0
 1308              		.loc 20 1837 16 is_stmt 0 view .LVU294
 1309 00e8 B4EE678A 		vcmp.f32	s16, s15
 1310 00ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1311 00f0 37FE888A 		vselgt.f32	s16, s15, s16
 1312              	.LVL51:
 1313              	.L48:
1838:Veno-Echo.cpp ****     }
1839:Veno-Echo.cpp **** 
1840:Veno-Echo.cpp ****     return output;
 1314              		.loc 20 1840 5 is_stmt 1 view .LVU295
 1315              		.loc 20 1840 5 is_stmt 0 view .LVU296
 1316              	.LBE901:
 1317              	.LBE900:
 796:Veno-Echo.cpp ****         }
 1318              		.loc 20 796 13 is_stmt 1 view .LVU297
 796:Veno-Echo.cpp ****         }
 1319              		.loc 20 796 29 is_stmt 0 view .LVU298
 1320 00f4 394A     		ldr	r2, .L75+28
 1321 00f6 82ED000A 		vstr.32	s0, [r2]
 1322 00fa B8E7     		b	.L50
 1323              	.LVL52:
 1324              	.L53:
 796:Veno-Echo.cpp ****         }
 1325              		.loc 20 796 29 view .LVU299
 1326              	.LBE948:
 1327              	.LBB949:
 826:Veno-Echo.cpp ****             {
 1328              		.loc 20 826 13 is_stmt 1 view .LVU300
 826:Veno-Echo.cpp ****             {
 1329              		.loc 20 826 16 is_stmt 0 view .LVU301
 1330 00fc 3C4B     		ldr	r3, .L75+48
 826:Veno-Echo.cpp ****             {
 1331              		.loc 20 826 13 view .LVU302
 1332 00fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1333 0100 7AB9     		cbnz	r2, .L54
 828:Veno-Echo.cpp ****                 {
 1334              		.loc 20 828 17 is_stmt 1 view .LVU303
 1335              	.LVL53:
 1336              	.LBB908:
 1337              	.LBI908:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1338              		.loc 21 75 3 view .LVU304
 1339              	.LBB909:
 1340              		.loc 21 76 5 view .LVU305
 1341              		.loc 21 76 5 is_stmt 0 view .LVU306
 1342              	.LBE909:
 1343              	.LBE908:
 828:Veno-Echo.cpp ****                 {
 1344              		.loc 20 828 23 view .LVU307
 1345 0102 3C4A     		ldr	r2, .L75+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 75


 828:Veno-Echo.cpp ****                 {
 1346              		.loc 20 828 17 view .LVU308
 1347 0104 9FED3C7A 		vldr.32	s14, .L75+56
 828:Veno-Echo.cpp ****                 {
 1348              		.loc 20 828 23 view .LVU309
 1349 0108 D2ED007A 		vldr.32	s15, [r2]
 1350 010c 70EE677A 		vsub.f32	s15, s0, s15
 1351              	.LBB911:
 1352              	.LBB910:
 1353              		.loc 21 76 31 view .LVU310
 1354 0110 F0EEE77A 		vabs.f32	s15, s15
 1355              	.LBE910:
 1356              	.LBE911:
 828:Veno-Echo.cpp ****                 {
 1357              		.loc 20 828 17 view .LVU311
 1358 0114 F4EEC77A 		vcmpe.f32	s15, s14
 1359 0118 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1360 011c C3DD     		ble	.L42
 830:Veno-Echo.cpp ****                 }
 1361              		.loc 20 830 21 is_stmt 1 view .LVU312
 830:Veno-Echo.cpp ****                 }
 1362              		.loc 20 830 42 is_stmt 0 view .LVU313
 1363 011e 0122     		movs	r2, #1
 1364 0120 1A70     		strb	r2, [r3]
 1365              	.L54:
 835:Veno-Echo.cpp ****         {
 1366              		.loc 20 835 9 is_stmt 1 view .LVU314
 1367              	.LBB912:
 1368              	.LBB913:
 837:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1369              		.loc 20 837 13 view .LVU315
 837:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1370              		.loc 20 837 38 is_stmt 0 view .LVU316
 1371 0122 0120     		movs	r0, #1
 1372 0124 9FED351A 		vldr.32	s2, .L75+60
 1373 0128 DFED350A 		vldr.32	s1, .L75+64
 1374 012c FFF7FEFF 		bl	_Z5scalefff9CurveType
 1375              	.LVL54:
 1376              	.LBB914:
 1377              	.LBB915:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1378              		.loc 20 70 28 view .LVU317
 1379 0130 344B     		ldr	r3, .L75+68
 1380              	.LVL55:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1381              		.loc 20 70 28 view .LVU318
 1382              	.LBE915:
 1383              	.LBE914:
 838:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1384              		.loc 20 838 13 is_stmt 1 view .LVU319
 1385              	.LBB929:
 1386              	.LBI914:
  68:Veno-Echo.cpp ****     {
 1387              		.loc 20 68 10 view .LVU320
 1388              	.LBB927:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1389              		.loc 20 70 9 view .LVU321
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 76


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1390              		.loc 20 70 53 is_stmt 0 view .LVU322
 1391 0132 DFED316A 		vldr.32	s13, .L75+56
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1392              		.loc 20 70 28 view .LVU323
 1393 0136 D3ED017A 		vldr.32	s15, [r3, #4]
 1394              	.LVL56:
 1395              	.LBB916:
 1396              	.LBI916:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1397              		.loc 21 75 3 is_stmt 1 view .LVU324
 1398              	.LBB917:
 1399              		.loc 21 76 5 view .LVU325
 1400              		.loc 21 76 5 is_stmt 0 view .LVU326
 1401              	.LBE917:
 1402              	.LBE916:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1403              		.loc 20 70 15 view .LVU327
 1404 013a 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 53 view .LVU328
 1406 013e 67EEA67A 		vmul.f32	s15, s15, s13
 1407              	.LBB919:
 1408              	.LBB918:
 1409              		.loc 21 76 31 view .LVU329
 1410 0142 B0EEC77A 		vabs.f32	s14, s14
 1411              	.LBE918:
 1412              	.LBE919:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1413              		.loc 20 70 9 view .LVU330
 1414 0146 B4EEE77A 		vcmpe.f32	s14, s15
 1415 014a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1416 014e 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1417              		.loc 20 74 29 view .LVU331
 1418 0150 FCEEC07A 		vcvt.u32.f32	s15, s0
 1419              	.LBB920:
 1420              	.LBB921:
 1421              		.loc 19 72 9 view .LVU332
 1422 0154 2C4C     		ldr	r4, .L75+72
 1423              	.LBE921:
 1424              	.LBE920:
 1425              	.LBE927:
 1426              	.LBE929:
 838:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1427              		.loc 20 838 37 view .LVU333
 1428 0156 1968     		ldr	r1, [r3]
 1429              	.LBB930:
 1430              	.LBB928:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1431              		.loc 20 73 13 is_stmt 1 view .LVU334
 1432              	.LBB924:
 1433              	.LBB922:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1434              		.loc 19 71 9 is_stmt 0 view .LVU335
 1435 0158 0020     		movs	r0, #0
 1436              	.LBE922:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 77


 1437              	.LBE924:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1438              		.loc 20 73 27 view .LVU336
 1439 015a 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1440              		.loc 20 74 13 is_stmt 1 view .LVU337
 1441              	.LVL57:
 1442              	.LBB925:
 1443              	.LBI920:
  69:delayline_reverse.h ****     {
 1444              		.loc 19 69 17 view .LVU338
  69:delayline_reverse.h ****     {
 1445              		.loc 19 69 17 is_stmt 0 view .LVU339
 1446              	.LBE925:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1447              		.loc 20 74 29 view .LVU340
 1448 015e 17EE902A 		vmov	r2, s15	@ int
 1449              	.LBB926:
 1450              	.LBB923:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1451              		.loc 19 71 9 view .LVU341
 1452 0162 0860     		str	r0, [r1]	@ float
 1453              		.loc 19 72 9 view .LVU342
 1454 0164 A242     		cmp	r2, r4
 1455 0166 28BF     		it	cs
 1456 0168 2246     		movcs	r2, r4
 1457 016a 0A61     		str	r2, [r1, #16]
 1458              	.LVL58:
 1459              	.L62:
 1460              		.loc 19 72 9 view .LVU343
 1461              	.LBE923:
 1462              	.LBE926:
 1463              	.LBE928:
 1464              	.LBE930:
 839:Veno-Echo.cpp ****             //save setting:
 1465              		.loc 20 839 13 is_stmt 1 view .LVU344
 1466              	.LBB931:
 1467              	.LBI931:
  68:Veno-Echo.cpp ****     {
 1468              		.loc 20 68 10 view .LVU345
 1469              	.LBB932:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1470              		.loc 20 70 9 view .LVU346
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1471              		.loc 20 70 28 is_stmt 0 view .LVU347
 1472 016c 274B     		ldr	r3, .L75+76
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1473              		.loc 20 70 53 view .LVU348
 1474 016e DFED226A 		vldr.32	s13, .L75+56
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1475              		.loc 20 70 28 view .LVU349
 1476 0172 D3ED017A 		vldr.32	s15, [r3, #4]
 1477              	.LVL59:
 1478              	.LBB933:
 1479              	.LBI933:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1480              		.loc 21 75 3 is_stmt 1 view .LVU350
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 78


 1481              	.LBB934:
 1482              		.loc 21 76 5 view .LVU351
 1483              		.loc 21 76 5 is_stmt 0 view .LVU352
 1484              	.LBE934:
 1485              	.LBE933:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 15 view .LVU353
 1487 0176 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1488              		.loc 20 70 53 view .LVU354
 1489 017a 67EEA67A 		vmul.f32	s15, s15, s13
 1490              	.LBB936:
 1491              	.LBB935:
 1492              		.loc 21 76 31 view .LVU355
 1493 017e B0EEC77A 		vabs.f32	s14, s14
 1494              	.LBE935:
 1495              	.LBE936:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1496              		.loc 20 70 9 view .LVU356
 1497 0182 B4EEE77A 		vcmpe.f32	s14, s15
 1498 0186 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1499 018a 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1500              		.loc 20 74 29 view .LVU357
 1501 018c FCEEC07A 		vcvt.u32.f32	s15, s0
 1502              	.LBB937:
 1503              	.LBB938:
 1504              		.loc 19 72 9 view .LVU358
 1505 0190 1D4C     		ldr	r4, .L75+72
 1506              	.LBE938:
 1507              	.LBE937:
 1508              	.LBE932:
 1509              	.LBE931:
 839:Veno-Echo.cpp ****             //save setting:
 1510              		.loc 20 839 37 view .LVU359
 1511 0192 1968     		ldr	r1, [r3]
 1512              	.LBB945:
 1513              	.LBB944:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1514              		.loc 20 73 13 is_stmt 1 view .LVU360
 1515              	.LBB941:
 1516              	.LBB939:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1517              		.loc 19 71 9 is_stmt 0 view .LVU361
 1518 0194 0020     		movs	r0, #0
 1519              	.LBE939:
 1520              	.LBE941:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1521              		.loc 20 73 27 view .LVU362
 1522 0196 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1523              		.loc 20 74 13 is_stmt 1 view .LVU363
 1524              	.LVL60:
 1525              	.LBB942:
 1526              	.LBI937:
  69:delayline_reverse.h ****     {
 1527              		.loc 19 69 17 view .LVU364
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 79


  69:delayline_reverse.h ****     {
 1528              		.loc 19 69 17 is_stmt 0 view .LVU365
 1529              	.LBE942:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1530              		.loc 20 74 29 view .LVU366
 1531 019a 17EE902A 		vmov	r2, s15	@ int
 1532              	.LBB943:
 1533              	.LBB940:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1534              		.loc 19 71 9 view .LVU367
 1535 019e 0860     		str	r0, [r1]	@ float
 1536              		.loc 19 72 9 view .LVU368
 1537 01a0 A242     		cmp	r2, r4
 1538 01a2 28BF     		it	cs
 1539 01a4 2246     		movcs	r2, r4
 1540 01a6 0A61     		str	r2, [r1, #16]
 1541              	.LVL61:
 1542              	.L56:
 1543              		.loc 19 72 9 view .LVU369
 1544              	.LBE940:
 1545              	.LBE943:
 1546              	.LBE944:
 1547              	.LBE945:
 841:Veno-Echo.cpp ****         }
 1548              		.loc 20 841 13 is_stmt 1 view .LVU370
 841:Veno-Echo.cpp ****         }
 1549              		.loc 20 841 35 is_stmt 0 view .LVU371
 1550 01a8 194B     		ldr	r3, .L75+80
 1551              	.LBE913:
 1552              	.LBE912:
 1553              	.LBE949:
 1554              	.LBE956:
 845:Veno-Echo.cpp **** 
 1555              		.loc 20 845 1 view .LVU372
 1556 01aa BDEC028B 		vldm	sp!, {d8}
 1557              		.cfi_remember_state
 1558              		.cfi_restore 80
 1559              		.cfi_restore 81
 1560              		.cfi_def_cfa_offset 8
 1561              	.LBB957:
 1562              	.LBB950:
 1563              	.LBB947:
 1564              	.LBB946:
 841:Veno-Echo.cpp ****         }
 1565              		.loc 20 841 35 view .LVU373
 1566 01ae 83ED000A 		vstr.32	s0, [r3]
 1567              	.LBE946:
 1568              	.LBE947:
 1569              	.LBE950:
 1570              	.LBE957:
 845:Veno-Echo.cpp **** 
 1571              		.loc 20 845 1 view .LVU374
 1572 01b2 10BD     		pop	{r4, pc}
 1573              	.LVL62:
 1574              	.L73:
 1575              		.cfi_restore_state
 1576              	.LBB958:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 80


 1577              	.LBB951:
 1578              	.LBB903:
 1579              	.LBB894:
1832:Veno-Echo.cpp ****     }
 1580              		.loc 20 1832 16 view .LVU375
 1581 01b4 B0EE678A 		vmov.f32	s16, s15
 1582              	.LVL63:
1832:Veno-Echo.cpp ****     }
 1583              		.loc 20 1832 16 view .LVU376
 1584 01b8 59E7     		b	.L50
 1585              	.LVL64:
 1586              	.L74:
1832:Veno-Echo.cpp ****     }
 1587              		.loc 20 1832 16 view .LVU377
 1588              	.LBE894:
 1589              	.LBE903:
 1590              	.LBB904:
 1591              	.LBB902:
 1592 01ba B0EE678A 		vmov.f32	s16, s15
 1593              	.LVL65:
1832:Veno-Echo.cpp ****     }
 1594              		.loc 20 1832 16 view .LVU378
 1595 01be 99E7     		b	.L48
 1596              	.L76:
 1597              		.align	2
 1598              	.L75:
 1599 01c0 18000000 		.word	.LANCHOR4+24
 1600 01c4 00000000 		.word	.LANCHOR6
 1601 01c8 ABAAAA2A 		.word	715827883
 1602 01cc 00000000 		.word	.LANCHOR7
 1603 01d0 00000000 		.word	.LANCHOR8
 1604 01d4 00000000 		.word	.LANCHOR9
 1605 01d8 00000000 		.word	.LANCHOR10
 1606 01dc 00000000 		.word	.LANCHOR11
 1607 01e0 00000000 		.word	0
 1608 01e4 00000000 		.word	.LANCHOR12
 1609 01e8 00000000 		.word	.LANCHOR13
 1610 01ec 00000000 		.word	.LANCHOR0
 1611 01f0 00000000 		.word	.LANCHOR14
 1612 01f4 00000000 		.word	.LANCHOR15
 1613 01f8 0AD7A33B 		.word	1000593162
 1614 01fc 0050C346 		.word	1187205120
 1615 0200 00606A48 		.word	1214930944
 1616 0204 00000000 		.word	.LANCHOR2
 1617 0208 BF270900 		.word	599999
 1618 020c 00000000 		.word	.LANCHOR3
 1619 0210 00000000 		.word	.LANCHOR16
 1620              	.LBE902:
 1621              	.LBE904:
 1622              	.LBE951:
 1623              	.LBE958:
 1624              		.cfi_endproc
 1625              	.LFE4313:
 1627              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1628              		.align	1
 1629              		.p2align 2,,3
 1630              		.global	_Z20Update_DelayTimeR_CVv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 81


 1631              		.syntax unified
 1632              		.thumb
 1633              		.thumb_func
 1634              		.fpu fpv5-d16
 1636              	_Z20Update_DelayTimeR_CVv:
 1637              	.LFB4314:
 848:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1638              		.loc 20 848 1 is_stmt 1 view -0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 0
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 849:Veno-Echo.cpp **** }
 1642              		.loc 20 849 5 view .LVU380
 848:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1643              		.loc 20 848 1 is_stmt 0 view .LVU381
 1644 0000 08B5     		push	{r3, lr}
 1645              		.cfi_def_cfa_offset 8
 1646              		.cfi_offset 3, -8
 1647              		.cfi_offset 14, -4
 849:Veno-Echo.cpp **** }
 1648              		.loc 20 849 36 view .LVU382
 1649 0002 0121     		movs	r1, #1
 1650 0004 0348     		ldr	r0, .L79
 1651 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1652              	.LVL66:
 849:Veno-Echo.cpp **** }
 1653              		.loc 20 849 19 view .LVU383
 1654 000a 034B     		ldr	r3, .L79+4
 1655 000c 83ED000A 		vstr.32	s0, [r3]
 850:Veno-Echo.cpp **** 
 1656              		.loc 20 850 1 view .LVU384
 1657 0010 08BD     		pop	{r3, pc}
 1658              	.L80:
 1659 0012 00BF     		.align	2
 1660              	.L79:
 1661 0014 18000000 		.word	.LANCHOR4+24
 1662 0018 00000000 		.word	.LANCHOR17
 1663              		.cfi_endproc
 1664              	.LFE4314:
 1666              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1667              		.align	1
 1668              		.p2align 2,,3
 1669              		.global	_Z17Update_DelayTimeRv
 1670              		.syntax unified
 1671              		.thumb
 1672              		.thumb_func
 1673              		.fpu fpv5-d16
 1675              	_Z17Update_DelayTimeRv:
 1676              	.LFB4315:
 853:Veno-Echo.cpp ****     static bool lastShift{};
 1677              		.loc 20 853 1 is_stmt 1 view -0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 0
 1680              		@ frame_needed = 0, uses_anonymous_args = 0
 854:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1681              		.loc 20 854 5 view .LVU386
 855:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 82


 1682              		.loc 20 855 5 view .LVU387
 856:Veno-Echo.cpp ****     
 1683              		.loc 20 856 5 view .LVU388
 858:Veno-Echo.cpp **** 
 1684              		.loc 20 858 5 view .LVU389
 861:Veno-Echo.cpp **** 
 1685              		.loc 20 861 5 view .LVU390
 853:Veno-Echo.cpp ****     static bool lastShift{};
 1686              		.loc 20 853 1 is_stmt 0 view .LVU391
 1687 0000 10B5     		push	{r4, lr}
 1688              		.cfi_def_cfa_offset 8
 1689              		.cfi_offset 4, -8
 1690              		.cfi_offset 14, -4
 861:Veno-Echo.cpp **** 
 1691              		.loc 20 861 41 view .LVU392
 1692 0002 0121     		movs	r1, #1
 1693 0004 5B48     		ldr	r0, .L111
 853:Veno-Echo.cpp ****     static bool lastShift{};
 1694              		.loc 20 853 1 view .LVU393
 1695 0006 2DED028B 		vpush.64	{d8}
 1696              		.cfi_def_cfa_offset 16
 1697              		.cfi_offset 80, -16
 1698              		.cfi_offset 81, -12
 861:Veno-Echo.cpp **** 
 1699              		.loc 20 861 41 view .LVU394
 1700 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1701              	.LVL67:
 866:Veno-Echo.cpp **** 
 1702              		.loc 20 866 26 view .LVU395
 1703 000e 5A48     		ldr	r0, .L111+4
 866:Veno-Echo.cpp **** 
 1704              		.loc 20 866 31 view .LVU396
 1705 0010 5A4B     		ldr	r3, .L111+8
 1706              	.LVL68:
 865:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1707              		.loc 20 865 5 is_stmt 1 view .LVU397
 866:Veno-Echo.cpp **** 
 1708              		.loc 20 866 5 view .LVU398
 866:Veno-Echo.cpp **** 
 1709              		.loc 20 866 26 is_stmt 0 view .LVU399
 1710 0012 0268     		ldr	r2, [r0]
 1711              	.LBB959:
 868:Veno-Echo.cpp ****     {
 1712              		.loc 20 868 9 view .LVU400
 1713 0014 5A49     		ldr	r1, .L111+12
 1714              	.LBE959:
 866:Veno-Echo.cpp **** 
 1715              		.loc 20 866 26 view .LVU401
 1716 0016 0132     		adds	r2, r2, #1
 1717              	.LBB996:
 868:Veno-Echo.cpp ****     {
 1718              		.loc 20 868 5 view .LVU402
 1719 0018 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1720              	.LBE996:
 866:Veno-Echo.cpp **** 
 1721              		.loc 20 866 31 view .LVU403
 1722 001a 83FB0231 		smull	r3, r1, r3, r2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 83


 1723 001e D317     		asrs	r3, r2, #31
 1724 0020 C3EB6113 		rsb	r3, r3, r1, asr #5
 1725 0024 03EB4303 		add	r3, r3, r3, lsl #1
 1726 0028 A2EB8313 		sub	r3, r2, r3, lsl #6
 1727              	.LBB997:
 1728              	.LBB960:
 872:Veno-Echo.cpp ****         {
 1729              		.loc 20 872 19 view .LVU404
 1730 002c 554A     		ldr	r2, .L111+16
 1731              	.LBE960:
 1732              	.LBE997:
 866:Veno-Echo.cpp **** 
 1733              		.loc 20 866 14 view .LVU405
 1734 002e 0360     		str	r3, [r0]
 868:Veno-Echo.cpp ****     {
 1735              		.loc 20 868 5 is_stmt 1 view .LVU406
 1736              	.LBB998:
 1737 0030 7CBB     		cbnz	r4, .L82
 1738              	.LBB975:
 870:Veno-Echo.cpp ****         //udpate pickup
 1739              		.loc 20 870 9 view .LVU407
 872:Veno-Echo.cpp ****         {
 1740              		.loc 20 872 9 view .LVU408
 1741 0032 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1742 0034 0029     		cmp	r1, #0
 1743 0036 38D0     		beq	.L83
 874:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1744              		.loc 20 874 13 view .LVU409
 875:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1745              		.loc 20 875 31 is_stmt 0 view .LVU410
 1746 0038 5348     		ldr	r0, .L111+20
 876:Veno-Echo.cpp ****         } 
 1747              		.loc 20 876 28 view .LVU411
 1748 003a 5449     		ldr	r1, .L111+24
 874:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1749              		.loc 20 874 23 view .LVU412
 1750 003c 1470     		strb	r4, [r2]
 875:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1751              		.loc 20 875 13 is_stmt 1 view .LVU413
 875:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1752              		.loc 20 875 31 is_stmt 0 view .LVU414
 1753 003e 0470     		strb	r4, [r0]
 876:Veno-Echo.cpp ****         } 
 1754              		.loc 20 876 13 is_stmt 1 view .LVU415
 876:Veno-Echo.cpp ****         } 
 1755              		.loc 20 876 28 is_stmt 0 view .LVU416
 1756 0040 81ED000A 		vstr.32	s0, [r1]
 1757              	.L84:
 889:Veno-Echo.cpp **** 
 1758              		.loc 20 889 9 is_stmt 1 view .LVU417
 1759              	.LVL69:
 891:Veno-Echo.cpp ****         {
 1760              		.loc 20 891 9 view .LVU418
 899:Veno-Echo.cpp ****         }
 1761              		.loc 20 899 13 view .LVU419
 1762              	.LBB961:
 1763              	.LBI961:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 84


1825:Veno-Echo.cpp **** {
 1764              		.loc 20 1825 7 view .LVU420
 1765              	.LBB962:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1766              		.loc 20 1827 5 view .LVU421
1828:Veno-Echo.cpp **** 
 1767              		.loc 20 1828 5 view .LVU422
 1768              	.LBE962:
 1769              	.LBE961:
 899:Veno-Echo.cpp ****         }
 1770              		.loc 20 899 36 is_stmt 0 view .LVU423
 1771 0044 524A     		ldr	r2, .L111+28
 1772              	.LBB965:
 1773              	.LBB963:
1828:Veno-Echo.cpp **** 
 1774              		.loc 20 1828 12 view .LVU424
 1775 0046 DFED537A 		vldr.32	s15, .L111+32
 1776 004a 92ED008A 		vldr.32	s16, [r2]
 1777 004e 38EE278A 		vadd.f32	s16, s16, s15
 1778              	.LVL70:
1830:Veno-Echo.cpp ****     {
 1779              		.loc 20 1830 5 is_stmt 1 view .LVU425
 1780 0052 B4EEE78A 		vcmpe.f32	s16, s15
 1781 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1782 005a 7FD4     		bmi	.L109
1835:Veno-Echo.cpp ****     {
 1783              		.loc 20 1835 5 view .LVU426
 1784 005c F7EE007A 		vmov.f32	s15, #1.0e+0
1837:Veno-Echo.cpp ****     }
 1785              		.loc 20 1837 16 is_stmt 0 view .LVU427
 1786 0060 B4EE678A 		vcmp.f32	s16, s15
 1787 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1788 0068 37FE888A 		vselgt.f32	s16, s15, s16
 1789              	.LVL71:
 1790              	.L89:
1837:Veno-Echo.cpp ****     }
 1791              		.loc 20 1837 16 view .LVU428
 1792              	.LBE963:
 1793              	.LBE965:
 902:Veno-Echo.cpp ****         {
 1794              		.loc 20 902 9 is_stmt 1 view .LVU429
 1795 006c D3B9     		cbnz	r3, .L81
 904:Veno-Echo.cpp ****             {
 1796              		.loc 20 904 13 view .LVU430
 904:Veno-Echo.cpp ****             {
 1797              		.loc 20 904 35 is_stmt 0 view .LVU431
 1798 006e 4A48     		ldr	r0, .L111+36
 1799 0070 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 1800              	.LVL72:
 904:Veno-Echo.cpp ****             {
 1801              		.loc 20 904 35 view .LVU432
 1802 0074 F0EE400A 		vmov.f32	s1, s0
 1803 0078 B7EE000A 		vmov.f32	s0, #1.0e+0
 1804 007c 474B     		ldr	r3, .L111+40
 1805 007e 4848     		ldr	r0, .L111+44
 1806 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1807 0082 30EE480A 		vsub.f32	s0, s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 85


 1808              	.LBE975:
 1809              	.LBE998:
 944:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1810              		.loc 20 944 1 view .LVU433
 1811 0086 BDEC028B 		vldm	sp!, {d8}
 1812              		.cfi_remember_state
 1813              		.cfi_restore 80
 1814              		.cfi_restore 81
 1815              		.cfi_def_cfa_offset 8
 1816              	.LVL73:
 944:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1817              		.loc 20 944 1 view .LVU434
 1818 008a BDE81040 		pop	{r4, lr}
 1819              		.cfi_restore 14
 1820              		.cfi_restore 4
 1821              		.cfi_def_cfa_offset 0
 1822              	.LBB999:
 1823              	.LBB976:
 904:Veno-Echo.cpp ****             {
 1824              		.loc 20 904 35 view .LVU435
 1825 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEffb
 1826              	.LVL74:
 1827              	.L82:
 1828              		.cfi_restore_state
 904:Veno-Echo.cpp ****             {
 1829              		.loc 20 904 35 view .LVU436
 1830              	.LBE976:
 1831              	.LBB977:
 914:Veno-Echo.cpp **** 
 1832              		.loc 20 914 9 is_stmt 1 view .LVU437
 916:Veno-Echo.cpp ****         {
 1833              		.loc 20 916 9 view .LVU438
 1834 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1835 0094 8BBB     		cbnz	r3, .L92
 918:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1836              		.loc 20 918 13 view .LVU439
 918:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1837              		.loc 20 918 23 is_stmt 0 view .LVU440
 1838 0096 0124     		movs	r4, #1
 919:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1839              		.loc 20 919 29 view .LVU441
 1840 0098 4248     		ldr	r0, .L111+48
 920:Veno-Echo.cpp ****         }
 1841              		.loc 20 920 26 view .LVU442
 1842 009a 4349     		ldr	r1, .L111+52
 918:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1843              		.loc 20 918 23 view .LVU443
 1844 009c 1470     		strb	r4, [r2]
 919:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1845              		.loc 20 919 13 is_stmt 1 view .LVU444
 919:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1846              		.loc 20 919 29 is_stmt 0 view .LVU445
 1847 009e 0370     		strb	r3, [r0]
 920:Veno-Echo.cpp ****         }
 1848              		.loc 20 920 13 is_stmt 1 view .LVU446
 920:Veno-Echo.cpp ****         }
 1849              		.loc 20 920 26 is_stmt 0 view .LVU447
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 86


 1850 00a0 81ED000A 		vstr.32	s0, [r1]
 1851              	.L81:
 920:Veno-Echo.cpp ****         }
 1852              		.loc 20 920 26 view .LVU448
 1853              	.LBE977:
 1854              	.LBE999:
 944:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1855              		.loc 20 944 1 view .LVU449
 1856 00a4 BDEC028B 		vldm	sp!, {d8}
 1857              		.cfi_remember_state
 1858              		.cfi_restore 80
 1859              		.cfi_restore 81
 1860              		.cfi_def_cfa_offset 8
 1861 00a8 10BD     		pop	{r4, pc}
 1862              	.L83:
 1863              		.cfi_restore_state
 1864              	.LBB1000:
 1865              	.LBB992:
 880:Veno-Echo.cpp ****             {
 1866              		.loc 20 880 13 is_stmt 1 view .LVU450
 880:Veno-Echo.cpp ****             {
 1867              		.loc 20 880 16 is_stmt 0 view .LVU451
 1868 00aa 374A     		ldr	r2, .L111+20
 880:Veno-Echo.cpp ****             {
 1869              		.loc 20 880 13 view .LVU452
 1870 00ac 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1871 00ae 79B9     		cbnz	r1, .L85
 882:Veno-Echo.cpp ****                 {
 1872              		.loc 20 882 17 is_stmt 1 view .LVU453
 1873              	.LVL75:
 1874              	.LBB966:
 1875              	.LBI966:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1876              		.loc 21 75 3 view .LVU454
 1877              	.LBB967:
 1878              		.loc 21 76 5 view .LVU455
 1879              		.loc 21 76 5 is_stmt 0 view .LVU456
 1880              	.LBE967:
 1881              	.LBE966:
 882:Veno-Echo.cpp ****                 {
 1882              		.loc 20 882 23 view .LVU457
 1883 00b0 3649     		ldr	r1, .L111+24
 882:Veno-Echo.cpp ****                 {
 1884              		.loc 20 882 17 view .LVU458
 1885 00b2 9FED3E7A 		vldr.32	s14, .L111+56
 882:Veno-Echo.cpp ****                 {
 1886              		.loc 20 882 23 view .LVU459
 1887 00b6 D1ED007A 		vldr.32	s15, [r1]
 1888 00ba 70EE677A 		vsub.f32	s15, s0, s15
 1889              	.LBB969:
 1890              	.LBB968:
 1891              		.loc 21 76 31 view .LVU460
 1892 00be F0EEE77A 		vabs.f32	s15, s15
 1893              	.LBE968:
 1894              	.LBE969:
 882:Veno-Echo.cpp ****                 {
 1895              		.loc 20 882 17 view .LVU461
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 87


 1896 00c2 F4EEC77A 		vcmpe.f32	s15, s14
 1897 00c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1898 00ca BBDD     		ble	.L84
 884:Veno-Echo.cpp ****                 }
 1899              		.loc 20 884 21 is_stmt 1 view .LVU462
 884:Veno-Echo.cpp ****                 }
 1900              		.loc 20 884 39 is_stmt 0 view .LVU463
 1901 00cc 0121     		movs	r1, #1
 1902 00ce 1170     		strb	r1, [r2]
 1903              	.L85:
 889:Veno-Echo.cpp **** 
 1904              		.loc 20 889 9 is_stmt 1 view .LVU464
 1905              	.LVL76:
 891:Veno-Echo.cpp ****         {
 1906              		.loc 20 891 9 view .LVU465
 893:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1907              		.loc 20 893 13 view .LVU466
 1908              	.LBB970:
 1909              	.LBI970:
1825:Veno-Echo.cpp **** {
 1910              		.loc 20 1825 7 view .LVU467
 1911              	.LBB971:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1912              		.loc 20 1827 5 view .LVU468
1828:Veno-Echo.cpp **** 
 1913              		.loc 20 1828 5 view .LVU469
1828:Veno-Echo.cpp **** 
 1914              		.loc 20 1828 12 is_stmt 0 view .LVU470
 1915 00d0 DFED307A 		vldr.32	s15, .L111+32
 1916 00d4 30EE278A 		vadd.f32	s16, s0, s15
 1917              	.LVL77:
1830:Veno-Echo.cpp ****     {
 1918              		.loc 20 1830 5 is_stmt 1 view .LVU471
 1919 00d8 B4EEE78A 		vcmpe.f32	s16, s15
 1920 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1921 00e0 3FD4     		bmi	.L110
1835:Veno-Echo.cpp ****     {
 1922              		.loc 20 1835 5 view .LVU472
 1923 00e2 F7EE007A 		vmov.f32	s15, #1.0e+0
1837:Veno-Echo.cpp ****     }
 1924              		.loc 20 1837 16 is_stmt 0 view .LVU473
 1925 00e6 B4EE678A 		vcmp.f32	s16, s15
 1926 00ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1927 00ee 37FE888A 		vselgt.f32	s16, s15, s16
 1928              	.LVL78:
 1929              	.L87:
 1930              		.loc 20 1840 5 is_stmt 1 view .LVU474
 1931              		.loc 20 1840 5 is_stmt 0 view .LVU475
 1932              	.LBE971:
 1933              	.LBE970:
 894:Veno-Echo.cpp ****         }
 1934              		.loc 20 894 13 is_stmt 1 view .LVU476
 894:Veno-Echo.cpp ****         }
 1935              		.loc 20 894 29 is_stmt 0 view .LVU477
 1936 00f2 274A     		ldr	r2, .L111+28
 1937 00f4 82ED000A 		vstr.32	s0, [r2]
 1938 00f8 B8E7     		b	.L89
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 88


 1939              	.LVL79:
 1940              	.L92:
 894:Veno-Echo.cpp ****         }
 1941              		.loc 20 894 29 view .LVU478
 1942              	.LBE992:
 1943              	.LBB993:
 925:Veno-Echo.cpp ****             {
 1944              		.loc 20 925 13 is_stmt 1 view .LVU479
 925:Veno-Echo.cpp ****             {
 1945              		.loc 20 925 16 is_stmt 0 view .LVU480
 1946 00fa 2A4B     		ldr	r3, .L111+48
 925:Veno-Echo.cpp ****             {
 1947              		.loc 20 925 13 view .LVU481
 1948 00fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1949 00fe 7AB9     		cbnz	r2, .L93
 927:Veno-Echo.cpp ****                 {
 1950              		.loc 20 927 17 is_stmt 1 view .LVU482
 1951              	.LVL80:
 1952              	.LBB978:
 1953              	.LBI978:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1954              		.loc 21 75 3 view .LVU483
 1955              	.LBB979:
 1956              		.loc 21 76 5 view .LVU484
 1957              		.loc 21 76 5 is_stmt 0 view .LVU485
 1958              	.LBE979:
 1959              	.LBE978:
 927:Veno-Echo.cpp ****                 {
 1960              		.loc 20 927 23 view .LVU486
 1961 0100 294A     		ldr	r2, .L111+52
 927:Veno-Echo.cpp ****                 {
 1962              		.loc 20 927 17 view .LVU487
 1963 0102 9FED2A7A 		vldr.32	s14, .L111+56
 927:Veno-Echo.cpp ****                 {
 1964              		.loc 20 927 23 view .LVU488
 1965 0106 D2ED007A 		vldr.32	s15, [r2]
 1966 010a 70EE677A 		vsub.f32	s15, s0, s15
 1967              	.LBB981:
 1968              	.LBB980:
 1969              		.loc 21 76 31 view .LVU489
 1970 010e F0EEE77A 		vabs.f32	s15, s15
 1971              	.LBE980:
 1972              	.LBE981:
 927:Veno-Echo.cpp ****                 {
 1973              		.loc 20 927 17 view .LVU490
 1974 0112 F4EEC77A 		vcmpe.f32	s15, s14
 1975 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1976 011a C3DD     		ble	.L81
 929:Veno-Echo.cpp ****                 }
 1977              		.loc 20 929 21 is_stmt 1 view .LVU491
 929:Veno-Echo.cpp ****                 }
 1978              		.loc 20 929 37 is_stmt 0 view .LVU492
 1979 011c 0122     		movs	r2, #1
 1980 011e 1A70     		strb	r2, [r3]
 1981              	.L93:
 934:Veno-Echo.cpp ****         {
 1982              		.loc 20 934 9 is_stmt 1 view .LVU493
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 89


 1983              	.LBB982:
 1984              	.LBB983:
 936:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 1985              		.loc 20 936 13 view .LVU494
 1986              	.LVL81:
 937:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 1987              		.loc 20 937 13 view .LVU495
 937:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 1988              		.loc 20 937 61 is_stmt 0 view .LVU496
 1989 0120 F0EE080A 		vmov.f32	s1, #3.0e+0
 1990 0124 0020     		movs	r0, #0
 1991 0126 9FED1B1A 		vldr.32	s2, .L111+32
 1992 012a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1993              	.LVL82:
 1994              	.LBB984:
 1995              	.LBI984:
 1996              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 90


  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 91


  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 92


 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 93


 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 94


 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 95


 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 96


 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 97


 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 98


 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 99


 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 100


 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 101


 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 102


 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 103


 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 104


 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 105


 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 106


 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 107


1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 108


1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 109


1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 110


1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 111


1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 112


1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 113


1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 114


1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 115


1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 116


1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 117


1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 118


1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 119


1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 120


1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 1997              		.loc 22 1756 3 is_stmt 1 view .LVU497
 1998              	.LBB985:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 1999              		.loc 22 1757 5 view .LVU498
 2000              		.loc 22 1757 28 is_stmt 0 view .LVU499
 2001 012e B8FE400A 		vrinta.f32	s0, s0
 2002              	.LVL83:
 2003              		.loc 22 1757 28 view .LVU500
 2004              	.LBE985:
 2005              	.LBE984:
 938:Veno-Echo.cpp ****             //save setting:
 2006              		.loc 20 938 13 is_stmt 1 view .LVU501
 2007              	.LBB986:
 2008              	.LBI986:
1841:Veno-Echo.cpp **** }
1842:Veno-Echo.cpp **** 
1843:Veno-Echo.cpp **** //checks pickup state of primary controls
1844:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
1845:Veno-Echo.cpp **** {
1846:Veno-Echo.cpp ****     bool retval{};
1847:Veno-Echo.cpp ****     
1848:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
1849:Veno-Echo.cpp ****     {
1850:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1851:Veno-Echo.cpp ****         {
1852:Veno-Echo.cpp ****             retval = false;
1853:Veno-Echo.cpp ****         }
1854:Veno-Echo.cpp ****         else
1855:Veno-Echo.cpp ****         {
1856:Veno-Echo.cpp ****             retval = true;
1857:Veno-Echo.cpp ****         }
1858:Veno-Echo.cpp ****     }
1859:Veno-Echo.cpp **** 
1860:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
1861:Veno-Echo.cpp ****     {
1862:Veno-Echo.cpp ****     if(!lastState) //if not picked up
1863:Veno-Echo.cpp ****     {
1864:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1865:Veno-Echo.cpp ****         {
1866:Veno-Echo.cpp ****             retval = true;
1867:Veno-Echo.cpp ****         }
1868:Veno-Echo.cpp **** 
1869:Veno-Echo.cpp ****         else
1870:Veno-Echo.cpp ****         {
1871:Veno-Echo.cpp ****             retval = false;
1872:Veno-Echo.cpp ****         }
1873:Veno-Echo.cpp **** 
1874:Veno-Echo.cpp ****     }
1875:Veno-Echo.cpp ****     else    //previous state is picked up
1876:Veno-Echo.cpp ****     {
1877:Veno-Echo.cpp ****         retval = true;  //always return true
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 121


1878:Veno-Echo.cpp ****     }
1879:Veno-Echo.cpp **** 
1880:Veno-Echo.cpp ****     }
1881:Veno-Echo.cpp ****     return retval;
1882:Veno-Echo.cpp **** 
1883:Veno-Echo.cpp **** }
1884:Veno-Echo.cpp **** 
1885:Veno-Echo.cpp **** //Checks pickup state of secondary controls
1886:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
1887:Veno-Echo.cpp **** {
1888:Veno-Echo.cpp ****     pickupState retval{};
1889:Veno-Echo.cpp **** 
1890:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
1891:Veno-Echo.cpp ****     {
1892:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
1893:Veno-Echo.cpp ****         {
1894:Veno-Echo.cpp ****             retval = BELOW;
1895:Veno-Echo.cpp ****         }
1896:Veno-Echo.cpp ****         
1897:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
1898:Veno-Echo.cpp ****         {
1899:Veno-Echo.cpp ****             retval = ABOVE;
1900:Veno-Echo.cpp ****         }
1901:Veno-Echo.cpp **** 
1902:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
1903:Veno-Echo.cpp ****         {
1904:Veno-Echo.cpp ****             retval = PICKEDUP;
1905:Veno-Echo.cpp ****         }
1906:Veno-Echo.cpp ****     }
1907:Veno-Echo.cpp **** 
1908:Veno-Echo.cpp ****     else    //not a recent shift change
1909:Veno-Echo.cpp ****     {
1910:Veno-Echo.cpp ****         switch(lastState)
1911:Veno-Echo.cpp ****         {
1912:Veno-Echo.cpp ****             case BELOW:
1913:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
1914:Veno-Echo.cpp ****                 retval = PICKEDUP;
1915:Veno-Echo.cpp ****             else
1916:Veno-Echo.cpp ****                 retval = lastState;
1917:Veno-Echo.cpp ****             break;
1918:Veno-Echo.cpp **** 
1919:Veno-Echo.cpp ****             case ABOVE:
1920:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
1921:Veno-Echo.cpp ****                 retval = PICKEDUP;
1922:Veno-Echo.cpp ****             else
1923:Veno-Echo.cpp ****                 retval = lastState;
1924:Veno-Echo.cpp ****             break;
1925:Veno-Echo.cpp ****             case PICKEDUP:
1926:Veno-Echo.cpp ****                 retval = lastState;
1927:Veno-Echo.cpp ****             break;
1928:Veno-Echo.cpp ****         }
1929:Veno-Echo.cpp ****     }
1930:Veno-Echo.cpp ****     
1931:Veno-Echo.cpp ****     return retval;
1932:Veno-Echo.cpp **** }
1933:Veno-Echo.cpp **** 
1934:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 122


 2009              		.loc 20 1934 7 view .LVU502
 2010              	.LBB987:
1935:Veno-Echo.cpp **** {
1936:Veno-Echo.cpp **** float retVal{};
 2011              		.loc 20 1936 1 view .LVU503
1937:Veno-Echo.cpp ****     switch(ratio)
 2012              		.loc 20 1937 5 view .LVU504
 2013              	.LBE987:
 2014              	.LBE986:
 937:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2015              		.loc 20 937 130 is_stmt 0 view .LVU505
 2016 0132 FCEEC07A 		vcvt.u32.f32	s15, s0
 2017 0136 17EE903A 		vmov	r3, s15	@ int
 2018 013a 013B     		subs	r3, r3, #1
 2019 013c DBB2     		uxtb	r3, r3
 2020 013e 022B     		cmp	r3, #2
 2021 0140 12D9     		bls	.L97
 2022 0142 B7EE008A 		vmov.f32	s16, #1.0e+0
 2023              	.L98:
 2024              	.LVL84:
 2025              	.LBB989:
 2026              	.LBB988:
1938:Veno-Echo.cpp ****     {
1939:Veno-Echo.cpp ****         case QUARTER:
1940:Veno-Echo.cpp ****         retVal = 1.0f;
1941:Veno-Echo.cpp ****         break;
1942:Veno-Echo.cpp **** 
1943:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1944:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
1945:Veno-Echo.cpp ****         break;
1946:Veno-Echo.cpp **** 
1947:Veno-Echo.cpp ****         case EIGHT:
1948:Veno-Echo.cpp ****         retVal = 2.0f;
1949:Veno-Echo.cpp ****         break;
1950:Veno-Echo.cpp **** 
1951:Veno-Echo.cpp ****         case TWELVE:
1952:Veno-Echo.cpp ****         retVal = 3.0f;
1953:Veno-Echo.cpp ****         break;
1954:Veno-Echo.cpp **** 
1955:Veno-Echo.cpp ****         default:
1956:Veno-Echo.cpp ****         retVal = 1.0f;
1957:Veno-Echo.cpp ****         break;
1958:Veno-Echo.cpp ****     }
1959:Veno-Echo.cpp **** 
1960:Veno-Echo.cpp **** return retVal;
 2027              		.loc 20 1960 1 is_stmt 1 view .LVU506
 2028              		.loc 20 1960 1 is_stmt 0 view .LVU507
 2029              	.LBE988:
 2030              	.LBE989:
 938:Veno-Echo.cpp ****             //save setting:
 2031              		.loc 20 938 34 view .LVU508
 2032 0146 B0EE480A 		vmov.f32	s0, s16
 2033              	.LVL85:
 938:Veno-Echo.cpp ****             //save setting:
 2034              		.loc 20 938 34 view .LVU509
 2035 014a 1348     		ldr	r0, .L111+36
 2036 014c FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 123


 2037              	.LVL86:
 940:Veno-Echo.cpp ****         }
 2038              		.loc 20 940 13 is_stmt 1 view .LVU510
 940:Veno-Echo.cpp ****         }
 2039              		.loc 20 940 13 is_stmt 0 view .LVU511
 2040              	.LBE983:
 2041              	.LBE982:
 2042              	.LBE993:
 2043              	.LBE1000:
1936:Veno-Echo.cpp ****     switch(ratio)
 2044              		.loc 20 1936 1 is_stmt 1 view .LVU512
1937:Veno-Echo.cpp ****     {
 2045              		.loc 20 1937 5 view .LVU513
 2046              		.loc 20 1960 1 view .LVU514
 2047              	.LBB1001:
 2048              	.LBB994:
 2049              	.LBB991:
 2050              	.LBB990:
 940:Veno-Echo.cpp ****         }
 2051              		.loc 20 940 34 is_stmt 0 view .LVU515
 2052 0150 174B     		ldr	r3, .L111+60
 2053 0152 83ED018A 		vstr.32	s16, [r3, #4]
 2054              	.LBE990:
 2055              	.LBE991:
 2056              	.LBE994:
 2057              	.LBE1001:
 944:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2058              		.loc 20 944 1 view .LVU516
 2059 0156 BDEC028B 		vldm	sp!, {d8}
 2060              		.cfi_remember_state
 2061              		.cfi_restore 80
 2062              		.cfi_restore 81
 2063              		.cfi_def_cfa_offset 8
 2064 015a 10BD     		pop	{r4, pc}
 2065              	.LVL87:
 2066              	.L109:
 2067              		.cfi_restore_state
 2068              	.LBB1002:
 2069              	.LBB995:
 2070              	.LBB973:
 2071              	.LBB964:
1832:Veno-Echo.cpp ****     }
 2072              		.loc 20 1832 16 view .LVU517
 2073 015c B0EE678A 		vmov.f32	s16, s15
 2074              	.LVL88:
1832:Veno-Echo.cpp ****     }
 2075              		.loc 20 1832 16 view .LVU518
 2076 0160 84E7     		b	.L89
 2077              	.LVL89:
 2078              	.L110:
1832:Veno-Echo.cpp ****     }
 2079              		.loc 20 1832 16 view .LVU519
 2080              	.LBE964:
 2081              	.LBE973:
 2082              	.LBB974:
 2083              	.LBB972:
 2084 0162 B0EE678A 		vmov.f32	s16, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 124


 2085              	.LVL90:
1832:Veno-Echo.cpp ****     }
 2086              		.loc 20 1832 16 view .LVU520
 2087 0166 C4E7     		b	.L87
 2088              	.LVL91:
 2089              	.L97:
1832:Veno-Echo.cpp ****     }
 2090              		.loc 20 1832 16 view .LVU521
 2091 0168 124A     		ldr	r2, .L111+64
 2092 016a 02EB8303 		add	r3, r2, r3, lsl #2
 2093 016e 93ED008A 		vldr.32	s16, [r3]
 2094 0172 E8E7     		b	.L98
 2095              	.L112:
 2096              		.align	2
 2097              	.L111:
 2098 0174 18000000 		.word	.LANCHOR4+24
 2099 0178 00000000 		.word	.LANCHOR18
 2100 017c ABAAAA2A 		.word	715827883
 2101 0180 00000000 		.word	.LANCHOR7
 2102 0184 00000000 		.word	.LANCHOR19
 2103 0188 00000000 		.word	.LANCHOR20
 2104 018c 00000000 		.word	.LANCHOR21
 2105 0190 00000000 		.word	.LANCHOR22
 2106 0194 00000000 		.word	0
 2107 0198 00000000 		.word	.LANCHOR12
 2108 019c 00000000 		.word	.LANCHOR13
 2109 01a0 00000000 		.word	.LANCHOR1
 2110 01a4 00000000 		.word	.LANCHOR23
 2111 01a8 00000000 		.word	.LANCHOR24
 2112 01ac 0AD7A33B 		.word	1000593162
 2113 01b0 00000000 		.word	.LANCHOR16
 2114 01b4 00000000 		.word	.LANCHOR25
 2115              	.LBE972:
 2116              	.LBE974:
 2117              	.LBE995:
 2118              	.LBE1002:
 2119              		.cfi_endproc
 2120              	.LFE4315:
 2122              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2123              		.align	1
 2124              		.p2align 2,,3
 2125              		.global	_Z19Update_feedbackL_CVv
 2126              		.syntax unified
 2127              		.thumb
 2128              		.thumb_func
 2129              		.fpu fpv5-d16
 2131              	_Z19Update_feedbackL_CVv:
 2132              	.LFB4316:
 946:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2133              		.loc 20 946 1 is_stmt 1 view -0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 0
 2136              		@ frame_needed = 0, uses_anonymous_args = 0
 947:Veno-Echo.cpp **** }
 2137              		.loc 20 947 5 view .LVU523
 946:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2138              		.loc 20 946 1 is_stmt 0 view .LVU524
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 125


 2139 0000 08B5     		push	{r3, lr}
 2140              		.cfi_def_cfa_offset 8
 2141              		.cfi_offset 3, -8
 2142              		.cfi_offset 14, -4
 947:Veno-Echo.cpp **** }
 2143              		.loc 20 947 35 view .LVU525
 2144 0002 0221     		movs	r1, #2
 2145 0004 0348     		ldr	r0, .L115
 2146 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2147              	.LVL92:
 947:Veno-Echo.cpp **** }
 2148              		.loc 20 947 18 view .LVU526
 2149 000a 034B     		ldr	r3, .L115+4
 2150 000c 83ED000A 		vstr.32	s0, [r3]
 948:Veno-Echo.cpp **** void Update_feedbackL()
 2151              		.loc 20 948 1 view .LVU527
 2152 0010 08BD     		pop	{r3, pc}
 2153              	.L116:
 2154 0012 00BF     		.align	2
 2155              	.L115:
 2156 0014 18000000 		.word	.LANCHOR4+24
 2157 0018 00000000 		.word	.LANCHOR26
 2158              		.cfi_endproc
 2159              	.LFE4316:
 2161              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2162              		.align	1
 2163              		.p2align 2,,3
 2164              		.global	_Z16Update_feedbackLv
 2165              		.syntax unified
 2166              		.thumb
 2167              		.thumb_func
 2168              		.fpu fpv5-d16
 2170              	_Z16Update_feedbackLv:
 2171              	.LFB4317:
 950:Veno-Echo.cpp ****     static bool lastShift{};
 2172              		.loc 20 950 1 is_stmt 1 view -0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 0
 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 951:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2176              		.loc 20 951 5 view .LVU529
 952:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2177              		.loc 20 952 5 view .LVU530
 953:Veno-Echo.cpp **** 
 2178              		.loc 20 953 5 view .LVU531
 955:Veno-Echo.cpp **** 
 2179              		.loc 20 955 5 view .LVU532
 959:Veno-Echo.cpp **** 
 2180              		.loc 20 959 5 view .LVU533
 950:Veno-Echo.cpp ****     static bool lastShift{};
 2181              		.loc 20 950 1 is_stmt 0 view .LVU534
 2182 0000 10B5     		push	{r4, lr}
 2183              		.cfi_def_cfa_offset 8
 2184              		.cfi_offset 4, -8
 2185              		.cfi_offset 14, -4
 959:Veno-Echo.cpp **** 
 2186              		.loc 20 959 47 view .LVU535
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 126


 2187 0002 0221     		movs	r1, #2
 2188 0004 5748     		ldr	r0, .L145
 950:Veno-Echo.cpp ****     static bool lastShift{};
 2189              		.loc 20 950 1 view .LVU536
 2190 0006 2DED028B 		vpush.64	{d8}
 2191              		.cfi_def_cfa_offset 16
 2192              		.cfi_offset 80, -16
 2193              		.cfi_offset 81, -12
 959:Veno-Echo.cpp **** 
 2194              		.loc 20 959 47 view .LVU537
 2195 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2196              	.LVL93:
 2197              	.LBB1003:
 961:Veno-Echo.cpp ****     {   
 2198              		.loc 20 961 9 view .LVU538
 2199 000e 564B     		ldr	r3, .L145+4
 2200              	.LBE1003:
 959:Veno-Echo.cpp **** 
 2201              		.loc 20 959 50 view .LVU539
 2202 0010 B7EE007A 		vmov.f32	s14, #1.0e+0
 2203              	.LBB1035:
 2204              	.LBB1004:
 965:Veno-Echo.cpp ****         {
 2205              		.loc 20 965 19 view .LVU540
 2206 0014 554A     		ldr	r2, .L145+8
 2207              	.LBE1004:
 961:Veno-Echo.cpp ****     {   
 2208              		.loc 20 961 5 view .LVU541
 2209 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2210              	.LBE1035:
 959:Veno-Echo.cpp **** 
 2211              		.loc 20 959 50 view .LVU542
 2212 0018 77EE407A 		vsub.f32	s15, s14, s0
 2213              	.LVL94:
 961:Veno-Echo.cpp ****     {   
 2214              		.loc 20 961 5 is_stmt 1 view .LVU543
 2215              	.LBB1036:
 2216 001c 93BB     		cbnz	r3, .L118
 2217              	.LBB1023:
 963:Veno-Echo.cpp ****         //update pickup
 2218              		.loc 20 963 9 view .LVU544
 965:Veno-Echo.cpp ****         {
 2219              		.loc 20 965 9 view .LVU545
 2220 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2221 0020 0029     		cmp	r1, #0
 2222 0022 3BD0     		beq	.L119
 967:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2223              		.loc 20 967 13 view .LVU546
 968:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2224              		.loc 20 968 30 is_stmt 0 view .LVU547
 2225 0024 5248     		ldr	r0, .L145+12
 969:Veno-Echo.cpp ****         } 
 2226              		.loc 20 969 27 view .LVU548
 2227 0026 5349     		ldr	r1, .L145+16
 967:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2228              		.loc 20 967 23 view .LVU549
 2229 0028 1370     		strb	r3, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 127


 968:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2230              		.loc 20 968 13 is_stmt 1 view .LVU550
 968:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2231              		.loc 20 968 30 is_stmt 0 view .LVU551
 2232 002a 0370     		strb	r3, [r0]
 969:Veno-Echo.cpp ****         } 
 2233              		.loc 20 969 13 is_stmt 1 view .LVU552
 969:Veno-Echo.cpp ****         } 
 2234              		.loc 20 969 27 is_stmt 0 view .LVU553
 2235 002c C1ED007A 		vstr.32	s15, [r1]
 2236              	.L120:
 982:Veno-Echo.cpp **** 
 2237              		.loc 20 982 9 is_stmt 1 view .LVU554
 2238              	.LVL95:
 984:Veno-Echo.cpp ****         {
 2239              		.loc 20 984 9 view .LVU555
 992:Veno-Echo.cpp ****         }
 2240              		.loc 20 992 13 view .LVU556
 2241              	.LBB1005:
 2242              	.LBI1005:
1825:Veno-Echo.cpp **** {
 2243              		.loc 20 1825 7 view .LVU557
 2244              	.LBB1006:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2245              		.loc 20 1827 5 view .LVU558
1828:Veno-Echo.cpp **** 
 2246              		.loc 20 1828 5 view .LVU559
 2247              	.LBE1006:
 2248              	.LBE1005:
 992:Veno-Echo.cpp ****         }
 2249              		.loc 20 992 41 is_stmt 0 view .LVU560
 2250 0030 514B     		ldr	r3, .L145+20
 2251              	.LBB1009:
 2252              	.LBB1007:
1828:Veno-Echo.cpp **** 
 2253              		.loc 20 1828 12 view .LVU561
 2254 0032 DFED527A 		vldr.32	s15, .L145+24
 2255              	.LVL96:
1828:Veno-Echo.cpp **** 
 2256              		.loc 20 1828 12 view .LVU562
 2257 0036 93ED000A 		vldr.32	s0, [r3]
 2258              	.LVL97:
1828:Veno-Echo.cpp **** 
 2259              		.loc 20 1828 12 view .LVU563
 2260 003a 30EE270A 		vadd.f32	s0, s0, s15
 2261              	.LVL98:
1830:Veno-Echo.cpp ****     {
 2262              		.loc 20 1830 5 is_stmt 1 view .LVU564
 2263 003e B4EEE70A 		vcmpe.f32	s0, s15
 2264 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2265 0046 00F18780 		bmi	.L143
1835:Veno-Echo.cpp ****     {
 2266              		.loc 20 1835 5 view .LVU565
 2267 004a F7EE007A 		vmov.f32	s15, #1.0e+0
1837:Veno-Echo.cpp ****     }
 2268              		.loc 20 1837 16 is_stmt 0 view .LVU566
 2269 004e B4EE670A 		vcmp.f32	s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 128


 2270 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2271 0056 37FE800A 		vselgt.f32	s0, s15, s0
 2272              	.LVL99:
 2273              	.L125:
1837:Veno-Echo.cpp ****     }
 2274              		.loc 20 1837 16 view .LVU567
 2275              	.LBE1007:
 2276              	.LBE1009:
 995:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2277              		.loc 20 995 9 is_stmt 1 view .LVU568
 995:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2278              		.loc 20 995 37 is_stmt 0 view .LVU569
 2279 005a B7EE041A 		vmov.f32	s2, #1.25e+0
 2280 005e 0020     		movs	r0, #0
 2281 0060 DFED460A 		vldr.32	s1, .L145+24
 2282 0064 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2283              	.LVL100:
 996:Veno-Echo.cpp ****     }
 2284              		.loc 20 996 9 is_stmt 1 view .LVU570
 2285              	.LBB1010:
 2286              	.LBI1010:
 2287              		.file 23 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 129


  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 130


  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2288              		.loc 23 135 13 view .LVU571
 2289              	.LBB1011:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2290              		.loc 23 137 5 view .LVU572
 2291              		.loc 23 137 9 is_stmt 0 view .LVU573
 2292 0068 454B     		ldr	r3, .L145+28
 2293 006a 9FED467A 		vldr.32	s14, .L145+32
 2294 006e D3ED007A 		vldr.32	s15, [r3]
 2295              		.loc 23 137 24 view .LVU574
 2296 0072 30EE670A 		vsub.f32	s0, s0, s15
 2297              	.LVL101:
 2298              		.loc 23 137 24 view .LVU575
 2299              	.LBE1011:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 131


 2300              	.LBE1010:
 2301              	.LBE1023:
 2302              	.LBE1036:
1031:Veno-Echo.cpp **** 
 2303              		.loc 20 1031 1 view .LVU576
 2304 0076 BDEC028B 		vldm	sp!, {d8}
 2305              		.cfi_remember_state
 2306              		.cfi_restore 80
 2307              		.cfi_restore 81
 2308              		.cfi_def_cfa_offset 8
 2309              	.LBB1037:
 2310              	.LBB1024:
 2311              	.LBB1013:
 2312              	.LBB1012:
 2313              		.loc 23 137 9 view .LVU577
 2314 007a E0EE077A 		vfma.f32	s15, s0, s14
 2315 007e C3ED007A 		vstr.32	s15, [r3]
 2316              	.LBE1012:
 2317              	.LBE1013:
 2318              	.LBE1024:
 2319              	.LBE1037:
1031:Veno-Echo.cpp **** 
 2320              		.loc 20 1031 1 view .LVU578
 2321 0082 10BD     		pop	{r4, pc}
 2322              	.LVL102:
 2323              	.L118:
 2324              		.cfi_restore_state
 2325              	.LBB1038:
 2326              	.LBB1025:
1000:Veno-Echo.cpp **** 
 2327              		.loc 20 1000 9 is_stmt 1 view .LVU579
1002:Veno-Echo.cpp ****         {
 2328              		.loc 20 1002 9 view .LVU580
 2329 0084 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2330 0086 8BBB     		cbnz	r3, .L128
1004:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2331              		.loc 20 1004 13 view .LVU581
1004:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2332              		.loc 20 1004 23 is_stmt 0 view .LVU582
 2333 0088 0124     		movs	r4, #1
1005:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2334              		.loc 20 1005 29 view .LVU583
 2335 008a 3F48     		ldr	r0, .L145+36
1006:Veno-Echo.cpp ****         }
 2336              		.loc 20 1006 26 view .LVU584
 2337 008c 3F49     		ldr	r1, .L145+40
1004:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2338              		.loc 20 1004 23 view .LVU585
 2339 008e 1470     		strb	r4, [r2]
1005:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2340              		.loc 20 1005 13 is_stmt 1 view .LVU586
1005:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2341              		.loc 20 1005 29 is_stmt 0 view .LVU587
 2342 0090 0370     		strb	r3, [r0]
1006:Veno-Echo.cpp ****         }
 2343              		.loc 20 1006 13 is_stmt 1 view .LVU588
1006:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 132


 2344              		.loc 20 1006 26 is_stmt 0 view .LVU589
 2345 0092 C1ED007A 		vstr.32	s15, [r1]
 2346              	.L117:
1006:Veno-Echo.cpp ****         }
 2347              		.loc 20 1006 26 view .LVU590
 2348              	.LBE1025:
 2349              	.LBE1038:
1031:Veno-Echo.cpp **** 
 2350              		.loc 20 1031 1 view .LVU591
 2351 0096 BDEC028B 		vldm	sp!, {d8}
 2352              		.cfi_remember_state
 2353              		.cfi_restore 80
 2354              		.cfi_restore 81
 2355              		.cfi_def_cfa_offset 8
 2356 009a 10BD     		pop	{r4, pc}
 2357              	.L119:
 2358              		.cfi_restore_state
 2359              	.LBB1039:
 2360              	.LBB1032:
 973:Veno-Echo.cpp ****             {
 2361              		.loc 20 973 13 is_stmt 1 view .LVU592
 973:Veno-Echo.cpp ****             {
 2362              		.loc 20 973 16 is_stmt 0 view .LVU593
 2363 009c 344B     		ldr	r3, .L145+12
 973:Veno-Echo.cpp ****             {
 2364              		.loc 20 973 13 view .LVU594
 2365 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2366 00a0 7AB9     		cbnz	r2, .L121
 975:Veno-Echo.cpp ****                 {
 2367              		.loc 20 975 17 is_stmt 1 view .LVU595
 2368              	.LVL103:
 2369              	.LBB1014:
 2370              	.LBI1014:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2371              		.loc 21 75 3 view .LVU596
 2372              	.LBB1015:
 2373              		.loc 21 76 5 view .LVU597
 2374              		.loc 21 76 5 is_stmt 0 view .LVU598
 2375              	.LBE1015:
 2376              	.LBE1014:
 975:Veno-Echo.cpp ****                 {
 2377              		.loc 20 975 23 view .LVU599
 2378 00a2 344A     		ldr	r2, .L145+16
 975:Veno-Echo.cpp ****                 {
 2379              		.loc 20 975 17 view .LVU600
 2380 00a4 DFED3A6A 		vldr.32	s13, .L145+44
 975:Veno-Echo.cpp ****                 {
 2381              		.loc 20 975 23 view .LVU601
 2382 00a8 92ED007A 		vldr.32	s14, [r2]
 2383 00ac 37EEC77A 		vsub.f32	s14, s15, s14
 2384              	.LBB1017:
 2385              	.LBB1016:
 2386              		.loc 21 76 31 view .LVU602
 2387 00b0 B0EEC77A 		vabs.f32	s14, s14
 2388              	.LBE1016:
 2389              	.LBE1017:
 975:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 133


 2390              		.loc 20 975 17 view .LVU603
 2391 00b4 B4EEE67A 		vcmpe.f32	s14, s13
 2392 00b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2393 00bc B8DD     		ble	.L120
 977:Veno-Echo.cpp ****                 }
 2394              		.loc 20 977 21 is_stmt 1 view .LVU604
 977:Veno-Echo.cpp ****                 }
 2395              		.loc 20 977 38 is_stmt 0 view .LVU605
 2396 00be 0122     		movs	r2, #1
 2397 00c0 1A70     		strb	r2, [r3]
 2398              	.L121:
 982:Veno-Echo.cpp **** 
 2399              		.loc 20 982 9 is_stmt 1 view .LVU606
 2400              	.LVL104:
 984:Veno-Echo.cpp ****         {
 2401              		.loc 20 984 9 view .LVU607
 986:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2402              		.loc 20 986 13 view .LVU608
 2403              	.LBB1018:
 2404              	.LBI1018:
1825:Veno-Echo.cpp **** {
 2405              		.loc 20 1825 7 view .LVU609
 2406              	.LBB1019:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2407              		.loc 20 1827 5 view .LVU610
1828:Veno-Echo.cpp **** 
 2408              		.loc 20 1828 5 view .LVU611
1828:Veno-Echo.cpp **** 
 2409              		.loc 20 1828 12 is_stmt 0 view .LVU612
 2410 00c2 9FED2E7A 		vldr.32	s14, .L145+24
 2411 00c6 37EE870A 		vadd.f32	s0, s15, s14
 2412              	.LVL105:
1830:Veno-Echo.cpp ****     {
 2413              		.loc 20 1830 5 is_stmt 1 view .LVU613
 2414 00ca B4EEC70A 		vcmpe.f32	s0, s14
 2415 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2416 00d2 44D4     		bmi	.L144
1835:Veno-Echo.cpp ****     {
 2417              		.loc 20 1835 5 view .LVU614
 2418 00d4 B7EE007A 		vmov.f32	s14, #1.0e+0
1837:Veno-Echo.cpp ****     }
 2419              		.loc 20 1837 16 is_stmt 0 view .LVU615
 2420 00d8 B4EE470A 		vcmp.f32	s0, s14
 2421 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2422 00e0 37FE000A 		vselgt.f32	s0, s14, s0
 2423              	.LVL106:
 2424              	.L123:
1840:Veno-Echo.cpp **** }
 2425              		.loc 20 1840 5 is_stmt 1 view .LVU616
1840:Veno-Echo.cpp **** }
 2426              		.loc 20 1840 5 is_stmt 0 view .LVU617
 2427              	.LBE1019:
 2428              	.LBE1018:
 987:Veno-Echo.cpp ****         }
 2429              		.loc 20 987 13 is_stmt 1 view .LVU618
 987:Veno-Echo.cpp ****         }
 2430              		.loc 20 987 28 is_stmt 0 view .LVU619
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 134


 2431 00e4 244B     		ldr	r3, .L145+20
 2432 00e6 C3ED007A 		vstr.32	s15, [r3]
 2433 00ea B6E7     		b	.L125
 2434              	.LVL107:
 2435              	.L128:
 987:Veno-Echo.cpp ****         }
 2436              		.loc 20 987 28 view .LVU620
 2437              	.LBE1032:
 2438              	.LBB1033:
1011:Veno-Echo.cpp ****             {
 2439              		.loc 20 1011 13 is_stmt 1 view .LVU621
1011:Veno-Echo.cpp ****             {
 2440              		.loc 20 1011 16 is_stmt 0 view .LVU622
 2441 00ec 264B     		ldr	r3, .L145+36
1011:Veno-Echo.cpp ****             {
 2442              		.loc 20 1011 13 view .LVU623
 2443 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2444 00f0 7AB9     		cbnz	r2, .L130
1013:Veno-Echo.cpp ****                 {
 2445              		.loc 20 1013 17 is_stmt 1 view .LVU624
 2446              	.LVL108:
 2447              	.LBB1026:
 2448              	.LBI1026:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2449              		.loc 21 75 3 view .LVU625
 2450              	.LBB1027:
 2451              		.loc 21 76 5 view .LVU626
 2452              		.loc 21 76 5 is_stmt 0 view .LVU627
 2453              	.LBE1027:
 2454              	.LBE1026:
1013:Veno-Echo.cpp ****                 {
 2455              		.loc 20 1013 23 view .LVU628
 2456 00f2 264A     		ldr	r2, .L145+40
1013:Veno-Echo.cpp ****                 {
 2457              		.loc 20 1013 17 view .LVU629
 2458 00f4 DFED266A 		vldr.32	s13, .L145+44
1013:Veno-Echo.cpp ****                 {
 2459              		.loc 20 1013 23 view .LVU630
 2460 00f8 92ED007A 		vldr.32	s14, [r2]
 2461 00fc 37EEC77A 		vsub.f32	s14, s15, s14
 2462              	.LBB1029:
 2463              	.LBB1028:
 2464              		.loc 21 76 31 view .LVU631
 2465 0100 B0EEC77A 		vabs.f32	s14, s14
 2466              	.LBE1028:
 2467              	.LBE1029:
1013:Veno-Echo.cpp ****                 {
 2468              		.loc 20 1013 17 view .LVU632
 2469 0104 B4EEE67A 		vcmpe.f32	s14, s13
 2470 0108 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2471 010c C3DD     		ble	.L117
1015:Veno-Echo.cpp ****                 }
 2472              		.loc 20 1015 21 is_stmt 1 view .LVU633
1015:Veno-Echo.cpp ****                 }
 2473              		.loc 20 1015 37 is_stmt 0 view .LVU634
 2474 010e 0122     		movs	r2, #1
 2475 0110 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 135


 2476              	.L130:
1020:Veno-Echo.cpp ****         {
 2477              		.loc 20 1020 9 is_stmt 1 view .LVU635
 2478              	.LBB1030:
 2479              	.LBB1031:
1022:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2480              		.loc 20 1022 13 view .LVU636
 2481              	.LVL109:
1023:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2482              		.loc 20 1023 13 view .LVU637
1023:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2483              		.loc 20 1023 29 is_stmt 0 view .LVU638
 2484 0112 B0EE670A 		vmov.f32	s0, s15
 2485 0116 9FED1F1A 		vldr.32	s2, .L145+48
 2486 011a DFED1F0A 		vldr.32	s1, .L145+52
 2487 011e 0120     		movs	r0, #1
 2488 0120 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2489              	.LVL110:
1023:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2490              		.loc 20 1023 29 view .LVU639
 2491 0124 B0EE408A 		vmov.f32	s16, s0
 2492              	.LVL111:
1024:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2493              		.loc 20 1024 13 is_stmt 1 view .LVU640
1024:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2494              		.loc 20 1024 26 is_stmt 0 view .LVU641
 2495 0128 1C48     		ldr	r0, .L145+56
 2496 012a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2497              	.LVL112:
1025:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2498              		.loc 20 1025 13 is_stmt 1 view .LVU642
1025:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2499              		.loc 20 1025 26 is_stmt 0 view .LVU643
 2500 012e 1C48     		ldr	r0, .L145+60
 2501 0130 B0EE480A 		vmov.f32	s0, s16
 2502 0134 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2503              	.LVL113:
1026:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2504              		.loc 20 1026 13 is_stmt 1 view .LVU644
1026:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2505              		.loc 20 1026 31 is_stmt 0 view .LVU645
 2506 0138 B0EE480A 		vmov.f32	s0, s16
 2507 013c 1948     		ldr	r0, .L145+64
 2508 013e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2509              	.LVL114:
1027:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2510              		.loc 20 1027 13 is_stmt 1 view .LVU646
1027:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2511              		.loc 20 1027 31 is_stmt 0 view .LVU647
 2512 0142 B0EE480A 		vmov.f32	s0, s16
 2513 0146 1848     		ldr	r0, .L145+68
 2514 0148 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2515              	.LVL115:
1028:Veno-Echo.cpp ****         }
 2516              		.loc 20 1028 13 is_stmt 1 view .LVU648
1028:Veno-Echo.cpp ****         }
 2517              		.loc 20 1028 35 is_stmt 0 view .LVU649
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 136


 2518 014c 174B     		ldr	r3, .L145+72
 2519 014e 83ED048A 		vstr.32	s16, [r3, #16]
 2520              	.LBE1031:
 2521              	.LBE1030:
 2522              	.LBE1033:
 2523              	.LBE1039:
1031:Veno-Echo.cpp **** 
 2524              		.loc 20 1031 1 view .LVU650
 2525 0152 BDEC028B 		vldm	sp!, {d8}
 2526              		.cfi_remember_state
 2527              		.cfi_restore 80
 2528              		.cfi_restore 81
 2529              		.cfi_def_cfa_offset 8
 2530              	.LVL116:
1031:Veno-Echo.cpp **** 
 2531              		.loc 20 1031 1 view .LVU651
 2532 0156 10BD     		pop	{r4, pc}
 2533              	.LVL117:
 2534              	.L143:
 2535              		.cfi_restore_state
 2536              	.LBB1040:
 2537              	.LBB1034:
 2538              	.LBB1021:
 2539              	.LBB1008:
1832:Veno-Echo.cpp ****     }
 2540              		.loc 20 1832 16 view .LVU652
 2541 0158 B0EE670A 		vmov.f32	s0, s15
 2542              	.LVL118:
1832:Veno-Echo.cpp ****     }
 2543              		.loc 20 1832 16 view .LVU653
 2544 015c 7DE7     		b	.L125
 2545              	.LVL119:
 2546              	.L144:
1832:Veno-Echo.cpp ****     }
 2547              		.loc 20 1832 16 view .LVU654
 2548              	.LBE1008:
 2549              	.LBE1021:
 2550              	.LBB1022:
 2551              	.LBB1020:
 2552 015e B0EE470A 		vmov.f32	s0, s14
 2553              	.LVL120:
1832:Veno-Echo.cpp ****     }
 2554              		.loc 20 1832 16 view .LVU655
 2555 0162 BFE7     		b	.L123
 2556              	.L146:
 2557              		.align	2
 2558              	.L145:
 2559 0164 18000000 		.word	.LANCHOR4+24
 2560 0168 00000000 		.word	.LANCHOR7
 2561 016c 00000000 		.word	.LANCHOR27
 2562 0170 00000000 		.word	.LANCHOR28
 2563 0174 00000000 		.word	.LANCHOR29
 2564 0178 00000000 		.word	.LANCHOR30
 2565 017c 00000000 		.word	0
 2566 0180 00000000 		.word	.LANCHOR31
 2567 0184 6F12033D 		.word	1023611503
 2568 0188 00000000 		.word	.LANCHOR32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 137


 2569 018c 00000000 		.word	.LANCHOR33
 2570 0190 0AD7A33B 		.word	1000593162
 2571 0194 00004844 		.word	1145569280
 2572 0198 0000C842 		.word	1120403456
 2573 019c 00000000 		.word	.LANCHOR34
 2574 01a0 00000000 		.word	.LANCHOR35
 2575 01a4 00000000 		.word	.LANCHOR36
 2576 01a8 00000000 		.word	.LANCHOR37
 2577 01ac 00000000 		.word	.LANCHOR16
 2578              	.LBE1020:
 2579              	.LBE1022:
 2580              	.LBE1034:
 2581              	.LBE1040:
 2582              		.cfi_endproc
 2583              	.LFE4317:
 2585              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2586              		.align	1
 2587              		.p2align 2,,3
 2588              		.global	_Z19Update_feedbackR_CVv
 2589              		.syntax unified
 2590              		.thumb
 2591              		.thumb_func
 2592              		.fpu fpv5-d16
 2594              	_Z19Update_feedbackR_CVv:
 2595              	.LFB4318:
1034:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2596              		.loc 20 1034 1 is_stmt 1 view -0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 0
 2599              		@ frame_needed = 0, uses_anonymous_args = 0
1035:Veno-Echo.cpp **** }
 2600              		.loc 20 1035 5 view .LVU657
1034:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2601              		.loc 20 1034 1 is_stmt 0 view .LVU658
 2602 0000 08B5     		push	{r3, lr}
 2603              		.cfi_def_cfa_offset 8
 2604              		.cfi_offset 3, -8
 2605              		.cfi_offset 14, -4
1035:Veno-Echo.cpp **** }
 2606              		.loc 20 1035 35 view .LVU659
 2607 0002 0321     		movs	r1, #3
 2608 0004 0348     		ldr	r0, .L149
 2609 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2610              	.LVL121:
1035:Veno-Echo.cpp **** }
 2611              		.loc 20 1035 18 view .LVU660
 2612 000a 034B     		ldr	r3, .L149+4
 2613 000c 83ED000A 		vstr.32	s0, [r3]
1036:Veno-Echo.cpp **** 
 2614              		.loc 20 1036 1 view .LVU661
 2615 0010 08BD     		pop	{r3, pc}
 2616              	.L150:
 2617 0012 00BF     		.align	2
 2618              	.L149:
 2619 0014 18000000 		.word	.LANCHOR4+24
 2620 0018 00000000 		.word	.LANCHOR38
 2621              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 138


 2622              	.LFE4318:
 2624              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2625              		.align	1
 2626              		.p2align 2,,3
 2627              		.global	_Z16Update_feedbackRv
 2628              		.syntax unified
 2629              		.thumb
 2630              		.thumb_func
 2631              		.fpu fpv5-d16
 2633              	_Z16Update_feedbackRv:
 2634              	.LFB4319:
1039:Veno-Echo.cpp ****     static bool lastShift{};
 2635              		.loc 20 1039 1 is_stmt 1 view -0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 0
 2638              		@ frame_needed = 0, uses_anonymous_args = 0
1040:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2639              		.loc 20 1040 5 view .LVU663
1041:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2640              		.loc 20 1041 5 view .LVU664
1042:Veno-Echo.cpp **** 
 2641              		.loc 20 1042 5 view .LVU665
1044:Veno-Echo.cpp **** 
 2642              		.loc 20 1044 5 view .LVU666
1047:Veno-Echo.cpp **** 
 2643              		.loc 20 1047 5 view .LVU667
1039:Veno-Echo.cpp ****     static bool lastShift{};
 2644              		.loc 20 1039 1 is_stmt 0 view .LVU668
 2645 0000 10B5     		push	{r4, lr}
 2646              		.cfi_def_cfa_offset 8
 2647              		.cfi_offset 4, -8
 2648              		.cfi_offset 14, -4
1047:Veno-Echo.cpp **** 
 2649              		.loc 20 1047 47 view .LVU669
 2650 0002 0321     		movs	r1, #3
 2651 0004 5948     		ldr	r0, .L181
1039:Veno-Echo.cpp ****     static bool lastShift{};
 2652              		.loc 20 1039 1 view .LVU670
 2653 0006 2DED028B 		vpush.64	{d8}
 2654              		.cfi_def_cfa_offset 16
 2655              		.cfi_offset 80, -16
 2656              		.cfi_offset 81, -12
1047:Veno-Echo.cpp **** 
 2657              		.loc 20 1047 47 view .LVU671
 2658 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2659              	.LVL122:
 2660              	.LBB1041:
1049:Veno-Echo.cpp ****     {   
 2661              		.loc 20 1049 9 view .LVU672
 2662 000e 584B     		ldr	r3, .L181+4
 2663              	.LBE1041:
1047:Veno-Echo.cpp **** 
 2664              		.loc 20 1047 50 view .LVU673
 2665 0010 B7EE007A 		vmov.f32	s14, #1.0e+0
 2666              	.LBB1071:
 2667              	.LBB1042:
1053:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 139


 2668              		.loc 20 1053 19 view .LVU674
 2669 0014 574A     		ldr	r2, .L181+8
 2670              	.LBE1042:
1049:Veno-Echo.cpp ****     {   
 2671              		.loc 20 1049 5 view .LVU675
 2672 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2673              	.LBE1071:
1047:Veno-Echo.cpp **** 
 2674              		.loc 20 1047 50 view .LVU676
 2675 0018 77EE407A 		vsub.f32	s15, s14, s0
 2676              	.LVL123:
1049:Veno-Echo.cpp ****     {   
 2677              		.loc 20 1049 5 is_stmt 1 view .LVU677
 2678              	.LBB1072:
 2679 001c 93BB     		cbnz	r3, .L152
 2680              	.LBB1059:
1051:Veno-Echo.cpp ****         //update pickup
 2681              		.loc 20 1051 9 view .LVU678
1053:Veno-Echo.cpp ****         {
 2682              		.loc 20 1053 9 view .LVU679
 2683 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2684 0020 0029     		cmp	r1, #0
 2685 0022 3BD0     		beq	.L153
1055:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2686              		.loc 20 1055 13 view .LVU680
1056:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2687              		.loc 20 1056 30 is_stmt 0 view .LVU681
 2688 0024 544C     		ldr	r4, .L181+12
1057:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2689              		.loc 20 1057 28 view .LVU682
 2690 0026 5548     		ldr	r0, .L181+16
1058:Veno-Echo.cpp ****         } 
 2691              		.loc 20 1058 27 view .LVU683
 2692 0028 5549     		ldr	r1, .L181+20
1055:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2693              		.loc 20 1055 23 view .LVU684
 2694 002a 1370     		strb	r3, [r2]
1056:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2695              		.loc 20 1056 13 is_stmt 1 view .LVU685
1056:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2696              		.loc 20 1056 30 is_stmt 0 view .LVU686
 2697 002c 2370     		strb	r3, [r4]
1057:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2698              		.loc 20 1057 13 is_stmt 1 view .LVU687
1057:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2699              		.loc 20 1057 28 is_stmt 0 view .LVU688
 2700 002e C0ED007A 		vstr.32	s15, [r0]
1058:Veno-Echo.cpp ****         } 
 2701              		.loc 20 1058 13 is_stmt 1 view .LVU689
1058:Veno-Echo.cpp ****         } 
 2702              		.loc 20 1058 27 is_stmt 0 view .LVU690
 2703 0032 C1ED007A 		vstr.32	s15, [r1]
 2704              	.LVL124:
 2705              	.L154:
1071:Veno-Echo.cpp ****         
 2706              		.loc 20 1071 9 is_stmt 1 view .LVU691
1073:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 140


 2707              		.loc 20 1073 9 view .LVU692
1081:Veno-Echo.cpp ****         }
 2708              		.loc 20 1081 13 view .LVU693
 2709              	.LBB1043:
 2710              	.LBI1043:
1825:Veno-Echo.cpp **** {
 2711              		.loc 20 1825 7 view .LVU694
 2712              	.LBB1044:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2713              		.loc 20 1827 5 view .LVU695
1828:Veno-Echo.cpp **** 
 2714              		.loc 20 1828 5 view .LVU696
1828:Veno-Echo.cpp **** 
 2715              		.loc 20 1828 12 is_stmt 0 view .LVU697
 2716 0036 9FED537A 		vldr.32	s14, .L181+24
 2717 003a 37EE870A 		vadd.f32	s0, s15, s14
 2718              	.LVL125:
1830:Veno-Echo.cpp ****     {
 2719              		.loc 20 1830 5 is_stmt 1 view .LVU698
 2720 003e B4EEC70A 		vcmpe.f32	s0, s14
 2721 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2722 0046 00F18780 		bmi	.L179
1835:Veno-Echo.cpp ****     {
 2723              		.loc 20 1835 5 view .LVU699
 2724 004a F7EE007A 		vmov.f32	s15, #1.0e+0
1837:Veno-Echo.cpp ****     }
 2725              		.loc 20 1837 16 is_stmt 0 view .LVU700
 2726 004e B4EE670A 		vcmp.f32	s0, s15
 2727 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2728 0056 37FE800A 		vselgt.f32	s0, s15, s0
 2729              	.LVL126:
 2730              	.L160:
1837:Veno-Echo.cpp ****     }
 2731              		.loc 20 1837 16 view .LVU701
 2732              	.LBE1044:
 2733              	.LBE1043:
1084:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2734              		.loc 20 1084 9 is_stmt 1 view .LVU702
1084:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2735              		.loc 20 1084 37 is_stmt 0 view .LVU703
 2736 005a B7EE041A 		vmov.f32	s2, #1.25e+0
 2737 005e 0020     		movs	r0, #0
 2738 0060 DFED480A 		vldr.32	s1, .L181+24
 2739 0064 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2740              	.LVL127:
1085:Veno-Echo.cpp ****     }
 2741              		.loc 20 1085 9 is_stmt 1 view .LVU704
 2742              	.LBB1046:
 2743              	.LBI1046:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2744              		.loc 23 135 13 view .LVU705
 2745              	.LBB1047:
 2746              		.loc 23 137 5 view .LVU706
 2747              		.loc 23 137 9 is_stmt 0 view .LVU707
 2748 0068 474B     		ldr	r3, .L181+28
 2749 006a 9FED487A 		vldr.32	s14, .L181+32
 2750 006e D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 141


 2751              		.loc 23 137 24 view .LVU708
 2752 0072 30EE670A 		vsub.f32	s0, s0, s15
 2753              	.LVL128:
 2754              		.loc 23 137 24 view .LVU709
 2755              	.LBE1047:
 2756              	.LBE1046:
 2757              	.LBE1059:
 2758              	.LBE1072:
1121:Veno-Echo.cpp **** 
 2759              		.loc 20 1121 1 view .LVU710
 2760 0076 BDEC028B 		vldm	sp!, {d8}
 2761              		.cfi_remember_state
 2762              		.cfi_restore 80
 2763              		.cfi_restore 81
 2764              		.cfi_def_cfa_offset 8
 2765              	.LBB1073:
 2766              	.LBB1060:
 2767              	.LBB1049:
 2768              	.LBB1048:
 2769              		.loc 23 137 9 view .LVU711
 2770 007a E0EE077A 		vfma.f32	s15, s0, s14
 2771 007e C3ED007A 		vstr.32	s15, [r3]
 2772              	.LBE1048:
 2773              	.LBE1049:
 2774              	.LBE1060:
 2775              	.LBE1073:
1121:Veno-Echo.cpp **** 
 2776              		.loc 20 1121 1 view .LVU712
 2777 0082 10BD     		pop	{r4, pc}
 2778              	.LVL129:
 2779              	.L152:
 2780              		.cfi_restore_state
 2781              	.LBB1074:
 2782              	.LBB1061:
1090:Veno-Echo.cpp **** 
 2783              		.loc 20 1090 9 is_stmt 1 view .LVU713
1092:Veno-Echo.cpp ****         {
 2784              		.loc 20 1092 10 view .LVU714
 2785 0084 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2786 0086 8BBB     		cbnz	r3, .L163
1094:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2787              		.loc 20 1094 13 view .LVU715
1094:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2788              		.loc 20 1094 23 is_stmt 0 view .LVU716
 2789 0088 0124     		movs	r4, #1
1095:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2790              		.loc 20 1095 29 view .LVU717
 2791 008a 4148     		ldr	r0, .L181+36
1096:Veno-Echo.cpp ****         }
 2792              		.loc 20 1096 26 view .LVU718
 2793 008c 4149     		ldr	r1, .L181+40
1094:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2794              		.loc 20 1094 23 view .LVU719
 2795 008e 1470     		strb	r4, [r2]
1095:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2796              		.loc 20 1095 13 is_stmt 1 view .LVU720
1095:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 142


 2797              		.loc 20 1095 29 is_stmt 0 view .LVU721
 2798 0090 0370     		strb	r3, [r0]
1096:Veno-Echo.cpp ****         }
 2799              		.loc 20 1096 13 is_stmt 1 view .LVU722
1096:Veno-Echo.cpp ****         }
 2800              		.loc 20 1096 26 is_stmt 0 view .LVU723
 2801 0092 C1ED007A 		vstr.32	s15, [r1]
 2802              	.L151:
1096:Veno-Echo.cpp ****         }
 2803              		.loc 20 1096 26 view .LVU724
 2804              	.LBE1061:
 2805              	.LBE1074:
1121:Veno-Echo.cpp **** 
 2806              		.loc 20 1121 1 view .LVU725
 2807 0096 BDEC028B 		vldm	sp!, {d8}
 2808              		.cfi_remember_state
 2809              		.cfi_restore 80
 2810              		.cfi_restore 81
 2811              		.cfi_def_cfa_offset 8
 2812 009a 10BD     		pop	{r4, pc}
 2813              	.L153:
 2814              		.cfi_restore_state
 2815              	.LBB1075:
 2816              	.LBB1068:
1062:Veno-Echo.cpp ****             {
 2817              		.loc 20 1062 13 is_stmt 1 view .LVU726
1062:Veno-Echo.cpp ****             {
 2818              		.loc 20 1062 16 is_stmt 0 view .LVU727
 2819 009c 364B     		ldr	r3, .L181+12
1062:Veno-Echo.cpp ****             {
 2820              		.loc 20 1062 13 view .LVU728
 2821 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2822 00a0 7AB9     		cbnz	r2, .L155
1064:Veno-Echo.cpp ****                 {
 2823              		.loc 20 1064 17 is_stmt 1 view .LVU729
 2824              	.LVL130:
 2825              	.LBB1050:
 2826              	.LBI1050:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2827              		.loc 21 75 3 view .LVU730
 2828              	.LBB1051:
 2829              		.loc 21 76 5 view .LVU731
 2830              		.loc 21 76 5 is_stmt 0 view .LVU732
 2831              	.LBE1051:
 2832              	.LBE1050:
1064:Veno-Echo.cpp ****                 {
 2833              		.loc 20 1064 23 view .LVU733
 2834 00a2 374A     		ldr	r2, .L181+20
1064:Veno-Echo.cpp ****                 {
 2835              		.loc 20 1064 17 view .LVU734
 2836 00a4 DFED3C6A 		vldr.32	s13, .L181+44
1064:Veno-Echo.cpp ****                 {
 2837              		.loc 20 1064 23 view .LVU735
 2838 00a8 92ED007A 		vldr.32	s14, [r2]
 2839 00ac 37EEC77A 		vsub.f32	s14, s15, s14
 2840              	.LBB1053:
 2841              	.LBB1052:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 143


 2842              		.loc 21 76 31 view .LVU736
 2843 00b0 B0EEC77A 		vabs.f32	s14, s14
 2844              	.LBE1052:
 2845              	.LBE1053:
1064:Veno-Echo.cpp ****                 {
 2846              		.loc 20 1064 17 view .LVU737
 2847 00b4 B4EEE67A 		vcmpe.f32	s14, s13
 2848 00b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2849 00bc 52DD     		ble	.L175
1066:Veno-Echo.cpp ****                 }
 2850              		.loc 20 1066 21 is_stmt 1 view .LVU738
1066:Veno-Echo.cpp ****                 }
 2851              		.loc 20 1066 38 is_stmt 0 view .LVU739
 2852 00be 0122     		movs	r2, #1
 2853 00c0 1A70     		strb	r2, [r3]
 2854              	.L155:
1071:Veno-Echo.cpp ****         
 2855              		.loc 20 1071 9 is_stmt 1 view .LVU740
 2856              	.LVL131:
1073:Veno-Echo.cpp ****         {
 2857              		.loc 20 1073 9 view .LVU741
1075:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2858              		.loc 20 1075 13 view .LVU742
 2859              	.LBB1054:
 2860              	.LBI1054:
1825:Veno-Echo.cpp **** {
 2861              		.loc 20 1825 7 view .LVU743
 2862              	.LBB1055:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2863              		.loc 20 1827 5 view .LVU744
1828:Veno-Echo.cpp **** 
 2864              		.loc 20 1828 5 view .LVU745
1828:Veno-Echo.cpp **** 
 2865              		.loc 20 1828 12 is_stmt 0 view .LVU746
 2866 00c2 9FED307A 		vldr.32	s14, .L181+24
 2867 00c6 37EE870A 		vadd.f32	s0, s15, s14
 2868              	.LVL132:
1830:Veno-Echo.cpp ****     {
 2869              		.loc 20 1830 5 is_stmt 1 view .LVU747
 2870 00ca B4EEC70A 		vcmpe.f32	s0, s14
 2871 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2872 00d2 44D4     		bmi	.L180
1835:Veno-Echo.cpp ****     {
 2873              		.loc 20 1835 5 view .LVU748
 2874 00d4 B7EE007A 		vmov.f32	s14, #1.0e+0
1837:Veno-Echo.cpp ****     }
 2875              		.loc 20 1837 16 is_stmt 0 view .LVU749
 2876 00d8 B4EE470A 		vcmp.f32	s0, s14
 2877 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2878 00e0 37FE000A 		vselgt.f32	s0, s14, s0
 2879              	.LVL133:
 2880              	.L158:
1840:Veno-Echo.cpp **** }
 2881              		.loc 20 1840 5 is_stmt 1 view .LVU750
1840:Veno-Echo.cpp **** }
 2882              		.loc 20 1840 5 is_stmt 0 view .LVU751
 2883              	.LBE1055:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 144


 2884              	.LBE1054:
1076:Veno-Echo.cpp ****         }
 2885              		.loc 20 1076 13 is_stmt 1 view .LVU752
1076:Veno-Echo.cpp ****         }
 2886              		.loc 20 1076 28 is_stmt 0 view .LVU753
 2887 00e4 254B     		ldr	r3, .L181+16
 2888 00e6 C3ED007A 		vstr.32	s15, [r3]
 2889 00ea B6E7     		b	.L160
 2890              	.LVL134:
 2891              	.L163:
1076:Veno-Echo.cpp ****         }
 2892              		.loc 20 1076 28 view .LVU754
 2893              	.LBE1068:
 2894              	.LBB1069:
1101:Veno-Echo.cpp ****             {
 2895              		.loc 20 1101 13 is_stmt 1 view .LVU755
1101:Veno-Echo.cpp ****             {
 2896              		.loc 20 1101 16 is_stmt 0 view .LVU756
 2897 00ec 284B     		ldr	r3, .L181+36
1101:Veno-Echo.cpp ****             {
 2898              		.loc 20 1101 13 view .LVU757
 2899 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2900 00f0 7AB9     		cbnz	r2, .L165
1103:Veno-Echo.cpp ****                 {
 2901              		.loc 20 1103 17 is_stmt 1 view .LVU758
 2902              	.LVL135:
 2903              	.LBB1062:
 2904              	.LBI1062:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2905              		.loc 21 75 3 view .LVU759
 2906              	.LBB1063:
 2907              		.loc 21 76 5 view .LVU760
 2908              		.loc 21 76 5 is_stmt 0 view .LVU761
 2909              	.LBE1063:
 2910              	.LBE1062:
1103:Veno-Echo.cpp ****                 {
 2911              		.loc 20 1103 23 view .LVU762
 2912 00f2 284A     		ldr	r2, .L181+40
1103:Veno-Echo.cpp ****                 {
 2913              		.loc 20 1103 17 view .LVU763
 2914 00f4 DFED286A 		vldr.32	s13, .L181+44
1103:Veno-Echo.cpp ****                 {
 2915              		.loc 20 1103 23 view .LVU764
 2916 00f8 92ED007A 		vldr.32	s14, [r2]
 2917 00fc 37EEC77A 		vsub.f32	s14, s15, s14
 2918              	.LBB1065:
 2919              	.LBB1064:
 2920              		.loc 21 76 31 view .LVU765
 2921 0100 B0EEC77A 		vabs.f32	s14, s14
 2922              	.LBE1064:
 2923              	.LBE1065:
1103:Veno-Echo.cpp ****                 {
 2924              		.loc 20 1103 17 view .LVU766
 2925 0104 B4EEE67A 		vcmpe.f32	s14, s13
 2926 0108 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2927 010c C3DD     		ble	.L151
1105:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 145


 2928              		.loc 20 1105 21 is_stmt 1 view .LVU767
1105:Veno-Echo.cpp ****                 }
 2929              		.loc 20 1105 37 is_stmt 0 view .LVU768
 2930 010e 0122     		movs	r2, #1
 2931 0110 1A70     		strb	r2, [r3]
 2932              	.L165:
1110:Veno-Echo.cpp ****         {
 2933              		.loc 20 1110 9 is_stmt 1 view .LVU769
 2934              	.LBB1066:
 2935              	.LBB1067:
1112:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 2936              		.loc 20 1112 13 view .LVU770
 2937              	.LVL136:
1113:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2938              		.loc 20 1113 13 view .LVU771
1113:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2939              		.loc 20 1113 29 is_stmt 0 view .LVU772
 2940 0112 B0EE670A 		vmov.f32	s0, s15
 2941 0116 9FED211A 		vldr.32	s2, .L181+48
 2942 011a DFED210A 		vldr.32	s1, .L181+52
 2943 011e 0120     		movs	r0, #1
 2944 0120 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2945              	.LVL137:
1113:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2946              		.loc 20 1113 29 view .LVU773
 2947 0124 B0EE408A 		vmov.f32	s16, s0
 2948              	.LVL138:
1114:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 2949              		.loc 20 1114 13 is_stmt 1 view .LVU774
1114:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 2950              		.loc 20 1114 26 is_stmt 0 view .LVU775
 2951 0128 1E48     		ldr	r0, .L181+56
 2952 012a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2953              	.LVL139:
1115:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2954              		.loc 20 1115 13 is_stmt 1 view .LVU776
1115:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2955              		.loc 20 1115 26 is_stmt 0 view .LVU777
 2956 012e 1E48     		ldr	r0, .L181+60
 2957 0130 B0EE480A 		vmov.f32	s0, s16
 2958 0134 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2959              	.LVL140:
1116:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2960              		.loc 20 1116 13 is_stmt 1 view .LVU778
1116:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2961              		.loc 20 1116 31 is_stmt 0 view .LVU779
 2962 0138 B0EE480A 		vmov.f32	s0, s16
 2963 013c 1B48     		ldr	r0, .L181+64
 2964 013e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2965              	.LVL141:
1117:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2966              		.loc 20 1117 13 is_stmt 1 view .LVU780
1117:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2967              		.loc 20 1117 31 is_stmt 0 view .LVU781
 2968 0142 B0EE480A 		vmov.f32	s0, s16
 2969 0146 1A48     		ldr	r0, .L181+68
 2970 0148 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 146


 2971              	.LVL142:
1118:Veno-Echo.cpp ****         }
 2972              		.loc 20 1118 13 is_stmt 1 view .LVU782
1118:Veno-Echo.cpp ****         }
 2973              		.loc 20 1118 35 is_stmt 0 view .LVU783
 2974 014c 194B     		ldr	r3, .L181+72
 2975 014e 83ED058A 		vstr.32	s16, [r3, #20]
 2976              	.LBE1067:
 2977              	.LBE1066:
 2978              	.LBE1069:
 2979              	.LBE1075:
1121:Veno-Echo.cpp **** 
 2980              		.loc 20 1121 1 view .LVU784
 2981 0152 BDEC028B 		vldm	sp!, {d8}
 2982              		.cfi_remember_state
 2983              		.cfi_restore 80
 2984              		.cfi_restore 81
 2985              		.cfi_def_cfa_offset 8
 2986              	.LVL143:
1121:Veno-Echo.cpp **** 
 2987              		.loc 20 1121 1 view .LVU785
 2988 0156 10BD     		pop	{r4, pc}
 2989              	.LVL144:
 2990              	.L179:
 2991              		.cfi_restore_state
 2992              	.LBB1076:
 2993              	.LBB1070:
 2994              	.LBB1057:
 2995              	.LBB1045:
1832:Veno-Echo.cpp ****     }
 2996              		.loc 20 1832 16 view .LVU786
 2997 0158 B0EE470A 		vmov.f32	s0, s14
 2998              	.LVL145:
1832:Veno-Echo.cpp ****     }
 2999              		.loc 20 1832 16 view .LVU787
 3000 015c 7DE7     		b	.L160
 3001              	.LVL146:
 3002              	.L180:
1832:Veno-Echo.cpp ****     }
 3003              		.loc 20 1832 16 view .LVU788
 3004              	.LBE1045:
 3005              	.LBE1057:
 3006              	.LBB1058:
 3007              	.LBB1056:
 3008 015e B0EE470A 		vmov.f32	s0, s14
 3009              	.LVL147:
1832:Veno-Echo.cpp ****     }
 3010              		.loc 20 1832 16 view .LVU789
 3011 0162 BFE7     		b	.L158
 3012              	.LVL148:
 3013              	.L175:
1832:Veno-Echo.cpp ****     }
 3014              		.loc 20 1832 16 view .LVU790
 3015 0164 054B     		ldr	r3, .L181+16
 3016 0166 D3ED007A 		vldr.32	s15, [r3]
 3017              	.LVL149:
1832:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 147


 3018              		.loc 20 1832 16 view .LVU791
 3019 016a 64E7     		b	.L154
 3020              	.L182:
 3021              		.align	2
 3022              	.L181:
 3023 016c 18000000 		.word	.LANCHOR4+24
 3024 0170 00000000 		.word	.LANCHOR7
 3025 0174 00000000 		.word	.LANCHOR39
 3026 0178 00000000 		.word	.LANCHOR40
 3027 017c 00000000 		.word	.LANCHOR41
 3028 0180 00000000 		.word	.LANCHOR42
 3029 0184 00000000 		.word	0
 3030 0188 00000000 		.word	.LANCHOR43
 3031 018c 6F12033D 		.word	1023611503
 3032 0190 00000000 		.word	.LANCHOR44
 3033 0194 00000000 		.word	.LANCHOR45
 3034 0198 0AD7A33B 		.word	1000593162
 3035 019c 00803B46 		.word	1178304512
 3036 01a0 0080BB44 		.word	1153138688
 3037 01a4 00000000 		.word	.LANCHOR46
 3038 01a8 00000000 		.word	.LANCHOR47
 3039 01ac 00000000 		.word	.LANCHOR48
 3040 01b0 00000000 		.word	.LANCHOR49
 3041 01b4 00000000 		.word	.LANCHOR16
 3042              	.LBE1056:
 3043              	.LBE1058:
 3044              	.LBE1070:
 3045              	.LBE1076:
 3046              		.cfi_endproc
 3047              	.LFE4319:
 3049              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3050              		.align	1
 3051              		.p2align 2,,3
 3052              		.global	_Z16Update_drywet_CVv
 3053              		.syntax unified
 3054              		.thumb
 3055              		.thumb_func
 3056              		.fpu fpv5-d16
 3058              	_Z16Update_drywet_CVv:
 3059              	.LFB4320:
1124:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3060              		.loc 20 1124 1 is_stmt 1 view -0
 3061              		.cfi_startproc
 3062              		@ args = 0, pretend = 0, frame = 0
 3063              		@ frame_needed = 0, uses_anonymous_args = 0
1125:Veno-Echo.cpp **** }
 3064              		.loc 20 1125 5 view .LVU793
1124:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3065              		.loc 20 1124 1 is_stmt 0 view .LVU794
 3066 0000 08B5     		push	{r3, lr}
 3067              		.cfi_def_cfa_offset 8
 3068              		.cfi_offset 3, -8
 3069              		.cfi_offset 14, -4
1125:Veno-Echo.cpp **** }
 3070              		.loc 20 1125 32 view .LVU795
 3071 0002 0421     		movs	r1, #4
 3072 0004 0348     		ldr	r0, .L185
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 148


 3073 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3074              	.LVL150:
1125:Veno-Echo.cpp **** }
 3075              		.loc 20 1125 15 view .LVU796
 3076 000a 034B     		ldr	r3, .L185+4
 3077 000c 83ED000A 		vstr.32	s0, [r3]
1126:Veno-Echo.cpp **** 
 3078              		.loc 20 1126 1 view .LVU797
 3079 0010 08BD     		pop	{r3, pc}
 3080              	.L186:
 3081 0012 00BF     		.align	2
 3082              	.L185:
 3083 0014 18000000 		.word	.LANCHOR4+24
 3084 0018 00000000 		.word	.LANCHOR50
 3085              		.cfi_endproc
 3086              	.LFE4320:
 3088              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3089              		.align	1
 3090              		.p2align 2,,3
 3091              		.global	_Z13Update_drywetv
 3092              		.syntax unified
 3093              		.thumb
 3094              		.thumb_func
 3095              		.fpu fpv5-d16
 3097              	_Z13Update_drywetv:
 3098              	.LFB4321:
1129:Veno-Echo.cpp ****     static bool lastShift{};
 3099              		.loc 20 1129 1 is_stmt 1 view -0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 0
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
1130:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3103              		.loc 20 1130 5 view .LVU799
1131:Veno-Echo.cpp ****     static bool Res_pickup{};
 3104              		.loc 20 1131 5 view .LVU800
1132:Veno-Echo.cpp **** 
 3105              		.loc 20 1132 5 view .LVU801
1134:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3106              		.loc 20 1134 5 view .LVU802
1139:Veno-Echo.cpp **** 
 3107              		.loc 20 1139 5 view .LVU803
1129:Veno-Echo.cpp ****     static bool lastShift{};
 3108              		.loc 20 1129 1 is_stmt 0 view .LVU804
 3109 0000 10B5     		push	{r4, lr}
 3110              		.cfi_def_cfa_offset 8
 3111              		.cfi_offset 4, -8
 3112              		.cfi_offset 14, -4
1139:Veno-Echo.cpp **** 
 3113              		.loc 20 1139 44 view .LVU805
 3114 0002 0421     		movs	r1, #4
 3115 0004 7648     		ldr	r0, .L220+24
1129:Veno-Echo.cpp ****     static bool lastShift{};
 3116              		.loc 20 1129 1 view .LVU806
 3117 0006 2DED028B 		vpush.64	{d8}
 3118              		.cfi_def_cfa_offset 16
 3119              		.cfi_offset 80, -16
 3120              		.cfi_offset 81, -12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 149


1139:Veno-Echo.cpp **** 
 3121              		.loc 20 1139 44 view .LVU807
 3122 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3123              	.LVL151:
 3124              	.LBB1077:
1141:Veno-Echo.cpp ****     {   
 3125              		.loc 20 1141 9 view .LVU808
 3126 000e 754B     		ldr	r3, .L220+28
 3127              	.LBE1077:
1139:Veno-Echo.cpp **** 
 3128              		.loc 20 1139 47 view .LVU809
 3129 0010 F7EE007A 		vmov.f32	s15, #1.0e+0
 3130              	.LBB1107:
 3131              	.LBB1078:
1146:Veno-Echo.cpp ****         {
 3132              		.loc 20 1146 19 view .LVU810
 3133 0014 744A     		ldr	r2, .L220+32
 3134              	.LBE1078:
1141:Veno-Echo.cpp ****     {   
 3135              		.loc 20 1141 5 view .LVU811
 3136 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3137              	.LBE1107:
1139:Veno-Echo.cpp **** 
 3138              		.loc 20 1139 47 view .LVU812
 3139 0018 37EEC00A 		vsub.f32	s0, s15, s0
 3140              	.LVL152:
1141:Veno-Echo.cpp ****     {   
 3141              		.loc 20 1141 5 is_stmt 1 view .LVU813
 3142              	.LBB1108:
 3143 001c 6BBB     		cbnz	r3, .L188
 3144              	.LBB1095:
1144:Veno-Echo.cpp **** 
 3145              		.loc 20 1144 9 view .LVU814
1146:Veno-Echo.cpp ****         {
 3146              		.loc 20 1146 9 view .LVU815
 3147 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3148 0020 0029     		cmp	r1, #0
 3149 0022 37D0     		beq	.L189
1148:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3150              		.loc 20 1148 13 view .LVU816
1150:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3151              		.loc 20 1150 27 is_stmt 0 view .LVU817
 3152 0024 7148     		ldr	r0, .L220+36
1151:Veno-Echo.cpp ****         } 
 3153              		.loc 20 1151 24 view .LVU818
 3154 0026 7249     		ldr	r1, .L220+40
1148:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3155              		.loc 20 1148 23 view .LVU819
 3156 0028 1370     		strb	r3, [r2]
1150:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3157              		.loc 20 1150 13 is_stmt 1 view .LVU820
1150:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3158              		.loc 20 1150 27 is_stmt 0 view .LVU821
 3159 002a 0370     		strb	r3, [r0]
1151:Veno-Echo.cpp ****         } 
 3160              		.loc 20 1151 13 is_stmt 1 view .LVU822
1151:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 150


 3161              		.loc 20 1151 24 is_stmt 0 view .LVU823
 3162 002c 81ED000A 		vstr.32	s0, [r1]
 3163              	.L190:
1167:Veno-Echo.cpp **** 
 3164              		.loc 20 1167 9 is_stmt 1 view .LVU824
 3165              	.LVL153:
1169:Veno-Echo.cpp ****         {
 3166              		.loc 20 1169 9 view .LVU825
1177:Veno-Echo.cpp ****         }
 3167              		.loc 20 1177 13 view .LVU826
 3168              	.LBB1079:
 3169              	.LBI1079:
1825:Veno-Echo.cpp **** {
 3170              		.loc 20 1825 7 view .LVU827
 3171              	.LBB1080:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3172              		.loc 20 1827 5 view .LVU828
1828:Veno-Echo.cpp **** 
 3173              		.loc 20 1828 5 view .LVU829
 3174              	.LBE1080:
 3175              	.LBE1079:
1177:Veno-Echo.cpp ****         }
 3176              		.loc 20 1177 37 is_stmt 0 view .LVU830
 3177 0030 704B     		ldr	r3, .L220+44
 3178              	.LBB1082:
 3179              	.LBB1081:
1828:Veno-Echo.cpp **** 
 3180              		.loc 20 1828 12 view .LVU831
 3181 0032 9FED710A 		vldr.32	s0, .L220+48
 3182              	.LVL154:
1828:Veno-Echo.cpp **** 
 3183              		.loc 20 1828 12 view .LVU832
 3184 0036 D3ED007A 		vldr.32	s15, [r3]
 3185 003a 77EE807A 		vadd.f32	s15, s15, s0
 3186              	.LVL155:
1830:Veno-Echo.cpp ****     {
 3187              		.loc 20 1830 5 is_stmt 1 view .LVU833
 3188 003e F4EEC07A 		vcmpe.f32	s15, s0
 3189 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3190 0046 00F1AF80 		bmi	.L207
1835:Veno-Echo.cpp ****     {
 3191              		.loc 20 1835 5 view .LVU834
 3192 004a B7EE007A 		vmov.f32	s14, #1.0e+0
1835:Veno-Echo.cpp ****     {
 3193              		.loc 20 1835 5 is_stmt 0 view .LVU835
 3194 004e F4EEC77A 		vcmpe.f32	s15, s14
 3195 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3196 0056 40F3B280 		ble	.L213
 3197              	.LVL156:
 3198              	.L198:
1835:Veno-Echo.cpp ****     {
 3199              		.loc 20 1835 5 view .LVU836
 3200              	.LBE1081:
 3201              	.LBE1082:
1184:Veno-Echo.cpp ****         }
 3202              		.loc 20 1184 26 view .LVU837
 3203 005a B7EE000A 		vmov.f32	s0, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 151


 3204              	.L197:
 3205              	.LVL157:
1196:Veno-Echo.cpp ****     }
 3206              		.loc 20 1196 9 is_stmt 1 view .LVU838
 3207              	.LBB1083:
 3208              	.LBI1083:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3209              		.loc 23 135 13 view .LVU839
 3210              	.LBB1084:
 3211              		.loc 23 137 5 view .LVU840
 3212              		.loc 23 137 9 is_stmt 0 view .LVU841
 3213 005e 674B     		ldr	r3, .L220+52
 3214 0060 9FED677A 		vldr.32	s14, .L220+56
 3215 0064 D3ED007A 		vldr.32	s15, [r3]
 3216              		.loc 23 137 24 view .LVU842
 3217 0068 30EE670A 		vsub.f32	s0, s0, s15
 3218              	.LVL158:
 3219              		.loc 23 137 24 view .LVU843
 3220              	.LBE1084:
 3221              	.LBE1083:
 3222              	.LBE1095:
 3223              	.LBE1108:
1235:Veno-Echo.cpp **** 
 3224              		.loc 20 1235 1 view .LVU844
 3225 006c BDEC028B 		vldm	sp!, {d8}
 3226              		.cfi_remember_state
 3227              		.cfi_restore 80
 3228              		.cfi_restore 81
 3229              		.cfi_def_cfa_offset 8
 3230              	.LBB1109:
 3231              	.LBB1096:
 3232              	.LBB1086:
 3233              	.LBB1085:
 3234              		.loc 23 137 9 view .LVU845
 3235 0070 E0EE077A 		vfma.f32	s15, s0, s14
 3236 0074 C3ED007A 		vstr.32	s15, [r3]
 3237              	.LBE1085:
 3238              	.LBE1086:
 3239              	.LBE1096:
 3240              	.LBE1109:
1235:Veno-Echo.cpp **** 
 3241              		.loc 20 1235 1 view .LVU846
 3242 0078 10BD     		pop	{r4, pc}
 3243              	.LVL159:
 3244              	.L188:
 3245              		.cfi_restore_state
 3246              	.LBB1110:
 3247              	.LBB1097:
1200:Veno-Echo.cpp **** 
 3248              		.loc 20 1200 9 is_stmt 1 view .LVU847
1202:Veno-Echo.cpp ****         {
 3249              		.loc 20 1202 9 view .LVU848
 3250 007a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3251 007c 002B     		cmp	r3, #0
 3252 007e 4BD1     		bne	.L202
1204:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3253              		.loc 20 1204 13 view .LVU849
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 152


1204:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3254              		.loc 20 1204 23 is_stmt 0 view .LVU850
 3255 0080 0124     		movs	r4, #1
1205:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3256              		.loc 20 1205 24 view .LVU851
 3257 0082 6048     		ldr	r0, .L220+60
1206:Veno-Echo.cpp ****         }
 3258              		.loc 20 1206 21 view .LVU852
 3259 0084 6049     		ldr	r1, .L220+64
1204:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3260              		.loc 20 1204 23 view .LVU853
 3261 0086 1470     		strb	r4, [r2]
1205:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3262              		.loc 20 1205 13 is_stmt 1 view .LVU854
1205:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3263              		.loc 20 1205 24 is_stmt 0 view .LVU855
 3264 0088 0370     		strb	r3, [r0]
1206:Veno-Echo.cpp ****         }
 3265              		.loc 20 1206 13 is_stmt 1 view .LVU856
1206:Veno-Echo.cpp ****         }
 3266              		.loc 20 1206 21 is_stmt 0 view .LVU857
 3267 008a 81ED000A 		vstr.32	s0, [r1]
 3268              	.L187:
1206:Veno-Echo.cpp ****         }
 3269              		.loc 20 1206 21 view .LVU858
 3270              	.LBE1097:
 3271              	.LBE1110:
1235:Veno-Echo.cpp **** 
 3272              		.loc 20 1235 1 view .LVU859
 3273 008e BDEC028B 		vldm	sp!, {d8}
 3274              		.cfi_remember_state
 3275              		.cfi_restore 80
 3276              		.cfi_restore 81
 3277              		.cfi_def_cfa_offset 8
 3278 0092 10BD     		pop	{r4, pc}
 3279              	.L189:
 3280              		.cfi_restore_state
 3281              	.LBB1111:
 3282              	.LBB1104:
1156:Veno-Echo.cpp ****             {
 3283              		.loc 20 1156 13 is_stmt 1 view .LVU860
1156:Veno-Echo.cpp ****             {
 3284              		.loc 20 1156 16 is_stmt 0 view .LVU861
 3285 0094 554B     		ldr	r3, .L220+36
1156:Veno-Echo.cpp ****             {
 3286              		.loc 20 1156 13 view .LVU862
 3287 0096 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3288 0098 7AB9     		cbnz	r2, .L191
1159:Veno-Echo.cpp ****                 {
 3289              		.loc 20 1159 17 is_stmt 1 view .LVU863
 3290              	.LVL160:
 3291              	.LBB1087:
 3292              	.LBI1087:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3293              		.loc 21 75 3 view .LVU864
 3294              	.LBB1088:
 3295              		.loc 21 76 5 view .LVU865
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 153


 3296              		.loc 21 76 5 is_stmt 0 view .LVU866
 3297              	.LBE1088:
 3298              	.LBE1087:
1159:Veno-Echo.cpp ****                 {
 3299              		.loc 20 1159 23 view .LVU867
 3300 009a 554A     		ldr	r2, .L220+40
1159:Veno-Echo.cpp ****                 {
 3301              		.loc 20 1159 17 view .LVU868
 3302 009c 9FED5B7A 		vldr.32	s14, .L220+68
1159:Veno-Echo.cpp ****                 {
 3303              		.loc 20 1159 23 view .LVU869
 3304 00a0 D2ED007A 		vldr.32	s15, [r2]
 3305 00a4 70EE677A 		vsub.f32	s15, s0, s15
 3306              	.LBB1090:
 3307              	.LBB1089:
 3308              		.loc 21 76 31 view .LVU870
 3309 00a8 F0EEE77A 		vabs.f32	s15, s15
 3310              	.LBE1089:
 3311              	.LBE1090:
1159:Veno-Echo.cpp ****                 {
 3312              		.loc 20 1159 17 view .LVU871
 3313 00ac F4EEC77A 		vcmpe.f32	s15, s14
 3314 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3315 00b4 BCDD     		ble	.L190
1161:Veno-Echo.cpp ****                 }
 3316              		.loc 20 1161 21 is_stmt 1 view .LVU872
1161:Veno-Echo.cpp ****                 }
 3317              		.loc 20 1161 35 is_stmt 0 view .LVU873
 3318 00b6 0122     		movs	r2, #1
 3319 00b8 1A70     		strb	r2, [r3]
 3320              	.L191:
1167:Veno-Echo.cpp **** 
 3321              		.loc 20 1167 9 is_stmt 1 view .LVU874
 3322              	.LVL161:
1169:Veno-Echo.cpp ****         {
 3323              		.loc 20 1169 9 view .LVU875
1171:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3324              		.loc 20 1171 13 view .LVU876
 3325              	.LBB1091:
 3326              	.LBI1091:
1825:Veno-Echo.cpp **** {
 3327              		.loc 20 1825 7 view .LVU877
 3328              	.LBB1092:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3329              		.loc 20 1827 5 view .LVU878
1828:Veno-Echo.cpp **** 
 3330              		.loc 20 1828 5 view .LVU879
1828:Veno-Echo.cpp **** 
 3331              		.loc 20 1828 12 is_stmt 0 view .LVU880
 3332 00ba 9FED4F7A 		vldr.32	s14, .L220+48
 3333 00be 70EE077A 		vadd.f32	s15, s0, s14
 3334              	.LVL162:
1830:Veno-Echo.cpp ****     {
 3335              		.loc 20 1830 5 is_stmt 1 view .LVU881
 3336 00c2 F4EEC77A 		vcmpe.f32	s15, s14
 3337 00c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3338 00ca 70D4     		bmi	.L218
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 154


1835:Veno-Echo.cpp ****     {
 3339              		.loc 20 1835 5 view .LVU882
 3340 00cc B7EE007A 		vmov.f32	s14, #1.0e+0
 3341 00d0 F4EEC77A 		vcmpe.f32	s15, s14
 3342 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3343 00d8 6EDD     		ble	.L219
1837:Veno-Echo.cpp ****     }
 3344              		.loc 20 1837 16 is_stmt 0 view .LVU883
 3345 00da F0EE477A 		vmov.f32	s15, s14
 3346              	.LVL163:
1837:Veno-Echo.cpp ****     }
 3347              		.loc 20 1837 16 view .LVU884
 3348 00de B7EE006B 		vmov.f64	d6, #1.0e+0
 3349              	.L193:
 3350              	.LVL164:
1840:Veno-Echo.cpp **** }
 3351              		.loc 20 1840 5 is_stmt 1 view .LVU885
1840:Veno-Echo.cpp **** }
 3352              		.loc 20 1840 5 is_stmt 0 view .LVU886
 3353              	.LBE1092:
 3354              	.LBE1091:
1172:Veno-Echo.cpp ****         }
 3355              		.loc 20 1172 13 is_stmt 1 view .LVU887
1172:Veno-Echo.cpp ****         }
 3356              		.loc 20 1172 25 is_stmt 0 view .LVU888
 3357 00e2 444B     		ldr	r3, .L220+44
 3358 00e4 83ED000A 		vstr.32	s0, [r3]
 3359              	.LVL165:
 3360              	.L194:
1180:Veno-Echo.cpp **** 
 3361              		.loc 20 1180 9 is_stmt 1 view .LVU889
1182:Veno-Echo.cpp ****         {
 3362              		.loc 20 1182 9 view .LVU890
 3363 00e8 9FED375B 		vldr.64	d5, .L220
 3364 00ec B4EEC56B 		vcmpe.f64	d6, d5
 3365 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3366 00f4 B1DA     		bge	.L198
1186:Veno-Echo.cpp ****         {
 3367              		.loc 20 1186 14 view .LVU891
 3368 00f6 9FED365B 		vldr.64	d5, .L220+8
 3369 00fa B4EEC56B 		vcmpe.f64	d6, d5
 3370 00fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3371 0102 51D9     		bls	.L207
1192:Veno-Echo.cpp ****         }
 3372              		.loc 20 1192 13 view .LVU892
1192:Veno-Echo.cpp ****         }
 3373              		.loc 20 1192 33 is_stmt 0 view .LVU893
 3374 0104 B0EE670A 		vmov.f32	s0, s15
 3375 0108 0020     		movs	r0, #0
 3376 010a B7EE001A 		vmov.f32	s2, #1.0e+0
1192:Veno-Echo.cpp ****         }
 3377              		.loc 20 1192 33 view .LVU894
 3378 010e DFED3A0A 		vldr.32	s1, .L220+48
 3379 0112 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3380              	.LVL166:
1192:Veno-Echo.cpp ****         }
 3381              		.loc 20 1192 33 view .LVU895
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 155


 3382 0116 A2E7     		b	.L197
 3383              	.LVL167:
 3384              	.L202:
1192:Veno-Echo.cpp ****         }
 3385              		.loc 20 1192 33 view .LVU896
 3386              	.LBE1104:
 3387              	.LBB1105:
1211:Veno-Echo.cpp ****             {
 3388              		.loc 20 1211 13 is_stmt 1 view .LVU897
1211:Veno-Echo.cpp ****             {
 3389              		.loc 20 1211 16 is_stmt 0 view .LVU898
 3390 0118 3A4B     		ldr	r3, .L220+60
1211:Veno-Echo.cpp ****             {
 3391              		.loc 20 1211 13 view .LVU899
 3392 011a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3393 011c 7AB9     		cbnz	r2, .L204
1213:Veno-Echo.cpp ****                 {
 3394              		.loc 20 1213 17 is_stmt 1 view .LVU900
 3395              	.LVL168:
 3396              	.LBB1098:
 3397              	.LBI1098:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3398              		.loc 21 75 3 view .LVU901
 3399              	.LBB1099:
 3400              		.loc 21 76 5 view .LVU902
 3401              		.loc 21 76 5 is_stmt 0 view .LVU903
 3402              	.LBE1099:
 3403              	.LBE1098:
1213:Veno-Echo.cpp ****                 {
 3404              		.loc 20 1213 23 view .LVU904
 3405 011e 3A4A     		ldr	r2, .L220+64
1213:Veno-Echo.cpp ****                 {
 3406              		.loc 20 1213 17 view .LVU905
 3407 0120 9FED3A7A 		vldr.32	s14, .L220+68
1213:Veno-Echo.cpp ****                 {
 3408              		.loc 20 1213 23 view .LVU906
 3409 0124 D2ED007A 		vldr.32	s15, [r2]
 3410 0128 70EE677A 		vsub.f32	s15, s0, s15
 3411              	.LBB1101:
 3412              	.LBB1100:
 3413              		.loc 21 76 31 view .LVU907
 3414 012c F0EEE77A 		vabs.f32	s15, s15
 3415              	.LBE1100:
 3416              	.LBE1101:
1213:Veno-Echo.cpp ****                 {
 3417              		.loc 20 1213 17 view .LVU908
 3418 0130 F4EEC77A 		vcmpe.f32	s15, s14
 3419 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3420 0138 A9DD     		ble	.L187
1215:Veno-Echo.cpp ****                 }
 3421              		.loc 20 1215 21 is_stmt 1 view .LVU909
1215:Veno-Echo.cpp ****                 }
 3422              		.loc 20 1215 32 is_stmt 0 view .LVU910
 3423 013a 0122     		movs	r2, #1
 3424 013c 1A70     		strb	r2, [r3]
 3425              	.L204:
1220:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 156


 3426              		.loc 20 1220 9 is_stmt 1 view .LVU911
 3427              	.LBB1102:
 3428              	.LBB1103:
1222:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3429              		.loc 20 1222 13 view .LVU912
 3430              	.LVL169:
1223:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3431              		.loc 20 1223 13 view .LVU913
1223:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3432              		.loc 20 1223 24 is_stmt 0 view .LVU914
 3433 013e B6EE001A 		vmov.f32	s2, #5.0e-1
 3434 0142 DFED2D0A 		vldr.32	s1, .L220+48
 3435 0146 0020     		movs	r0, #0
 3436 0148 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3437              	.LVL170:
1223:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3438              		.loc 20 1223 24 view .LVU915
 3439 014c B0EE408A 		vmov.f32	s16, s0
 3440              	.LVL171:
1224:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3441              		.loc 20 1224 13 is_stmt 1 view .LVU916
1224:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3442              		.loc 20 1224 25 is_stmt 0 view .LVU917
 3443 0150 2F48     		ldr	r0, .L220+72
 3444 0152 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3445              	.LVL172:
1225:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3446              		.loc 20 1225 13 is_stmt 1 view .LVU918
1225:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3447              		.loc 20 1225 25 is_stmt 0 view .LVU919
 3448 0156 2F48     		ldr	r0, .L220+76
 3449 0158 B0EE480A 		vmov.f32	s0, s16
 3450 015c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3451              	.LVL173:
1226:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3452              		.loc 20 1226 13 is_stmt 1 view .LVU920
1226:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3453              		.loc 20 1226 25 is_stmt 0 view .LVU921
 3454 0160 B0EE480A 		vmov.f32	s0, s16
 3455 0164 2C48     		ldr	r0, .L220+80
 3456 0166 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3457              	.LVL174:
1227:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3458              		.loc 20 1227 13 is_stmt 1 view .LVU922
1227:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3459              		.loc 20 1227 25 is_stmt 0 view .LVU923
 3460 016a B0EE480A 		vmov.f32	s0, s16
 3461 016e 2B48     		ldr	r0, .L220+84
 3462 0170 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3463              	.LVL175:
1228:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3464              		.loc 20 1228 13 is_stmt 1 view .LVU924
1228:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3465              		.loc 20 1228 30 is_stmt 0 view .LVU925
 3466 0174 B0EE480A 		vmov.f32	s0, s16
 3467 0178 2948     		ldr	r0, .L220+88
 3468 017a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 157


 3469              	.LVL176:
1229:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3470              		.loc 20 1229 13 is_stmt 1 view .LVU926
1229:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3471              		.loc 20 1229 30 is_stmt 0 view .LVU927
 3472 017e B0EE480A 		vmov.f32	s0, s16
 3473 0182 2848     		ldr	r0, .L220+92
 3474 0184 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3475              	.LVL177:
1230:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3476              		.loc 20 1230 13 is_stmt 1 view .LVU928
1230:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3477              		.loc 20 1230 30 is_stmt 0 view .LVU929
 3478 0188 B0EE480A 		vmov.f32	s0, s16
 3479 018c 2648     		ldr	r0, .L220+96
 3480 018e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3481              	.LVL178:
1231:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3482              		.loc 20 1231 13 is_stmt 1 view .LVU930
1231:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3483              		.loc 20 1231 30 is_stmt 0 view .LVU931
 3484 0192 B0EE480A 		vmov.f32	s0, s16
 3485 0196 2548     		ldr	r0, .L220+100
 3486 0198 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3487              	.LVL179:
1232:Veno-Echo.cpp ****         }
 3488              		.loc 20 1232 13 is_stmt 1 view .LVU932
1232:Veno-Echo.cpp ****         }
 3489              		.loc 20 1232 35 is_stmt 0 view .LVU933
 3490 019c 244B     		ldr	r3, .L220+104
 3491 019e 83ED068A 		vstr.32	s16, [r3, #24]
 3492              	.LBE1103:
 3493              	.LBE1102:
 3494              	.LBE1105:
 3495              	.LBE1111:
1235:Veno-Echo.cpp **** 
 3496              		.loc 20 1235 1 view .LVU934
 3497 01a2 BDEC028B 		vldm	sp!, {d8}
 3498              		.cfi_remember_state
 3499              		.cfi_restore 80
 3500              		.cfi_restore 81
 3501              		.cfi_def_cfa_offset 8
 3502              	.LVL180:
1235:Veno-Echo.cpp **** 
 3503              		.loc 20 1235 1 view .LVU935
 3504 01a6 10BD     		pop	{r4, pc}
 3505              	.LVL181:
 3506              	.L207:
 3507              		.cfi_restore_state
 3508              	.LBB1112:
 3509              	.LBB1106:
1188:Veno-Echo.cpp ****         }
 3510              		.loc 20 1188 26 view .LVU936
 3511 01a8 9FED130A 		vldr.32	s0, .L220+48
 3512 01ac 57E7     		b	.L197
 3513              	.LVL182:
 3514              	.L218:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 158


 3515              	.LBB1094:
 3516              	.LBB1093:
1188:Veno-Echo.cpp ****         }
 3517              		.loc 20 1188 26 view .LVU937
 3518 01ae 9FED0A6B 		vldr.64	d6, .L220+16
1832:Veno-Echo.cpp ****     }
 3519              		.loc 20 1832 16 view .LVU938
 3520 01b2 F0EE477A 		vmov.f32	s15, s14
 3521              	.LVL183:
1832:Veno-Echo.cpp ****     }
 3522              		.loc 20 1832 16 view .LVU939
 3523 01b6 94E7     		b	.L193
 3524              	.LVL184:
 3525              	.L219:
1832:Veno-Echo.cpp ****     }
 3526              		.loc 20 1832 16 view .LVU940
 3527 01b8 B7EEE76A 		vcvt.f64.f32	d6, s15
 3528 01bc 91E7     		b	.L193
 3529              	.LVL185:
 3530              	.L213:
1832:Veno-Echo.cpp ****     }
 3531              		.loc 20 1832 16 view .LVU941
 3532 01be B7EEE76A 		vcvt.f64.f32	d6, s15
 3533 01c2 91E7     		b	.L194
 3534              	.L221:
 3535 01c4 AFF30080 		.align	3
 3536              	.L220:
 3537 01c8 5C8FC2F5 		.word	4123168604
 3538 01cc 285CEF3F 		.word	1072651304
 3539 01d0 7B14AE47 		.word	1202590843
 3540 01d4 E17A943F 		.word	1066695393
 3541 01d8 00000000 		.word	0
 3542 01dc 00000000 		.word	0
 3543 01e0 18000000 		.word	.LANCHOR4+24
 3544 01e4 00000000 		.word	.LANCHOR7
 3545 01e8 00000000 		.word	.LANCHOR51
 3546 01ec 00000000 		.word	.LANCHOR52
 3547 01f0 00000000 		.word	.LANCHOR53
 3548 01f4 00000000 		.word	.LANCHOR54
 3549 01f8 00000000 		.word	0
 3550 01fc 00000000 		.word	.LANCHOR55
 3551 0200 6F12833C 		.word	1015222895
 3552 0204 00000000 		.word	.LANCHOR56
 3553 0208 00000000 		.word	.LANCHOR57
 3554 020c 0AD7A33B 		.word	1000593162
 3555 0210 00000000 		.word	.LANCHOR46
 3556 0214 00000000 		.word	.LANCHOR47
 3557 0218 00000000 		.word	.LANCHOR34
 3558 021c 00000000 		.word	.LANCHOR35
 3559 0220 00000000 		.word	.LANCHOR48
 3560 0224 00000000 		.word	.LANCHOR49
 3561 0228 00000000 		.word	.LANCHOR36
 3562 022c 00000000 		.word	.LANCHOR37
 3563 0230 00000000 		.word	.LANCHOR16
 3564              	.LBE1093:
 3565              	.LBE1094:
 3566              	.LBE1106:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 159


 3567              	.LBE1112:
 3568              		.cfi_endproc
 3569              	.LFE4321:
 3571              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3572              		.align	1
 3573              		.p2align 2,,3
 3574              		.global	_Z15Update_width_CVv
 3575              		.syntax unified
 3576              		.thumb
 3577              		.thumb_func
 3578              		.fpu fpv5-d16
 3580              	_Z15Update_width_CVv:
 3581              	.LFB4322:
1238:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3582              		.loc 20 1238 1 is_stmt 1 view -0
 3583              		.cfi_startproc
 3584              		@ args = 0, pretend = 0, frame = 0
 3585              		@ frame_needed = 0, uses_anonymous_args = 0
1239:Veno-Echo.cpp **** }
 3586              		.loc 20 1239 5 view .LVU943
1238:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3587              		.loc 20 1238 1 is_stmt 0 view .LVU944
 3588 0000 08B5     		push	{r3, lr}
 3589              		.cfi_def_cfa_offset 8
 3590              		.cfi_offset 3, -8
 3591              		.cfi_offset 14, -4
1239:Veno-Echo.cpp **** }
 3592              		.loc 20 1239 30 view .LVU945
 3593 0002 0521     		movs	r1, #5
 3594 0004 0348     		ldr	r0, .L224
 3595 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3596              	.LVL186:
1239:Veno-Echo.cpp **** }
 3597              		.loc 20 1239 13 view .LVU946
 3598 000a 034B     		ldr	r3, .L224+4
 3599 000c 83ED000A 		vstr.32	s0, [r3]
1240:Veno-Echo.cpp **** 
 3600              		.loc 20 1240 1 view .LVU947
 3601 0010 08BD     		pop	{r3, pc}
 3602              	.L225:
 3603 0012 00BF     		.align	2
 3604              	.L224:
 3605 0014 18000000 		.word	.LANCHOR4+24
 3606 0018 00000000 		.word	.LANCHOR58
 3607              		.cfi_endproc
 3608              	.LFE4322:
 3610              		.section	.text._Z12Update_widthv,"ax",%progbits
 3611              		.align	1
 3612              		.p2align 2,,3
 3613              		.global	_Z12Update_widthv
 3614              		.syntax unified
 3615              		.thumb
 3616              		.thumb_func
 3617              		.fpu fpv5-d16
 3619              	_Z12Update_widthv:
 3620              	.LFB4323:
1243:Veno-Echo.cpp ****     static bool lastShift{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 160


 3621              		.loc 20 1243 1 is_stmt 1 view -0
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 0
 3624              		@ frame_needed = 0, uses_anonymous_args = 0
1244:Veno-Echo.cpp ****     static bool width_pickup{};
 3625              		.loc 20 1244 5 view .LVU949
1245:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3626              		.loc 20 1245 5 view .LVU950
1246:Veno-Echo.cpp **** 
 3627              		.loc 20 1246 5 view .LVU951
1248:Veno-Echo.cpp **** 
 3628              		.loc 20 1248 5 view .LVU952
1251:Veno-Echo.cpp **** 
 3629              		.loc 20 1251 5 view .LVU953
1243:Veno-Echo.cpp ****     static bool lastShift{};
 3630              		.loc 20 1243 1 is_stmt 0 view .LVU954
 3631 0000 10B5     		push	{r4, lr}
 3632              		.cfi_def_cfa_offset 8
 3633              		.cfi_offset 4, -8
 3634              		.cfi_offset 14, -4
1251:Veno-Echo.cpp **** 
 3635              		.loc 20 1251 36 view .LVU955
 3636 0002 0521     		movs	r1, #5
 3637 0004 5248     		ldr	r0, .L255
1243:Veno-Echo.cpp ****     static bool lastShift{};
 3638              		.loc 20 1243 1 view .LVU956
 3639 0006 2DED028B 		vpush.64	{d8}
 3640              		.cfi_def_cfa_offset 16
 3641              		.cfi_offset 80, -16
 3642              		.cfi_offset 81, -12
1251:Veno-Echo.cpp **** 
 3643              		.loc 20 1251 36 view .LVU957
 3644 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3645              	.LVL187:
 3646              	.LBB1113:
1253:Veno-Echo.cpp ****     {   
 3647              		.loc 20 1253 9 view .LVU958
 3648 000e 514B     		ldr	r3, .L255+4
 3649              	.LBE1113:
1251:Veno-Echo.cpp **** 
 3650              		.loc 20 1251 36 view .LVU959
 3651 0010 B0EE408A 		vmov.f32	s16, s0
 3652              	.LVL188:
1253:Veno-Echo.cpp ****     {   
 3653              		.loc 20 1253 5 is_stmt 1 view .LVU960
 3654              	.LBB1149:
 3655              	.LBB1114:
1257:Veno-Echo.cpp ****         {
 3656              		.loc 20 1257 19 is_stmt 0 view .LVU961
 3657 0014 504A     		ldr	r2, .L255+8
 3658              	.LBE1114:
1253:Veno-Echo.cpp ****     {   
 3659              		.loc 20 1253 5 view .LVU962
 3660 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3661 0018 A3BB     		cbnz	r3, .L227
 3662              	.LBB1139:
1255:Veno-Echo.cpp ****         //update pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 161


 3663              		.loc 20 1255 9 is_stmt 1 view .LVU963
1257:Veno-Echo.cpp ****         {
 3664              		.loc 20 1257 9 view .LVU964
 3665 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3666 001c 0029     		cmp	r1, #0
 3667 001e 3DD0     		beq	.L228
1259:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3668              		.loc 20 1259 13 view .LVU965
1260:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3669              		.loc 20 1260 26 is_stmt 0 view .LVU966
 3670 0020 4E48     		ldr	r0, .L255+12
1261:Veno-Echo.cpp ****         }
 3671              		.loc 20 1261 23 view .LVU967
 3672 0022 4F49     		ldr	r1, .L255+16
1259:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3673              		.loc 20 1259 23 view .LVU968
 3674 0024 1370     		strb	r3, [r2]
1260:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3675              		.loc 20 1260 13 is_stmt 1 view .LVU969
1260:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3676              		.loc 20 1260 26 is_stmt 0 view .LVU970
 3677 0026 0370     		strb	r3, [r0]
1261:Veno-Echo.cpp ****         }
 3678              		.loc 20 1261 13 is_stmt 1 view .LVU971
1261:Veno-Echo.cpp ****         }
 3679              		.loc 20 1261 23 is_stmt 0 view .LVU972
 3680 0028 81ED000A 		vstr.32	s0, [r1]
 3681              	.L229:
1276:Veno-Echo.cpp **** 
 3682              		.loc 20 1276 9 is_stmt 1 view .LVU973
 3683              	.LVL189:
1278:Veno-Echo.cpp ****         {
 3684              		.loc 20 1278 9 view .LVU974
1286:Veno-Echo.cpp ****         }
 3685              		.loc 20 1286 13 view .LVU975
 3686              	.LBB1115:
 3687              	.LBI1115:
1825:Veno-Echo.cpp **** {
 3688              		.loc 20 1825 7 view .LVU976
 3689              	.LBB1116:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3690              		.loc 20 1827 5 view .LVU977
1828:Veno-Echo.cpp **** 
 3691              		.loc 20 1828 5 view .LVU978
 3692              	.LBE1116:
 3693              	.LBE1115:
1286:Veno-Echo.cpp ****         }
 3694              		.loc 20 1286 32 is_stmt 0 view .LVU979
 3695 002c 4D4B     		ldr	r3, .L255+20
 3696              	.LBB1119:
 3697              	.LBB1117:
1828:Veno-Echo.cpp **** 
 3698              		.loc 20 1828 12 view .LVU980
 3699 002e DFED4E7A 		vldr.32	s15, .L255+24
 3700 0032 93ED000A 		vldr.32	s0, [r3]
 3701              	.LVL190:
1828:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 162


 3702              		.loc 20 1828 12 view .LVU981
 3703 0036 30EE270A 		vadd.f32	s0, s0, s15
 3704              	.LVL191:
1830:Veno-Echo.cpp ****     {
 3705              		.loc 20 1830 5 is_stmt 1 view .LVU982
 3706 003a B4EEE70A 		vcmpe.f32	s0, s15
 3707 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3708 0042 7FD4     		bmi	.L253
1835:Veno-Echo.cpp ****     {
 3709              		.loc 20 1835 5 view .LVU983
 3710 0044 F7EE007A 		vmov.f32	s15, #1.0e+0
1837:Veno-Echo.cpp ****     }
 3711              		.loc 20 1837 16 is_stmt 0 view .LVU984
 3712 0048 B4EE670A 		vcmp.f32	s0, s15
 3713 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3714 0050 37FE800A 		vselgt.f32	s0, s15, s0
 3715              	.LVL192:
 3716              	.L235:
1840:Veno-Echo.cpp **** }
 3717              		.loc 20 1840 5 is_stmt 1 view .LVU985
1840:Veno-Echo.cpp **** }
 3718              		.loc 20 1840 5 is_stmt 0 view .LVU986
 3719              	.LBE1117:
 3720              	.LBE1119:
1286:Veno-Echo.cpp ****         }
 3721              		.loc 20 1286 32 view .LVU987
 3722 0054 B6EE001A 		vmov.f32	s2, #5.0e-1
 3723 0058 0020     		movs	r0, #0
 3724 005a DFED430A 		vldr.32	s1, .L255+24
 3725 005e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3726              	.LVL193:
 3727              	.L234:
1289:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 3728              		.loc 20 1289 13 is_stmt 1 view .LVU988
 3729              	.LBB1120:
 3730              	.LBI1120:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3731              		.loc 23 135 13 view .LVU989
 3732              	.LBB1121:
 3733              		.loc 23 137 5 view .LVU990
 3734              		.loc 23 137 9 is_stmt 0 view .LVU991
 3735 0062 424B     		ldr	r3, .L255+28
 3736 0064 9FED427A 		vldr.32	s14, .L255+32
 3737 0068 D3ED007A 		vldr.32	s15, [r3]
 3738              	.LBE1121:
 3739              	.LBE1120:
 3740              	.LBB1124:
 3741              	.LBB1125:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 163


  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 3742              		.loc 10 60 42 view .LVU992
 3743 006c 414A     		ldr	r2, .L255+36
 3744              	.LBE1125:
 3745              	.LBE1124:
 3746              	.LBB1127:
 3747              	.LBB1122:
 3748              		.loc 23 137 24 view .LVU993
 3749 006e 30EE670A 		vsub.f32	s0, s0, s15
 3750              	.LVL194:
 3751              		.loc 23 137 24 view .LVU994
 3752              	.LBE1122:
 3753              	.LBE1127:
 3754              	.LBE1139:
 3755              	.LBE1149:
1321:Veno-Echo.cpp **** 
 3756              		.loc 20 1321 1 view .LVU995
 3757 0072 BDEC028B 		vldm	sp!, {d8}
 3758              		.cfi_remember_state
 3759              		.cfi_restore 80
 3760              		.cfi_restore 81
 3761              		.cfi_def_cfa_offset 8
 3762              	.LVL195:
 3763              	.LBB1150:
 3764              	.LBB1140:
 3765              	.LBB1128:
 3766              	.LBB1123:
 3767              		.loc 23 137 9 view .LVU996
 3768 0076 E0EE077A 		vfma.f32	s15, s0, s14
 3769 007a C3ED007A 		vstr.32	s15, [r3]
 3770              	.LVL196:
 3771              		.loc 23 137 9 view .LVU997
 3772              	.LBE1123:
 3773              	.LBE1128:
1290:Veno-Echo.cpp ****     }
 3774              		.loc 20 1290 13 is_stmt 1 view .LVU998
 3775              	.LBB1129:
 3776              	.LBI1124:
 3777              		.loc 10 60 17 view .LVU999
 3778              	.LBB1126:
 3779              		.loc 10 60 37 view .LVU1000
 3780              		.loc 10 60 42 is_stmt 0 view .LVU1001
 3781 007e C2ED007A 		vstr.32	s15, [r2]
 3782              	.LBE1126:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 164


 3783              	.LBE1129:
 3784              	.LBE1140:
 3785              	.LBE1150:
1321:Veno-Echo.cpp **** 
 3786              		.loc 20 1321 1 view .LVU1002
 3787 0082 10BD     		pop	{r4, pc}
 3788              	.LVL197:
 3789              	.L227:
 3790              		.cfi_restore_state
 3791              	.LBB1151:
 3792              	.LBB1141:
1295:Veno-Echo.cpp **** 
 3793              		.loc 20 1295 9 is_stmt 1 view .LVU1003
1297:Veno-Echo.cpp ****         {
 3794              		.loc 20 1297 9 view .LVU1004
 3795 0084 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3796 0086 C3BB     		cbnz	r3, .L238
1299:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3797              		.loc 20 1299 13 view .LVU1005
1299:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3798              		.loc 20 1299 23 is_stmt 0 view .LVU1006
 3799 0088 0124     		movs	r4, #1
1300:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3800              		.loc 20 1300 29 view .LVU1007
 3801 008a 3B48     		ldr	r0, .L255+40
1301:Veno-Echo.cpp ****         }
 3802              		.loc 20 1301 26 view .LVU1008
 3803 008c 3B49     		ldr	r1, .L255+44
1299:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3804              		.loc 20 1299 23 view .LVU1009
 3805 008e 1470     		strb	r4, [r2]
1300:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3806              		.loc 20 1300 13 is_stmt 1 view .LVU1010
1300:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3807              		.loc 20 1300 29 is_stmt 0 view .LVU1011
 3808 0090 0370     		strb	r3, [r0]
1301:Veno-Echo.cpp ****         }
 3809              		.loc 20 1301 13 is_stmt 1 view .LVU1012
1301:Veno-Echo.cpp ****         }
 3810              		.loc 20 1301 26 is_stmt 0 view .LVU1013
 3811 0092 81ED000A 		vstr.32	s0, [r1]
 3812              	.L226:
1301:Veno-Echo.cpp ****         }
 3813              		.loc 20 1301 26 view .LVU1014
 3814              	.LBE1141:
 3815              	.LBE1151:
1321:Veno-Echo.cpp **** 
 3816              		.loc 20 1321 1 view .LVU1015
 3817 0096 BDEC028B 		vldm	sp!, {d8}
 3818              		.cfi_remember_state
 3819              		.cfi_restore 80
 3820              		.cfi_restore 81
 3821              		.cfi_def_cfa_offset 8
 3822 009a 10BD     		pop	{r4, pc}
 3823              	.L228:
 3824              		.cfi_restore_state
 3825              	.LBB1152:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 165


 3826              	.LBB1146:
1266:Veno-Echo.cpp ****             {
 3827              		.loc 20 1266 13 is_stmt 1 view .LVU1016
1266:Veno-Echo.cpp ****             {
 3828              		.loc 20 1266 16 is_stmt 0 view .LVU1017
 3829 009c 2F4B     		ldr	r3, .L255+12
1266:Veno-Echo.cpp ****             {
 3830              		.loc 20 1266 13 view .LVU1018
 3831 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3832 00a0 7AB9     		cbnz	r2, .L230
1268:Veno-Echo.cpp ****                 {
 3833              		.loc 20 1268 17 is_stmt 1 view .LVU1019
 3834              	.LVL198:
 3835              	.LBB1130:
 3836              	.LBI1130:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3837              		.loc 21 75 3 view .LVU1020
 3838              	.LBB1131:
 3839              		.loc 21 76 5 view .LVU1021
 3840              		.loc 21 76 5 is_stmt 0 view .LVU1022
 3841              	.LBE1131:
 3842              	.LBE1130:
1268:Veno-Echo.cpp ****                 {
 3843              		.loc 20 1268 23 view .LVU1023
 3844 00a2 2F4A     		ldr	r2, .L255+16
1268:Veno-Echo.cpp ****                 {
 3845              		.loc 20 1268 17 view .LVU1024
 3846 00a4 9FED367A 		vldr.32	s14, .L255+48
1268:Veno-Echo.cpp ****                 {
 3847              		.loc 20 1268 23 view .LVU1025
 3848 00a8 D2ED007A 		vldr.32	s15, [r2]
 3849 00ac 70EE677A 		vsub.f32	s15, s0, s15
 3850              	.LBB1133:
 3851              	.LBB1132:
 3852              		.loc 21 76 31 view .LVU1026
 3853 00b0 F0EEE77A 		vabs.f32	s15, s15
 3854              	.LBE1132:
 3855              	.LBE1133:
1268:Veno-Echo.cpp ****                 {
 3856              		.loc 20 1268 17 view .LVU1027
 3857 00b4 F4EEC77A 		vcmpe.f32	s15, s14
 3858 00b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3859 00bc B6DD     		ble	.L229
1270:Veno-Echo.cpp ****                 }
 3860              		.loc 20 1270 21 is_stmt 1 view .LVU1028
1270:Veno-Echo.cpp ****                 }
 3861              		.loc 20 1270 34 is_stmt 0 view .LVU1029
 3862 00be 0122     		movs	r2, #1
 3863 00c0 1A70     		strb	r2, [r3]
 3864              	.L230:
1276:Veno-Echo.cpp **** 
 3865              		.loc 20 1276 9 is_stmt 1 view .LVU1030
 3866              	.LVL199:
1278:Veno-Echo.cpp ****         {
 3867              		.loc 20 1278 9 view .LVU1031
1280:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 3868              		.loc 20 1280 13 view .LVU1032
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 166


 3869              	.LBB1134:
 3870              	.LBI1134:
1825:Veno-Echo.cpp **** {
 3871              		.loc 20 1825 7 view .LVU1033
 3872              	.LBB1135:
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3873              		.loc 20 1827 5 view .LVU1034
1828:Veno-Echo.cpp **** 
 3874              		.loc 20 1828 5 view .LVU1035
1828:Veno-Echo.cpp **** 
 3875              		.loc 20 1828 12 is_stmt 0 view .LVU1036
 3876 00c2 DFED297A 		vldr.32	s15, .L255+24
 3877 00c6 38EE270A 		vadd.f32	s0, s16, s15
 3878              	.LVL200:
1830:Veno-Echo.cpp ****     {
 3879              		.loc 20 1830 5 is_stmt 1 view .LVU1037
 3880 00ca B4EEE70A 		vcmpe.f32	s0, s15
 3881 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3882 00d2 3AD4     		bmi	.L254
1835:Veno-Echo.cpp ****     {
 3883              		.loc 20 1835 5 view .LVU1038
 3884 00d4 F7EE007A 		vmov.f32	s15, #1.0e+0
1837:Veno-Echo.cpp ****     }
 3885              		.loc 20 1837 16 is_stmt 0 view .LVU1039
 3886 00d8 B4EE670A 		vcmp.f32	s0, s15
 3887 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3888 00e0 37FE800A 		vselgt.f32	s0, s15, s0
 3889              	.LVL201:
 3890              	.L232:
1840:Veno-Echo.cpp **** }
 3891              		.loc 20 1840 5 is_stmt 1 view .LVU1040
1840:Veno-Echo.cpp **** }
 3892              		.loc 20 1840 5 is_stmt 0 view .LVU1041
 3893              	.LBE1135:
 3894              	.LBE1134:
1280:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 3895              		.loc 20 1280 32 view .LVU1042
 3896 00e4 B6EE001A 		vmov.f32	s2, #5.0e-1
 3897 00e8 0020     		movs	r0, #0
 3898 00ea DFED1F0A 		vldr.32	s1, .L255+24
 3899 00ee FFF7FEFF 		bl	_Z5scalefff9CurveType
 3900              	.LVL202:
1281:Veno-Echo.cpp ****         }
 3901              		.loc 20 1281 24 view .LVU1043
 3902 00f2 1C4B     		ldr	r3, .L255+20
 3903              	.LVL203:
1281:Veno-Echo.cpp ****         }
 3904              		.loc 20 1281 13 is_stmt 1 view .LVU1044
1281:Veno-Echo.cpp ****         }
 3905              		.loc 20 1281 24 is_stmt 0 view .LVU1045
 3906 00f4 83ED008A 		vstr.32	s16, [r3]
 3907 00f8 B3E7     		b	.L234
 3908              	.LVL204:
 3909              	.L238:
1281:Veno-Echo.cpp ****         }
 3910              		.loc 20 1281 24 view .LVU1046
 3911              	.LBE1146:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 167


 3912              	.LBB1147:
1306:Veno-Echo.cpp ****             {
 3913              		.loc 20 1306 13 is_stmt 1 view .LVU1047
1306:Veno-Echo.cpp ****             {
 3914              		.loc 20 1306 16 is_stmt 0 view .LVU1048
 3915 00fa 1F4B     		ldr	r3, .L255+40
1306:Veno-Echo.cpp ****             {
 3916              		.loc 20 1306 13 view .LVU1049
 3917 00fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3918 00fe 7AB9     		cbnz	r2, .L240
1308:Veno-Echo.cpp ****                 {
 3919              		.loc 20 1308 17 is_stmt 1 view .LVU1050
 3920              	.LVL205:
 3921              	.LBB1142:
 3922              	.LBI1142:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3923              		.loc 21 75 3 view .LVU1051
 3924              	.LBB1143:
 3925              		.loc 21 76 5 view .LVU1052
 3926              		.loc 21 76 5 is_stmt 0 view .LVU1053
 3927              	.LBE1143:
 3928              	.LBE1142:
1308:Veno-Echo.cpp ****                 {
 3929              		.loc 20 1308 23 view .LVU1054
 3930 0100 1E4A     		ldr	r2, .L255+44
1308:Veno-Echo.cpp ****                 {
 3931              		.loc 20 1308 17 view .LVU1055
 3932 0102 9FED1F7A 		vldr.32	s14, .L255+48
1308:Veno-Echo.cpp ****                 {
 3933              		.loc 20 1308 23 view .LVU1056
 3934 0106 D2ED007A 		vldr.32	s15, [r2]
 3935 010a 70EE677A 		vsub.f32	s15, s0, s15
 3936              	.LBB1145:
 3937              	.LBB1144:
 3938              		.loc 21 76 31 view .LVU1057
 3939 010e F0EEE77A 		vabs.f32	s15, s15
 3940              	.LBE1144:
 3941              	.LBE1145:
1308:Veno-Echo.cpp ****                 {
 3942              		.loc 20 1308 17 view .LVU1058
 3943 0112 F4EEC77A 		vcmpe.f32	s15, s14
 3944 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3945 011a BCDD     		ble	.L226
1310:Veno-Echo.cpp ****                 }
 3946              		.loc 20 1310 21 is_stmt 1 view .LVU1059
1310:Veno-Echo.cpp ****                 }
 3947              		.loc 20 1310 37 is_stmt 0 view .LVU1060
 3948 011c 0122     		movs	r2, #1
 3949 011e 1A70     		strb	r2, [r3]
 3950              	.L240:
1315:Veno-Echo.cpp ****         {
 3951              		.loc 20 1315 9 is_stmt 1 view .LVU1061
1317:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3952              		.loc 20 1317 13 view .LVU1062
1317:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3953              		.loc 20 1317 29 is_stmt 0 view .LVU1063
 3954 0120 B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 168


 3955              	.LVL206:
1317:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3956              		.loc 20 1317 29 view .LVU1064
 3957 0124 0020     		movs	r0, #0
 3958 0126 9FED171A 		vldr.32	s2, .L255+52
 3959 012a DFED0F0A 		vldr.32	s1, .L255+24
 3960 012e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3961              	.LVL207:
1317:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3962              		.loc 20 1317 22 view .LVU1065
 3963 0132 154A     		ldr	r2, .L255+56
1318:Veno-Echo.cpp ****         }
 3964              		.loc 20 1318 34 view .LVU1066
 3965 0134 154B     		ldr	r3, .L255+60
1317:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3966              		.loc 20 1317 22 view .LVU1067
 3967 0136 82ED000A 		vstr.32	s0, [r2]
1318:Veno-Echo.cpp ****         }
 3968              		.loc 20 1318 13 is_stmt 1 view .LVU1068
1318:Veno-Echo.cpp ****         }
 3969              		.loc 20 1318 34 is_stmt 0 view .LVU1069
 3970 013a 83ED020A 		vstr.32	s0, [r3, #8]
 3971              	.LBE1147:
 3972              	.LBE1152:
1321:Veno-Echo.cpp **** 
 3973              		.loc 20 1321 1 view .LVU1070
 3974 013e BDEC028B 		vldm	sp!, {d8}
 3975              		.cfi_remember_state
 3976              		.cfi_restore 80
 3977              		.cfi_restore 81
 3978              		.cfi_def_cfa_offset 8
 3979              	.LVL208:
1321:Veno-Echo.cpp **** 
 3980              		.loc 20 1321 1 view .LVU1071
 3981 0142 10BD     		pop	{r4, pc}
 3982              	.LVL209:
 3983              	.L253:
 3984              		.cfi_restore_state
 3985              	.LBB1153:
 3986              	.LBB1148:
 3987              	.LBB1137:
 3988              	.LBB1118:
1832:Veno-Echo.cpp ****     }
 3989              		.loc 20 1832 16 view .LVU1072
 3990 0144 B0EE670A 		vmov.f32	s0, s15
 3991              	.LVL210:
1832:Veno-Echo.cpp ****     }
 3992              		.loc 20 1832 16 view .LVU1073
 3993 0148 84E7     		b	.L235
 3994              	.LVL211:
 3995              	.L254:
1832:Veno-Echo.cpp ****     }
 3996              		.loc 20 1832 16 view .LVU1074
 3997              	.LBE1118:
 3998              	.LBE1137:
 3999              	.LBB1138:
 4000              	.LBB1136:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 169


 4001 014a B0EE670A 		vmov.f32	s0, s15
 4002              	.LVL212:
1832:Veno-Echo.cpp ****     }
 4003              		.loc 20 1832 16 view .LVU1075
 4004 014e C9E7     		b	.L232
 4005              	.L256:
 4006              		.align	2
 4007              	.L255:
 4008 0150 18000000 		.word	.LANCHOR4+24
 4009 0154 00000000 		.word	.LANCHOR7
 4010 0158 00000000 		.word	.LANCHOR59
 4011 015c 00000000 		.word	.LANCHOR60
 4012 0160 00000000 		.word	.LANCHOR61
 4013 0164 00000000 		.word	.LANCHOR62
 4014 0168 00000000 		.word	0
 4015 016c 00000000 		.word	.LANCHOR63
 4016 0170 6F12033D 		.word	1023611503
 4017 0174 00000000 		.word	.LANCHOR64
 4018 0178 00000000 		.word	.LANCHOR65
 4019 017c 00000000 		.word	.LANCHOR66
 4020 0180 0AD7A33B 		.word	1000593162
 4021 0184 0000FA43 		.word	1140457472
 4022 0188 00000000 		.word	.LANCHOR67
 4023 018c 00000000 		.word	.LANCHOR16
 4024              	.LBE1136:
 4025              	.LBE1138:
 4026              	.LBE1148:
 4027              	.LBE1153:
 4028              		.cfi_endproc
 4029              	.LFE4323:
 4031              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4032              		.align	1
 4033              		.p2align 2,,3
 4034              		.global	_Z20Update_crossfeedbackv
 4035              		.syntax unified
 4036              		.thumb
 4037              		.thumb_func
 4038              		.fpu fpv5-d16
 4040              	_Z20Update_crossfeedbackv:
 4041              	.LFB4324:
1324:Veno-Echo.cpp ****     static bool lastShift{};
 4042              		.loc 20 1324 1 is_stmt 1 view -0
 4043              		.cfi_startproc
 4044              		@ args = 0, pretend = 0, frame = 0
 4045              		@ frame_needed = 0, uses_anonymous_args = 0
1325:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4046              		.loc 20 1325 5 view .LVU1077
1326:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4047              		.loc 20 1326 5 view .LVU1078
1327:Veno-Echo.cpp **** 
 4048              		.loc 20 1327 5 view .LVU1079
1329:Veno-Echo.cpp **** 
 4049              		.loc 20 1329 5 view .LVU1080
1332:Veno-Echo.cpp **** 
 4050              		.loc 20 1332 5 view .LVU1081
1324:Veno-Echo.cpp ****     static bool lastShift{};
 4051              		.loc 20 1324 1 is_stmt 0 view .LVU1082
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 170


 4052 0000 10B5     		push	{r4, lr}
 4053              		.cfi_def_cfa_offset 8
 4054              		.cfi_offset 4, -8
 4055              		.cfi_offset 14, -4
1332:Veno-Echo.cpp **** 
 4056              		.loc 20 1332 44 view .LVU1083
 4057 0002 0621     		movs	r1, #6
 4058 0004 4148     		ldr	r0, .L272
1324:Veno-Echo.cpp ****     static bool lastShift{};
 4059              		.loc 20 1324 1 view .LVU1084
 4060 0006 2DED028B 		vpush.64	{d8}
 4061              		.cfi_def_cfa_offset 16
 4062              		.cfi_offset 80, -16
 4063              		.cfi_offset 81, -12
1332:Veno-Echo.cpp **** 
 4064              		.loc 20 1332 44 view .LVU1085
 4065 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4066              	.LVL213:
 4067              	.LBB1154:
1334:Veno-Echo.cpp ****     {   
 4068              		.loc 20 1334 9 view .LVU1086
 4069 000e 404B     		ldr	r3, .L272+4
 4070              	.LBE1154:
1332:Veno-Echo.cpp **** 
 4071              		.loc 20 1332 44 view .LVU1087
 4072 0010 B0EE408A 		vmov.f32	s16, s0
 4073              	.LVL214:
1334:Veno-Echo.cpp ****     {   
 4074              		.loc 20 1334 5 is_stmt 1 view .LVU1088
 4075              	.LBB1183:
 4076              	.LBB1155:
1338:Veno-Echo.cpp ****         {
 4077              		.loc 20 1338 19 is_stmt 0 view .LVU1089
 4078 0014 3F4A     		ldr	r2, .L272+8
 4079              	.LBE1155:
1334:Veno-Echo.cpp ****     {   
 4080              		.loc 20 1334 5 view .LVU1090
 4081 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4082 0018 FBB9     		cbnz	r3, .L258
 4083              	.LBB1164:
1336:Veno-Echo.cpp ****         //update pickup
 4084              		.loc 20 1336 9 is_stmt 1 view .LVU1091
1338:Veno-Echo.cpp ****         {
 4085              		.loc 20 1338 9 view .LVU1092
 4086 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4087 001c 49B3     		cbz	r1, .L259
1340:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4088              		.loc 20 1340 13 view .LVU1093
1341:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4089              		.loc 20 1341 34 is_stmt 0 view .LVU1094
 4090 001e 3E48     		ldr	r0, .L272+12
1342:Veno-Echo.cpp ****         }
 4091              		.loc 20 1342 31 view .LVU1095
 4092 0020 3E49     		ldr	r1, .L272+16
1340:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4093              		.loc 20 1340 23 view .LVU1096
 4094 0022 1370     		strb	r3, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 171


1341:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4095              		.loc 20 1341 13 is_stmt 1 view .LVU1097
1341:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4096              		.loc 20 1341 34 is_stmt 0 view .LVU1098
 4097 0024 0370     		strb	r3, [r0]
1342:Veno-Echo.cpp ****         }
 4098              		.loc 20 1342 13 is_stmt 1 view .LVU1099
1342:Veno-Echo.cpp ****         }
 4099              		.loc 20 1342 31 is_stmt 0 view .LVU1100
 4100 0026 81ED000A 		vstr.32	s0, [r1]
 4101              	.L260:
1355:Veno-Echo.cpp **** 
 4102              		.loc 20 1355 9 is_stmt 1 view .LVU1101
 4103              	.LVL215:
1357:Veno-Echo.cpp ****         {
 4104              		.loc 20 1357 9 view .LVU1102
1365:Veno-Echo.cpp ****         }
 4105              		.loc 20 1365 13 view .LVU1103
1365:Veno-Echo.cpp ****         }
 4106              		.loc 20 1365 40 is_stmt 0 view .LVU1104
 4107 002a 3D4B     		ldr	r3, .L272+20
 4108 002c B7EE001A 		vmov.f32	s2, #1.0e+0
 4109 0030 0020     		movs	r0, #0
 4110 0032 DFED3C0A 		vldr.32	s1, .L272+24
 4111 0036 93ED000A 		vldr.32	s0, [r3]
 4112              	.LVL216:
1365:Veno-Echo.cpp ****         }
 4113              		.loc 20 1365 40 view .LVU1105
 4114 003a FFF7FEFF 		bl	_Z5scalefff9CurveType
 4115              	.LVL217:
 4116              	.L268:
1368:Veno-Echo.cpp ****     }
 4117              		.loc 20 1368 9 is_stmt 1 view .LVU1106
 4118              	.LBB1156:
 4119              	.LBI1156:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4120              		.loc 23 135 13 view .LVU1107
 4121              	.LBB1157:
 4122              		.loc 23 137 5 view .LVU1108
 4123              		.loc 23 137 9 is_stmt 0 view .LVU1109
 4124 003e 3A4B     		ldr	r3, .L272+28
 4125 0040 9FED3A7A 		vldr.32	s14, .L272+32
 4126 0044 D3ED007A 		vldr.32	s15, [r3]
 4127              		.loc 23 137 24 view .LVU1110
 4128 0048 30EE670A 		vsub.f32	s0, s0, s15
 4129              	.LVL218:
 4130              		.loc 23 137 24 view .LVU1111
 4131              	.LBE1157:
 4132              	.LBE1156:
 4133              	.LBE1164:
 4134              	.LBE1183:
1399:Veno-Echo.cpp **** 
 4135              		.loc 20 1399 1 view .LVU1112
 4136 004c BDEC028B 		vldm	sp!, {d8}
 4137              		.cfi_remember_state
 4138              		.cfi_restore 80
 4139              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 172


 4140              		.cfi_def_cfa_offset 8
 4141              	.LVL219:
 4142              	.LBB1184:
 4143              	.LBB1165:
 4144              	.LBB1159:
 4145              	.LBB1158:
 4146              		.loc 23 137 9 view .LVU1113
 4147 0050 E0EE077A 		vfma.f32	s15, s0, s14
 4148 0054 C3ED007A 		vstr.32	s15, [r3]
 4149              	.LBE1158:
 4150              	.LBE1159:
 4151              	.LBE1165:
 4152              	.LBE1184:
1399:Veno-Echo.cpp **** 
 4153              		.loc 20 1399 1 view .LVU1114
 4154 0058 10BD     		pop	{r4, pc}
 4155              	.LVL220:
 4156              	.L258:
 4157              		.cfi_restore_state
 4158              	.LBB1185:
 4159              	.LBB1166:
1372:Veno-Echo.cpp **** 
 4160              		.loc 20 1372 9 is_stmt 1 view .LVU1115
1374:Veno-Echo.cpp ****         {
 4161              		.loc 20 1374 9 view .LVU1116
 4162 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4163 005c 4BBB     		cbnz	r3, .L264
1376:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4164              		.loc 20 1376 13 view .LVU1117
1376:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4165              		.loc 20 1376 23 is_stmt 0 view .LVU1118
 4166 005e 0124     		movs	r4, #1
1377:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4167              		.loc 20 1377 28 view .LVU1119
 4168 0060 3348     		ldr	r0, .L272+36
1378:Veno-Echo.cpp ****         }
 4169              		.loc 20 1378 25 view .LVU1120
 4170 0062 3449     		ldr	r1, .L272+40
1376:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4171              		.loc 20 1376 23 view .LVU1121
 4172 0064 1470     		strb	r4, [r2]
1377:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4173              		.loc 20 1377 13 is_stmt 1 view .LVU1122
1377:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4174              		.loc 20 1377 28 is_stmt 0 view .LVU1123
 4175 0066 0370     		strb	r3, [r0]
1378:Veno-Echo.cpp ****         }
 4176              		.loc 20 1378 13 is_stmt 1 view .LVU1124
1378:Veno-Echo.cpp ****         }
 4177              		.loc 20 1378 25 is_stmt 0 view .LVU1125
 4178 0068 81ED000A 		vstr.32	s0, [r1]
 4179              	.L257:
1378:Veno-Echo.cpp ****         }
 4180              		.loc 20 1378 25 view .LVU1126
 4181              	.LBE1166:
 4182              	.LBE1185:
1399:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 173


 4183              		.loc 20 1399 1 view .LVU1127
 4184 006c BDEC028B 		vldm	sp!, {d8}
 4185              		.cfi_remember_state
 4186              		.cfi_restore 80
 4187              		.cfi_restore 81
 4188              		.cfi_def_cfa_offset 8
 4189 0070 10BD     		pop	{r4, pc}
 4190              	.L259:
 4191              		.cfi_restore_state
 4192              	.LBB1186:
 4193              	.LBB1181:
1347:Veno-Echo.cpp ****             {
 4194              		.loc 20 1347 13 is_stmt 1 view .LVU1128
1347:Veno-Echo.cpp ****             {
 4195              		.loc 20 1347 16 is_stmt 0 view .LVU1129
 4196 0072 294B     		ldr	r3, .L272+12
1347:Veno-Echo.cpp ****             {
 4197              		.loc 20 1347 13 view .LVU1130
 4198 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4199 0076 7AB9     		cbnz	r2, .L261
1349:Veno-Echo.cpp ****                 {
 4200              		.loc 20 1349 17 is_stmt 1 view .LVU1131
 4201              	.LVL221:
 4202              	.LBB1160:
 4203              	.LBI1160:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4204              		.loc 21 75 3 view .LVU1132
 4205              	.LBB1161:
 4206              		.loc 21 76 5 view .LVU1133
 4207              		.loc 21 76 5 is_stmt 0 view .LVU1134
 4208              	.LBE1161:
 4209              	.LBE1160:
1349:Veno-Echo.cpp ****                 {
 4210              		.loc 20 1349 23 view .LVU1135
 4211 0078 284A     		ldr	r2, .L272+16
1349:Veno-Echo.cpp ****                 {
 4212              		.loc 20 1349 17 view .LVU1136
 4213 007a 9FED2F7A 		vldr.32	s14, .L272+44
1349:Veno-Echo.cpp ****                 {
 4214              		.loc 20 1349 23 view .LVU1137
 4215 007e D2ED007A 		vldr.32	s15, [r2]
 4216 0082 70EE677A 		vsub.f32	s15, s0, s15
 4217              	.LBB1163:
 4218              	.LBB1162:
 4219              		.loc 21 76 31 view .LVU1138
 4220 0086 F0EEE77A 		vabs.f32	s15, s15
 4221              	.LBE1162:
 4222              	.LBE1163:
1349:Veno-Echo.cpp ****                 {
 4223              		.loc 20 1349 17 view .LVU1139
 4224 008a F4EEC77A 		vcmpe.f32	s15, s14
 4225 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4226 0092 CADD     		ble	.L260
1351:Veno-Echo.cpp ****                 }
 4227              		.loc 20 1351 21 is_stmt 1 view .LVU1140
1351:Veno-Echo.cpp ****                 }
 4228              		.loc 20 1351 42 is_stmt 0 view .LVU1141
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 174


 4229 0094 0122     		movs	r2, #1
 4230 0096 1A70     		strb	r2, [r3]
 4231              	.L261:
1355:Veno-Echo.cpp **** 
 4232              		.loc 20 1355 9 is_stmt 1 view .LVU1142
 4233              	.LVL222:
1357:Veno-Echo.cpp ****         {
 4234              		.loc 20 1357 9 view .LVU1143
1359:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4235              		.loc 20 1359 13 view .LVU1144
1359:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4236              		.loc 20 1359 40 is_stmt 0 view .LVU1145
 4237 0098 B7EE001A 		vmov.f32	s2, #1.0e+0
 4238 009c 0020     		movs	r0, #0
 4239 009e B0EE480A 		vmov.f32	s0, s16
 4240              	.LVL223:
1359:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4241              		.loc 20 1359 40 view .LVU1146
 4242 00a2 DFED200A 		vldr.32	s1, .L272+24
 4243 00a6 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4244              	.LVL224:
1360:Veno-Echo.cpp ****         }
 4245              		.loc 20 1360 32 view .LVU1147
 4246 00aa 1D4B     		ldr	r3, .L272+20
 4247              	.LVL225:
1360:Veno-Echo.cpp ****         }
 4248              		.loc 20 1360 13 is_stmt 1 view .LVU1148
1360:Veno-Echo.cpp ****         }
 4249              		.loc 20 1360 32 is_stmt 0 view .LVU1149
 4250 00ac 83ED008A 		vstr.32	s16, [r3]
 4251 00b0 C5E7     		b	.L268
 4252              	.LVL226:
 4253              	.L264:
1360:Veno-Echo.cpp ****         }
 4254              		.loc 20 1360 32 view .LVU1150
 4255              	.LBE1181:
 4256              	.LBB1182:
1383:Veno-Echo.cpp ****             {
 4257              		.loc 20 1383 13 is_stmt 1 view .LVU1151
1383:Veno-Echo.cpp ****             {
 4258              		.loc 20 1383 16 is_stmt 0 view .LVU1152
 4259 00b2 1F4B     		ldr	r3, .L272+36
1383:Veno-Echo.cpp ****             {
 4260              		.loc 20 1383 13 view .LVU1153
 4261 00b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4262 00b6 7AB9     		cbnz	r2, .L266
1385:Veno-Echo.cpp ****                 {
 4263              		.loc 20 1385 17 is_stmt 1 view .LVU1154
 4264              	.LVL227:
 4265              	.LBB1167:
 4266              	.LBI1167:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4267              		.loc 21 75 3 view .LVU1155
 4268              	.LBB1168:
 4269              		.loc 21 76 5 view .LVU1156
 4270              		.loc 21 76 5 is_stmt 0 view .LVU1157
 4271              	.LBE1168:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 175


 4272              	.LBE1167:
1385:Veno-Echo.cpp ****                 {
 4273              		.loc 20 1385 23 view .LVU1158
 4274 00b8 1E4A     		ldr	r2, .L272+40
1385:Veno-Echo.cpp ****                 {
 4275              		.loc 20 1385 17 view .LVU1159
 4276 00ba 9FED1F7A 		vldr.32	s14, .L272+44
1385:Veno-Echo.cpp ****                 {
 4277              		.loc 20 1385 23 view .LVU1160
 4278 00be D2ED007A 		vldr.32	s15, [r2]
 4279 00c2 70EE677A 		vsub.f32	s15, s0, s15
 4280              	.LBB1170:
 4281              	.LBB1169:
 4282              		.loc 21 76 31 view .LVU1161
 4283 00c6 F0EEE77A 		vabs.f32	s15, s15
 4284              	.LBE1169:
 4285              	.LBE1170:
1385:Veno-Echo.cpp ****                 {
 4286              		.loc 20 1385 17 view .LVU1162
 4287 00ca F4EEC77A 		vcmpe.f32	s15, s14
 4288 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4289 00d2 CBDD     		ble	.L257
1387:Veno-Echo.cpp ****                 }
 4290              		.loc 20 1387 21 is_stmt 1 view .LVU1163
1387:Veno-Echo.cpp ****                 }
 4291              		.loc 20 1387 36 is_stmt 0 view .LVU1164
 4292 00d4 0122     		movs	r2, #1
 4293 00d6 1A70     		strb	r2, [r3]
 4294              	.L266:
1392:Veno-Echo.cpp ****         {
 4295              		.loc 20 1392 9 is_stmt 1 view .LVU1165
 4296              	.LBB1171:
 4297              	.LBB1172:
1394:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4298              		.loc 20 1394 13 view .LVU1166
 4299              	.LBB1173:
 4300              	.LBB1174:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 176


  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4301              		.loc 8 60 20 is_stmt 0 view .LVU1167
 4302 00d8 184C     		ldr	r4, .L272+48
 4303              	.LBE1174:
 4304              	.LBE1173:
1394:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4305              		.loc 20 1394 32 view .LVU1168
 4306 00da B0EE480A 		vmov.f32	s0, s16
 4307              	.LVL228:
1394:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4308              		.loc 20 1394 32 view .LVU1169
 4309 00de B2EE041A 		vmov.f32	s2, #1.0e+1
 4310 00e2 0020     		movs	r0, #0
 4311 00e4 DFED160A 		vldr.32	s1, .L272+52
 4312 00e8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4313              	.LVL229:
 4314              	.LBB1178:
 4315              	.LBB1175:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4316              		.loc 8 61 34 view .LVU1170
 4317 00ec 2046     		mov	r0, r4
 4318              	.LBE1175:
 4319              	.LBE1178:
1394:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4320              		.loc 20 1394 32 view .LVU1171
 4321 00ee B0EE408A 		vmov.f32	s16, s0
 4322              	.LVL230:
1395:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4323              		.loc 20 1395 13 is_stmt 1 view .LVU1172
 4324              	.LBB1179:
 4325              	.LBI1173:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4326              		.loc 8 58 17 view .LVU1173
 4327              	.LBB1176:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 177


  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4328              		.loc 8 60 9 view .LVU1174
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4329              		.loc 8 60 20 is_stmt 0 view .LVU1175
 4330 00f2 84ED020A 		vstr.32	s0, [r4, #8]
 4331              		.loc 8 61 9 is_stmt 1 view .LVU1176
 4332              		.loc 8 61 34 is_stmt 0 view .LVU1177
 4333 00f6 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4334              	.LVL231:
 4335              		.loc 8 61 34 view .LVU1178
 4336              	.LBE1176:
 4337              	.LBE1179:
1396:Veno-Echo.cpp ****         }
 4338              		.loc 20 1396 33 view .LVU1179
 4339 00fa 124B     		ldr	r3, .L272+56
 4340              	.LBB1180:
 4341              	.LBB1177:
 4342              		.loc 8 61 20 view .LVU1180
 4343 00fc 84ED060A 		vstr.32	s0, [r4, #24]
 4344              	.LVL232:
 4345              		.loc 8 61 20 view .LVU1181
 4346              	.LBE1177:
 4347              	.LBE1180:
1396:Veno-Echo.cpp ****         }
 4348              		.loc 20 1396 13 is_stmt 1 view .LVU1182
1396:Veno-Echo.cpp ****         }
 4349              		.loc 20 1396 33 is_stmt 0 view .LVU1183
 4350 0100 83ED038A 		vstr.32	s16, [r3, #12]
 4351              	.LBE1172:
 4352              	.LBE1171:
 4353              	.LBE1182:
 4354              	.LBE1186:
1399:Veno-Echo.cpp **** 
 4355              		.loc 20 1399 1 view .LVU1184
 4356 0104 BDEC028B 		vldm	sp!, {d8}
 4357              		.cfi_restore 80
 4358              		.cfi_restore 81
 4359              		.cfi_def_cfa_offset 8
 4360              	.LVL233:
1399:Veno-Echo.cpp **** 
 4361              		.loc 20 1399 1 view .LVU1185
 4362 0108 10BD     		pop	{r4, pc}
 4363              	.L273:
 4364 010a 00BF     		.align	2
 4365              	.L272:
 4366 010c 18000000 		.word	.LANCHOR4+24
 4367 0110 00000000 		.word	.LANCHOR7
 4368 0114 00000000 		.word	.LANCHOR68
 4369 0118 00000000 		.word	.LANCHOR69
 4370 011c 00000000 		.word	.LANCHOR70
 4371 0120 00000000 		.word	.LANCHOR74
 4372 0124 00000000 		.word	0
 4373 0128 00000000 		.word	.LANCHOR71
 4374 012c 6F12033D 		.word	1023611503
 4375 0130 00000000 		.word	.LANCHOR72
 4376 0134 00000000 		.word	.LANCHOR73
 4377 0138 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 178


 4378 013c 00000000 		.word	.LANCHOR75
 4379 0140 CDCCCC3D 		.word	1036831949
 4380 0144 00000000 		.word	.LANCHOR16
 4381              		.cfi_endproc
 4382              	.LFE4324:
 4384              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4385              		.align	1
 4386              		.p2align 2,,3
 4387              		.global	_Z18Update_filterXfadev
 4388              		.syntax unified
 4389              		.thumb
 4390              		.thumb_func
 4391              		.fpu fpv5-d16
 4393              	_Z18Update_filterXfadev:
 4394              	.LFB4325:
1402:Veno-Echo.cpp ****     static bool lastShift{};
 4395              		.loc 20 1402 1 is_stmt 1 view -0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
1403:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4399              		.loc 20 1403 5 view .LVU1187
1404:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4400              		.loc 20 1404 5 view .LVU1188
1405:Veno-Echo.cpp **** 
 4401              		.loc 20 1405 5 view .LVU1189
1407:Veno-Echo.cpp **** 
 4402              		.loc 20 1407 5 view .LVU1190
1410:Veno-Echo.cpp **** 
 4403              		.loc 20 1410 5 view .LVU1191
1402:Veno-Echo.cpp ****     static bool lastShift{};
 4404              		.loc 20 1402 1 is_stmt 0 view .LVU1192
 4405 0000 10B5     		push	{r4, lr}
 4406              		.cfi_def_cfa_offset 8
 4407              		.cfi_offset 4, -8
 4408              		.cfi_offset 14, -4
1410:Veno-Echo.cpp **** 
 4409              		.loc 20 1410 42 view .LVU1193
 4410 0002 0621     		movs	r1, #6
 4411 0004 4248     		ldr	r0, .L296
1402:Veno-Echo.cpp ****     static bool lastShift{};
 4412              		.loc 20 1402 1 view .LVU1194
 4413 0006 2DED028B 		vpush.64	{d8}
 4414              		.cfi_def_cfa_offset 16
 4415              		.cfi_offset 80, -16
 4416              		.cfi_offset 81, -12
1410:Veno-Echo.cpp **** 
 4417              		.loc 20 1410 42 view .LVU1195
 4418 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4419              	.LVL234:
 4420              	.LBB1187:
1412:Veno-Echo.cpp ****     {   
 4421              		.loc 20 1412 9 view .LVU1196
 4422 000e 414B     		ldr	r3, .L296+4
 4423              	.LBE1187:
1410:Veno-Echo.cpp **** 
 4424              		.loc 20 1410 42 view .LVU1197
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 179


 4425 0010 B0EE408A 		vmov.f32	s16, s0
 4426              	.LVL235:
1412:Veno-Echo.cpp ****     {   
 4427              		.loc 20 1412 5 is_stmt 1 view .LVU1198
 4428              	.LBB1207:
 4429              	.LBB1188:
1416:Veno-Echo.cpp ****         {
 4430              		.loc 20 1416 19 is_stmt 0 view .LVU1199
 4431 0014 404A     		ldr	r2, .L296+8
 4432              	.LBE1188:
1412:Veno-Echo.cpp ****     {   
 4433              		.loc 20 1412 5 view .LVU1200
 4434 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4435 0018 FBB9     		cbnz	r3, .L275
 4436              	.LBB1197:
1414:Veno-Echo.cpp ****         //update pickup
 4437              		.loc 20 1414 9 is_stmt 1 view .LVU1201
1416:Veno-Echo.cpp ****         {
 4438              		.loc 20 1416 9 view .LVU1202
 4439 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4440 001c 49B3     		cbz	r1, .L276
1418:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4441              		.loc 20 1418 13 view .LVU1203
1419:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4442              		.loc 20 1419 32 is_stmt 0 view .LVU1204
 4443 001e 3F48     		ldr	r0, .L296+12
1420:Veno-Echo.cpp ****         }
 4444              		.loc 20 1420 29 view .LVU1205
 4445 0020 3F49     		ldr	r1, .L296+16
1418:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4446              		.loc 20 1418 23 view .LVU1206
 4447 0022 1370     		strb	r3, [r2]
1419:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4448              		.loc 20 1419 13 is_stmt 1 view .LVU1207
1419:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4449              		.loc 20 1419 32 is_stmt 0 view .LVU1208
 4450 0024 0370     		strb	r3, [r0]
1420:Veno-Echo.cpp ****         }
 4451              		.loc 20 1420 13 is_stmt 1 view .LVU1209
1420:Veno-Echo.cpp ****         }
 4452              		.loc 20 1420 29 is_stmt 0 view .LVU1210
 4453 0026 81ED000A 		vstr.32	s0, [r1]
 4454              	.L277:
1434:Veno-Echo.cpp **** 
 4455              		.loc 20 1434 9 is_stmt 1 view .LVU1211
 4456              	.LVL236:
1436:Veno-Echo.cpp ****         {
 4457              		.loc 20 1436 9 view .LVU1212
1444:Veno-Echo.cpp ****         }
 4458              		.loc 20 1444 13 view .LVU1213
1444:Veno-Echo.cpp ****         }
 4459              		.loc 20 1444 38 is_stmt 0 view .LVU1214
 4460 002a 3E4B     		ldr	r3, .L296+20
 4461 002c B7EE001A 		vmov.f32	s2, #1.0e+0
 4462 0030 0120     		movs	r0, #1
 4463 0032 DFED3D0A 		vldr.32	s1, .L296+24
 4464 0036 93ED000A 		vldr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 180


 4465              	.LVL237:
1444:Veno-Echo.cpp ****         }
 4466              		.loc 20 1444 38 view .LVU1215
 4467 003a FFF7FEFF 		bl	_Z5scalefff9CurveType
 4468              	.LVL238:
 4469              	.L287:
1447:Veno-Echo.cpp ****     }
 4470              		.loc 20 1447 9 is_stmt 1 view .LVU1216
 4471              	.LBB1189:
 4472              	.LBI1189:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4473              		.loc 23 135 13 view .LVU1217
 4474              	.LBB1190:
 4475              		.loc 23 137 5 view .LVU1218
 4476              		.loc 23 137 9 is_stmt 0 view .LVU1219
 4477 003e 3B4B     		ldr	r3, .L296+28
 4478 0040 9FED3B7A 		vldr.32	s14, .L296+32
 4479 0044 D3ED007A 		vldr.32	s15, [r3]
 4480              		.loc 23 137 24 view .LVU1220
 4481 0048 30EE670A 		vsub.f32	s0, s0, s15
 4482              	.LVL239:
 4483              		.loc 23 137 24 view .LVU1221
 4484              	.LBE1190:
 4485              	.LBE1189:
 4486              	.LBE1197:
 4487              	.LBE1207:
1489:Veno-Echo.cpp **** 
 4488              		.loc 20 1489 1 view .LVU1222
 4489 004c BDEC028B 		vldm	sp!, {d8}
 4490              		.cfi_remember_state
 4491              		.cfi_restore 80
 4492              		.cfi_restore 81
 4493              		.cfi_def_cfa_offset 8
 4494              	.LVL240:
 4495              	.LBB1208:
 4496              	.LBB1198:
 4497              	.LBB1192:
 4498              	.LBB1191:
 4499              		.loc 23 137 9 view .LVU1223
 4500 0050 E0EE077A 		vfma.f32	s15, s0, s14
 4501 0054 C3ED007A 		vstr.32	s15, [r3]
 4502              	.LBE1191:
 4503              	.LBE1192:
 4504              	.LBE1198:
 4505              	.LBE1208:
1489:Veno-Echo.cpp **** 
 4506              		.loc 20 1489 1 view .LVU1224
 4507 0058 10BD     		pop	{r4, pc}
 4508              	.LVL241:
 4509              	.L275:
 4510              		.cfi_restore_state
 4511              	.LBB1209:
 4512              	.LBB1199:
1452:Veno-Echo.cpp **** 
 4513              		.loc 20 1452 9 is_stmt 1 view .LVU1225
1454:Veno-Echo.cpp ****         {
 4514              		.loc 20 1454 9 view .LVU1226
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 181


 4515 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4516 005c 4BBB     		cbnz	r3, .L281
1456:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4517              		.loc 20 1456 13 view .LVU1227
1456:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4518              		.loc 20 1456 23 is_stmt 0 view .LVU1228
 4519 005e 0124     		movs	r4, #1
1457:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4520              		.loc 20 1457 32 view .LVU1229
 4521 0060 3448     		ldr	r0, .L296+36
1458:Veno-Echo.cpp ****         }
 4522              		.loc 20 1458 29 view .LVU1230
 4523 0062 3549     		ldr	r1, .L296+40
1456:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4524              		.loc 20 1456 23 view .LVU1231
 4525 0064 1470     		strb	r4, [r2]
1457:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4526              		.loc 20 1457 13 is_stmt 1 view .LVU1232
1457:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4527              		.loc 20 1457 32 is_stmt 0 view .LVU1233
 4528 0066 0370     		strb	r3, [r0]
1458:Veno-Echo.cpp ****         }
 4529              		.loc 20 1458 13 is_stmt 1 view .LVU1234
1458:Veno-Echo.cpp ****         }
 4530              		.loc 20 1458 29 is_stmt 0 view .LVU1235
 4531 0068 81ED000A 		vstr.32	s0, [r1]
 4532              	.L274:
1458:Veno-Echo.cpp ****         }
 4533              		.loc 20 1458 29 view .LVU1236
 4534              	.LBE1199:
 4535              	.LBE1209:
1489:Veno-Echo.cpp **** 
 4536              		.loc 20 1489 1 view .LVU1237
 4537 006c BDEC028B 		vldm	sp!, {d8}
 4538              		.cfi_remember_state
 4539              		.cfi_restore 80
 4540              		.cfi_restore 81
 4541              		.cfi_def_cfa_offset 8
 4542 0070 10BD     		pop	{r4, pc}
 4543              	.L276:
 4544              		.cfi_restore_state
 4545              	.LBB1210:
 4546              	.LBB1204:
1425:Veno-Echo.cpp ****             {
 4547              		.loc 20 1425 13 is_stmt 1 view .LVU1238
1425:Veno-Echo.cpp ****             {
 4548              		.loc 20 1425 16 is_stmt 0 view .LVU1239
 4549 0072 2A4B     		ldr	r3, .L296+12
1425:Veno-Echo.cpp ****             {
 4550              		.loc 20 1425 13 view .LVU1240
 4551 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4552 0076 7AB9     		cbnz	r2, .L278
1427:Veno-Echo.cpp ****                 {
 4553              		.loc 20 1427 17 is_stmt 1 view .LVU1241
 4554              	.LVL242:
 4555              	.LBB1193:
 4556              	.LBI1193:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 182


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4557              		.loc 21 75 3 view .LVU1242
 4558              	.LBB1194:
 4559              		.loc 21 76 5 view .LVU1243
 4560              		.loc 21 76 5 is_stmt 0 view .LVU1244
 4561              	.LBE1194:
 4562              	.LBE1193:
1427:Veno-Echo.cpp ****                 {
 4563              		.loc 20 1427 23 view .LVU1245
 4564 0078 294A     		ldr	r2, .L296+16
1427:Veno-Echo.cpp ****                 {
 4565              		.loc 20 1427 17 view .LVU1246
 4566 007a 9FED307A 		vldr.32	s14, .L296+44
1427:Veno-Echo.cpp ****                 {
 4567              		.loc 20 1427 23 view .LVU1247
 4568 007e D2ED007A 		vldr.32	s15, [r2]
 4569 0082 70EE677A 		vsub.f32	s15, s0, s15
 4570              	.LBB1196:
 4571              	.LBB1195:
 4572              		.loc 21 76 31 view .LVU1248
 4573 0086 F0EEE77A 		vabs.f32	s15, s15
 4574              	.LBE1195:
 4575              	.LBE1196:
1427:Veno-Echo.cpp ****                 {
 4576              		.loc 20 1427 17 view .LVU1249
 4577 008a F4EEC77A 		vcmpe.f32	s15, s14
 4578 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4579 0092 CADD     		ble	.L277
1429:Veno-Echo.cpp ****                 }
 4580              		.loc 20 1429 21 is_stmt 1 view .LVU1250
1429:Veno-Echo.cpp ****                 }
 4581              		.loc 20 1429 40 is_stmt 0 view .LVU1251
 4582 0094 0122     		movs	r2, #1
 4583 0096 1A70     		strb	r2, [r3]
 4584              	.L278:
1434:Veno-Echo.cpp **** 
 4585              		.loc 20 1434 9 is_stmt 1 view .LVU1252
 4586              	.LVL243:
1436:Veno-Echo.cpp ****         {
 4587              		.loc 20 1436 9 view .LVU1253
1438:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4588              		.loc 20 1438 13 view .LVU1254
1438:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4589              		.loc 20 1438 38 is_stmt 0 view .LVU1255
 4590 0098 B7EE001A 		vmov.f32	s2, #1.0e+0
 4591 009c 0120     		movs	r0, #1
 4592 009e B0EE480A 		vmov.f32	s0, s16
 4593              	.LVL244:
1438:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4594              		.loc 20 1438 38 view .LVU1256
 4595 00a2 DFED210A 		vldr.32	s1, .L296+24
 4596 00a6 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4597              	.LVL245:
1439:Veno-Echo.cpp ****         }
 4598              		.loc 20 1439 30 view .LVU1257
 4599 00aa 1E4B     		ldr	r3, .L296+20
 4600              	.LVL246:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 183


1439:Veno-Echo.cpp ****         }
 4601              		.loc 20 1439 13 is_stmt 1 view .LVU1258
1439:Veno-Echo.cpp ****         }
 4602              		.loc 20 1439 30 is_stmt 0 view .LVU1259
 4603 00ac 83ED008A 		vstr.32	s16, [r3]
 4604 00b0 C5E7     		b	.L287
 4605              	.LVL247:
 4606              	.L281:
1439:Veno-Echo.cpp ****         }
 4607              		.loc 20 1439 30 view .LVU1260
 4608              	.LBE1204:
 4609              	.LBB1205:
1463:Veno-Echo.cpp ****             {
 4610              		.loc 20 1463 13 is_stmt 1 view .LVU1261
1463:Veno-Echo.cpp ****             {
 4611              		.loc 20 1463 16 is_stmt 0 view .LVU1262
 4612 00b2 204B     		ldr	r3, .L296+36
1463:Veno-Echo.cpp ****             {
 4613              		.loc 20 1463 13 view .LVU1263
 4614 00b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4615 00b6 7AB9     		cbnz	r2, .L283
1465:Veno-Echo.cpp ****                 {
 4616              		.loc 20 1465 17 is_stmt 1 view .LVU1264
 4617              	.LVL248:
 4618              	.LBB1200:
 4619              	.LBI1200:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4620              		.loc 21 75 3 view .LVU1265
 4621              	.LBB1201:
 4622              		.loc 21 76 5 view .LVU1266
 4623              		.loc 21 76 5 is_stmt 0 view .LVU1267
 4624              	.LBE1201:
 4625              	.LBE1200:
1465:Veno-Echo.cpp ****                 {
 4626              		.loc 20 1465 23 view .LVU1268
 4627 00b8 1F4A     		ldr	r2, .L296+40
1465:Veno-Echo.cpp ****                 {
 4628              		.loc 20 1465 17 view .LVU1269
 4629 00ba 9FED207A 		vldr.32	s14, .L296+44
1465:Veno-Echo.cpp ****                 {
 4630              		.loc 20 1465 23 view .LVU1270
 4631 00be D2ED007A 		vldr.32	s15, [r2]
 4632 00c2 70EE677A 		vsub.f32	s15, s0, s15
 4633              	.LBB1203:
 4634              	.LBB1202:
 4635              		.loc 21 76 31 view .LVU1271
 4636 00c6 F0EEE77A 		vabs.f32	s15, s15
 4637              	.LBE1202:
 4638              	.LBE1203:
1465:Veno-Echo.cpp ****                 {
 4639              		.loc 20 1465 17 view .LVU1272
 4640 00ca F4EEC77A 		vcmpe.f32	s15, s14
 4641 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4642 00d2 CBDD     		ble	.L274
1467:Veno-Echo.cpp ****                 }
 4643              		.loc 20 1467 21 is_stmt 1 view .LVU1273
1467:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 184


 4644              		.loc 20 1467 40 is_stmt 0 view .LVU1274
 4645 00d4 0122     		movs	r2, #1
 4646 00d6 1A70     		strb	r2, [r3]
 4647              	.L283:
1472:Veno-Echo.cpp ****         {
 4648              		.loc 20 1472 9 is_stmt 1 view .LVU1275
1474:Veno-Echo.cpp ****             {
 4649              		.loc 20 1474 13 view .LVU1276
 4650 00d8 DFED197A 		vldr.32	s15, .L296+48
 4651 00dc B4EEE78A 		vcmpe.f32	s16, s15
 4652 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4653 00e4 08D5     		bpl	.L295
1476:Veno-Echo.cpp ****             }
 4654              		.loc 20 1476 17 view .LVU1277
1476:Veno-Echo.cpp ****             }
 4655              		.loc 20 1476 29 is_stmt 0 view .LVU1278
 4656 00e6 174B     		ldr	r3, .L296+52
 4657 00e8 0022     		movs	r2, #0
 4658 00ea 1A70     		strb	r2, [r3]
 4659              	.L285:
1486:Veno-Echo.cpp ****         }  
 4660              		.loc 20 1486 13 is_stmt 1 view .LVU1279
1486:Veno-Echo.cpp ****         }  
 4661              		.loc 20 1486 39 is_stmt 0 view .LVU1280
 4662 00ec 164B     		ldr	r3, .L296+56
 4663 00ee 83ED078A 		vstr.32	s16, [r3, #28]
 4664              	.LBE1205:
 4665              	.LBE1210:
1489:Veno-Echo.cpp **** 
 4666              		.loc 20 1489 1 view .LVU1281
 4667 00f2 BDEC028B 		vldm	sp!, {d8}
 4668              		.cfi_remember_state
 4669              		.cfi_restore 80
 4670              		.cfi_restore 81
 4671              		.cfi_def_cfa_offset 8
 4672 00f6 10BD     		pop	{r4, pc}
 4673              	.L295:
 4674              		.cfi_restore_state
 4675              	.LBB1211:
 4676              	.LBB1206:
1478:Veno-Echo.cpp ****             {
 4677              		.loc 20 1478 18 is_stmt 1 view .LVU1282
 4678 00f8 DFED147A 		vldr.32	s15, .L296+60
 4679 00fc B4EEE78A 		vcmpe.f32	s16, s15
 4680 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4681 0104 F2DD     		ble	.L285
1480:Veno-Echo.cpp ****             }
 4682              		.loc 20 1480 17 view .LVU1283
1480:Veno-Echo.cpp ****             }
 4683              		.loc 20 1480 29 is_stmt 0 view .LVU1284
 4684 0106 0F4B     		ldr	r3, .L296+52
 4685 0108 0122     		movs	r2, #1
 4686 010a 1A70     		strb	r2, [r3]
 4687 010c EEE7     		b	.L285
 4688              	.L297:
 4689 010e 00BF     		.align	2
 4690              	.L296:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 185


 4691 0110 18000000 		.word	.LANCHOR4+24
 4692 0114 00000000 		.word	.LANCHOR7
 4693 0118 00000000 		.word	.LANCHOR76
 4694 011c 00000000 		.word	.LANCHOR77
 4695 0120 00000000 		.word	.LANCHOR78
 4696 0124 00000000 		.word	.LANCHOR83
 4697 0128 00000000 		.word	0
 4698 012c 00000000 		.word	.LANCHOR79
 4699 0130 6F12033D 		.word	1023611503
 4700 0134 00000000 		.word	.LANCHOR80
 4701 0138 00000000 		.word	.LANCHOR81
 4702 013c 0AD7A33B 		.word	1000593162
 4703 0140 6666E63E 		.word	1055286886
 4704 0144 00000000 		.word	.LANCHOR82
 4705 0148 00000000 		.word	.LANCHOR16
 4706 014c CDCC0C3F 		.word	1057803469
 4707              	.LBE1206:
 4708              	.LBE1211:
 4709              		.cfi_endproc
 4710              	.LFE4325:
 4712              		.section	.text._Z8GetModCVv,"ax",%progbits
 4713              		.align	1
 4714              		.p2align 2,,3
 4715              		.global	_Z8GetModCVv
 4716              		.syntax unified
 4717              		.thumb
 4718              		.thumb_func
 4719              		.fpu fpv5-d16
 4721              	_Z8GetModCVv:
 4722              	.LFB4326:
1492:Veno-Echo.cpp ****     //get modulation CV input
 4723              		.loc 20 1492 1 is_stmt 1 view -0
 4724              		.cfi_startproc
 4725              		@ args = 0, pretend = 0, frame = 0
 4726              		@ frame_needed = 0, uses_anonymous_args = 0
1494:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4727              		.loc 20 1494 5 view .LVU1286
1492:Veno-Echo.cpp ****     //get modulation CV input
 4728              		.loc 20 1492 1 is_stmt 0 view .LVU1287
 4729 0000 08B5     		push	{r3, lr}
 4730              		.cfi_def_cfa_offset 8
 4731              		.cfi_offset 3, -8
 4732              		.cfi_offset 14, -4
1494:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4733              		.loc 20 1494 30 view .LVU1288
 4734 0002 0721     		movs	r1, #7
 4735 0004 0648     		ldr	r0, .L300
 4736 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4737              	.LVL249:
 4738 000a 0020     		movs	r0, #0
 4739 000c 9FED051A 		vldr.32	s2, .L300+4
 4740 0010 DFED050A 		vldr.32	s1, .L300+8
 4741 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4742              	.LVL250:
1494:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4743              		.loc 20 1494 23 view .LVU1289
 4744 0018 044B     		ldr	r3, .L300+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 186


 4745 001a 83ED000A 		vstr.32	s0, [r3]
1496:Veno-Echo.cpp **** 
 4746              		.loc 20 1496 1 view .LVU1290
 4747 001e 08BD     		pop	{r3, pc}
 4748              	.L301:
 4749              		.align	2
 4750              	.L300:
 4751 0020 18000000 		.word	.LANCHOR4+24
 4752 0024 00004843 		.word	1128792064
 4753 0028 000048C3 		.word	3276275712
 4754 002c 00000000 		.word	.LANCHOR84
 4755              		.cfi_endproc
 4756              	.LFE4326:
 4758              		.section	.text._Z10Update_Modv,"ax",%progbits
 4759              		.align	1
 4760              		.p2align 2,,3
 4761              		.global	_Z10Update_Modv
 4762              		.syntax unified
 4763              		.thumb
 4764              		.thumb_func
 4765              		.fpu fpv5-d16
 4767              	_Z10Update_Modv:
 4768              	.LFB4327:
1499:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4769              		.loc 20 1499 1 is_stmt 1 view -0
 4770              		.cfi_startproc
 4771              		@ args = 0, pretend = 0, frame = 0
 4772              		@ frame_needed = 0, uses_anonymous_args = 0
1500:Veno-Echo.cpp ****     static float modulation_CV{};
 4773              		.loc 20 1500 5 view .LVU1292
1501:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 4774              		.loc 20 1501 5 view .LVU1293
1502:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4775              		.loc 20 1502 5 view .LVU1294
 4776              	.LVL251:
 4777              	.LBB1212:
 4778              	.LBI1212:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4779              		.loc 23 135 13 view .LVU1295
 4780              	.LBB1213:
 4781              		.loc 23 137 5 view .LVU1296
 4782              	.LBE1213:
 4783              	.LBE1212:
1499:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4784              		.loc 20 1499 1 is_stmt 0 view .LVU1297
 4785 0000 38B5     		push	{r3, r4, r5, lr}
 4786              		.cfi_def_cfa_offset 16
 4787              		.cfi_offset 3, -16
 4788              		.cfi_offset 4, -12
 4789              		.cfi_offset 5, -8
 4790              		.cfi_offset 14, -4
1502:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4791              		.loc 20 1502 13 view .LVU1298
 4792 0002 154A     		ldr	r2, .L304
 4793              	.LBB1220:
 4794              	.LBB1214:
 4795              		.loc 23 137 9 view .LVU1299
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 187


 4796 0004 154C     		ldr	r4, .L304+4
 4797              	.LBE1214:
 4798              	.LBE1220:
 4799              	.LBB1221:
 4800              	.LBB1222:
 4801 0006 164D     		ldr	r5, .L304+8
 4802              	.LBE1222:
 4803              	.LBE1221:
1503:Veno-Echo.cpp ****     //calculate InternalMod
 4804              		.loc 20 1503 13 view .LVU1300
 4805 0008 164B     		ldr	r3, .L304+12
 4806              	.LBB1228:
 4807              	.LBB1215:
 4808              		.loc 23 137 9 view .LVU1301
 4809 000a 94ED007A 		vldr.32	s14, [r4]
 4810              	.LBE1215:
 4811              	.LBE1228:
 4812              	.LBB1229:
 4813              	.LBB1223:
 4814 000e D5ED007A 		vldr.32	s15, [r5]
 4815              	.LBE1223:
 4816              	.LBE1229:
 4817              	.LBB1230:
 4818              	.LBB1216:
 4819              		.loc 23 137 24 view .LVU1302
 4820 0012 92ED006A 		vldr.32	s12, [r2]
 4821              	.LBE1216:
 4822              	.LBE1230:
 4823              	.LBB1231:
 4824              	.LBB1224:
 4825 0016 D3ED006A 		vldr.32	s13, [r3]
 4826              	.LBE1224:
 4827              	.LBE1231:
 4828              	.LBB1232:
 4829              	.LBB1217:
 4830 001a 36EE476A 		vsub.f32	s12, s12, s14
 4831              		.loc 23 137 9 view .LVU1303
 4832 001e DFED125A 		vldr.32	s11, .L304+16
 4833              	.LBE1217:
 4834              	.LBE1232:
 4835              	.LBB1233:
 4836              	.LBB1225:
 4837              		.loc 23 137 24 view .LVU1304
 4838 0022 76EEE76A 		vsub.f32	s13, s13, s15
 4839              	.LBE1225:
 4840              	.LBE1233:
1505:Veno-Echo.cpp ****     //apply modulation to delay lines
 4841              		.loc 20 1505 34 view .LVU1305
 4842 0026 1148     		ldr	r0, .L304+20
 4843              	.LBB1234:
 4844              	.LBB1218:
 4845              		.loc 23 137 9 view .LVU1306
 4846 0028 A6EE257A 		vfma.f32	s14, s12, s11
 4847              	.LBE1218:
 4848              	.LBE1234:
 4849              	.LBB1235:
 4850              	.LBB1226:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 188


 4851 002c E6EEA57A 		vfma.f32	s15, s13, s11
 4852              	.LBE1226:
 4853              	.LBE1235:
 4854              	.LBB1236:
 4855              	.LBB1219:
 4856 0030 84ED007A 		vstr.32	s14, [r4]
 4857              	.LVL252:
 4858              		.loc 23 137 9 view .LVU1307
 4859              	.LBE1219:
 4860              	.LBE1236:
1503:Veno-Echo.cpp ****     //calculate InternalMod
 4861              		.loc 20 1503 5 is_stmt 1 view .LVU1308
 4862              	.LBB1237:
 4863              	.LBI1221:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4864              		.loc 23 135 13 view .LVU1309
 4865              	.LBB1227:
 4866              		.loc 23 137 5 view .LVU1310
 4867              		.loc 23 137 9 is_stmt 0 view .LVU1311
 4868 0034 C5ED007A 		vstr.32	s15, [r5]
 4869              	.LVL253:
 4870              		.loc 23 137 9 view .LVU1312
 4871              	.LBE1227:
 4872              	.LBE1237:
1505:Veno-Echo.cpp ****     //apply modulation to delay lines
 4873              		.loc 20 1505 5 is_stmt 1 view .LVU1313
1505:Veno-Echo.cpp ****     //apply modulation to delay lines
 4874              		.loc 20 1505 34 is_stmt 0 view .LVU1314
 4875 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 4876              	.LVL254:
1507:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4877              		.loc 20 1507 5 is_stmt 1 view .LVU1315
1507:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4878              		.loc 20 1507 40 is_stmt 0 view .LVU1316
 4879 003c 95ED007A 		vldr.32	s14, [r5]
 4880 0040 D4ED007A 		vldr.32	s15, [r4]
 4881              	.LBB1238:
 4882              	.LBB1239:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, float baseTempo, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 189


 4883              		.loc 17 69 43 view .LVU1317
 4884 0044 0A4A     		ldr	r2, .L304+24
 4885              	.LBE1239:
 4886              	.LBE1238:
1507:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4887              		.loc 20 1507 40 view .LVU1318
 4888 0046 E0EE077A 		vfma.f32	s15, s0, s14
 4889              	.LBB1242:
 4890              	.LBI1238:
 4891              		.loc 17 69 6 is_stmt 1 view .LVU1319
 4892              	.LVL255:
 4893              	.LBB1240:
 4894              		.loc 17 69 38 view .LVU1320
 4895              	.LBE1240:
 4896              	.LBE1242:
 4897              	.LBB1243:
 4898              	.LBB1244:
 4899              		.loc 17 69 43 is_stmt 0 view .LVU1321
 4900 004a 0A4B     		ldr	r3, .L304+28
 4901              	.LBE1244:
 4902              	.LBE1243:
 4903              	.LBB1246:
 4904              	.LBB1241:
 4905 004c C2ED3F7A 		vstr.32	s15, [r2, #252]
 4906              	.LBE1241:
 4907              	.LBE1246:
1508:Veno-Echo.cpp **** }
 4908              		.loc 20 1508 5 is_stmt 1 view .LVU1322
 4909              	.LVL256:
 4910              	.LBB1247:
 4911              	.LBI1243:
 4912              		.loc 17 69 6 view .LVU1323
 4913              	.LBB1245:
 4914              		.loc 17 69 38 view .LVU1324
 4915              		.loc 17 69 43 is_stmt 0 view .LVU1325
 4916 0050 C3ED3F7A 		vstr.32	s15, [r3, #252]
 4917              	.LBE1245:
 4918              	.LBE1247:
1509:Veno-Echo.cpp **** 
 4919              		.loc 20 1509 1 view .LVU1326
 4920 0054 38BD     		pop	{r3, r4, r5, pc}
 4921              	.L305:
 4922 0056 00BF     		.align	2
 4923              	.L304:
 4924 0058 00000000 		.word	.LANCHOR84
 4925 005c 00000000 		.word	.LANCHOR85
 4926 0060 00000000 		.word	.LANCHOR86
 4927 0064 00000000 		.word	.LANCHOR67
 4928 0068 0AD7233C 		.word	1008981770
 4929 006c 00000000 		.word	.LANCHOR75
 4930 0070 00000000 		.word	.LANCHOR0
 4931 0074 00000000 		.word	.LANCHOR1
 4932              		.cfi_endproc
 4933              	.LFE4327:
 4935              		.section	.text._Z11UpdateClockv,"ax",%progbits
 4936              		.align	1
 4937              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 190


 4938              		.global	_Z11UpdateClockv
 4939              		.syntax unified
 4940              		.thumb
 4941              		.thumb_func
 4942              		.fpu fpv5-d16
 4944              	_Z11UpdateClockv:
 4945              	.LFB4328:
1512:Veno-Echo.cpp ****     static int divCounter{};
 4946              		.loc 20 1512 1 is_stmt 1 view -0
 4947              		.cfi_startproc
 4948              		@ args = 0, pretend = 0, frame = 0
 4949              		@ frame_needed = 0, uses_anonymous_args = 0
1513:Veno-Echo.cpp ****     ClockIn.Debounce();
 4950              		.loc 20 1513 5 view .LVU1328
1514:Veno-Echo.cpp **** 
 4951              		.loc 20 1514 5 view .LVU1329
1512:Veno-Echo.cpp ****     static int divCounter{};
 4952              		.loc 20 1512 1 is_stmt 0 view .LVU1330
 4953 0000 10B5     		push	{r4, lr}
 4954              		.cfi_def_cfa_offset 8
 4955              		.cfi_offset 4, -8
 4956              		.cfi_offset 14, -4
1514:Veno-Echo.cpp **** 
 4957              		.loc 20 1514 21 view .LVU1331
 4958 0002 0A4C     		ldr	r4, .L315
 4959 0004 2046     		mov	r0, r4
 4960 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 4961              	.LVL257:
1517:Veno-Echo.cpp ****     {   
 4962              		.loc 20 1517 5 is_stmt 1 view .LVU1332
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 191


  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 4963              		.loc 1 69 38 view .LVU1333
1517:Veno-Echo.cpp ****     {   
 4964              		.loc 20 1517 5 is_stmt 0 view .LVU1334
 4965 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4966 000c 7F2B     		cmp	r3, #127
 4967 000e 00D0     		beq	.L314
 4968              	.L306:
1531:Veno-Echo.cpp **** 
 4969              		.loc 20 1531 1 view .LVU1335
 4970 0010 10BD     		pop	{r4, pc}
 4971              	.L314:
1519:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 4972              		.loc 20 1519 9 is_stmt 1 view .LVU1336
1521:Veno-Echo.cpp ****         {
 4973              		.loc 20 1521 9 view .LVU1337
1523:Veno-Echo.cpp ****             {
 4974              		.loc 20 1523 13 view .LVU1338
1523:Veno-Echo.cpp ****             {
 4975              		.loc 20 1523 29 is_stmt 0 view .LVU1339
 4976 0012 0748     		ldr	r0, .L315+4
 4977 0014 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 4978              	.LVL258:
1523:Veno-Echo.cpp ****             {
 4979              		.loc 20 1523 13 view .LVU1340
 4980 0018 0028     		cmp	r0, #0
 4981 001a F9D0     		beq	.L306
 4982              	.LBB1252:
 4983              	.LBI1252:
1511:Veno-Echo.cpp **** {
 4984              		.loc 20 1511 6 is_stmt 1 view .LVU1341
 4985              	.LBB1253:
1525:Veno-Echo.cpp ****                 
 4986              		.loc 20 1525 17 view .LVU1342
1525:Veno-Echo.cpp ****                 
 4987              		.loc 20 1525 39 is_stmt 0 view .LVU1343
 4988 001c 0448     		ldr	r0, .L315+4
 4989 001e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 4990              	.LVL259:
 4991 0022 0448     		ldr	r0, .L315+8
 4992              	.LBE1253:
 4993              	.LBE1252:
1531:Veno-Echo.cpp **** 
 4994              		.loc 20 1531 1 view .LVU1344
 4995 0024 BDE81040 		pop	{r4, lr}
 4996              		.cfi_restore 14
 4997              		.cfi_restore 4
 4998              		.cfi_def_cfa_offset 0
 4999              	.LBB1255:
 5000              	.LBB1254:
1525:Veno-Echo.cpp ****                 
 5001              		.loc 20 1525 39 view .LVU1345
 5002 0028 FFF7FEBF 		b	_ZN8TempoLED8setTempoEf
 5003              	.LVL260:
 5004              	.L316:
 5005              		.align	2
 5006              	.L315:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 192


 5007 002c 00000000 		.word	.LANCHOR87
 5008 0030 00000000 		.word	.LANCHOR12
 5009 0034 00000000 		.word	.LANCHOR88
 5010              	.LBE1254:
 5011              	.LBE1255:
 5012              		.cfi_endproc
 5013              	.LFE4328:
 5015              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5016              		.align	1
 5017              		.p2align 2,,3
 5018              		.global	_Z19Update_BaseTempoLEDv
 5019              		.syntax unified
 5020              		.thumb
 5021              		.thumb_func
 5022              		.fpu fpv5-d16
 5024              	_Z19Update_BaseTempoLEDv:
 5025              	.LFB4330:
1651:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5026              		.loc 20 1651 1 is_stmt 1 view -0
 5027              		.cfi_startproc
 5028              		@ args = 0, pretend = 0, frame = 0
 5029              		@ frame_needed = 0, uses_anonymous_args = 0
1652:Veno-Echo.cpp **** 
 5030              		.loc 20 1652 5 view .LVU1347
1652:Veno-Echo.cpp **** 
 5031              		.loc 20 1652 25 is_stmt 0 view .LVU1348
 5032 0000 1648     		ldr	r0, .L321
1651:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5033              		.loc 20 1651 1 view .LVU1349
 5034 0002 08B5     		push	{r3, lr}
 5035              		.cfi_def_cfa_offset 8
 5036              		.cfi_offset 3, -8
 5037              		.cfi_offset 14, -4
1652:Veno-Echo.cpp **** 
 5038              		.loc 20 1652 25 view .LVU1350
 5039 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5040              	.LVL261:
1654:Veno-Echo.cpp **** 
 5041              		.loc 20 1654 5 is_stmt 1 view .LVU1351
1656:Veno-Echo.cpp ****     {
 5042              		.loc 20 1656 5 view .LVU1352
1656:Veno-Echo.cpp ****     {
 5043              		.loc 20 1656 27 is_stmt 0 view .LVU1353
 5044 0008 1448     		ldr	r0, .L321
 5045 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5046              	.LVL262:
1656:Veno-Echo.cpp ****     {
 5047              		.loc 20 1656 5 view .LVU1354
 5048 000e B8B9     		cbnz	r0, .L318
 5049 0010 134B     		ldr	r3, .L321+4
 5050 0012 1B68     		ldr	r3, [r3]
 5051              	.L319:
1661:Veno-Echo.cpp ****     //update base phase for both delay lines
 5052              		.loc 20 1661 5 is_stmt 1 view .LVU1355
 5053              	.LVL263:
 5054              	.LBB1256:
 5055              	.LBI1256:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 193


  71:LEDs.h        **** 
 5056              		.loc 14 71 7 view .LVU1356
 5057              	.LBB1257:
  71:LEDs.h        **** 
 5058              		.loc 14 71 20 view .LVU1357
  71:LEDs.h        **** 
 5059              		.loc 14 71 20 is_stmt 0 view .LVU1358
 5060              	.LBE1257:
 5061              	.LBE1256:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 194


  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5062              		.loc 15 92 31 is_stmt 1 view .LVU1359
 5063              	.LBB1259:
 5064              	.LBB1258:
  71:LEDs.h        **** 
 5065              		.loc 14 71 41 is_stmt 0 view .LVU1360
 5066 0014 114A     		ldr	r2, .L321
 5067              	.LBE1258:
 5068              	.LBE1259:
1661:Veno-Echo.cpp ****     //update base phase for both delay lines
 5069              		.loc 20 1661 50 view .LVU1361
 5070 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1661:Veno-Echo.cpp ****     //update base phase for both delay lines
 5071              		.loc 20 1661 73 view .LVU1362
 5072 001a 07EE903A 		vmov	s15, r3	@ int
1661:Veno-Echo.cpp ****     //update base phase for both delay lines
 5073              		.loc 20 1661 55 view .LVU1363
 5074 001e DFED116A 		vldr.32	s13, .L321+8
1661:Veno-Echo.cpp ****     //update base phase for both delay lines
 5075              		.loc 20 1661 50 view .LVU1364
 5076 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1661:Veno-Echo.cpp ****     //update base phase for both delay lines
 5077              		.loc 20 1661 73 view .LVU1365
 5078 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5079              	.LBB1260:
 5080              	.LBB1261:
  70:DelayMulti.h  **** void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5081              		.loc 17 71 54 view .LVU1366
 5082 002a 0F4A     		ldr	r2, .L321+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 195


 5083              	.LBE1261:
 5084              	.LBE1260:
1661:Veno-Echo.cpp ****     //update base phase for both delay lines
 5085              		.loc 20 1661 50 view .LVU1367
 5086 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5087              	.LBB1263:
 5088              	.LBB1264:
 5089              		.loc 17 71 54 view .LVU1368
 5090 0030 0E4B     		ldr	r3, .L321+16
 5091              	.LBE1264:
 5092              	.LBE1263:
1661:Veno-Echo.cpp ****     //update base phase for both delay lines
 5093              		.loc 20 1661 55 view .LVU1369
 5094 0032 A7EEA67A 		vfma.f32	s14, s15, s13
 5095              	.LVL264:
1663:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5096              		.loc 20 1663 5 is_stmt 1 view .LVU1370
 5097              	.LBB1266:
 5098              	.LBI1260:
 5099              		.loc 17 71 6 view .LVU1371
 5100              	.LBB1262:
 5101              		.loc 17 71 43 view .LVU1372
 5102              		.loc 17 71 54 is_stmt 0 view .LVU1373
 5103 0036 82ED487A 		vstr.32	s14, [r2, #288]
 5104              	.LBE1262:
 5105              	.LBE1266:
1664:Veno-Echo.cpp **** }
 5106              		.loc 20 1664 5 is_stmt 1 view .LVU1374
 5107              	.LVL265:
 5108              	.LBB1267:
 5109              	.LBI1263:
 5110              		.loc 17 71 6 view .LVU1375
 5111              	.LBB1265:
 5112              		.loc 17 71 43 view .LVU1376
 5113              		.loc 17 71 54 is_stmt 0 view .LVU1377
 5114 003a 83ED487A 		vstr.32	s14, [r3, #288]
 5115              	.LVL266:
 5116              		.loc 17 71 54 view .LVU1378
 5117              	.LBE1265:
 5118              	.LBE1267:
1665:Veno-Echo.cpp **** 
 5119              		.loc 20 1665 1 view .LVU1379
 5120 003e 08BD     		pop	{r3, pc}
 5121              	.LVL267:
 5122              	.L318:
1658:Veno-Echo.cpp ****     }
 5123              		.loc 20 1658 9 is_stmt 1 view .LVU1380
1658:Veno-Echo.cpp ****     }
 5124              		.loc 20 1658 38 is_stmt 0 view .LVU1381
 5125 0040 0749     		ldr	r1, .L321+4
1658:Veno-Echo.cpp ****     }
 5126              		.loc 20 1658 43 view .LVU1382
 5127 0042 0B4B     		ldr	r3, .L321+20
1658:Veno-Echo.cpp ****     }
 5128              		.loc 20 1658 38 view .LVU1383
 5129 0044 0A68     		ldr	r2, [r1]
 5130 0046 0132     		adds	r2, r2, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 196


1658:Veno-Echo.cpp ****     }
 5131              		.loc 20 1658 43 view .LVU1384
 5132 0048 83FB0203 		smull	r0, r3, r3, r2
 5133 004c A3EBE273 		sub	r3, r3, r2, asr #31
 5134 0050 03EB4303 		add	r3, r3, r3, lsl #1
 5135 0054 A2EB4303 		sub	r3, r2, r3, lsl #1
1658:Veno-Echo.cpp ****     }
 5136              		.loc 20 1658 22 view .LVU1385
 5137 0058 0B60     		str	r3, [r1]
 5138 005a DBE7     		b	.L319
 5139              	.L322:
 5140              		.align	2
 5141              	.L321:
 5142 005c 00000000 		.word	.LANCHOR88
 5143 0060 00000000 		.word	.LANCHOR89
 5144 0064 920A863F 		.word	1065749138
 5145 0068 00000000 		.word	.LANCHOR0
 5146 006c 00000000 		.word	.LANCHOR1
 5147 0070 ABAAAA2A 		.word	715827883
 5148              		.cfi_endproc
 5149              	.LFE4330:
 5151              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5152              		.align	1
 5153              		.p2align 2,,3
 5154              		.global	_Z13ApplySettingsRK8Settings
 5155              		.syntax unified
 5156              		.thumb
 5157              		.thumb_func
 5158              		.fpu fpv5-d16
 5160              	_Z13ApplySettingsRK8Settings:
 5161              	.LVL268:
 5162              	.LFB4331:
1669:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5163              		.loc 20 1669 1 is_stmt 1 view -0
 5164              		.cfi_startproc
 5165              		@ args = 0, pretend = 0, frame = 0
 5166              		@ frame_needed = 0, uses_anonymous_args = 0
1670:Veno-Echo.cpp ****     {
 5167              		.loc 20 1670 5 view .LVU1387
 5168 0000 9FEDCF7A 		vldr.32	s14, .L391
1670:Veno-Echo.cpp ****     {
 5169              		.loc 20 1670 17 is_stmt 0 view .LVU1388
 5170 0004 D0ED007A 		vldr.32	s15, [r0]
1670:Veno-Echo.cpp ****     {
 5171              		.loc 20 1670 5 view .LVU1389
 5172 0008 F4EEC77A 		vcmpe.f32	s15, s14
1669:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5173              		.loc 20 1669 1 view .LVU1390
 5174 000c 38B5     		push	{r3, r4, r5, lr}
 5175              		.cfi_def_cfa_offset 16
 5176              		.cfi_offset 3, -16
 5177              		.cfi_offset 4, -12
 5178              		.cfi_offset 5, -8
 5179              		.cfi_offset 14, -4
1670:Veno-Echo.cpp ****     {
 5180              		.loc 20 1670 5 view .LVU1391
 5181 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 197


1669:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5182              		.loc 20 1669 1 view .LVU1392
 5183 0012 0446     		mov	r4, r0
 5184              	.LBB1268:
 5185              	.LBB1269:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5186              		.loc 20 70 28 view .LVU1393
 5187 0014 CB4B     		ldr	r3, .L391+4
 5188              	.LBE1269:
 5189              	.LBE1268:
1670:Veno-Echo.cpp ****     {
 5190              		.loc 20 1670 5 view .LVU1394
 5191 0016 C0F2FD80 		blt	.L324
1670:Veno-Echo.cpp ****     {
 5192              		.loc 20 1670 43 discriminator 1 view .LVU1395
 5193 001a 9FEDCB7A 		vldr.32	s14, .L391+8
 5194 001e F4EEC77A 		vcmpe.f32	s15, s14
 5195 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5196 0026 00F2F580 		bhi	.L324
1672:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5197              		.loc 20 1672 9 is_stmt 1 view .LVU1396
 5198              	.LVL269:
 5199              	.LBB1283:
 5200              	.LBI1268:
  68:Veno-Echo.cpp ****     {
 5201              		.loc 20 68 10 view .LVU1397
 5202              	.LBB1281:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5203              		.loc 20 70 9 view .LVU1398
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5204              		.loc 20 70 28 is_stmt 0 view .LVU1399
 5205 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5206              	.LVL270:
 5207              	.LBB1270:
 5208              	.LBI1270:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5209              		.loc 21 75 3 is_stmt 1 view .LVU1400
 5210              	.LBB1271:
 5211              		.loc 21 76 5 view .LVU1401
 5212              		.loc 21 76 5 is_stmt 0 view .LVU1402
 5213              	.LBE1271:
 5214              	.LBE1270:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5215              		.loc 20 70 53 view .LVU1403
 5216 002e 9FEDC76A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5217              		.loc 20 70 15 view .LVU1404
 5218 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5219              		.loc 20 70 53 view .LVU1405
 5220 0036 27EE067A 		vmul.f32	s14, s14, s12
 5221              	.LBB1273:
 5222              	.LBB1272:
 5223              		.loc 21 76 31 view .LVU1406
 5224 003a F0EEE66A 		vabs.f32	s13, s13
 5225              	.LBE1272:
 5226              	.LBE1273:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 198


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5227              		.loc 20 70 9 view .LVU1407
 5228 003e F4EEC76A 		vcmpe.f32	s13, s14
 5229 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5230 0046 0FDD     		ble	.L327
  74:Veno-Echo.cpp ****             //del -> Reset();
 5231              		.loc 20 74 29 view .LVU1408
 5232 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5233              	.LBB1274:
 5234              	.LBB1275:
 5235              		.loc 19 72 9 view .LVU1409
 5236 004c C04D     		ldr	r5, .L391+16
 5237              	.LBE1275:
 5238              	.LBE1274:
 5239              	.LBE1281:
 5240              	.LBE1283:
1672:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5241              		.loc 20 1672 33 view .LVU1410
 5242 004e 1968     		ldr	r1, [r3]
 5243              	.LBB1284:
 5244              	.LBB1282:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5245              		.loc 20 73 13 is_stmt 1 view .LVU1411
 5246              	.LBB1278:
 5247              	.LBB1276:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5248              		.loc 19 71 9 is_stmt 0 view .LVU1412
 5249 0050 0020     		movs	r0, #0
 5250              	.LVL271:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5251              		.loc 19 71 9 view .LVU1413
 5252              	.LBE1276:
 5253              	.LBE1278:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5254              		.loc 20 73 27 view .LVU1414
 5255 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5256              		.loc 20 74 13 is_stmt 1 view .LVU1415
 5257              	.LVL272:
 5258              	.LBB1279:
 5259              	.LBI1274:
  69:delayline_reverse.h ****     {
 5260              		.loc 19 69 17 view .LVU1416
  69:delayline_reverse.h ****     {
 5261              		.loc 19 69 17 is_stmt 0 view .LVU1417
 5262              	.LBE1279:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5263              		.loc 20 74 29 view .LVU1418
 5264 0056 17EE102A 		vmov	r2, s14	@ int
 5265              	.LBB1280:
 5266              	.LBB1277:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5267              		.loc 19 71 9 view .LVU1419
 5268 005a 0860     		str	r0, [r1]	@ float
 5269 005c D4ED007A 		vldr.32	s15, [r4]
 5270              	.LVL273:
 5271              		.loc 19 72 9 view .LVU1420
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 199


 5272 0060 AA42     		cmp	r2, r5
 5273 0062 28BF     		it	cs
 5274 0064 2A46     		movcs	r2, r5
 5275 0066 0A61     		str	r2, [r1, #16]
 5276              	.LVL274:
 5277              	.L327:
 5278              		.loc 19 72 9 view .LVU1421
 5279              	.LBE1277:
 5280              	.LBE1280:
 5281              	.LBE1282:
 5282              	.LBE1284:
1673:Veno-Echo.cpp ****     }
 5283              		.loc 20 1673 9 is_stmt 1 view .LVU1422
 5284              	.LBB1285:
 5285              	.LBI1285:
  68:Veno-Echo.cpp ****     {
 5286              		.loc 20 68 10 view .LVU1423
 5287              	.LBB1286:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5288              		.loc 20 70 9 view .LVU1424
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5289              		.loc 20 70 28 is_stmt 0 view .LVU1425
 5290 0068 BA4B     		ldr	r3, .L391+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5291              		.loc 20 70 53 view .LVU1426
 5292 006a 9FEDB86A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5293              		.loc 20 70 28 view .LVU1427
 5294 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5295              	.LVL275:
 5296              	.LBB1287:
 5297              	.LBI1287:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5298              		.loc 21 75 3 is_stmt 1 view .LVU1428
 5299              	.LBB1288:
 5300              		.loc 21 76 5 view .LVU1429
 5301              		.loc 21 76 5 is_stmt 0 view .LVU1430
 5302              	.LBE1288:
 5303              	.LBE1287:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5304              		.loc 20 70 15 view .LVU1431
 5305 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5306              		.loc 20 70 53 view .LVU1432
 5307 0076 27EE067A 		vmul.f32	s14, s14, s12
 5308              	.LBB1290:
 5309              	.LBB1289:
 5310              		.loc 21 76 31 view .LVU1433
 5311 007a F0EEE66A 		vabs.f32	s13, s13
 5312              	.LBE1289:
 5313              	.LBE1290:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5314              		.loc 20 70 9 view .LVU1434
 5315 007e F4EEC76A 		vcmpe.f32	s13, s14
 5316 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5317 0086 00F34B81 		bgt	.L387
 5318              	.LVL276:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 200


 5319              	.L330:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5320              		.loc 20 70 9 view .LVU1435
 5321              	.LBE1286:
 5322              	.LBE1285:
1681:Veno-Echo.cpp ****     {
 5323              		.loc 20 1681 5 is_stmt 1 view .LVU1436
 5324 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1681:Veno-Echo.cpp ****     {
 5325              		.loc 20 1681 17 is_stmt 0 view .LVU1437
 5326 008e 94ED010A 		vldr.32	s0, [r4, #4]
1681:Veno-Echo.cpp ****     {
 5327              		.loc 20 1681 5 view .LVU1438
 5328 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5329 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5330 009a 06DB     		blt	.L335
1681:Veno-Echo.cpp ****     {
 5331              		.loc 20 1681 35 discriminator 1 view .LVU1439
 5332 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5333 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5334 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5335 00a8 01D9     		bls	.L385
 5336              	.L335:
1687:Veno-Echo.cpp ****     }
 5337              		.loc 20 1687 9 is_stmt 1 view .LVU1440
1687:Veno-Echo.cpp ****     }
 5338              		.loc 20 1687 30 is_stmt 0 view .LVU1441
 5339 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5340              	.L385:
 5341 00ae AA48     		ldr	r0, .L391+24
 5342 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5343              	.LVL277:
1690:Veno-Echo.cpp ****     {
 5344              		.loc 20 1690 5 is_stmt 1 view .LVU1442
1690:Veno-Echo.cpp ****     {
 5345              		.loc 20 1690 17 is_stmt 0 view .LVU1443
 5346 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1690:Veno-Echo.cpp ****     {
 5347              		.loc 20 1690 5 view .LVU1444
 5348 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5349 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5350 00c0 C0F22B81 		blt	.L382
1690:Veno-Echo.cpp ****     {
 5351              		.loc 20 1690 42 discriminator 1 view .LVU1445
 5352 00c4 DFEDA56A 		vldr.32	s13, .L391+28
1696:Veno-Echo.cpp ****     }
 5353              		.loc 20 1696 18 discriminator 1 view .LVU1446
 5354 00c8 9FEDA57A 		vldr.32	s14, .L391+32
 5355 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5356 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5357 00d4 88BF     		it	hi
 5358 00d6 F0EE477A 		vmovhi.f32	s15, s14
 5359              	.L339:
1699:Veno-Echo.cpp ****     {
 5360              		.loc 20 1699 17 view .LVU1447
 5361 00da 94ED030A 		vldr.32	s0, [r4, #12]
1699:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 201


 5362              		.loc 20 1699 5 view .LVU1448
 5363 00de 9FEDA17A 		vldr.32	s14, .L391+36
 5364 00e2 A14B     		ldr	r3, .L391+40
 5365 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 5366              	.LBB1301:
 5367              	.LBB1302:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5368              		.loc 8 60 20 view .LVU1449
 5369 00e8 A04D     		ldr	r5, .L391+44
 5370 00ea C3ED007A 		vstr.32	s15, [r3]
 5371              	.LBE1302:
 5372              	.LBE1301:
1699:Veno-Echo.cpp ****     {
 5373              		.loc 20 1699 5 is_stmt 1 view .LVU1450
 5374 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5375 00f2 06DB     		blt	.L342
1699:Veno-Echo.cpp ****     {
 5376              		.loc 20 1699 40 is_stmt 0 discriminator 1 view .LVU1451
 5377 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 5378 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 5379 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5380 0100 01D9     		bls	.L386
 5381              	.L342:
1705:Veno-Echo.cpp ****     }
 5382              		.loc 20 1705 9 is_stmt 1 view .LVU1452
 5383              	.LVL278:
 5384              	.LBB1303:
 5385              	.LBI1303:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 5386              		.loc 8 58 17 view .LVU1453
 5387              	.LBB1304:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5388              		.loc 8 60 9 view .LVU1454
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5389              		.loc 8 60 20 is_stmt 0 view .LVU1455
 5390 0102 9FED9B0A 		vldr.32	s0, .L391+48
 5391              	.LVL279:
 5392              	.L386:
 5393              		.loc 8 61 34 view .LVU1456
 5394 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5395              		.loc 8 60 20 view .LVU1457
 5396 0108 85ED020A 		vstr.32	s0, [r5, #8]
 5397              		.loc 8 61 9 is_stmt 1 view .LVU1458
 5398              		.loc 8 61 34 is_stmt 0 view .LVU1459
 5399 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 5400              	.LVL280:
 5401              	.LBE1304:
 5402              	.LBE1303:
1708:Veno-Echo.cpp ****     {
 5403              		.loc 20 1708 5 view .LVU1460
 5404 0110 DFED987A 		vldr.32	s15, .L391+52
 5405              	.LBB1306:
 5406              	.LBB1305:
 5407              		.loc 8 61 20 view .LVU1461
 5408 0114 85ED060A 		vstr.32	s0, [r5, #24]
 5409              	.LBE1305:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 202


 5410              	.LBE1306:
1708:Veno-Echo.cpp ****     {
 5411              		.loc 20 1708 5 is_stmt 1 view .LVU1462
1708:Veno-Echo.cpp ****     {
 5412              		.loc 20 1708 17 is_stmt 0 view .LVU1463
 5413 0118 94ED050A 		vldr.32	s0, [r4, #20]
1708:Veno-Echo.cpp ****     {
 5414              		.loc 20 1708 5 view .LVU1464
 5415 011c B4EEE70A 		vcmpe.f32	s0, s15
 5416 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5417 0124 07DB     		blt	.L346
1708:Veno-Echo.cpp ****     {
 5418              		.loc 20 1708 40 discriminator 1 view .LVU1465
 5419 0126 DFED947A 		vldr.32	s15, .L391+56
 5420 012a B4EEE70A 		vcmpe.f32	s0, s15
 5421 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5422 0132 40F2DF80 		bls	.L388
 5423              	.L346:
1717:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5424              		.loc 20 1717 9 is_stmt 1 view .LVU1466
1717:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5425              		.loc 20 1717 22 is_stmt 0 view .LVU1467
 5426 0136 9FED900A 		vldr.32	s0, .L391+56
 5427 013a 9048     		ldr	r0, .L391+60
 5428 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5429              	.LVL281:
1718:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5430              		.loc 20 1718 9 is_stmt 1 view .LVU1468
1718:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5431              		.loc 20 1718 22 is_stmt 0 view .LVU1469
 5432 0140 9FED8D0A 		vldr.32	s0, .L391+56
 5433 0144 8E48     		ldr	r0, .L391+64
 5434 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5435              	.LVL282:
1719:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5436              		.loc 20 1719 9 is_stmt 1 view .LVU1470
1719:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5437              		.loc 20 1719 27 is_stmt 0 view .LVU1471
 5438 014a 9FED8B0A 		vldr.32	s0, .L391+56
 5439 014e 8D48     		ldr	r0, .L391+68
 5440 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5441              	.LVL283:
1720:Veno-Echo.cpp ****     }
 5442              		.loc 20 1720 9 is_stmt 1 view .LVU1472
1720:Veno-Echo.cpp ****     }
 5443              		.loc 20 1720 27 is_stmt 0 view .LVU1473
 5444 0154 9FED880A 		vldr.32	s0, .L391+56
 5445 0158 8B48     		ldr	r0, .L391+72
 5446 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5447              	.LVL284:
 5448              	.L349:
1723:Veno-Echo.cpp ****     {
 5449              		.loc 20 1723 5 is_stmt 1 view .LVU1474
1723:Veno-Echo.cpp ****     {
 5450              		.loc 20 1723 17 is_stmt 0 view .LVU1475
 5451 015e 94ED040A 		vldr.32	s0, [r4, #16]
1723:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 203


 5452              		.loc 20 1723 5 view .LVU1476
 5453 0162 DFED8A7A 		vldr.32	s15, .L391+76
 5454 0166 B4EEE70A 		vcmpe.f32	s0, s15
 5455 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5456 016e 07DB     		blt	.L350
1723:Veno-Echo.cpp ****     {
 5457              		.loc 20 1723 40 discriminator 1 view .LVU1477
 5458 0170 DFED877A 		vldr.32	s15, .L391+80
 5459 0174 B4EEE70A 		vcmpe.f32	s0, s15
 5460 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5461 017c 40F2A780 		bls	.L389
 5462              	.L350:
1732:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5463              		.loc 20 1732 9 is_stmt 1 view .LVU1478
1732:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5464              		.loc 20 1732 22 is_stmt 0 view .LVU1479
 5465 0180 9FED840A 		vldr.32	s0, .L391+84
 5466 0184 8448     		ldr	r0, .L391+88
 5467 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5468              	.LVL285:
1733:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5469              		.loc 20 1733 9 is_stmt 1 view .LVU1480
1733:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5470              		.loc 20 1733 22 is_stmt 0 view .LVU1481
 5471 018a 9FED820A 		vldr.32	s0, .L391+84
 5472 018e 8348     		ldr	r0, .L391+92
 5473 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5474              	.LVL286:
1734:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5475              		.loc 20 1734 9 is_stmt 1 view .LVU1482
1734:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5476              		.loc 20 1734 27 is_stmt 0 view .LVU1483
 5477 0194 9FED7F0A 		vldr.32	s0, .L391+84
 5478 0198 8148     		ldr	r0, .L391+96
 5479 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5480              	.LVL287:
1735:Veno-Echo.cpp **** 
 5481              		.loc 20 1735 9 is_stmt 1 view .LVU1484
1735:Veno-Echo.cpp **** 
 5482              		.loc 20 1735 27 is_stmt 0 view .LVU1485
 5483 019e 9FED7D0A 		vldr.32	s0, .L391+84
 5484 01a2 8048     		ldr	r0, .L391+100
 5485 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5486              	.LVL288:
 5487              	.L353:
1739:Veno-Echo.cpp ****     {
 5488              		.loc 20 1739 5 is_stmt 1 view .LVU1486
1739:Veno-Echo.cpp ****     {
 5489              		.loc 20 1739 17 is_stmt 0 view .LVU1487
 5490 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1739:Veno-Echo.cpp ****     {
 5491              		.loc 20 1739 5 view .LVU1488
 5492 01ac B5EEC00A 		vcmpe.f32	s0, #0
 5493 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5494 01b4 06DB     		blt	.L354
1739:Veno-Echo.cpp ****     {
 5495              		.loc 20 1739 38 discriminator 1 view .LVU1489
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 204


 5496 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 5497 01ba B4EEE70A 		vcmpe.f32	s0, s15
 5498 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5499 01c2 5DD9     		bls	.L390
 5500              	.L354:
1753:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5501              		.loc 20 1753 9 is_stmt 1 view .LVU1490
1753:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5502              		.loc 20 1753 26 is_stmt 0 view .LVU1491
 5503 01c4 9FED660A 		vldr.32	s0, .L391+32
 5504 01c8 6E48     		ldr	r0, .L391+68
 5505 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5506              	.LVL289:
1754:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5507              		.loc 20 1754 9 is_stmt 1 view .LVU1492
1754:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5508              		.loc 20 1754 26 is_stmt 0 view .LVU1493
 5509 01ce 9FED640A 		vldr.32	s0, .L391+32
 5510 01d2 7348     		ldr	r0, .L391+96
 5511 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5512              	.LVL290:
1755:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5513              		.loc 20 1755 9 is_stmt 1 view .LVU1494
1755:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5514              		.loc 20 1755 26 is_stmt 0 view .LVU1495
 5515 01d8 9FED610A 		vldr.32	s0, .L391+32
 5516 01dc 6A48     		ldr	r0, .L391+72
 5517 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5518              	.LVL291:
1756:Veno-Echo.cpp ****     }
 5519              		.loc 20 1756 9 is_stmt 1 view .LVU1496
1756:Veno-Echo.cpp ****     }
 5520              		.loc 20 1756 26 is_stmt 0 view .LVU1497
 5521 01e2 9FED5F0A 		vldr.32	s0, .L391+32
 5522 01e6 6F48     		ldr	r0, .L391+100
 5523 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5524              	.LVL292:
 5525              	.L357:
1759:Veno-Echo.cpp ****     {
 5526              		.loc 20 1759 5 is_stmt 1 view .LVU1498
1759:Veno-Echo.cpp ****     {
 5527              		.loc 20 1759 16 is_stmt 0 view .LVU1499
 5528 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1759:Veno-Echo.cpp ****     {
 5529              		.loc 20 1759 5 view .LVU1500
 5530 01f0 9FED6D7A 		vldr.32	s14, .L391+104
1765:Veno-Echo.cpp ****     }
 5531              		.loc 20 1765 21 view .LVU1501
 5532 01f4 6D4B     		ldr	r3, .L391+108
1759:Veno-Echo.cpp ****     {
 5533              		.loc 20 1759 5 view .LVU1502
 5534 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 5535 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5536 01fe 3CD4     		bmi	.L361
1763:Veno-Echo.cpp ****     {
 5537              		.loc 20 1763 14 is_stmt 1 view .LVU1503
 5538 0200 9FED6B7A 		vldr.32	s14, .L391+112
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 205


 5539 0204 F4EEC77A 		vcmpe.f32	s15, s14
 5540 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5541 020c 35DD     		ble	.L361
1765:Veno-Echo.cpp ****     }
 5542              		.loc 20 1765 9 view .LVU1504
1765:Veno-Echo.cpp ****     }
 5543              		.loc 20 1765 21 is_stmt 0 view .LVU1505
 5544 020e 0122     		movs	r2, #1
 5545 0210 1A70     		strb	r2, [r3]
1772:Veno-Echo.cpp **** 
 5546              		.loc 20 1772 1 view .LVU1506
 5547 0212 38BD     		pop	{r3, r4, r5, pc}
 5548              	.LVL293:
 5549              	.L324:
1677:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5550              		.loc 20 1677 9 is_stmt 1 view .LVU1507
 5551              	.LBB1307:
 5552              	.LBI1307:
  68:Veno-Echo.cpp ****     {
 5553              		.loc 20 68 10 view .LVU1508
 5554              	.LBB1308:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5555              		.loc 20 70 9 view .LVU1509
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5556              		.loc 20 70 28 is_stmt 0 view .LVU1510
 5557 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 5558              	.LVL294:
 5559              	.LBB1309:
 5560              	.LBI1309:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5561              		.loc 21 75 3 is_stmt 1 view .LVU1511
 5562              	.LBB1310:
 5563              		.loc 21 76 5 view .LVU1512
 5564              		.loc 21 76 5 is_stmt 0 view .LVU1513
 5565              	.LBE1310:
 5566              	.LBE1309:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5567              		.loc 20 70 15 view .LVU1514
 5568 0218 DFED666A 		vldr.32	s13, .L391+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5569              		.loc 20 70 53 view .LVU1515
 5570 021c 9FED4B6A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5571              		.loc 20 70 15 view .LVU1516
 5572 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5573              		.loc 20 70 53 view .LVU1517
 5574 0224 67EE867A 		vmul.f32	s15, s15, s12
 5575              	.LBB1312:
 5576              	.LBB1311:
 5577              		.loc 21 76 31 view .LVU1518
 5578 0228 B0EEC77A 		vabs.f32	s14, s14
 5579              	.LBE1311:
 5580              	.LBE1312:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5581              		.loc 20 70 9 view .LVU1519
 5582 022c B4EEE77A 		vcmpe.f32	s14, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 206


 5583 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5584 0234 06DD     		ble	.L331
 5585              	.LBE1308:
 5586              	.LBE1307:
1677:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5587              		.loc 20 1677 33 view .LVU1520
 5588 0236 1A68     		ldr	r2, [r3]
 5589              	.LBB1318:
 5590              	.LBB1317:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5591              		.loc 20 73 13 is_stmt 1 view .LVU1521
 5592              	.LBB1313:
 5593              	.LBB1314:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5594              		.loc 19 71 9 is_stmt 0 view .LVU1522
 5595 0238 0021     		movs	r1, #0
 5596              		.loc 19 72 9 view .LVU1523
 5597 023a 5F48     		ldr	r0, .L391+120
 5598              	.LVL295:
 5599              		.loc 19 72 9 view .LVU1524
 5600              	.LBE1314:
 5601              	.LBE1313:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5602              		.loc 20 73 27 view .LVU1525
 5603 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5604              		.loc 20 74 13 is_stmt 1 view .LVU1526
 5605              	.LVL296:
 5606              	.LBB1316:
 5607              	.LBI1313:
  69:delayline_reverse.h ****     {
 5608              		.loc 19 69 17 view .LVU1527
 5609              	.LBB1315:
 5610              		.loc 19 72 9 is_stmt 0 view .LVU1528
 5611 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5612              		.loc 19 71 9 view .LVU1529
 5613 0242 1160     		str	r1, [r2]	@ float
 5614              	.LVL297:
 5615              	.L331:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5616              		.loc 19 71 9 view .LVU1530
 5617              	.LBE1315:
 5618              	.LBE1316:
 5619              	.LBE1317:
 5620              	.LBE1318:
1678:Veno-Echo.cpp ****     }
 5621              		.loc 20 1678 9 is_stmt 1 view .LVU1531
 5622              	.LBB1319:
 5623              	.LBI1319:
  68:Veno-Echo.cpp ****     {
 5624              		.loc 20 68 10 view .LVU1532
 5625              	.LBB1320:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5626              		.loc 20 70 9 view .LVU1533
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5627              		.loc 20 70 28 is_stmt 0 view .LVU1534
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 207


 5628 0244 434B     		ldr	r3, .L391+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5629              		.loc 20 70 15 view .LVU1535
 5630 0246 DFED5B6A 		vldr.32	s13, .L391+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5631              		.loc 20 70 28 view .LVU1536
 5632 024a D3ED017A 		vldr.32	s15, [r3, #4]
 5633              	.LVL298:
 5634              	.LBB1321:
 5635              	.LBI1321:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5636              		.loc 21 75 3 is_stmt 1 view .LVU1537
 5637              	.LBB1322:
 5638              		.loc 21 76 5 view .LVU1538
 5639              		.loc 21 76 5 is_stmt 0 view .LVU1539
 5640              	.LBE1322:
 5641              	.LBE1321:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5642              		.loc 20 70 53 view .LVU1540
 5643 024e 9FED3F6A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5644              		.loc 20 70 15 view .LVU1541
 5645 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5646              		.loc 20 70 53 view .LVU1542
 5647 0256 67EE867A 		vmul.f32	s15, s15, s12
 5648              	.LBB1324:
 5649              	.LBB1323:
 5650              		.loc 21 76 31 view .LVU1543
 5651 025a B0EEC77A 		vabs.f32	s14, s14
 5652              	.LBE1323:
 5653              	.LBE1324:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5654              		.loc 20 70 9 view .LVU1544
 5655 025e B4EEE77A 		vcmpe.f32	s14, s15
 5656 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5657 0266 7FF710AF 		ble	.L330
 5658              	.LBE1320:
 5659              	.LBE1319:
1678:Veno-Echo.cpp ****     }
 5660              		.loc 20 1678 33 view .LVU1545
 5661 026a 1A68     		ldr	r2, [r3]
 5662              	.LBB1330:
 5663              	.LBB1329:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5664              		.loc 20 73 13 is_stmt 1 view .LVU1546
 5665              	.LBB1325:
 5666              	.LBB1326:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5667              		.loc 19 71 9 is_stmt 0 view .LVU1547
 5668 026c 0021     		movs	r1, #0
 5669              		.loc 19 72 9 view .LVU1548
 5670 026e 5248     		ldr	r0, .L391+120
 5671              	.LBE1326:
 5672              	.LBE1325:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5673              		.loc 20 73 27 view .LVU1549
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 208


 5674 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5675              		.loc 20 74 13 is_stmt 1 view .LVU1550
 5676              	.LVL299:
 5677              	.LBB1328:
 5678              	.LBI1325:
  69:delayline_reverse.h ****     {
 5679              		.loc 19 69 17 view .LVU1551
 5680              	.LBB1327:
 5681              		.loc 19 72 9 is_stmt 0 view .LVU1552
 5682 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5683              		.loc 19 71 9 view .LVU1553
 5684 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 5685              		.loc 19 73 5 view .LVU1554
 5686 0278 07E7     		b	.L330
 5687              	.LVL300:
 5688              	.L361:
 5689              		.loc 19 73 5 view .LVU1555
 5690              	.LBE1327:
 5691              	.LBE1328:
 5692              	.LBE1329:
 5693              	.LBE1330:
1761:Veno-Echo.cpp ****     }
 5694              		.loc 20 1761 9 is_stmt 1 view .LVU1556
1761:Veno-Echo.cpp ****     }
 5695              		.loc 20 1761 21 is_stmt 0 view .LVU1557
 5696 027a 0022     		movs	r2, #0
 5697 027c 1A70     		strb	r2, [r3]
1772:Veno-Echo.cpp **** 
 5698              		.loc 20 1772 1 view .LVU1558
 5699 027e 38BD     		pop	{r3, r4, r5, pc}
 5700              	.LVL301:
 5701              	.L390:
1741:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5702              		.loc 20 1741 9 is_stmt 1 view .LVU1559
1741:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5703              		.loc 20 1741 21 is_stmt 0 view .LVU1560
 5704 0280 3E48     		ldr	r0, .L391+60
 5705 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5706              	.LVL302:
1742:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5707              		.loc 20 1742 9 is_stmt 1 view .LVU1561
1742:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5708              		.loc 20 1742 21 is_stmt 0 view .LVU1562
 5709 0286 94ED060A 		vldr.32	s0, [r4, #24]
 5710 028a 4348     		ldr	r0, .L391+88
 5711 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5712              	.LVL303:
1743:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5713              		.loc 20 1743 9 is_stmt 1 view .LVU1563
1743:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5714              		.loc 20 1743 21 is_stmt 0 view .LVU1564
 5715 0290 94ED060A 		vldr.32	s0, [r4, #24]
 5716 0294 3A48     		ldr	r0, .L391+64
 5717 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 209


 5718              	.LVL304:
1744:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5719              		.loc 20 1744 9 is_stmt 1 view .LVU1565
1744:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5720              		.loc 20 1744 21 is_stmt 0 view .LVU1566
 5721 029a 94ED060A 		vldr.32	s0, [r4, #24]
 5722 029e 3F48     		ldr	r0, .L391+92
 5723 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5724              	.LVL305:
1745:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5725              		.loc 20 1745 9 is_stmt 1 view .LVU1567
1745:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5726              		.loc 20 1745 26 is_stmt 0 view .LVU1568
 5727 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 5728 02a8 3648     		ldr	r0, .L391+68
 5729 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5730              	.LVL306:
1746:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5731              		.loc 20 1746 9 is_stmt 1 view .LVU1569
1746:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5732              		.loc 20 1746 26 is_stmt 0 view .LVU1570
 5733 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 5734 02b2 3B48     		ldr	r0, .L391+96
 5735 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5736              	.LVL307:
1747:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5737              		.loc 20 1747 9 is_stmt 1 view .LVU1571
1747:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5738              		.loc 20 1747 26 is_stmt 0 view .LVU1572
 5739 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 5740 02bc 3248     		ldr	r0, .L391+72
 5741 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5742              	.LVL308:
1748:Veno-Echo.cpp ****     }
 5743              		.loc 20 1748 9 is_stmt 1 view .LVU1573
1748:Veno-Echo.cpp ****     }
 5744              		.loc 20 1748 26 is_stmt 0 view .LVU1574
 5745 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 5746 02c6 3748     		ldr	r0, .L391+100
 5747 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5748              	.LVL309:
 5749 02cc 8EE7     		b	.L357
 5750              	.L389:
1725:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 5751              		.loc 20 1725 9 is_stmt 1 view .LVU1575
1725:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 5752              		.loc 20 1725 22 is_stmt 0 view .LVU1576
 5753 02ce 3248     		ldr	r0, .L391+88
 5754 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5755              	.LVL310:
1726:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 5756              		.loc 20 1726 9 is_stmt 1 view .LVU1577
1726:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 5757              		.loc 20 1726 22 is_stmt 0 view .LVU1578
 5758 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 5759 02d8 3048     		ldr	r0, .L391+92
 5760 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 210


 5761              	.LVL311:
1727:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 5762              		.loc 20 1727 9 is_stmt 1 view .LVU1579
1727:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 5763              		.loc 20 1727 27 is_stmt 0 view .LVU1580
 5764 02de 94ED040A 		vldr.32	s0, [r4, #16]
 5765 02e2 2F48     		ldr	r0, .L391+96
 5766 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5767              	.LVL312:
1728:Veno-Echo.cpp ****     }
 5768              		.loc 20 1728 9 is_stmt 1 view .LVU1581
1728:Veno-Echo.cpp ****     }
 5769              		.loc 20 1728 27 is_stmt 0 view .LVU1582
 5770 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 5771 02ec 2D48     		ldr	r0, .L391+100
 5772 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5773              	.LVL313:
 5774 02f2 59E7     		b	.L353
 5775              	.L388:
1710:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 5776              		.loc 20 1710 9 is_stmt 1 view .LVU1583
1710:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 5777              		.loc 20 1710 22 is_stmt 0 view .LVU1584
 5778 02f4 2148     		ldr	r0, .L391+60
 5779 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5780              	.LVL314:
1711:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 5781              		.loc 20 1711 9 is_stmt 1 view .LVU1585
1711:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 5782              		.loc 20 1711 22 is_stmt 0 view .LVU1586
 5783 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 5784 02fe 2048     		ldr	r0, .L391+64
 5785 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5786              	.LVL315:
1712:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 5787              		.loc 20 1712 9 is_stmt 1 view .LVU1587
1712:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 5788              		.loc 20 1712 27 is_stmt 0 view .LVU1588
 5789 0304 94ED050A 		vldr.32	s0, [r4, #20]
 5790 0308 1E48     		ldr	r0, .L391+68
 5791 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5792              	.LVL316:
1713:Veno-Echo.cpp ****     }
 5793              		.loc 20 1713 9 is_stmt 1 view .LVU1589
1713:Veno-Echo.cpp ****     }
 5794              		.loc 20 1713 27 is_stmt 0 view .LVU1590
 5795 030e 94ED050A 		vldr.32	s0, [r4, #20]
 5796 0312 1D48     		ldr	r0, .L391+72
 5797 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5798              	.LVL317:
 5799 0318 21E7     		b	.L349
 5800              	.L382:
1696:Veno-Echo.cpp ****     }
 5801              		.loc 20 1696 18 view .LVU1591
 5802 031a DFED117A 		vldr.32	s15, .L391+32
 5803 031e DCE6     		b	.L339
 5804              	.LVL318:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 211


 5805              	.L387:
 5806              	.LBB1331:
 5807              	.LBB1299:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5808              		.loc 20 74 29 view .LVU1592
 5809 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 5810              	.LBB1291:
 5811              	.LBB1292:
  72:delayline_reverse.h ****     }
 5812              		.loc 19 72 9 view .LVU1593
 5813 0324 0A4D     		ldr	r5, .L391+16
 5814              	.LBE1292:
 5815              	.LBE1291:
 5816              	.LBE1299:
 5817              	.LBE1331:
1673:Veno-Echo.cpp ****     }
 5818              		.loc 20 1673 33 view .LVU1594
 5819 0326 1968     		ldr	r1, [r3]
 5820              	.LBB1332:
 5821              	.LBB1300:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5822              		.loc 20 73 13 is_stmt 1 view .LVU1595
 5823              	.LBB1296:
 5824              	.LBB1293:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5825              		.loc 19 71 9 is_stmt 0 view .LVU1596
 5826 0328 0020     		movs	r0, #0
 5827              	.LBE1293:
 5828              	.LBE1296:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5829              		.loc 20 73 27 view .LVU1597
 5830 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5831              		.loc 20 74 29 view .LVU1598
 5832 032e 17EE102A 		vmov	r2, s14	@ int
 5833              	.LBB1297:
 5834              	.LBB1294:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5835              		.loc 19 71 9 view .LVU1599
 5836 0332 0860     		str	r0, [r1]	@ float
 5837              	.LVL319:
  72:delayline_reverse.h ****     }
 5838              		.loc 19 72 9 view .LVU1600
 5839 0334 AA42     		cmp	r2, r5
 5840 0336 28BF     		it	cs
 5841 0338 2A46     		movcs	r2, r5
 5842              	.LBE1294:
 5843              	.LBE1297:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5844              		.loc 20 74 13 is_stmt 1 view .LVU1601
 5845              	.LVL320:
 5846              	.LBB1298:
 5847              	.LBI1291:
  69:delayline_reverse.h ****     {
 5848              		.loc 19 69 17 view .LVU1602
 5849              	.LBB1295:
  72:delayline_reverse.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 212


 5850              		.loc 19 72 9 is_stmt 0 view .LVU1603
 5851 033a 0A61     		str	r2, [r1, #16]
 5852              		.loc 19 73 5 view .LVU1604
 5853 033c A5E6     		b	.L330
 5854              	.L392:
 5855 033e 00BF     		.align	2
 5856              	.L391:
 5857 0340 0050C346 		.word	1187205120
 5858 0344 00000000 		.word	.LANCHOR2
 5859 0348 00606A48 		.word	1214930944
 5860 034c 0AD7A33B 		.word	1000593162
 5861 0350 BF270900 		.word	599999
 5862 0354 00000000 		.word	.LANCHOR3
 5863 0358 00000000 		.word	.LANCHOR12
 5864 035c 0000FA43 		.word	1140457472
 5865 0360 00000000 		.word	0
 5866 0364 CDCCCC3D 		.word	1036831949
 5867 0368 00000000 		.word	.LANCHOR67
 5868 036c 00000000 		.word	.LANCHOR75
 5869 0370 9A99A140 		.word	1084332442
 5870 0374 0080BB44 		.word	1153138688
 5871 0378 00803B46 		.word	1178304512
 5872 037c 00000000 		.word	.LANCHOR46
 5873 0380 00000000 		.word	.LANCHOR47
 5874 0384 00000000 		.word	.LANCHOR48
 5875 0388 00000000 		.word	.LANCHOR49
 5876 038c 0000C842 		.word	1120403456
 5877 0390 00004844 		.word	1145569280
 5878 0394 00004843 		.word	1128792064
 5879 0398 00000000 		.word	.LANCHOR34
 5880 039c 00000000 		.word	.LANCHOR35
 5881 03a0 00000000 		.word	.LANCHOR36
 5882 03a4 00000000 		.word	.LANCHOR37
 5883 03a8 6666E63E 		.word	1055286886
 5884 03ac 00000000 		.word	.LANCHOR82
 5885 03b0 CDCC0C3F 		.word	1057803469
 5886 03b4 00650148 		.word	1208050944
 5887 03b8 94050200 		.word	132500
 5888              	.LBE1295:
 5889              	.LBE1298:
 5890              	.LBE1300:
 5891              	.LBE1332:
 5892              		.cfi_endproc
 5893              	.LFE4331:
 5895              		.section	.text.startup.main,"ax",%progbits
 5896              		.align	1
 5897              		.p2align 2,,3
 5898              		.global	main
 5899              		.syntax unified
 5900              		.thumb
 5901              		.thumb_func
 5902              		.fpu fpv5-d16
 5904              	main:
 5905              	.LFB4311:
 582:Veno-Echo.cpp ****     // initialize hardware.
 5906              		.loc 20 582 1 is_stmt 1 view -0
 5907              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 213


 5908              		@ Volatile: function does not return.
 5909              		@ args = 0, pretend = 0, frame = 232
 5910              		@ frame_needed = 0, uses_anonymous_args = 0
 584:Veno-Echo.cpp ****     hw.Init();
 5911              		.loc 20 584 5 view .LVU1606
 582:Veno-Echo.cpp ****     // initialize hardware.
 5912              		.loc 20 582 1 is_stmt 0 view .LVU1607
 5913 0000 80B5     		push	{r7, lr}
 5914              		.cfi_def_cfa_offset 8
 5915              		.cfi_offset 7, -8
 5916              		.cfi_offset 14, -4
 584:Veno-Echo.cpp ****     hw.Init();
 5917              		.loc 20 584 17 view .LVU1608
 5918 0002 D148     		ldr	r0, .L396
 582:Veno-Echo.cpp ****     // initialize hardware.
 5919              		.loc 20 582 1 view .LVU1609
 5920 0004 BCB0     		sub	sp, sp, #240
 5921              		.cfi_def_cfa_offset 248
 584:Veno-Echo.cpp ****     hw.Init();
 5922              		.loc 20 584 17 view .LVU1610
 5923 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 5924              	.LVL321:
 585:Veno-Echo.cpp ****     
 5925              		.loc 20 585 5 is_stmt 1 view .LVU1611
 585:Veno-Echo.cpp ****     
 5926              		.loc 20 585 12 is_stmt 0 view .LVU1612
 5927 000a 0021     		movs	r1, #0
 5928 000c CE48     		ldr	r0, .L396
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5929              		.loc 20 589 16 view .LVU1613
 5930 000e B2EE088A 		vmov.f32	s16, #1.2e+1
 585:Veno-Echo.cpp ****     
 5931              		.loc 20 585 12 view .LVU1614
 5932 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 5933              	.LVL322:
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5934              		.loc 20 589 5 is_stmt 1 view .LVU1615
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5935              		.loc 20 589 16 is_stmt 0 view .LVU1616
 5936 0016 0C20     		movs	r0, #12
 5937 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5938              	.LVL323:
 5939 001c 0346     		mov	r3, r0	@ movhi
 5940 001e 0620     		movs	r0, #6
 596:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5941              		.loc 20 596 22 view .LVU1617
 5942 0020 0224     		movs	r4, #2
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5943              		.loc 20 589 16 view .LVU1618
 5944 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 5945 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5946              	.LVL324:
 5947 002a 0346     		mov	r3, r0	@ movhi
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5948              		.loc 20 589 80 view .LVU1619
 5949 002c C648     		ldr	r0, .L396
 596:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 214


 5950              		.loc 20 596 22 view .LVU1620
 5951 002e 9FEDC79A 		vldr.32	s18, .L396+4
 5952              	.LBB1333:
 5953              	.LBB1334:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 5954              		.loc 7 58 57 view .LVU1621
 5955 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 5956              	.LBE1334:
 5957              	.LBE1333:
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5958              		.loc 20 589 16 view .LVU1622
 5959 0036 ADF81030 		strh	r3, [sp, #16]	@ movhi
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5960              		.loc 20 589 80 view .LVU1623
 5961 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5962              	.LVL325:
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5963              		.loc 20 589 16 view .LVU1624
 5964 003e 0123     		movs	r3, #1
 5965 0040 80EE080A 		vdiv.f32	s0, s0, s16
 5966 0044 049A     		ldr	r2, [sp, #16]
 5967              	.LBB1337:
 5968              	.LBB1338:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5969              		.loc 7 54 63 view .LVU1625
 5970 0046 4FF07C55 		mov	r5, #1056964608
 5971              	.LBE1338:
 5972              	.LBE1337:
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5973              		.loc 20 589 16 view .LVU1626
 5974 004a 0399     		ldr	r1, [sp, #12]
 5975              	.LBB1341:
 5976              	.LBB1342:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 5977              		.loc 10 64 50 view .LVU1627
 5978 004c 1F46     		mov	r7, r3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 215


 5979              	.LBE1342:
 5980              	.LBE1341:
 589:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5981              		.loc 20 589 16 view .LVU1628
 5982 004e C048     		ldr	r0, .L396+8
 5983 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5984              	.LVL326:
 590:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5985              		.loc 20 590 5 is_stmt 1 view .LVU1629
 590:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5986              		.loc 20 590 16 is_stmt 0 view .LVU1630
 5987 0054 0D20     		movs	r0, #13
 5988 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5989              	.LVL327:
 5990 005a 0346     		mov	r3, r0	@ movhi
 5991 005c 0720     		movs	r0, #7
 603:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5992              		.loc 20 603 20 view .LVU1631
 5993 005e DFF85483 		ldr	r8, .L396+108
 590:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5994              		.loc 20 590 16 view .LVU1632
 5995 0062 ADF81430 		strh	r3, [sp, #20]	@ movhi
 5996 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5997              	.LVL328:
 5998 006a 0346     		mov	r3, r0	@ movhi
 590:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5999              		.loc 20 590 80 view .LVU1633
 6000 006c B648     		ldr	r0, .L396
 6001              	.LBB1345:
 6002              	.LBB1346:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6003              		.loc 7 54 63 view .LVU1634
 6004 006e B94E     		ldr	r6, .L396+12
 6005              	.LBE1346:
 6006              	.LBE1345:
 590:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6007              		.loc 20 590 16 view .LVU1635
 6008 0070 ADF81830 		strh	r3, [sp, #24]	@ movhi
 590:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6009              		.loc 20 590 80 view .LVU1636
 6010 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6011              	.LVL329:
 590:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6012              		.loc 20 590 16 view .LVU1637
 6013 0078 069A     		ldr	r2, [sp, #24]
 6014 007a 80EE080A 		vdiv.f32	s0, s0, s16
 6015 007e 0599     		ldr	r1, [sp, #20]
 6016 0080 3B46     		mov	r3, r7
 6017 0082 B548     		ldr	r0, .L396+16
 6018 0084 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6019              	.LVL330:
 591:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6020              		.loc 20 591 5 is_stmt 1 view .LVU1638
 591:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6021              		.loc 20 591 18 is_stmt 0 view .LVU1639
 6022 0088 0A20     		movs	r0, #10
 6023 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 216


 6024              	.LVL331:
 6025 008e 0346     		mov	r3, r0	@ movhi
 6026 0090 2046     		mov	r0, r4
 609:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6027              		.loc 20 609 20 view .LVU1640
 6028 0092 DFF82493 		ldr	r9, .L396+112
 591:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6029              		.loc 20 591 18 view .LVU1641
 6030 0096 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 6031 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6032              	.LVL332:
 6033 009e 0346     		mov	r3, r0	@ movhi
 591:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6034              		.loc 20 591 85 view .LVU1642
 6035 00a0 A948     		ldr	r0, .L396
 591:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6036              		.loc 20 591 18 view .LVU1643
 6037 00a2 ADF82030 		strh	r3, [sp, #32]	@ movhi
 591:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6038              		.loc 20 591 85 view .LVU1644
 6039 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6040              	.LVL333:
 591:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6041              		.loc 20 591 18 view .LVU1645
 6042 00aa 089A     		ldr	r2, [sp, #32]
 6043 00ac 80EE080A 		vdiv.f32	s0, s0, s16
 6044 00b0 0799     		ldr	r1, [sp, #28]
 6045 00b2 0023     		movs	r3, #0
 6046 00b4 A948     		ldr	r0, .L396+20
 6047 00b6 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6048              	.LVL334:
 592:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6049              		.loc 20 592 5 is_stmt 1 view .LVU1646
 592:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6050              		.loc 20 592 18 is_stmt 0 view .LVU1647
 6051 00ba 0B20     		movs	r0, #11
 6052 00bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6053              	.LVL335:
 6054 00c0 0346     		mov	r3, r0	@ movhi
 6055 00c2 0320     		movs	r0, #3
 6056 00c4 ADF82430 		strh	r3, [sp, #36]	@ movhi
 6057 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6058              	.LVL336:
 6059 00cc 0346     		mov	r3, r0	@ movhi
 592:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6060              		.loc 20 592 85 view .LVU1648
 6061 00ce 9E48     		ldr	r0, .L396
 592:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6062              		.loc 20 592 18 view .LVU1649
 6063 00d0 ADF82830 		strh	r3, [sp, #40]	@ movhi
 592:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6064              		.loc 20 592 85 view .LVU1650
 6065 00d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6066              	.LVL337:
 592:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6067              		.loc 20 592 18 view .LVU1651
 6068 00d8 0A9A     		ldr	r2, [sp, #40]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 217


 6069 00da 80EE080A 		vdiv.f32	s0, s0, s16
 6070 00de 0999     		ldr	r1, [sp, #36]
 6071 00e0 0023     		movs	r3, #0
 6072 00e2 9F48     		ldr	r0, .L396+24
 6073 00e4 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6074              	.LVL338:
 593:Veno-Echo.cpp **** 
 6075              		.loc 20 593 5 is_stmt 1 view .LVU1652
 593:Veno-Echo.cpp **** 
 6076              		.loc 20 593 20 is_stmt 0 view .LVU1653
 6077 00e8 1820     		movs	r0, #24
 6078 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6079              	.LVL339:
 6080 00ee 0346     		mov	r3, r0	@ movhi
 6081 00f0 0420     		movs	r0, #4
 6082 00f2 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6083 00f6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6084              	.LVL340:
 6085 00fa 0346     		mov	r3, r0	@ movhi
 593:Veno-Echo.cpp **** 
 6086              		.loc 20 593 93 view .LVU1654
 6087 00fc 9248     		ldr	r0, .L396
 593:Veno-Echo.cpp **** 
 6088              		.loc 20 593 20 view .LVU1655
 6089 00fe ADF83030 		strh	r3, [sp, #48]	@ movhi
 593:Veno-Echo.cpp **** 
 6090              		.loc 20 593 93 view .LVU1656
 6091 0102 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6092              	.LVL341:
 593:Veno-Echo.cpp **** 
 6093              		.loc 20 593 20 view .LVU1657
 6094 0106 2346     		mov	r3, r4
 6095 0108 80EE080A 		vdiv.f32	s0, s0, s16
 6096 010c 0C9A     		ldr	r2, [sp, #48]
 6097 010e 0B99     		ldr	r1, [sp, #44]
 6098 0110 9448     		ldr	r0, .L396+28
 6099 0112 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6100              	.LVL342:
 596:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6101              		.loc 20 596 5 is_stmt 1 view .LVU1658
 596:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6102              		.loc 20 596 22 is_stmt 0 view .LVU1659
 6103 0116 0020     		movs	r0, #0
 6104 0118 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6105              	.LVL343:
 6106 011c 0346     		mov	r3, r0	@ movhi
 596:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6107              		.loc 20 596 55 view .LVU1660
 6108 011e 8A48     		ldr	r0, .L396
 596:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6109              		.loc 20 596 22 view .LVU1661
 6110 0120 ADF83430 		strh	r3, [sp, #52]	@ movhi
 596:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6111              		.loc 20 596 55 view .LVU1662
 6112 0124 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6113              	.LVL344:
 596:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 218


 6114              		.loc 20 596 22 view .LVU1663
 6115 0128 3A46     		mov	r2, r7
 6116 012a 0D99     		ldr	r1, [sp, #52]
 6117 012c 80EE090A 		vdiv.f32	s0, s0, s18
 6118 0130 3B46     		mov	r3, r7
 6119 0132 8D48     		ldr	r0, .L396+32
 6120 0134 0094     		str	r4, [sp]
 6121 0136 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6122              	.LVL345:
 597:Veno-Echo.cpp **** 
 6123              		.loc 20 597 5 is_stmt 1 view .LVU1664
 597:Veno-Echo.cpp **** 
 6124              		.loc 20 597 22 is_stmt 0 view .LVU1665
 6125 013a 3846     		mov	r0, r7
 6126 013c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6127              	.LVL346:
 6128 0140 0346     		mov	r3, r0	@ movhi
 597:Veno-Echo.cpp **** 
 6129              		.loc 20 597 55 view .LVU1666
 6130 0142 8148     		ldr	r0, .L396
 597:Veno-Echo.cpp **** 
 6131              		.loc 20 597 22 view .LVU1667
 6132 0144 ADF83830 		strh	r3, [sp, #56]	@ movhi
 597:Veno-Echo.cpp **** 
 6133              		.loc 20 597 55 view .LVU1668
 6134 0148 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6135              	.LVL347:
 597:Veno-Echo.cpp **** 
 6136              		.loc 20 597 22 view .LVU1669
 6137 014c 3A46     		mov	r2, r7
 6138 014e 0E99     		ldr	r1, [sp, #56]
 6139 0150 80EE090A 		vdiv.f32	s0, s0, s18
 6140 0154 3B46     		mov	r3, r7
 6141 0156 8548     		ldr	r0, .L396+36
 6142 0158 0094     		str	r4, [sp]
 6143 015a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6144              	.LVL348:
 600:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6145              		.loc 20 600 5 is_stmt 1 view .LVU1670
 600:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6146              		.loc 20 600 14 is_stmt 0 view .LVU1671
 6147 015e 1720     		movs	r0, #23
 6148 0160 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6149              	.LVL349:
 6150 0164 0346     		mov	r3, r0	@ movhi
 600:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6151              		.loc 20 600 48 view .LVU1672
 6152 0166 7848     		ldr	r0, .L396
 600:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6153              		.loc 20 600 14 view .LVU1673
 6154 0168 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 600:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6155              		.loc 20 600 48 view .LVU1674
 6156 016c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6157              	.LVL350:
 600:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6158              		.loc 20 600 14 view .LVU1675
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 219


 6159 0170 0F99     		ldr	r1, [sp, #60]
 6160 0172 80EE090A 		vdiv.f32	s0, s0, s18
 6161 0176 7E48     		ldr	r0, .L396+40
 6162 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6163              	.LVL351:
 601:Veno-Echo.cpp ****     
 6164              		.loc 20 601 5 is_stmt 1 view .LVU1676
 601:Veno-Echo.cpp ****     
 6165              		.loc 20 601 17 is_stmt 0 view .LVU1677
 6166 017c 0520     		movs	r0, #5
 6167 017e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6168              	.LVL352:
 6169 0182 0346     		mov	r3, r0	@ movhi
 6170 0184 7048     		ldr	r0, .L396
 6171 0186 ADF84030 		strh	r3, [sp, #64]	@ movhi
 6172 018a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6173              	.LVL353:
 6174 018e 1099     		ldr	r1, [sp, #64]
 6175 0190 7848     		ldr	r0, .L396+44
 6176 0192 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6177              	.LVL354:
 603:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6178              		.loc 20 603 5 is_stmt 1 view .LVU1678
 603:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6179              		.loc 20 603 20 is_stmt 0 view .LVU1679
 6180 0196 6C48     		ldr	r0, .L396
 6181 0198 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6182              	.LVL355:
 6183 019c 4046     		mov	r0, r8
 6184 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6185              	.LVL356:
 604:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6186              		.loc 20 604 5 is_stmt 1 view .LVU1680
 6187              	.LBB1349:
 6188              	.LBI1337:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6189              		.loc 7 54 17 view .LVU1681
 6190              	.LBB1339:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6191              		.loc 7 54 48 view .LVU1682
 6192              	.LBE1339:
 6193              	.LBE1349:
 609:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6194              		.loc 20 609 20 is_stmt 0 view .LVU1683
 6195 01a2 6948     		ldr	r0, .L396
 6196              	.LBB1350:
 6197              	.LBB1335:
 6198              		.loc 7 58 57 view .LVU1684
 6199 01a4 C8ED008A 		vstr.32	s17, [r8]
 6200              	.LBE1335:
 6201              	.LBE1350:
 615:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6202              		.loc 20 615 17 view .LVU1685
 6203 01a8 734C     		ldr	r4, .L396+48
 6204              	.LBB1351:
 6205              	.LBB1340:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 220


 6206              		.loc 7 54 63 view .LVU1686
 6207 01aa C8F80850 		str	r5, [r8, #8]	@ float
 6208              	.LVL357:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6209              		.loc 7 54 63 view .LVU1687
 6210              	.LBE1340:
 6211              	.LBE1351:
 605:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6212              		.loc 20 605 5 is_stmt 1 view .LVU1688
 6213              	.LBB1352:
 6214              	.LBI1345:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6215              		.loc 7 54 17 view .LVU1689
 6216              	.LBB1347:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6217              		.loc 7 54 48 view .LVU1690
 6218              	.LBE1347:
 6219              	.LBE1352:
 6220              	.LBB1353:
 6221              	.LBB1354:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6222              		.loc 7 54 63 is_stmt 0 view .LVU1691
 6223 01ae C8F81450 		str	r5, [r8, #20]	@ float
 6224              	.LBE1354:
 6225              	.LBE1353:
 6226              	.LBB1356:
 6227              	.LBB1348:
 6228 01b2 C8F80C60 		str	r6, [r8, #12]	@ float
 6229              	.LVL358:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6230              		.loc 7 54 63 view .LVU1692
 6231              	.LBE1348:
 6232              	.LBE1356:
 606:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6233              		.loc 20 606 5 is_stmt 1 view .LVU1693
 6234              	.LBB1357:
 6235              	.LBI1353:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6236              		.loc 7 54 17 view .LVU1694
 6237              	.LBB1355:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6238              		.loc 7 54 48 view .LVU1695
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6239              		.loc 7 54 48 is_stmt 0 view .LVU1696
 6240              	.LBE1355:
 6241              	.LBE1357:
 607:Veno-Echo.cpp **** 
 6242              		.loc 20 607 5 is_stmt 1 view .LVU1697
 6243              	.LBB1358:
 6244              	.LBI1333:
 6245              		.loc 7 58 17 view .LVU1698
 6246              	.LBB1336:
 6247              		.loc 7 58 52 view .LVU1699
 6248              		.loc 7 58 52 is_stmt 0 view .LVU1700
 6249              	.LBE1336:
 6250              	.LBE1358:
 609:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 221


 6251              		.loc 20 609 5 is_stmt 1 view .LVU1701
 609:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6252              		.loc 20 609 20 is_stmt 0 view .LVU1702
 6253 01b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6254              	.LVL359:
 6255 01ba 4846     		mov	r0, r9
 621:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6256              		.loc 20 621 17 view .LVU1703
 6257 01bc DFF8FC81 		ldr	r8, .L396+116
 609:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6258              		.loc 20 609 20 view .LVU1704
 6259 01c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6260              	.LVL360:
 610:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6261              		.loc 20 610 5 is_stmt 1 view .LVU1705
 6262              	.LBB1359:
 6263              	.LBI1359:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6264              		.loc 7 54 17 view .LVU1706
 6265              	.LBB1360:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6266              		.loc 7 54 48 view .LVU1707
 6267              	.LBE1360:
 6268              	.LBE1359:
 615:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6269              		.loc 20 615 17 is_stmt 0 view .LVU1708
 6270 01c4 6048     		ldr	r0, .L396
 6271              	.LBB1362:
 6272              	.LBB1361:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6273              		.loc 7 54 63 view .LVU1709
 6274 01c6 C9F80850 		str	r5, [r9, #8]	@ float
 6275              	.LVL361:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6276              		.loc 7 54 63 view .LVU1710
 6277              	.LBE1361:
 6278              	.LBE1362:
 611:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6279              		.loc 20 611 5 is_stmt 1 view .LVU1711
 6280              	.LBB1363:
 6281              	.LBI1363:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6282              		.loc 7 54 17 view .LVU1712
 6283              	.LBB1364:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6284              		.loc 7 54 48 view .LVU1713
 6285              	.LBE1364:
 6286              	.LBE1363:
 6287              	.LBB1366:
 6288              	.LBB1367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6289              		.loc 7 54 63 is_stmt 0 view .LVU1714
 6290 01ca C9F81450 		str	r5, [r9, #20]	@ float
 6291              	.LBE1367:
 6292              	.LBE1366:
 6293              	.LBB1369:
 6294              	.LBB1365:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 222


 6295 01ce C9F80C60 		str	r6, [r9, #12]	@ float
 6296              	.LVL362:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6297              		.loc 7 54 63 view .LVU1715
 6298              	.LBE1365:
 6299              	.LBE1369:
 612:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6300              		.loc 20 612 5 is_stmt 1 view .LVU1716
 6301              	.LBB1370:
 6302              	.LBI1366:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6303              		.loc 7 54 17 view .LVU1717
 6304              	.LBB1368:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6305              		.loc 7 54 48 view .LVU1718
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6306              		.loc 7 54 48 is_stmt 0 view .LVU1719
 6307              	.LBE1368:
 6308              	.LBE1370:
 613:Veno-Echo.cpp **** 
 6309              		.loc 20 613 5 is_stmt 1 view .LVU1720
 6310              	.LBB1371:
 6311              	.LBI1371:
 6312              		.loc 7 58 17 view .LVU1721
 6313              	.LBB1372:
 6314              		.loc 7 58 52 view .LVU1722
 6315              		.loc 7 58 57 is_stmt 0 view .LVU1723
 6316 01d2 C9ED008A 		vstr.32	s17, [r9]
 6317              	.LVL363:
 6318              		.loc 7 58 57 view .LVU1724
 6319              	.LBE1372:
 6320              	.LBE1371:
 615:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6321              		.loc 20 615 5 is_stmt 1 view .LVU1725
 615:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6322              		.loc 20 615 17 is_stmt 0 view .LVU1726
 6323 01d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6324              	.LVL364:
 6325 01da 2046     		mov	r0, r4
 640:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6326              		.loc 20 640 17 view .LVU1727
 6327 01dc 9FED678A 		vldr.32	s16, .L396+52
 615:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6328              		.loc 20 615 17 view .LVU1728
 6329 01e0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6330              	.LVL365:
 616:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6331              		.loc 20 616 5 is_stmt 1 view .LVU1729
 6332              	.LBB1373:
 6333              	.LBI1373:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6334              		.loc 7 54 17 view .LVU1730
 6335              	.LBB1374:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6336              		.loc 7 54 48 view .LVU1731
 6337              	.LBE1374:
 6338              	.LBE1373:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 223


 621:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6339              		.loc 20 621 17 is_stmt 0 view .LVU1732
 6340 01e4 5848     		ldr	r0, .L396
 6341              	.LBB1376:
 6342              	.LBB1377:
 6343              		.loc 7 58 57 view .LVU1733
 6344 01e6 C4ED008A 		vstr.32	s17, [r4]
 6345              	.LBE1377:
 6346              	.LBE1376:
 6347              	.LBB1379:
 6348              	.LBB1375:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6349              		.loc 7 54 63 view .LVU1734
 6350 01ea A660     		str	r6, [r4, #8]	@ float
 6351              	.LVL366:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6352              		.loc 7 54 63 view .LVU1735
 6353              	.LBE1375:
 6354              	.LBE1379:
 617:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6355              		.loc 20 617 5 is_stmt 1 view .LVU1736
 6356              	.LBB1380:
 6357              	.LBI1380:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6358              		.loc 7 54 17 view .LVU1737
 6359              	.LBB1381:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6360              		.loc 7 54 48 view .LVU1738
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6361              		.loc 7 54 63 is_stmt 0 view .LVU1739
 6362 01ec E660     		str	r6, [r4, #12]	@ float
 6363              	.LVL367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6364              		.loc 7 54 63 view .LVU1740
 6365              	.LBE1381:
 6366              	.LBE1380:
 618:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 6367              		.loc 20 618 5 is_stmt 1 view .LVU1741
 6368              	.LBB1382:
 6369              	.LBI1382:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6370              		.loc 7 54 17 view .LVU1742
 6371              	.LBB1383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6372              		.loc 7 54 48 view .LVU1743
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6373              		.loc 7 54 63 is_stmt 0 view .LVU1744
 6374 01ee 6661     		str	r6, [r4, #20]	@ float
 6375              	.LVL368:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6376              		.loc 7 54 63 view .LVU1745
 6377              	.LBE1383:
 6378              	.LBE1382:
 619:Veno-Echo.cpp **** 
 6379              		.loc 20 619 5 is_stmt 1 view .LVU1746
 6380              	.LBB1384:
 6381              	.LBI1376:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 224


 6382              		.loc 7 58 17 view .LVU1747
 6383              	.LBB1378:
 6384              		.loc 7 58 52 view .LVU1748
 6385              		.loc 7 58 52 is_stmt 0 view .LVU1749
 6386              	.LBE1378:
 6387              	.LBE1384:
 621:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6388              		.loc 20 621 5 is_stmt 1 view .LVU1750
 621:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6389              		.loc 20 621 17 is_stmt 0 view .LVU1751
 6390 01f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6391              	.LVL369:
 6392 01f4 4046     		mov	r0, r8
 6393              	.LBB1385:
 6394              	.LBB1386:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6395              		.loc 8 44 20 view .LVU1752
 6396 01f6 624C     		ldr	r4, .L396+56
 6397              	.LBE1386:
 6398              	.LBE1385:
 621:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6399              		.loc 20 621 17 view .LVU1753
 6400 01f8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6401              	.LVL370:
 622:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6402              		.loc 20 622 5 is_stmt 1 view .LVU1754
 6403              	.LBB1391:
 6404              	.LBI1391:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6405              		.loc 7 54 17 view .LVU1755
 6406              	.LBB1392:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6407              		.loc 7 54 48 view .LVU1756
 6408              	.LBE1392:
 6409              	.LBE1391:
 6410              	.LBB1394:
 6411              	.LBB1395:
 6412              	.LBB1396:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6413              		.loc 10 45 16 is_stmt 0 view .LVU1757
 6414 01fc 6149     		ldr	r1, .L396+60
 6415              	.LBE1396:
 6416              	.LBE1395:
 6417              	.LBE1394:
 6418              	.LBB1401:
 6419              	.LBB1402:
 6420              	.LBB1403:
 6421 01fe 624A     		ldr	r2, .L396+64
 6422              	.LBE1403:
 6423              	.LBE1402:
 6424              	.LBE1401:
 6425              	.LBB1408:
 6426              	.LBB1409:
 6427              	.LBB1410:
 6428 0200 624B     		ldr	r3, .L396+68
 6429              	.LBE1410:
 6430              	.LBE1409:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 225


 6431              	.LBE1408:
 6432              	.LBB1415:
 6433              	.LBB1399:
 6434              	.LBB1397:
 6435 0202 0D60     		str	r5, [r1]	@ float
 6436              	.LBE1397:
 6437              	.LBE1399:
 6438              	.LBE1415:
 6439              	.LBB1416:
 6440              	.LBB1406:
 6441              	.LBB1404:
 6442 0204 1560     		str	r5, [r2]	@ float
 6443              	.LBE1404:
 6444              	.LBE1406:
 6445              	.LBE1416:
 6446              	.LBB1417:
 6447              	.LBB1413:
 6448              	.LBB1411:
 6449 0206 1D60     		str	r5, [r3]	@ float
 6450              	.LBE1411:
 6451              	.LBE1413:
 6452              	.LBE1417:
 6453              	.LBB1418:
 6454              	.LBB1343:
 6455              		.loc 10 64 50 view .LVU1758
 6456 0208 0F71     		strb	r7, [r1, #4]
 6457              	.LBE1343:
 6458              	.LBE1418:
 6459              	.LBB1419:
 6460              	.LBB1420:
 6461 020a 1771     		strb	r7, [r2, #4]
 6462              	.LBE1420:
 6463              	.LBE1419:
 6464              	.LBB1422:
 6465              	.LBB1423:
 6466 020c 1F71     		strb	r7, [r3, #4]
 6467              	.LBE1423:
 6468              	.LBE1422:
 636:Veno-Echo.cpp **** 
 6469              		.loc 20 636 15 view .LVU1759
 6470 020e 4E48     		ldr	r0, .L396
 6471              	.LBB1425:
 6472              	.LBB1426:
 6473              		.loc 7 58 57 view .LVU1760
 6474 0210 C8ED008A 		vstr.32	s17, [r8]
 6475              	.LBE1426:
 6476              	.LBE1425:
 6477              	.LBB1428:
 6478              	.LBB1393:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6479              		.loc 7 54 63 view .LVU1761
 6480 0214 C8F80860 		str	r6, [r8, #8]	@ float
 6481              	.LVL371:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6482              		.loc 7 54 63 view .LVU1762
 6483              	.LBE1393:
 6484              	.LBE1428:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 226


 623:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6485              		.loc 20 623 5 is_stmt 1 view .LVU1763
 6486              	.LBB1429:
 6487              	.LBI1429:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6488              		.loc 7 54 17 view .LVU1764
 6489              	.LBB1430:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6490              		.loc 7 54 48 view .LVU1765
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6491              		.loc 7 54 63 is_stmt 0 view .LVU1766
 6492 0218 C8F80C60 		str	r6, [r8, #12]	@ float
 6493              	.LVL372:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6494              		.loc 7 54 63 view .LVU1767
 6495              	.LBE1430:
 6496              	.LBE1429:
 624:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 6497              		.loc 20 624 5 is_stmt 1 view .LVU1768
 6498              	.LBB1431:
 6499              	.LBI1431:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6500              		.loc 7 54 17 view .LVU1769
 6501              	.LBB1432:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6502              		.loc 7 54 48 view .LVU1770
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6503              		.loc 7 54 63 is_stmt 0 view .LVU1771
 6504 021c C8F81460 		str	r6, [r8, #20]	@ float
 6505              	.LVL373:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6506              		.loc 7 54 63 view .LVU1772
 6507              	.LBE1432:
 6508              	.LBE1431:
 625:Veno-Echo.cpp **** 
 6509              		.loc 20 625 5 is_stmt 1 view .LVU1773
 6510              	.LBB1433:
 6511              	.LBI1425:
 6512              		.loc 7 58 17 view .LVU1774
 6513              	.LBB1427:
 6514              		.loc 7 58 52 view .LVU1775
 6515              		.loc 7 58 52 is_stmt 0 view .LVU1776
 6516              	.LBE1427:
 6517              	.LBE1433:
 628:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 6518              		.loc 20 628 5 is_stmt 1 view .LVU1777
 6519              	.LBB1434:
 6520              	.LBI1394:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6521              		.loc 10 51 17 view .LVU1778
 6522              	.LBE1434:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6523              		.loc 10 51 26 view .LVU1779
 6524              	.LBB1435:
 6525              	.LBB1400:
 6526              	.LBI1395:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 227


 6527              		.loc 10 43 17 view .LVU1780
 6528              	.LBB1398:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6529              		.loc 10 45 9 view .LVU1781
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6530              		.loc 10 46 9 view .LVU1782
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6531              		.loc 10 46 9 is_stmt 0 view .LVU1783
 6532              	.LBE1398:
 6533              	.LBE1400:
 6534              	.LBE1435:
 629:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 6535              		.loc 20 629 5 is_stmt 1 view .LVU1784
 6536              	.LBB1436:
 6537              	.LBI1341:
 6538              		.loc 10 64 17 view .LVU1785
 6539              	.LBB1344:
 6540              		.loc 10 64 43 view .LVU1786
 6541              		.loc 10 64 43 is_stmt 0 view .LVU1787
 6542              	.LBE1344:
 6543              	.LBE1436:
 630:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 6544              		.loc 20 630 5 is_stmt 1 view .LVU1788
 6545              	.LBB1437:
 6546              	.LBI1401:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6547              		.loc 10 51 17 view .LVU1789
 6548              	.LBE1437:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6549              		.loc 10 51 26 view .LVU1790
 6550              	.LBB1438:
 6551              	.LBB1407:
 6552              	.LBI1402:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6553              		.loc 10 43 17 view .LVU1791
 6554              	.LBB1405:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6555              		.loc 10 45 9 view .LVU1792
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6556              		.loc 10 46 9 view .LVU1793
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6557              		.loc 10 46 9 is_stmt 0 view .LVU1794
 6558              	.LBE1405:
 6559              	.LBE1407:
 6560              	.LBE1438:
 631:Veno-Echo.cpp **** 
 6561              		.loc 20 631 5 is_stmt 1 view .LVU1795
 6562              	.LBB1439:
 6563              	.LBI1419:
 6564              		.loc 10 64 17 view .LVU1796
 6565              	.LBB1421:
 6566              		.loc 10 64 43 view .LVU1797
 6567              		.loc 10 64 43 is_stmt 0 view .LVU1798
 6568              	.LBE1421:
 6569              	.LBE1439:
 633:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 6570              		.loc 20 633 5 is_stmt 1 view .LVU1799
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 228


 6571              	.LBB1440:
 6572              	.LBI1408:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6573              		.loc 10 51 17 view .LVU1800
 6574              	.LBE1440:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6575              		.loc 10 51 26 view .LVU1801
 6576              	.LBB1441:
 6577              	.LBB1414:
 6578              	.LBI1409:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6579              		.loc 10 43 17 view .LVU1802
 6580              	.LBB1412:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6581              		.loc 10 45 9 view .LVU1803
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6582              		.loc 10 46 9 view .LVU1804
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6583              		.loc 10 46 9 is_stmt 0 view .LVU1805
 6584              	.LBE1412:
 6585              	.LBE1414:
 6586              	.LBE1441:
 634:Veno-Echo.cpp **** 
 6587              		.loc 20 634 5 is_stmt 1 view .LVU1806
 6588              	.LBB1442:
 6589              	.LBI1422:
 6590              		.loc 10 64 17 view .LVU1807
 6591              	.LBB1424:
 6592              		.loc 10 64 43 view .LVU1808
 6593              		.loc 10 64 43 is_stmt 0 view .LVU1809
 6594              	.LBE1424:
 6595              	.LBE1442:
 636:Veno-Echo.cpp **** 
 6596              		.loc 20 636 5 is_stmt 1 view .LVU1810
 636:Veno-Echo.cpp **** 
 6597              		.loc 20 636 15 is_stmt 0 view .LVU1811
 6598 0220 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6599              	.LVL374:
 6600 0224 FFF7FEFF 		bl	_Z10InitDelaysf
 6601              	.LVL375:
 639:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6602              		.loc 20 639 5 is_stmt 1 view .LVU1812
 639:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6603              		.loc 20 639 15 is_stmt 0 view .LVU1813
 6604 0228 4748     		ldr	r0, .L396
 6605 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6606              	.LVL376:
 6607 022e 5848     		ldr	r0, .L396+72
 6608 0230 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6609              	.LVL377:
 640:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6610              		.loc 20 640 5 is_stmt 1 view .LVU1814
 640:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6611              		.loc 20 640 17 is_stmt 0 view .LVU1815
 6612 0234 B0EE480A 		vmov.f32	s0, s16
 6613 0238 5548     		ldr	r0, .L396+72
 6614 023a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 229


 6615              	.LVL378:
 641:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6616              		.loc 20 641 5 is_stmt 1 view .LVU1816
 641:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6617              		.loc 20 641 18 is_stmt 0 view .LVU1817
 6618 023e 9FED550A 		vldr.32	s0, .L396+76
 6619 0242 5348     		ldr	r0, .L396+72
 6620 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6621              	.LVL379:
 642:Veno-Echo.cpp **** 
 6622              		.loc 20 642 5 is_stmt 1 view .LVU1818
 642:Veno-Echo.cpp **** 
 6623              		.loc 20 642 19 is_stmt 0 view .LVU1819
 6624 0248 9FED5D0A 		vldr.32	s0, .L396+120
 6625 024c 5048     		ldr	r0, .L396+72
 6626 024e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6627              	.LVL380:
 644:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6628              		.loc 20 644 5 is_stmt 1 view .LVU1820
 644:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6629              		.loc 20 644 15 is_stmt 0 view .LVU1821
 6630 0252 3D48     		ldr	r0, .L396
 6631 0254 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6632              	.LVL381:
 6633 0258 4F48     		ldr	r0, .L396+80
 6634 025a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6635              	.LVL382:
 645:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6636              		.loc 20 645 5 is_stmt 1 view .LVU1822
 645:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6637              		.loc 20 645 17 is_stmt 0 view .LVU1823
 6638 025e B0EE480A 		vmov.f32	s0, s16
 6639 0262 4D48     		ldr	r0, .L396+80
 6640 0264 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6641              	.LVL383:
 646:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6642              		.loc 20 646 5 is_stmt 1 view .LVU1824
 646:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6643              		.loc 20 646 18 is_stmt 0 view .LVU1825
 6644 0268 9FED4A0A 		vldr.32	s0, .L396+76
 6645 026c 4A48     		ldr	r0, .L396+80
 6646 026e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6647              	.LVL384:
 647:Veno-Echo.cpp **** 
 6648              		.loc 20 647 5 is_stmt 1 view .LVU1826
 647:Veno-Echo.cpp **** 
 6649              		.loc 20 647 19 is_stmt 0 view .LVU1827
 6650 0272 9FED530A 		vldr.32	s0, .L396+120
 6651 0276 4848     		ldr	r0, .L396+80
 6652 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6653              	.LVL385:
 650:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6654              		.loc 20 650 5 is_stmt 1 view .LVU1828
 650:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6655              		.loc 20 650 15 is_stmt 0 view .LVU1829
 6656 027c 3248     		ldr	r0, .L396
 6657 027e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 230


 6658              	.LVL386:
 6659 0282 4648     		ldr	r0, .L396+84
 6660 0284 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6661              	.LVL387:
 651:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6662              		.loc 20 651 5 is_stmt 1 view .LVU1830
 651:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6663              		.loc 20 651 17 is_stmt 0 view .LVU1831
 6664 0288 B0EE480A 		vmov.f32	s0, s16
 6665 028c 4348     		ldr	r0, .L396+84
 6666 028e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6667              	.LVL388:
 652:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6668              		.loc 20 652 5 is_stmt 1 view .LVU1832
 652:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6669              		.loc 20 652 18 is_stmt 0 view .LVU1833
 6670 0292 9FED430A 		vldr.32	s0, .L396+88
 6671 0296 4148     		ldr	r0, .L396+84
 6672 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6673              	.LVL389:
 653:Veno-Echo.cpp **** 
 6674              		.loc 20 653 5 is_stmt 1 view .LVU1834
 653:Veno-Echo.cpp **** 
 6675              		.loc 20 653 19 is_stmt 0 view .LVU1835
 6676 029c 9FED480A 		vldr.32	s0, .L396+120
 6677 02a0 3E48     		ldr	r0, .L396+84
 6678 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6679              	.LVL390:
 655:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6680              		.loc 20 655 5 is_stmt 1 view .LVU1836
 655:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6681              		.loc 20 655 15 is_stmt 0 view .LVU1837
 6682 02a6 2848     		ldr	r0, .L396
 6683 02a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6684              	.LVL391:
 6685 02ac 3D48     		ldr	r0, .L396+92
 6686 02ae FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6687              	.LVL392:
 656:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6688              		.loc 20 656 5 is_stmt 1 view .LVU1838
 656:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6689              		.loc 20 656 17 is_stmt 0 view .LVU1839
 6690 02b2 B0EE480A 		vmov.f32	s0, s16
 6691 02b6 3B48     		ldr	r0, .L396+92
 6692 02b8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6693              	.LVL393:
 657:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6694              		.loc 20 657 5 is_stmt 1 view .LVU1840
 657:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6695              		.loc 20 657 18 is_stmt 0 view .LVU1841
 6696 02bc 9FED380A 		vldr.32	s0, .L396+88
 6697 02c0 3848     		ldr	r0, .L396+92
 6698 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6699              	.LVL394:
 658:Veno-Echo.cpp **** 
 6700              		.loc 20 658 5 is_stmt 1 view .LVU1842
 658:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 231


 6701              		.loc 20 658 19 is_stmt 0 view .LVU1843
 6702 02c6 9FED3E0A 		vldr.32	s0, .L396+120
 6703 02ca 3648     		ldr	r0, .L396+92
 6704 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6705              	.LVL395:
 661:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6706              		.loc 20 661 5 is_stmt 1 view .LVU1844
 661:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6707              		.loc 20 661 20 is_stmt 0 view .LVU1845
 6708 02d0 1D48     		ldr	r0, .L396
 6709 02d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6710              	.LVL396:
 6711 02d6 3448     		ldr	r0, .L396+96
 6712 02d8 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6713              	.LVL397:
 662:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6714              		.loc 20 662 5 is_stmt 1 view .LVU1846
 662:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6715              		.loc 20 662 22 is_stmt 0 view .LVU1847
 6716 02dc B0EE480A 		vmov.f32	s0, s16
 6717 02e0 3148     		ldr	r0, .L396+96
 6718 02e2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6719              	.LVL398:
 663:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6720              		.loc 20 663 5 is_stmt 1 view .LVU1848
 663:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6721              		.loc 20 663 23 is_stmt 0 view .LVU1849
 6722 02e6 9FED2B0A 		vldr.32	s0, .L396+76
 6723 02ea 2F48     		ldr	r0, .L396+96
 6724 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6725              	.LVL399:
 664:Veno-Echo.cpp **** 
 6726              		.loc 20 664 5 is_stmt 1 view .LVU1850
 664:Veno-Echo.cpp **** 
 6727              		.loc 20 664 24 is_stmt 0 view .LVU1851
 6728 02f0 9FED330A 		vldr.32	s0, .L396+120
 6729 02f4 2C48     		ldr	r0, .L396+96
 6730 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6731              	.LVL400:
 666:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6732              		.loc 20 666 5 is_stmt 1 view .LVU1852
 666:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6733              		.loc 20 666 20 is_stmt 0 view .LVU1853
 6734 02fa 1348     		ldr	r0, .L396
 6735 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6736              	.LVL401:
 6737 0300 2A48     		ldr	r0, .L396+100
 6738 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6739              	.LVL402:
 667:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6740              		.loc 20 667 5 is_stmt 1 view .LVU1854
 667:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6741              		.loc 20 667 22 is_stmt 0 view .LVU1855
 6742 0306 B0EE480A 		vmov.f32	s0, s16
 6743 030a 2848     		ldr	r0, .L396+100
 6744 030c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6745              	.LVL403:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 232


 668:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6746              		.loc 20 668 5 is_stmt 1 view .LVU1856
 668:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6747              		.loc 20 668 23 is_stmt 0 view .LVU1857
 6748 0310 9FED200A 		vldr.32	s0, .L396+76
 6749 0314 2548     		ldr	r0, .L396+100
 6750 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6751              	.LVL404:
 669:Veno-Echo.cpp **** 
 6752              		.loc 20 669 5 is_stmt 1 view .LVU1858
 669:Veno-Echo.cpp **** 
 6753              		.loc 20 669 24 is_stmt 0 view .LVU1859
 6754 031a 9FED290A 		vldr.32	s0, .L396+120
 6755 031e 2348     		ldr	r0, .L396+100
 6756 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6757              	.LVL405:
 672:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6758              		.loc 20 672 5 is_stmt 1 view .LVU1860
 672:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6759              		.loc 20 672 20 is_stmt 0 view .LVU1861
 6760 0324 0848     		ldr	r0, .L396
 6761 0326 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6762              	.LVL406:
 6763 032a 2148     		ldr	r0, .L396+104
 6764 032c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6765              	.LVL407:
 673:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 6766              		.loc 20 673 5 is_stmt 1 view .LVU1862
 673:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 6767              		.loc 20 673 22 is_stmt 0 view .LVU1863
 6768 0330 B0EE480A 		vmov.f32	s0, s16
 6769 0334 1E48     		ldr	r0, .L396+104
 6770 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6771              	.LVL408:
 674:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 6772              		.loc 20 674 5 is_stmt 1 view .LVU1864
 674:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 6773              		.loc 20 674 23 is_stmt 0 view .LVU1865
 6774 033a 9FED190A 		vldr.32	s0, .L396+88
 6775 033e 1C48     		ldr	r0, .L396+104
 6776 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6777              	.LVL409:
 6778 0344 3EE0     		b	.L397
 6779              	.L398:
 6780 0346 00BF     		.align	2
 6781              	.L396:
 6782 0348 00000000 		.word	.LANCHOR4
 6783 034c 00004042 		.word	1111490560
 6784 0350 00000000 		.word	.LANCHOR90
 6785 0354 0AD7233C 		.word	1008981770
 6786 0358 00000000 		.word	.LANCHOR91
 6787 035c 00000000 		.word	.LANCHOR92
 6788 0360 00000000 		.word	.LANCHOR93
 6789 0364 00000000 		.word	.LANCHOR94
 6790 0368 00000000 		.word	.LANCHOR95
 6791 036c 00000000 		.word	.LANCHOR96
 6792 0370 00000000 		.word	.LANCHOR97
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 233


 6793 0374 00000000 		.word	.LANCHOR87
 6794 0378 00000000 		.word	.LANCHOR100
 6795 037c 00000000 		.word	0
 6796 0380 00000000 		.word	.LANCHOR75
 6797 0384 00000000 		.word	.LANCHOR102
 6798 0388 00000000 		.word	.LANCHOR103
 6799 038c 00000000 		.word	.LANCHOR64
 6800 0390 00000000 		.word	.LANCHOR46
 6801 0394 00803B46 		.word	1178304512
 6802 0398 00000000 		.word	.LANCHOR47
 6803 039c 00000000 		.word	.LANCHOR34
 6804 03a0 00004843 		.word	1128792064
 6805 03a4 00000000 		.word	.LANCHOR35
 6806 03a8 00000000 		.word	.LANCHOR48
 6807 03ac 00000000 		.word	.LANCHOR49
 6808 03b0 00000000 		.word	.LANCHOR36
 6809 03b4 00000000 		.word	.LANCHOR98
 6810 03b8 00000000 		.word	.LANCHOR99
 6811 03bc 00000000 		.word	.LANCHOR101
 6812 03c0 3333333F 		.word	1060320051
 6813              	.L397:
 675:Veno-Echo.cpp **** 
 6814              		.loc 20 675 5 is_stmt 1 view .LVU1866
 675:Veno-Echo.cpp **** 
 6815              		.loc 20 675 24 is_stmt 0 view .LVU1867
 6816 03c4 1FED020A 		vldr.32	s0, .L396+120
 6817 03c8 7048     		ldr	r0, .L399
 6818 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6819              	.LVL410:
 677:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 6820              		.loc 20 677 5 is_stmt 1 view .LVU1868
 677:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 6821              		.loc 20 677 20 is_stmt 0 view .LVU1869
 6822 03ce 7048     		ldr	r0, .L399+4
 6823 03d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6824              	.LVL411:
 6825 03d4 6F48     		ldr	r0, .L399+8
 6826 03d6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6827              	.LVL412:
 678:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 6828              		.loc 20 678 5 is_stmt 1 view .LVU1870
 678:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 6829              		.loc 20 678 22 is_stmt 0 view .LVU1871
 6830 03da B0EE480A 		vmov.f32	s0, s16
 6831 03de 6D48     		ldr	r0, .L399+8
 6832 03e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6833              	.LVL413:
 679:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 6834              		.loc 20 679 5 is_stmt 1 view .LVU1872
 679:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 6835              		.loc 20 679 23 is_stmt 0 view .LVU1873
 6836 03e4 9FED6C0A 		vldr.32	s0, .L399+12
 6837 03e8 6A48     		ldr	r0, .L399+8
 6838 03ea FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6839              	.LVL414:
 680:Veno-Echo.cpp **** 
 6840              		.loc 20 680 5 is_stmt 1 view .LVU1874
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 234


 680:Veno-Echo.cpp **** 
 6841              		.loc 20 680 24 is_stmt 0 view .LVU1875
 6842 03ee 9FED6B0A 		vldr.32	s0, .L399+16
 6843 03f2 6848     		ldr	r0, .L399+8
 6844 03f4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6845              	.LVL415:
 682:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 6846              		.loc 20 682 5 is_stmt 1 view .LVU1876
 682:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 6847              		.loc 20 682 21 is_stmt 0 view .LVU1877
 6848 03f8 6548     		ldr	r0, .L399+4
 6849 03fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6850              	.LVL416:
 6851 03fe 6848     		ldr	r0, .L399+20
 6852 0400 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 6853              	.LVL417:
 683:Veno-Echo.cpp **** 
 6854              		.loc 20 683 5 is_stmt 1 view .LVU1878
 683:Veno-Echo.cpp **** 
 6855              		.loc 20 683 21 is_stmt 0 view .LVU1879
 6856 0404 6248     		ldr	r0, .L399+4
 6857 0406 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6858              	.LVL418:
 6859 040a 6648     		ldr	r0, .L399+24
 6860 040c FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 6861              	.LVL419:
 686:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 6862              		.loc 20 686 5 is_stmt 1 view .LVU1880
 686:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 6863              		.loc 20 686 13 is_stmt 0 view .LVU1881
 6864 0410 5F48     		ldr	r0, .L399+4
 6865 0412 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6866              	.LVL420:
 6867 0416 F0EE407A 		vmov.f32	s15, s0
 6868              	.LVL421:
 6869              	.LBB1443:
 6870              	.LBI1385:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6871              		.loc 8 42 10 is_stmt 1 view .LVU1882
 6872              	.LBB1387:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6873              		.loc 8 44 9 view .LVU1883
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 6874              		.loc 8 46 20 is_stmt 0 view .LVU1884
 6875 041a 9FED637A 		vldr.32	s14, .L399+28
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6876              		.loc 8 49 34 view .LVU1885
 6877 041e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 6878              		.loc 8 47 20 view .LVU1886
 6879 0420 6560     		str	r5, [r4, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 6880              		.loc 8 45 27 view .LVU1887
 6881 0422 C8EEA76A 		vdiv.f32	s13, s17, s15
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 6882              		.loc 8 46 20 view .LVU1888
 6883 0426 84ED027A 		vstr.32	s14, [r4, #8]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 235


  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6884              		.loc 8 44 20 view .LVU1889
 6885 042a C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 6886              		.loc 8 45 9 is_stmt 1 view .LVU1890
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 6887              		.loc 8 48 20 is_stmt 0 view .LVU1891
 6888 042e 84ED058A 		vstr.32	s16, [r4, #20]
 6889              	.LBE1387:
 6890              	.LBE1443:
 703:Veno-Echo.cpp **** 
 6891              		.loc 20 703 17 view .LVU1892
 6892 0432 5E4D     		ldr	r5, .L399+32
 6893              	.LBB1444:
 6894              	.LBB1388:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6895              		.loc 8 49 34 view .LVU1893
 6896 0434 B0EE470A 		vmov.f32	s0, s14
 6897              	.LVL422:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 6898              		.loc 8 45 20 view .LVU1894
 6899 0438 C4ED046A 		vstr.32	s13, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 6900              		.loc 8 46 9 is_stmt 1 view .LVU1895
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 6901              		.loc 8 47 9 view .LVU1896
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 6902              		.loc 8 48 9 view .LVU1897
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6903              		.loc 8 49 9 view .LVU1898
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6904              		.loc 8 49 34 is_stmt 0 view .LVU1899
 6905 043c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6906              	.LVL423:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6907              		.loc 8 52 20 view .LVU1900
 6908 0440 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6909              		.loc 8 49 34 view .LVU1901
 6910 0444 F0EE407A 		vmov.f32	s15, s0
 6911              	.LBE1388:
 6912              	.LBE1444:
 6913              	.LBB1445:
 6914              	.LBB1446:
 6915              		.loc 8 61 34 view .LVU1902
 6916 0448 2046     		mov	r0, r4
 6917              	.LBE1446:
 6918              	.LBE1445:
 6919              	.LBB1450:
 6920              	.LBB1451:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 236


  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 6921              		.loc 8 72 19 view .LVU1903
 6922 044a 2770     		strb	r7, [r4]
 6923              	.LBE1451:
 6924              	.LBE1450:
 6925              	.LBB1453:
 6926              	.LBB1389:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6927              		.loc 8 52 20 view .LVU1904
 6928 044c A384     		strh	r3, [r4, #36]	@ movhi
 6929              	.LBE1389:
 6930              	.LBE1453:
 6931              	.LBB1454:
 6932              	.LBB1447:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6933              		.loc 8 61 34 view .LVU1905
 6934 044e B0EE680A 		vmov.f32	s0, s17
 6935              	.LBE1447:
 6936              	.LBE1454:
 6937              	.LBB1455:
 6938              	.LBB1390:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6939              		.loc 8 49 20 view .LVU1906
 6940 0452 C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 6941              		.loc 8 50 9 is_stmt 1 view .LVU1907
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 6942              		.loc 8 51 9 view .LVU1908
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6943              		.loc 8 52 9 view .LVU1909
 6944              	.LVL424:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6945              		.loc 8 52 9 is_stmt 0 view .LVU1910
 6946              	.LBE1390:
 6947              	.LBE1455:
 687:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 6948              		.loc 20 687 5 is_stmt 1 view .LVU1911
 6949              	.LBB1456:
 6950              	.LBI1450:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6951              		.loc 8 70 17 view .LVU1912
 6952              	.LBB1452:
 6953              		.loc 8 72 9 view .LVU1913
 6954              		.loc 8 72 9 is_stmt 0 view .LVU1914
 6955              	.LBE1452:
 6956              	.LBE1456:
 688:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 6957              		.loc 20 688 5 is_stmt 1 view .LVU1915
 6958              	.LBB1457:
 6959              	.LBI1445:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6960              		.loc 8 58 17 view .LVU1916
 6961              	.LBB1448:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 237


 6962              		.loc 8 60 9 view .LVU1917
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6963              		.loc 8 61 9 view .LVU1918
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6964              		.loc 8 60 20 is_stmt 0 view .LVU1919
 6965 0456 C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6966              		.loc 8 61 34 view .LVU1920
 6967 045a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6968              	.LVL425:
 6969 045e F0EE407A 		vmov.f32	s15, s0
 6970              	.LBE1448:
 6971              	.LBE1457:
 691:Veno-Echo.cpp **** 
 6972              		.loc 20 691 19 view .LVU1921
 6973 0462 41F27072 		movw	r2, #6000
 6974 0466 5021     		movs	r1, #80
 6975 0468 B7EE040A 		vmov.f32	s0, #1.25e+0
 6976 046c 5048     		ldr	r0, .L399+36
 6977              	.LBB1458:
 6978              	.LBB1459:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6979              		.loc 8 67 46 view .LVU1922
 6980 046e C4ED018A 		vstr.32	s17, [r4, #4]
 6981              	.LBE1459:
 6982              	.LBE1458:
 6983              	.LBB1461:
 6984              	.LBB1449:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6985              		.loc 8 61 20 view .LVU1923
 6986 0472 C4ED067A 		vstr.32	s15, [r4, #24]
 6987              	.LVL426:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6988              		.loc 8 61 20 view .LVU1924
 6989              	.LBE1449:
 6990              	.LBE1461:
 689:Veno-Echo.cpp **** 
 6991              		.loc 20 689 5 is_stmt 1 view .LVU1925
 6992              	.LBB1462:
 6993              	.LBI1458:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6994              		.loc 8 67 17 view .LVU1926
 6995              	.LBB1460:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6996              		.loc 8 67 41 view .LVU1927
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6997              		.loc 8 67 41 is_stmt 0 view .LVU1928
 6998              	.LBE1460:
 6999              	.LBE1462:
 691:Veno-Echo.cpp **** 
 7000              		.loc 20 691 5 is_stmt 1 view .LVU1929
 691:Veno-Echo.cpp **** 
 7001              		.loc 20 691 19 is_stmt 0 view .LVU1930
 7002 0476 FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 7003              	.LVL427:
 695:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7004              		.loc 20 695 5 is_stmt 1 view .LVU1931
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 238


 695:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7005              		.loc 20 695 23 is_stmt 0 view .LVU1932
 7006 047a 1820     		movs	r0, #24
 703:Veno-Echo.cpp **** 
 7007              		.loc 20 703 17 view .LVU1933
 7008 047c 4D4C     		ldr	r4, .L399+40
 695:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7009              		.loc 20 695 23 view .LVU1934
 7010 047e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7011              	.LVL428:
 7012 0482 0346     		mov	r3, r0	@ movhi
 7013 0484 4248     		ldr	r0, .L399+4
 7014 0486 ADF84430 		strh	r3, [sp, #68]	@ movhi
 7015 048a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7016              	.LVL429:
 7017 048e 1199     		ldr	r1, [sp, #68]
 7018 0490 4948     		ldr	r0, .L399+44
 7019 0492 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7020              	.LVL430:
 696:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7021              		.loc 20 696 5 is_stmt 1 view .LVU1935
 696:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7022              		.loc 20 696 27 is_stmt 0 view .LVU1936
 7023 0496 4648     		ldr	r0, .L399+36
 7024 0498 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7025              	.LVL431:
 7026 049c 4648     		ldr	r0, .L399+44
 7027 049e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7028              	.LVL432:
 697:Veno-Echo.cpp **** 
 7029              		.loc 20 697 5 is_stmt 1 view .LVU1937
 697:Veno-Echo.cpp **** 
 7030              		.loc 20 697 29 is_stmt 0 view .LVU1938
 7031 04a2 4548     		ldr	r0, .L399+44
 7032 04a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7033              	.LVL433:
 702:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7034              		.loc 20 702 5 is_stmt 1 view .LVU1939
 702:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7035              		.loc 20 702 18 is_stmt 0 view .LVU1940
 7036 04a8 4048     		ldr	r0, .L399+32
 7037 04aa FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7038              	.LVL434:
 703:Veno-Echo.cpp **** 
 7039              		.loc 20 703 5 is_stmt 1 view .LVU1941
 703:Veno-Echo.cpp **** 
 7040              		.loc 20 703 17 is_stmt 0 view .LVU1942
 7041 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7042 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7043 04b2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7044 04b6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 708:Veno-Echo.cpp **** 
 7045              		.loc 20 708 5 is_stmt 1 view .LVU1943
 710:Veno-Echo.cpp ****     adc[1].InitSingle(hw.GetPin(16));
 7046              		.loc 20 710 5 view .LVU1944
 710:Veno-Echo.cpp ****     adc[1].InitSingle(hw.GetPin(16));
 7047              		.loc 20 710 22 is_stmt 0 view .LVU1945
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 239


 7048 04ba 0F20     		movs	r0, #15
 7049 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7050              	.LVL435:
 7051 04c0 0346     		mov	r3, r0	@ movhi
 7052 04c2 1AA8     		add	r0, sp, #104
 7053 04c4 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7054 04c8 1299     		ldr	r1, [sp, #72]
 7055 04ca FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7056              	.LVL436:
 711:Veno-Echo.cpp ****     adc[2].InitSingle(hw.GetPin(17));
 7057              		.loc 20 711 5 is_stmt 1 view .LVU1946
 711:Veno-Echo.cpp ****     adc[2].InitSingle(hw.GetPin(17));
 7058              		.loc 20 711 22 is_stmt 0 view .LVU1947
 7059 04ce 1020     		movs	r0, #16
 7060 04d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7061              	.LVL437:
 7062 04d4 0346     		mov	r3, r0	@ movhi
 7063 04d6 0DF17900 		add	r0, sp, #121
 7064 04da ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7065 04de 1399     		ldr	r1, [sp, #76]
 7066 04e0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7067              	.LVL438:
 712:Veno-Echo.cpp ****     adc[3].InitSingle(hw.GetPin(18));
 7068              		.loc 20 712 5 is_stmt 1 view .LVU1948
 712:Veno-Echo.cpp ****     adc[3].InitSingle(hw.GetPin(18));
 7069              		.loc 20 712 22 is_stmt 0 view .LVU1949
 7070 04e4 1120     		movs	r0, #17
 7071 04e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7072              	.LVL439:
 7073 04ea 0346     		mov	r3, r0	@ movhi
 7074 04ec 0DF18A00 		add	r0, sp, #138
 7075 04f0 ADF85030 		strh	r3, [sp, #80]	@ movhi
 7076 04f4 1499     		ldr	r1, [sp, #80]
 7077 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7078              	.LVL440:
 713:Veno-Echo.cpp ****     adc[4].InitSingle(hw.GetPin(19));
 7079              		.loc 20 713 5 is_stmt 1 view .LVU1950
 713:Veno-Echo.cpp ****     adc[4].InitSingle(hw.GetPin(19));
 7080              		.loc 20 713 22 is_stmt 0 view .LVU1951
 7081 04fa 1220     		movs	r0, #18
 7082 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7083              	.LVL441:
 7084 0500 0346     		mov	r3, r0	@ movhi
 7085 0502 0DF19B00 		add	r0, sp, #155
 7086 0506 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7087 050a 1599     		ldr	r1, [sp, #84]
 7088 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7089              	.LVL442:
 714:Veno-Echo.cpp ****     adc[5].InitSingle(hw.GetPin(20));
 7090              		.loc 20 714 5 is_stmt 1 view .LVU1952
 714:Veno-Echo.cpp ****     adc[5].InitSingle(hw.GetPin(20));
 7091              		.loc 20 714 22 is_stmt 0 view .LVU1953
 7092 0510 1320     		movs	r0, #19
 7093 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7094              	.LVL443:
 7095 0516 0346     		mov	r3, r0	@ movhi
 7096 0518 2BA8     		add	r0, sp, #172
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 240


 7097 051a ADF85830 		strh	r3, [sp, #88]	@ movhi
 7098 051e 1699     		ldr	r1, [sp, #88]
 7099 0520 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7100              	.LVL444:
 715:Veno-Echo.cpp ****     adc[6].InitSingle(hw.GetPin(21));
 7101              		.loc 20 715 5 is_stmt 1 view .LVU1954
 715:Veno-Echo.cpp ****     adc[6].InitSingle(hw.GetPin(21));
 7102              		.loc 20 715 22 is_stmt 0 view .LVU1955
 7103 0524 1420     		movs	r0, #20
 7104 0526 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7105              	.LVL445:
 7106 052a 0346     		mov	r3, r0	@ movhi
 7107 052c 0DF1BD00 		add	r0, sp, #189
 7108 0530 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7109 0534 1799     		ldr	r1, [sp, #92]
 7110 0536 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7111              	.LVL446:
 716:Veno-Echo.cpp ****     adc[7].InitSingle(hw.GetPin(22));
 7112              		.loc 20 716 5 is_stmt 1 view .LVU1956
 716:Veno-Echo.cpp ****     adc[7].InitSingle(hw.GetPin(22));
 7113              		.loc 20 716 22 is_stmt 0 view .LVU1957
 7114 053a 1520     		movs	r0, #21
 7115 053c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7116              	.LVL447:
 7117 0540 0346     		mov	r3, r0	@ movhi
 7118 0542 0DF1CE00 		add	r0, sp, #206
 7119 0546 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7120 054a 1899     		ldr	r1, [sp, #96]
 7121 054c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7122              	.LVL448:
 717:Veno-Echo.cpp **** 
 7123              		.loc 20 717 5 is_stmt 1 view .LVU1958
 717:Veno-Echo.cpp **** 
 7124              		.loc 20 717 22 is_stmt 0 view .LVU1959
 7125 0550 1620     		movs	r0, #22
 7126 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7127              	.LVL449:
 7128 0556 0346     		mov	r3, r0	@ movhi
 7129 0558 0DF1DF00 		add	r0, sp, #223
 7130 055c ADF86430 		strh	r3, [sp, #100]	@ movhi
 7131 0560 1999     		ldr	r1, [sp, #100]
 7132 0562 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7133              	.LVL450:
 719:Veno-Echo.cpp ****     hw.adc.Start();
 7134              		.loc 20 719 5 is_stmt 1 view .LVU1960
 719:Veno-Echo.cpp ****     hw.adc.Start();
 7135              		.loc 20 719 16 is_stmt 0 view .LVU1961
 7136 0566 1AA9     		add	r1, sp, #104
 7137 0568 0423     		movs	r3, #4
 7138 056a 0822     		movs	r2, #8
 7139 056c 1348     		ldr	r0, .L399+48
 7140 056e FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7141              	.LVL451:
 720:Veno-Echo.cpp **** 
 7142              		.loc 20 720 5 is_stmt 1 view .LVU1962
 720:Veno-Echo.cpp **** 
 7143              		.loc 20 720 17 is_stmt 0 view .LVU1963
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 241


 7144 0572 1248     		ldr	r0, .L399+48
 7145 0574 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7146              	.LVL452:
 723:Veno-Echo.cpp ****     // start audio callback
 7147              		.loc 20 723 5 is_stmt 1 view .LVU1964
 723:Veno-Echo.cpp ****     // start audio callback
 7148              		.loc 20 723 25 is_stmt 0 view .LVU1965
 7149 0578 3946     		mov	r1, r7
 7150 057a 0548     		ldr	r0, .L399+4
 7151 057c FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7152              	.LVL453:
 725:Veno-Echo.cpp **** 
 7153              		.loc 20 725 5 is_stmt 1 view .LVU1966
 725:Veno-Echo.cpp **** 
 7154              		.loc 20 725 18 is_stmt 0 view .LVU1967
 7155 0580 0F49     		ldr	r1, .L399+52
 7156 0582 0348     		ldr	r0, .L399+4
 7157 0584 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7158              	.LVL454:
 7159              	.L394:
 729:Veno-Echo.cpp ****      {
 7160              		.loc 20 729 6 is_stmt 1 discriminator 1 view .LVU1968
 729:Veno-Echo.cpp ****      {
 7161              		.loc 20 729 6 discriminator 1 view .LVU1969
 729:Veno-Echo.cpp ****      {
 7162              		.loc 20 729 6 discriminator 1 view .LVU1970
 729:Veno-Echo.cpp ****      {
 7163              		.loc 20 729 6 discriminator 1 view .LVU1971
 7164 0588 FEE7     		b	.L394
 7165              	.L400:
 7166 058a 00BF     		.align	2
 7167              	.L399:
 7168 058c 00000000 		.word	.LANCHOR36
 7169 0590 00000000 		.word	.LANCHOR4
 7170 0594 00000000 		.word	.LANCHOR37
 7171 0598 00004843 		.word	1128792064
 7172 059c 3333333F 		.word	1060320051
 7173 05a0 00000000 		.word	.LANCHOR104
 7174 05a4 00000000 		.word	.LANCHOR105
 7175 05a8 0000C842 		.word	1120403456
 7176 05ac 00000000 		.word	.LANCHOR106
 7177 05b0 00000000 		.word	.LANCHOR12
 7178 05b4 00000000 		.word	.LANCHOR16
 7179 05b8 00000000 		.word	.LANCHOR88
 7180 05bc 18000000 		.word	.LANCHOR4+24
 7181 05c0 00000000 		.word	_ZL13AudioCallbackPfS_j
 7182              		.cfi_endproc
 7183              	.LFE4311:
 7185              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 7186              		.align	1
 7187              		.p2align 2,,3
 7188              		.global	_Z13TurnOnAllLEDsv
 7189              		.syntax unified
 7190              		.thumb
 7191              		.thumb_func
 7192              		.fpu fpv5-d16
 7194              	_Z13TurnOnAllLEDsv:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 242


 7195              	.LFB4332:
1775:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7196              		.loc 20 1775 1 view -0
 7197              		.cfi_startproc
 7198              		@ args = 0, pretend = 0, frame = 0
 7199              		@ frame_needed = 0, uses_anonymous_args = 0
1776:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7200              		.loc 20 1776 5 view .LVU1973
1775:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7201              		.loc 20 1775 1 is_stmt 0 view .LVU1974
 7202 0000 08B5     		push	{r3, lr}
 7203              		.cfi_def_cfa_offset 8
 7204              		.cfi_offset 3, -8
 7205              		.cfi_offset 14, -4
1776:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7206              		.loc 20 1776 26 view .LVU1975
 7207 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 7208 0006 1148     		ldr	r0, .L403
 7209 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7210              	.LVL455:
1777:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7211              		.loc 20 1777 5 is_stmt 1 view .LVU1976
1777:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7212              		.loc 20 1777 28 is_stmt 0 view .LVU1977
 7213 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 7214 0010 0F48     		ldr	r0, .L403+4
 7215 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7216              	.LVL456:
1778:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7217              		.loc 20 1778 5 is_stmt 1 view .LVU1978
1778:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7218              		.loc 20 1778 28 is_stmt 0 view .LVU1979
 7219 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 7220 001a 0E48     		ldr	r0, .L403+8
 7221 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7222              	.LVL457:
1779:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7223              		.loc 20 1779 5 is_stmt 1 view .LVU1980
1779:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7224              		.loc 20 1779 21 is_stmt 0 view .LVU1981
 7225 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 7226 0024 0C48     		ldr	r0, .L403+12
 7227 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7228              	.LVL458:
1780:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7229              		.loc 20 1780 5 is_stmt 1 view .LVU1982
1780:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7230              		.loc 20 1780 21 is_stmt 0 view .LVU1983
 7231 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 7232 002e 0B48     		ldr	r0, .L403+16
 7233 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7234              	.LVL459:
1781:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7235              		.loc 20 1781 5 is_stmt 1 view .LVU1984
1781:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7236              		.loc 20 1781 19 is_stmt 0 view .LVU1985
 7237 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 243


 7238 0038 0948     		ldr	r0, .L403+20
 7239 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7240              	.LVL460:
1782:Veno-Echo.cpp **** }
 7241              		.loc 20 1782 5 is_stmt 1 view .LVU1986
1782:Veno-Echo.cpp **** }
 7242              		.loc 20 1782 19 is_stmt 0 view .LVU1987
 7243 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 7244 0042 0848     		ldr	r0, .L403+24
1783:Veno-Echo.cpp **** 
 7245              		.loc 20 1783 1 view .LVU1988
 7246 0044 BDE80840 		pop	{r3, lr}
 7247              		.cfi_restore 14
 7248              		.cfi_restore 3
 7249              		.cfi_def_cfa_offset 0
1782:Veno-Echo.cpp **** }
 7250              		.loc 20 1782 19 view .LVU1989
 7251 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7252              	.LVL461:
 7253              	.L404:
 7254              		.align	2
 7255              	.L403:
 7256 004c 00000000 		.word	.LANCHOR88
 7257 0050 04000000 		.word	.LANCHOR0+4
 7258 0054 04000000 		.word	.LANCHOR1+4
 7259 0058 00000000 		.word	.LANCHOR92
 7260 005c 00000000 		.word	.LANCHOR93
 7261 0060 00000000 		.word	.LANCHOR90
 7262 0064 00000000 		.word	.LANCHOR91
 7263              		.cfi_endproc
 7264              	.LFE4332:
 7266              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 7267              		.align	1
 7268              		.p2align 2,,3
 7269              		.global	_Z12ResetAllLEDsv
 7270              		.syntax unified
 7271              		.thumb
 7272              		.thumb_func
 7273              		.fpu fpv5-d16
 7275              	_Z12ResetAllLEDsv:
 7276              	.LFB4333:
1786:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7277              		.loc 20 1786 1 is_stmt 1 view -0
 7278              		.cfi_startproc
 7279              		@ args = 0, pretend = 0, frame = 0
 7280              		@ frame_needed = 0, uses_anonymous_args = 0
1787:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7281              		.loc 20 1787 5 view .LVU1991
1786:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7282              		.loc 20 1786 1 is_stmt 0 view .LVU1992
 7283 0000 08B5     		push	{r3, lr}
 7284              		.cfi_def_cfa_offset 8
 7285              		.cfi_offset 3, -8
 7286              		.cfi_offset 14, -4
1787:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7287              		.loc 20 1787 26 view .LVU1993
 7288 0002 9FED1E0A 		vldr.32	s0, .L412
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 244


 7289 0006 1E48     		ldr	r0, .L412+4
 7290 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7291              	.LVL462:
1788:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7292              		.loc 20 1788 5 is_stmt 1 view .LVU1994
1788:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7293              		.loc 20 1788 28 is_stmt 0 view .LVU1995
 7294 000c 9FED1B0A 		vldr.32	s0, .L412
 7295 0010 1C48     		ldr	r0, .L412+8
 7296 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7297              	.LVL463:
1789:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7298              		.loc 20 1789 5 is_stmt 1 view .LVU1996
1789:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7299              		.loc 20 1789 28 is_stmt 0 view .LVU1997
 7300 0016 1C48     		ldr	r0, .L412+12
 7301 0018 9FED180A 		vldr.32	s0, .L412
 7302 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7303              	.LVL464:
1790:Veno-Echo.cpp ****     {
 7304              		.loc 20 1790 5 is_stmt 1 view .LVU1998
1790:Veno-Echo.cpp ****     {
 7305              		.loc 20 1790 26 is_stmt 0 view .LVU1999
 7306 0020 1A48     		ldr	r0, .L412+16
 7307 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7308              	.LVL465:
1790:Veno-Echo.cpp ****     {
 7309              		.loc 20 1790 5 view .LVU2000
 7310 0026 C8B9     		cbnz	r0, .L406
1792:Veno-Echo.cpp ****     }
 7311              		.loc 20 1792 9 is_stmt 1 view .LVU2001
1792:Veno-Echo.cpp ****     }
 7312              		.loc 20 1792 25 is_stmt 0 view .LVU2002
 7313 0028 1848     		ldr	r0, .L412+16
 7314 002a 9FED140A 		vldr.32	s0, .L412
 7315 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7316              	.LVL466:
1799:Veno-Echo.cpp ****     {
 7317              		.loc 20 1799 5 is_stmt 1 view .LVU2003
1799:Veno-Echo.cpp ****     {
 7318              		.loc 20 1799 26 is_stmt 0 view .LVU2004
 7319 0032 1748     		ldr	r0, .L412+20
 7320 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7321              	.LVL467:
1799:Veno-Echo.cpp ****     {
 7322              		.loc 20 1799 5 view .LVU2005
 7323 0038 D0B9     		cbnz	r0, .L408
 7324              	.L411:
1801:Veno-Echo.cpp ****     }
 7325              		.loc 20 1801 9 is_stmt 1 view .LVU2006
1801:Veno-Echo.cpp ****     }
 7326              		.loc 20 1801 25 is_stmt 0 view .LVU2007
 7327 003a 9FED100A 		vldr.32	s0, .L412
 7328 003e 1448     		ldr	r0, .L412+20
 7329 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7330              	.LVL468:
 7331              	.L409:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 245


1808:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7332              		.loc 20 1808 5 is_stmt 1 view .LVU2008
1808:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7333              		.loc 20 1808 19 is_stmt 0 view .LVU2009
 7334 0044 9FED0D0A 		vldr.32	s0, .L412
 7335 0048 1248     		ldr	r0, .L412+24
 7336 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7337              	.LVL469:
1809:Veno-Echo.cpp **** }
 7338              		.loc 20 1809 5 is_stmt 1 view .LVU2010
1809:Veno-Echo.cpp **** }
 7339              		.loc 20 1809 19 is_stmt 0 view .LVU2011
 7340 004e 9FED0B0A 		vldr.32	s0, .L412
 7341 0052 1148     		ldr	r0, .L412+28
1810:Veno-Echo.cpp **** 
 7342              		.loc 20 1810 1 view .LVU2012
 7343 0054 BDE80840 		pop	{r3, lr}
 7344              		.cfi_remember_state
 7345              		.cfi_restore 14
 7346              		.cfi_restore 3
 7347              		.cfi_def_cfa_offset 0
1809:Veno-Echo.cpp **** }
 7348              		.loc 20 1809 19 view .LVU2013
 7349 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7350              	.LVL470:
 7351              	.L406:
 7352              		.cfi_restore_state
1796:Veno-Echo.cpp ****     }
 7353              		.loc 20 1796 8 is_stmt 1 view .LVU2014
1796:Veno-Echo.cpp ****     }
 7354              		.loc 20 1796 24 is_stmt 0 view .LVU2015
 7355 005c 0B48     		ldr	r0, .L412+16
 7356 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 7357 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7358              	.LVL471:
1799:Veno-Echo.cpp ****     {
 7359              		.loc 20 1799 5 is_stmt 1 view .LVU2016
1799:Veno-Echo.cpp ****     {
 7360              		.loc 20 1799 26 is_stmt 0 view .LVU2017
 7361 0066 0A48     		ldr	r0, .L412+20
 7362 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7363              	.LVL472:
1799:Veno-Echo.cpp ****     {
 7364              		.loc 20 1799 5 view .LVU2018
 7365 006c 0028     		cmp	r0, #0
 7366 006e E4D0     		beq	.L411
 7367              	.L408:
1805:Veno-Echo.cpp ****     }
 7368              		.loc 20 1805 9 is_stmt 1 view .LVU2019
1805:Veno-Echo.cpp ****     }
 7369              		.loc 20 1805 25 is_stmt 0 view .LVU2020
 7370 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 7371 0074 0648     		ldr	r0, .L412+20
 7372 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7373              	.LVL473:
 7374 007a E3E7     		b	.L409
 7375              	.L413:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 246


 7376              		.align	2
 7377              	.L412:
 7378 007c 00000000 		.word	0
 7379 0080 00000000 		.word	.LANCHOR88
 7380 0084 04000000 		.word	.LANCHOR0+4
 7381 0088 04000000 		.word	.LANCHOR1+4
 7382 008c 00000000 		.word	.LANCHOR92
 7383 0090 00000000 		.word	.LANCHOR93
 7384 0094 00000000 		.word	.LANCHOR90
 7385 0098 00000000 		.word	.LANCHOR91
 7386              		.cfi_endproc
 7387              	.LFE4333:
 7389              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 7390              		.align	1
 7391              		.p2align 2,,3
 7392              		.global	_Z14Update_Buttonsv
 7393              		.syntax unified
 7394              		.thumb
 7395              		.thumb_func
 7396              		.fpu fpv5-d16
 7398              	_Z14Update_Buttonsv:
 7399              	.LFB4329:
1534:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7400              		.loc 20 1534 1 is_stmt 1 view -0
 7401              		.cfi_startproc
 7402              		@ args = 0, pretend = 0, frame = 0
 7403              		@ frame_needed = 0, uses_anonymous_args = 0
1535:Veno-Echo.cpp ****     static uint32_t resetTime{};
 7404              		.loc 20 1535 5 view .LVU2022
1536:Veno-Echo.cpp ****     static int buttonstate{};
 7405              		.loc 20 1536 5 view .LVU2023
1537:Veno-Echo.cpp **** 
 7406              		.loc 20 1537 5 view .LVU2024
1539:Veno-Echo.cpp ****     Rev_R_sw.update();
 7407              		.loc 20 1539 5 view .LVU2025
1534:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7408              		.loc 20 1534 1 is_stmt 0 view .LVU2026
 7409 0000 70B5     		push	{r4, r5, r6, lr}
 7410              		.cfi_def_cfa_offset 16
 7411              		.cfi_offset 4, -16
 7412              		.cfi_offset 5, -12
 7413              		.cfi_offset 6, -8
 7414              		.cfi_offset 14, -4
1539:Veno-Echo.cpp ****     Rev_R_sw.update();
 7415              		.loc 20 1539 20 view .LVU2027
 7416 0002 6748     		ldr	r0, .L457
 7417 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7418              	.LVL474:
1540:Veno-Echo.cpp ****     LPF_sw.update();
 7419              		.loc 20 1540 5 is_stmt 1 view .LVU2028
1540:Veno-Echo.cpp ****     LPF_sw.update();
 7420              		.loc 20 1540 20 is_stmt 0 view .LVU2029
 7421 0008 6648     		ldr	r0, .L457+4
 7422 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7423              	.LVL475:
1541:Veno-Echo.cpp ****     HPF_sw.update();
 7424              		.loc 20 1541 5 is_stmt 1 view .LVU2030
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 247


1541:Veno-Echo.cpp ****     HPF_sw.update();
 7425              		.loc 20 1541 18 is_stmt 0 view .LVU2031
 7426 000e 6648     		ldr	r0, .L457+8
 7427 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7428              	.LVL476:
1542:Veno-Echo.cpp ****     Tap_Button.update();
 7429              		.loc 20 1542 5 is_stmt 1 view .LVU2032
1545:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7430              		.loc 20 1545 26 is_stmt 0 view .LVU2033
 7431 0014 654C     		ldr	r4, .L457+12
1542:Veno-Echo.cpp ****     Tap_Button.update();
 7432              		.loc 20 1542 18 view .LVU2034
 7433 0016 6648     		ldr	r0, .L457+16
 7434 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7435              	.LVL477:
1543:Veno-Echo.cpp **** 
 7436              		.loc 20 1543 5 is_stmt 1 view .LVU2035
1543:Veno-Echo.cpp **** 
 7437              		.loc 20 1543 22 is_stmt 0 view .LVU2036
 7438 001c 6548     		ldr	r0, .L457+20
 7439 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7440              	.LVL478:
1545:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7441              		.loc 20 1545 5 is_stmt 1 view .LVU2037
1545:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7442              		.loc 20 1545 26 is_stmt 0 view .LVU2038
 7443 0022 2046     		mov	r0, r4
 7444 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7445              	.LVL479:
1546:Veno-Echo.cpp ****     //TapButton.Debounce();
 7446              		.loc 20 1546 5 is_stmt 1 view .LVU2039
1546:Veno-Echo.cpp ****     //TapButton.Debounce();
 7447              		.loc 20 1546 26 is_stmt 0 view .LVU2040
 7448 0028 6348     		ldr	r0, .L457+24
 7449 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7450              	.LVL480:
1548:Veno-Echo.cpp ****     ClockIn.Debounce();
 7451              		.loc 20 1548 5 is_stmt 1 view .LVU2041
1548:Veno-Echo.cpp ****     ClockIn.Debounce();
 7452              		.loc 20 1548 18 is_stmt 0 view .LVU2042
 7453 002e 6348     		ldr	r0, .L457+28
 7454 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7455              	.LVL481:
1549:Veno-Echo.cpp ****     //gate inputs
 7456              		.loc 20 1549 5 is_stmt 1 view .LVU2043
1549:Veno-Echo.cpp ****     //gate inputs
 7457              		.loc 20 1549 21 is_stmt 0 view .LVU2044
 7458 0034 6248     		ldr	r0, .L457+32
 7459 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7460              	.LVL482:
1551:Veno-Echo.cpp ****     {
 7461              		.loc 20 1551 5 is_stmt 1 view .LVU2045
 7462              		.loc 1 69 38 view .LVU2046
1551:Veno-Echo.cpp ****     {
 7463              		.loc 20 1551 5 is_stmt 0 view .LVU2047
 7464 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 7465 003c 7F2B     		cmp	r3, #127
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 248


 7466 003e 00F09980 		beq	.L449
 7467              	.L415:
1557:Veno-Echo.cpp ****     {
 7468              		.loc 20 1557 5 is_stmt 1 view .LVU2048
 7469              	.LVL483:
 7470              		.loc 1 69 38 view .LVU2049
1557:Veno-Echo.cpp ****     {
 7471              		.loc 20 1557 32 is_stmt 0 view .LVU2050
 7472 0042 5D4B     		ldr	r3, .L457+24
1557:Veno-Echo.cpp ****     {
 7473              		.loc 20 1557 5 view .LVU2051
 7474 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7475 0046 7F2B     		cmp	r3, #127
 7476 0048 00F09080 		beq	.L450
 7477              	.L416:
1565:Veno-Echo.cpp ****     {
 7478              		.loc 20 1565 5 is_stmt 1 view .LVU2052
1565:Veno-Echo.cpp ****     {
 7479              		.loc 20 1565 28 is_stmt 0 view .LVU2053
 7480 004c 5448     		ldr	r0, .L457
1567:Veno-Echo.cpp ****         if (buttonstate == 3)
 7481              		.loc 20 1567 21 view .LVU2054
 7482 004e 5D4C     		ldr	r4, .L457+36
1565:Veno-Echo.cpp ****     {
 7483              		.loc 20 1565 28 view .LVU2055
 7484 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7485              	.LVL484:
1565:Veno-Echo.cpp ****     {
 7486              		.loc 20 1565 5 view .LVU2056
 7487 0054 28B1     		cbz	r0, .L418
1567:Veno-Echo.cpp ****         if (buttonstate == 3)
 7488              		.loc 20 1567 9 is_stmt 1 view .LVU2057
1567:Veno-Echo.cpp ****         if (buttonstate == 3)
 7489              		.loc 20 1567 21 is_stmt 0 view .LVU2058
 7490 0056 2368     		ldr	r3, [r4]
 7491 0058 0133     		adds	r3, r3, #1
1568:Veno-Echo.cpp ****         {
 7492              		.loc 20 1568 9 view .LVU2059
 7493 005a 032B     		cmp	r3, #3
1567:Veno-Echo.cpp ****         if (buttonstate == 3)
 7494              		.loc 20 1567 21 view .LVU2060
 7495 005c 2360     		str	r3, [r4]
1568:Veno-Echo.cpp ****         {
 7496              		.loc 20 1568 9 is_stmt 1 view .LVU2061
 7497 005e 00F08D80 		beq	.L451
 7498              	.L418:
1574:Veno-Echo.cpp ****     {
 7499              		.loc 20 1574 5 view .LVU2062
1574:Veno-Echo.cpp ****     {
 7500              		.loc 20 1574 29 is_stmt 0 view .LVU2063
 7501 0062 4F48     		ldr	r0, .L457
 7502 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7503              	.LVL485:
1574:Veno-Echo.cpp ****     {
 7504              		.loc 20 1574 5 view .LVU2064
 7505 0068 10B1     		cbz	r0, .L420
1576:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 249


 7506              		.loc 20 1576 9 is_stmt 1 view .LVU2065
1576:Veno-Echo.cpp ****     }
 7507              		.loc 20 1576 21 is_stmt 0 view .LVU2066
 7508 006a 2368     		ldr	r3, [r4]
 7509 006c 013B     		subs	r3, r3, #1
 7510 006e 2360     		str	r3, [r4]
 7511              	.L420:
1579:Veno-Echo.cpp ****     {
 7512              		.loc 20 1579 5 is_stmt 1 view .LVU2067
1579:Veno-Echo.cpp ****     {
 7513              		.loc 20 1579 28 is_stmt 0 view .LVU2068
 7514 0070 4C48     		ldr	r0, .L457+4
 7515 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7516              	.LVL486:
1579:Veno-Echo.cpp ****     {
 7517              		.loc 20 1579 5 view .LVU2069
 7518 0076 28B1     		cbz	r0, .L422
1581:Veno-Echo.cpp ****         if (buttonstate == 3)
 7519              		.loc 20 1581 9 is_stmt 1 view .LVU2070
1581:Veno-Echo.cpp ****         if (buttonstate == 3)
 7520              		.loc 20 1581 21 is_stmt 0 view .LVU2071
 7521 0078 2368     		ldr	r3, [r4]
 7522 007a 0133     		adds	r3, r3, #1
1582:Veno-Echo.cpp ****         {
 7523              		.loc 20 1582 9 view .LVU2072
 7524 007c 032B     		cmp	r3, #3
1581:Veno-Echo.cpp ****         if (buttonstate == 3)
 7525              		.loc 20 1581 21 view .LVU2073
 7526 007e 2360     		str	r3, [r4]
1582:Veno-Echo.cpp ****         {
 7527              		.loc 20 1582 9 is_stmt 1 view .LVU2074
 7528 0080 00F08180 		beq	.L452
 7529              	.L422:
1588:Veno-Echo.cpp ****     {
 7530              		.loc 20 1588 5 view .LVU2075
1588:Veno-Echo.cpp ****     {
 7531              		.loc 20 1588 29 is_stmt 0 view .LVU2076
 7532 0084 4748     		ldr	r0, .L457+4
 7533 0086 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7534              	.LVL487:
1588:Veno-Echo.cpp ****     {
 7535              		.loc 20 1588 5 view .LVU2077
 7536 008a 10B1     		cbz	r0, .L424
1590:Veno-Echo.cpp ****     }
 7537              		.loc 20 1590 9 is_stmt 1 view .LVU2078
1590:Veno-Echo.cpp ****     }
 7538              		.loc 20 1590 21 is_stmt 0 view .LVU2079
 7539 008c 2368     		ldr	r3, [r4]
 7540 008e 013B     		subs	r3, r3, #1
 7541 0090 2360     		str	r3, [r4]
 7542              	.L424:
1593:Veno-Echo.cpp ****     {
 7543              		.loc 20 1593 5 is_stmt 1 view .LVU2080
1593:Veno-Echo.cpp ****     {
 7544              		.loc 20 1593 30 is_stmt 0 view .LVU2081
 7545 0092 4848     		ldr	r0, .L457+20
 7546 0094 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 250


 7547              	.LVL488:
1593:Veno-Echo.cpp ****     {
 7548              		.loc 20 1593 5 view .LVU2082
 7549 0098 0028     		cmp	r0, #0
 7550 009a 52D1     		bne	.L453
 7551              	.L426:
1612:Veno-Echo.cpp ****     {
 7552              		.loc 20 1612 5 is_stmt 1 view .LVU2083
1612:Veno-Echo.cpp ****     {
 7553              		.loc 20 1612 31 is_stmt 0 view .LVU2084
 7554 009c 4548     		ldr	r0, .L457+20
 7555 009e FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7556              	.LVL489:
1612:Veno-Echo.cpp ****     {
 7557              		.loc 20 1612 5 view .LVU2085
 7558 00a2 38B1     		cbz	r0, .L429
1614:Veno-Echo.cpp ****         buttonstate -= 1;
 7559              		.loc 20 1614 9 is_stmt 1 view .LVU2086
1615:Veno-Echo.cpp ****         mute = false;
 7560              		.loc 20 1615 21 is_stmt 0 view .LVU2087
 7561 00a4 2368     		ldr	r3, [r4]
1614:Veno-Echo.cpp ****         buttonstate -= 1;
 7562              		.loc 20 1614 15 view .LVU2088
 7563 00a6 0022     		movs	r2, #0
 7564 00a8 4748     		ldr	r0, .L457+40
1615:Veno-Echo.cpp ****         mute = false;
 7565              		.loc 20 1615 21 view .LVU2089
 7566 00aa 013B     		subs	r3, r3, #1
1616:Veno-Echo.cpp ****     }
 7567              		.loc 20 1616 14 view .LVU2090
 7568 00ac 4749     		ldr	r1, .L457+44
1614:Veno-Echo.cpp ****         buttonstate -= 1;
 7569              		.loc 20 1614 15 view .LVU2091
 7570 00ae 0270     		strb	r2, [r0]
1615:Veno-Echo.cpp ****         mute = false;
 7571              		.loc 20 1615 9 is_stmt 1 view .LVU2092
1615:Veno-Echo.cpp ****         mute = false;
 7572              		.loc 20 1615 21 is_stmt 0 view .LVU2093
 7573 00b0 2360     		str	r3, [r4]
1616:Veno-Echo.cpp ****     }
 7574              		.loc 20 1616 9 is_stmt 1 view .LVU2094
1616:Veno-Echo.cpp ****     }
 7575              		.loc 20 1616 14 is_stmt 0 view .LVU2095
 7576 00b2 0A70     		strb	r2, [r1]
 7577              	.L429:
1619:Veno-Echo.cpp ****     {
 7578              		.loc 20 1619 5 is_stmt 1 view .LVU2096
1619:Veno-Echo.cpp ****     {
 7579              		.loc 20 1619 28 is_stmt 0 view .LVU2097
 7580 00b4 3F48     		ldr	r0, .L457+20
 7581 00b6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7582              	.LVL490:
1619:Veno-Echo.cpp ****     {
 7583              		.loc 20 1619 5 view .LVU2098
 7584 00ba 90B9     		cbnz	r0, .L454
 7585              	.L431:
1627:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 251


 7586              		.loc 20 1627 5 is_stmt 1 view .LVU2099
 7587 00bc 2368     		ldr	r3, [r4]
 7588 00be 032B     		cmp	r3, #3
 7589 00c0 1CD0     		beq	.L455
 7590              	.L434:
1643:Veno-Echo.cpp **** 
 7591              		.loc 20 1643 5 view .LVU2100
 7592              	.LBB1463:
 7593              	.LBI1463:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 7594              		.loc 1 75 17 view .LVU2101
 7595              	.LVL491:
 7596              	.LBB1464:
 7597              		.loc 1 75 35 view .LVU2102
 7598              	.LBE1464:
 7599              	.LBE1463:
1643:Veno-Echo.cpp **** 
 7600              		.loc 20 1643 31 is_stmt 0 view .LVU2103
 7601 00c2 3E4B     		ldr	r3, .L457+28
1643:Veno-Echo.cpp **** 
 7602              		.loc 20 1643 14 view .LVU2104
 7603 00c4 4248     		ldr	r0, .L457+48
 7604              	.LBB1468:
 7605              	.LBB1465:
 7606              		.loc 1 75 52 view .LVU2105
 7607 00c6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7608              	.LBE1465:
 7609              	.LBE1468:
 7610              	.LBB1469:
 7611              	.LBB1470:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7612              		.loc 17 70 46 view .LVU2106
 7613 00c8 4249     		ldr	r1, .L457+52
 7614              	.LBE1470:
 7615              	.LBE1469:
 7616              	.LBB1472:
 7617              	.LBB1466:
 7618              		.loc 1 75 52 view .LVU2107
 7619 00ca A3F1FF03 		sub	r3, #255
 7620              	.LBE1466:
 7621              	.LBE1472:
 7622              	.LBB1473:
 7623              	.LBB1474:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7624              		.loc 17 70 46 view .LVU2108
 7625 00ce 424A     		ldr	r2, .L457+56
 7626              	.LBE1474:
 7627              	.LBE1473:
 7628              	.LBB1476:
 7629              	.LBB1467:
 7630              		.loc 1 75 52 view .LVU2109
 7631 00d0 B3FA83F3 		clz	r3, r3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 252


 7632 00d4 5B09     		lsrs	r3, r3, #5
 7633              	.LBE1467:
 7634              	.LBE1476:
1643:Veno-Echo.cpp **** 
 7635              		.loc 20 1643 14 view .LVU2110
 7636 00d6 0370     		strb	r3, [r0]
1646:Veno-Echo.cpp ****     delayR.SetSync(syncMode);
 7637              		.loc 20 1646 5 is_stmt 1 view .LVU2111
 7638              	.LBB1477:
 7639              	.LBI1469:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7640              		.loc 17 70 6 view .LVU2112
 7641              	.LVL492:
 7642              	.LBB1471:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7643              		.loc 17 70 36 view .LVU2113
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7644              		.loc 17 70 46 is_stmt 0 view .LVU2114
 7645 00d8 81F81E31 		strb	r3, [r1, #286]
 7646              	.LBE1471:
 7647              	.LBE1477:
1647:Veno-Echo.cpp **** }
 7648              		.loc 20 1647 5 is_stmt 1 view .LVU2115
 7649              	.LVL493:
 7650              	.LBB1478:
 7651              	.LBI1473:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7652              		.loc 17 70 6 view .LVU2116
 7653              	.LBB1475:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7654              		.loc 17 70 36 view .LVU2117
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7655              		.loc 17 70 46 is_stmt 0 view .LVU2118
 7656 00dc 82F81E31 		strb	r3, [r2, #286]
 7657              	.LBE1475:
 7658              	.LBE1478:
1648:Veno-Echo.cpp **** 
 7659              		.loc 20 1648 1 view .LVU2119
 7660 00e0 70BD     		pop	{r4, r5, r6, pc}
 7661              	.LVL494:
 7662              	.L454:
1621:Veno-Echo.cpp ****         {
 7663              		.loc 20 1621 9 is_stmt 1 view .LVU2120
1621:Veno-Echo.cpp ****         {
 7664              		.loc 20 1621 29 is_stmt 0 view .LVU2121
 7665 00e2 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7666              	.LVL495:
1621:Veno-Echo.cpp ****         {
 7667              		.loc 20 1621 32 view .LVU2122
 7668 00e6 3D4B     		ldr	r3, .L457+60
 7669 00e8 1B68     		ldr	r3, [r3]
 7670 00ea C01A     		subs	r0, r0, r3
1621:Veno-Echo.cpp ****         {
 7671              		.loc 20 1621 9 view .LVU2123
 7672 00ec 3228     		cmp	r0, #50
 7673 00ee E5D9     		bls	.L431
1623:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 253


 7674              		.loc 20 1623 13 is_stmt 1 view .LVU2124
1623:Veno-Echo.cpp ****         } 
 7675              		.loc 20 1623 19 is_stmt 0 view .LVU2125
 7676 00f0 354B     		ldr	r3, .L457+40
 7677 00f2 0122     		movs	r2, #1
 7678 00f4 1A70     		strb	r2, [r3]
1627:Veno-Echo.cpp ****     {
 7679              		.loc 20 1627 5 is_stmt 1 view .LVU2126
 7680 00f6 2368     		ldr	r3, [r4]
 7681 00f8 032B     		cmp	r3, #3
 7682 00fa E2D1     		bne	.L434
 7683              	.L455:
1630:Veno-Echo.cpp ****             {
 7684              		.loc 20 1630 13 view .LVU2127
1630:Veno-Echo.cpp ****             {
 7685              		.loc 20 1630 36 is_stmt 0 view .LVU2128
 7686 00fc 384E     		ldr	r6, .L457+64
1630:Veno-Echo.cpp ****             {
 7687              		.loc 20 1630 33 view .LVU2129
 7688 00fe FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7689              	.LVL496:
1630:Veno-Echo.cpp ****             {
 7690              		.loc 20 1630 13 view .LVU2130
 7691 0102 40F6B833 		movw	r3, #3000
1630:Veno-Echo.cpp ****             {
 7692              		.loc 20 1630 36 view .LVU2131
 7693 0106 3268     		ldr	r2, [r6]
 7694 0108 801A     		subs	r0, r0, r2
1630:Veno-Echo.cpp ****             {
 7695              		.loc 20 1630 13 view .LVU2132
 7696 010a 9842     		cmp	r0, r3
 7697 010c D9D9     		bls	.L434
1632:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7698              		.loc 20 1632 17 is_stmt 1 view .LVU2133
1632:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7699              		.loc 20 1632 32 is_stmt 0 view .LVU2134
 7700 010e 2448     		ldr	r0, .L457
 7701 0110 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7702              	.LVL497:
1633:Veno-Echo.cpp ****                 ResetAllLEDs();
 7703              		.loc 20 1633 17 is_stmt 1 view .LVU2135
1633:Veno-Echo.cpp ****                 ResetAllLEDs();
 7704              		.loc 20 1633 32 is_stmt 0 view .LVU2136
 7705 0114 2348     		ldr	r0, .L457+4
 7706 0116 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7707              	.LVL498:
1634:Veno-Echo.cpp ****                 //don't let reset or shift update
 7708              		.loc 20 1634 17 is_stmt 1 view .LVU2137
1638:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7709              		.loc 20 1638 29 is_stmt 0 view .LVU2138
 7710 011a 324D     		ldr	r5, .L457+68
1634:Veno-Echo.cpp ****                 //don't let reset or shift update
 7711              		.loc 20 1634 29 view .LVU2139
 7712 011c FFF7FEFF 		bl	_Z12ResetAllLEDsv
 7713              	.LVL499:
1636:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7714              		.loc 20 1636 17 is_stmt 1 view .LVU2140
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 254


1636:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7715              		.loc 20 1636 23 is_stmt 0 view .LVU2141
 7716 0120 294B     		ldr	r3, .L457+40
 7717 0122 0022     		movs	r2, #0
1637:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7718              		.loc 20 1637 30 view .LVU2142
 7719 0124 2F48     		ldr	r0, .L457+68
1638:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7720              		.loc 20 1638 29 view .LVU2143
 7721 0126 304C     		ldr	r4, .L457+72
1636:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7722              		.loc 20 1636 23 view .LVU2144
 7723 0128 1A70     		strb	r2, [r3]
1637:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7724              		.loc 20 1637 17 is_stmt 1 view .LVU2145
1637:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7725              		.loc 20 1637 30 is_stmt 0 view .LVU2146
 7726 012a FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7727              	.LVL500:
1638:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7728              		.loc 20 1638 17 is_stmt 1 view .LVU2147
1638:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7729              		.loc 20 1638 29 is_stmt 0 view .LVU2148
 7730 012e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7731 0130 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7732 0132 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7733 0136 84E80F00 		stm	r4, {r0, r1, r2, r3}
1639:Veno-Echo.cpp ****             }
 7734              		.loc 20 1639 17 is_stmt 1 view .LVU2149
1639:Veno-Echo.cpp ****             }
 7735              		.loc 20 1639 43 is_stmt 0 view .LVU2150
 7736 013a FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7737              	.LVL501:
1639:Veno-Echo.cpp ****             }
 7738              		.loc 20 1639 27 view .LVU2151
 7739 013e 3060     		str	r0, [r6]
 7740 0140 BFE7     		b	.L434
 7741              	.L453:
1595:Veno-Echo.cpp ****         {
 7742              		.loc 20 1595 9 is_stmt 1 view .LVU2152
1595:Veno-Echo.cpp ****         {
 7743              		.loc 20 1595 25 is_stmt 0 view .LVU2153
 7744 0142 2A48     		ldr	r0, .L457+76
 7745 0144 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 7746              	.LVL502:
1595:Veno-Echo.cpp ****         {
 7747              		.loc 20 1595 9 view .LVU2154
 7748 0148 10BB     		cbnz	r0, .L456
 7749              	.L427:
1599:Veno-Echo.cpp ****         
 7750              		.loc 20 1599 9 is_stmt 1 view .LVU2155
1599:Veno-Echo.cpp ****         
 7751              		.loc 20 1599 33 is_stmt 0 view .LVU2156
 7752 014a 2948     		ldr	r0, .L457+80
 7753 014c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7754              	.LVL503:
1602:Veno-Echo.cpp ****         buttonstate += 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 255


 7755              		.loc 20 1602 9 is_stmt 1 view .LVU2157
1602:Veno-Echo.cpp ****         buttonstate += 1;
 7756              		.loc 20 1602 35 is_stmt 0 view .LVU2158
 7757 0150 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7758              	.LVL504:
1603:Veno-Echo.cpp ****         
 7759              		.loc 20 1603 21 view .LVU2159
 7760 0154 2368     		ldr	r3, [r4]
1602:Veno-Echo.cpp ****         buttonstate += 1;
 7761              		.loc 20 1602 19 view .LVU2160
 7762 0156 214A     		ldr	r2, .L457+60
1603:Veno-Echo.cpp ****         
 7763              		.loc 20 1603 21 view .LVU2161
 7764 0158 0133     		adds	r3, r3, #1
1602:Veno-Echo.cpp ****         buttonstate += 1;
 7765              		.loc 20 1602 19 view .LVU2162
 7766 015a 1060     		str	r0, [r2]
1603:Veno-Echo.cpp ****         
 7767              		.loc 20 1603 9 is_stmt 1 view .LVU2163
1605:Veno-Echo.cpp ****         {
 7768              		.loc 20 1605 9 is_stmt 0 view .LVU2164
 7769 015c 032B     		cmp	r3, #3
1603:Veno-Echo.cpp ****         
 7770              		.loc 20 1603 21 view .LVU2165
 7771 015e 2360     		str	r3, [r4]
1605:Veno-Echo.cpp ****         {
 7772              		.loc 20 1605 9 is_stmt 1 view .LVU2166
 7773 0160 9CD1     		bne	.L426
1607:Veno-Echo.cpp ****         }
 7774              		.loc 20 1607 13 view .LVU2167
1607:Veno-Echo.cpp ****         }
 7775              		.loc 20 1607 39 is_stmt 0 view .LVU2168
 7776 0162 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7777              	.LVL505:
1607:Veno-Echo.cpp ****         }
 7778              		.loc 20 1607 23 view .LVU2169
 7779 0166 1E4B     		ldr	r3, .L457+64
 7780 0168 1860     		str	r0, [r3]
 7781 016a 97E7     		b	.L426
 7782              	.L450:
1559:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7783              		.loc 20 1559 9 is_stmt 1 view .LVU2170
1559:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7784              		.loc 20 1559 24 is_stmt 0 view .LVU2171
 7785 016c 0D48     		ldr	r0, .L457+4
 7786 016e FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7787              	.LVL506:
 7788 0172 6BE7     		b	.L416
 7789              	.LVL507:
 7790              	.L449:
1553:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7791              		.loc 20 1553 9 is_stmt 1 view .LVU2172
1553:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7792              		.loc 20 1553 24 is_stmt 0 view .LVU2173
 7793 0174 0A48     		ldr	r0, .L457
 7794 0176 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7795              	.LVL508:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 256


 7796 017a 62E7     		b	.L415
 7797              	.LVL509:
 7798              	.L451:
1570:Veno-Echo.cpp ****         }
 7799              		.loc 20 1570 13 is_stmt 1 view .LVU2174
1570:Veno-Echo.cpp ****         }
 7800              		.loc 20 1570 39 is_stmt 0 view .LVU2175
 7801 017c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7802              	.LVL510:
1570:Veno-Echo.cpp ****         }
 7803              		.loc 20 1570 23 view .LVU2176
 7804 0180 174B     		ldr	r3, .L457+64
 7805 0182 1860     		str	r0, [r3]
 7806 0184 6DE7     		b	.L418
 7807              	.L452:
1584:Veno-Echo.cpp ****         }
 7808              		.loc 20 1584 13 is_stmt 1 view .LVU2177
1584:Veno-Echo.cpp ****         }
 7809              		.loc 20 1584 39 is_stmt 0 view .LVU2178
 7810 0186 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7811              	.LVL511:
1584:Veno-Echo.cpp ****         }
 7812              		.loc 20 1584 23 view .LVU2179
 7813 018a 154B     		ldr	r3, .L457+64
 7814 018c 1860     		str	r0, [r3]
 7815 018e 79E7     		b	.L422
 7816              	.L456:
1597:Veno-Echo.cpp ****         }
 7817              		.loc 20 1597 13 is_stmt 1 view .LVU2180
1597:Veno-Echo.cpp ****         }
 7818              		.loc 20 1597 35 is_stmt 0 view .LVU2181
 7819 0190 1648     		ldr	r0, .L457+76
 7820 0192 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7821              	.LVL512:
 7822 0196 1648     		ldr	r0, .L457+80
 7823 0198 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7824              	.LVL513:
 7825 019c D5E7     		b	.L427
 7826              	.L458:
 7827 019e 00BF     		.align	2
 7828              	.L457:
 7829 01a0 00000000 		.word	.LANCHOR92
 7830 01a4 00000000 		.word	.LANCHOR93
 7831 01a8 00000000 		.word	.LANCHOR90
 7832 01ac 00000000 		.word	.LANCHOR95
 7833 01b0 00000000 		.word	.LANCHOR91
 7834 01b4 00000000 		.word	.LANCHOR94
 7835 01b8 00000000 		.word	.LANCHOR96
 7836 01bc 00000000 		.word	.LANCHOR97
 7837 01c0 00000000 		.word	.LANCHOR87
 7838 01c4 00000000 		.word	.LANCHOR107
 7839 01c8 00000000 		.word	.LANCHOR7
 7840 01cc 00000000 		.word	.LANCHOR110
 7841 01d0 00000000 		.word	.LANCHOR13
 7842 01d4 00000000 		.word	.LANCHOR0
 7843 01d8 00000000 		.word	.LANCHOR1
 7844 01dc 00000000 		.word	.LANCHOR109
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 257


 7845 01e0 00000000 		.word	.LANCHOR108
 7846 01e4 00000000 		.word	.LANCHOR106
 7847 01e8 00000000 		.word	.LANCHOR16
 7848 01ec 00000000 		.word	.LANCHOR12
 7849 01f0 00000000 		.word	.LANCHOR88
 7850              		.cfi_endproc
 7851              	.LFE4329:
 7853              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 7854              		.align	1
 7855              		.p2align 2,,3
 7856              		.syntax unified
 7857              		.thumb
 7858              		.thumb_func
 7859              		.fpu fpv5-d16
 7861              	_ZL13AudioCallbackPfS_j:
 7862              	.LVL514:
 7863              	.LFB4309:
 237:Veno-Echo.cpp **** 
 7864              		.loc 20 237 1 is_stmt 1 view -0
 7865              		.cfi_startproc
 7866              		@ args = 0, pretend = 0, frame = 72
 7867              		@ frame_needed = 0, uses_anonymous_args = 0
 248:Veno-Echo.cpp **** 
 7868              		.loc 20 248 1 view .LVU2183
 266:Veno-Echo.cpp **** 
 7869              		.loc 20 266 1 view .LVU2184
 266:Veno-Echo.cpp **** 
 7870              		.loc 20 266 9 is_stmt 0 view .LVU2185
 7871 0000 DFF884C0 		ldr	ip, .L569+8
 266:Veno-Echo.cpp **** 
 7872              		.loc 20 266 20 view .LVU2186
 7873 0004 DCF80030 		ldr	r3, [ip]
 237:Veno-Echo.cpp **** 
 7874              		.loc 20 237 1 view .LVU2187
 7875 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7876              		.cfi_def_cfa_offset 36
 7877              		.cfi_offset 4, -36
 7878              		.cfi_offset 5, -32
 7879              		.cfi_offset 6, -28
 7880              		.cfi_offset 7, -24
 7881              		.cfi_offset 8, -20
 7882              		.cfi_offset 9, -16
 7883              		.cfi_offset 10, -12
 7884              		.cfi_offset 11, -8
 7885              		.cfi_offset 14, -4
 266:Veno-Echo.cpp **** 
 7886              		.loc 20 266 20 view .LVU2188
 7887 000c 0133     		adds	r3, r3, #1
 266:Veno-Echo.cpp **** 
 7888              		.loc 20 266 25 view .LVU2189
 7889 000e 1C4C     		ldr	r4, .L569
 237:Veno-Echo.cpp **** 
 7890              		.loc 20 237 1 view .LVU2190
 7891 0010 0646     		mov	r6, r0
 7892 0012 1546     		mov	r5, r2
 266:Veno-Echo.cpp **** 
 7893              		.loc 20 266 25 view .LVU2191
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 258


 7894 0014 84FB0302 		smull	r0, r2, r4, r3
 7895              	.LVL515:
 266:Veno-Echo.cpp **** 
 7896              		.loc 20 266 25 view .LVU2192
 7897 0018 DC17     		asrs	r4, r3, #31
 237:Veno-Echo.cpp **** 
 7898              		.loc 20 237 1 view .LVU2193
 7899 001a 0F46     		mov	r7, r1
 7900              	.LBB1556:
 7901              	.LBB1557:
 7902              	.LBB1558:
 7903              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 259


  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 260


 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 261


 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 262


 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 263


 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 264


 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 265


 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7904              		.loc 24 419 24 view .LVU2194
 7905 001c 1949     		ldr	r1, .L569+4
 7906              	.LVL516:
 7907              		.loc 24 419 24 view .LVU2195
 7908              	.LBE1558:
 7909              	.LBE1557:
 7910              	.LBE1556:
 266:Veno-Echo.cpp **** 
 7911              		.loc 20 266 25 view .LVU2196
 7912 001e 1A44     		add	r2, r2, r3
 7913 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 7914 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 7915 0028 1B1B     		subs	r3, r3, r4
 237:Veno-Echo.cpp **** 
 7916              		.loc 20 237 1 view .LVU2197
 7917 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 7918              		.cfi_def_cfa_offset 92
 7919              		.cfi_offset 80, -92
 7920              		.cfi_offset 81, -88
 7921              		.cfi_offset 82, -84
 7922              		.cfi_offset 83, -80
 7923              		.cfi_offset 84, -76
 7924              		.cfi_offset 85, -72
 7925              		.cfi_offset 86, -68
 7926              		.cfi_offset 87, -64
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 266


 7927              		.cfi_offset 88, -60
 7928              		.cfi_offset 89, -56
 7929              		.cfi_offset 90, -52
 7930              		.cfi_offset 91, -48
 7931              		.cfi_offset 92, -44
 7932              		.cfi_offset 93, -40
 266:Veno-Echo.cpp **** 
 7933              		.loc 20 266 9 view .LVU2198
 7934 002e CCF80030 		str	r3, [ip]
 268:Veno-Echo.cpp **** {
 7935              		.loc 20 268 1 is_stmt 1 view .LVU2199
 7936              	.LVL517:
 7937              	.LBB1563:
 7938              	.LBI1556:
 7939              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 267


  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7940              		.loc 25 87 5 view .LVU2200
 7941              	.LBE1563:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7942              		.loc 25 88 7 view .LVU2201
 7943              	.LBB1564:
 7944              	.LBB1561:
 7945              	.LBI1557:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7946              		.loc 24 413 7 view .LVU2202
 7947              	.LBB1559:
 7948              		.loc 24 419 24 is_stmt 0 view .LVU2203
 7949 0032 BFF35B8F 		dmb	ish
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 268


 7950 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 7951              	.LBE1559:
 7952              	.LBE1561:
 7953              	.LBE1564:
 237:Veno-Echo.cpp **** 
 7954              		.loc 20 237 1 view .LVU2204
 7955 0038 93B0     		sub	sp, sp, #76
 7956              		.cfi_def_cfa_offset 168
 7957              	.LBB1565:
 7958              	.LBB1562:
 7959              	.LBB1560:
 7960              		.loc 24 419 24 view .LVU2205
 7961 003a BFF35B8F 		dmb	ish
 7962              	.LBE1560:
 7963              	.LBE1562:
 7964              	.LBE1565:
 268:Veno-Echo.cpp **** {
 7965              		.loc 20 268 1 view .LVU2206
 7966 003e 7BB9     		cbnz	r3, .L460
 281:Veno-Echo.cpp ****         {
 7967              		.loc 20 281 9 is_stmt 1 view .LVU2207
 7968 0040 DCF80030 		ldr	r3, [ip]
 7969 0044 072B     		cmp	r3, #7
 7970 0046 0BD8     		bhi	.L460
 7971 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 7972              	.L462:
 7973 004c 8D05     		.2byte	(.L469-.L462)/2
 7974 004e 9305     		.2byte	(.L468-.L462)/2
 7975 0050 9705     		.2byte	(.L467-.L462)/2
 7976 0052 9B05     		.2byte	(.L466-.L462)/2
 7977 0054 9F05     		.2byte	(.L465-.L462)/2
 7978 0056 A305     		.2byte	(.L464-.L462)/2
 7979 0058 0800     		.2byte	(.L463-.L462)/2
 7980 005a 8905     		.2byte	(.L461-.L462)/2
 7981              		.p2align 1
 7982              	.L463:
 308:Veno-Echo.cpp ****                 Update_width();
 7983              		.loc 20 308 13 view .LVU2208
 309:Veno-Echo.cpp ****             break;
 7984              		.loc 20 309 17 view .LVU2209
 309:Veno-Echo.cpp ****             break;
 7985              		.loc 20 309 29 is_stmt 0 view .LVU2210
 7986 005c FFF7FEFF 		bl	_Z12Update_widthv
 7987              	.LVL518:
 310:Veno-Echo.cpp **** 
 7988              		.loc 20 310 13 is_stmt 1 view .LVU2211
 7989              	.L460:
 7990              	.LBB1566:
 319:Veno-Echo.cpp ****     {   
 7991              		.loc 20 319 25 discriminator 1 view .LVU2212
 7992 0060 002D     		cmp	r5, #0
 7993 0062 00F06285 		beq	.L459
 319:Veno-Echo.cpp ****     {   
 7994              		.loc 20 319 25 is_stmt 0 view .LVU2213
 7995 0066 0023     		movs	r3, #0
 7996 0068 013D     		subs	r5, r5, #1
 7997              	.LVL519:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 269


 319:Veno-Echo.cpp ****     {   
 7998              		.loc 20 319 25 view .LVU2214
 7999 006a DFF82080 		ldr	r8, .L569+12
 8000 006e B346     		mov	fp, r6
 8001 0070 0293     		str	r3, [sp, #8]
 8002 0072 25F00103 		bic	r3, r5, #1
 8003 0076 DFF81890 		ldr	r9, .L569+16
 8004 007a 0097     		str	r7, [sp]
 8005 007c 0593     		str	r3, [sp, #20]
 8006 007e AFE1     		b	.L525
 8007              	.L570:
 8008              		.align	2
 8009              	.L569:
 8010 0080 89888888 		.word	-2004318071
 8011 0084 00000000 		.word	.LANCHOR112
 8012 0088 00000000 		.word	.LANCHOR111
 8013 008c 00000000 		.word	.LANCHOR127
 8014 0090 00000000 		.word	.LANCHOR128
 8015              	.LVL520:
 8016              	.L568:
 8017              	.LBB1567:
 8018              	.LBB1568:
 8019              	.LBB1569:
 8020              	.LBB1570:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 8021              		.loc 19 103 17 view .LVU2215
 8022 0094 DF49     		ldr	r1, .L571
 8023              		.loc 19 103 13 view .LVU2216
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 270


 8024 0096 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 8025              		.loc 19 103 17 view .LVU2217
 8026 0098 6318     		adds	r3, r4, r1
 8027              		.loc 19 103 13 view .LVU2218
 8028 009a 0028     		cmp	r0, #0
 8029 009c 40F04B83 		bne	.L564
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 8030              		.loc 19 107 21 view .LVU2219
 8031 00a0 DD48     		ldr	r0, .L571+4
 105:delayline_reverse.h ****                 
 8032              		.loc 19 105 17 view .LVU2220
 8033 00a2 0127     		movs	r7, #1
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 8034              		.loc 19 110 45 view .LVU2221
 8035 00a4 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 8036              		.loc 19 107 17 view .LVU2222
 8037 00a6 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 8038              		.loc 19 107 21 view .LVU2223
 8039 00a8 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 8040              		.loc 19 105 17 view .LVU2224
 8041 00aa 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 8042              		.loc 19 107 17 view .LVU2225
 8043 00ac 002D     		cmp	r5, #0
 8044 00ae 40F03A85 		bne	.L483
 8045              		.loc 19 110 21 view .LVU2226
 8046 00b2 E260     		str	r2, [r4, #12]
 8047              	.L484:
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 8048              		.loc 19 130 45 view .LVU2227
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 271


 8049 00b4 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 8050              	.LVL521:
 8051              		.loc 19 130 45 view .LVU2228
 8052 00b8 B7EE007A 		vmov.f32	s14, #1.0e+0
 8053              		.loc 19 130 37 view .LVU2229
 8054 00bc 039A     		ldr	r2, [sp, #12]
 8055              		.loc 19 130 45 view .LVU2230
 8056 00be B8EE676A 		vcvt.f32.u32	s12, s15
 8057              		.loc 19 130 37 view .LVU2231
 8058 00c2 D2ED006A 		vldr.32	s13, [r2]
 8059              		.loc 19 130 45 view .LVU2232
 8060 00c6 C7EE067A 		vdiv.f32	s15, s14, s12
 8061              		.loc 19 130 37 view .LVU2233
 8062 00ca 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8063              		.loc 19 131 17 view .LVU2234
 8064 00ce F4EEC77A 		vcmpe.f32	s15, s14
 8065 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8066 00d6 40F32D85 		ble	.L565
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 8067              		.loc 19 133 21 view .LVU2235
 8068 00da 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8069              		.loc 19 134 21 view .LVU2236
 8070 00dc 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8071              		.loc 19 133 21 view .LVU2237
 8072 00de 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                     playinghead_ = true;
 8073              		.loc 19 135 21 view .LVU2238
 8074 00e2 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8075              		.loc 19 134 21 view .LVU2239
 8076 00e4 1970     		strb	r1, [r3]
 8077              		.loc 19 135 21 view .LVU2240
 8078 00e6 0270     		strb	r2, [r0]
 8079              	.LVL522:
 8080              	.L487:
 8081              		.loc 19 135 21 view .LVU2241
 8082              	.LBE1570:
 8083              	.LBE1569:
 8084              	.LBE1568:
 362:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8085              		.loc 20 362 9 is_stmt 1 view .LVU2242
 362:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8086              		.loc 20 362 56 is_stmt 0 view .LVU2243
 8087 00e8 06AA     		add	r2, sp, #24
 8088 00ea 5946     		mov	r1, fp
 8089 00ec CB48     		ldr	r0, .L571+8
 8090 00ee FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8091              	.LVL523:
 363:Veno-Echo.cpp **** 
 8092              		.loc 20 363 56 view .LVU2244
 8093 00f2 18EE101A 		vmov	r1, s16	@ int
 8094 00f6 07AA     		add	r2, sp, #28
 8095 00f8 C948     		ldr	r0, .L571+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 272


 362:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8096              		.loc 20 362 56 view .LVU2245
 8097 00fa F0EE408A 		vmov.f32	s17, s0
 8098              	.LVL524:
 363:Veno-Echo.cpp **** 
 8099              		.loc 20 363 9 is_stmt 1 view .LVU2246
 363:Veno-Echo.cpp **** 
 8100              		.loc 20 363 56 is_stmt 0 view .LVU2247
 8101 00fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8102              	.LVL525:
 366:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8103              		.loc 20 366 46 view .LVU2248
 8104 0102 C848     		ldr	r0, .L571+16
 363:Veno-Echo.cpp **** 
 8105              		.loc 20 363 56 view .LVU2249
 8106 0104 B0EE408A 		vmov.f32	s16, s0
 8107              	.LVL526:
 366:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8108              		.loc 20 366 9 is_stmt 1 view .LVU2250
 366:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8109              		.loc 20 366 46 is_stmt 0 view .LVU2251
 8110 0108 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 8111              	.LVL527:
 366:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8112              		.loc 20 366 46 view .LVU2252
 8113 010c 0346     		mov	r3, r0
 367:Veno-Echo.cpp **** 
 8114              		.loc 20 367 46 view .LVU2253
 8115 010e C648     		ldr	r0, .L571+20
 366:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8116              		.loc 20 366 45 view .LVU2254
 8117 0110 1B68     		ldr	r3, [r3]	@ float
 366:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8118              		.loc 20 366 47 view .LVU2255
 8119 0112 0893     		str	r3, [sp, #32]	@ float
 367:Veno-Echo.cpp **** 
 8120              		.loc 20 367 9 is_stmt 1 view .LVU2256
 367:Veno-Echo.cpp **** 
 8121              		.loc 20 367 46 is_stmt 0 view .LVU2257
 8122 0114 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 8123              	.LVL528:
 367:Veno-Echo.cpp **** 
 8124              		.loc 20 367 45 view .LVU2258
 8125 0118 0368     		ldr	r3, [r0]	@ float
 367:Veno-Echo.cpp **** 
 8126              		.loc 20 367 47 view .LVU2259
 8127 011a 0993     		str	r3, [sp, #36]	@ float
 370:Veno-Echo.cpp **** 
 8128              		.loc 20 370 9 is_stmt 1 view .LVU2260
 370:Veno-Echo.cpp **** 
 8129              		.loc 20 370 28 is_stmt 0 view .LVU2261
 8130 011c FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 8131              	.LVL529:
 373:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8132              		.loc 20 373 9 is_stmt 1 view .LVU2262
 8133              	.LBB1579:
 8134              	.LBB1580:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 273


1815:Veno-Echo.cpp ****         returnval = limit;
 8135              		.loc 20 1815 5 is_stmt 0 view .LVU2263
 8136 0120 B0EE007A 		vmov.f32	s14, #2.0e+0
 8137              	.LBE1580:
 8138              	.LBE1579:
 373:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8139              		.loc 20 373 34 view .LVU2264
 8140 0124 DDED087A 		vldr.32	s15, [sp, #32]
 8141              	.LVL530:
 8142              	.LBB1583:
 8143              	.LBI1579:
1812:Veno-Echo.cpp **** {
 8144              		.loc 20 1812 7 is_stmt 1 view .LVU2265
 8145              	.LBB1581:
1814:Veno-Echo.cpp ****     if (input > limit)
 8146              		.loc 20 1814 5 view .LVU2266
1815:Veno-Echo.cpp ****         returnval = limit;
 8147              		.loc 20 1815 5 view .LVU2267
 8148 0128 F4EEC77A 		vcmpe.f32	s15, s14
 8149 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8150 0130 00F3CC84 		bgt	.L528
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8151              		.loc 20 1817 10 view .LVU2268
 8152 0134 B8EE007A 		vmov.f32	s14, #-2.0e+0
1818:Veno-Echo.cpp ****     else
 8153              		.loc 20 1818 19 is_stmt 0 view .LVU2269
 8154 0138 F4EE477A 		vcmp.f32	s15, s14
 8155 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8156 0140 48BF     		it	mi
 8157 0142 F0EE477A 		vmovmi.f32	s15, s14
 8158              	.LVL531:
 8159              	.L491:
1822:Veno-Echo.cpp **** }
 8160              		.loc 20 1822 5 is_stmt 1 view .LVU2270
1822:Veno-Echo.cpp **** }
 8161              		.loc 20 1822 5 is_stmt 0 view .LVU2271
 8162              	.LBE1581:
 8163              	.LBE1583:
 8164              	.LBB1584:
 8165              	.LBB1585:
1815:Veno-Echo.cpp ****         returnval = limit;
 8166              		.loc 20 1815 5 view .LVU2272
 8167 0146 B0EE007A 		vmov.f32	s14, #2.0e+0
 8168              	.LBE1585:
 8169              	.LBE1584:
 374:Veno-Echo.cpp **** 
 8170              		.loc 20 374 34 view .LVU2273
 8171 014a 9DED090A 		vldr.32	s0, [sp, #36]
 373:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8172              		.loc 20 373 23 view .LVU2274
 8173 014e CDED087A 		vstr.32	s15, [sp, #32]
 374:Veno-Echo.cpp **** 
 8174              		.loc 20 374 9 is_stmt 1 view .LVU2275
 8175              	.LVL532:
 8176              	.LBB1589:
 8177              	.LBI1584:
1812:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 274


 8178              		.loc 20 1812 7 view .LVU2276
 8179              	.LBB1586:
1814:Veno-Echo.cpp ****     if (input > limit)
 8180              		.loc 20 1814 5 view .LVU2277
1815:Veno-Echo.cpp ****         returnval = limit;
 8181              		.loc 20 1815 5 view .LVU2278
 8182 0152 B4EEC70A 		vcmpe.f32	s0, s14
 8183 0156 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8184 015a 00F31F84 		bgt	.L529
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8185              		.loc 20 1817 10 view .LVU2279
 8186 015e B8EE007A 		vmov.f32	s14, #-2.0e+0
 8187              	.LBE1586:
 8188              	.LBE1589:
 8189              	.LBB1590:
 376:Veno-Echo.cpp **** {
 8190              		.loc 20 376 1 is_stmt 0 view .LVU2280
 8191 0162 B24B     		ldr	r3, .L571+24
 8192 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8193              	.LBE1590:
 8194              	.LBB1612:
 8195              	.LBB1587:
1818:Veno-Echo.cpp ****     else
 8196              		.loc 20 1818 19 view .LVU2281
 8197 0166 B4EE470A 		vcmp.f32	s0, s14
 8198 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8199 016e 48BF     		it	mi
 8200 0170 B0EE470A 		vmovmi.f32	s0, s14
 8201              	.LVL533:
1822:Veno-Echo.cpp **** }
 8202              		.loc 20 1822 5 is_stmt 1 view .LVU2282
1822:Veno-Echo.cpp **** }
 8203              		.loc 20 1822 5 is_stmt 0 view .LVU2283
 8204              	.LBE1587:
 8205              	.LBE1612:
 374:Veno-Echo.cpp **** 
 8206              		.loc 20 374 23 view .LVU2284
 8207 0174 8DED090A 		vstr.32	s0, [sp, #36]
 376:Veno-Echo.cpp **** {
 8208              		.loc 20 376 1 is_stmt 1 view .LVU2285
 8209              	.LBB1613:
 8210 0178 002B     		cmp	r3, #0
 8211 017a 00F01884 		beq	.L566
 8212              	.L495:
 8213              	.LBE1613:
 420:Veno-Echo.cpp ****         static float RNegFB{};
 8214              		.loc 20 420 9 view .LVU2286
 421:Veno-Echo.cpp **** 
 8215              		.loc 20 421 9 view .LVU2287
 424:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8216              		.loc 20 424 9 view .LVU2288
 424:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8217              		.loc 20 424 22 is_stmt 0 view .LVU2289
 8218 017e AC4B     		ldr	r3, .L571+28
 8219              	.LBB1614:
 8220              	.LBB1615:
  53:envFollow.h   **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 275


  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 8221              		.loc 12 57 16 view .LVU2290
 8222 0180 D8ED042A 		vldr.32	s5, [r8, #16]
 8223              	.LBE1615:
 8224              	.LBE1614:
 424:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8225              		.loc 20 424 22 view .LVU2291
 8226 0184 D3ED004A 		vldr.32	s9, [r3]
 8227 0188 AA4B     		ldr	r3, .L571+32
 8228              	.LBB1627:
 8229              	.LBB1616:
 8230              		.loc 12 57 37 view .LVU2292
 8231 018a 98ED006A 		vldr.32	s12, [r8]
 8232              	.LBE1616:
 8233              	.LBE1627:
 424:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8234              		.loc 20 424 22 view .LVU2293
 8235 018e 93ED007A 		vldr.32	s14, [r3]
 427:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8236              		.loc 20 427 22 view .LVU2294
 8237 0192 A94B     		ldr	r3, .L571+36
 424:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8238              		.loc 20 424 9 view .LVU2295
 8239 0194 F4EEC74A 		vcmpe.f32	s9, s14
 8240              	.LBB1628:
 8241              	.LBB1629:
 8242              		.loc 12 57 16 view .LVU2296
 8243 0198 D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 8244              		.loc 12 65 20 view .LVU2297
 8245 019c 99ED054A 		vldr.32	s8, [r9, #20]
 8246              		.loc 12 65 53 view .LVU2298
 8247 01a0 99ED032A 		vldr.32	s4, [r9, #12]
 8248              	.LBE1629:
 8249              	.LBE1628:
 424:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8250              		.loc 20 424 9 view .LVU2299
 8251 01a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8252              	.LBB1638:
 8253              	.LBB1617:
 8254              		.loc 12 65 20 view .LVU2300
 8255 01a8 98ED053A 		vldr.32	s6, [r8, #20]
 8256              		.loc 12 65 53 view .LVU2301
 8257 01ac 98ED031A 		vldr.32	s2, [r8, #12]
 8258              	.LBE1617:
 8259              	.LBE1638:
 443:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 276


 8260              		.loc 20 443 13 view .LVU2302
 8261 01b0 DFEDA21A 		vldr.32	s3, .L571+40
 8262 01b4 58BF     		it	pl
 8263 01b6 74EEC74A 		vsubpl.f32	s9, s9, s14
 427:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8264              		.loc 20 427 9 is_stmt 1 view .LVU2303
 427:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8265              		.loc 20 427 22 is_stmt 0 view .LVU2304
 8266 01ba 93ED007A 		vldr.32	s14, [r3]
 8267 01be A04B     		ldr	r3, .L571+44
 8268 01c0 D3ED006A 		vldr.32	s13, [r3]
 430:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 8269              		.loc 20 430 15 view .LVU2305
 8270 01c4 67EEA44A 		vmul.f32	s9, s15, s9
 8271              	.LBB1639:
 8272              	.LBB1630:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8273              		.loc 12 57 37 view .LVU2306
 8274 01c8 D9ED007A 		vldr.32	s15, [r9]
 8275              	.LBE1630:
 8276              	.LBE1639:
 427:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8277              		.loc 20 427 9 view .LVU2307
 8278 01cc B4EEE67A 		vcmpe.f32	s14, s13
 434:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8279              		.loc 20 434 36 view .LVU2308
 8280 01d0 9C4B     		ldr	r3, .L571+48
 427:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8281              		.loc 20 427 9 view .LVU2309
 8282 01d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8283 01d6 58BF     		it	pl
 8284 01d8 37EE667A 		vsubpl.f32	s14, s14, s13
 430:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 8285              		.loc 20 430 9 is_stmt 1 view .LVU2310
 8286              	.LVL534:
 431:Veno-Echo.cpp **** 
 8287              		.loc 20 431 9 view .LVU2311
 434:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8288              		.loc 20 434 36 is_stmt 0 view .LVU2312
 8289 01dc F7EE006A 		vmov.f32	s13, #1.0e+0
 431:Veno-Echo.cpp **** 
 8290              		.loc 20 431 15 view .LVU2313
 8291 01e0 20EE070A 		vmul.f32	s0, s0, s14
 8292              	.LVL535:
 434:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8293              		.loc 20 434 9 is_stmt 1 view .LVU2314
 8294              	.LBB1640:
 8295              	.LBB1618:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8296              		.loc 12 57 33 is_stmt 0 view .LVU2315
 8297 01e4 36EEE25A 		vsub.f32	s10, s13, s5
 8298              	.LBE1618:
 8299              	.LBE1640:
 8300              	.LBB1641:
 8301              	.LBB1631:
 8302 01e8 76EEE35A 		vsub.f32	s11, s13, s7
 8303              	.LBE1631:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 277


 8304              	.LBE1641:
 8305              	.LBB1642:
 8306              	.LBB1619:
 8307              		.loc 12 65 45 view .LVU2316
 8308 01ec 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8309              		.loc 12 57 37 view .LVU2317
 8310 01f0 25EE065A 		vmul.f32	s10, s10, s12
 8311              	.LBE1619:
 8312              	.LBE1642:
 434:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8313              		.loc 20 434 36 view .LVU2318
 8314 01f4 93ED006A 		vldr.32	s12, [r3]
 8315              	.LBB1643:
 8316              	.LBB1632:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8317              		.loc 12 57 37 view .LVU2319
 8318 01f8 65EEA75A 		vmul.f32	s11, s11, s15
 8319              		.loc 12 65 45 view .LVU2320
 8320 01fc 76EEC47A 		vsub.f32	s15, s13, s8
 8321              	.LBE1632:
 8322              	.LBE1643:
 8323              	.LBB1644:
 8324              	.LBB1620:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8325              		.loc 12 57 28 view .LVU2321
 8326 0200 A4EEA25A 		vfma.f32	s10, s9, s5
 8327              	.LBE1620:
 8328              	.LBE1644:
 8329              	.LBB1645:
 8330              	.LBB1633:
 8331 0204 E0EE235A 		vfma.f32	s11, s0, s7
 8332              		.loc 12 65 53 view .LVU2322
 8333 0208 67EE827A 		vmul.f32	s15, s15, s4
 8334              	.LBE1633:
 8335              	.LBE1645:
 8336              	.LBB1646:
 8337              	.LBB1621:
 8338 020c 27EE017A 		vmul.f32	s14, s14, s2
 8339              	.LBE1621:
 8340              	.LBE1646:
 434:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8341              		.loc 20 434 36 view .LVU2323
 8342 0210 76EEC66A 		vsub.f32	s13, s13, s12
 8343              	.LBB1647:
 8344              	.LBB1622:
  58:envFollow.h   **** 
 8345              		.loc 12 58 30 view .LVU2324
 8346 0214 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8347              		.loc 12 57 13 view .LVU2325
 8348 0218 88ED005A 		vstr.32	s10, [r8]
 8349              	.LBE1622:
 8350              	.LBE1647:
 8351              	.LBB1648:
 8352              	.LBB1634:
  58:envFollow.h   **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 278


 8353              		.loc 12 58 30 view .LVU2326
 8354 021c 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8355              		.loc 12 57 13 view .LVU2327
 8356 0220 C9ED005A 		vstr.32	s11, [r9]
 8357              	.LBE1634:
 8358              	.LBE1648:
 434:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8359              		.loc 20 434 89 view .LVU2328
 8360 0224 66EE005A 		vmul.f32	s11, s12, s0
 8361              	.LBB1649:
 8362              	.LBB1623:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8363              		.loc 12 61 27 view .LVU2329
 8364 0228 F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 8365              		.loc 12 58 21 view .LVU2330
 8366 022c 88ED022A 		vstr.32	s4, [r8, #8]
 8367              	.LBE1623:
 8368              	.LBE1649:
 8369              	.LBB1650:
 8370              	.LBB1635:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8371              		.loc 12 61 27 view .LVU2331
 8372 0230 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 8373              		.loc 12 58 21 view .LVU2332
 8374 0234 C9ED022A 		vstr.32	s5, [r9, #8]
 8375              	.LBE1635:
 8376              	.LBE1650:
 435:Veno-Echo.cpp **** 
 8377              		.loc 20 435 89 view .LVU2333
 8378 0238 26EE246A 		vmul.f32	s12, s12, s9
 8379              	.LBB1651:
 8380              	.LBB1624:
 8381              		.loc 12 65 40 view .LVU2334
 8382 023c A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8383              		.loc 12 61 20 view .LVU2335
 8384 0240 C8ED013A 		vstr.32	s7, [r8, #4]
 8385              	.LBE1624:
 8386              	.LBE1651:
 8387              	.LBB1652:
 8388              	.LBB1636:
 8389              		.loc 12 65 40 view .LVU2336
 8390 0244 E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8391              		.loc 12 61 20 view .LVU2337
 8392 0248 89ED015A 		vstr.32	s10, [r9, #4]
 8393              	.LBE1636:
 8394              	.LBE1652:
 434:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8395              		.loc 20 434 15 view .LVU2338
 8396 024c E6EEA45A 		vfma.f32	s11, s13, s9
 8397              	.LVL536:
 435:Veno-Echo.cpp **** 
 8398              		.loc 20 435 9 is_stmt 1 view .LVU2339
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 279


 435:Veno-Echo.cpp **** 
 8399              		.loc 20 435 15 is_stmt 0 view .LVU2340
 8400 0250 A6EE806A 		vfma.f32	s12, s13, s0
 8401              	.LVL537:
 439:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 8402              		.loc 20 439 9 is_stmt 1 view .LVU2341
 8403              	.LBB1653:
 8404              	.LBI1614:
  54:envFollow.h   ****     {
 8405              		.loc 12 54 11 view .LVU2342
 8406              	.LBB1625:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8407              		.loc 12 57 9 view .LVU2343
  58:envFollow.h   **** 
 8408              		.loc 12 58 9 view .LVU2344
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8409              		.loc 12 61 9 view .LVU2345
 8410              		.loc 12 65 9 view .LVU2346
 8411              	.LBE1625:
 8412              	.LBE1653:
 443:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 8413              		.loc 20 443 13 is_stmt 0 view .LVU2347
 8414 0254 B4EEE17A 		vcmpe.f32	s14, s3
 8415              	.LBB1654:
 8416              	.LBB1626:
 8417              		.loc 12 65 17 view .LVU2348
 8418 0258 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 8419              		.loc 12 67 9 is_stmt 1 view .LVU2349
 8420              	.LVL538:
 8421              		.loc 12 67 9 is_stmt 0 view .LVU2350
 8422              	.LBE1626:
 8423              	.LBE1654:
 440:Veno-Echo.cpp **** 
 8424              		.loc 20 440 9 is_stmt 1 view .LVU2351
 8425              	.LBB1655:
 8426              	.LBI1628:
  54:envFollow.h   ****     {
 8427              		.loc 12 54 11 view .LVU2352
 8428              	.LBB1637:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8429              		.loc 12 57 9 view .LVU2353
  58:envFollow.h   **** 
 8430              		.loc 12 58 9 view .LVU2354
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8431              		.loc 12 61 9 view .LVU2355
  65:envFollow.h   **** 
 8432              		.loc 12 65 9 view .LVU2356
  65:envFollow.h   **** 
 8433              		.loc 12 65 17 is_stmt 0 view .LVU2357
 8434 025c C9ED037A 		vstr.32	s15, [r9, #12]
 8435              		.loc 12 67 9 is_stmt 1 view .LVU2358
 8436              	.LVL539:
 8437              		.loc 12 67 9 is_stmt 0 view .LVU2359
 8438              	.LBE1637:
 8439              	.LBE1655:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 280


 443:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 8440              		.loc 20 443 13 is_stmt 1 view .LVU2360
 8441 0260 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8442 0264 C0F29783 		blt	.L557
 444:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 8443              		.loc 20 444 17 view .LVU2361
 444:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 8444              		.loc 20 444 32 is_stmt 0 view .LVU2362
 8445 0268 37EE617A 		vsub.f32	s14, s14, s3
 8446              	.LVL540:
 444:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 8447              		.loc 20 444 47 view .LVU2363
 8448 026c F0EE086A 		vmov.f32	s13, #3.0e+0
 8449 0270 27EE267A 		vmul.f32	s14, s14, s13
 8450              	.L501:
 448:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 8451              		.loc 20 448 13 view .LVU2364
 8452 0274 DFED716A 		vldr.32	s13, .L571+40
 8453 0278 6E4B     		ldr	r3, .L571+32
 8454 027a F4EEE67A 		vcmpe.f32	s15, s13
 8455 027e 83ED007A 		vstr.32	s14, [r3]
 448:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 8456              		.loc 20 448 13 is_stmt 1 view .LVU2365
 8457 0282 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8458 0286 C0F28383 		blt	.L558
 449:Veno-Echo.cpp ****             else RNegFB = 0.0;
 8459              		.loc 20 449 17 view .LVU2366
 449:Veno-Echo.cpp ****             else RNegFB = 0.0;
 8460              		.loc 20 449 32 is_stmt 0 view .LVU2367
 8461 028a 77EEE67A 		vsub.f32	s15, s15, s13
 8462              	.LVL541:
 449:Veno-Echo.cpp ****             else RNegFB = 0.0;
 8463              		.loc 20 449 47 view .LVU2368
 8464 028e B0EE087A 		vmov.f32	s14, #3.0e+0
 8465 0292 67EE877A 		vmul.f32	s15, s15, s14
 8466              	.L503:
 8467 0296 6A4B     		ldr	r3, .L571+44
 453:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 8468              		.loc 20 453 15 view .LVU2369
 8469 0298 38EEA50A 		vadd.f32	s0, s17, s11
 8470              	.LVL542:
 454:Veno-Echo.cpp ****  
 8471              		.loc 20 454 15 view .LVU2370
 8472 029c 38EE068A 		vadd.f32	s16, s16, s12
 8473              	.LVL543:
 454:Veno-Echo.cpp ****  
 8474              		.loc 20 454 15 view .LVU2371
 8475 02a0 C3ED007A 		vstr.32	s15, [r3]
 453:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 8476              		.loc 20 453 9 is_stmt 1 view .LVU2372
 8477              	.LVL544:
 454:Veno-Echo.cpp ****  
 8478              		.loc 20 454 9 view .LVU2373
 457:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 8479              		.loc 20 457 9 view .LVU2374
 8480              	.LBB1656:
 8481              	.LBI1656:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 281


1812:Veno-Echo.cpp **** {
 8482              		.loc 20 1812 7 view .LVU2375
 8483              	.LBB1657:
1814:Veno-Echo.cpp ****     if (input > limit)
 8484              		.loc 20 1814 5 view .LVU2376
1815:Veno-Echo.cpp ****         returnval = limit;
 8485              		.loc 20 1815 5 view .LVU2377
 8486 02a4 F0EE007A 		vmov.f32	s15, #2.0e+0
 8487 02a8 B4EEE70A 		vcmpe.f32	s0, s15
 8488 02ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8489 02b0 00F31384 		bgt	.L535
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8490              		.loc 20 1817 10 view .LVU2378
 8491 02b4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1818:Veno-Echo.cpp ****     else
 8492              		.loc 20 1818 19 is_stmt 0 view .LVU2379
 8493 02b8 B4EE670A 		vcmp.f32	s0, s15
 8494 02bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8495 02c0 48BF     		it	mi
 8496 02c2 B0EE670A 		vmovmi.f32	s0, s15
 8497              	.LVL545:
 8498              	.L505:
1822:Veno-Echo.cpp **** }
 8499              		.loc 20 1822 5 is_stmt 1 view .LVU2380
1822:Veno-Echo.cpp **** }
 8500              		.loc 20 1822 5 is_stmt 0 view .LVU2381
 8501              	.LBE1657:
 8502              	.LBE1656:
 458:Veno-Echo.cpp **** 
 8503              		.loc 20 458 9 is_stmt 1 view .LVU2382
 8504              	.LBB1659:
 8505              	.LBI1659:
1812:Veno-Echo.cpp **** {
 8506              		.loc 20 1812 7 view .LVU2383
 8507              	.LBB1660:
1814:Veno-Echo.cpp ****     if (input > limit)
 8508              		.loc 20 1814 5 view .LVU2384
1815:Veno-Echo.cpp ****         returnval = limit;
 8509              		.loc 20 1815 5 view .LVU2385
 8510 02c6 F0EE007A 		vmov.f32	s15, #2.0e+0
 8511 02ca B4EEE78A 		vcmpe.f32	s16, s15
 8512 02ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8513 02d2 00F3FF83 		bgt	.L536
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8514              		.loc 20 1817 10 view .LVU2386
 8515 02d6 F8EE007A 		vmov.f32	s15, #-2.0e+0
1818:Veno-Echo.cpp ****     else
 8516              		.loc 20 1818 19 is_stmt 0 view .LVU2387
 8517 02da B4EE678A 		vcmp.f32	s16, s15
 8518 02de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8519 02e2 48BF     		it	mi
 8520 02e4 B0EE678A 		vmovmi.f32	s16, s15
 8521              	.LVL546:
 8522              	.L507:
1822:Veno-Echo.cpp **** }
 8523              		.loc 20 1822 5 is_stmt 1 view .LVU2388
1822:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 282


 8524              		.loc 20 1822 5 is_stmt 0 view .LVU2389
 8525              	.LBE1660:
 8526              	.LBE1659:
 460:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8527              		.loc 20 460 9 is_stmt 1 view .LVU2390
 460:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8528              		.loc 20 460 42 is_stmt 0 view .LVU2391
 8529 02e8 5748     		ldr	r0, .L571+52
 8530 02ea FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8531              	.LVL547:
 460:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8532              		.loc 20 460 21 view .LVU2392
 8533 02ee 11A9     		add	r1, sp, #68
 8534 02f0 4C48     		ldr	r0, .L571+16
 460:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8535              		.loc 20 460 42 view .LVU2393
 8536 02f2 8DED110A 		vstr.32	s0, [sp, #68]
 460:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8537              		.loc 20 460 21 view .LVU2394
 8538 02f6 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8539              	.LVL548:
 461:Veno-Echo.cpp **** 
 8540              		.loc 20 461 9 is_stmt 1 view .LVU2395
 461:Veno-Echo.cpp **** 
 8541              		.loc 20 461 42 is_stmt 0 view .LVU2396
 8542 02fa 5448     		ldr	r0, .L571+56
 8543 02fc B0EE480A 		vmov.f32	s0, s16
 8544 0300 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8545              	.LVL549:
 461:Veno-Echo.cpp **** 
 8546              		.loc 20 461 21 view .LVU2397
 8547 0304 11A9     		add	r1, sp, #68
 8548 0306 4848     		ldr	r0, .L571+20
 461:Veno-Echo.cpp **** 
 8549              		.loc 20 461 42 view .LVU2398
 8550 0308 8DED110A 		vstr.32	s0, [sp, #68]
 461:Veno-Echo.cpp **** 
 8551              		.loc 20 461 21 view .LVU2399
 8552 030c FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8553              	.LVL550:
 464:Veno-Echo.cpp ****         float mixR;
 8554              		.loc 20 464 9 is_stmt 1 view .LVU2400
 465:Veno-Echo.cpp **** 
 8555              		.loc 20 465 9 view .LVU2401
 467:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8556              		.loc 20 467 9 view .LVU2402
 467:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8557              		.loc 20 467 53 is_stmt 0 view .LVU2403
 8558 0310 09AA     		add	r2, sp, #36
 8559 0312 08A9     		add	r1, sp, #32
 8560 0314 4E48     		ldr	r0, .L571+60
 8561 0316 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8562              	.LVL551:
 468:Veno-Echo.cpp **** 
 8563              		.loc 20 468 53 view .LVU2404
 8564 031a 08AA     		add	r2, sp, #32
 8565 031c 09A9     		add	r1, sp, #36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 283


 8566 031e 4C48     		ldr	r0, .L571+60
 467:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8567              		.loc 20 467 81 view .LVU2405
 8568 0320 8DED0A0A 		vstr.32	s0, [sp, #40]
 468:Veno-Echo.cpp **** 
 8569              		.loc 20 468 9 is_stmt 1 view .LVU2406
 468:Veno-Echo.cpp **** 
 8570              		.loc 20 468 53 is_stmt 0 view .LVU2407
 8571 0324 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8572              	.LVL552:
 8573              	.LBB1662:
 8574              	.LBB1663:
1815:Veno-Echo.cpp ****         returnval = limit;
 8575              		.loc 20 1815 5 view .LVU2408
 8576 0328 B0EE007A 		vmov.f32	s14, #2.0e+0
 8577              	.LBE1663:
 8578              	.LBE1662:
 471:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8579              		.loc 20 471 38 view .LVU2409
 8580 032c DDED0A7A 		vldr.32	s15, [sp, #40]
 471:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8581              		.loc 20 471 9 is_stmt 1 view .LVU2410
 8582              	.LVL553:
 8583              	.LBB1666:
 8584              	.LBI1662:
1812:Veno-Echo.cpp **** {
 8585              		.loc 20 1812 7 view .LVU2411
 8586              	.LBB1664:
1814:Veno-Echo.cpp ****     if (input > limit)
 8587              		.loc 20 1814 5 view .LVU2412
1815:Veno-Echo.cpp ****         returnval = limit;
 8588              		.loc 20 1815 5 view .LVU2413
 8589 0330 F4EEC77A 		vcmpe.f32	s15, s14
 8590 0334 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8591 0338 00F3D383 		bgt	.L537
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8592              		.loc 20 1817 10 view .LVU2414
 8593 033c B8EE007A 		vmov.f32	s14, #-2.0e+0
1818:Veno-Echo.cpp ****     else
 8594              		.loc 20 1818 19 is_stmt 0 view .LVU2415
 8595 0340 F4EE477A 		vcmp.f32	s15, s14
 8596 0344 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8597 0348 48BF     		it	mi
 8598 034a F0EE477A 		vmovmi.f32	s15, s14
 8599              	.LVL554:
 8600              	.L509:
1822:Veno-Echo.cpp **** }
 8601              		.loc 20 1822 5 is_stmt 1 view .LVU2416
1822:Veno-Echo.cpp **** }
 8602              		.loc 20 1822 5 is_stmt 0 view .LVU2417
 8603              	.LBE1664:
 8604              	.LBE1666:
 8605              	.LBB1667:
 8606              	.LBB1668:
1815:Veno-Echo.cpp ****         returnval = limit;
 8607              		.loc 20 1815 5 view .LVU2418
 8608 034e B0EE007A 		vmov.f32	s14, #2.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 284


 8609              	.LBE1668:
 8610              	.LBE1667:
 471:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8611              		.loc 20 471 27 view .LVU2419
 8612 0352 CDED0A7A 		vstr.32	s15, [sp, #40]
 472:Veno-Echo.cpp **** 
 8613              		.loc 20 472 9 is_stmt 1 view .LVU2420
 8614              	.LVL555:
 8615              	.LBB1672:
 8616              	.LBI1667:
1812:Veno-Echo.cpp **** {
 8617              		.loc 20 1812 7 view .LVU2421
 8618              	.LBB1669:
1814:Veno-Echo.cpp ****     if (input > limit)
 8619              		.loc 20 1814 5 view .LVU2422
1815:Veno-Echo.cpp ****         returnval = limit;
 8620              		.loc 20 1815 5 view .LVU2423
 8621 0356 B4EEC70A 		vcmpe.f32	s0, s14
 8622 035a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8623 035e 00F37E82 		bgt	.L538
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8624              		.loc 20 1817 10 view .LVU2424
 8625 0362 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8626              	.LBE1669:
 8627              	.LBE1672:
 8628              	.LBB1673:
 474:Veno-Echo.cpp **** {
 8629              		.loc 20 474 1 is_stmt 0 view .LVU2425
 8630 0366 314B     		ldr	r3, .L571+24
 8631 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8632              	.LBE1673:
 8633              	.LBB1695:
 8634              	.LBB1670:
1818:Veno-Echo.cpp ****     else
 8635              		.loc 20 1818 19 view .LVU2426
 8636 036a B4EE470A 		vcmp.f32	s0, s14
 8637 036e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8638 0372 48BF     		it	mi
 8639 0374 B0EE470A 		vmovmi.f32	s0, s14
 8640              	.LVL556:
1822:Veno-Echo.cpp **** }
 8641              		.loc 20 1822 5 is_stmt 1 view .LVU2427
1822:Veno-Echo.cpp **** }
 8642              		.loc 20 1822 5 is_stmt 0 view .LVU2428
 8643              	.LBE1670:
 8644              	.LBE1695:
 472:Veno-Echo.cpp **** 
 8645              		.loc 20 472 27 view .LVU2429
 8646 0378 8DED0B0A 		vstr.32	s0, [sp, #44]
 474:Veno-Echo.cpp **** {
 8647              		.loc 20 474 1 is_stmt 1 view .LVU2430
 8648              	.LBB1696:
 8649 037c 002B     		cmp	r3, #0
 8650 037e 40F07782 		bne	.L567
 8651              	.LVL557:
 8652              	.L513:
 474:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 285


 8653              		.loc 20 474 1 is_stmt 0 view .LVU2431
 8654              	.LBE1696:
 515:Veno-Echo.cpp ****         {
 8655              		.loc 20 515 9 is_stmt 1 view .LVU2432
 515:Veno-Echo.cpp ****         {
 8656              		.loc 20 515 19 is_stmt 0 view .LVU2433
 8657 0382 344B     		ldr	r3, .L571+64
 515:Veno-Echo.cpp ****         {
 8658              		.loc 20 515 9 view .LVU2434
 8659 0384 F6EE006A 		vmov.f32	s13, #5.0e-1
 515:Veno-Echo.cpp ****         {
 8660              		.loc 20 515 19 view .LVU2435
 8661 0388 93ED007A 		vldr.32	s14, [r3]
 515:Veno-Echo.cpp ****         {
 8662              		.loc 20 515 9 view .LVU2436
 8663 038c B4EEE67A 		vcmpe.f32	s14, s13
 8664 0390 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8665 0394 40F15282 		bpl	.L559
 517:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8666              		.loc 20 517 13 is_stmt 1 view .LVU2437
 517:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8667              		.loc 20 517 34 is_stmt 0 view .LVU2438
 8668 0398 37EE077A 		vadd.f32	s14, s14, s14
 517:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8669              		.loc 20 517 18 view .LVU2439
 8670 039c 9BED006A 		vldr.32	s12, [fp]
 518:Veno-Echo.cpp ****         }
 8671              		.loc 20 518 18 view .LVU2440
 8672 03a0 DBED016A 		vldr.32	s13, [fp, #4]
 517:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8673              		.loc 20 517 18 view .LVU2441
 8674 03a4 A7EE276A 		vfma.f32	s12, s14, s15
 518:Veno-Echo.cpp ****         }
 8675              		.loc 20 518 18 view .LVU2442
 8676 03a8 E7EE006A 		vfma.f32	s13, s14, s0
 517:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8677              		.loc 20 517 18 view .LVU2443
 8678 03ac F0EE467A 		vmov.f32	s15, s12
 8679              	.LVL558:
 518:Veno-Echo.cpp ****         }
 8680              		.loc 20 518 13 is_stmt 1 view .LVU2444
 518:Veno-Echo.cpp ****         }
 8681              		.loc 20 518 18 is_stmt 0 view .LVU2445
 8682 03b0 B0EE660A 		vmov.f32	s0, s13
 8683              	.LVL559:
 8684              	.L519:
 532:Veno-Echo.cpp ****         {
 8685              		.loc 20 532 9 is_stmt 1 view .LVU2446
 8686 03b4 284B     		ldr	r3, .L571+68
 8687 03b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8688 03b8 002B     		cmp	r3, #0
 8689 03ba 00F0FB81 		beq	.L522
 534:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8690              		.loc 20 534 13 view .LVU2447
 534:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8691              		.loc 20 534 20 is_stmt 0 view .LVU2448
 8692 03be 0023     		movs	r3, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 286


 8693 03c0 009A     		ldr	r2, [sp]
 8694 03c2 1360     		str	r3, [r2]	@ float
 535:Veno-Echo.cpp ****         }
 8695              		.loc 20 535 13 is_stmt 1 view .LVU2449
 535:Veno-Echo.cpp ****         }
 8696              		.loc 20 535 22 is_stmt 0 view .LVU2450
 8697 03c4 5360     		str	r3, [r2, #4]	@ float
 8698              	.L523:
 8699              	.LBE1567:
 319:Veno-Echo.cpp ****     {   
 8700              		.loc 20 319 5 is_stmt 1 discriminator 2 view .LVU2451
 8701 03c6 009B     		ldr	r3, [sp]
 8702 03c8 0BF1080B 		add	fp, fp, #8
 319:Veno-Echo.cpp ****     {   
 8703              		.loc 20 319 35 is_stmt 0 discriminator 2 view .LVU2452
 8704 03cc 029A     		ldr	r2, [sp, #8]
 319:Veno-Echo.cpp ****     {   
 8705              		.loc 20 319 25 discriminator 2 view .LVU2453
 8706 03ce 0599     		ldr	r1, [sp, #20]
 8707 03d0 0833     		adds	r3, r3, #8
 8708 03d2 8A42     		cmp	r2, r1
 8709 03d4 0093     		str	r3, [sp]
 319:Veno-Echo.cpp ****     {   
 8710              		.loc 20 319 35 discriminator 2 view .LVU2454
 8711 03d6 02F10203 		add	r3, r2, #2
 8712              	.LVL560:
 319:Veno-Echo.cpp ****     {   
 8713              		.loc 20 319 25 is_stmt 1 discriminator 2 view .LVU2455
 8714 03da 00F0A683 		beq	.L459
 8715 03de 0293     		str	r3, [sp, #8]
 8716              	.LVL561:
 8717              	.L525:
 8718              	.LBB1941:
 321:Veno-Echo.cpp ****         Update_Mod();
 8719              		.loc 20 321 9 view .LVU2456
 321:Veno-Echo.cpp ****         Update_Mod();
 8720              		.loc 20 321 20 is_stmt 0 view .LVU2457
 8721 03e0 FFF7FEFF 		bl	_Z11UpdateClockv
 8722              	.LVL562:
 322:Veno-Echo.cpp **** 
 8723              		.loc 20 322 9 is_stmt 1 view .LVU2458
 8724              	.LBB1697:
 8725              	.LBB1698:
 8726              	.LBB1699:
 8727              	.LBB1700:
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 287


 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 8728              		.loc 19 174 71 is_stmt 0 view .LVU2459
 8729 03e4 DFF884A0 		ldr	r10, .L571+88
 8730              	.LBE1700:
 8731              	.LBE1699:
 8732              	.LBE1698:
 8733              	.LBE1697:
 322:Veno-Echo.cpp **** 
 8734              		.loc 20 322 19 view .LVU2460
 8735 03e8 FFF7FEFF 		bl	_Z10Update_Modv
 8736              	.LVL563:
 325:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8737              		.loc 20 325 9 is_stmt 1 view .LVU2461
 325:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8738              		.loc 20 325 51 is_stmt 0 view .LVU2462
 8739 03ec 1B48     		ldr	r0, .L571+72
 8740 03ee FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8741              	.LVL564:
 8742 03f2 0146     		mov	r1, r0
 8743 03f4 1A48     		ldr	r0, .L571+76
 8744              	.LBB1752:
 8745              	.LBB1735:
 8746              	.LBB1718:
 8747              	.LBB1701:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8748              		.loc 19 175 77 view .LVU2463
 8749 03f6 F7EE00AA 		vmov.f32	s21, #1.0e+0
 8750              	.LBE1701:
 8751              	.LBE1718:
 8752              	.LBE1735:
 8753              	.LBE1752:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 288


 325:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8754              		.loc 20 325 51 view .LVU2464
 8755 03fa FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8756              	.LVL565:
 326:Veno-Echo.cpp ****         
 8757              		.loc 20 326 51 view .LVU2465
 8758 03fe 1948     		ldr	r0, .L571+80
 325:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8759              		.loc 20 325 51 view .LVU2466
 8760 0400 F0EE40BA 		vmov.f32	s23, s0
 8761              	.LVL566:
 326:Veno-Echo.cpp ****         
 8762              		.loc 20 326 9 is_stmt 1 view .LVU2467
 326:Veno-Echo.cpp ****         
 8763              		.loc 20 326 51 is_stmt 0 view .LVU2468
 8764 0404 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8765              	.LVL567:
 326:Veno-Echo.cpp ****         
 8766              		.loc 20 326 51 view .LVU2469
 8767 0408 0146     		mov	r1, r0
 8768 040a 1748     		ldr	r0, .L571+84
 8769 040c FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8770              	.LVL568:
 8771 0410 2EE0     		b	.L572
 8772              	.L573:
 8773 0412 00BF     		.align	2
 8774              	.L571:
 8775 0414 249F2400 		.word	2400036
 8776 0418 1C9F2400 		.word	2400028
 8777 041c 00000000 		.word	.LANCHOR102
 8778 0420 00000000 		.word	.LANCHOR103
 8779 0424 00000000 		.word	.LANCHOR0
 8780 0428 00000000 		.word	.LANCHOR1
 8781 042c 00000000 		.word	.LANCHOR82
 8782 0430 00000000 		.word	.LANCHOR31
 8783 0434 00000000 		.word	.LANCHOR125
 8784 0438 00000000 		.word	.LANCHOR43
 8785 043c CDCCCC3E 		.word	1053609165
 8786 0440 00000000 		.word	.LANCHOR126
 8787 0444 00000000 		.word	.LANCHOR71
 8788 0448 00000000 		.word	.LANCHOR104
 8789 044c 00000000 		.word	.LANCHOR105
 8790 0450 00000000 		.word	.LANCHOR64
 8791 0454 00000000 		.word	.LANCHOR55
 8792 0458 00000000 		.word	.LANCHOR110
 8793 045c 00000000 		.word	.LANCHOR92
 8794 0460 00000000 		.word	.LANCHOR98
 8795 0464 00000000 		.word	.LANCHOR93
 8796 0468 00000000 		.word	.LANCHOR99
 8797 046c 209F2400 		.word	2400032
 8798              	.L572:
 328:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8799              		.loc 20 328 44 view .LVU2470
 8800 0470 D348     		ldr	r0, .L574
 326:Veno-Echo.cpp ****         
 8801              		.loc 20 326 51 view .LVU2471
 8802 0472 B0EE409A 		vmov.f32	s18, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 289


 8803              	.LVL569:
 328:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8804              		.loc 20 328 9 is_stmt 1 view .LVU2472
 328:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8805              		.loc 20 328 44 is_stmt 0 view .LVU2473
 8806 0476 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8807              	.LVL570:
 328:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8808              		.loc 20 328 44 view .LVU2474
 8809 047a 0146     		mov	r1, r0
 8810 047c D148     		ldr	r0, .L574+4
 8811 047e FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8812              	.LVL571:
 329:Veno-Echo.cpp **** 
 8813              		.loc 20 329 44 view .LVU2475
 8814 0482 D148     		ldr	r0, .L574+8
 328:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8815              		.loc 20 328 44 view .LVU2476
 8816 0484 B0EE408A 		vmov.f32	s16, s0
 8817              	.LVL572:
 329:Veno-Echo.cpp **** 
 8818              		.loc 20 329 9 is_stmt 1 view .LVU2477
 329:Veno-Echo.cpp **** 
 8819              		.loc 20 329 44 is_stmt 0 view .LVU2478
 8820 0488 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8821              	.LVL573:
 329:Veno-Echo.cpp **** 
 8822              		.loc 20 329 44 view .LVU2479
 8823 048c 0146     		mov	r1, r0
 8824 048e CF48     		ldr	r0, .L574+12
 8825 0490 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8826              	.LVL574:
 8827              	.LBB1753:
 8828              	.LBB1754:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8829              		.loc 10 60 42 view .LVU2480
 8830 0494 CE48     		ldr	r0, .L574+16
 8831              	.LBE1754:
 8832              	.LBE1753:
 352:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8833              		.loc 20 352 49 view .LVU2481
 8834 0496 CF4B     		ldr	r3, .L574+20
 329:Veno-Echo.cpp **** 
 8835              		.loc 20 329 44 view .LVU2482
 8836 0498 F0EE407A 		vmov.f32	s15, s0
 8837              	.LVL575:
 332:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 8838              		.loc 20 332 9 is_stmt 1 view .LVU2483
 8839              	.LBB1756:
 8840              	.LBI1753:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8841              		.loc 10 60 17 view .LVU2484
 8842              	.LBB1755:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8843              		.loc 10 60 37 view .LVU2485
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8844              		.loc 10 60 42 is_stmt 0 view .LVU2486
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 290


 8845 049c C0ED00BA 		vstr.32	s23, [r0]
 8846              	.LVL576:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8847              		.loc 10 60 42 view .LVU2487
 8848              	.LBE1755:
 8849              	.LBE1756:
 333:Veno-Echo.cpp ****         
 8850              		.loc 20 333 9 is_stmt 1 view .LVU2488
 8851              	.LBB1757:
 8852              	.LBI1757:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8853              		.loc 10 60 17 view .LVU2489
 8854              	.LBB1758:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8855              		.loc 10 60 37 view .LVU2490
 8856              	.LBE1758:
 8857              	.LBE1757:
 8858              	.LBB1761:
 8859              	.LBB1736:
 8860              	.LBB1719:
 8861              	.LBB1702:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8862              		.loc 19 174 82 is_stmt 0 view .LVU2491
 8863 04a0 F6EE028A 		vmov.f32	s17, #5.625e-1
 8864              	.LBE1702:
 8865              	.LBE1719:
 8866              	.LBE1736:
 8867              	.LBE1761:
 8868              	.LBB1762:
 8869              	.LBB1759:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8870              		.loc 10 60 42 view .LVU2492
 8871 04a4 CC48     		ldr	r0, .L574+24
 8872              	.LBE1759:
 8873              	.LBE1762:
 352:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8874              		.loc 20 352 49 view .LVU2493
 8875 04a6 1D68     		ldr	r5, [r3]
 8876              	.LBB1763:
 8877              	.LBB1760:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8878              		.loc 10 60 42 view .LVU2494
 8879 04a8 80ED009A 		vstr.32	s18, [r0]
 8880              	.LVL577:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8881              		.loc 10 60 42 view .LVU2495
 8882              	.LBE1760:
 8883              	.LBE1763:
 335:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 8884              		.loc 20 335 9 is_stmt 1 view .LVU2496
 8885              	.LBB1764:
 8886              	.LBI1764:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8887              		.loc 10 60 17 view .LVU2497
 8888              	.LBB1765:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8889              		.loc 10 60 37 view .LVU2498
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 291


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8890              		.loc 10 60 42 is_stmt 0 view .LVU2499
 8891 04ac CB48     		ldr	r0, .L574+28
 8892              	.LBE1765:
 8893              	.LBE1764:
 8894              	.LBB1767:
 8895              	.LBB1737:
 8896              	.LBB1720:
 8897              	.LBB1703:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8898              		.loc 19 174 71 view .LVU2500
 8899 04ae 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8900              		.loc 19 174 46 view .LVU2501
 8901 04b2 9FEDCBAA 		vldr.32	s20, .L574+32
 8902              	.LBE1703:
 8903              	.LBE1720:
 8904              	.LBE1737:
 8905              	.LBE1767:
 8906              	.LBB1768:
 8907              	.LBB1766:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8908              		.loc 10 60 42 view .LVU2502
 8909 04b6 80ED008A 		vstr.32	s16, [r0]
 8910              	.LVL578:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8911              		.loc 10 60 42 view .LVU2503
 8912              	.LBE1766:
 8913              	.LBE1768:
 336:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 8914              		.loc 20 336 9 is_stmt 1 view .LVU2504
 8915              	.LBB1769:
 8916              	.LBI1769:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8917              		.loc 10 60 17 view .LVU2505
 8918              	.LBB1770:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8919              		.loc 10 60 37 view .LVU2506
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8920              		.loc 10 60 42 is_stmt 0 view .LVU2507
 8921 04ba CA48     		ldr	r0, .L574+36
 8922              	.LBE1770:
 8923              	.LBE1769:
 8924              	.LBB1772:
 8925              	.LBB1738:
 8926              	.LBB1721:
 8927              	.LBB1704:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8928              		.loc 19 174 71 view .LVU2508
 8929 04bc 93ED00BA 		vldr.32	s22, [r3]
 8930              	.LBE1704:
 8931              	.LBE1721:
 8932              	.LBE1738:
 8933              	.LBE1772:
 8934              	.LBB1773:
 8935              	.LBB1771:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 292


 8936              		.loc 10 60 42 view .LVU2509
 8937 04c0 80ED008A 		vstr.32	s16, [r0]
 8938              	.LVL579:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8939              		.loc 10 60 42 view .LVU2510
 8940              	.LBE1771:
 8941              	.LBE1773:
 337:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 8942              		.loc 20 337 9 is_stmt 1 view .LVU2511
 8943              	.LBB1774:
 8944              	.LBI1774:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8945              		.loc 10 60 17 view .LVU2512
 8946              	.LBB1775:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8947              		.loc 10 60 37 view .LVU2513
 8948              	.LBE1775:
 8949              	.LBE1774:
 8950              	.LBB1778:
 8951              	.LBB1779:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8952              		.loc 10 60 42 is_stmt 0 view .LVU2514
 8953 04c4 C848     		ldr	r0, .L574+40
 8954              	.LBE1779:
 8955              	.LBE1778:
 8956              	.LBB1782:
 8957              	.LBB1739:
 8958              	.LBB1722:
 8959              	.LBB1705:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8960              		.loc 19 174 46 view .LVU2515
 8961 04c6 2BEE0A0A 		vmul.f32	s0, s22, s20
 8962              	.LVL580:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8963              		.loc 19 174 71 view .LVU2516
 8964 04ca 0493     		str	r3, [sp, #16]
 8965              		.loc 19 175 77 view .LVU2517
 8966 04cc 3AEECBCA 		vsub.f32	s24, s21, s22
 8967              	.LBE1705:
 8968              	.LBE1722:
 8969              	.LBE1739:
 8970              	.LBE1782:
 8971              	.LBB1783:
 8972              	.LBB1780:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8973              		.loc 10 60 42 view .LVU2518
 8974 04d0 80ED008A 		vstr.32	s16, [r0]
 8975              	.LBE1780:
 8976              	.LBE1783:
 345:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8977              		.loc 20 345 27 view .LVU2519
 8978 04d4 C54B     		ldr	r3, .L574+44
 8979              	.LBB1784:
 8980              	.LBB1785:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8981              		.loc 10 60 42 view .LVU2520
 8982 04d6 C648     		ldr	r0, .L574+48
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 293


 8983              	.LBE1785:
 8984              	.LBE1784:
 345:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8985              		.loc 20 345 27 view .LVU2521
 8986 04d8 1B68     		ldr	r3, [r3]	@ float
 8987              	.LBB1788:
 8988              	.LBB1786:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8989              		.loc 10 60 42 view .LVU2522
 8990 04da 80ED008A 		vstr.32	s16, [r0]
 8991              	.LBE1786:
 8992              	.LBE1788:
 8993              	.LBB1789:
 8994              	.LBB1776:
 8995 04de C548     		ldr	r0, .L574+52
 8996              	.LBE1776:
 8997              	.LBE1789:
 8998              	.LBB1790:
 8999              	.LBB1740:
 9000              	.LBB1723:
 9001              	.LBB1706:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9002              		.loc 19 174 103 view .LVU2523
 9003 04e0 DFEDC59A 		vldr.32	s19, .L574+56
 9004              	.LBE1706:
 9005              	.LBE1723:
 9006              	.LBE1740:
 9007              	.LBE1790:
 9008              	.LBB1791:
 9009              	.LBB1777:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9010              		.loc 10 60 42 view .LVU2524
 9011 04e4 C0ED007A 		vstr.32	s15, [r0]
 9012              	.LVL581:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9013              		.loc 10 60 42 view .LVU2525
 9014              	.LBE1777:
 9015              	.LBE1791:
 338:Veno-Echo.cpp **** 
 9016              		.loc 20 338 9 is_stmt 1 view .LVU2526
 9017              	.LBB1792:
 9018              	.LBI1792:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9019              		.loc 10 60 17 view .LVU2527
 9020              	.LBB1793:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9021              		.loc 10 60 37 view .LVU2528
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9022              		.loc 10 60 42 is_stmt 0 view .LVU2529
 9023 04e8 C448     		ldr	r0, .L574+60
 9024              	.LBE1793:
 9025              	.LBE1792:
 9026              	.LBB1795:
 9027              	.LBB1741:
 9028              	.LBB1724:
 9029              	.LBB1707:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 294


 9030              		.loc 19 174 98 view .LVU2530
 9031 04ea 9FEDC59A 		vldr.32	s18, .L574+64
 9032              	.LVL582:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9033              		.loc 19 174 98 view .LVU2531
 9034              	.LBE1707:
 9035              	.LBE1724:
 9036              	.LBE1741:
 9037              	.LBE1795:
 9038              	.LBB1796:
 9039              	.LBB1794:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9040              		.loc 10 60 42 view .LVU2532
 9041 04ee C0ED007A 		vstr.32	s15, [r0]
 9042              	.LVL583:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9043              		.loc 10 60 42 view .LVU2533
 9044              	.LBE1794:
 9045              	.LBE1796:
 340:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 9046              		.loc 20 340 9 is_stmt 1 view .LVU2534
 9047              	.LBB1797:
 9048              	.LBI1778:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9049              		.loc 10 60 17 view .LVU2535
 9050              	.LBB1781:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9051              		.loc 10 60 37 view .LVU2536
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9052              		.loc 10 60 37 is_stmt 0 view .LVU2537
 9053              	.LBE1781:
 9054              	.LBE1797:
 341:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 9055              		.loc 20 341 9 is_stmt 1 view .LVU2538
 9056              	.LBB1798:
 9057              	.LBI1784:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9058              		.loc 10 60 17 view .LVU2539
 9059              	.LBB1787:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9060              		.loc 10 60 37 view .LVU2540
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9061              		.loc 10 60 37 is_stmt 0 view .LVU2541
 9062              	.LBE1787:
 9063              	.LBE1798:
 342:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 9064              		.loc 20 342 9 is_stmt 1 view .LVU2542
 9065              	.LBB1799:
 9066              	.LBI1799:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9067              		.loc 10 60 17 view .LVU2543
 9068              	.LBB1800:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9069              		.loc 10 60 37 view .LVU2544
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9070              		.loc 10 60 42 is_stmt 0 view .LVU2545
 9071 04f2 C448     		ldr	r0, .L574+68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 295


 9072              	.LBE1800:
 9073              	.LBE1799:
 9074              	.LBB1802:
 9075              	.LBB1742:
 9076              	.LBB1725:
 9077              	.LBB1708:
 162:delayline_reverse.h **** 
 9078              		.loc 19 162 23 view .LVU2546
 9079 04f4 D5E90267 		ldrd	r6, r7, [r5, #8]
 9080              	.LBE1708:
 9081              	.LBE1725:
 9082              	.LBE1742:
 9083              	.LBE1802:
 9084              	.LBB1803:
 9085              	.LBB1801:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9086              		.loc 10 60 42 view .LVU2547
 9087 04f8 C0ED007A 		vstr.32	s15, [r0]
 9088              	.LVL584:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9089              		.loc 10 60 42 view .LVU2548
 9090              	.LBE1801:
 9091              	.LBE1803:
 343:Veno-Echo.cpp **** 
 9092              		.loc 20 343 9 is_stmt 1 view .LVU2549
 9093              	.LBB1804:
 9094              	.LBI1804:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9095              		.loc 10 60 17 view .LVU2550
 9096              	.LBB1805:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9097              		.loc 10 60 37 view .LVU2551
 9098              	.LBE1805:
 9099              	.LBE1804:
 9100              	.LBB1808:
 9101              	.LBB1743:
 9102              	.LBB1726:
 9103              	.LBB1709:
 162:delayline_reverse.h **** 
 9104              		.loc 19 162 11 is_stmt 0 view .LVU2552
 9105 04fc 05EB8702 		add	r2, r5, r7, lsl #2
 9106              	.LBE1709:
 9107              	.LBE1726:
 9108              	.LBE1743:
 9109              	.LBE1808:
 9110              	.LBB1809:
 9111              	.LBB1806:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9112              		.loc 10 60 42 view .LVU2553
 9113 0500 C148     		ldr	r0, .L574+72
 9114              	.LBE1806:
 9115              	.LBE1809:
 9116              	.LBB1810:
 9117              	.LBB1744:
 9118              	.LBB1727:
 9119              	.LBB1710:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 296


 9120              		.loc 19 161 11 view .LVU2554
 9121 0502 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 9122              		.loc 19 162 11 view .LVU2555
 9123 0506 D2ED06DA 		vldr.32	s27, [r2, #24]
 9124              	.LBE1710:
 9125              	.LBE1727:
 9126              	.LBE1744:
 9127              	.LBE1810:
 9128              	.LBB1811:
 9129              	.LBB1812:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9130              		.loc 10 60 42 view .LVU2556
 9131 050a C04A     		ldr	r2, .L574+76
 9132              	.LBE1812:
 9133              	.LBE1811:
 9134              	.LBB1814:
 9135              	.LBB1807:
 9136 050c C0ED007A 		vstr.32	s15, [r0]
 9137              	.LVL585:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9138              		.loc 10 60 42 view .LVU2557
 9139              	.LBE1807:
 9140              	.LBE1814:
 345:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9141              		.loc 20 345 9 is_stmt 1 view .LVU2558
 9142              	.LBB1815:
 9143              	.LBI1811:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9144              		.loc 10 60 17 view .LVU2559
 9145              	.LBB1813:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9146              		.loc 10 60 37 view .LVU2560
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9147              		.loc 10 60 42 is_stmt 0 view .LVU2561
 9148 0510 1360     		str	r3, [r2]	@ float
 9149              	.LVL586:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9150              		.loc 10 60 42 view .LVU2562
 9151              	.LBE1813:
 9152              	.LBE1815:
 346:Veno-Echo.cpp **** 
 9153              		.loc 20 346 9 is_stmt 1 view .LVU2563
 9154              	.LBB1816:
 9155              	.LBI1816:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9156              		.loc 10 60 17 view .LVU2564
 9157              	.LBB1817:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9158              		.loc 10 60 37 view .LVU2565
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9159              		.loc 10 60 42 is_stmt 0 view .LVU2566
 9160 0512 BF4A     		ldr	r2, .L574+80
 9161              	.LBE1817:
 9162              	.LBE1816:
 9163              	.LBB1819:
 9164              	.LBB1745:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 297


 9165              	.LBB1728:
 9166              	.LBB1711:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9167              		.loc 19 161 11 view .LVU2567
 9168 0514 91ED06EA 		vldr.32	s28, [r1, #24]
 9169              	.LBE1711:
 9170              	.LBE1728:
 9171              	.LBE1745:
 9172              	.LBE1819:
 9173              	.LBB1820:
 9174              	.LBB1818:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9175              		.loc 10 60 42 view .LVU2568
 9176 0518 1360     		str	r3, [r2]	@ float
 9177              	.LVL587:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9178              		.loc 10 60 42 view .LVU2569
 9179              	.LBE1818:
 9180              	.LBE1820:
 348:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 9181              		.loc 20 348 9 is_stmt 1 view .LVU2570
 9182              	.LBB1821:
 9183              	.LBI1821:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9184              		.loc 10 60 17 view .LVU2571
 9185              	.LBB1822:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9186              		.loc 10 60 37 view .LVU2572
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9187              		.loc 10 60 42 is_stmt 0 view .LVU2573
 9188 051a BE4A     		ldr	r2, .L574+84
 9189 051c 1360     		str	r3, [r2]	@ float
 9190              	.LVL588:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9191              		.loc 10 60 42 view .LVU2574
 9192              	.LBE1822:
 9193              	.LBE1821:
 349:Veno-Echo.cpp **** 
 9194              		.loc 20 349 9 is_stmt 1 view .LVU2575
 9195              	.LBB1823:
 9196              	.LBI1823:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9197              		.loc 10 60 17 view .LVU2576
 9198              	.LBB1824:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9199              		.loc 10 60 37 view .LVU2577
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9200              		.loc 10 60 42 is_stmt 0 view .LVU2578
 9201 051e BE4A     		ldr	r2, .L574+88
 9202 0520 1360     		str	r3, [r2]	@ float
 9203              	.LVL589:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9204              		.loc 10 60 42 view .LVU2579
 9205              	.LBE1824:
 9206              	.LBE1823:
 352:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9207              		.loc 20 352 9 is_stmt 1 view .LVU2580
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 298


 9208              	.LBB1825:
 9209              	.LBI1697:
  79:Veno-Echo.cpp ****     {
 9210              		.loc 20 79 11 view .LVU2581
 9211              	.LBB1746:
  82:Veno-Echo.cpp ****         return read;
 9212              		.loc 20 82 9 view .LVU2582
 9213              	.LBB1729:
 9214              	.LBI1699:
 159:delayline_reverse.h ****     {
 9215              		.loc 19 159 20 view .LVU2583
 9216              	.LBB1712:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9217              		.loc 19 174 46 is_stmt 0 view .LVU2584
 9218 0522 FFF7FEFF 		bl	sinf
 9219              	.LVL590:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9220              		.loc 19 174 46 view .LVU2585
 9221 0526 F0EE40BA 		vmov.f32	s23, s0
 9222              	.LVL591:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9223              		.loc 19 174 103 view .LVU2586
 9224 052a 2BEE290A 		vmul.f32	s0, s22, s19
 9225 052e FFF7FEFF 		bl	sinf
 9226              	.LVL592:
 9227 0532 B0EE408A 		vmov.f32	s16, s0
 9228              	.LVL593:
 9229              		.loc 19 175 46 view .LVU2587
 9230 0536 2CEE0A0A 		vmul.f32	s0, s24, s20
 9231 053a FFF7FEFF 		bl	sinf
 9232              	.LVL594:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9233              		.loc 19 174 98 view .LVU2588
 9234 053e 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9235              		.loc 19 174 82 view .LVU2589
 9236 0542 ABEEA88A 		vfma.f32	s16, s23, s17
 9237              	.LVL595:
 9238              		.loc 19 175 46 view .LVU2590
 9239 0546 F0EE40BA 		vmov.f32	s23, s0
 9240              		.loc 19 175 112 view .LVU2591
 9241 054a 2CEE290A 		vmul.f32	s0, s24, s19
 9242 054e FFF7FEFF 		bl	sinf
 9243              	.LVL596:
 9244              		.loc 19 175 107 view .LVU2592
 9245 0552 60EE097A 		vmul.f32	s15, s0, s18
 9246              	.LBE1712:
 9247              	.LBE1729:
 9248              	.LBE1746:
 9249              	.LBE1825:
 353:Veno-Echo.cpp **** 
 9250              		.loc 20 353 49 view .LVU2593
 9251 0556 B14B     		ldr	r3, .L574+92
 9252              	.LBB1826:
 9253              	.LBB1747:
 9254              	.LBB1730:
 9255              	.LBB1713:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 299


 9256              		.loc 19 175 91 view .LVU2594
 9257 0558 EBEEA87A 		vfma.f32	s15, s23, s17
 9258              	.LVL597:
 9259              		.loc 19 175 91 view .LVU2595
 9260              	.LBE1713:
 9261              	.LBE1730:
 9262              	.LBE1747:
 9263              	.LBE1826:
 353:Veno-Echo.cpp **** 
 9264              		.loc 20 353 49 view .LVU2596
 9265 055c 1C68     		ldr	r4, [r3]
 9266              	.LBB1827:
 9267              	.LBB1748:
 9268              	.LBB1731:
 9269              	.LBB1714:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9270              		.loc 19 174 9 view .LVU2597
 9271 055e 38EE088A 		vadd.f32	s16, s16, s16
 9272              	.LVL598:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9273              		.loc 19 174 9 view .LVU2598
 9274              	.LBE1714:
 9275              	.LBE1731:
 9276              	.LBE1748:
 9277              	.LBE1827:
 9278              	.LBB1828:
 9279              	.LBB1829:
 9280              	.LBB1830:
 9281              	.LBB1831:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9282              		.loc 19 174 71 view .LVU2599
 9283 0562 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 9284              		.loc 19 162 11 view .LVU2600
 9285 0566 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9286              		.loc 19 174 71 view .LVU2601
 9287 056a 91ED00CA 		vldr.32	s24, [r1]
 9288              	.LBE1831:
 9289              	.LBE1830:
 9290              	.LBE1829:
 9291              	.LBE1828:
 9292              	.LBB1862:
 9293              	.LBB1749:
 9294              	.LBB1732:
 9295              	.LBB1715:
 9296              		.loc 19 175 9 view .LVU2602
 9297 056e 77EEA77A 		vadd.f32	s15, s15, s15
 9298              	.LVL599:
 9299              		.loc 19 175 9 view .LVU2603
 9300              	.LBE1715:
 9301              	.LBE1732:
 9302              	.LBE1749:
 9303              	.LBE1862:
 9304              	.LBB1863:
 9305              	.LBB1852:
 9306              	.LBB1842:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 300


 9307              	.LBB1832:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9308              		.loc 19 161 11 view .LVU2604
 9309 0572 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9310              		.loc 19 162 11 view .LVU2605
 9311 0576 04EB8303 		add	r3, r4, r3, lsl #2
 9312              		.loc 19 175 77 view .LVU2606
 9313 057a 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9314              		.loc 19 174 46 view .LVU2607
 9315 057e 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9316              		.loc 19 161 11 view .LVU2608
 9317 0582 92ED06DA 		vldr.32	s26, [r2, #24]
 9318              	.LBE1832:
 9319              	.LBE1842:
 9320              	.LBE1852:
 9321              	.LBE1863:
 9322              	.LBB1864:
 9323              	.LBB1750:
 9324              	.LBB1733:
 9325              	.LBB1716:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9326              		.loc 19 177 44 view .LVU2609
 9327 0586 67EE8E7A 		vmul.f32	s15, s15, s28
 9328              	.LVL600:
 9329              		.loc 19 177 44 view .LVU2610
 9330              	.LBE1716:
 9331              	.LBE1733:
 9332              	.LBE1750:
 9333              	.LBE1864:
 9334              	.LBB1865:
 9335              	.LBB1853:
 9336              	.LBB1843:
 9337              	.LBB1833:
 162:delayline_reverse.h **** 
 9338              		.loc 19 162 11 view .LVU2611
 9339 058a D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9340              		.loc 19 174 71 view .LVU2612
 9341 058e 0391     		str	r1, [sp, #12]
 9342              	.LBE1833:
 9343              	.LBE1843:
 9344              	.LBE1853:
 9345              	.LBE1865:
 9346              	.LBB1866:
 9347              	.LBB1751:
 9348              	.LBB1734:
 9349              	.LBB1717:
 9350              		.loc 19 177 54 view .LVU2613
 9351 0590 EDEE887A 		vfma.f32	s15, s27, s16
 9352              	.LVL601:
 9353              		.loc 19 177 54 view .LVU2614
 9354              	.LBE1717:
 9355              	.LBE1734:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 301


  83:Veno-Echo.cpp ****     }
 9356              		.loc 20 83 9 is_stmt 1 view .LVU2615
  83:Veno-Echo.cpp ****     }
 9357              		.loc 20 83 9 is_stmt 0 view .LVU2616
 9358              	.LBE1751:
 9359              	.LBE1866:
 352:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9360              		.loc 20 352 50 view .LVU2617
 9361 0594 CDED067A 		vstr.32	s15, [sp, #24]
 353:Veno-Echo.cpp **** 
 9362              		.loc 20 353 9 is_stmt 1 view .LVU2618
 9363              	.LVL602:
 9364              	.LBB1867:
 9365              	.LBI1828:
  79:Veno-Echo.cpp ****     {
 9366              		.loc 20 79 11 view .LVU2619
 9367              	.LBB1854:
  82:Veno-Echo.cpp ****         return read;
 9368              		.loc 20 82 9 view .LVU2620
 9369              	.LBB1844:
 9370              	.LBI1830:
 159:delayline_reverse.h ****     {
 9371              		.loc 19 159 20 view .LVU2621
 9372              	.LBB1834:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9373              		.loc 19 174 46 is_stmt 0 view .LVU2622
 9374 0598 FFF7FEFF 		bl	sinf
 9375              	.LVL603:
 9376 059c F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9377              		.loc 19 174 103 view .LVU2623
 9378 05a0 2CEE290A 		vmul.f32	s0, s24, s19
 9379 05a4 FFF7FEFF 		bl	sinf
 9380              	.LVL604:
 9381 05a8 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 9382              		.loc 19 175 46 view .LVU2624
 9383 05ac 2AEE8A0A 		vmul.f32	s0, s21, s20
 9384 05b0 FFF7FEFF 		bl	sinf
 9385              	.LVL605:
 9386 05b4 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9387              		.loc 19 175 112 view .LVU2625
 9388 05b8 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9389              		.loc 19 174 98 view .LVU2626
 9390 05bc 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9391              		.loc 19 175 46 view .LVU2627
 9392 05c0 F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9393              		.loc 19 175 112 view .LVU2628
 9394 05c4 FFF7FEFF 		bl	sinf
 9395              	.LVL606:
 9396              	.LBE1834:
 9397              	.LBE1844:
 9398              	.LBE1854:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 302


 9399              	.LBE1867:
 9400              	.LBB1868:
 9401              	.LBB1869:
 9402              	.LBB1870:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9403              		.loc 19 98 38 view .LVU2629
 9404 05c8 9548     		ldr	r0, .L574+96
 9405              	.LBE1870:
 9406              	.LBE1869:
 9407              	.LBE1868:
 9408              	.LBB1893:
 9409              	.LBB1855:
 9410              	.LBB1845:
 9411              	.LBB1835:
 175:delayline_reverse.h **** 
 9412              		.loc 19 175 107 view .LVU2630
 9413 05ca 60EE097A 		vmul.f32	s15, s0, s18
 9414              	.LBE1835:
 9415              	.LBE1845:
 9416              	.LBE1855:
 9417              	.LBE1893:
 9418              	.LBB1894:
 9419              	.LBB1882:
 9420              	.LBB1871:
  92:delayline_reverse.h ****         
 9421              		.loc 19 92 57 view .LVU2631
 9422 05ce 954B     		ldr	r3, .L574+100
 9423              	.LBE1871:
 9424              	.LBE1882:
 9425              	.LBE1894:
 9426              	.LBB1895:
 9427              	.LBB1856:
 9428              	.LBB1846:
 9429              	.LBB1836:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9430              		.loc 19 174 82 view .LVU2632
 9431 05d0 ABEEA88A 		vfma.f32	s16, s23, s17
 9432              	.LVL607:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9433              		.loc 19 174 82 view .LVU2633
 9434              	.LBE1836:
 9435              	.LBE1846:
 9436              	.LBE1856:
 9437              	.LBE1895:
 9438              	.LBB1896:
 9439              	.LBB1883:
 9440              	.LBB1872:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9441              		.loc 19 98 38 view .LVU2634
 9442 05d4 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9443              		.loc 19 90 15 view .LVU2635
 9444 05d6 D5F804E0 		ldr	lr, [r5, #4]
 9445              	.LBE1872:
 9446              	.LBE1883:
 9447              	.LBE1896:
 9448              	.LBB1897:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 303


 9449              	.LBB1857:
 9450              	.LBB1847:
 9451              	.LBB1837:
 175:delayline_reverse.h **** 
 9452              		.loc 19 175 91 view .LVU2636
 9453 05da E9EEA87A 		vfma.f32	s15, s19, s17
 9454              	.LVL608:
 175:delayline_reverse.h **** 
 9455              		.loc 19 175 91 view .LVU2637
 9456              	.LBE1837:
 9457              	.LBE1847:
 9458              	.LBE1857:
 9459              	.LBE1897:
 9460              	.LBB1898:
 9461              	.LBB1884:
 9462              	.LBB1873:
  99:delayline_reverse.h ****  
 9463              		.loc 19 99 38 view .LVU2638
 9464 05de 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9465              		.loc 19 98 50 view .LVU2639
 9466 05e0 A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9467              		.loc 19 92 57 view .LVU2640
 9468 05e4 DFF850C2 		ldr	ip, .L574+120
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9469              		.loc 19 90 9 view .LVU2641
 9470 05e8 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9471              		.loc 19 98 50 view .LVU2642
 9472 05ec 890C     		lsrs	r1, r1, #18
 9473              	.LBE1873:
 9474              	.LBE1884:
 9475              	.LBE1898:
 9476              	.LBB1899:
 9477              	.LBB1858:
 9478              	.LBB1848:
 9479              	.LBB1838:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9480              		.loc 19 174 9 view .LVU2643
 9481 05ee 38EE088A 		vadd.f32	s16, s16, s16
 9482              	.LVL609:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9483              		.loc 19 174 9 view .LVU2644
 9484              	.LBE1838:
 9485              	.LBE1848:
 9486              	.LBE1858:
 9487              	.LBE1899:
 9488              	.LBB1900:
 9489              	.LBB1885:
 9490              	.LBB1874:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9491              		.loc 19 98 50 view .LVU2645
 9492 05f2 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9493              		.loc 19 92 45 view .LVU2646
 9494 05f6 8C4E     		ldr	r6, .L574+104
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 304


 9495              	.LBE1874:
 9496              	.LBE1885:
 9497              	.LBE1900:
 9498              	.LBB1901:
 9499              	.LBB1859:
 9500              	.LBB1849:
 9501              	.LBB1839:
 175:delayline_reverse.h **** 
 9502              		.loc 19 175 9 view .LVU2647
 9503 05f8 37EEA70A 		vadd.f32	s0, s15, s15
 9504              	.LVL610:
 175:delayline_reverse.h **** 
 9505              		.loc 19 175 9 view .LVU2648
 9506              	.LBE1839:
 9507              	.LBE1849:
 9508              	.LBE1859:
 9509              	.LBE1901:
 356:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9510              		.loc 20 356 26 view .LVU2649
 9511 05fc DBED007A 		vldr.32	s15, [fp]
 9512              	.LBB1902:
 9513              	.LBB1886:
 9514              	.LBB1875:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9515              		.loc 19 98 50 view .LVU2650
 9516 0600 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9517              		.loc 19 92 45 view .LVU2651
 9518 0602 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 9519              		.loc 19 99 50 view .LVU2652
 9520 0604 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 9521              		.loc 19 92 57 view .LVU2653
 9522 0608 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9523              		.loc 19 98 9 view .LVU2654
 9524 060c 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9525              		.loc 19 99 50 view .LVU2655
 9526 060e 4FEA9E4E 		lsr	lr, lr, #18
 9527              	.LBE1875:
 9528              	.LBE1886:
 9529              	.LBE1902:
 9530              	.LBB1903:
 9531              	.LBB1860:
 9532              	.LBB1850:
 9533              	.LBB1840:
 9534              		.loc 19 177 44 view .LVU2656
 9535 0612 20EE0D0A 		vmul.f32	s0, s0, s26
 9536              	.LVL611:
 9537              		.loc 19 177 44 view .LVU2657
 9538              	.LBE1840:
 9539              	.LBE1850:
 9540              	.LBE1860:
 9541              	.LBE1903:
 9542              	.LBB1904:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 305


 9543              	.LBB1887:
 9544              	.LBB1876:
  92:delayline_reverse.h ****         
 9545              		.loc 19 92 57 view .LVU2658
 9546 0616 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9547              		.loc 19 99 50 view .LVU2659
 9548 0618 0CFB1E00 		mls	r0, ip, lr, r0
 9549              	.LBE1876:
 9550              	.LBE1887:
 9551              	.LBE1904:
 9552              	.LBB1905:
 9553              	.LBB1861:
 9554              	.LBB1851:
 9555              	.LBB1841:
 9556              		.loc 19 177 54 view .LVU2660
 9557 061c ACEE880A 		vfma.f32	s0, s25, s16
 9558              	.LVL612:
 9559              		.loc 19 177 54 view .LVU2661
 9560              	.LBE1841:
 9561              	.LBE1851:
  83:Veno-Echo.cpp ****     }
 9562              		.loc 20 83 9 is_stmt 1 view .LVU2662
  83:Veno-Echo.cpp ****     }
 9563              		.loc 20 83 9 is_stmt 0 view .LVU2663
 9564              	.LBE1861:
 9565              	.LBE1905:
 9566              	.LBB1906:
 9567              	.LBB1888:
 9568              	.LBB1877:
  92:delayline_reverse.h ****         
 9569              		.loc 19 92 57 view .LVU2664
 9570 0620 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 9571              		.loc 19 95 43 view .LVU2665
 9572 0624 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9573              		.loc 19 90 9 view .LVU2666
 9574 0628 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9575              		.loc 19 95 43 view .LVU2667
 9576 062c 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9577              		.loc 19 101 36 view .LVU2668
 9578 062e DFF804A2 		ldr	r10, .L574+116
  95:delayline_reverse.h **** 
 9579              		.loc 19 95 43 view .LVU2669
 9580 0632 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9581              		.loc 19 101 36 view .LVU2670
 9582 0634 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9583              		.loc 19 101 45 view .LVU2671
 9584 0638 07F1FF3A 		add	r10, r7, #-1
 9585              	.LBE1877:
 9586              	.LBE1888:
 9587              	.LBE1906:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 306


 353:Veno-Echo.cpp **** 
 9588              		.loc 20 353 50 view .LVU2672
 9589 063c 8DED070A 		vstr.32	s0, [sp, #28]
 356:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9590              		.loc 20 356 9 is_stmt 1 view .LVU2673
 9591              	.LVL613:
 9592              	.LBB1907:
 9593              	.LBI1868:
  92:Veno-Echo.cpp ****     {
 9594              		.loc 20 92 10 view .LVU2674
  92:Veno-Echo.cpp ****     {
 9595              		.loc 20 92 10 is_stmt 0 view .LVU2675
 9596              	.LBE1907:
 9597              	.LBE1941:
 9598              	.LBE1566:
  94:Veno-Echo.cpp ****     }
 9599              		.loc 20 94 9 is_stmt 1 view .LVU2676
 9600              	.LBB1953:
 9601              	.LBB1942:
 9602              	.LBB1908:
 9603              	.LBB1889:
 9604              	.LBI1869:
  88:delayline_reverse.h ****     {
 9605              		.loc 19 88 17 view .LVU2677
 9606              	.LBB1878:
  99:delayline_reverse.h ****  
 9607              		.loc 19 99 9 is_stmt 0 view .LVU2678
 9608 0640 C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9609              		.loc 19 95 54 view .LVU2679
 9610 0644 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9611              		.loc 19 101 45 view .LVU2680
 9612 0648 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 9613              		.loc 19 95 54 view .LVU2681
 9614 064c 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 9615              		.loc 19 92 9 view .LVU2682
 9616 0650 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9617              		.loc 19 101 9 view .LVU2683
 9618 0652 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9619              		.loc 19 95 9 view .LVU2684
 9620 0654 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9621              		.loc 19 101 9 view .LVU2685
 9622 0656 40F28B80 		bls	.L471
 103:delayline_reverse.h ****             {
 9623              		.loc 19 103 17 view .LVU2686
 9624 065a 7449     		ldr	r1, .L574+108
 103:delayline_reverse.h ****             {
 9625              		.loc 19 103 13 view .LVU2687
 9626 065c 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9627              		.loc 19 103 17 view .LVU2688
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 307


 9628 065e 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9629              		.loc 19 103 13 view .LVU2689
 9630 0660 0028     		cmp	r0, #0
 9631 0662 40F08A80 		bne	.L562
 107:delayline_reverse.h ****                 {
 9632              		.loc 19 107 21 view .LVU2690
 9633 0666 7248     		ldr	r0, .L574+112
 105:delayline_reverse.h ****                 
 9634              		.loc 19 105 17 view .LVU2691
 9635 0668 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9636              		.loc 19 110 45 view .LVU2692
 9637 066a 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9638              		.loc 19 107 17 view .LVU2693
 9639 066c 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9640              		.loc 19 107 21 view .LVU2694
 9641 066e 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9642              		.loc 19 105 17 view .LVU2695
 9643 0670 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9644              		.loc 19 107 17 view .LVU2696
 9645 0672 002E     		cmp	r6, #0
 9646 0674 40F05582 		bne	.L473
 110:delayline_reverse.h ****                 }
 9647              		.loc 19 110 21 view .LVU2697
 9648 0678 EB60     		str	r3, [r5, #12]
 9649              	.L474:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9650              		.loc 19 130 45 view .LVU2698
 9651 067a 07EE90EA 		vmov	s15, lr	@ int
 9652              	.LVL614:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9653              		.loc 19 130 45 view .LVU2699
 9654 067e B7EE007A 		vmov.f32	s14, #1.0e+0
 9655 0682 F8EE676A 		vcvt.f32.u32	s13, s15
 9656 0686 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9657              		.loc 19 130 37 view .LVU2700
 9658 068a 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9659              		.loc 19 131 17 view .LVU2701
 9660 068e B4EEC7BA 		vcmpe.f32	s22, s14
 9661 0692 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9662 0696 40F33082 		ble	.L563
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9663              		.loc 19 133 21 view .LVU2702
 9664 069a 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9665              		.loc 19 134 21 view .LVU2703
 9666 069c 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9667              		.loc 19 133 21 view .LVU2704
 9668 069e 83ED007A 		vstr.32	s14, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 308


 135:delayline_reverse.h ****                 }
 9669              		.loc 19 135 21 view .LVU2705
 9670 06a2 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9671              		.loc 19 134 21 view .LVU2706
 9672 06a4 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9673              		.loc 19 135 21 view .LVU2707
 9674 06a6 0370     		strb	r3, [r0]
 9675              	.LVL615:
 9676              	.L477:
 135:delayline_reverse.h ****                 }
 9677              		.loc 19 135 21 view .LVU2708
 9678              	.LBE1878:
 9679              	.LBE1889:
 9680              	.LBE1908:
 357:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9681              		.loc 20 357 9 is_stmt 1 view .LVU2709
 9682              	.LBB1909:
 9683              	.LBB1575:
 9684              	.LBB1571:
  95:delayline_reverse.h **** 
 9685              		.loc 19 95 45 is_stmt 0 view .LVU2710
 9686 06a8 2169     		ldr	r1, [r4, #16]
 9687 06aa 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 9688              		.loc 19 95 43 view .LVU2711
 9689 06ae 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9690              		.loc 19 90 15 view .LVU2712
 9691 06b0 6568     		ldr	r5, [r4, #4]
 9692 06b2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 9693              		.loc 19 95 43 view .LVU2713
 9694 06b6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 9695              		.loc 19 92 45 view .LVU2714
 9696 06b8 5B4F     		ldr	r7, .L574+104
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9697              		.loc 19 90 9 view .LVU2715
 9698 06ba 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9699              		.loc 19 98 38 view .LVU2716
 9700 06be 584B     		ldr	r3, .L574+96
  95:delayline_reverse.h **** 
 9701              		.loc 19 95 43 view .LVU2717
 9702 06c0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 9703              		.loc 19 92 45 view .LVU2718
 9704 06c2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 9705              		.loc 19 101 45 view .LVU2719
 9706 06c4 01F1FF3C 		add	ip, r1, #-1
 9707              	.LBE1571:
 9708              	.LBE1575:
 9709              	.LBE1909:
 357:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 309


 9710              		.loc 20 357 26 view .LVU2720
 9711 06c8 DBED017A 		vldr.32	s15, [fp, #4]
 9712              	.LVL616:
 9713              	.LBB1910:
 9714              	.LBI1568:
  92:Veno-Echo.cpp ****     {
 9715              		.loc 20 92 10 is_stmt 1 view .LVU2721
  92:Veno-Echo.cpp ****     {
 9716              		.loc 20 92 10 is_stmt 0 view .LVU2722
 9717              	.LBE1910:
 9718              	.LBE1942:
 9719              	.LBE1953:
  94:Veno-Echo.cpp ****     }
 9720              		.loc 20 94 9 is_stmt 1 view .LVU2723
 9721              	.LBB1954:
 9722              	.LBB1943:
 9723              	.LBB1911:
 9724              	.LBB1576:
 9725              	.LBI1569:
  88:delayline_reverse.h ****     {
 9726              		.loc 19 88 17 view .LVU2724
 9727              	.LBB1572:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9728              		.loc 19 98 38 is_stmt 0 view .LVU2725
 9729 06cc D4E90205 		ldrd	r0, r5, [r4, #8]
 9730 06d0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 9731              		.loc 19 99 38 view .LVU2726
 9732 06d4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 9733              		.loc 19 92 57 view .LVU2727
 9734 06d6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 9735              		.loc 19 95 54 view .LVU2728
 9736 06da B2FBF1F0 		udiv	r0, r2, r1
 9737 06de 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 9738              		.loc 19 101 36 view .LVU2729
 9739 06e2 5449     		ldr	r1, .L574+116
  92:delayline_reverse.h ****         
 9740              		.loc 19 92 57 view .LVU2730
 9741 06e4 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 9742              		.loc 19 101 36 view .LVU2731
 9743 06e8 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 9744              		.loc 19 92 57 view .LVU2732
 9745 06ea A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9746              		.loc 19 90 9 view .LVU2733
 9747 06ee CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 9748              		.loc 19 101 36 view .LVU2734
 9749 06f2 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9750              		.loc 19 92 57 view .LVU2735
 9751 06f4 A3FB0762 		umull	r6, r2, r3, r7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 310


 9752 06f8 DFF83CE1 		ldr	lr, .L574+120
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9753              		.loc 19 98 50 view .LVU2736
 9754 06fc A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 9755              		.loc 19 99 50 view .LVU2737
 9756 0700 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 9757              		.loc 19 101 45 view .LVU2738
 9758 0704 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 9759              		.loc 19 92 57 view .LVU2739
 9760 0706 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 9761              		.loc 19 95 9 view .LVU2740
 9762 0708 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9763              		.loc 19 98 50 view .LVU2741
 9764 070a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 9765              		.loc 19 101 45 view .LVU2742
 9766 070c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 9767              		.loc 19 99 50 view .LVU2743
 9768 0710 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 9769              		.loc 19 92 57 view .LVU2744
 9770 0712 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9771              		.loc 19 98 50 view .LVU2745
 9772 0716 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 9773              		.loc 19 101 9 view .LVU2746
 9774 071a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 9775              		.loc 19 99 50 view .LVU2747
 9776 071c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9777              		.loc 19 98 9 view .LVU2748
 9778 0720 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 9779              		.loc 19 99 9 view .LVU2749
 9780 0724 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 9781              		.loc 19 101 9 view .LVU2750
 9782 0726 3FF6B5AC 		bhi	.L568
 126:delayline_reverse.h ****         {
 9783              		.loc 19 126 12 view .LVU2751
 9784 072a 404B     		ldr	r3, .L574+108
 126:delayline_reverse.h ****         {
 9785              		.loc 19 126 9 view .LVU2752
 9786 072c E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 9787              		.loc 19 126 12 view .LVU2753
 9788 072e 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 9789              		.loc 19 126 9 view .LVU2754
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 311


 9790 0730 002A     		cmp	r2, #0
 9791 0732 3FF4D9AC 		beq	.L487
 9792              	.L564:
 126:delayline_reverse.h ****         {
 9793              		.loc 19 126 9 view .LVU2755
 9794 0736 3E4A     		ldr	r2, .L574+112
 9795 0738 A018     		adds	r0, r4, r2
 9796 073a A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 9797              		.loc 19 128 13 view .LVU2756
 9798 073c 002A     		cmp	r2, #0
 9799 073e 3FF4B9AC 		beq	.L484
 9800              	.L485:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9801              		.loc 19 141 45 view .LVU2757
 9802 0742 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9803              	.LVL617:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9804              		.loc 19 141 45 view .LVU2758
 9805 0746 B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9806              		.loc 19 141 37 view .LVU2759
 9807 074a 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 9808              		.loc 19 142 17 view .LVU2760
 9809 074c 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9810              		.loc 19 141 45 view .LVU2761
 9811 074e F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9812              		.loc 19 141 37 view .LVU2762
 9813 0752 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9814              		.loc 19 141 45 view .LVU2763
 9815 0756 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9816              		.loc 19 141 37 view .LVU2764
 9817 075a 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 9818              		.loc 19 142 17 view .LVU2765
 9819 075e F5EEC07A 		vcmpe.f32	s15, #0
 9820 0762 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9821 0766 00F1E981 		bmi	.L490
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9822              		.loc 19 141 17 view .LVU2766
 9823 076a C1ED007A 		vstr.32	s15, [r1]
 9824 076e BBE4     		b	.L487
 9825              	.LVL618:
 9826              	.L471:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9827              		.loc 19 141 17 view .LVU2767
 9828              	.LBE1572:
 9829              	.LBE1576:
 9830              	.LBE1911:
 9831              	.LBB1912:
 9832              	.LBB1890:
 9833              	.LBB1879:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 312


 126:delayline_reverse.h ****         {
 9834              		.loc 19 126 12 view .LVU2768
 9835 0770 2E4A     		ldr	r2, .L574+108
 126:delayline_reverse.h ****         {
 9836              		.loc 19 126 9 view .LVU2769
 9837 0772 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 9838              		.loc 19 126 12 view .LVU2770
 9839 0774 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 9840              		.loc 19 126 9 view .LVU2771
 9841 0776 002B     		cmp	r3, #0
 9842 0778 96D0     		beq	.L477
 9843              	.L562:
 126:delayline_reverse.h ****         {
 9844              		.loc 19 126 9 view .LVU2772
 9845 077a 2D4B     		ldr	r3, .L574+112
 9846 077c E818     		adds	r0, r5, r3
 9847 077e EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 9848              		.loc 19 128 13 view .LVU2773
 9849 0780 002B     		cmp	r3, #0
 9850 0782 3FF47AAF 		beq	.L474
 9851              	.L475:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9852              		.loc 19 141 45 view .LVU2774
 9853 0786 07EE90EA 		vmov	s15, lr	@ int
 9854              	.LVL619:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9855              		.loc 19 141 45 view .LVU2775
 9856 078a F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 9857              		.loc 19 142 17 view .LVU2776
 9858 078e 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9859              		.loc 19 141 45 view .LVU2777
 9860 0790 B8EE677A 		vcvt.f32.u32	s14, s15
 9861 0794 C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9862              		.loc 19 141 37 view .LVU2778
 9863 0798 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 9864              		.loc 19 142 17 view .LVU2779
 9865 079c B5EEC0BA 		vcmpe.f32	s22, #0
 9866 07a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9867 07a4 40F1A981 		bpl	.L563
 145:delayline_reverse.h ****                     playinghead_ = false;
 9868              		.loc 19 145 21 view .LVU2780
 9869 07a8 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9870              		.loc 19 144 21 view .LVU2781
 9871 07aa 049D     		ldr	r5, [sp, #16]
 9872              	.LVL620:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9873              		.loc 19 144 21 view .LVU2782
 9874 07ac 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 313


 9875              		.loc 19 145 21 view .LVU2783
 9876 07ae 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 9877              		.loc 19 146 21 view .LVU2784
 9878 07b0 0170     		strb	r1, [r0]
 9879 07b2 79E7     		b	.L477
 9880              	.LVL621:
 9881              	.L522:
 146:delayline_reverse.h ****                 }
 9882              		.loc 19 146 21 view .LVU2785
 9883              	.LBE1879:
 9884              	.LBE1890:
 9885              	.LBE1912:
 539:Veno-Echo.cpp ****             out[i+1] = mixR;
 9886              		.loc 20 539 13 is_stmt 1 view .LVU2786
 539:Veno-Echo.cpp ****             out[i+1] = mixR;
 9887              		.loc 20 539 20 is_stmt 0 view .LVU2787
 9888 07b4 009B     		ldr	r3, [sp]
 9889 07b6 C3ED007A 		vstr.32	s15, [r3]
 540:Veno-Echo.cpp ****         }
 9890              		.loc 20 540 13 is_stmt 1 view .LVU2788
 540:Veno-Echo.cpp ****         }
 9891              		.loc 20 540 22 is_stmt 0 view .LVU2789
 9892 07ba 83ED010A 		vstr.32	s0, [r3, #4]
 9893 07be 02E6     		b	.L523
 9894              	.L575:
 9895              		.align	2
 9896              	.L574:
 9897 07c0 00000000 		.word	.LANCHOR91
 9898 07c4 00000000 		.word	.LANCHOR101
 9899 07c8 00000000 		.word	.LANCHOR90
 9900 07cc 00000000 		.word	.LANCHOR100
 9901 07d0 00000000 		.word	.LANCHOR102
 9902 07d4 00000000 		.word	.LANCHOR2
 9903 07d8 00000000 		.word	.LANCHOR103
 9904 07dc 00000000 		.word	.LANCHOR113
 9905 07e0 DB0FC93F 		.word	1070141403
 9906 07e4 00000000 		.word	.LANCHOR114
 9907 07e8 00000000 		.word	.LANCHOR117
 9908 07ec 00000000 		.word	.LANCHOR79
 9909 07f0 00000000 		.word	.LANCHOR118
 9910 07f4 00000000 		.word	.LANCHOR115
 9911 07f8 E4CB9640 		.word	1083624420
 9912 07fc 00000000 		.word	.LANCHOR116
 9913 0800 0000803D 		.word	1031798784
 9914 0804 00000000 		.word	.LANCHOR119
 9915 0808 00000000 		.word	.LANCHOR120
 9916 080c 00000000 		.word	.LANCHOR121
 9917 0810 00000000 		.word	.LANCHOR122
 9918 0814 00000000 		.word	.LANCHOR123
 9919 0818 00000000 		.word	.LANCHOR124
 9920 081c 00000000 		.word	.LANCHOR3
 9921 0820 BF270900 		.word	599999
 9922 0824 851DD96F 		.word	1876499845
 9923 0828 C1270900 		.word	600001
 9924 082c 249F2400 		.word	2400036
 9925 0830 1C9F2400 		.word	2400028
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 314


 9926 0834 189F2400 		.word	2400024
 9927 0838 C0270900 		.word	600000
 9928              	.LVL622:
 9929              	.L559:
 520:Veno-Echo.cpp ****         {
 9930              		.loc 20 520 14 is_stmt 1 view .LVU2790
 9931 083c 40F35481 		ble	.L560
 522:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9932              		.loc 20 522 13 view .LVU2791
 522:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9933              		.loc 20 522 24 is_stmt 0 view .LVU2792
 9934 0840 F7EE006A 		vmov.f32	s13, #1.0e+0
 522:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9935              		.loc 20 522 18 view .LVU2793
 9936 0844 DBED005A 		vldr.32	s11, [fp]
 523:Veno-Echo.cpp ****         }
 9937              		.loc 20 523 18 view .LVU2794
 9938 0848 9BED016A 		vldr.32	s12, [fp, #4]
 522:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9939              		.loc 20 522 24 view .LVU2795
 9940 084c 36EEC77A 		vsub.f32	s14, s13, s14
 522:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9941              		.loc 20 522 33 view .LVU2796
 9942 0850 37EE077A 		vadd.f32	s14, s14, s14
 522:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9943              		.loc 20 522 18 view .LVU2797
 9944 0854 E7EE257A 		vfma.f32	s15, s14, s11
 9945              	.LVL623:
 523:Veno-Echo.cpp ****         }
 9946              		.loc 20 523 13 is_stmt 1 view .LVU2798
 523:Veno-Echo.cpp ****         }
 9947              		.loc 20 523 18 is_stmt 0 view .LVU2799
 9948 0858 A7EE060A 		vfma.f32	s0, s14, s12
 9949              	.LVL624:
 523:Veno-Echo.cpp ****         }
 9950              		.loc 20 523 18 view .LVU2800
 9951 085c AAE5     		b	.L519
 9952              	.LVL625:
 9953              	.L538:
 9954              	.LBB1913:
 474:Veno-Echo.cpp **** {
 9955              		.loc 20 474 1 view .LVU2801
 9956 085e CF4B     		ldr	r3, .L576
 9957              	.LBE1913:
 9958              	.LBB1914:
 9959              	.LBB1671:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9960              		.loc 20 1816 19 view .LVU2802
 9961 0860 B0EE470A 		vmov.f32	s0, s14
 9962              	.LVL626:
1822:Veno-Echo.cpp **** }
 9963              		.loc 20 1822 5 is_stmt 1 view .LVU2803
1822:Veno-Echo.cpp **** }
 9964              		.loc 20 1822 5 is_stmt 0 view .LVU2804
 9965              	.LBE1671:
 9966              	.LBE1914:
 9967              	.LBB1915:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 315


 474:Veno-Echo.cpp **** {
 9968              		.loc 20 474 1 view .LVU2805
 9969 0864 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9970              	.LBE1915:
 472:Veno-Echo.cpp **** 
 9971              		.loc 20 472 27 view .LVU2806
 9972 0866 8DED0B0A 		vstr.32	s0, [sp, #44]
 474:Veno-Echo.cpp **** {
 9973              		.loc 20 474 1 is_stmt 1 view .LVU2807
 9974              	.LBB1916:
 9975 086a 002B     		cmp	r3, #0
 9976 086c 3FF489AD 		beq	.L513
 9977              	.L567:
 9978              	.LBB1674:
 480:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9979              		.loc 20 480 9 view .LVU2808
 480:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9980              		.loc 20 480 27 is_stmt 0 view .LVU2809
 9981 0870 9FEDCB8A 		vldr.32	s16, .L576+4
 9982              	.LVL627:
 480:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9983              		.loc 20 480 27 view .LVU2810
 9984 0874 CB4D     		ldr	r5, .L576+8
 9985 0876 27EE880A 		vmul.f32	s0, s15, s16
 481:Veno-Echo.cpp **** 
 9986              		.loc 20 481 27 view .LVU2811
 9987 087a CB4C     		ldr	r4, .L576+12
 480:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9988              		.loc 20 480 27 view .LVU2812
 9989 087c 2846     		mov	r0, r5
 9990 087e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9991              	.LVL628:
 481:Veno-Echo.cpp **** 
 9992              		.loc 20 481 9 is_stmt 1 view .LVU2813
 481:Veno-Echo.cpp **** 
 9993              		.loc 20 481 27 is_stmt 0 view .LVU2814
 9994 0882 9DED0B0A 		vldr.32	s0, [sp, #44]
 9995 0886 2046     		mov	r0, r4
 9996 0888 20EE080A 		vmul.f32	s0, s0, s16
 9997 088c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9998              	.LVL629:
 484:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9999              		.loc 20 484 9 is_stmt 1 view .LVU2815
 484:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10000              		.loc 20 484 9 is_stmt 0 view .LVU2816
 10001              	.LBE1674:
 10002              	.LBE1916:
 10003              	.LBE1943:
 10004              	.LBE1954:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 316


  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10005              		.loc 9 52 26 is_stmt 1 view .LVU2817
 10006              	.LBB1955:
 10007              	.LBB1944:
 10008              	.LBB1917:
 10009              	.LBB1689:
 484:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10010              		.loc 20 484 50 is_stmt 0 view .LVU2818
 10011 0890 F2EE046A 		vmov.f32	s13, #1.0e+1
 10012 0894 95ED0C7A 		vldr.32	s14, [r5, #48]
 488:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10013              		.loc 20 488 59 view .LVU2819
 10014 0898 0AA9     		add	r1, sp, #40
 485:Veno-Echo.cpp ****         
 10015              		.loc 20 485 50 view .LVU2820
 10016 089a D4ED0C7A 		vldr.32	s15, [r4, #48]
 488:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10017              		.loc 20 488 59 view .LVU2821
 10018 089e 0CAA     		add	r2, sp, #48
 484:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10019              		.loc 20 484 50 view .LVU2822
 10020 08a0 27EE267A 		vmul.f32	s14, s14, s13
 488:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10021              		.loc 20 488 59 view .LVU2823
 10022 08a4 C148     		ldr	r0, .L576+16
 485:Veno-Echo.cpp ****         
 10023              		.loc 20 485 50 view .LVU2824
 10024 08a6 67EEA67A 		vmul.f32	s15, s15, s13
 484:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10025              		.loc 20 484 57 view .LVU2825
 10026 08aa 8DED0C7A 		vstr.32	s14, [sp, #48]
 485:Veno-Echo.cpp ****         
 10027              		.loc 20 485 9 is_stmt 1 view .LVU2826
 10028              	.LVL630:
 485:Veno-Echo.cpp ****         
 10029              		.loc 20 485 9 is_stmt 0 view .LVU2827
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 317


 10030              	.LBE1689:
 10031              	.LBE1917:
 10032              	.LBE1944:
 10033              	.LBE1955:
 10034              		.loc 9 52 26 is_stmt 1 view .LVU2828
 10035              	.LBB1956:
 10036              	.LBB1945:
 10037              	.LBB1918:
 10038              	.LBB1690:
 485:Veno-Echo.cpp ****         
 10039              		.loc 20 485 57 is_stmt 0 view .LVU2829
 10040 08ae CDED0D7A 		vstr.32	s15, [sp, #52]
 488:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10041              		.loc 20 488 9 is_stmt 1 view .LVU2830
 488:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10042              		.loc 20 488 59 is_stmt 0 view .LVU2831
 10043 08b2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10044              	.LVL631:
 489:Veno-Echo.cpp **** 
 10045              		.loc 20 489 59 view .LVU2832
 10046 08b6 0BA9     		add	r1, sp, #44
 10047 08b8 0DAA     		add	r2, sp, #52
 10048 08ba BD48     		ldr	r0, .L576+20
 488:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10049              		.loc 20 488 97 view .LVU2833
 10050 08bc 8DED0E0A 		vstr.32	s0, [sp, #56]
 489:Veno-Echo.cpp **** 
 10051              		.loc 20 489 9 is_stmt 1 view .LVU2834
 489:Veno-Echo.cpp **** 
 10052              		.loc 20 489 59 is_stmt 0 view .LVU2835
 10053 08c0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10054              	.LVL632:
 10055              	.LBB1675:
 10056              	.LBB1676:
1815:Veno-Echo.cpp ****         returnval = limit;
 10057              		.loc 20 1815 5 view .LVU2836
 10058 08c4 F0EE006A 		vmov.f32	s13, #2.0e+0
 10059              	.LBE1676:
 10060              	.LBE1675:
 492:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10061              		.loc 20 492 41 view .LVU2837
 10062 08c8 9DED0E7A 		vldr.32	s14, [sp, #56]
 489:Veno-Echo.cpp **** 
 10063              		.loc 20 489 59 view .LVU2838
 10064 08cc F0EE407A 		vmov.f32	s15, s0
 492:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10065              		.loc 20 492 9 is_stmt 1 view .LVU2839
 10066              	.LVL633:
 10067              	.LBB1680:
 10068              	.LBI1675:
1812:Veno-Echo.cpp **** {
 10069              		.loc 20 1812 7 view .LVU2840
 10070              	.LBB1677:
1814:Veno-Echo.cpp ****     if (input > limit)
 10071              		.loc 20 1814 5 view .LVU2841
1815:Veno-Echo.cpp ****         returnval = limit;
 10072              		.loc 20 1815 5 view .LVU2842
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 318


 10073 08d0 B4EEE67A 		vcmpe.f32	s14, s13
 10074 08d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10075 08d8 00F31681 		bgt	.L539
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10076              		.loc 20 1817 10 view .LVU2843
 10077 08dc F8EE006A 		vmov.f32	s13, #-2.0e+0
 10078 08e0 B4EEE67A 		vcmpe.f32	s14, s13
 10079 08e4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10080 08e8 00F12F81 		bmi	.L540
 10081 08ec 27EE080A 		vmul.f32	s0, s14, s16
 10082              	.LVL634:
 10083              	.L514:
1822:Veno-Echo.cpp **** }
 10084              		.loc 20 1822 5 view .LVU2844
1822:Veno-Echo.cpp **** }
 10085              		.loc 20 1822 5 is_stmt 0 view .LVU2845
 10086              	.LBE1677:
 10087              	.LBE1680:
 10088              	.LBB1681:
 10089              	.LBB1682:
1815:Veno-Echo.cpp ****         returnval = limit;
 10090              		.loc 20 1815 5 view .LVU2846
 10091 08f0 F0EE006A 		vmov.f32	s13, #2.0e+0
 10092              	.LBE1682:
 10093              	.LBE1681:
 492:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10094              		.loc 20 492 30 view .LVU2847
 10095 08f4 8DED0E7A 		vstr.32	s14, [sp, #56]
 493:Veno-Echo.cpp **** 
 10096              		.loc 20 493 9 is_stmt 1 view .LVU2848
 10097              	.LVL635:
 10098              	.LBB1685:
 10099              	.LBI1681:
1812:Veno-Echo.cpp **** {
 10100              		.loc 20 1812 7 view .LVU2849
 10101              	.LBB1683:
1814:Veno-Echo.cpp ****     if (input > limit)
 10102              		.loc 20 1814 5 view .LVU2850
1815:Veno-Echo.cpp ****         returnval = limit;
 10103              		.loc 20 1815 5 view .LVU2851
 10104 08f8 F4EEE67A 		vcmpe.f32	s15, s13
 10105 08fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10106 0900 00F3FF80 		bgt	.L541
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10107              		.loc 20 1817 10 view .LVU2852
 10108 0904 B8EE007A 		vmov.f32	s14, #-2.0e+0
1818:Veno-Echo.cpp ****     else
 10109              		.loc 20 1818 19 is_stmt 0 view .LVU2853
 10110 0908 F4EE477A 		vcmp.f32	s15, s14
 10111 090c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10112 0910 48BF     		it	mi
 10113 0912 F0EE477A 		vmovmi.f32	s15, s14
 10114              	.LVL636:
 10115              	.L515:
1822:Veno-Echo.cpp **** }
 10116              		.loc 20 1822 5 is_stmt 1 view .LVU2854
1822:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 319


 10117              		.loc 20 1822 5 is_stmt 0 view .LVU2855
 10118              	.LBE1683:
 10119              	.LBE1685:
 496:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10120              		.loc 20 496 27 view .LVU2856
 10121 0916 A74D     		ldr	r5, .L576+24
 497:Veno-Echo.cpp **** 
 10122              		.loc 20 497 27 view .LVU2857
 10123 0918 A74C     		ldr	r4, .L576+28
 496:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10124              		.loc 20 496 27 view .LVU2858
 10125 091a 2846     		mov	r0, r5
 493:Veno-Echo.cpp **** 
 10126              		.loc 20 493 30 view .LVU2859
 10127 091c CDED0F7A 		vstr.32	s15, [sp, #60]
 496:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10128              		.loc 20 496 9 is_stmt 1 view .LVU2860
 496:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10129              		.loc 20 496 27 is_stmt 0 view .LVU2861
 10130 0920 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10131              	.LVL637:
 497:Veno-Echo.cpp **** 
 10132              		.loc 20 497 9 is_stmt 1 view .LVU2862
 497:Veno-Echo.cpp **** 
 10133              		.loc 20 497 27 is_stmt 0 view .LVU2863
 10134 0924 DFED9E7A 		vldr.32	s15, .L576+4
 10135 0928 9DED0F0A 		vldr.32	s0, [sp, #60]
 10136 092c 2046     		mov	r0, r4
 10137 092e 20EE270A 		vmul.f32	s0, s0, s15
 10138 0932 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10139              	.LVL638:
 499:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10140              		.loc 20 499 9 is_stmt 1 view .LVU2864
 499:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10141              		.loc 20 499 9 is_stmt 0 view .LVU2865
 10142              	.LBE1690:
 10143              	.LBE1918:
 10144              	.LBE1945:
 10145              	.LBE1956:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10146              		.loc 9 56 27 is_stmt 1 view .LVU2866
 10147              	.LBB1957:
 10148              	.LBB1946:
 10149              	.LBB1919:
 10150              	.LBB1691:
 499:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10151              		.loc 20 499 51 is_stmt 0 view .LVU2867
 10152 0936 F2EE046A 		vmov.f32	s13, #1.0e+1
 10153 093a 95ED0D7A 		vldr.32	s14, [r5, #52]
 502:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10154              		.loc 20 502 55 view .LVU2868
 10155 093e 0EA9     		add	r1, sp, #56
 500:Veno-Echo.cpp **** 
 10156              		.loc 20 500 51 view .LVU2869
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 320


 10157 0940 D4ED0D7A 		vldr.32	s15, [r4, #52]
 502:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10158              		.loc 20 502 55 view .LVU2870
 10159 0944 10AA     		add	r2, sp, #64
 499:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10160              		.loc 20 499 51 view .LVU2871
 10161 0946 27EE267A 		vmul.f32	s14, s14, s13
 502:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10162              		.loc 20 502 55 view .LVU2872
 10163 094a 9C48     		ldr	r0, .L576+32
 500:Veno-Echo.cpp **** 
 10164              		.loc 20 500 51 view .LVU2873
 10165 094c 67EEA67A 		vmul.f32	s15, s15, s13
 499:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10166              		.loc 20 499 58 view .LVU2874
 10167 0950 8DED107A 		vstr.32	s14, [sp, #64]
 500:Veno-Echo.cpp **** 
 10168              		.loc 20 500 9 is_stmt 1 view .LVU2875
 10169              	.LVL639:
 500:Veno-Echo.cpp **** 
 10170              		.loc 20 500 9 is_stmt 0 view .LVU2876
 10171              	.LBE1691:
 10172              	.LBE1919:
 10173              	.LBE1946:
 10174              	.LBE1957:
 10175              		.loc 9 56 27 is_stmt 1 view .LVU2877
 10176              	.LBB1958:
 10177              	.LBB1947:
 10178              	.LBB1920:
 10179              	.LBB1692:
 500:Veno-Echo.cpp **** 
 10180              		.loc 20 500 58 is_stmt 0 view .LVU2878
 10181 0954 CDED117A 		vstr.32	s15, [sp, #68]
 502:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10182              		.loc 20 502 9 is_stmt 1 view .LVU2879
 502:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10183              		.loc 20 502 55 is_stmt 0 view .LVU2880
 10184 0958 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10185              	.LVL640:
 503:Veno-Echo.cpp **** 
 10186              		.loc 20 503 55 view .LVU2881
 10187 095c 0FA9     		add	r1, sp, #60
 10188 095e 11AA     		add	r2, sp, #68
 10189 0960 9748     		ldr	r0, .L576+36
 502:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10190              		.loc 20 502 30 view .LVU2882
 10191 0962 8DED0E0A 		vstr.32	s0, [sp, #56]
 503:Veno-Echo.cpp **** 
 10192              		.loc 20 503 9 is_stmt 1 view .LVU2883
 503:Veno-Echo.cpp **** 
 10193              		.loc 20 503 55 is_stmt 0 view .LVU2884
 10194 0966 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10195              	.LVL641:
 506:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10196              		.loc 20 506 53 view .LVU2885
 10197 096a 0EAA     		add	r2, sp, #56
 10198 096c 0AA9     		add	r1, sp, #40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 321


 10199 096e 9548     		ldr	r0, .L576+40
 503:Veno-Echo.cpp **** 
 10200              		.loc 20 503 30 view .LVU2886
 10201 0970 8DED0F0A 		vstr.32	s0, [sp, #60]
 506:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10202              		.loc 20 506 9 is_stmt 1 view .LVU2887
 506:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10203              		.loc 20 506 53 is_stmt 0 view .LVU2888
 10204 0974 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10205              	.LVL642:
 507:Veno-Echo.cpp **** 
 10206              		.loc 20 507 53 view .LVU2889
 10207 0978 0FAA     		add	r2, sp, #60
 10208 097a 0BA9     		add	r1, sp, #44
 10209 097c 9248     		ldr	r0, .L576+44
 506:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10210              		.loc 20 506 27 view .LVU2890
 10211 097e 8DED0A0A 		vstr.32	s0, [sp, #40]
 507:Veno-Echo.cpp **** 
 10212              		.loc 20 507 9 is_stmt 1 view .LVU2891
 507:Veno-Echo.cpp **** 
 10213              		.loc 20 507 53 is_stmt 0 view .LVU2892
 10214 0982 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10215              	.LVL643:
 10216 0986 DDED0A7A 		vldr.32	s15, [sp, #40]
 507:Veno-Echo.cpp **** 
 10217              		.loc 20 507 27 view .LVU2893
 10218 098a 8DED0B0A 		vstr.32	s0, [sp, #44]
 10219              	.LBE1692:
 10220 098e F8E4     		b	.L513
 10221              	.LVL644:
 10222              	.L558:
 507:Veno-Echo.cpp **** 
 10223              		.loc 20 507 27 view .LVU2894
 10224              	.LBE1920:
 450:Veno-Echo.cpp **** 
 10225              		.loc 20 450 25 view .LVU2895
 10226 0990 DFED8E7A 		vldr.32	s15, .L576+48
 10227              	.LVL645:
 450:Veno-Echo.cpp **** 
 10228              		.loc 20 450 25 view .LVU2896
 10229 0994 7FE4     		b	.L503
 10230              	.LVL646:
 10231              	.L557:
 446:Veno-Echo.cpp ****             
 10232              		.loc 20 446 25 view .LVU2897
 10233 0996 9FED8D7A 		vldr.32	s14, .L576+48
 10234              	.LVL647:
 446:Veno-Echo.cpp ****             
 10235              		.loc 20 446 25 view .LVU2898
 10236 099a 6BE4     		b	.L501
 10237              	.LVL648:
 10238              	.L529:
 10239              	.LBB1921:
 376:Veno-Echo.cpp **** {
 10240              		.loc 20 376 1 view .LVU2899
 10241 099c 7F4B     		ldr	r3, .L576
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 322


 10242              	.LBE1921:
 10243              	.LBB1922:
 10244              	.LBB1588:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10245              		.loc 20 1816 19 view .LVU2900
 10246 099e B0EE470A 		vmov.f32	s0, s14
 10247              	.LVL649:
1822:Veno-Echo.cpp **** }
 10248              		.loc 20 1822 5 is_stmt 1 view .LVU2901
1822:Veno-Echo.cpp **** }
 10249              		.loc 20 1822 5 is_stmt 0 view .LVU2902
 10250              	.LBE1588:
 10251              	.LBE1922:
 10252              	.LBB1923:
 376:Veno-Echo.cpp **** {
 10253              		.loc 20 376 1 view .LVU2903
 10254 09a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10255              	.LBE1923:
 374:Veno-Echo.cpp **** 
 10256              		.loc 20 374 23 view .LVU2904
 10257 09a4 8DED090A 		vstr.32	s0, [sp, #36]
 376:Veno-Echo.cpp **** {
 10258              		.loc 20 376 1 is_stmt 1 view .LVU2905
 10259              	.LBB1924:
 10260 09a8 002B     		cmp	r3, #0
 10261 09aa 7FF4E8AB 		bne	.L495
 10262              	.L566:
 10263              	.LBB1591:
 382:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10264              		.loc 20 382 9 view .LVU2906
 382:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10265              		.loc 20 382 22 is_stmt 0 view .LVU2907
 10266 09ae 9FED7C9A 		vldr.32	s18, .L576+4
 10267 09b2 874D     		ldr	r5, .L576+52
 10268 09b4 27EE890A 		vmul.f32	s0, s15, s18
 383:Veno-Echo.cpp **** 
 10269              		.loc 20 383 22 view .LVU2908
 10270 09b8 864C     		ldr	r4, .L576+56
 382:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10271              		.loc 20 382 22 view .LVU2909
 10272 09ba 2846     		mov	r0, r5
 10273 09bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10274              	.LVL650:
 383:Veno-Echo.cpp **** 
 10275              		.loc 20 383 9 is_stmt 1 view .LVU2910
 383:Veno-Echo.cpp **** 
 10276              		.loc 20 383 22 is_stmt 0 view .LVU2911
 10277 09c0 9DED090A 		vldr.32	s0, [sp, #36]
 10278 09c4 2046     		mov	r0, r4
 10279 09c6 20EE090A 		vmul.f32	s0, s0, s18
 10280 09ca FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10281              	.LVL651:
 386:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10282              		.loc 20 386 9 is_stmt 1 view .LVU2912
 386:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10283              		.loc 20 386 9 is_stmt 0 view .LVU2913
 10284              	.LBE1591:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 323


 10285              	.LBE1924:
 10286              	.LBE1947:
 10287              	.LBE1958:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10288              		.loc 9 52 26 is_stmt 1 view .LVU2914
 10289              	.LBB1959:
 10290              	.LBB1948:
 10291              	.LBB1925:
 10292              	.LBB1606:
 386:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10293              		.loc 20 386 40 is_stmt 0 view .LVU2915
 10294 09ce F2EE046A 		vmov.f32	s13, #1.0e+1
 10295 09d2 95ED0C7A 		vldr.32	s14, [r5, #48]
 390:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10296              		.loc 20 390 49 view .LVU2916
 10297 09d6 0CAA     		add	r2, sp, #48
 387:Veno-Echo.cpp ****         
 10298              		.loc 20 387 40 view .LVU2917
 10299 09d8 D4ED0C7A 		vldr.32	s15, [r4, #48]
 390:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10300              		.loc 20 390 49 view .LVU2918
 10301 09dc 08A9     		add	r1, sp, #32
 386:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10302              		.loc 20 386 40 view .LVU2919
 10303 09de 27EE267A 		vmul.f32	s14, s14, s13
 390:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10304              		.loc 20 390 49 view .LVU2920
 10305 09e2 7D48     		ldr	r0, .L576+60
 387:Veno-Echo.cpp ****         
 10306              		.loc 20 387 40 view .LVU2921
 10307 09e4 67EEA67A 		vmul.f32	s15, s15, s13
 386:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10308              		.loc 20 386 47 view .LVU2922
 10309 09e8 8DED0C7A 		vstr.32	s14, [sp, #48]
 387:Veno-Echo.cpp ****         
 10310              		.loc 20 387 9 is_stmt 1 view .LVU2923
 10311              	.LVL652:
 387:Veno-Echo.cpp ****         
 10312              		.loc 20 387 9 is_stmt 0 view .LVU2924
 10313              	.LBE1606:
 10314              	.LBE1925:
 10315              	.LBE1948:
 10316              	.LBE1959:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10317              		.loc 9 52 26 is_stmt 1 view .LVU2925
 10318              	.LBB1960:
 10319              	.LBB1949:
 10320              	.LBB1926:
 10321              	.LBB1607:
 387:Veno-Echo.cpp ****         
 10322              		.loc 20 387 47 is_stmt 0 view .LVU2926
 10323 09ec CDED0D7A 		vstr.32	s15, [sp, #52]
 390:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10324              		.loc 20 390 9 is_stmt 1 view .LVU2927
 390:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10325              		.loc 20 390 49 is_stmt 0 view .LVU2928
 10326 09f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 324


 10327              	.LVL653:
 391:Veno-Echo.cpp **** 
 10328              		.loc 20 391 49 view .LVU2929
 10329 09f4 0DAA     		add	r2, sp, #52
 10330 09f6 09A9     		add	r1, sp, #36
 10331 09f8 7848     		ldr	r0, .L576+64
 390:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10332              		.loc 20 390 78 view .LVU2930
 10333 09fa 8DED0E0A 		vstr.32	s0, [sp, #56]
 391:Veno-Echo.cpp **** 
 10334              		.loc 20 391 9 is_stmt 1 view .LVU2931
 391:Veno-Echo.cpp **** 
 10335              		.loc 20 391 49 is_stmt 0 view .LVU2932
 10336 09fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10337              	.LVL654:
 10338              	.LBB1592:
 10339              	.LBB1593:
1815:Veno-Echo.cpp ****         returnval = limit;
 10340              		.loc 20 1815 5 view .LVU2933
 10341 0a02 F0EE006A 		vmov.f32	s13, #2.0e+0
 10342              	.LBE1593:
 10343              	.LBE1592:
 394:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10344              		.loc 20 394 36 view .LVU2934
 10345 0a06 9DED0E7A 		vldr.32	s14, [sp, #56]
 391:Veno-Echo.cpp **** 
 10346              		.loc 20 391 49 view .LVU2935
 10347 0a0a F0EE407A 		vmov.f32	s15, s0
 394:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10348              		.loc 20 394 9 is_stmt 1 view .LVU2936
 10349              	.LVL655:
 10350              	.LBB1597:
 10351              	.LBI1592:
1812:Veno-Echo.cpp **** {
 10352              		.loc 20 1812 7 view .LVU2937
 10353              	.LBB1594:
1814:Veno-Echo.cpp ****     if (input > limit)
 10354              		.loc 20 1814 5 view .LVU2938
1815:Veno-Echo.cpp ****         returnval = limit;
 10355              		.loc 20 1815 5 view .LVU2939
 10356 0a0e B4EEE67A 		vcmpe.f32	s14, s13
 10357 0a12 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10358 0a16 7FDC     		bgt	.L530
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10359              		.loc 20 1817 10 view .LVU2940
 10360 0a18 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10361 0a1c B4EEE67A 		vcmpe.f32	s14, s13
 10362 0a20 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10363 0a24 00F19680 		bmi	.L531
 10364 0a28 27EE090A 		vmul.f32	s0, s14, s18
 10365              	.LVL656:
 10366              	.L496:
1822:Veno-Echo.cpp **** }
 10367              		.loc 20 1822 5 view .LVU2941
1822:Veno-Echo.cpp **** }
 10368              		.loc 20 1822 5 is_stmt 0 view .LVU2942
 10369              	.LBE1594:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 325


 10370              	.LBE1597:
 10371              	.LBB1598:
 10372              	.LBB1599:
1815:Veno-Echo.cpp ****         returnval = limit;
 10373              		.loc 20 1815 5 view .LVU2943
 10374 0a2c F0EE006A 		vmov.f32	s13, #2.0e+0
 10375              	.LBE1599:
 10376              	.LBE1598:
 394:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10377              		.loc 20 394 25 view .LVU2944
 10378 0a30 8DED0E7A 		vstr.32	s14, [sp, #56]
 395:Veno-Echo.cpp **** 
 10379              		.loc 20 395 9 is_stmt 1 view .LVU2945
 10380              	.LVL657:
 10381              	.LBB1602:
 10382              	.LBI1598:
1812:Veno-Echo.cpp **** {
 10383              		.loc 20 1812 7 view .LVU2946
 10384              	.LBB1600:
1814:Veno-Echo.cpp ****     if (input > limit)
 10385              		.loc 20 1814 5 view .LVU2947
1815:Veno-Echo.cpp ****         returnval = limit;
 10386              		.loc 20 1815 5 view .LVU2948
 10387 0a34 F4EEE67A 		vcmpe.f32	s15, s13
 10388 0a38 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10389 0a3c 69DC     		bgt	.L532
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10390              		.loc 20 1817 10 view .LVU2949
 10391 0a3e B8EE007A 		vmov.f32	s14, #-2.0e+0
1818:Veno-Echo.cpp ****     else
 10392              		.loc 20 1818 19 is_stmt 0 view .LVU2950
 10393 0a42 F4EE477A 		vcmp.f32	s15, s14
 10394 0a46 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10395 0a4a 48BF     		it	mi
 10396 0a4c F0EE477A 		vmovmi.f32	s15, s14
 10397              	.LVL658:
 10398              	.L497:
1822:Veno-Echo.cpp **** }
 10399              		.loc 20 1822 5 is_stmt 1 view .LVU2951
1822:Veno-Echo.cpp **** }
 10400              		.loc 20 1822 5 is_stmt 0 view .LVU2952
 10401              	.LBE1600:
 10402              	.LBE1602:
 398:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10403              		.loc 20 398 22 view .LVU2953
 10404 0a50 634D     		ldr	r5, .L576+68
 399:Veno-Echo.cpp **** 
 10405              		.loc 20 399 22 view .LVU2954
 10406 0a52 644C     		ldr	r4, .L576+72
 398:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10407              		.loc 20 398 22 view .LVU2955
 10408 0a54 2846     		mov	r0, r5
 395:Veno-Echo.cpp **** 
 10409              		.loc 20 395 25 view .LVU2956
 10410 0a56 CDED0F7A 		vstr.32	s15, [sp, #60]
 398:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10411              		.loc 20 398 9 is_stmt 1 view .LVU2957
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 326


 398:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10412              		.loc 20 398 22 is_stmt 0 view .LVU2958
 10413 0a5a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10414              	.LVL659:
 399:Veno-Echo.cpp **** 
 10415              		.loc 20 399 9 is_stmt 1 view .LVU2959
 399:Veno-Echo.cpp **** 
 10416              		.loc 20 399 22 is_stmt 0 view .LVU2960
 10417 0a5e DFED507A 		vldr.32	s15, .L576+4
 10418 0a62 9DED0F0A 		vldr.32	s0, [sp, #60]
 10419 0a66 2046     		mov	r0, r4
 10420 0a68 20EE270A 		vmul.f32	s0, s0, s15
 10421 0a6c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10422              	.LVL660:
 401:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10423              		.loc 20 401 9 is_stmt 1 view .LVU2961
 401:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10424              		.loc 20 401 9 is_stmt 0 view .LVU2962
 10425              	.LBE1607:
 10426              	.LBE1926:
 10427              	.LBE1949:
 10428              	.LBE1960:
 10429              		.loc 9 56 27 is_stmt 1 view .LVU2963
 10430              	.LBB1961:
 10431              	.LBB1950:
 10432              	.LBB1927:
 10433              	.LBB1608:
 401:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10434              		.loc 20 401 41 is_stmt 0 view .LVU2964
 10435 0a70 F2EE046A 		vmov.f32	s13, #1.0e+1
 10436 0a74 95ED0D7A 		vldr.32	s14, [r5, #52]
 404:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10437              		.loc 20 404 45 view .LVU2965
 10438 0a78 0EA9     		add	r1, sp, #56
 402:Veno-Echo.cpp **** 
 10439              		.loc 20 402 41 view .LVU2966
 10440 0a7a D4ED0D7A 		vldr.32	s15, [r4, #52]
 404:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10441              		.loc 20 404 45 view .LVU2967
 10442 0a7e 10AA     		add	r2, sp, #64
 401:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10443              		.loc 20 401 41 view .LVU2968
 10444 0a80 27EE267A 		vmul.f32	s14, s14, s13
 404:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10445              		.loc 20 404 45 view .LVU2969
 10446 0a84 5848     		ldr	r0, .L576+76
 402:Veno-Echo.cpp **** 
 10447              		.loc 20 402 41 view .LVU2970
 10448 0a86 67EEA67A 		vmul.f32	s15, s15, s13
 401:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10449              		.loc 20 401 48 view .LVU2971
 10450 0a8a 8DED107A 		vstr.32	s14, [sp, #64]
 402:Veno-Echo.cpp **** 
 10451              		.loc 20 402 9 is_stmt 1 view .LVU2972
 10452              	.LVL661:
 402:Veno-Echo.cpp **** 
 10453              		.loc 20 402 9 is_stmt 0 view .LVU2973
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 327


 10454              	.LBE1608:
 10455              	.LBE1927:
 10456              	.LBE1950:
 10457              	.LBE1961:
 10458              		.loc 9 56 27 is_stmt 1 view .LVU2974
 10459              	.LBB1962:
 10460              	.LBB1951:
 10461              	.LBB1928:
 10462              	.LBB1609:
 402:Veno-Echo.cpp **** 
 10463              		.loc 20 402 48 is_stmt 0 view .LVU2975
 10464 0a8e CDED117A 		vstr.32	s15, [sp, #68]
 404:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10465              		.loc 20 404 9 is_stmt 1 view .LVU2976
 404:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10466              		.loc 20 404 45 is_stmt 0 view .LVU2977
 10467 0a92 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10468              	.LVL662:
 405:Veno-Echo.cpp **** 
 10469              		.loc 20 405 45 view .LVU2978
 10470 0a96 0FA9     		add	r1, sp, #60
 10471 0a98 11AA     		add	r2, sp, #68
 10472 0a9a 5448     		ldr	r0, .L576+80
 404:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10473              		.loc 20 404 25 view .LVU2979
 10474 0a9c 8DED0E0A 		vstr.32	s0, [sp, #56]
 405:Veno-Echo.cpp **** 
 10475              		.loc 20 405 9 is_stmt 1 view .LVU2980
 405:Veno-Echo.cpp **** 
 10476              		.loc 20 405 45 is_stmt 0 view .LVU2981
 10477 0aa0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10478              	.LVL663:
 409:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10479              		.loc 20 409 44 view .LVU2982
 10480 0aa4 0EAA     		add	r2, sp, #56
 10481 0aa6 08A9     		add	r1, sp, #32
 10482 0aa8 5148     		ldr	r0, .L576+84
 405:Veno-Echo.cpp **** 
 10483              		.loc 20 405 25 view .LVU2983
 10484 0aaa 8DED0F0A 		vstr.32	s0, [sp, #60]
 409:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10485              		.loc 20 409 9 is_stmt 1 view .LVU2984
 409:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10486              		.loc 20 409 44 is_stmt 0 view .LVU2985
 10487 0aae FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10488              	.LVL664:
 410:Veno-Echo.cpp **** 
 10489              		.loc 20 410 44 view .LVU2986
 10490 0ab2 0FAA     		add	r2, sp, #60
 10491 0ab4 09A9     		add	r1, sp, #36
 10492 0ab6 4F48     		ldr	r0, .L576+88
 409:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10493              		.loc 20 409 23 view .LVU2987
 10494 0ab8 8DED080A 		vstr.32	s0, [sp, #32]
 410:Veno-Echo.cpp **** 
 10495              		.loc 20 410 9 is_stmt 1 view .LVU2988
 410:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 328


 10496              		.loc 20 410 44 is_stmt 0 view .LVU2989
 10497 0abc FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10498              	.LVL665:
 10499 0ac0 DDED087A 		vldr.32	s15, [sp, #32]
 410:Veno-Echo.cpp **** 
 10500              		.loc 20 410 23 view .LVU2990
 10501 0ac4 8DED090A 		vstr.32	s0, [sp, #36]
 10502              	.LBE1609:
 10503 0ac8 FFF759BB 		b	.L495
 10504              	.LVL666:
 10505              	.L528:
 410:Veno-Echo.cpp **** 
 10506              		.loc 20 410 23 view .LVU2991
 10507              	.LBE1928:
 10508              	.LBB1929:
 10509              	.LBB1582:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10510              		.loc 20 1816 19 view .LVU2992
 10511 0acc F0EE477A 		vmov.f32	s15, s14
 10512              	.LVL667:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10513              		.loc 20 1816 19 view .LVU2993
 10514 0ad0 FFF739BB 		b	.L491
 10515              	.LVL668:
 10516              	.L536:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10517              		.loc 20 1816 19 view .LVU2994
 10518              	.LBE1582:
 10519              	.LBE1929:
 10520              	.LBB1930:
 10521              	.LBB1661:
 10522 0ad4 B0EE678A 		vmov.f32	s16, s15
 10523              	.LVL669:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10524              		.loc 20 1816 19 view .LVU2995
 10525 0ad8 06E4     		b	.L507
 10526              	.LVL670:
 10527              	.L535:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10528              		.loc 20 1816 19 view .LVU2996
 10529              	.LBE1661:
 10530              	.LBE1930:
 10531              	.LBB1931:
 10532              	.LBB1658:
 10533 0ada B0EE670A 		vmov.f32	s0, s15
 10534              	.LVL671:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10535              		.loc 20 1816 19 view .LVU2997
 10536 0ade FFF7F2BB 		b	.L505
 10537              	.LVL672:
 10538              	.L537:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10539              		.loc 20 1816 19 view .LVU2998
 10540              	.LBE1658:
 10541              	.LBE1931:
 10542              	.LBB1932:
 10543              	.LBB1665:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 329


 10544 0ae2 F0EE477A 		vmov.f32	s15, s14
 10545              	.LVL673:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10546              		.loc 20 1816 19 view .LVU2999
 10547 0ae6 32E4     		b	.L509
 10548              	.LVL674:
 10549              	.L560:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10550              		.loc 20 1816 19 view .LVU3000
 10551              	.LBE1665:
 10552              	.LBE1932:
 527:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10553              		.loc 20 527 13 is_stmt 1 view .LVU3001
 527:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10554              		.loc 20 527 18 is_stmt 0 view .LVU3002
 10555 0ae8 DBED006A 		vldr.32	s13, [fp]
 528:Veno-Echo.cpp ****         }
 10556              		.loc 20 528 18 view .LVU3003
 10557 0aec 9BED017A 		vldr.32	s14, [fp, #4]
 527:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10558              		.loc 20 527 18 view .LVU3004
 10559 0af0 77EEA67A 		vadd.f32	s15, s15, s13
 10560              	.LVL675:
 528:Veno-Echo.cpp ****         }
 10561              		.loc 20 528 13 is_stmt 1 view .LVU3005
 528:Veno-Echo.cpp ****         }
 10562              		.loc 20 528 18 is_stmt 0 view .LVU3006
 10563 0af4 30EE070A 		vadd.f32	s0, s0, s14
 10564              	.LVL676:
 528:Veno-Echo.cpp ****         }
 10565              		.loc 20 528 18 view .LVU3007
 10566 0af8 5CE4     		b	.L519
 10567              	.LVL677:
 10568              	.L563:
 10569              	.LBB1933:
 10570              	.LBB1891:
 10571              	.LBB1880:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10572              		.loc 19 141 17 view .LVU3008
 10573 0afa 049B     		ldr	r3, [sp, #16]
 10574 0afc 83ED00BA 		vstr.32	s22, [r3]
 10575 0b00 D2E5     		b	.L477
 10576              	.LVL678:
 10577              	.L541:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10578              		.loc 19 141 17 view .LVU3009
 10579              	.LBE1880:
 10580              	.LBE1891:
 10581              	.LBE1933:
 10582              	.LBB1934:
 10583              	.LBB1693:
 10584              	.LBB1686:
 10585              	.LBB1684:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10586              		.loc 20 1816 19 view .LVU3010
 10587 0b02 F0EE667A 		vmov.f32	s15, s13
 10588              	.LVL679:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 330


1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10589              		.loc 20 1816 19 view .LVU3011
 10590 0b06 06E7     		b	.L515
 10591              	.LVL680:
 10592              	.L539:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10593              		.loc 20 1816 19 view .LVU3012
 10594              	.LBE1684:
 10595              	.LBE1686:
 10596              	.LBB1687:
 10597              	.LBB1678:
 10598 0b08 B0EE667A 		vmov.f32	s14, s13
 10599              	.LVL681:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10600              		.loc 20 1816 19 view .LVU3013
 10601 0b0c 9FED3A0A 		vldr.32	s0, .L576+92
 10602 0b10 EEE6     		b	.L514
 10603              	.LVL682:
 10604              	.L532:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10605              		.loc 20 1816 19 view .LVU3014
 10606              	.LBE1678:
 10607              	.LBE1687:
 10608              	.LBE1693:
 10609              	.LBE1934:
 10610              	.LBB1935:
 10611              	.LBB1610:
 10612              	.LBB1603:
 10613              	.LBB1601:
 10614 0b12 F0EE667A 		vmov.f32	s15, s13
 10615              	.LVL683:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10616              		.loc 20 1816 19 view .LVU3015
 10617 0b16 9BE7     		b	.L497
 10618              	.LVL684:
 10619              	.L530:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10620              		.loc 20 1816 19 view .LVU3016
 10621              	.LBE1601:
 10622              	.LBE1603:
 10623              	.LBB1604:
 10624              	.LBB1595:
 10625 0b18 B0EE667A 		vmov.f32	s14, s13
 10626              	.LVL685:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10627              		.loc 20 1816 19 view .LVU3017
 10628 0b1c 9FED360A 		vldr.32	s0, .L576+92
 10629 0b20 84E7     		b	.L496
 10630              	.LVL686:
 10631              	.L473:
1816:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10632              		.loc 20 1816 19 view .LVU3018
 10633              	.LBE1595:
 10634              	.LBE1604:
 10635              	.LBE1610:
 10636              	.LBE1935:
 10637              	.LBB1936:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 331


 10638              	.LBB1892:
 10639              	.LBB1881:
 116:delayline_reverse.h ****                 }
 10640              		.loc 19 116 21 view .LVU3019
 10641 0b22 AB60     		str	r3, [r5, #8]
 10642 0b24 2FE6     		b	.L475
 10643              	.LVL687:
 10644              	.L483:
 116:delayline_reverse.h ****                 }
 10645              		.loc 19 116 21 view .LVU3020
 10646              	.LBE1881:
 10647              	.LBE1892:
 10648              	.LBE1936:
 10649              	.LBB1937:
 10650              	.LBB1577:
 10651              	.LBB1573:
 10652 0b26 A260     		str	r2, [r4, #8]
 10653 0b28 0BE6     		b	.L485
 10654              	.LVL688:
 10655              	.L459:
 116:delayline_reverse.h ****                 }
 10656              		.loc 19 116 21 view .LVU3021
 10657              	.LBE1573:
 10658              	.LBE1577:
 10659              	.LBE1937:
 10660              	.LBE1951:
 10661              	.LBE1962:
 548:Veno-Echo.cpp **** 
 10662              		.loc 20 548 1 view .LVU3022
 10663 0b2a 13B0     		add	sp, sp, #76
 10664              		.cfi_remember_state
 10665              		.cfi_def_cfa_offset 92
 10666              		@ sp needed
 10667 0b2c BDEC0E8B 		vldm	sp!, {d8-d14}
 10668              		.cfi_restore 92
 10669              		.cfi_restore 93
 10670              		.cfi_restore 90
 10671              		.cfi_restore 91
 10672              		.cfi_restore 88
 10673              		.cfi_restore 89
 10674              		.cfi_restore 86
 10675              		.cfi_restore 87
 10676              		.cfi_restore 84
 10677              		.cfi_restore 85
 10678              		.cfi_restore 82
 10679              		.cfi_restore 83
 10680              		.cfi_restore 80
 10681              		.cfi_restore 81
 10682              		.cfi_def_cfa_offset 36
 10683 0b30 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10684              	.LVL689:
 10685              	.L565:
 10686              		.cfi_restore_state
 10687              	.LBB1963:
 10688              	.LBB1952:
 10689              	.LBB1938:
 10690              	.LBB1578:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 332


 10691              	.LBB1574:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10692              		.loc 19 130 17 view .LVU3023
 10693 0b34 C2ED007A 		vstr.32	s15, [r2]
 10694 0b38 FFF7D6BA 		b	.L487
 10695              	.L490:
 145:delayline_reverse.h ****                     playinghead_ = false;
 10696              		.loc 19 145 21 view .LVU3024
 10697 0b3c 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10698              		.loc 19 144 21 view .LVU3025
 10699 0b3e 039C     		ldr	r4, [sp, #12]
 10700              	.LVL690:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10701              		.loc 19 144 21 view .LVU3026
 10702 0b40 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10703              		.loc 19 145 21 view .LVU3027
 10704 0b42 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 10705              		.loc 19 146 21 view .LVU3028
 10706 0b44 0170     		strb	r1, [r0]
 10707 0b46 FFF7CFBA 		b	.L487
 10708              	.LVL691:
 10709              	.L540:
 146:delayline_reverse.h ****                 }
 10710              		.loc 19 146 21 view .LVU3029
 10711              	.LBE1574:
 10712              	.LBE1578:
 10713              	.LBE1938:
 10714              	.LBB1939:
 10715              	.LBB1694:
 10716              	.LBB1688:
 10717              	.LBB1679:
1818:Veno-Echo.cpp ****     else
 10718              		.loc 20 1818 19 view .LVU3030
 10719 0b4a B0EE667A 		vmov.f32	s14, s13
 10720              	.LVL692:
1818:Veno-Echo.cpp ****     else
 10721              		.loc 20 1818 19 view .LVU3031
 10722 0b4e 9FED2B0A 		vldr.32	s0, .L576+96
 10723 0b52 CDE6     		b	.L514
 10724              	.LVL693:
 10725              	.L531:
1818:Veno-Echo.cpp ****     else
 10726              		.loc 20 1818 19 view .LVU3032
 10727              	.LBE1679:
 10728              	.LBE1688:
 10729              	.LBE1694:
 10730              	.LBE1939:
 10731              	.LBB1940:
 10732              	.LBB1611:
 10733              	.LBB1605:
 10734              	.LBB1596:
 10735 0b54 B0EE667A 		vmov.f32	s14, s13
 10736              	.LVL694:
1818:Veno-Echo.cpp ****     else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 333


 10737              		.loc 20 1818 19 view .LVU3033
 10738 0b58 9FED280A 		vldr.32	s0, .L576+96
 10739 0b5c 66E7     		b	.L496
 10740              	.LVL695:
 10741              	.L461:
1818:Veno-Echo.cpp ****     else
 10742              		.loc 20 1818 19 view .LVU3034
 10743              	.LBE1596:
 10744              	.LBE1605:
 10745              	.LBE1611:
 10746              	.LBE1940:
 10747              	.LBE1952:
 10748              	.LBE1963:
 312:Veno-Echo.cpp ****                 //Update_crossfeedback();
 10749              		.loc 20 312 13 is_stmt 1 view .LVU3035
 314:Veno-Echo.cpp ****             break;
 10750              		.loc 20 314 17 view .LVU3036
 314:Veno-Echo.cpp ****             break;
 10751              		.loc 20 314 35 is_stmt 0 view .LVU3037
 10752 0b5e FFF7FEFF 		bl	_Z18Update_filterXfadev
 10753              	.LVL696:
 315:Veno-Echo.cpp ****         }
 10754              		.loc 20 315 13 is_stmt 1 view .LVU3038
 10755 0b62 FFF77DBA 		b	.L460
 10756              	.L469:
 283:Veno-Echo.cpp ****                 Update_Buttons();
 10757              		.loc 20 283 13 view .LVU3039
 284:Veno-Echo.cpp ****                 GetModCV();
 10758              		.loc 20 284 17 view .LVU3040
 284:Veno-Echo.cpp ****                 GetModCV();
 10759              		.loc 20 284 31 is_stmt 0 view .LVU3041
 10760 0b66 FFF7FEFF 		bl	_Z14Update_Buttonsv
 10761              	.LVL697:
 285:Veno-Echo.cpp ****             break;
 10762              		.loc 20 285 17 is_stmt 1 view .LVU3042
 285:Veno-Echo.cpp ****             break;
 10763              		.loc 20 285 25 is_stmt 0 view .LVU3043
 10764 0b6a FFF7FEFF 		bl	_Z8GetModCVv
 10765              	.LVL698:
 286:Veno-Echo.cpp **** 
 10766              		.loc 20 286 13 is_stmt 1 view .LVU3044
 10767 0b6e FFF777BA 		b	.L460
 10768              	.L468:
 288:Veno-Echo.cpp ****                 Update_DelayTimeL();
 10769              		.loc 20 288 13 view .LVU3045
 289:Veno-Echo.cpp ****             break;
 10770              		.loc 20 289 17 view .LVU3046
 289:Veno-Echo.cpp ****             break;
 10771              		.loc 20 289 34 is_stmt 0 view .LVU3047
 10772 0b72 FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 10773              	.LVL699:
 290:Veno-Echo.cpp **** 
 10774              		.loc 20 290 13 is_stmt 1 view .LVU3048
 10775 0b76 FFF773BA 		b	.L460
 10776              	.L467:
 292:Veno-Echo.cpp ****                 Update_DelayTimeR();
 10777              		.loc 20 292 13 view .LVU3049
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 334


 293:Veno-Echo.cpp ****             break;
 10778              		.loc 20 293 17 view .LVU3050
 293:Veno-Echo.cpp ****             break;
 10779              		.loc 20 293 34 is_stmt 0 view .LVU3051
 10780 0b7a FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 10781              	.LVL700:
 294:Veno-Echo.cpp **** 
 10782              		.loc 20 294 13 is_stmt 1 view .LVU3052
 10783 0b7e FFF76FBA 		b	.L460
 10784              	.L466:
 296:Veno-Echo.cpp ****                 Update_feedbackL();
 10785              		.loc 20 296 13 view .LVU3053
 297:Veno-Echo.cpp ****             break;
 10786              		.loc 20 297 17 view .LVU3054
 297:Veno-Echo.cpp ****             break;
 10787              		.loc 20 297 33 is_stmt 0 view .LVU3055
 10788 0b82 FFF7FEFF 		bl	_Z16Update_feedbackLv
 10789              	.LVL701:
 298:Veno-Echo.cpp **** 
 10790              		.loc 20 298 13 is_stmt 1 view .LVU3056
 10791 0b86 FFF76BBA 		b	.L460
 10792              	.L465:
 300:Veno-Echo.cpp ****                 Update_feedbackR();
 10793              		.loc 20 300 13 view .LVU3057
 301:Veno-Echo.cpp ****             break;
 10794              		.loc 20 301 17 view .LVU3058
 301:Veno-Echo.cpp ****             break;
 10795              		.loc 20 301 33 is_stmt 0 view .LVU3059
 10796 0b8a FFF7FEFF 		bl	_Z16Update_feedbackRv
 10797              	.LVL702:
 302:Veno-Echo.cpp **** 
 10798              		.loc 20 302 13 is_stmt 1 view .LVU3060
 10799 0b8e FFF767BA 		b	.L460
 10800              	.L464:
 304:Veno-Echo.cpp ****                 Update_drywet();
 10801              		.loc 20 304 13 view .LVU3061
 305:Veno-Echo.cpp ****             break;
 10802              		.loc 20 305 17 view .LVU3062
 305:Veno-Echo.cpp ****             break;
 10803              		.loc 20 305 30 is_stmt 0 view .LVU3063
 10804 0b92 FFF7FEFF 		bl	_Z13Update_drywetv
 10805              	.LVL703:
 306:Veno-Echo.cpp **** 
 10806              		.loc 20 306 13 is_stmt 1 view .LVU3064
 10807 0b96 FFF763BA 		b	.L460
 10808              	.L577:
 10809 0b9a 00BF     		.align	2
 10810              	.L576:
 10811 0b9c 00000000 		.word	.LANCHOR82
 10812 0ba0 CDCCCC3D 		.word	1036831949
 10813 0ba4 00000000 		.word	.LANCHOR48
 10814 0ba8 00000000 		.word	.LANCHOR49
 10815 0bac 00000000 		.word	.LANCHOR119
 10816 0bb0 00000000 		.word	.LANCHOR120
 10817 0bb4 00000000 		.word	.LANCHOR36
 10818 0bb8 00000000 		.word	.LANCHOR37
 10819 0bbc 00000000 		.word	.LANCHOR117
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 335


 10820 0bc0 00000000 		.word	.LANCHOR118
 10821 0bc4 00000000 		.word	.LANCHOR123
 10822 0bc8 00000000 		.word	.LANCHOR124
 10823 0bcc 00000000 		.word	0
 10824 0bd0 00000000 		.word	.LANCHOR46
 10825 0bd4 00000000 		.word	.LANCHOR47
 10826 0bd8 00000000 		.word	.LANCHOR115
 10827 0bdc 00000000 		.word	.LANCHOR116
 10828 0be0 00000000 		.word	.LANCHOR34
 10829 0be4 00000000 		.word	.LANCHOR35
 10830 0be8 00000000 		.word	.LANCHOR113
 10831 0bec 00000000 		.word	.LANCHOR114
 10832 0bf0 00000000 		.word	.LANCHOR121
 10833 0bf4 00000000 		.word	.LANCHOR122
 10834 0bf8 CDCC4C3E 		.word	1045220557
 10835 0bfc CDCC4CBE 		.word	3192704205
 10836              		.cfi_endproc
 10837              	.LFE4309:
 10839              		.section	.text._Z9HardLimitff,"ax",%progbits
 10840              		.align	1
 10841              		.p2align 2,,3
 10842              		.global	_Z9HardLimitff
 10843              		.syntax unified
 10844              		.thumb
 10845              		.thumb_func
 10846              		.fpu fpv5-d16
 10848              	_Z9HardLimitff:
 10849              	.LVL704:
 10850              	.LFB4334:
1813:Veno-Echo.cpp ****     float returnval{};
 10851              		.loc 20 1813 1 view -0
 10852              		.cfi_startproc
 10853              		@ args = 0, pretend = 0, frame = 0
 10854              		@ frame_needed = 0, uses_anonymous_args = 0
 10855              		@ link register save eliminated.
1814:Veno-Echo.cpp ****     if (input > limit)
 10856              		.loc 20 1814 5 view .LVU3066
1815:Veno-Echo.cpp ****         returnval = limit;
 10857              		.loc 20 1815 5 view .LVU3067
 10858 0000 B4EEE00A 		vcmpe.f32	s0, s1
 10859 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10860 0008 07DC     		bgt	.L579
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10861              		.loc 20 1817 10 view .LVU3068
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10862              		.loc 20 1817 28 is_stmt 0 view .LVU3069
 10863 000a F1EE600A 		vneg.f32	s1, s1
 10864              	.LVL705:
1817:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10865              		.loc 20 1817 10 view .LVU3070
 10866 000e F4EEC00A 		vcmpe.f32	s1, s0
 10867 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1820:Veno-Echo.cpp **** 
 10868              		.loc 20 1820 19 view .LVU3071
 10869 0016 70FE800A 		vselgt.f32	s1, s1, s0
 10870              	.L579:
 10871              	.LVL706:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 336


1822:Veno-Echo.cpp **** }
 10872              		.loc 20 1822 5 is_stmt 1 view .LVU3072
1823:Veno-Echo.cpp **** 
 10873              		.loc 20 1823 1 is_stmt 0 view .LVU3073
 10874 001a B0EE600A 		vmov.f32	s0, s1
 10875              	.LVL707:
1823:Veno-Echo.cpp **** 
 10876              		.loc 20 1823 1 view .LVU3074
 10877 001e 7047     		bx	lr
 10878              		.cfi_endproc
 10879              	.LFE4334:
 10881              		.section	.text._Z10PotCVComboff,"ax",%progbits
 10882              		.align	1
 10883              		.p2align 2,,3
 10884              		.global	_Z10PotCVComboff
 10885              		.syntax unified
 10886              		.thumb
 10887              		.thumb_func
 10888              		.fpu fpv5-d16
 10890              	_Z10PotCVComboff:
 10891              	.LVL708:
 10892              	.LFB4335:
1826:Veno-Echo.cpp ****     float output{};
 10893              		.loc 20 1826 1 is_stmt 1 view -0
 10894              		.cfi_startproc
 10895              		@ args = 0, pretend = 0, frame = 0
 10896              		@ frame_needed = 0, uses_anonymous_args = 0
 10897              		@ link register save eliminated.
1827:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10898              		.loc 20 1827 5 view .LVU3076
1828:Veno-Echo.cpp **** 
 10899              		.loc 20 1828 5 view .LVU3077
1828:Veno-Echo.cpp **** 
 10900              		.loc 20 1828 39 is_stmt 0 view .LVU3078
 10901 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1828:Veno-Echo.cpp **** 
 10902              		.loc 20 1828 49 view .LVU3079
 10903 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1828:Veno-Echo.cpp **** 
 10904              		.loc 20 1828 12 view .LVU3080
 10905 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1828:Veno-Echo.cpp **** 
 10906              		.loc 20 1828 39 view .LVU3081
 10907 000c 77EEE00A 		vsub.f32	s1, s15, s1
 10908              	.LVL709:
1828:Veno-Echo.cpp **** 
 10909              		.loc 20 1828 49 view .LVU3082
 10910 0010 70EEE60A 		vsub.f32	s1, s1, s13
1828:Veno-Echo.cpp **** 
 10911              		.loc 20 1828 12 view .LVU3083
 10912 0014 A0EE870A 		vfma.f32	s0, s1, s14
 10913              	.LVL710:
1830:Veno-Echo.cpp ****     {
 10914              		.loc 20 1830 5 is_stmt 1 view .LVU3084
 10915 0018 B5EEC00A 		vcmpe.f32	s0, #0
 10916 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10917 0020 06D4     		bmi	.L585
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 337


1835:Veno-Echo.cpp ****     {
 10918              		.loc 20 1835 5 view .LVU3085
1837:Veno-Echo.cpp ****     }
 10919              		.loc 20 1837 16 is_stmt 0 view .LVU3086
 10920 0022 B4EE670A 		vcmp.f32	s0, s15
 10921 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10922 002a 37FE800A 		vselgt.f32	s0, s15, s0
 10923              	.LVL711:
1837:Veno-Echo.cpp ****     }
 10924              		.loc 20 1837 16 view .LVU3087
 10925 002e 7047     		bx	lr
 10926              	.LVL712:
 10927              	.L585:
1832:Veno-Echo.cpp ****     }
 10928              		.loc 20 1832 16 view .LVU3088
 10929 0030 9FED010A 		vldr.32	s0, .L587
 10930              	.LVL713:
1840:Veno-Echo.cpp **** }
 10931              		.loc 20 1840 5 is_stmt 1 view .LVU3089
1841:Veno-Echo.cpp **** 
 10932              		.loc 20 1841 1 is_stmt 0 view .LVU3090
 10933 0034 7047     		bx	lr
 10934              	.L588:
 10935 0036 00BF     		.align	2
 10936              	.L587:
 10937 0038 00000000 		.word	0
 10938              		.cfi_endproc
 10939              	.LFE4335:
 10941              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 10942              		.align	1
 10943              		.p2align 2,,3
 10944              		.global	_Z16checkPickupStateffbb
 10945              		.syntax unified
 10946              		.thumb
 10947              		.thumb_func
 10948              		.fpu fpv5-d16
 10950              	_Z16checkPickupStateffbb:
 10951              	.LVL714:
 10952              	.LFB4336:
1845:Veno-Echo.cpp ****     bool retval{};
 10953              		.loc 20 1845 1 is_stmt 1 view -0
 10954              		.cfi_startproc
 10955              		@ args = 0, pretend = 0, frame = 0
 10956              		@ frame_needed = 0, uses_anonymous_args = 0
 10957              		@ link register save eliminated.
1846:Veno-Echo.cpp ****     
 10958              		.loc 20 1846 5 view .LVU3092
1848:Veno-Echo.cpp ****     {
 10959              		.loc 20 1848 5 view .LVU3093
 10960 0000 69B1     		cbz	r1, .L590
1850:Veno-Echo.cpp ****         {
 10961              		.loc 20 1850 9 view .LVU3094
 10962              	.LVL715:
 10963              	.LBB1964:
 10964              	.LBI1964:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 10965              		.loc 21 75 3 view .LVU3095
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 338


 10966              	.LBB1965:
 10967              		.loc 21 76 5 view .LVU3096
 10968              		.loc 21 76 5 is_stmt 0 view .LVU3097
 10969              	.LBE1965:
 10970              	.LBE1964:
1850:Veno-Echo.cpp ****         {
 10971              		.loc 20 1850 15 view .LVU3098
 10972 0002 70EE600A 		vsub.f32	s1, s0, s1
 10973              	.LVL716:
1850:Veno-Echo.cpp ****         {
 10974              		.loc 20 1850 9 view .LVU3099
 10975 0006 DFED0D7A 		vldr.32	s15, .L593
 10976              	.LBB1967:
 10977              	.LBB1966:
 10978              		.loc 21 76 31 view .LVU3100
 10979 000a B0EEE00A 		vabs.f32	s0, s1
 10980              	.LVL717:
 10981              		.loc 21 76 31 view .LVU3101
 10982              	.LBE1966:
 10983              	.LBE1967:
1850:Veno-Echo.cpp ****         {
 10984              		.loc 20 1850 9 view .LVU3102
 10985 000e B4EEE70A 		vcmpe.f32	s0, s15
 10986 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10987 0016 D4BF     		ite	le
 10988 0018 0120     		movle	r0, #1
 10989              	.LVL718:
1850:Veno-Echo.cpp ****         {
 10990              		.loc 20 1850 9 view .LVU3103
 10991 001a 0020     		movgt	r0, #0
 10992 001c 7047     		bx	lr
 10993              	.LVL719:
 10994              	.L590:
1862:Veno-Echo.cpp ****     {
 10995              		.loc 20 1862 5 is_stmt 1 view .LVU3104
 10996 001e 60B9     		cbnz	r0, .L591
1864:Veno-Echo.cpp ****         {
 10997              		.loc 20 1864 9 view .LVU3105
 10998              	.LVL720:
 10999              	.LBB1968:
 11000              	.LBI1968:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11001              		.loc 21 75 3 view .LVU3106
 11002              	.LBB1969:
 11003              		.loc 21 76 5 view .LVU3107
 11004              		.loc 21 76 5 is_stmt 0 view .LVU3108
 11005              	.LBE1969:
 11006              	.LBE1968:
1864:Veno-Echo.cpp ****         {
 11007              		.loc 20 1864 15 view .LVU3109
 11008 0020 30EE600A 		vsub.f32	s0, s0, s1
 11009              	.LVL721:
1864:Veno-Echo.cpp ****         {
 11010              		.loc 20 1864 9 view .LVU3110
 11011 0024 DFED057A 		vldr.32	s15, .L593
 11012              	.LBB1971:
 11013              	.LBB1970:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 339


 11014              		.loc 21 76 31 view .LVU3111
 11015 0028 B0EEC00A 		vabs.f32	s0, s0
 11016              	.LBE1970:
 11017              	.LBE1971:
1864:Veno-Echo.cpp ****         {
 11018              		.loc 20 1864 9 view .LVU3112
 11019 002c B4EEE70A 		vcmpe.f32	s0, s15
 11020 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11021 0034 CCBF     		ite	gt
 11022 0036 0120     		movgt	r0, #1
 11023              	.LVL722:
1864:Veno-Echo.cpp ****         {
 11024              		.loc 20 1864 9 view .LVU3113
 11025 0038 0020     		movle	r0, #0
 11026              	.L591:
 11027              	.LVL723:
1881:Veno-Echo.cpp **** 
 11028              		.loc 20 1881 5 is_stmt 1 view .LVU3114
1883:Veno-Echo.cpp **** 
 11029              		.loc 20 1883 1 is_stmt 0 view .LVU3115
 11030 003a 7047     		bx	lr
 11031              	.L594:
 11032              		.align	2
 11033              	.L593:
 11034 003c 0AD7A33B 		.word	1000593162
 11035              		.cfi_endproc
 11036              	.LFE4336:
 11038              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 11039              		.align	1
 11040              		.p2align 2,,3
 11041              		.global	_Z20checkPickupState_altff11pickupStateb
 11042              		.syntax unified
 11043              		.thumb
 11044              		.thumb_func
 11045              		.fpu fpv5-d16
 11047              	_Z20checkPickupState_altff11pickupStateb:
 11048              	.LVL724:
 11049              	.LFB4337:
1887:Veno-Echo.cpp ****     pickupState retval{};
 11050              		.loc 20 1887 1 is_stmt 1 view -0
 11051              		.cfi_startproc
 11052              		@ args = 0, pretend = 0, frame = 0
 11053              		@ frame_needed = 0, uses_anonymous_args = 0
 11054              		@ link register save eliminated.
1888:Veno-Echo.cpp **** 
 11055              		.loc 20 1888 5 view .LVU3117
1890:Veno-Echo.cpp ****     {
 11056              		.loc 20 1890 5 view .LVU3118
 11057 0000 A1B1     		cbz	r1, .L596
1892:Veno-Echo.cpp ****         {
 11058              		.loc 20 1892 9 view .LVU3119
1892:Veno-Echo.cpp ****         {
 11059              		.loc 20 1892 31 is_stmt 0 view .LVU3120
 11060 0002 DFED1A7A 		vldr.32	s15, .L613
 11061 0006 30EEE77A 		vsub.f32	s14, s1, s15
1892:Veno-Echo.cpp ****         {
 11062              		.loc 20 1892 9 view .LVU3121
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 340


 11063 000a B4EEC07A 		vcmpe.f32	s14, s0
 11064 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11065 0012 01DD     		ble	.L611
 11066 0014 0020     		movs	r0, #0
 11067              	.LVL725:
1892:Veno-Echo.cpp ****         {
 11068              		.loc 20 1892 9 view .LVU3122
 11069 0016 7047     		bx	lr
 11070              	.LVL726:
 11071              	.L611:
1897:Veno-Echo.cpp ****         {
 11072              		.loc 20 1897 14 is_stmt 1 view .LVU3123
1897:Veno-Echo.cpp ****         {
 11073              		.loc 20 1897 36 is_stmt 0 view .LVU3124
 11074 0018 70EEA70A 		vadd.f32	s1, s1, s15
 11075              	.LVL727:
1897:Veno-Echo.cpp ****         {
 11076              		.loc 20 1897 14 view .LVU3125
 11077 001c F4EEC00A 		vcmpe.f32	s1, s0
 11078 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1904:Veno-Echo.cpp ****         }
 11079              		.loc 20 1904 20 view .LVU3126
 11080 0024 4CBF     		ite	mi
 11081 0026 0120     		movmi	r0, #1
 11082              	.LVL728:
1904:Veno-Echo.cpp ****         }
 11083              		.loc 20 1904 20 view .LVU3127
 11084 0028 0220     		movpl	r0, #2
 11085 002a 7047     		bx	lr
 11086              	.LVL729:
 11087              	.L596:
1910:Veno-Echo.cpp ****         {
 11088              		.loc 20 1910 9 is_stmt 1 view .LVU3128
 11089 002c 0128     		cmp	r0, #1
 11090 002e 04D0     		beq	.L599
 11091 0030 0228     		cmp	r0, #2
 11092 0032 01D0     		beq	.L597
 11093 0034 68B1     		cbz	r0, .L612
 11094 0036 0846     		mov	r0, r1
 11095              	.LVL730:
 11096              	.L597:
1931:Veno-Echo.cpp **** }
 11097              		.loc 20 1931 5 view .LVU3129
1932:Veno-Echo.cpp **** 
 11098              		.loc 20 1932 1 is_stmt 0 view .LVU3130
 11099 0038 7047     		bx	lr
 11100              	.LVL731:
 11101              	.L599:
1919:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 11102              		.loc 20 1919 13 is_stmt 1 view .LVU3131
1920:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11103              		.loc 20 1920 13 view .LVU3132
1920:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11104              		.loc 20 1920 35 is_stmt 0 view .LVU3133
 11105 003a DFED0C7A 		vldr.32	s15, .L613
 11106 003e 70EEA70A 		vadd.f32	s1, s1, s15
 11107              	.LVL732:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 341


1920:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11108              		.loc 20 1920 13 view .LVU3134
 11109 0042 F4EEC00A 		vcmpe.f32	s1, s0
 11110 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11111 004a CCBF     		ite	gt
 11112 004c 0220     		movgt	r0, #2
 11113              	.LVL733:
1920:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11114              		.loc 20 1920 13 view .LVU3135
 11115 004e 0120     		movle	r0, #1
 11116 0050 7047     		bx	lr
 11117              	.LVL734:
 11118              	.L612:
1912:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 11119              		.loc 20 1912 13 is_stmt 1 view .LVU3136
1913:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11120              		.loc 20 1913 13 view .LVU3137
1913:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11121              		.loc 20 1913 35 is_stmt 0 view .LVU3138
 11122 0052 DFED067A 		vldr.32	s15, .L613
 11123 0056 70EEE70A 		vsub.f32	s1, s1, s15
 11124              	.LVL735:
1913:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11125              		.loc 20 1913 13 view .LVU3139
 11126 005a F4EEC00A 		vcmpe.f32	s1, s0
 11127 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11128 0062 4CBF     		ite	mi
 11129 0064 0220     		movmi	r0, #2
 11130              	.LVL736:
1913:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11131              		.loc 20 1913 13 view .LVU3140
 11132 0066 0020     		movpl	r0, #0
 11133 0068 7047     		bx	lr
 11134              	.L614:
 11135 006a 00BF     		.align	2
 11136              	.L613:
 11137 006c 0AD7A33B 		.word	1000593162
 11138              		.cfi_endproc
 11139              	.LFE4337:
 11141              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 11142              		.align	1
 11143              		.p2align 2,,3
 11144              		.global	_Z11GetTapRatio9TapRatios
 11145              		.syntax unified
 11146              		.thumb
 11147              		.thumb_func
 11148              		.fpu fpv5-d16
 11150              	_Z11GetTapRatio9TapRatios:
 11151              	.LVL737:
 11152              	.LFB4338:
1935:Veno-Echo.cpp **** float retVal{};
 11153              		.loc 20 1935 1 is_stmt 1 view -0
 11154              		.cfi_startproc
 11155              		@ args = 0, pretend = 0, frame = 0
 11156              		@ frame_needed = 0, uses_anonymous_args = 0
 11157              		@ link register save eliminated.
1936:Veno-Echo.cpp ****     switch(ratio)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 342


 11158              		.loc 20 1936 1 view .LVU3142
1937:Veno-Echo.cpp ****     {
 11159              		.loc 20 1937 5 view .LVU3143
 11160 0000 0138     		subs	r0, r0, #1
 11161              	.LVL738:
1937:Veno-Echo.cpp ****     {
 11162              		.loc 20 1937 5 is_stmt 0 view .LVU3144
 11163 0002 C0B2     		uxtb	r0, r0
 11164 0004 0228     		cmp	r0, #2
 11165 0006 05D8     		bhi	.L617
 11166 0008 044B     		ldr	r3, .L618
 11167 000a 03EB8000 		add	r0, r3, r0, lsl #2
 11168 000e 90ED000A 		vldr.32	s0, [r0]
 11169 0012 7047     		bx	lr
 11170              	.L617:
1935:Veno-Echo.cpp **** float retVal{};
 11171              		.loc 20 1935 1 view .LVU3145
 11172 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 11173              	.LVL739:
 11174              		.loc 20 1960 1 is_stmt 1 view .LVU3146
1961:Veno-Echo.cpp **** }
 11175              		.loc 20 1961 1 is_stmt 0 view .LVU3147
 11176 0018 7047     		bx	lr
 11177              	.L619:
 11178 001a 00BF     		.align	2
 11179              	.L618:
 11180 001c 00000000 		.word	.LANCHOR25
 11181              		.cfi_endproc
 11182              	.LFE4338:
 11184              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 11185              		.align	1
 11186              		.p2align 2,,3
 11187              		.syntax unified
 11188              		.thumb
 11189              		.thumb_func
 11190              		.fpu fpv5-d16
 11192              	_GLOBAL__sub_I_delMemsL:
 11193              	.LFB4917:
 11194              		.loc 20 1961 1 is_stmt 1 view -0
 11195              		.cfi_startproc
 11196              		@ args = 0, pretend = 0, frame = 0
 11197              		@ frame_needed = 0, uses_anonymous_args = 0
 11198              	.LBB2128:
 11199              	.LBI2128:
 11200              		.loc 20 1961 1 view .LVU3149
 11201              	.LVL740:
 11202              	.LBB2129:
 11203              	.LBB2130:
 11204              	.LBI2130:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 11205              		.loc 2 21 5 view .LVU3150
 11206              	.LBB2131:
 11207              	.LBB2132:
 11208              	.LBI2132:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11209              		.loc 6 36 5 view .LVU3151
 11210              	.LBE2132:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 343


 11211              	.LBE2131:
 11212              	.LBE2130:
 11213              	.LBE2129:
 11214              	.LBE2128:
 11215              		.loc 20 1961 1 is_stmt 0 view .LVU3152
 11216 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11217              		.cfi_def_cfa_offset 24
 11218              		.cfi_offset 4, -24
 11219              		.cfi_offset 5, -20
 11220              		.cfi_offset 6, -16
 11221              		.cfi_offset 7, -12
 11222              		.cfi_offset 8, -8
 11223              		.cfi_offset 14, -4
 11224              	.LBB2251:
 11225              	.LBB2247:
 11226              	.LBB2147:
 11227              	.LBB2145:
 11228              	.LBB2137:
 11229              	.LBB2133:
 11230              	.LBB2134:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11231              		.loc 6 36 35 view .LVU3153
 11232 0004 9648     		ldr	r0, .L622
 11233 0006 0026     		movs	r6, #0
 11234              	.LBE2134:
 11235              	.LBE2133:
 11236              	.LBE2137:
 11237              	.LBE2145:
 11238              	.LBE2147:
 11239              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 344


  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 11240              		.loc 26 33 18 view .LVU3154
 11241 0008 964C     		ldr	r4, .L622+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11242              		.loc 20 40 12 view .LVU3155
 11243 000a 974D     		ldr	r5, .L622+8
 11244              		.loc 26 33 18 view .LVU3156
 11245 000c 2246     		mov	r2, r4
 11246 000e 9749     		ldr	r1, .L622+12
 11247              	.LBB2148:
 11248              	.LBB2146:
 11249              	.LBB2138:
 11250              	.LBB2136:
 11251              	.LBB2135:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11252              		.loc 6 36 35 view .LVU3157
 11253 0010 4661     		str	r6, [r0, #20]
 11254              	.LVL741:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11255              		.loc 6 36 35 view .LVU3158
 11256              	.LBE2135:
 11257              	.LBE2136:
 11258              	.LBE2138:
 11259              	.LBB2139:
 11260              	.LBI2139:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11261              		.loc 5 84 5 is_stmt 1 view .LVU3159
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11262              		.loc 5 84 5 is_stmt 0 view .LVU3160
 11263              	.LBE2139:
 11264              	.LBB2140:
 11265              	.LBI2140:
 11266              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 345


  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 346


  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 11267              		.loc 27 83 5 is_stmt 1 view .LVU3161
 11268              	.LBB2141:
 11269              	.LBB2142:
 11270              		.loc 27 83 33 is_stmt 0 view .LVU3162
 11271 0012 0662     		str	r6, [r0, #32]
 11272              	.LVL742:
 11273              		.loc 27 83 33 view .LVU3163
 11274              	.LBE2142:
 11275              	.LBE2141:
 11276              	.LBE2140:
 11277              	.LBB2143:
 11278              	.LBI2143:
  40:../libdaisy/src/hid/usb.h **** 
 11279              		.loc 4 40 5 is_stmt 1 view .LVU3164
  40:../libdaisy/src/hid/usb.h **** 
 11280              		.loc 4 40 5 is_stmt 0 view .LVU3165
 11281              	.LBE2143:
 11282              	.LBB2144:
 11283              	.LBI2144:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11284              		.loc 3 56 5 is_stmt 1 view .LVU3166
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11285              		.loc 3 56 5 is_stmt 0 view .LVU3167
 11286              	.LBE2144:
 11287              	.LBE2146:
 11288              	.LBE2148:
 11289              		.loc 26 33 18 view .LVU3168
 11290 0014 FFF7FEFF 		bl	__aeabi_atexit
 11291              	.LVL743:
 11292              	.LBB2149:
 11293              	.LBI2149:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11294              		.loc 9 21 5 is_stmt 1 view .LVU3169
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11295              		.loc 9 21 5 is_stmt 0 view .LVU3170
 11296              	.LBE2149:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11297              		.loc 20 40 12 view .LVU3171
 11298 0018 2246     		mov	r2, r4
 11299 001a 2946     		mov	r1, r5
 11300 001c 9448     		ldr	r0, .L622+16
 11301 001e FFF7FEFF 		bl	__aeabi_atexit
 11302              	.LVL744:
 11303              	.LBB2150:
 11304              	.LBI2150:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11305              		.loc 9 21 5 is_stmt 1 view .LVU3172
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11306              		.loc 9 21 5 is_stmt 0 view .LVU3173
 11307              	.LBE2150:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 347


  41:Veno-Echo.cpp **** static Svf HPF_L;
 11308              		.loc 20 41 12 view .LVU3174
 11309 0022 2246     		mov	r2, r4
 11310 0024 2946     		mov	r1, r5
 11311 0026 9348     		ldr	r0, .L622+20
 11312 0028 FFF7FEFF 		bl	__aeabi_atexit
 11313              	.LVL745:
 11314              	.LBB2151:
 11315              	.LBI2151:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11316              		.loc 9 21 5 is_stmt 1 view .LVU3175
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11317              		.loc 9 21 5 is_stmt 0 view .LVU3176
 11318              	.LBE2151:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 11319              		.loc 20 42 12 view .LVU3177
 11320 002c 2246     		mov	r2, r4
 11321 002e 2946     		mov	r1, r5
 11322 0030 9148     		ldr	r0, .L622+24
 11323 0032 FFF7FEFF 		bl	__aeabi_atexit
 11324              	.LVL746:
 11325              	.LBB2152:
 11326              	.LBI2152:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11327              		.loc 9 21 5 is_stmt 1 view .LVU3178
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11328              		.loc 9 21 5 is_stmt 0 view .LVU3179
 11329              	.LBE2152:
  43:Veno-Echo.cpp **** 
 11330              		.loc 20 43 12 view .LVU3180
 11331 0036 2246     		mov	r2, r4
 11332 0038 2946     		mov	r1, r5
 11333 003a 9048     		ldr	r0, .L622+28
 11334 003c FFF7FEFF 		bl	__aeabi_atexit
 11335              	.LVL747:
 11336              	.LBB2153:
 11337              	.LBI2153:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11338              		.loc 9 21 5 is_stmt 1 view .LVU3181
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11339              		.loc 9 21 5 is_stmt 0 view .LVU3182
 11340              	.LBE2153:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 11341              		.loc 20 45 12 view .LVU3183
 11342 0040 2246     		mov	r2, r4
 11343 0042 2946     		mov	r1, r5
 11344 0044 8E48     		ldr	r0, .L622+32
 11345 0046 FFF7FEFF 		bl	__aeabi_atexit
 11346              	.LVL748:
 11347              	.LBB2154:
 11348              	.LBI2154:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11349              		.loc 9 21 5 is_stmt 1 view .LVU3184
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11350              		.loc 9 21 5 is_stmt 0 view .LVU3185
 11351              	.LBE2154:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 348


 11352              		.loc 20 46 12 view .LVU3186
 11353 004a 2246     		mov	r2, r4
 11354 004c 2946     		mov	r1, r5
 11355 004e 8D48     		ldr	r0, .L622+36
 11356 0050 FFF7FEFF 		bl	__aeabi_atexit
 11357              	.LVL749:
 11358              	.LBB2155:
 11359              	.LBI2155:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11360              		.loc 9 21 5 is_stmt 1 view .LVU3187
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11361              		.loc 9 21 5 is_stmt 0 view .LVU3188
 11362              	.LBE2155:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 11363              		.loc 20 47 12 view .LVU3189
 11364 0054 2246     		mov	r2, r4
 11365 0056 2946     		mov	r1, r5
 11366 0058 8B48     		ldr	r0, .L622+40
 11367 005a FFF7FEFF 		bl	__aeabi_atexit
 11368              	.LVL750:
 11369              	.LBB2156:
 11370              	.LBI2156:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11371              		.loc 9 21 5 is_stmt 1 view .LVU3190
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11372              		.loc 9 21 5 is_stmt 0 view .LVU3191
 11373              	.LBE2156:
  48:Veno-Echo.cpp **** 
 11374              		.loc 20 48 12 view .LVU3192
 11375 005e 2246     		mov	r2, r4
 11376 0060 2946     		mov	r1, r5
 11377 0062 8A48     		ldr	r0, .L622+44
 11378 0064 FFF7FEFF 		bl	__aeabi_atexit
 11379              	.LVL751:
 11380              	.LBB2157:
 11381              	.LBI2157:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11382              		.loc 8 15 5 is_stmt 1 view .LVU3193
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11383              		.loc 8 15 5 is_stmt 0 view .LVU3194
 11384              	.LBE2157:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11385              		.loc 20 50 19 view .LVU3195
 11386 0068 2246     		mov	r2, r4
 11387 006a 8949     		ldr	r1, .L622+48
 11388              	.LBB2158:
 11389              	.LBB2159:
 11390              	.LBB2160:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11391              		.loc 12 45 13 view .LVU3196
 11392 006c 0025     		movs	r5, #0
 11393              	.LBE2160:
 11394              	.LBE2159:
 11395              	.LBE2158:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11396              		.loc 20 50 19 view .LVU3197
 11397 006e 8948     		ldr	r0, .L622+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 349


 11398 0070 FFF7FEFF 		bl	__aeabi_atexit
 11399              	.LVL752:
 11400              	.LBB2165:
 11401              	.LBI2158:
  43:envFollow.h   ****     {
 11402              		.loc 12 43 5 is_stmt 1 view .LVU3198
 11403              	.LBB2163:
 11404              	.LBB2161:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11405              		.loc 12 45 9 view .LVU3199
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11406              		.loc 12 48 11 is_stmt 0 view .LVU3200
 11407 0074 884F     		ldr	r7, .L622+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11408              		.loc 12 45 13 view .LVU3201
 11409 0076 8948     		ldr	r0, .L622+60
 11410              	.LBE2161:
 11411              	.LBE2163:
 11412              	.LBE2165:
  51:Veno-Echo.cpp **** 
 11413              		.loc 20 51 18 view .LVU3202
 11414 0078 2246     		mov	r2, r4
 11415 007a 8949     		ldr	r1, .L622+64
 11416              	.LBB2166:
 11417              	.LBB2164:
 11418              	.LBB2162:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11419              		.loc 12 45 13 view .LVU3203
 11420 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11421              		.loc 12 46 9 is_stmt 1 view .LVU3204
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11422              		.loc 12 46 20 is_stmt 0 view .LVU3205
 11423 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11424              		.loc 12 47 9 is_stmt 1 view .LVU3206
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11425              		.loc 12 47 17 is_stmt 0 view .LVU3207
 11426 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11427              		.loc 12 48 9 is_stmt 1 view .LVU3208
  50:envFollow.h   ****     }  
 11428              		.loc 12 50 21 is_stmt 0 view .LVU3209
 11429 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11430              		.loc 12 48 11 view .LVU3210
 11431 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11432              		.loc 12 49 9 is_stmt 1 view .LVU3211
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11433              		.loc 12 49 15 is_stmt 0 view .LVU3212
 11434 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11435              		.loc 12 50 9 is_stmt 1 view .LVU3213
 11436              	.LVL753:
  50:envFollow.h   ****     }  
 11437              		.loc 12 50 9 is_stmt 0 view .LVU3214
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 350


 11438              	.LBE2162:
 11439              	.LBE2164:
 11440              	.LBE2166:
  51:Veno-Echo.cpp **** 
 11441              		.loc 20 51 18 view .LVU3215
 11442 0088 FFF7FEFF 		bl	__aeabi_atexit
 11443              	.LVL754:
 11444              	.LBB2167:
 11445              	.LBI2167:
  43:envFollow.h   ****     {
 11446              		.loc 12 43 5 is_stmt 1 view .LVU3216
 11447              	.LBB2168:
 11448              	.LBB2169:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11449              		.loc 12 45 9 view .LVU3217
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11450              		.loc 12 45 13 is_stmt 0 view .LVU3218
 11451 008c 8548     		ldr	r0, .L622+68
 11452              	.LBE2169:
 11453              	.LBE2168:
 11454              	.LBE2167:
  53:Veno-Echo.cpp **** 
 11455              		.loc 20 53 16 view .LVU3219
 11456 008e DFF8DC82 		ldr	r8, .L622+268
  51:Veno-Echo.cpp **** 
 11457              		.loc 20 51 27 view .LVU3220
 11458 0092 2246     		mov	r2, r4
 11459 0094 8249     		ldr	r1, .L622+64
 11460              	.LBB2172:
 11461              	.LBB2171:
 11462              	.LBB2170:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11463              		.loc 12 45 13 view .LVU3221
 11464 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11465              		.loc 12 46 9 is_stmt 1 view .LVU3222
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11466              		.loc 12 46 20 is_stmt 0 view .LVU3223
 11467 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11468              		.loc 12 47 9 is_stmt 1 view .LVU3224
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11469              		.loc 12 47 17 is_stmt 0 view .LVU3225
 11470 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11471              		.loc 12 48 9 is_stmt 1 view .LVU3226
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11472              		.loc 12 48 11 is_stmt 0 view .LVU3227
 11473 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11474              		.loc 12 49 9 is_stmt 1 view .LVU3228
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11475              		.loc 12 49 15 is_stmt 0 view .LVU3229
 11476 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11477              		.loc 12 50 9 is_stmt 1 view .LVU3230
  50:envFollow.h   ****     }  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 351


 11478              		.loc 12 50 21 is_stmt 0 view .LVU3231
 11479 00a0 8560     		str	r5, [r0, #8]	@ float
 11480              	.LVL755:
  50:envFollow.h   ****     }  
 11481              		.loc 12 50 21 view .LVU3232
 11482              	.LBE2170:
 11483              	.LBE2171:
 11484              	.LBE2172:
  51:Veno-Echo.cpp **** 
 11485              		.loc 20 51 27 view .LVU3233
 11486 00a2 FFF7FEFF 		bl	__aeabi_atexit
 11487              	.LVL756:
 11488              	.LBB2173:
 11489              	.LBI2173:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11490              		.loc 11 14 5 is_stmt 1 view .LVU3234
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11491              		.loc 11 14 5 is_stmt 0 view .LVU3235
 11492              	.LBE2173:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11493              		.loc 20 56 76 view .LVU3236
 11494 00a6 804F     		ldr	r7, .L622+72
  53:Veno-Echo.cpp **** 
 11495              		.loc 20 53 16 view .LVU3237
 11496 00a8 2246     		mov	r2, r4
 11497 00aa 4146     		mov	r1, r8
 11498 00ac 7F48     		ldr	r0, .L622+76
 11499 00ae FFF7FEFF 		bl	__aeabi_atexit
 11500              	.LVL757:
 11501              	.LBB2174:
 11502              	.LBI2174:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11503              		.loc 11 14 5 is_stmt 1 view .LVU3238
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11504              		.loc 11 14 5 is_stmt 0 view .LVU3239
 11505              	.LBE2174:
  53:Veno-Echo.cpp **** 
 11506              		.loc 20 53 29 view .LVU3240
 11507 00b2 2246     		mov	r2, r4
 11508 00b4 4146     		mov	r1, r8
 11509 00b6 7E48     		ldr	r0, .L622+80
 11510 00b8 FFF7FEFF 		bl	__aeabi_atexit
 11511              	.LVL758:
 11512              	.LBB2175:
 11513              	.LBI2175:
  48:delayline_multitap.h ****     {
 11514              		.loc 18 48 5 is_stmt 1 view .LVU3241
  48:delayline_multitap.h ****     {
 11515              		.loc 18 48 5 is_stmt 0 view .LVU3242
 11516              	.LBE2175:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11517              		.loc 20 59 80 view .LVU3243
 11518 00bc 7D4D     		ldr	r5, .L622+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11519              		.loc 20 56 76 view .LVU3244
 11520 00be 2246     		mov	r2, r4
 11521 00c0 3946     		mov	r1, r7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 352


 11522 00c2 7D48     		ldr	r0, .L622+88
 11523 00c4 FFF7FEFF 		bl	__aeabi_atexit
 11524              	.LVL759:
 11525              	.LBB2176:
 11526              	.LBI2176:
  48:delayline_multitap.h ****     {
 11527              		.loc 18 48 5 is_stmt 1 view .LVU3245
  48:delayline_multitap.h ****     {
 11528              		.loc 18 48 5 is_stmt 0 view .LVU3246
 11529              	.LBE2176:
  57:Veno-Echo.cpp **** 
 11530              		.loc 20 57 76 view .LVU3247
 11531 00c8 2246     		mov	r2, r4
 11532 00ca 3946     		mov	r1, r7
 11533 00cc 7B48     		ldr	r0, .L622+92
 11534 00ce FFF7FEFF 		bl	__aeabi_atexit
 11535              	.LVL760:
 11536              	.LBB2177:
 11537              	.LBI2177:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11538              		.loc 19 38 5 is_stmt 1 view .LVU3248
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11539              		.loc 19 38 5 is_stmt 0 view .LVU3249
 11540              	.LBE2177:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11541              		.loc 20 98 12 view .LVU3250
 11542 00d2 7B4F     		ldr	r7, .L622+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11543              		.loc 20 59 80 view .LVU3251
 11544 00d4 2246     		mov	r2, r4
 11545 00d6 2946     		mov	r1, r5
 11546 00d8 7A48     		ldr	r0, .L622+100
 11547 00da FFF7FEFF 		bl	__aeabi_atexit
 11548              	.LVL761:
 11549              	.LBB2178:
 11550              	.LBI2178:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11551              		.loc 19 38 5 is_stmt 1 view .LVU3252
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11552              		.loc 19 38 5 is_stmt 0 view .LVU3253
 11553              	.LBE2178:
  60:Veno-Echo.cpp **** 
 11554              		.loc 20 60 80 view .LVU3254
 11555 00de 2246     		mov	r2, r4
 11556 00e0 2946     		mov	r1, r5
 11557 00e2 7948     		ldr	r0, .L622+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11558              		.loc 20 102 11 view .LVU3255
 11559 00e4 794D     		ldr	r5, .L622+108
  60:Veno-Echo.cpp **** 
 11560              		.loc 20 60 80 view .LVU3256
 11561 00e6 FFF7FEFF 		bl	__aeabi_atexit
 11562              	.LVL762:
 11563              	.LBB2179:
 11564              	.LBI2179:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11565              		.loc 17 49 1 is_stmt 1 view .LVU3257
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 353


 11566              	.LBB2180:
 11567              	.LBB2181:
 11568              	.LBI2181:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11569              		.loc 14 47 1 view .LVU3258
 11570              	.LBB2182:
 11571              	.LBB2183:
 11572              	.LBI2183:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11573              		.loc 16 24 5 view .LVU3259
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11574              		.loc 16 24 5 is_stmt 0 view .LVU3260
 11575              	.LBE2183:
 11576              	.LBB2184:
 11577              	.LBI2184:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11578              		.loc 15 15 5 is_stmt 1 view .LVU3261
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11579              		.loc 15 15 5 is_stmt 0 view .LVU3262
 11580              	.LBE2184:
 11581              	.LBE2182:
 11582              	.LBE2181:
 11583              	.LBE2180:
 11584              	.LBE2179:
 11585              	.LBE2247:
 11586              	.LBE2251:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11587              		.loc 17 49 14 is_stmt 1 view .LVU3263
  49:DelayMulti.h  **** ~DelayMulti() {}
 11588              		.loc 17 49 14 view .LVU3264
 11589              	.LBB2252:
 11590              	.LBB2248:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11591              		.loc 20 98 12 is_stmt 0 view .LVU3265
 11592 00ea 2246     		mov	r2, r4
 11593 00ec 3946     		mov	r1, r7
 11594 00ee 7848     		ldr	r0, .L622+112
 11595 00f0 FFF7FEFF 		bl	__aeabi_atexit
 11596              	.LVL763:
 11597              	.LBB2185:
 11598              	.LBI2185:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11599              		.loc 17 49 1 is_stmt 1 view .LVU3266
 11600              	.LBB2186:
 11601              	.LBB2187:
 11602              	.LBI2187:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11603              		.loc 14 47 1 view .LVU3267
 11604              	.LBB2188:
 11605              	.LBB2189:
 11606              	.LBI2189:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11607              		.loc 16 24 5 view .LVU3268
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11608              		.loc 16 24 5 is_stmt 0 view .LVU3269
 11609              	.LBE2189:
 11610              	.LBB2190:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 354


 11611              	.LBI2190:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11612              		.loc 15 15 5 is_stmt 1 view .LVU3270
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11613              		.loc 15 15 5 is_stmt 0 view .LVU3271
 11614              	.LBE2190:
 11615              	.LBE2188:
 11616              	.LBE2187:
 11617              	.LBE2186:
 11618              	.LBE2185:
 11619              	.LBE2248:
 11620              	.LBE2252:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11621              		.loc 17 49 14 is_stmt 1 view .LVU3272
  49:DelayMulti.h  **** ~DelayMulti() {}
 11622              		.loc 17 49 14 view .LVU3273
 11623              	.LBB2253:
 11624              	.LBB2249:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11625              		.loc 20 98 19 is_stmt 0 view .LVU3274
 11626 00f4 2246     		mov	r2, r4
 11627 00f6 3946     		mov	r1, r7
 11628 00f8 7648     		ldr	r0, .L622+116
 11629 00fa FFF7FEFF 		bl	__aeabi_atexit
 11630              	.LVL764:
 11631              	.LBB2191:
 11632              	.LBI2191:
  78:LEDs.h        ****     ~ButtonLED() {}
 11633              		.loc 14 78 5 is_stmt 1 view .LVU3275
 11634              	.LBB2192:
 11635              	.LBB2193:
 11636              	.LBI2193:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11637              		.loc 1 40 5 view .LVU3276
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11638              		.loc 1 40 5 is_stmt 0 view .LVU3277
 11639              	.LBE2193:
 11640              	.LBB2194:
 11641              	.LBI2194:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11642              		.loc 16 24 5 is_stmt 1 view .LVU3278
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11643              		.loc 16 24 5 is_stmt 0 view .LVU3279
 11644              	.LBE2194:
 11645              	.LBE2192:
 11646              	.LBE2191:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11647              		.loc 20 102 11 view .LVU3280
 11648 00fe 2246     		mov	r2, r4
 11649 0100 2946     		mov	r1, r5
 11650 0102 7548     		ldr	r0, .L622+120
 11651 0104 FFF7FEFF 		bl	__aeabi_atexit
 11652              	.LVL765:
 11653              	.LBB2195:
 11654              	.LBI2195:
  78:LEDs.h        ****     ~ButtonLED() {}
 11655              		.loc 14 78 5 is_stmt 1 view .LVU3281
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 355


 11656              	.LBB2196:
 11657              	.LBB2197:
 11658              	.LBI2197:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11659              		.loc 1 40 5 view .LVU3282
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11660              		.loc 1 40 5 is_stmt 0 view .LVU3283
 11661              	.LBE2197:
 11662              	.LBB2198:
 11663              	.LBI2198:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11664              		.loc 16 24 5 is_stmt 1 view .LVU3284
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11665              		.loc 16 24 5 is_stmt 0 view .LVU3285
 11666              	.LBE2198:
 11667              	.LBE2196:
 11668              	.LBE2195:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11669              		.loc 20 102 18 view .LVU3286
 11670 0108 2246     		mov	r2, r4
 11671 010a 2946     		mov	r1, r5
 11672 010c 7348     		ldr	r0, .L622+124
 11673 010e FFF7FEFF 		bl	__aeabi_atexit
 11674              	.LVL766:
 11675              	.LBB2199:
 11676              	.LBI2199:
  78:LEDs.h        ****     ~ButtonLED() {}
 11677              		.loc 14 78 5 is_stmt 1 view .LVU3287
 11678              	.LBB2200:
 11679              	.LBB2201:
 11680              	.LBI2201:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11681              		.loc 1 40 5 view .LVU3288
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11682              		.loc 1 40 5 is_stmt 0 view .LVU3289
 11683              	.LBE2201:
 11684              	.LBB2202:
 11685              	.LBI2202:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11686              		.loc 16 24 5 is_stmt 1 view .LVU3290
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11687              		.loc 16 24 5 is_stmt 0 view .LVU3291
 11688              	.LBE2202:
 11689              	.LBE2200:
 11690              	.LBE2199:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11691              		.loc 20 102 25 view .LVU3292
 11692 0112 2246     		mov	r2, r4
 11693 0114 2946     		mov	r1, r5
 11694 0116 7248     		ldr	r0, .L622+128
 11695 0118 FFF7FEFF 		bl	__aeabi_atexit
 11696              	.LVL767:
 11697              	.LBB2203:
 11698              	.LBI2203:
  78:LEDs.h        ****     ~ButtonLED() {}
 11699              		.loc 14 78 5 is_stmt 1 view .LVU3293
 11700              	.LBB2204:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 356


 11701              	.LBB2205:
 11702              	.LBI2205:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11703              		.loc 1 40 5 view .LVU3294
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11704              		.loc 1 40 5 is_stmt 0 view .LVU3295
 11705              	.LBE2205:
 11706              	.LBB2206:
 11707              	.LBI2206:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11708              		.loc 16 24 5 is_stmt 1 view .LVU3296
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11709              		.loc 16 24 5 is_stmt 0 view .LVU3297
 11710              	.LBE2206:
 11711              	.LBE2204:
 11712              	.LBE2203:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11713              		.loc 20 102 34 view .LVU3298
 11714 011c 2246     		mov	r2, r4
 11715 011e 2946     		mov	r1, r5
 11716 0120 7048     		ldr	r0, .L622+132
 11717 0122 FFF7FEFF 		bl	__aeabi_atexit
 11718              	.LVL768:
 11719              	.LBB2207:
 11720              	.LBI2207:
  78:LEDs.h        ****     ~ButtonLED() {}
 11721              		.loc 14 78 5 is_stmt 1 view .LVU3299
 11722              	.LBB2208:
 11723              	.LBB2209:
 11724              	.LBI2209:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11725              		.loc 1 40 5 view .LVU3300
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11726              		.loc 1 40 5 is_stmt 0 view .LVU3301
 11727              	.LBE2209:
 11728              	.LBB2210:
 11729              	.LBI2210:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11730              		.loc 16 24 5 is_stmt 1 view .LVU3302
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11731              		.loc 16 24 5 is_stmt 0 view .LVU3303
 11732              	.LBE2210:
 11733              	.LBE2208:
 11734              	.LBE2207:
 144:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 11735              		.loc 20 144 13 view .LVU3304
 11736 0126 704F     		ldr	r7, .L622+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11737              		.loc 20 102 44 view .LVU3305
 11738 0128 2246     		mov	r2, r4
 11739 012a 2946     		mov	r1, r5
 11740 012c 6F48     		ldr	r0, .L622+140
 11741 012e FFF7FEFF 		bl	__aeabi_atexit
 11742              	.LVL769:
 11743              	.LBB2211:
 11744              	.LBI2211:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 357


 11745              		.loc 14 47 1 is_stmt 1 view .LVU3306
 11746              	.LBB2212:
 11747              	.LBB2213:
 11748              	.LBI2213:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11749              		.loc 16 24 5 view .LVU3307
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11750              		.loc 16 24 5 is_stmt 0 view .LVU3308
 11751              	.LBE2213:
 11752              	.LBB2214:
 11753              	.LBI2214:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11754              		.loc 15 15 5 is_stmt 1 view .LVU3309
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11755              		.loc 15 15 5 is_stmt 0 view .LVU3310
 11756              	.LBE2214:
 11757              	.LBE2212:
 11758              	.LBE2211:
 103:Veno-Echo.cpp **** 
 11759              		.loc 20 103 10 view .LVU3311
 11760 0132 2246     		mov	r2, r4
 11761 0134 6E49     		ldr	r1, .L622+144
 11762 0136 6F48     		ldr	r0, .L622+148
 11763 0138 FFF7FEFF 		bl	__aeabi_atexit
 11764              	.LVL770:
 11765              	.LBB2215:
 11766              	.LBI2215:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11767              		.loc 7 38 5 is_stmt 1 view .LVU3312
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11768              		.loc 7 38 5 is_stmt 0 view .LVU3313
 11769              	.LBE2215:
 144:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 11770              		.loc 20 144 13 view .LVU3314
 11771 013c 2246     		mov	r2, r4
 11772 013e 3946     		mov	r1, r7
 11773 0140 6D48     		ldr	r0, .L622+152
 11774 0142 FFF7FEFF 		bl	__aeabi_atexit
 11775              	.LVL771:
 11776              	.LBB2216:
 11777              	.LBI2216:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11778              		.loc 7 38 5 is_stmt 1 view .LVU3315
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11779              		.loc 7 38 5 is_stmt 0 view .LVU3316
 11780              	.LBE2216:
 145:Veno-Echo.cpp **** 
 11781              		.loc 20 145 13 view .LVU3317
 11782 0146 2246     		mov	r2, r4
 11783 0148 3946     		mov	r1, r7
 11784 014a 6C48     		ldr	r0, .L622+156
 150:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 11785              		.loc 20 150 18 view .LVU3318
 11786 014c 6C4D     		ldr	r5, .L622+160
 145:Veno-Echo.cpp **** 
 11787              		.loc 20 145 13 view .LVU3319
 11788 014e FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 358


 11789              	.LVL772:
 11790              	.LBB2217:
 11791              	.LBI2217:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11792              		.loc 7 38 5 is_stmt 1 view .LVU3320
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11793              		.loc 7 38 5 is_stmt 0 view .LVU3321
 11794              	.LBE2217:
 147:Veno-Echo.cpp **** static Adsr HPF_Env;
 11795              		.loc 20 147 13 view .LVU3322
 11796 0152 2246     		mov	r2, r4
 11797 0154 3946     		mov	r1, r7
 11798 0156 6B48     		ldr	r0, .L622+164
 11799 0158 FFF7FEFF 		bl	__aeabi_atexit
 11800              	.LVL773:
 11801              	.LBB2218:
 11802              	.LBI2218:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11803              		.loc 7 38 5 is_stmt 1 view .LVU3323
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11804              		.loc 7 38 5 is_stmt 0 view .LVU3324
 11805              	.LBE2218:
 148:Veno-Echo.cpp **** 
 11806              		.loc 20 148 13 view .LVU3325
 11807 015c 2246     		mov	r2, r4
 11808 015e 3946     		mov	r1, r7
 11809 0160 6948     		ldr	r0, .L622+168
 11810 0162 FFF7FEFF 		bl	__aeabi_atexit
 11811              	.LVL774:
 11812              	.LBB2219:
 11813              	.LBI2219:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11814              		.loc 10 36 5 is_stmt 1 view .LVU3326
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11815              		.loc 10 36 5 is_stmt 0 view .LVU3327
 11816              	.LBE2219:
 150:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 11817              		.loc 20 150 18 view .LVU3328
 11818 0166 2246     		mov	r2, r4
 11819 0168 2946     		mov	r1, r5
 11820 016a 6848     		ldr	r0, .L622+172
 11821 016c FFF7FEFF 		bl	__aeabi_atexit
 11822              	.LVL775:
 11823              	.LBB2220:
 11824              	.LBI2220:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11825              		.loc 10 36 5 is_stmt 1 view .LVU3329
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11826              		.loc 10 36 5 is_stmt 0 view .LVU3330
 11827              	.LBE2220:
 151:Veno-Echo.cpp **** 
 11828              		.loc 20 151 18 view .LVU3331
 11829 0170 2246     		mov	r2, r4
 11830 0172 2946     		mov	r1, r5
 11831 0174 6648     		ldr	r0, .L622+176
 11832 0176 FFF7FEFF 		bl	__aeabi_atexit
 11833              	.LVL776:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 359


 11834              	.LBB2221:
 11835              	.LBI2221:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11836              		.loc 10 36 5 is_stmt 1 view .LVU3332
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11837              		.loc 10 36 5 is_stmt 0 view .LVU3333
 11838              	.LBE2221:
 153:Veno-Echo.cpp **** 
 11839              		.loc 20 153 18 view .LVU3334
 11840 017a 2246     		mov	r2, r4
 11841 017c 2946     		mov	r1, r5
 11842 017e 6548     		ldr	r0, .L622+180
 11843 0180 FFF7FEFF 		bl	__aeabi_atexit
 11844              	.LVL777:
 11845              	.LBB2222:
 11846              	.LBI2222:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11847              		.loc 10 36 5 is_stmt 1 view .LVU3335
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11848              		.loc 10 36 5 is_stmt 0 view .LVU3336
 11849              	.LBE2222:
 156:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 11850              		.loc 20 156 18 view .LVU3337
 11851 0184 2246     		mov	r2, r4
 11852 0186 2946     		mov	r1, r5
 11853 0188 6348     		ldr	r0, .L622+184
 11854 018a FFF7FEFF 		bl	__aeabi_atexit
 11855              	.LVL778:
 11856              	.LBB2223:
 11857              	.LBI2223:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11858              		.loc 10 36 5 is_stmt 1 view .LVU3338
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11859              		.loc 10 36 5 is_stmt 0 view .LVU3339
 11860              	.LBE2223:
 157:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 11861              		.loc 20 157 18 view .LVU3340
 11862 018e 2246     		mov	r2, r4
 11863 0190 2946     		mov	r1, r5
 11864 0192 6248     		ldr	r0, .L622+188
 11865 0194 FFF7FEFF 		bl	__aeabi_atexit
 11866              	.LVL779:
 11867              	.LBB2224:
 11868              	.LBI2224:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11869              		.loc 10 36 5 is_stmt 1 view .LVU3341
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11870              		.loc 10 36 5 is_stmt 0 view .LVU3342
 11871              	.LBE2224:
 158:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 11872              		.loc 20 158 18 view .LVU3343
 11873 0198 2246     		mov	r2, r4
 11874 019a 2946     		mov	r1, r5
 11875 019c 6048     		ldr	r0, .L622+192
 11876 019e FFF7FEFF 		bl	__aeabi_atexit
 11877              	.LVL780:
 11878              	.LBB2225:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 360


 11879              	.LBI2225:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11880              		.loc 10 36 5 is_stmt 1 view .LVU3344
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11881              		.loc 10 36 5 is_stmt 0 view .LVU3345
 11882              	.LBE2225:
 159:Veno-Echo.cpp **** 
 11883              		.loc 20 159 18 view .LVU3346
 11884 01a2 2246     		mov	r2, r4
 11885 01a4 2946     		mov	r1, r5
 11886 01a6 5F48     		ldr	r0, .L622+196
 11887 01a8 FFF7FEFF 		bl	__aeabi_atexit
 11888              	.LVL781:
 11889              	.LBB2226:
 11890              	.LBI2226:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11891              		.loc 10 36 5 is_stmt 1 view .LVU3347
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11892              		.loc 10 36 5 is_stmt 0 view .LVU3348
 11893              	.LBE2226:
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 11894              		.loc 20 162 18 view .LVU3349
 11895 01ac 2246     		mov	r2, r4
 11896 01ae 2946     		mov	r1, r5
 11897 01b0 5D48     		ldr	r0, .L622+200
 11898 01b2 FFF7FEFF 		bl	__aeabi_atexit
 11899              	.LVL782:
 11900              	.LBB2227:
 11901              	.LBI2227:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11902              		.loc 10 36 5 is_stmt 1 view .LVU3350
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11903              		.loc 10 36 5 is_stmt 0 view .LVU3351
 11904              	.LBE2227:
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 11905              		.loc 20 163 18 view .LVU3352
 11906 01b6 2246     		mov	r2, r4
 11907 01b8 2946     		mov	r1, r5
 11908 01ba 5C48     		ldr	r0, .L622+204
 11909 01bc FFF7FEFF 		bl	__aeabi_atexit
 11910              	.LVL783:
 11911              	.LBB2228:
 11912              	.LBI2228:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11913              		.loc 10 36 5 is_stmt 1 view .LVU3353
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11914              		.loc 10 36 5 is_stmt 0 view .LVU3354
 11915              	.LBE2228:
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 11916              		.loc 20 164 18 view .LVU3355
 11917 01c0 2246     		mov	r2, r4
 11918 01c2 2946     		mov	r1, r5
 11919 01c4 5A48     		ldr	r0, .L622+208
 11920 01c6 FFF7FEFF 		bl	__aeabi_atexit
 11921              	.LVL784:
 11922              	.LBB2229:
 11923              	.LBI2229:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 361


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11924              		.loc 10 36 5 is_stmt 1 view .LVU3356
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11925              		.loc 10 36 5 is_stmt 0 view .LVU3357
 11926              	.LBE2229:
 165:Veno-Echo.cpp **** 
 11927              		.loc 20 165 18 view .LVU3358
 11928 01ca 2246     		mov	r2, r4
 11929 01cc 2946     		mov	r1, r5
 11930 01ce 5948     		ldr	r0, .L622+212
 11931 01d0 FFF7FEFF 		bl	__aeabi_atexit
 11932              	.LVL785:
 11933              	.LBB2230:
 11934              	.LBI2230:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11935              		.loc 10 36 5 is_stmt 1 view .LVU3359
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11936              		.loc 10 36 5 is_stmt 0 view .LVU3360
 11937              	.LBE2230:
 168:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 11938              		.loc 20 168 18 view .LVU3361
 11939 01d4 2246     		mov	r2, r4
 11940 01d6 2946     		mov	r1, r5
 11941 01d8 5748     		ldr	r0, .L622+216
 11942 01da FFF7FEFF 		bl	__aeabi_atexit
 11943              	.LVL786:
 11944              	.LBB2231:
 11945              	.LBI2231:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11946              		.loc 10 36 5 is_stmt 1 view .LVU3362
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11947              		.loc 10 36 5 is_stmt 0 view .LVU3363
 11948              	.LBE2231:
 169:Veno-Echo.cpp **** 
 11949              		.loc 20 169 18 view .LVU3364
 11950 01de 2246     		mov	r2, r4
 11951 01e0 2946     		mov	r1, r5
 11952 01e2 5648     		ldr	r0, .L622+220
 11953 01e4 FFF7FEFF 		bl	__aeabi_atexit
 11954              	.LVL787:
 11955              	.LBB2232:
 11956              	.LBI2232:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11957              		.loc 10 36 5 is_stmt 1 view .LVU3365
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11958              		.loc 10 36 5 is_stmt 0 view .LVU3366
 11959              	.LBE2232:
 175:Veno-Echo.cpp **** Switch ReverseGateR;
 11960              		.loc 20 175 8 view .LVU3367
 11961 01e8 554F     		ldr	r7, .L622+224
 171:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 11962              		.loc 20 171 18 view .LVU3368
 11963 01ea 2246     		mov	r2, r4
 11964 01ec 2946     		mov	r1, r5
 11965 01ee 5548     		ldr	r0, .L622+228
 11966 01f0 FFF7FEFF 		bl	__aeabi_atexit
 11967              	.LVL788:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 362


 11968              	.LBB2233:
 11969              	.LBI2233:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11970              		.loc 10 36 5 is_stmt 1 view .LVU3369
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11971              		.loc 10 36 5 is_stmt 0 view .LVU3370
 11972              	.LBE2233:
 172:Veno-Echo.cpp **** 
 11973              		.loc 20 172 18 view .LVU3371
 11974 01f4 2246     		mov	r2, r4
 11975 01f6 2946     		mov	r1, r5
 11976 01f8 5348     		ldr	r0, .L622+232
 11977 01fa FFF7FEFF 		bl	__aeabi_atexit
 11978              	.LVL789:
 11979              	.LBB2234:
 11980              	.LBI2234:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11981              		.loc 1 40 5 is_stmt 1 view .LVU3372
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11982              		.loc 1 40 5 is_stmt 0 view .LVU3373
 11983              	.LBE2234:
 175:Veno-Echo.cpp **** Switch ReverseGateR;
 11984              		.loc 20 175 8 view .LVU3374
 11985 01fe 2246     		mov	r2, r4
 11986 0200 3946     		mov	r1, r7
 11987 0202 5248     		ldr	r0, .L622+236
 11988 0204 FFF7FEFF 		bl	__aeabi_atexit
 11989              	.LVL790:
 11990              	.LBB2235:
 11991              	.LBI2235:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11992              		.loc 1 40 5 is_stmt 1 view .LVU3375
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11993              		.loc 1 40 5 is_stmt 0 view .LVU3376
 11994              	.LBE2235:
 176:Veno-Echo.cpp **** 
 11995              		.loc 20 176 8 view .LVU3377
 11996 0208 2246     		mov	r2, r4
 11997 020a 3946     		mov	r1, r7
 11998 020c 5048     		ldr	r0, .L622+240
 11999 020e FFF7FEFF 		bl	__aeabi_atexit
 12000              	.LVL791:
 12001              	.LBB2236:
 12002              	.LBI2236:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12003              		.loc 1 40 5 is_stmt 1 view .LVU3378
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12004              		.loc 1 40 5 is_stmt 0 view .LVU3379
 12005              	.LBE2236:
 179:Veno-Echo.cpp **** Switch ClockIn;
 12006              		.loc 20 179 8 view .LVU3380
 12007 0212 2246     		mov	r2, r4
 12008 0214 3946     		mov	r1, r7
 12009 0216 4F48     		ldr	r0, .L622+244
 12010 0218 FFF7FEFF 		bl	__aeabi_atexit
 12011              	.LVL792:
 12012              	.LBB2237:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 363


 12013              	.LBI2237:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12014              		.loc 1 40 5 is_stmt 1 view .LVU3381
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12015              		.loc 1 40 5 is_stmt 0 view .LVU3382
 12016              	.LBE2237:
 180:Veno-Echo.cpp **** 
 12017              		.loc 20 180 8 view .LVU3383
 12018 021c 2246     		mov	r2, r4
 12019 021e 3946     		mov	r1, r7
 12020 0220 4D48     		ldr	r0, .L622+248
 12021 0222 FFF7FEFF 		bl	__aeabi_atexit
 12022              	.LVL793:
 12023              	.LBB2238:
 12024              	.LBI2238:
  42:taptempo.h    ****     {
 12025              		.loc 13 42 5 is_stmt 1 view .LVU3384
 12026              	.LBB2239:
 12027              	.LBB2240:
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12028              		.loc 13 44 9 view .LVU3385
  52:taptempo.h    ****         clockLength_ = 0;
 12029              		.loc 13 52 19 is_stmt 0 view .LVU3386
 12030 0226 4FF07E55 		mov	r5, #1065353216
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12031              		.loc 13 44 18 view .LVU3387
 12032 022a 4C48     		ldr	r0, .L622+252
  46:taptempo.h    ****         mintap_ = 80;
 12033              		.loc 13 46 17 view .LVU3388
 12034 022c 4FF4FA6E 		mov	lr, #2000
  45:taptempo.h    ****         maxtap_ = 2000;
 12035              		.loc 13 45 24 view .LVU3389
 12036 0230 4B49     		ldr	r1, .L622+256
  47:taptempo.h    ****         lastTapLength_ = 0;
 12037              		.loc 13 47 17 view .LVU3390
 12038 0232 4FF0500C 		mov	ip, #80
  49:taptempo.h    ****         lastTime_ = 0;
 12039              		.loc 13 49 16 view .LVU3391
 12040 0236 4B4F     		ldr	r7, .L622+260
  55:taptempo.h    ****     }
 12041              		.loc 13 55 22 view .LVU3392
 12042 0238 0A23     		movs	r3, #10
 12043              	.LBE2240:
 12044              	.LBE2239:
 12045              	.LBE2238:
 183:Veno-Echo.cpp **** 
 12046              		.loc 20 183 10 view .LVU3393
 12047 023a 2246     		mov	r2, r4
 12048              	.LBB2245:
 12049              	.LBB2243:
 12050              	.LBB2241:
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12051              		.loc 13 44 18 view .LVU3394
 12052 023c 80F82460 		strb	r6, [r0, #36]
  45:taptempo.h    ****         maxtap_ = 2000;
 12053              		.loc 13 45 9 is_stmt 1 view .LVU3395
  51:taptempo.h    ****         tapRatio_ = 1.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 364


 12054              		.loc 13 51 22 is_stmt 0 view .LVU3396
 12055 0240 8660     		str	r6, [r0, #8]
  45:taptempo.h    ****         maxtap_ = 2000;
 12056              		.loc 13 45 24 view .LVU3397
 12057 0242 8162     		str	r1, [r0, #40]	@ float
  46:taptempo.h    ****         mintap_ = 80;
 12058              		.loc 13 46 9 is_stmt 1 view .LVU3398
  49:taptempo.h    ****         lastTime_ = 0;
 12059              		.loc 13 49 16 is_stmt 0 view .LVU3399
 12060 0244 C762     		str	r7, [r0, #44]	@ float
  52:taptempo.h    ****         clockLength_ = 0;
 12061              		.loc 13 52 19 view .LVU3400
 12062 0246 0563     		str	r5, [r0, #48]	@ float
 12063              	.LBE2241:
 12064              	.LBE2243:
 12065              	.LBE2245:
 183:Veno-Echo.cpp **** 
 12066              		.loc 20 183 10 view .LVU3401
 12067 0248 4749     		ldr	r1, .L622+264
 12068              	.LBB2246:
 12069              	.LBB2244:
 12070              	.LBB2242:
  55:taptempo.h    ****     }
 12071              		.loc 13 55 22 view .LVU3402
 12072 024a 0362     		str	r3, [r0, #32]
  50:taptempo.h    ****         currentTime_ = 0;
 12073              		.loc 13 50 19 view .LVU3403
 12074 024c C0E90366 		strd	r6, r6, [r0, #12]
  54:taptempo.h    ****         clockThresh_ = 10; //ms change
 12075              		.loc 13 54 26 view .LVU3404
 12076 0250 C0E90666 		strd	r6, r6, [r0, #24]
  47:taptempo.h    ****         lastTapLength_ = 0;
 12077              		.loc 13 47 17 view .LVU3405
 12078 0254 C0E900CE 		strd	ip, lr, [r0]
  48:taptempo.h    ****         tempo_ = 500.0f;
 12079              		.loc 13 48 9 is_stmt 1 view .LVU3406
  49:taptempo.h    ****         lastTime_ = 0;
 12080              		.loc 13 49 9 view .LVU3407
  50:taptempo.h    ****         currentTime_ = 0;
 12081              		.loc 13 50 9 view .LVU3408
  51:taptempo.h    ****         tapRatio_ = 1.0f;
 12082              		.loc 13 51 9 view .LVU3409
  52:taptempo.h    ****         clockLength_ = 0;
 12083              		.loc 13 52 9 view .LVU3410
  53:taptempo.h    ****         lastClockLength_ = 0;
 12084              		.loc 13 53 9 view .LVU3411
  54:taptempo.h    ****         clockThresh_ = 10; //ms change
 12085              		.loc 13 54 9 view .LVU3412
  55:taptempo.h    ****     }
 12086              		.loc 13 55 9 view .LVU3413
 12087              	.LVL794:
  55:taptempo.h    ****     }
 12088              		.loc 13 55 9 is_stmt 0 view .LVU3414
 12089              	.LBE2242:
 12090              	.LBE2244:
 12091              	.LBE2246:
 12092              	.LBE2249:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 365


 12093              	.LBE2253:
 12094              		.loc 20 1961 1 view .LVU3415
 12095 0258 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 12096              		.cfi_restore 14
 12097              		.cfi_restore 8
 12098              		.cfi_restore 7
 12099              		.cfi_restore 6
 12100              		.cfi_restore 5
 12101              		.cfi_restore 4
 12102              		.cfi_def_cfa_offset 0
 12103              	.LBB2254:
 12104              	.LBB2250:
 183:Veno-Echo.cpp **** 
 12105              		.loc 20 183 10 view .LVU3416
 12106 025c FFF7FEBF 		b	__aeabi_atexit
 12107              	.LVL795:
 12108              	.L623:
 12109              		.align	2
 12110              	.L622:
 12111 0260 00000000 		.word	.LANCHOR4
 12112 0264 00000000 		.word	__dso_handle
 12113 0268 00000000 		.word	_ZN7daisysp3SvfD1Ev
 12114 026c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12115 0270 00000000 		.word	.LANCHOR46
 12116 0274 00000000 		.word	.LANCHOR47
 12117 0278 00000000 		.word	.LANCHOR34
 12118 027c 00000000 		.word	.LANCHOR35
 12119 0280 00000000 		.word	.LANCHOR48
 12120 0284 00000000 		.word	.LANCHOR49
 12121 0288 00000000 		.word	.LANCHOR36
 12122 028c 00000000 		.word	.LANCHOR37
 12123 0290 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 12124 0294 00000000 		.word	.LANCHOR75
 12125 0298 17B7D138 		.word	953267991
 12126 029c 00000000 		.word	.LANCHOR127
 12127 02a0 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 12128 02a4 00000000 		.word	.LANCHOR128
 12129 02a8 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 12130 02ac 00000000 		.word	.LANCHOR104
 12131 02b0 00000000 		.word	.LANCHOR105
 12132 02b4 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 12133 02b8 00000000 		.word	delMemsL
 12134 02bc 00000000 		.word	delMemsR
 12135 02c0 00000000 		.word	_ZN10DelayMultiD1Ev
 12136 02c4 00000000 		.word	delMemsL_REV
 12137 02c8 00000000 		.word	delMemsR_REV
 12138 02cc 00000000 		.word	_ZN9ButtonLEDD1Ev
 12139 02d0 00000000 		.word	.LANCHOR0
 12140 02d4 00000000 		.word	.LANCHOR1
 12141 02d8 00000000 		.word	.LANCHOR90
 12142 02dc 00000000 		.word	.LANCHOR91
 12143 02e0 00000000 		.word	.LANCHOR92
 12144 02e4 00000000 		.word	.LANCHOR93
 12145 02e8 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 12146 02ec 00000000 		.word	.LANCHOR94
 12147 02f0 00000000 		.word	_ZN8TempoLEDD1Ev
 12148 02f4 00000000 		.word	.LANCHOR88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 366


 12149 02f8 00000000 		.word	.LANCHOR98
 12150 02fc 00000000 		.word	.LANCHOR99
 12151 0300 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 12152 0304 00000000 		.word	.LANCHOR100
 12153 0308 00000000 		.word	.LANCHOR101
 12154 030c 00000000 		.word	.LANCHOR102
 12155 0310 00000000 		.word	.LANCHOR103
 12156 0314 00000000 		.word	.LANCHOR64
 12157 0318 00000000 		.word	.LANCHOR115
 12158 031c 00000000 		.word	.LANCHOR116
 12159 0320 00000000 		.word	.LANCHOR113
 12160 0324 00000000 		.word	.LANCHOR114
 12161 0328 00000000 		.word	.LANCHOR119
 12162 032c 00000000 		.word	.LANCHOR120
 12163 0330 00000000 		.word	.LANCHOR117
 12164 0334 00000000 		.word	.LANCHOR118
 12165 0338 00000000 		.word	.LANCHOR121
 12166 033c 00000000 		.word	.LANCHOR122
 12167 0340 00000000 		.word	_ZN5daisy6SwitchD1Ev
 12168 0344 00000000 		.word	.LANCHOR123
 12169 0348 00000000 		.word	.LANCHOR124
 12170 034c 00000000 		.word	.LANCHOR95
 12171 0350 00000000 		.word	.LANCHOR96
 12172 0354 00000000 		.word	.LANCHOR97
 12173 0358 00000000 		.word	.LANCHOR87
 12174 035c 00000000 		.word	.LANCHOR12
 12175 0360 0000A03F 		.word	1067450368
 12176 0364 0000FA43 		.word	1140457472
 12177 0368 00000000 		.word	_ZN8TaptempoD1Ev
 12178 036c 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 12179              	.LBE2250:
 12180              	.LBE2254:
 12181              		.cfi_endproc
 12182              	.LFE4917:
 12184              		.section	.init_array,"aw",%init_array
 12185              		.align	2
 12186 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 12187              		.global	AltControls
 12188              		.global	BaseTempo
 12189              		.global	ClockIn
 12190              		.global	Sync
 12191              		.global	ReverseGateR
 12192              		.global	ReverseGateL
 12193              		.global	save_flag
 12194              		.global	PostFilters
 12195              		.global	ClockInFlag
 12196              		.global	mute
 12197              		.global	shift
 12198              		.global	syncMode
 12199              		.global	modulation_CV_Raw
 12200              		.global	ModDepth
 12201              		.global	div_R
 12202              		.global	div_L
 12203              		.global	filterXfade
 12204              		.global	width_CV
 12205              		.global	width
 12206              		.global	drywet_CV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 367


 12207              		.global	drywet
 12208              		.global	crossfeedback_CV
 12209              		.global	crossfeedback
 12210              		.global	feedbackR_CV
 12211              		.global	feedbackR
 12212              		.global	feedbackL_CV
 12213              		.global	feedbackL
 12214              		.global	delayTimeR_CV
 12215              		.global	delayTimeL_CV
 12216              		.global	tempoLED_BASE
 12217              		.global	Tap_Button
 12218              		.global	Rev_R_sw
 12219              		.global	Rev_L_sw
 12220              		.global	HPF_sw
 12221              		.global	LPF_sw
 12222              		.global	delaysR_REV
 12223              		.global	delaysL_REV
 12224              		.global	delayR
 12225              		.global	delayL
 12226              		.global	delMemsR_REV
 12227              		.global	delMemsL_REV
 12228              		.global	delMemsR
 12229              		.global	delMemsL
 12230              		.section	.bss.AltControls,"aw",%nobits
 12231              		.align	2
 12232              		.set	.LANCHOR16,. + 0
 12235              	AltControls:
 12236 0000 00000000 		.space	32
 12236      00000000 
 12236      00000000 
 12236      00000000 
 12236      00000000 
 12237              		.section	.bss.BaseTempo,"aw",%nobits
 12238              		.align	2
 12239              		.set	.LANCHOR12,. + 0
 12242              	BaseTempo:
 12243 0000 00000000 		.space	52
 12243      00000000 
 12243      00000000 
 12243      00000000 
 12243      00000000 
 12244              		.section	.bss.ClockIn,"aw",%nobits
 12245              		.align	2
 12246              		.set	.LANCHOR87,. + 0
 12249              	ClockIn:
 12250 0000 00000000 		.space	16
 12250      00000000 
 12250      00000000 
 12250      00000000 
 12251              		.section	.bss.ClockInFlag,"aw",%nobits
 12254              	ClockInFlag:
 12255 0000 00       		.space	1
 12256              		.section	.bss.HPF_sw,"aw",%nobits
 12257              		.align	2
 12258              		.set	.LANCHOR91,. + 0
 12261              	HPF_sw:
 12262 0000 00000000 		.space	52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 368


 12262      00000000 
 12262      00000000 
 12262      00000000 
 12262      00000000 
 12263              		.section	.bss.LPF_sw,"aw",%nobits
 12264              		.align	2
 12265              		.set	.LANCHOR90,. + 0
 12268              	LPF_sw:
 12269 0000 00000000 		.space	52
 12269      00000000 
 12269      00000000 
 12269      00000000 
 12269      00000000 
 12270              		.section	.bss.ModDepth,"aw",%nobits
 12271              		.align	2
 12272              		.set	.LANCHOR67,. + 0
 12275              	ModDepth:
 12276 0000 00000000 		.space	4
 12277              		.section	.bss.PostFilters,"aw",%nobits
 12278              		.set	.LANCHOR82,. + 0
 12281              	PostFilters:
 12282 0000 00       		.space	1
 12283              		.section	.bss.Rev_L_sw,"aw",%nobits
 12284              		.align	2
 12285              		.set	.LANCHOR92,. + 0
 12288              	Rev_L_sw:
 12289 0000 00000000 		.space	52
 12289      00000000 
 12289      00000000 
 12289      00000000 
 12289      00000000 
 12290              		.section	.bss.Rev_R_sw,"aw",%nobits
 12291              		.align	2
 12292              		.set	.LANCHOR93,. + 0
 12295              	Rev_R_sw:
 12296 0000 00000000 		.space	52
 12296      00000000 
 12296      00000000 
 12296      00000000 
 12296      00000000 
 12297              		.section	.bss.ReverseGateL,"aw",%nobits
 12298              		.align	2
 12299              		.set	.LANCHOR95,. + 0
 12302              	ReverseGateL:
 12303 0000 00000000 		.space	16
 12303      00000000 
 12303      00000000 
 12303      00000000 
 12304              		.section	.bss.ReverseGateR,"aw",%nobits
 12305              		.align	2
 12306              		.set	.LANCHOR96,. + 0
 12309              	ReverseGateR:
 12310 0000 00000000 		.space	16
 12310      00000000 
 12310      00000000 
 12310      00000000 
 12311              		.section	.bss.Sync,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 369


 12312              		.align	2
 12313              		.set	.LANCHOR97,. + 0
 12316              	Sync:
 12317 0000 00000000 		.space	16
 12317      00000000 
 12317      00000000 
 12317      00000000 
 12318              		.section	.bss.Tap_Button,"aw",%nobits
 12319              		.align	2
 12320              		.set	.LANCHOR94,. + 0
 12323              	Tap_Button:
 12324 0000 00000000 		.space	52
 12324      00000000 
 12324      00000000 
 12324      00000000 
 12324      00000000 
 12325              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 12326              		.align	2
 12327              		.set	.LANCHOR98,. + 0
 12330              	_ZL10FwdRevLEnv:
 12331 0000 00000000 		.space	56
 12331      00000000 
 12331      00000000 
 12331      00000000 
 12331      00000000 
 12332              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 12333              		.align	2
 12334              		.set	.LANCHOR99,. + 0
 12337              	_ZL10FwdRevREnv:
 12338 0000 00000000 		.space	56
 12338      00000000 
 12338      00000000 
 12338      00000000 
 12338      00000000 
 12339              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 12340              		.align	2
 12341              		.set	.LANCHOR113,. + 0
 12344              	_ZL10HPF_LXfade:
 12345 0000 00000000 		.space	8
 12345      00000000 
 12346              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 12347              		.align	2
 12348              		.set	.LANCHOR36,. + 0
 12351              	_ZL10HPF_L_post:
 12352 0000 00000000 		.space	76
 12352      00000000 
 12352      00000000 
 12352      00000000 
 12352      00000000 
 12353              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 12354              		.align	2
 12355              		.set	.LANCHOR114,. + 0
 12358              	_ZL10HPF_RXfade:
 12359 0000 00000000 		.space	8
 12359      00000000 
 12360              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 12361              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 370


 12362              		.set	.LANCHOR37,. + 0
 12365              	_ZL10HPF_R_post:
 12366 0000 00000000 		.space	76
 12366      00000000 
 12366      00000000 
 12366      00000000 
 12366      00000000 
 12367              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 12368              		.align	2
 12369              		.set	.LANCHOR115,. + 0
 12372              	_ZL10LPF_LXfade:
 12373 0000 00000000 		.space	8
 12373      00000000 
 12374              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 12375              		.align	2
 12376              		.set	.LANCHOR48,. + 0
 12379              	_ZL10LPF_L_post:
 12380 0000 00000000 		.space	76
 12380      00000000 
 12380      00000000 
 12380      00000000 
 12380      00000000 
 12381              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 12382              		.align	2
 12383              		.set	.LANCHOR116,. + 0
 12386              	_ZL10LPF_RXfade:
 12387 0000 00000000 		.space	8
 12387      00000000 
 12388              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 12389              		.align	2
 12390              		.set	.LANCHOR49,. + 0
 12393              	_ZL10LPF_R_post:
 12394 0000 00000000 		.space	76
 12394      00000000 
 12394      00000000 
 12394      00000000 
 12394      00000000 
 12395              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 12396              		.align	2
 12397              		.set	.LANCHOR64,. + 0
 12400              	_ZL10WidthXfade:
 12401 0000 00000000 		.space	8
 12401      00000000 
 12402              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 12403              		.align	2
 12404              		.set	.LANCHOR104,. + 0
 12407              	_ZL11DcBlock_LFB:
 12408 0000 00000000 		.space	12
 12408      00000000 
 12408      00000000 
 12409              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 12410              		.align	2
 12411              		.set	.LANCHOR105,. + 0
 12414              	_ZL11DcBlock_RFB:
 12415 0000 00000000 		.space	12
 12415      00000000 
 12415      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 371


 12416              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 12417              		.align	2
 12418              		.set	.LANCHOR121,. + 0
 12421              	_ZL11FilterMix_L:
 12422 0000 00000000 		.space	8
 12422      00000000 
 12423              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 12424              		.align	2
 12425              		.set	.LANCHOR122,. + 0
 12428              	_ZL11FilterMix_R:
 12429 0000 00000000 		.space	8
 12429      00000000 
 12430              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 12431              		.align	2
 12432              		.set	.LANCHOR102,. + 0
 12435              	_ZL12FwdRevLXfade:
 12436 0000 00000000 		.space	8
 12436      00000000 
 12437              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 12438              		.align	2
 12439              		.set	.LANCHOR103,. + 0
 12442              	_ZL12FwdRevRXfade:
 12443 0000 00000000 		.space	8
 12443      00000000 
 12444              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 12445              		.align	2
 12446              		.set	.LANCHOR117,. + 0
 12449              	_ZL15HPF_LXfade_post:
 12450 0000 00000000 		.space	8
 12450      00000000 
 12451              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 12452              		.align	2
 12453              		.set	.LANCHOR118,. + 0
 12456              	_ZL15HPF_RXfade_post:
 12457 0000 00000000 		.space	8
 12457      00000000 
 12458              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 12459              		.align	2
 12460              		.set	.LANCHOR119,. + 0
 12463              	_ZL15LPF_LXfade_post:
 12464 0000 00000000 		.space	8
 12464      00000000 
 12465              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 12466              		.align	2
 12467              		.set	.LANCHOR120,. + 0
 12470              	_ZL15LPF_RXfade_post:
 12471 0000 00000000 		.space	8
 12471      00000000 
 12472              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 12473              		.align	2
 12474              		.set	.LANCHOR123,. + 0
 12477              	_ZL16FilterMix_L_post:
 12478 0000 00000000 		.space	8
 12478      00000000 
 12479              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 12480              		.align	2
 12481              		.set	.LANCHOR124,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 372


 12484              	_ZL16FilterMix_R_post:
 12485 0000 00000000 		.space	8
 12485      00000000 
 12486              		.section	.bss._ZL2hw,"aw",%nobits
 12487              		.align	2
 12488              		.set	.LANCHOR4,. + 0
 12491              	_ZL2hw:
 12492 0000 00000000 		.space	60
 12492      00000000 
 12492      00000000 
 12492      00000000 
 12492      00000000 
 12493              		.section	.bss._ZL3lfo,"aw",%nobits
 12494              		.align	2
 12495              		.set	.LANCHOR75,. + 0
 12498              	_ZL3lfo:
 12499 0000 00000000 		.space	40
 12499      00000000 
 12499      00000000 
 12499      00000000 
 12499      00000000 
 12500              		.section	.bss._ZL5HPF_L,"aw",%nobits
 12501              		.align	2
 12502              		.set	.LANCHOR34,. + 0
 12505              	_ZL5HPF_L:
 12506 0000 00000000 		.space	76
 12506      00000000 
 12506      00000000 
 12506      00000000 
 12506      00000000 
 12507              		.section	.bss._ZL5HPF_R,"aw",%nobits
 12508              		.align	2
 12509              		.set	.LANCHOR35,. + 0
 12512              	_ZL5HPF_R:
 12513 0000 00000000 		.space	76
 12513      00000000 
 12513      00000000 
 12513      00000000 
 12513      00000000 
 12514              		.section	.bss._ZL5LPF_L,"aw",%nobits
 12515              		.align	2
 12516              		.set	.LANCHOR46,. + 0
 12519              	_ZL5LPF_L:
 12520 0000 00000000 		.space	76
 12520      00000000 
 12520      00000000 
 12520      00000000 
 12520      00000000 
 12521              		.section	.bss._ZL5LPF_R,"aw",%nobits
 12522              		.align	2
 12523              		.set	.LANCHOR47,. + 0
 12526              	_ZL5LPF_R:
 12527 0000 00000000 		.space	76
 12527      00000000 
 12527      00000000 
 12527      00000000 
 12527      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 373


 12528              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 12529              		.align	2
 12530              		.set	.LANCHOR101,. + 0
 12533              	_ZL7HPF_Env:
 12534 0000 00000000 		.space	56
 12534      00000000 
 12534      00000000 
 12534      00000000 
 12534      00000000 
 12535              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 12536              		.align	2
 12537              		.set	.LANCHOR100,. + 0
 12540              	_ZL7LPF_Env:
 12541 0000 00000000 		.space	56
 12541      00000000 
 12541      00000000 
 12541      00000000 
 12541      00000000 
 12542              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 12543              		.align	2
 12544              		.set	.LANCHOR127,. + 0
 12547              	_ZL7LeftEnv:
 12548 0000 00000000 		.space	24
 12548      00000000 
 12548      00000000 
 12548      00000000 
 12548      00000000 
 12549              		.section	.bss._ZL8RightEnv,"aw",%nobits
 12550              		.align	2
 12551              		.set	.LANCHOR128,. + 0
 12554              	_ZL8RightEnv:
 12555 0000 00000000 		.space	24
 12555      00000000 
 12555      00000000 
 12555      00000000 
 12555      00000000 
 12556              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 12557              		.align	2
 12558              		.set	.LANCHOR85,. + 0
 12561              	_ZZ10Update_ModvE13modulation_CV:
 12562 0000 00000000 		.space	4
 12563              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 12564              		.align	2
 12565              		.set	.LANCHOR86,. + 0
 12568              	_ZZ10Update_ModvE17ModDepth_Filtered:
 12569 0000 00000000 		.space	4
 12570              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 12571              		.align	2
 12572              		.set	.LANCHOR62,. + 0
 12575              	_ZZ12Update_widthvE10width_Last:
 12576 0000 00000000 		.space	4
 12577              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 12578              		.align	2
 12579              		.set	.LANCHOR66,. + 0
 12582              	_ZZ12Update_widthvE12ModDepth_new:
 12583 0000 00000000 		.space	4
 12584              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 374


 12585              		.set	.LANCHOR60,. + 0
 12588              	_ZZ12Update_widthvE12width_pickup:
 12589 0000 00       		.space	1
 12590              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 12591              		.set	.LANCHOR65,. + 0
 12594              	_ZZ12Update_widthvE15ModDepth_pickup:
 12595 0000 00       		.space	1
 12596              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 12597              		.set	.LANCHOR59,. + 0
 12600              	_ZZ12Update_widthvE9lastShift:
 12601 0000 00       		.space	1
 12602              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 12603              		.align	2
 12604              		.set	.LANCHOR61,. + 0
 12607              	_ZZ12Update_widthvE9width_new:
 12608 0000 00000000 		.space	4
 12609              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 12610              		.set	.LANCHOR56,. + 0
 12613              	_ZZ13Update_drywetvE10Res_pickup:
 12614 0000 00       		.space	1
 12615              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 12616              		.align	2
 12617              		.set	.LANCHOR53,. + 0
 12620              	_ZZ13Update_drywetvE10drywet_new:
 12621 0000 00000000 		.space	4
 12622              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 12623              		.align	2
 12624              		.set	.LANCHOR54,. + 0
 12627              	_ZZ13Update_drywetvE11drywet_Last:
 12628 0000 00000000 		.space	4
 12629              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 12630              		.set	.LANCHOR52,. + 0
 12633              	_ZZ13Update_drywetvE13drywet_pickup:
 12634 0000 00       		.space	1
 12635              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 12636              		.align	2
 12637              		.set	.LANCHOR57,. + 0
 12640              	_ZZ13Update_drywetvE7Res_new:
 12641 0000 00000000 		.space	4
 12642              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 12643              		.set	.LANCHOR51,. + 0
 12646              	_ZZ13Update_drywetvE9lastShift:
 12647 0000 00       		.space	1
 12648              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 12649              		.align	2
 12650              		.set	.LANCHOR107,. + 0
 12653              	_ZZ14Update_ButtonsvE11buttonstate:
 12654 0000 00000000 		.space	4
 12655              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 12656              		.align	2
 12657              		.set	.LANCHOR108,. + 0
 12660              	_ZZ14Update_ButtonsvE9resetTime:
 12661 0000 00000000 		.space	4
 12662              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 12663              		.align	2
 12664              		.set	.LANCHOR109,. + 0
 12667              	_ZZ14Update_ButtonsvE9shiftTime:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 375


 12668 0000 00000000 		.space	4
 12669              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 12670              		.align	2
 12671              		.set	.LANCHOR33,. + 0
 12674              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 12675 0000 00000000 		.space	4
 12676              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 12677              		.align	2
 12678              		.set	.LANCHOR29,. + 0
 12681              	_ZZ16Update_feedbackLvE13feedbackL_new:
 12682 0000 00000000 		.space	4
 12683              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 12684              		.align	2
 12685              		.set	.LANCHOR30,. + 0
 12688              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 12689 0000 00000000 		.space	4
 12690              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 12691              		.set	.LANCHOR32,. + 0
 12694              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 12695 0000 00       		.space	1
 12696              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 12697              		.set	.LANCHOR28,. + 0
 12700              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 12701 0000 00       		.space	1
 12702              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 12703              		.set	.LANCHOR27,. + 0
 12706              	_ZZ16Update_feedbackLvE9lastShift:
 12707 0000 00       		.space	1
 12708              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 12709              		.align	2
 12710              		.set	.LANCHOR45,. + 0
 12713              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 12714 0000 00000000 		.space	4
 12715              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 12716              		.align	2
 12717              		.set	.LANCHOR42,. + 0
 12720              	_ZZ16Update_feedbackRvE13feedbackR_new:
 12721 0000 00000000 		.space	4
 12722              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 12723              		.align	2
 12724              		.set	.LANCHOR41,. + 0
 12727              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 12728 0000 00000000 		.space	4
 12729              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 12730              		.set	.LANCHOR44,. + 0
 12733              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 12734 0000 00       		.space	1
 12735              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 12736              		.set	.LANCHOR40,. + 0
 12739              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 12740 0000 00       		.space	1
 12741              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 12742              		.set	.LANCHOR39,. + 0
 12745              	_ZZ16Update_feedbackRvE9lastShift:
 12746 0000 00       		.space	1
 12747              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 12748              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 376


 12749              		.set	.LANCHOR10,. + 0
 12752              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 12753 0000 00000000 		.space	4
 12754              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 12755              		.align	2
 12756              		.set	.LANCHOR11,. + 0
 12759              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 12760 0000 00000000 		.space	4
 12761              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 12762              		.align	2
 12763              		.set	.LANCHOR15,. + 0
 12766              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 12767 0000 00000000 		.space	4
 12768              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 12769              		.set	.LANCHOR9,. + 0
 12772              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 12773 0000 00       		.space	1
 12774              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 12775              		.set	.LANCHOR14,. + 0
 12778              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 12779 0000 00       		.space	1
 12780              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 12781              		.align	2
 12782              		.set	.LANCHOR6,. + 0
 12785              	_ZZ17Update_DelayTimeLvE8counterL:
 12786 0000 00000000 		.space	4
 12787              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 12788              		.set	.LANCHOR8,. + 0
 12791              	_ZZ17Update_DelayTimeLvE9lastShift:
 12792 0000 00       		.space	1
 12793              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 12794              		.align	2
 12795              		.set	.LANCHOR24,. + 0
 12798              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 12799 0000 00000000 		.space	4
 12800              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 12801              		.align	2
 12802              		.set	.LANCHOR21,. + 0
 12805              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 12806 0000 00000000 		.space	4
 12807              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 12808              		.align	2
 12809              		.set	.LANCHOR22,. + 0
 12812              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 12813 0000 00000000 		.space	4
 12814              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 12815              		.set	.LANCHOR23,. + 0
 12818              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 12819 0000 00       		.space	1
 12820              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 12821              		.set	.LANCHOR20,. + 0
 12824              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 12825 0000 00       		.space	1
 12826              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 12827              		.align	2
 12828              		.set	.LANCHOR18,. + 0
 12831              	_ZZ17Update_DelayTimeRvE8counterR:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 377


 12832 0000 00000000 		.space	4
 12833              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 12834              		.set	.LANCHOR19,. + 0
 12837              	_ZZ17Update_DelayTimeRvE9lastShift:
 12838 0000 00       		.space	1
 12839              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 12840              		.align	2
 12841              		.set	.LANCHOR81,. + 0
 12844              	_ZZ18Update_filterXfadevE15PostFilters_new:
 12845 0000 00000000 		.space	4
 12846              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 12847              		.align	2
 12848              		.set	.LANCHOR78,. + 0
 12851              	_ZZ18Update_filterXfadevE15filterXfade_new:
 12852 0000 00000000 		.space	4
 12853              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 12854              		.align	2
 12855              		.set	.LANCHOR83,. + 0
 12858              	_ZZ18Update_filterXfadevE16filterXfade_last:
 12859 0000 00000000 		.space	4
 12860              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 12861              		.set	.LANCHOR80,. + 0
 12864              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 12865 0000 00       		.space	1
 12866              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 12867              		.set	.LANCHOR77,. + 0
 12870              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 12871 0000 00       		.space	1
 12872              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 12873              		.set	.LANCHOR76,. + 0
 12876              	_ZZ18Update_filterXfadevE9lastShift:
 12877 0000 00       		.space	1
 12878              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 12879              		.align	2
 12880              		.set	.LANCHOR89,. + 0
 12883              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 12884 0000 00000000 		.space	4
 12885              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 12886              		.align	2
 12887              		.set	.LANCHOR73,. + 0
 12890              	_ZZ20Update_crossfeedbackvE11modRate_new:
 12891 0000 00000000 		.space	4
 12892              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 12893              		.set	.LANCHOR72,. + 0
 12896              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 12897 0000 00       		.space	1
 12898              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 12899              		.align	2
 12900              		.set	.LANCHOR70,. + 0
 12903              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 12904 0000 00000000 		.space	4
 12905              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 12906              		.align	2
 12907              		.set	.LANCHOR74,. + 0
 12910              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 12911 0000 00000000 		.space	4
 12912              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 378


 12913              		.set	.LANCHOR69,. + 0
 12916              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 12917 0000 00       		.space	1
 12918              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 12919              		.set	.LANCHOR68,. + 0
 12922              	_ZZ20Update_crossfeedbackvE9lastShift:
 12923 0000 00       		.space	1
 12924              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 12925              		.align	2
 12926              		.set	.LANCHOR125,. + 0
 12929              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 12930 0000 00000000 		.space	4
 12931              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 12932              		.align	2
 12933              		.set	.LANCHOR126,. + 0
 12936              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 12937 0000 00000000 		.space	4
 12938              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 12939              		.align	2
 12940              		.set	.LANCHOR111,. + 0
 12943              	_ZZL13AudioCallbackPfS_jE7Counter:
 12944 0000 00000000 		.space	4
 12945              		.section	.bss.crossfeedback,"aw",%nobits
 12946              		.align	2
 12947              		.set	.LANCHOR71,. + 0
 12950              	crossfeedback:
 12951 0000 00000000 		.space	4
 12952              		.section	.bss.crossfeedback_CV,"aw",%nobits
 12953              		.align	2
 12956              	crossfeedback_CV:
 12957 0000 00000000 		.space	4
 12958              		.section	.bss.delayL,"aw",%nobits
 12959              		.align	2
 12960              		.set	.LANCHOR0,. + 0
 12963              	delayL:
 12964 0000 00000000 		.space	292
 12964      00000000 
 12964      00000000 
 12964      00000000 
 12964      00000000 
 12965              		.section	.bss.delayR,"aw",%nobits
 12966              		.align	2
 12967              		.set	.LANCHOR1,. + 0
 12970              	delayR:
 12971 0000 00000000 		.space	292
 12971      00000000 
 12971      00000000 
 12971      00000000 
 12971      00000000 
 12972              		.section	.bss.delayTimeL_CV,"aw",%nobits
 12973              		.align	2
 12974              		.set	.LANCHOR5,. + 0
 12977              	delayTimeL_CV:
 12978 0000 00000000 		.space	4
 12979              		.section	.bss.delayTimeR_CV,"aw",%nobits
 12980              		.align	2
 12981              		.set	.LANCHOR17,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 379


 12984              	delayTimeR_CV:
 12985 0000 00000000 		.space	4
 12986              		.section	.bss.delaysL_REV,"aw",%nobits
 12987              		.align	2
 12988              		.set	.LANCHOR2,. + 0
 12991              	delaysL_REV:
 12992 0000 00000000 		.space	8
 12992      00000000 
 12993              		.section	.bss.delaysR_REV,"aw",%nobits
 12994              		.align	2
 12995              		.set	.LANCHOR3,. + 0
 12998              	delaysR_REV:
 12999 0000 00000000 		.space	8
 12999      00000000 
 13000              		.section	.bss.div_L,"aw",%nobits
 13003              	div_L:
 13004 0000 00       		.space	1
 13005              		.section	.bss.div_R,"aw",%nobits
 13008              	div_R:
 13009 0000 00       		.space	1
 13010              		.section	.bss.drywet_CV,"aw",%nobits
 13011              		.align	2
 13012              		.set	.LANCHOR50,. + 0
 13015              	drywet_CV:
 13016 0000 00000000 		.space	4
 13017              		.section	.bss.feedbackL,"aw",%nobits
 13018              		.align	2
 13019              		.set	.LANCHOR31,. + 0
 13022              	feedbackL:
 13023 0000 00000000 		.space	4
 13024              		.section	.bss.feedbackL_CV,"aw",%nobits
 13025              		.align	2
 13026              		.set	.LANCHOR26,. + 0
 13029              	feedbackL_CV:
 13030 0000 00000000 		.space	4
 13031              		.section	.bss.feedbackR,"aw",%nobits
 13032              		.align	2
 13033              		.set	.LANCHOR43,. + 0
 13036              	feedbackR:
 13037 0000 00000000 		.space	4
 13038              		.section	.bss.feedbackR_CV,"aw",%nobits
 13039              		.align	2
 13040              		.set	.LANCHOR38,. + 0
 13043              	feedbackR_CV:
 13044 0000 00000000 		.space	4
 13045              		.section	.bss.filterXfade,"aw",%nobits
 13046              		.align	2
 13047              		.set	.LANCHOR79,. + 0
 13050              	filterXfade:
 13051 0000 00000000 		.space	4
 13052              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13053              		.align	2
 13054              		.set	.LANCHOR84,. + 0
 13057              	modulation_CV_Raw:
 13058 0000 00000000 		.space	4
 13059              		.section	.bss.mute,"aw",%nobits
 13060              		.set	.LANCHOR110,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 380


 13063              	mute:
 13064 0000 00       		.space	1
 13065              		.section	.bss.save_flag,"aw",%nobits
 13066              		.align	2
 13067              		.set	.LANCHOR112,. + 0
 13070              	save_flag:
 13071 0000 00       		.space	1
 13072              		.section	.bss.shift,"aw",%nobits
 13073              		.set	.LANCHOR7,. + 0
 13076              	shift:
 13077 0000 00       		.space	1
 13078              		.section	.bss.syncMode,"aw",%nobits
 13079              		.set	.LANCHOR13,. + 0
 13082              	syncMode:
 13083 0000 00       		.space	1
 13084              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13085              		.align	2
 13086              		.set	.LANCHOR88,. + 0
 13089              	tempoLED_BASE:
 13090 0000 00000000 		.space	72
 13090      00000000 
 13090      00000000 
 13090      00000000 
 13090      00000000 
 13091              		.section	.bss.width_CV,"aw",%nobits
 13092              		.align	2
 13093              		.set	.LANCHOR58,. + 0
 13096              	width_CV:
 13097 0000 00000000 		.space	4
 13098              		.section	.data.drywet,"aw"
 13099              		.align	2
 13100              		.set	.LANCHOR55,. + 0
 13103              	drywet:
 13104 0000 0000003F 		.word	1056964608
 13105              		.section	.data.width,"aw"
 13106              		.align	2
 13107              		.set	.LANCHOR63,. + 0
 13110              	width:
 13111 0000 0000803F 		.word	1065353216
 13112              		.section	.rodata.CSWTCH.339,"a"
 13113              		.align	2
 13114              		.set	.LANCHOR25,. + 0
 13117              	CSWTCH.339:
 13118 0000 0000C03F 		.word	1069547520
 13119 0004 00000040 		.word	1073741824
 13120 0008 00004040 		.word	1077936128
 13121              		.section	.rodata._ZL18defaultAltControls,"a"
 13122              		.align	2
 13123              		.set	.LANCHOR106,. + 0
 13126              	_ZL18defaultAltControls:
 13127 0000 00650148 		.word	1208050944
 13128 0004 0000803F 		.word	1065353216
 13129 0008 00000000 		.word	0
 13130 000c 9A99A140 		.word	1084332442
 13131 0010 00004843 		.word	1128792064
 13132 0014 00803B46 		.word	1178304512
 13133 0018 00000000 		.word	0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 381


 13134 001c 00000000 		.word	0
 13135              		.section	.sdram_bss,"aw"
 13136              		.align	2
 13139              	delMemsR_REV:
 13140 0000 00000000 		.space	2400040
 13140      00000000 
 13140      00000000 
 13140      00000000 
 13140      00000000 
 13143              	delMemsL_REV:
 13144 249f28 00000000 		.space	2400040
 13144      00000000 
 13144      00000000 
 13144      00000000 
 13144      00000000 
 13147              	delMemsR:
 13148 493e50 00000000 		.space	6912136
 13148      00000000 
 13148      00000000 
 13148      00000000 
 13148      00000000 
 13151              	delMemsL:
 13152 b2b6d8 00000000 		.space	6912136
 13152      00000000 
 13152      00000000 
 13152      00000000 
 13152      00000000 
 13153              		.text
 13154              	.Letext0:
 13155              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 13156              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13157              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13158              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13159              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13160              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13161              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13162              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13163              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13164              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13165              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13166              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13167              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13168              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13169              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13170              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13171              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13172              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13173              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13174              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13175              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13176              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13177              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13178              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13179              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13180              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13181              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13182              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 382


 13183              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13184              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13185              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13186              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13187              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13188              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13189              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13190              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13191              		.file 64 "../libdaisy/src/daisy_core.h"
 13192              		.file 65 "../libdaisy/src/per/tim.h"
 13193              		.file 66 "../libdaisy/src/per/sai.h"
 13194              		.file 67 "../libdaisy/src/util/wav_format.h"
 13195              		.file 68 "../libdaisy/src/per/qspi.h"
 13196              		.file 69 "../libdaisy/src/per/gpio.h"
 13197              		.file 70 "../libdaisy/src/dev/sdram.h"
 13198              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13199              		.file 72 "<built-in>"
 13200              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 13201              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 13202              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 13203              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 13204              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 13205              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 13206              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 13207              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 13208              		.file 81 "../libdaisy/src/sys/fatfs.h"
 13209              		.file 82 "../DaisySP/Source/Control/adenv.h"
 13210              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 13211              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 13212              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 13213              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 13214              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 13215              		.file 88 "QSPI_Settings.h"
 13216              		.file 89 "scale.h"
 13217              		.file 90 "constants.h"
 13218              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 383


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13151  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13147  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13143  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13139  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1599   .text._Z17Update_DelayTimeLv:00000000000001c0 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 384


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1628   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1636   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1661   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1667   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:1675   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2098   .text._Z17Update_DelayTimeRv:0000000000000174 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2123   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2131   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2156   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2162   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2170   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2559   .text._Z16Update_feedbackLv:0000000000000164 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2586   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2594   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2619   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2625   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:2633   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3023   .text._Z16Update_feedbackRv:000000000000016c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3050   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3058   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3083   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3089   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3097   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3537   .text._Z13Update_drywetv:00000000000001c8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3572   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3580   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3605   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3611   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:3619   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4008   .text._Z12Update_widthv:0000000000000150 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4032   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4040   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4366   .text._Z20Update_crossfeedbackv:000000000000010c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4385   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4393   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4691   .text._Z18Update_filterXfadev:0000000000000110 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4713   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4721   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4751   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4759   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4767   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4924   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4936   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:4944   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:5007   .text._Z11UpdateClockv:000000000000002c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:5016   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:5024   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:5142   .text._Z19Update_BaseTempoLEDv:000000000000005c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:5152   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:5160   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:5857   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:5896   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:5904   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:6782   .text.startup.main:0000000000000348 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:6816   .text.startup.main:00000000000003c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7168   .text.startup.main:000000000000058c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7861   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 385


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7186   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7194   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7256   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7267   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7275   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7378   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7390   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7398   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7829   .text._Z14Update_Buttonsv:00000000000001a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7854   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7973   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:7981   .text._ZL13AudioCallbackPfS_j:000000000000005c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:8010   .text._ZL13AudioCallbackPfS_j:0000000000000080 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:8022   .text._ZL13AudioCallbackPfS_j:0000000000000094 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:8775   .text._ZL13AudioCallbackPfS_j:0000000000000414 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:8800   .text._ZL13AudioCallbackPfS_j:0000000000000470 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:9897   .text._ZL13AudioCallbackPfS_j:00000000000007c0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:9931   .text._ZL13AudioCallbackPfS_j:000000000000083c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:10811  .text._ZL13AudioCallbackPfS_j:0000000000000b9c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:10840  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:10848  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:10882  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:10890  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:10937  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:10942  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:10950  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:11034  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:11039  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:11047  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:11137  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:11142  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:11150  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:11180  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:11185  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:11192  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12111  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000260 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12185  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12235  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12242  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12249  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12316  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12309  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12302  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13070  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12281  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12254  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13063  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13076  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13082  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13057  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12275  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13008  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13003  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13050  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13096  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13110  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13015  .bss.drywet_CV:0000000000000000 drywet_CV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 386


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13103  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12956  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12950  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13043  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13036  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13029  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13022  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12984  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12977  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13089  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12323  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12295  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12288  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12261  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12268  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12998  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12991  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12970  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12963  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12231  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12238  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12245  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12255  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12257  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12264  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12271  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12282  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12284  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12291  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12298  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12305  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12312  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12319  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12326  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12330  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12333  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12337  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12340  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12344  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12347  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12351  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12354  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12358  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12361  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12365  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12368  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12372  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12375  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12379  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12382  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12386  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12389  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12393  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12396  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12400  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12403  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12407  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 387


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12410  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12414  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12417  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12421  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12424  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12428  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12431  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12435  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12438  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12442  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12445  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12449  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12452  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12456  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12459  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12463  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12466  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12470  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12473  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12477  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12480  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12484  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12487  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12491  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12494  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12498  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12501  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12505  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12508  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12512  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12515  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12519  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12522  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12526  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12529  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12533  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12536  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12540  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12543  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12547  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12550  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12554  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12557  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12561  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12564  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12568  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12571  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12575  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12578  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12582  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12588  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12589  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12594  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12595  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12600  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12601  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12603  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 388


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12607  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12613  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12614  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12616  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12620  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12623  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12627  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12633  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12634  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12636  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12640  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12646  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12647  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12649  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12653  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12656  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12660  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12663  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12667  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12670  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12674  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12677  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12681  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12684  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12688  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12694  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12695  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12700  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12701  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12706  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12707  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12709  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12713  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12716  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12720  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12723  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12727  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12733  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12734  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12739  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12740  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12745  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12746  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12748  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12752  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12755  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12759  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12762  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12766  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12772  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12773  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12778  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12779  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12781  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12785  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12791  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12792  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 389


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12794  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12798  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12801  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12805  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12808  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12812  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12818  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12819  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12824  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12825  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12827  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12831  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12837  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12838  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12840  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12844  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12847  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12851  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12854  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12858  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12864  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12865  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12870  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12871  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12876  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12877  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12879  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12883  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12886  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12890  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12896  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12897  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12899  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12903  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12906  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12910  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12916  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12917  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12922  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12923  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12925  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12929  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12932  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12936  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12939  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12943  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12946  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12953  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12959  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12966  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12973  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12980  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12987  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:12994  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13004  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13009  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13011  .bss.drywet_CV:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 390


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13018  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13025  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13032  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13039  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13046  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13053  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13064  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13066  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13077  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13083  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13085  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13092  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13099  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13106  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13113  .rodata.CSWTCH.339:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13117  .rodata.CSWTCH.339:0000000000000000 CSWTCH.339
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13122  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13126  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s:13136  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN8Taptempo12getTapLengthEv
_ZN10DelayMulti12SetDelayTimeEffb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6Switch8DebounceEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccJKqeMO.s 			page 391


_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
