ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB781:
  61              	.LBI781:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE781:
  66              	.LBB782:
  67              	.LBI782:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE782:
  72              	.LBB783:
  73              	.LBI783:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE783:
  78              	.LBB784:
  79              	.LBI784:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE784:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         bool tapflag_;
  37:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  38:taptempo.h    **** 
  39:taptempo.h    ****     public:
  40:taptempo.h    **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 14


  41:taptempo.h    ****     Taptempo()  //default constructor
  42:taptempo.h    ****     {
  43:taptempo.h    ****         tapflag_ = false;
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
  45:taptempo.h    ****         maxtap_ = 2000;
  46:taptempo.h    ****         mintap_ = 80;
  47:taptempo.h    ****         lastTapLength_ = 0;
  48:taptempo.h    ****         tempo_ = 500.0f;
  49:taptempo.h    ****         lastTime_ = 0;
  50:taptempo.h    ****         currentTime_ = 0;
  51:taptempo.h    ****         tapRatio_ = 1.0f;
  52:taptempo.h    **** 
  53:taptempo.h    ****     }
  54:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 54 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 54 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 15


  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB785:
 285              	.LBI785:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE785:
 290              	.LBB786:
 291              	.LBI786:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 16


 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE786:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 17


  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB787:
 321              	.LBI787:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE787:
 325              	.LBB788:
 326              	.LBI788:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE788:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 18


   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB789:
 356              	.LBI789:
  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB790:
 359              	.LBI790:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 19


 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE790:
 363              	.LBB791:
 364              	.LBI791:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE791:
 368              	.LBE789:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4912:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 20


  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4912:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4915:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 21


  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4915:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 22


   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 23


  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 24


 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** //bool divChange_flag{};
 143:Veno-Echo.cpp **** 
 144:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 145:Veno-Echo.cpp **** 
 146:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 147:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 148:Veno-Echo.cpp **** 
 149:Veno-Echo.cpp **** static Adsr LPF_Env;
 150:Veno-Echo.cpp **** static Adsr HPF_Env;
 151:Veno-Echo.cpp **** 
 152:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 153:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 154:Veno-Echo.cpp **** 
 155:Veno-Echo.cpp **** static CrossFade WidthXfade;
 156:Veno-Echo.cpp **** 
 157:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 158:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 159:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 160:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 161:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 162:Veno-Echo.cpp **** 
 163:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 164:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 165:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 166:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 167:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 168:Veno-Echo.cpp **** 
 169:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 170:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 171:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 172:Veno-Echo.cpp **** 
 173:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 175:Veno-Echo.cpp **** 
 176:Veno-Echo.cpp **** //Gate inputs
 177:Veno-Echo.cpp **** Switch ReverseGateL;
 178:Veno-Echo.cpp **** Switch ReverseGateR;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 25


 179:Veno-Echo.cpp **** 
 180:Veno-Echo.cpp **** //Switch TapButton;
 181:Veno-Echo.cpp **** Switch Sync;
 182:Veno-Echo.cpp **** Switch ClockIn;
 183:Veno-Echo.cpp **** 
 184:Veno-Echo.cpp **** //Tap tempo
 185:Veno-Echo.cpp **** Taptempo BaseTempo; 
 186:Veno-Echo.cpp **** 
 187:Veno-Echo.cpp **** 
 188:Veno-Echo.cpp **** 
 189:Veno-Echo.cpp **** Settings AltControls;
 190:Veno-Echo.cpp **** 
 191:Veno-Echo.cpp **** //default alt control values
 192:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 193:Veno-Echo.cpp **** {
 194:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 195:Veno-Echo.cpp ****     1.0f,   //tapRatio
 196:Veno-Echo.cpp ****     0.0f,   //ModDepth
 197:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 198:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 199:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 200:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 201:Veno-Echo.cpp ****     0.0f
 202:Veno-Echo.cpp **** };
 203:Veno-Echo.cpp **** 
 204:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 205:Veno-Echo.cpp **** void Update_DelayTimeL();
 206:Veno-Echo.cpp **** 
 207:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 208:Veno-Echo.cpp **** void Update_DelayTimeR();
 209:Veno-Echo.cpp **** 
 210:Veno-Echo.cpp **** void Update_feedbackL_CV();
 211:Veno-Echo.cpp **** void Update_feedbackL();
 212:Veno-Echo.cpp **** 
 213:Veno-Echo.cpp **** void Update_feedbackR_CV();
 214:Veno-Echo.cpp **** void Update_feedbackR();
 215:Veno-Echo.cpp **** 
 216:Veno-Echo.cpp **** void Update_drywet_CV();
 217:Veno-Echo.cpp **** void Update_drywet();
 218:Veno-Echo.cpp **** 
 219:Veno-Echo.cpp **** void Update_width_CV();
 220:Veno-Echo.cpp **** void Update_width();
 221:Veno-Echo.cpp **** 
 222:Veno-Echo.cpp **** void Update_crossfeedback();
 223:Veno-Echo.cpp **** void Update_filterXfade();
 224:Veno-Echo.cpp **** 
 225:Veno-Echo.cpp **** void Update_Buttons();
 226:Veno-Echo.cpp **** void Update_BaseTempoLED();
 227:Veno-Echo.cpp **** void Update_Mod();
 228:Veno-Echo.cpp **** void GetModCV();
 229:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 230:Veno-Echo.cpp **** void UpdateClock();
 231:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 232:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 233:Veno-Echo.cpp **** void TurnOnAllLEDs();
 234:Veno-Echo.cpp **** void ResetAllLEDs();
 235:Veno-Echo.cpp **** float HardLimit(float input, float limit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 26


 236:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 237:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 238:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 239:Veno-Echo.cpp **** 
 240:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 241:Veno-Echo.cpp **** {
 242:Veno-Echo.cpp **** 
 243:Veno-Echo.cpp **** /*
 244:Veno-Echo.cpp **** static uint32_t funcLength{};
 245:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 246:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 247:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 248:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 249:Veno-Echo.cpp **** 
 250:Veno-Echo.cpp **** */
 251:Veno-Echo.cpp **** 
 252:Veno-Echo.cpp **** static int Counter{};
 253:Veno-Echo.cpp **** 
 254:Veno-Echo.cpp **** /*
 255:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 256:Veno-Echo.cpp **** 
 257:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 258:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 259:Veno-Echo.cpp ****     {
 260:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 261:Veno-Echo.cpp ****     }
 262:Veno-Echo.cpp **** 
 263:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 264:Veno-Echo.cpp ****     {
 265:Veno-Echo.cpp ****         minFuncLength = funcLength;
 266:Veno-Echo.cpp ****     }
 267:Veno-Echo.cpp **** 
 268:Veno-Echo.cpp **** */
 269:Veno-Echo.cpp **** 
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 271:Veno-Echo.cpp **** 
 272:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 273:Veno-Echo.cpp **** {
 274:Veno-Echo.cpp ****     /*
 275:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 276:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 277:Veno-Echo.cpp ****         //init timeofCall as current time
 278:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 279:Veno-Echo.cpp **** 
 280:Veno-Echo.cpp ****         //wait for random Dither time
 281:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 282:Veno-Echo.cpp ****         {}
 283:Veno-Echo.cpp ****     */
 284:Veno-Echo.cpp **** 
 285:Veno-Echo.cpp ****         switch (Counter)
 286:Veno-Echo.cpp ****         {
 287:Veno-Echo.cpp ****             case 0:
 288:Veno-Echo.cpp ****                 Update_Buttons();
 289:Veno-Echo.cpp ****                 GetModCV();
 290:Veno-Echo.cpp ****             break;
 291:Veno-Echo.cpp **** 
 292:Veno-Echo.cpp ****             case 1:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 27


 293:Veno-Echo.cpp ****                 Update_DelayTimeL();
 294:Veno-Echo.cpp ****             break;
 295:Veno-Echo.cpp **** 
 296:Veno-Echo.cpp ****             case 2:
 297:Veno-Echo.cpp ****                 Update_DelayTimeR();
 298:Veno-Echo.cpp ****             break;
 299:Veno-Echo.cpp **** 
 300:Veno-Echo.cpp ****             case 3:
 301:Veno-Echo.cpp ****                 Update_feedbackL();
 302:Veno-Echo.cpp ****             break;
 303:Veno-Echo.cpp **** 
 304:Veno-Echo.cpp ****             case 4:
 305:Veno-Echo.cpp ****                 Update_feedbackR();
 306:Veno-Echo.cpp ****             break;
 307:Veno-Echo.cpp **** 
 308:Veno-Echo.cpp ****             case 5:
 309:Veno-Echo.cpp ****                 Update_drywet();
 310:Veno-Echo.cpp ****             break;
 311:Veno-Echo.cpp **** 
 312:Veno-Echo.cpp ****             case 6:
 313:Veno-Echo.cpp ****                 Update_width();
 314:Veno-Echo.cpp ****             break;
 315:Veno-Echo.cpp **** 
 316:Veno-Echo.cpp ****             case 7:
 317:Veno-Echo.cpp ****                 //Update_crossfeedback();
 318:Veno-Echo.cpp ****                 Update_filterXfade();
 319:Veno-Echo.cpp ****             break;
 320:Veno-Echo.cpp ****         }
 321:Veno-Echo.cpp **** }
 322:Veno-Echo.cpp **** 
 323:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 324:Veno-Echo.cpp ****     {   
 325:Veno-Echo.cpp ****         UpdateClock(); 
 326:Veno-Echo.cpp ****         Update_Mod();
 327:Veno-Echo.cpp **** 
 328:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 329:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 330:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 331:Veno-Echo.cpp ****         
 332:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 333:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 334:Veno-Echo.cpp **** 
 335:Veno-Echo.cpp ****         //set xfade positions      
 336:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 337:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 338:Veno-Echo.cpp ****         
 339:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 340:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 341:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 342:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 343:Veno-Echo.cpp **** 
 344:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 345:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 346:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 347:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 348:Veno-Echo.cpp **** 
 349:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 28


 350:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 351:Veno-Echo.cpp **** 
 352:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 353:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 354:Veno-Echo.cpp **** 
 355:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 356:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 357:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 358:Veno-Echo.cpp **** 
 359:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 360:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 361:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 362:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 363:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 364:Veno-Echo.cpp **** 
 365:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 366:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 367:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 368:Veno-Echo.cpp **** 
 369:Veno-Echo.cpp ****         //Get combined output from all delay heads
 370:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 371:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 372:Veno-Echo.cpp **** 
 373:Veno-Echo.cpp ****         //Update Base Tempo LED
 374:Veno-Echo.cpp ****         Update_BaseTempoLED();
 375:Veno-Echo.cpp **** 
 376:Veno-Echo.cpp ****         //hard limit
 377:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 378:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 379:Veno-Echo.cpp **** 
 380:Veno-Echo.cpp **** if(!PostFilters)
 381:Veno-Echo.cpp **** {
 382:Veno-Echo.cpp **** //****************************************************************************************
 383:Veno-Echo.cpp ****         //pre filters
 384:Veno-Echo.cpp ****         //process LPF
 385:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 386:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 387:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 388:Veno-Echo.cpp **** 
 389:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 390:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 391:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 392:Veno-Echo.cpp ****         
 393:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 394:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 395:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 396:Veno-Echo.cpp **** 
 397:Veno-Echo.cpp ****         //hard limit
 398:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 399:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 400:Veno-Echo.cpp **** 
 401:Veno-Echo.cpp ****         //process HPF
 402:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 403:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 404:Veno-Echo.cpp **** 
 405:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 406:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 29


 407:Veno-Echo.cpp **** 
 408:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 409:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 410:Veno-Echo.cpp **** 
 411:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 412:Veno-Echo.cpp **** 
 413:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 414:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 415:Veno-Echo.cpp **** 
 416:Veno-Echo.cpp **** //****************************************************************************************
 417:Veno-Echo.cpp **** }
 418:Veno-Echo.cpp **** 
 419:Veno-Echo.cpp **** else
 420:Veno-Echo.cpp **** {
 421:Veno-Echo.cpp ****     /* code */
 422:Veno-Echo.cpp **** }
 423:Veno-Echo.cpp **** 
 424:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 425:Veno-Echo.cpp ****         static float RNegFB{};
 426:Veno-Echo.cpp **** 
 427:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 428:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 429:Veno-Echo.cpp ****             LNegFB = 0.0f;
 430:Veno-Echo.cpp ****         
 431:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 432:Veno-Echo.cpp ****             RNegFB = 0.0f;
 433:Veno-Echo.cpp **** 
 434:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 435:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 436:Veno-Echo.cpp **** 
 437:Veno-Echo.cpp ****         //crossfeedback:
 438:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 439:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 440:Veno-Echo.cpp **** 
 441:Veno-Echo.cpp **** 
 442:Veno-Echo.cpp ****         //get envelopes for feedback signals
 443:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 444:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 445:Veno-Echo.cpp **** 
 446:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 447:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 448:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 449:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 450:Veno-Echo.cpp ****             else LNegFB = 0.0;
 451:Veno-Echo.cpp ****             
 452:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 453:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 454:Veno-Echo.cpp ****             else RNegFB = 0.0;
 455:Veno-Echo.cpp **** 
 456:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 457:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 458:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 459:Veno-Echo.cpp ****  
 460:Veno-Echo.cpp ****         //hard limit
 461:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 462:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 463:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 30


 464:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 465:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp ****         // floats for wet dry mix
 468:Veno-Echo.cpp ****         float mixL;
 469:Veno-Echo.cpp ****         float mixR;
 470:Veno-Echo.cpp **** 
 471:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 472:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 473:Veno-Echo.cpp **** 
 474:Veno-Echo.cpp ****         //hard limit
 475:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 476:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 477:Veno-Echo.cpp **** 
 478:Veno-Echo.cpp **** if(PostFilters)
 479:Veno-Echo.cpp **** {
 480:Veno-Echo.cpp ****     //****************************************************************************************
 481:Veno-Echo.cpp ****         //post filters
 482:Veno-Echo.cpp ****         //process LPF
 483:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 484:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 485:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 486:Veno-Echo.cpp **** 
 487:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 488:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 489:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 490:Veno-Echo.cpp ****         
 491:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 492:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 493:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 494:Veno-Echo.cpp **** 
 495:Veno-Echo.cpp ****         //hard limit
 496:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 497:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 498:Veno-Echo.cpp **** 
 499:Veno-Echo.cpp ****         //process HPF
 500:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 501:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 502:Veno-Echo.cpp **** 
 503:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 504:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 505:Veno-Echo.cpp **** 
 506:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 507:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 508:Veno-Echo.cpp **** 
 509:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 510:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 511:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 512:Veno-Echo.cpp **** 
 513:Veno-Echo.cpp ****     //****************************************************************************************
 514:Veno-Echo.cpp **** }
 515:Veno-Echo.cpp **** else
 516:Veno-Echo.cpp **** {
 517:Veno-Echo.cpp ****     /* code */
 518:Veno-Echo.cpp **** }
 519:Veno-Echo.cpp ****         if(drywet < 0.5f)
 520:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 31


 521:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 522:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 523:Veno-Echo.cpp ****         }
 524:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 525:Veno-Echo.cpp ****         {
 526:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 527:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 528:Veno-Echo.cpp ****         }
 529:Veno-Echo.cpp ****         else
 530:Veno-Echo.cpp ****         {
 531:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 532:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 533:Veno-Echo.cpp ****         }
 534:Veno-Echo.cpp **** 
 535:Veno-Echo.cpp ****         //send mixes to outputs
 536:Veno-Echo.cpp ****         if(mute)
 537:Veno-Echo.cpp ****         {
 538:Veno-Echo.cpp ****             out[i] = 0.0f;
 539:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 540:Veno-Echo.cpp ****         }
 541:Veno-Echo.cpp ****         else
 542:Veno-Echo.cpp ****         {
 543:Veno-Echo.cpp ****             out[i] = mixL;
 544:Veno-Echo.cpp ****             out[i+1] = mixR;
 545:Veno-Echo.cpp ****         }
 546:Veno-Echo.cpp **** 
 547:Veno-Echo.cpp ****         //write to DAC for debug
 548:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 549:Veno-Echo.cpp **** 
 550:Veno-Echo.cpp ****     }
 551:Veno-Echo.cpp **** 
 552:Veno-Echo.cpp **** }
 553:Veno-Echo.cpp **** 
 554:Veno-Echo.cpp **** void InitDelays(float samplerate)
 555:Veno-Echo.cpp **** {
 439              		.loc 20 555 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 556:Veno-Echo.cpp **** 
 557:Veno-Echo.cpp ****     //Init fwd delays
 558:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 558 5 view .LVU50
 444              	.LBB792:
 445              	.LBI792:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB793:
 448              	.LBB794:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 32


 452              	.LBE794:
 453              	.LBE793:
 454              	.LBE792:
 555:Veno-Echo.cpp **** 
 455              		.loc 20 555 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB799:
 470              	.LBB798:
 471              	.LBB795:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE795:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB796:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE796:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB797:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 33


 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE797:
 525              	.LBE798:
 526              	.LBE799:
 527              	.LBB800:
 528              	.LBB801:
 529              	.LBB802:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE802:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 34


 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB803:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE803:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB804:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE804:
 576              	.LBE801:
 577              	.LBE800:
 559:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 560:Veno-Echo.cpp **** 
 561:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 562:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 562 5 is_stmt 1 view .LVU91
 563:Veno-Echo.cpp ****     delayR.del = &delMemsR;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 35


 579              		.loc 20 563 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 564:Veno-Echo.cpp **** 
 565:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 565 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 562:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 562 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 563:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 563 5 is_stmt 1 view .LVU95
 588              	.LBB805:
 589              	.LBB806:
 590              	.LBB807:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE807:
 594              	.LBE806:
 595              	.LBE805:
 563:Veno-Echo.cpp **** 
 596              		.loc 20 563 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 565 5 is_stmt 1 view .LVU98
 599              		.loc 20 565 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 565 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 566:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 566 5 is_stmt 1 view .LVU101
 611              		.loc 20 566 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB819:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 36


 618              	.LBB814:
 619              	.LBB809:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE809:
 623              	.LBE814:
 624              	.LBE819:
 625              		.loc 20 566 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 567:Veno-Echo.cpp **** 
 568:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 569:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 570:Veno-Echo.cpp **** 
 571:Veno-Echo.cpp ****     //Init rev delays
 572:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 572 5 is_stmt 1 view .LVU105
 632              	.LBB820:
 633              	.LBI805:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB815:
 636              	.LBI806:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB810:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB808:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 37


 659              	.LBE808:
 660              	.LBE810:
 661              	.LBE815:
 662              	.LBE820:
 663              	.LBB821:
 664              	.LBB822:
 665              	.LBB823:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE823:
 675              	.LBE822:
 676              	.LBE821:
 677              	.LBB846:
 678              	.LBB816:
 679              	.LBB811:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE811:
 683              	.LBE816:
 684              	.LBE846:
 685              	.LBB847:
 686              	.LBB836:
 687              	.LBB826:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE826:
 691              	.LBE836:
 692              	.LBE847:
 693              	.LBB848:
 694              	.LBB817:
 695              	.LBB812:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 38


  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE812:
 714              	.LBE817:
 715              	.LBE848:
 573:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 573 5 is_stmt 1 view .LVU128
 717              	.LBB849:
 718              	.LBI821:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB837:
 721              	.LBI822:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB827:
 724              	.LBB824:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE824:
 727              	.LBE827:
 728              	.LBE837:
 729              	.LBE849:
 730              	.LBB850:
 731              	.LBB818:
 732              	.LBB813:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE813:
 742              	.LBE818:
 743              	.LBE850:
 744              	.LBB851:
 745              	.LBB838:
 746              	.LBB828:
 747              	.LBB825:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 39


 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE825:
 756              	.LBE828:
 757              	.LBE838:
 758              	.LBE851:
 574:Veno-Echo.cpp **** 
 575:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 576:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 576 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB852:
 762              	.LBB839:
 763              	.LBB829:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE829:
 767              	.LBE839:
 768              	.LBE852:
 769              	.LBB853:
 770              	.LBB854:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE854:
 780              	.LBE853:
 781              	.LBB868:
 782              	.LBB840:
 783              	.LBB830:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE830:
 787              	.LBE840:
 788              	.LBE868:
 789              	.LBB869:
 790              	.LBB863:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE863:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 40


 794              	.LBE869:
 795              	.LBB870:
 796              	.LBB841:
 797              	.LBB831:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE831:
 803              	.LBE841:
 804              	.LBE870:
 805              	.LBB871:
 806              	.LBB864:
 807              	.LBB855:
 808              	.LBB856:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 41


  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE856:
 813              	.LBE855:
 814              	.LBE864:
 815              	.LBE871:
 816              	.LBB872:
 817              	.LBB842:
 818              	.LBB832:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE832:
 826              	.LBE842:
 827              	.LBE872:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 42


 828              	.LBB873:
 829              	.LBB865:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE865:
 833              	.LBE873:
 834              	.LBB874:
 835              	.LBB843:
 836              	.LBB833:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE833:
 842              	.LBE843:
 843              	.LBE874:
 844              		.loc 20 576 5 is_stmt 1 view .LVU155
 577:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 577 5 view .LVU156
 576:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 576 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB875:
 849              	.LBB844:
 850              	.LBB834:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE834:
 854              	.LBE844:
 855              	.LBE875:
 856              	.LBB876:
 857              	.LBB866:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE866:
 861              	.LBE876:
 862              	.LBB877:
 863              	.LBB845:
 864              	.LBB835:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE835:
 868              	.LBE845:
 869              	.LBE877:
 870              		.loc 20 577 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 578:Veno-Echo.cpp **** 
 579:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 580:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 580 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB878:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 43


 876              	.LBI853:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB867:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB858:
 881              	.LBI855:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB857:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE857:
 887              	.LBE858:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB859:
 892              	.LBB860:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE860:
 896              	.LBE859:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB862:
 902              	.LBI859:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB861:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE861:
 913              	.LBE862:
 914              	.LBE867:
 915              	.LBE878:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 44


 581:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 581 5 is_stmt 1 view .LVU177
 917              	.LBB879:
 918              	.LBI879:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB880:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB881:
 926              	.LBI881:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB882:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE882:
 932              	.LBE881:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB884:
 942              	.LBB883:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE883:
 946              	.LBE884:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB885:
 953              	.LBB886:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE886:
 959              	.LBE885:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 45


 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB888:
 965              	.LBI885:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB887:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE887:
 976              	.LBE888:
 977              	.LBE880:
 978              	.LBE879:
 582:Veno-Echo.cpp **** 
 583:Veno-Echo.cpp **** }
 979              		.loc 20 583 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 46


 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 584:Veno-Echo.cpp **** 
 585:Veno-Echo.cpp **** int main(void)
 586:Veno-Echo.cpp **** {
 587:Veno-Echo.cpp ****     // initialize hardware.
 588:Veno-Echo.cpp ****     hw.Configure();
 589:Veno-Echo.cpp ****     hw.Init();
 590:Veno-Echo.cpp ****     
 591:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 592:Veno-Echo.cpp **** 
 593:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(12),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 594:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 595:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 596:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 597:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 598:Veno-Echo.cpp **** 
 599:Veno-Echo.cpp ****     //Gates
 600:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 601:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 602:Veno-Echo.cpp **** 
 603:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 604:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 605:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 606:Veno-Echo.cpp ****     
 607:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 608:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 609:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 610:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 611:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 612:Veno-Echo.cpp **** 
 613:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 614:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 615:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 616:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 617:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 618:Veno-Echo.cpp **** 
 619:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 620:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 621:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 622:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 623:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 624:Veno-Echo.cpp **** 
 625:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 626:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 627:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 628:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 629:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 630:Veno-Echo.cpp **** 
 631:Veno-Echo.cpp ****     // set params for CrossFade objects
 632:Veno-Echo.cpp ****     FwdRevLXfade.Init();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 47


 633:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 634:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 635:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 636:Veno-Echo.cpp **** 
 637:Veno-Echo.cpp ****     WidthXfade.Init();
 638:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 639:Veno-Echo.cpp **** 
 640:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 641:Veno-Echo.cpp **** 
 642:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 643:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 644:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 645:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 646:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 647:Veno-Echo.cpp **** 
 648:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 649:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 650:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 651:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 652:Veno-Echo.cpp **** 
 653:Veno-Echo.cpp ****     //setup L and R High Pass filters
 654:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 655:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 656:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 657:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 658:Veno-Echo.cpp **** 
 659:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 660:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 661:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 662:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 663:Veno-Echo.cpp **** 
 664:Veno-Echo.cpp ****     //post filters
 665:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 666:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 667:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 668:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 669:Veno-Echo.cpp **** 
 670:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 671:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 672:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 673:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 674:Veno-Echo.cpp **** 
 675:Veno-Echo.cpp ****     //setup L and R High Pass filters
 676:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 677:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 678:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 679:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 680:Veno-Echo.cpp **** 
 681:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 682:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 683:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 684:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 685:Veno-Echo.cpp **** 
 686:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 687:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 688:Veno-Echo.cpp **** 
 689:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 48


 690:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 691:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 692:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 693:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 694:Veno-Echo.cpp **** 
 695:Veno-Echo.cpp **** 
 696:Veno-Echo.cpp ****     //timers: used to limit time between updates to delay time parameters
 697:Veno-Echo.cpp ****     //dsy_tim_init(); //start timer
 698:Veno-Echo.cpp ****     //dsy_tim_start();
 699:Veno-Echo.cpp **** 
 700:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 701:Veno-Echo.cpp **** 
 702:Veno-Echo.cpp ****     //setup tempo indicators
 703:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 704:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 705:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 706:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 707:Veno-Echo.cpp **** 
 708:Veno-Echo.cpp ****     //load settings from flash
 709:Veno-Echo.cpp **** 
 710:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 711:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 712:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 713:Veno-Echo.cpp **** 
 714:Veno-Echo.cpp ****     //initialize DAC
 715:Veno-Echo.cpp ****     //dsy_dac_init(&hw.dac_handle, DSY_DAC_CHN_BOTH);
 716:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN1, 0);
 717:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN2, 0);
 718:Veno-Echo.cpp **** 
 719:Veno-Echo.cpp ****     //ADC
 720:Veno-Echo.cpp ****     AdcChannelConfig adc[8];
 721:Veno-Echo.cpp **** 
 722:Veno-Echo.cpp ****     adc[0].InitSingle(hw.GetPin(15));
 723:Veno-Echo.cpp ****     adc[1].InitSingle(hw.GetPin(16));
 724:Veno-Echo.cpp ****     adc[2].InitSingle(hw.GetPin(17));
 725:Veno-Echo.cpp ****     adc[3].InitSingle(hw.GetPin(18));
 726:Veno-Echo.cpp ****     adc[4].InitSingle(hw.GetPin(19));
 727:Veno-Echo.cpp ****     adc[5].InitSingle(hw.GetPin(20));
 728:Veno-Echo.cpp ****     adc[6].InitSingle(hw.GetPin(21));
 729:Veno-Echo.cpp ****     adc[7].InitSingle(hw.GetPin(22));
 730:Veno-Echo.cpp **** 
 731:Veno-Echo.cpp ****     hw.adc.Init(adc, 8);
 732:Veno-Echo.cpp ****     hw.adc.Start();
 733:Veno-Echo.cpp **** 
 734:Veno-Echo.cpp **** 
 735:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 736:Veno-Echo.cpp ****     // start audio callback
 737:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 738:Veno-Echo.cpp **** 
 739:Veno-Echo.cpp ****     
 740:Veno-Echo.cpp **** 
 741:Veno-Echo.cpp ****      for(;;)
 742:Veno-Echo.cpp ****      {
 743:Veno-Echo.cpp **** 
 744:Veno-Echo.cpp **** /*
 745:Veno-Echo.cpp ****         if(save_flag)
 746:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 49


 747:Veno-Echo.cpp **** 
 748:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 749:Veno-Echo.cpp ****             {
 750:Veno-Echo.cpp ****                 //reset flag
 751:Veno-Echo.cpp ****                 //System::Delay(1000);
 752:Veno-Echo.cpp ****                 save_flag = false;
 753:Veno-Echo.cpp ****             }
 754:Veno-Echo.cpp ****         }
 755:Veno-Echo.cpp **** 
 756:Veno-Echo.cpp **** */
 757:Veno-Echo.cpp ****      }
 758:Veno-Echo.cpp **** 
 759:Veno-Echo.cpp **** }
 760:Veno-Echo.cpp **** 
 761:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 762:Veno-Echo.cpp **** {
 1022              		.loc 20 762 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 763:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 763 5 view .LVU201
 762:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 762 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 763 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 763 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 764:Veno-Echo.cpp **** }
 1040              		.loc 20 764 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 765:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 50


 766:Veno-Echo.cpp **** void Update_DelayTimeL()
 767:Veno-Echo.cpp **** {
 1061              		.loc 20 767 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 768:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 768 5 view .LVU207
 769:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 769 5 view .LVU208
 770:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 770 5 view .LVU209
 771:Veno-Echo.cpp ****     
 772:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 772 5 view .LVU210
 773:Veno-Echo.cpp **** 
 774:Veno-Echo.cpp ****     //update pot values
 775:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetFloat(0)};
 1069              		.loc 20 775 5 view .LVU211
 767:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 767 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 775 41 view .LVU213
 1076 0002 0021     		movs	r1, #0
 1077 0004 6E48     		ldr	r0, .L75
 767:Veno-Echo.cpp ****     static bool lastShift{};
 1078              		.loc 20 767 1 view .LVU214
 1079 0006 2DED028B 		vpush.64	{d8}
 1080              		.cfi_def_cfa_offset 16
 1081              		.cfi_offset 80, -16
 1082              		.cfi_offset 81, -12
 1083              		.loc 20 775 41 view .LVU215
 1084 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1085              	.LVL40:
 776:Veno-Echo.cpp **** 
 777:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 778:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 779:Veno-Echo.cpp ****     static int counterL{};
 780:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 780 26 view .LVU216
 1087 000e 6D48     		ldr	r0, .L75+4
 1088              		.loc 20 780 31 view .LVU217
 1089 0010 6D4B     		ldr	r3, .L75+8
 1090              	.LVL41:
 779:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1091              		.loc 20 779 5 is_stmt 1 view .LVU218
 1092              		.loc 20 780 5 view .LVU219
 1093              		.loc 20 780 26 is_stmt 0 view .LVU220
 1094 0012 0268     		ldr	r2, [r0]
 1095              	.LBB889:
 781:Veno-Echo.cpp **** 
 782:Veno-Echo.cpp ****     if (!shift) //default control
 1096              		.loc 20 782 9 view .LVU221
 1097 0014 6D49     		ldr	r1, .L75+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 51


 1098              	.LBE889:
 780:Veno-Echo.cpp **** 
 1099              		.loc 20 780 26 view .LVU222
 1100 0016 0132     		adds	r2, r2, #1
 1101              	.LBB952:
 1102              		.loc 20 782 5 view .LVU223
 1103 0018 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1104              	.LBE952:
 780:Veno-Echo.cpp **** 
 1105              		.loc 20 780 31 view .LVU224
 1106 001a 83FB0231 		smull	r3, r1, r3, r2
 1107 001e D317     		asrs	r3, r2, #31
 1108 0020 C3EB6113 		rsb	r3, r3, r1, asr #5
 1109 0024 03EB4303 		add	r3, r3, r3, lsl #1
 1110 0028 A2EB8313 		sub	r3, r2, r3, lsl #6
 1111              	.LBB953:
 1112              	.LBB890:
 783:Veno-Echo.cpp ****     {
 784:Veno-Echo.cpp ****         static float delayTimeL_new{};
 785:Veno-Echo.cpp ****         //udpate pickup
 786:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1113              		.loc 20 786 19 view .LVU225
 1114 002c 684A     		ldr	r2, .L75+16
 1115              	.LBE890:
 1116              	.LBE953:
 780:Veno-Echo.cpp **** 
 1117              		.loc 20 780 14 view .LVU226
 1118 002e 0360     		str	r3, [r0]
 782:Veno-Echo.cpp ****     {
 1119              		.loc 20 782 5 is_stmt 1 view .LVU227
 1120              	.LBB954:
 1121 0030 84BB     		cbnz	r4, .L43
 1122              	.LBB905:
 784:Veno-Echo.cpp ****         //udpate pickup
 1123              		.loc 20 784 9 view .LVU228
 1124              		.loc 20 786 9 view .LVU229
 1125 0032 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1126 0034 0029     		cmp	r1, #0
 1127 0036 39D0     		beq	.L44
 787:Veno-Echo.cpp ****         {
 788:Veno-Echo.cpp ****             lastShift = shift;
 1128              		.loc 20 788 13 view .LVU230
 789:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1129              		.loc 20 789 31 is_stmt 0 view .LVU231
 1130 0038 6648     		ldr	r0, .L75+20
 790:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1131              		.loc 20 790 28 view .LVU232
 1132 003a 6749     		ldr	r1, .L75+24
 788:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1133              		.loc 20 788 23 view .LVU233
 1134 003c 1470     		strb	r4, [r2]
 789:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1135              		.loc 20 789 13 is_stmt 1 view .LVU234
 789:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1136              		.loc 20 789 31 is_stmt 0 view .LVU235
 1137 003e 0470     		strb	r4, [r0]
 1138              		.loc 20 790 13 is_stmt 1 view .LVU236
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 52


 1139              		.loc 20 790 28 is_stmt 0 view .LVU237
 1140 0040 81ED000A 		vstr.32	s0, [r1]
 1141              	.L45:
 791:Veno-Echo.cpp ****         } 
 792:Veno-Echo.cpp ****         else    //not a recent shift change
 793:Veno-Echo.cpp ****         {
 794:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 795:Veno-Echo.cpp ****             {
 796:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 797:Veno-Echo.cpp ****                 {
 798:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 799:Veno-Echo.cpp ****                 }
 800:Veno-Echo.cpp ****             }
 801:Veno-Echo.cpp ****         }
 802:Veno-Echo.cpp **** 
 803:Veno-Echo.cpp ****         float delayTimeL{};
 1142              		.loc 20 803 9 is_stmt 1 view .LVU238
 1143              	.LVL42:
 804:Veno-Echo.cpp **** 
 805:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1144              		.loc 20 805 9 view .LVU239
 806:Veno-Echo.cpp ****         {
 807:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,0.5f);  //combine pot value and CV
 808:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 809:Veno-Echo.cpp ****         }
 810:Veno-Echo.cpp **** 
 811:Veno-Echo.cpp ****         else
 812:Veno-Echo.cpp ****         {
 813:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,0.5f); //combine last pot value and CV
 1145              		.loc 20 813 13 view .LVU240
 1146              	.LBB891:
 1147              	.LBI891:
 814:Veno-Echo.cpp ****         }
 815:Veno-Echo.cpp **** 
 816:Veno-Echo.cpp ****         if(counterL == 0)
 817:Veno-Echo.cpp ****         {
 818:Veno-Echo.cpp ****             if(delayL.SetDelayTime(1.0f - delayTimeL,BaseTempo.getTapLength(),syncMode))
 819:Veno-Echo.cpp ****             {
 820:Veno-Echo.cpp ****                 //if(syncMode)
 821:Veno-Echo.cpp ****                 //    divChange_flag = true;
 822:Veno-Echo.cpp ****             };
 823:Veno-Echo.cpp ****         }
 824:Veno-Echo.cpp **** 
 825:Veno-Echo.cpp ****     }   //not shift mode
 826:Veno-Echo.cpp **** 
 827:Veno-Echo.cpp ****     else    //shift mode
 828:Veno-Echo.cpp ****     {
 829:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 830:Veno-Echo.cpp **** 
 831:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 832:Veno-Echo.cpp ****         {
 833:Veno-Echo.cpp ****             lastShift = shift;
 834:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 835:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 836:Veno-Echo.cpp ****         }
 837:Veno-Echo.cpp **** 
 838:Veno-Echo.cpp ****         else    //not a recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 53


 839:Veno-Echo.cpp ****         {
 840:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 841:Veno-Echo.cpp ****             {
 842:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 843:Veno-Echo.cpp ****                 {
 844:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 845:Veno-Echo.cpp ****                 }
 846:Veno-Echo.cpp ****             }
 847:Veno-Echo.cpp ****         }
 848:Veno-Echo.cpp **** 
 849:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 850:Veno-Echo.cpp ****         {
 851:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 852:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 853:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 854:Veno-Echo.cpp ****             //save setting:
 855:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 856:Veno-Echo.cpp ****         }
 857:Veno-Echo.cpp ****     }
 858:Veno-Echo.cpp ****     
 859:Veno-Echo.cpp **** }
 860:Veno-Echo.cpp **** 
 861:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 862:Veno-Echo.cpp **** {
 863:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 864:Veno-Echo.cpp **** }
 865:Veno-Echo.cpp **** 
 866:Veno-Echo.cpp **** void Update_DelayTimeR()
 867:Veno-Echo.cpp **** {
 868:Veno-Echo.cpp ****     static bool lastShift{};
 869:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 870:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 871:Veno-Echo.cpp ****     
 872:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 873:Veno-Echo.cpp **** 
 874:Veno-Echo.cpp ****     //update pot values
 875:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetFloat(1)};
 876:Veno-Echo.cpp **** 
 877:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 878:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 879:Veno-Echo.cpp ****     static int counterR{};
 880:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 881:Veno-Echo.cpp **** 
 882:Veno-Echo.cpp ****     if (!shift) //default control
 883:Veno-Echo.cpp ****     {
 884:Veno-Echo.cpp ****         static float delayTimeR_new{};
 885:Veno-Echo.cpp ****         //udpate pickup
 886:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 887:Veno-Echo.cpp ****         {
 888:Veno-Echo.cpp ****             lastShift = shift;
 889:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 890:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 891:Veno-Echo.cpp ****         } 
 892:Veno-Echo.cpp ****         else    //not a default shift change
 893:Veno-Echo.cpp ****         {
 894:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 895:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 54


 896:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 897:Veno-Echo.cpp ****                 {
 898:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 899:Veno-Echo.cpp ****                 }
 900:Veno-Echo.cpp ****             }
 901:Veno-Echo.cpp ****         }
 902:Veno-Echo.cpp **** 
 903:Veno-Echo.cpp ****         float delayTimeR{};
 904:Veno-Echo.cpp **** 
 905:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 906:Veno-Echo.cpp ****         {
 907:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,0.5f);
 908:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 909:Veno-Echo.cpp ****         }
 910:Veno-Echo.cpp **** 
 911:Veno-Echo.cpp ****         else
 912:Veno-Echo.cpp ****         {
 913:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,0.5f);
 914:Veno-Echo.cpp ****         }
 915:Veno-Echo.cpp **** 
 916:Veno-Echo.cpp ****         if(counterR == 0)
 917:Veno-Echo.cpp ****         {
 918:Veno-Echo.cpp ****             if(delayR.SetDelayTime(1.0f - delayTimeR,BaseTempo.getTapLength(),syncMode))
 919:Veno-Echo.cpp ****             {
 920:Veno-Echo.cpp ****                 //if(syncMode)
 921:Veno-Echo.cpp ****                 //    divChange_flag = true;
 922:Veno-Echo.cpp ****             };
 923:Veno-Echo.cpp **** 
 924:Veno-Echo.cpp ****         }
 925:Veno-Echo.cpp ****     }   //not shift mode
 926:Veno-Echo.cpp **** 
 927:Veno-Echo.cpp ****     else    //shift mode
 928:Veno-Echo.cpp ****     {
 929:Veno-Echo.cpp **** 
 930:Veno-Echo.cpp ****         static float tapRatio_new{};
 931:Veno-Echo.cpp **** 
 932:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 933:Veno-Echo.cpp ****         {
 934:Veno-Echo.cpp ****             lastShift = shift;
 935:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 936:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 937:Veno-Echo.cpp ****         }
 938:Veno-Echo.cpp **** 
 939:Veno-Echo.cpp ****         else    //not a recent shift change
 940:Veno-Echo.cpp ****         {
 941:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
 942:Veno-Echo.cpp ****             {
 943:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
 944:Veno-Echo.cpp ****                 {
 945:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
 946:Veno-Echo.cpp ****                 }
 947:Veno-Echo.cpp ****             }
 948:Veno-Echo.cpp ****         }
 949:Veno-Echo.cpp **** 
 950:Veno-Echo.cpp ****         if(tapRatio_pickup)
 951:Veno-Echo.cpp ****         {
 952:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 55


 953:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 954:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 955:Veno-Echo.cpp ****             //save setting:
 956:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 957:Veno-Echo.cpp ****         }
 958:Veno-Echo.cpp ****     }
 959:Veno-Echo.cpp ****     
 960:Veno-Echo.cpp **** }
 961:Veno-Echo.cpp **** void Update_feedbackL_CV()
 962:Veno-Echo.cpp **** {
 963:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 964:Veno-Echo.cpp **** }
 965:Veno-Echo.cpp **** void Update_feedbackL()
 966:Veno-Echo.cpp **** {
 967:Veno-Echo.cpp ****     static bool lastShift{};
 968:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 969:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 970:Veno-Echo.cpp **** 
 971:Veno-Echo.cpp ****     static float feedbackL_Last{};
 972:Veno-Echo.cpp **** 
 973:Veno-Echo.cpp ****     //get pot values:
 974:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 975:Veno-Echo.cpp ****     float feedbackL_Pot{1.0f - hw.adc.GetFloat(2)};
 976:Veno-Echo.cpp **** 
 977:Veno-Echo.cpp ****     if (!shift) //default controls
 978:Veno-Echo.cpp ****     {   
 979:Veno-Echo.cpp ****         static float feedbackL_new{};
 980:Veno-Echo.cpp ****         //update pickup
 981:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 982:Veno-Echo.cpp ****         {
 983:Veno-Echo.cpp ****             lastShift = shift;
 984:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 985:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 986:Veno-Echo.cpp ****         } 
 987:Veno-Echo.cpp ****         else    //not a default shift change
 988:Veno-Echo.cpp ****         {
 989:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
 990:Veno-Echo.cpp ****             {
 991:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
 992:Veno-Echo.cpp ****                 {
 993:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
 994:Veno-Echo.cpp ****                 }
 995:Veno-Echo.cpp ****             }
 996:Veno-Echo.cpp ****         }
 997:Veno-Echo.cpp **** 
 998:Veno-Echo.cpp ****         float feedbackL_combo{};
 999:Veno-Echo.cpp **** 
1000:Veno-Echo.cpp ****         if(feedbackL_pickup)
1001:Veno-Echo.cpp ****         {
1002:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,0.5f);
1003:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1004:Veno-Echo.cpp ****         }
1005:Veno-Echo.cpp **** 
1006:Veno-Echo.cpp ****         else
1007:Veno-Echo.cpp ****         {
1008:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,0.5f);
1009:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 56


1010:Veno-Echo.cpp ****   
1011:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1012:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1013:Veno-Echo.cpp ****     }
1014:Veno-Echo.cpp ****     else    //alternate controls
1015:Veno-Echo.cpp ****     {
1016:Veno-Echo.cpp ****         static float HPCutoff_new{};
1017:Veno-Echo.cpp **** 
1018:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1019:Veno-Echo.cpp ****         {
1020:Veno-Echo.cpp ****             lastShift = shift;
1021:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1022:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1023:Veno-Echo.cpp ****         }
1024:Veno-Echo.cpp **** 
1025:Veno-Echo.cpp ****         else    //not a recent shift change
1026:Veno-Echo.cpp ****         {
1027:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1028:Veno-Echo.cpp ****             {
1029:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1030:Veno-Echo.cpp ****                 {
1031:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1032:Veno-Echo.cpp ****                 }
1033:Veno-Echo.cpp ****             }
1034:Veno-Echo.cpp ****         }
1035:Veno-Echo.cpp **** 
1036:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1037:Veno-Echo.cpp ****         {
1038:Veno-Echo.cpp ****             float HPCutoff{};
1039:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1040:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1041:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1042:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1043:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1044:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1045:Veno-Echo.cpp ****         }
1046:Veno-Echo.cpp ****     }
1047:Veno-Echo.cpp **** }
1048:Veno-Echo.cpp **** 
1049:Veno-Echo.cpp **** void Update_feedbackR_CV()
1050:Veno-Echo.cpp **** {
1051:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1052:Veno-Echo.cpp **** }
1053:Veno-Echo.cpp **** 
1054:Veno-Echo.cpp **** void Update_feedbackR()
1055:Veno-Echo.cpp **** {
1056:Veno-Echo.cpp ****     static bool lastShift{};
1057:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1058:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1059:Veno-Echo.cpp **** 
1060:Veno-Echo.cpp ****     static float feedbackR_Last{};
1061:Veno-Echo.cpp **** 
1062:Veno-Echo.cpp ****     //get pot values:
1063:Veno-Echo.cpp ****     float feedbackR_Pot{1.0f - hw.adc.GetFloat(3)};
1064:Veno-Echo.cpp **** 
1065:Veno-Echo.cpp ****     if (!shift) //default controls
1066:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 57


1067:Veno-Echo.cpp ****         static float feedbackR_new{};
1068:Veno-Echo.cpp ****         //update pickup
1069:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1070:Veno-Echo.cpp ****         {
1071:Veno-Echo.cpp ****             lastShift = shift;
1072:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1073:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1074:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1075:Veno-Echo.cpp ****         } 
1076:Veno-Echo.cpp ****         else    //not a recent shift change
1077:Veno-Echo.cpp ****         {
1078:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1079:Veno-Echo.cpp ****             {
1080:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1081:Veno-Echo.cpp ****                 {
1082:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1083:Veno-Echo.cpp ****                 }
1084:Veno-Echo.cpp ****             }
1085:Veno-Echo.cpp ****         }
1086:Veno-Echo.cpp **** 
1087:Veno-Echo.cpp ****         float feedbackR_combo{};
1088:Veno-Echo.cpp ****         
1089:Veno-Echo.cpp ****         if(feedbackR_pickup)
1090:Veno-Echo.cpp ****         {
1091:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,0.5f);
1092:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1093:Veno-Echo.cpp ****         }
1094:Veno-Echo.cpp **** 
1095:Veno-Echo.cpp ****         else
1096:Veno-Echo.cpp ****         {
1097:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,0.5f);
1098:Veno-Echo.cpp ****         }
1099:Veno-Echo.cpp **** 
1100:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1101:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1102:Veno-Echo.cpp ****     }
1103:Veno-Echo.cpp ****     else    //alternate controls
1104:Veno-Echo.cpp ****     {
1105:Veno-Echo.cpp **** 
1106:Veno-Echo.cpp ****         static float LPCutoff_new{};
1107:Veno-Echo.cpp **** 
1108:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1109:Veno-Echo.cpp ****         {
1110:Veno-Echo.cpp ****             lastShift = shift;
1111:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1112:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1113:Veno-Echo.cpp ****         }
1114:Veno-Echo.cpp **** 
1115:Veno-Echo.cpp ****         else    //not a recent shift change
1116:Veno-Echo.cpp ****         {
1117:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1118:Veno-Echo.cpp ****             {
1119:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1120:Veno-Echo.cpp ****                 {
1121:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1122:Veno-Echo.cpp ****                 }
1123:Veno-Echo.cpp ****             }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 58


1124:Veno-Echo.cpp ****         }
1125:Veno-Echo.cpp **** 
1126:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1127:Veno-Echo.cpp ****         {
1128:Veno-Echo.cpp ****             float LPCutoff{};
1129:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1130:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1131:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1132:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1133:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1134:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1135:Veno-Echo.cpp ****         }
1136:Veno-Echo.cpp ****     }
1137:Veno-Echo.cpp **** }
1138:Veno-Echo.cpp **** 
1139:Veno-Echo.cpp **** void Update_drywet_CV()
1140:Veno-Echo.cpp **** {
1141:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1142:Veno-Echo.cpp **** }
1143:Veno-Echo.cpp **** 
1144:Veno-Echo.cpp **** void Update_drywet()
1145:Veno-Echo.cpp **** {
1146:Veno-Echo.cpp ****     static bool lastShift{};
1147:Veno-Echo.cpp ****     static bool drywet_pickup{};
1148:Veno-Echo.cpp ****     static bool Res_pickup{};
1149:Veno-Echo.cpp **** 
1150:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1151:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1152:Veno-Echo.cpp **** 
1153:Veno-Echo.cpp ****     //get pot values:
1154:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1155:Veno-Echo.cpp ****     float drywet_Pot{1.0f - hw.adc.GetFloat(4)}; //read current pot position
1156:Veno-Echo.cpp **** 
1157:Veno-Echo.cpp ****     if (!shift) //default controls
1158:Veno-Echo.cpp ****     {   
1159:Veno-Echo.cpp **** 
1160:Veno-Echo.cpp ****         static float drywet_new{};
1161:Veno-Echo.cpp **** 
1162:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1163:Veno-Echo.cpp ****         {
1164:Veno-Echo.cpp ****             lastShift = shift;
1165:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1166:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1167:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1168:Veno-Echo.cpp ****         } 
1169:Veno-Echo.cpp ****         
1170:Veno-Echo.cpp ****         else    //not a recent shift change
1171:Veno-Echo.cpp ****         {
1172:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1173:Veno-Echo.cpp ****             {
1174:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1175:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1176:Veno-Echo.cpp ****                 {
1177:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1178:Veno-Echo.cpp ****                 }
1179:Veno-Echo.cpp ****             }
1180:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 59


1181:Veno-Echo.cpp ****         }
1182:Veno-Echo.cpp ****         
1183:Veno-Echo.cpp ****         float drywetcombo{};
1184:Veno-Echo.cpp **** 
1185:Veno-Echo.cpp ****         if (drywet_pickup)
1186:Veno-Echo.cpp ****         {
1187:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,0.5f);    //combine pot and CV
1188:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1189:Veno-Echo.cpp ****         }
1190:Veno-Echo.cpp **** 
1191:Veno-Echo.cpp ****         else
1192:Veno-Echo.cpp ****         {
1193:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,0.5f);    //combine last pot value and CV
1194:Veno-Echo.cpp ****         }
1195:Veno-Echo.cpp **** 
1196:Veno-Echo.cpp ****         float drywetTarget{};
1197:Veno-Echo.cpp **** 
1198:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1199:Veno-Echo.cpp ****         {
1200:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1201:Veno-Echo.cpp ****         }
1202:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1203:Veno-Echo.cpp ****         {
1204:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1205:Veno-Echo.cpp ****         }
1206:Veno-Echo.cpp ****         else
1207:Veno-Echo.cpp ****         {
1208:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1209:Veno-Echo.cpp ****         }
1210:Veno-Echo.cpp **** 
1211:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1212:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1213:Veno-Echo.cpp ****     }
1214:Veno-Echo.cpp ****     else    //alternate controls
1215:Veno-Echo.cpp ****     {
1216:Veno-Echo.cpp ****         static float Res_new{};
1217:Veno-Echo.cpp **** 
1218:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1219:Veno-Echo.cpp ****         {
1220:Veno-Echo.cpp ****             lastShift = shift;
1221:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1222:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1223:Veno-Echo.cpp ****         }
1224:Veno-Echo.cpp **** 
1225:Veno-Echo.cpp ****         else    //not a recent shift change
1226:Veno-Echo.cpp ****         {
1227:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1228:Veno-Echo.cpp ****             {
1229:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1230:Veno-Echo.cpp ****                 {
1231:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1232:Veno-Echo.cpp ****                 }
1233:Veno-Echo.cpp ****             }
1234:Veno-Echo.cpp ****         }
1235:Veno-Echo.cpp **** 
1236:Veno-Echo.cpp ****         if(Res_pickup)
1237:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 60


1238:Veno-Echo.cpp ****             float Res{};
1239:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1240:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1241:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1242:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1243:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1244:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1245:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1246:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1247:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1248:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1249:Veno-Echo.cpp ****         }
1250:Veno-Echo.cpp ****     }
1251:Veno-Echo.cpp **** }
1252:Veno-Echo.cpp **** 
1253:Veno-Echo.cpp **** void Update_width_CV()
1254:Veno-Echo.cpp **** {
1255:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1256:Veno-Echo.cpp **** }
1257:Veno-Echo.cpp **** 
1258:Veno-Echo.cpp **** void Update_width()
1259:Veno-Echo.cpp **** {
1260:Veno-Echo.cpp ****     static bool lastShift{};
1261:Veno-Echo.cpp ****     static bool width_pickup{};
1262:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1263:Veno-Echo.cpp **** 
1264:Veno-Echo.cpp ****     static float width_Last{};
1265:Veno-Echo.cpp **** 
1266:Veno-Echo.cpp ****     //get pot values:
1267:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetFloat(5)};
1268:Veno-Echo.cpp **** 
1269:Veno-Echo.cpp ****     if (!shift) //default controls
1270:Veno-Echo.cpp ****     {   
1271:Veno-Echo.cpp ****         static float width_new{};
1272:Veno-Echo.cpp ****         //update pickup
1273:Veno-Echo.cpp ****         if (shift != lastShift)
1274:Veno-Echo.cpp ****         {
1275:Veno-Echo.cpp ****             lastShift = shift;
1276:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1277:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1278:Veno-Echo.cpp ****         }
1279:Veno-Echo.cpp **** 
1280:Veno-Echo.cpp ****         else
1281:Veno-Echo.cpp ****         {
1282:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1283:Veno-Echo.cpp ****             {
1284:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1285:Veno-Echo.cpp ****                 {
1286:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1287:Veno-Echo.cpp ****                 }
1288:Veno-Echo.cpp ****             }
1289:Veno-Echo.cpp **** 
1290:Veno-Echo.cpp ****         }
1291:Veno-Echo.cpp **** 
1292:Veno-Echo.cpp ****         float widthTarget{};
1293:Veno-Echo.cpp **** 
1294:Veno-Echo.cpp ****         if(width_pickup)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 61


1295:Veno-Echo.cpp ****         {
1296:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,0.5f),0.0f,0.5f,LINEAR);
1297:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1298:Veno-Echo.cpp ****         }
1299:Veno-Echo.cpp **** 
1300:Veno-Echo.cpp ****         else
1301:Veno-Echo.cpp ****         {        
1302:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,0.5f),0.0f,0.5f,LINEAR);
1303:Veno-Echo.cpp ****         }
1304:Veno-Echo.cpp ****             
1305:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1306:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1307:Veno-Echo.cpp ****     }
1308:Veno-Echo.cpp **** 
1309:Veno-Echo.cpp ****     else    //alternate controls
1310:Veno-Echo.cpp ****     {
1311:Veno-Echo.cpp ****         static float ModDepth_new{};
1312:Veno-Echo.cpp **** 
1313:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1314:Veno-Echo.cpp ****         {
1315:Veno-Echo.cpp ****             lastShift = shift;
1316:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1317:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1318:Veno-Echo.cpp ****         }
1319:Veno-Echo.cpp **** 
1320:Veno-Echo.cpp ****         else    //not a recent shift change
1321:Veno-Echo.cpp ****         {
1322:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1323:Veno-Echo.cpp ****             {
1324:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1325:Veno-Echo.cpp ****                 {
1326:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1327:Veno-Echo.cpp ****                 }
1328:Veno-Echo.cpp ****             }
1329:Veno-Echo.cpp ****         }
1330:Veno-Echo.cpp **** 
1331:Veno-Echo.cpp ****         if(ModDepth_pickup)
1332:Veno-Echo.cpp ****         {
1333:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1334:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1335:Veno-Echo.cpp ****         }
1336:Veno-Echo.cpp ****     }
1337:Veno-Echo.cpp **** }
1338:Veno-Echo.cpp **** 
1339:Veno-Echo.cpp **** void Update_crossfeedback()
1340:Veno-Echo.cpp **** {
1341:Veno-Echo.cpp ****     static bool lastShift{};
1342:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1343:Veno-Echo.cpp ****     static bool modRate_pickup{};
1344:Veno-Echo.cpp **** 
1345:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1346:Veno-Echo.cpp **** 
1347:Veno-Echo.cpp ****     //get pot values:
1348:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetFloat(6)};
1349:Veno-Echo.cpp **** 
1350:Veno-Echo.cpp ****     if (!shift) //default controls
1351:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 62


1352:Veno-Echo.cpp ****         static float crossfeedback_new{};
1353:Veno-Echo.cpp ****         //update pickup
1354:Veno-Echo.cpp ****         if (shift != lastShift)
1355:Veno-Echo.cpp ****         {
1356:Veno-Echo.cpp ****             lastShift = shift;
1357:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1358:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1359:Veno-Echo.cpp ****         }
1360:Veno-Echo.cpp **** 
1361:Veno-Echo.cpp ****         else
1362:Veno-Echo.cpp ****         {
1363:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1364:Veno-Echo.cpp ****             {
1365:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1366:Veno-Echo.cpp ****                 {
1367:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1368:Veno-Echo.cpp ****                 }
1369:Veno-Echo.cpp ****             }
1370:Veno-Echo.cpp ****         }
1371:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1372:Veno-Echo.cpp **** 
1373:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1374:Veno-Echo.cpp ****         {
1375:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1376:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1377:Veno-Echo.cpp ****         }
1378:Veno-Echo.cpp **** 
1379:Veno-Echo.cpp ****         else
1380:Veno-Echo.cpp ****         {
1381:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1382:Veno-Echo.cpp ****         }
1383:Veno-Echo.cpp **** 
1384:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1385:Veno-Echo.cpp ****     }
1386:Veno-Echo.cpp ****     else    //alternate controls
1387:Veno-Echo.cpp ****     {
1388:Veno-Echo.cpp ****         static float modRate_new{};
1389:Veno-Echo.cpp **** 
1390:Veno-Echo.cpp ****         if (shift != lastShift)
1391:Veno-Echo.cpp ****         {
1392:Veno-Echo.cpp ****             lastShift = shift;
1393:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1394:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1395:Veno-Echo.cpp ****         }
1396:Veno-Echo.cpp **** 
1397:Veno-Echo.cpp ****         else
1398:Veno-Echo.cpp ****         {
1399:Veno-Echo.cpp ****             if(!modRate_pickup)
1400:Veno-Echo.cpp ****             {
1401:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1402:Veno-Echo.cpp ****                 {
1403:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1404:Veno-Echo.cpp ****                 }
1405:Veno-Echo.cpp ****             }
1406:Veno-Echo.cpp ****         }
1407:Veno-Echo.cpp **** 
1408:Veno-Echo.cpp ****         if(modRate_pickup)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 63


1409:Veno-Echo.cpp ****         {
1410:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1411:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1412:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1413:Veno-Echo.cpp ****         }
1414:Veno-Echo.cpp ****     }
1415:Veno-Echo.cpp **** }
1416:Veno-Echo.cpp **** 
1417:Veno-Echo.cpp **** void Update_filterXfade()
1418:Veno-Echo.cpp **** {
1419:Veno-Echo.cpp ****     static bool lastShift{};
1420:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1421:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1422:Veno-Echo.cpp **** 
1423:Veno-Echo.cpp ****     static float filterXfade_last{};
1424:Veno-Echo.cpp **** 
1425:Veno-Echo.cpp ****     //get pot values:
1426:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetFloat(6)};
1427:Veno-Echo.cpp **** 
1428:Veno-Echo.cpp ****     if (!shift) //default controls
1429:Veno-Echo.cpp ****     {   
1430:Veno-Echo.cpp ****         static float filterXfade_new{};
1431:Veno-Echo.cpp ****         //update pickup
1432:Veno-Echo.cpp ****         if (shift != lastShift)
1433:Veno-Echo.cpp ****         {
1434:Veno-Echo.cpp ****             lastShift = shift;
1435:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1436:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1437:Veno-Echo.cpp ****         }
1438:Veno-Echo.cpp **** 
1439:Veno-Echo.cpp ****         else
1440:Veno-Echo.cpp ****         {
1441:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1442:Veno-Echo.cpp ****             {
1443:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1444:Veno-Echo.cpp ****                 {
1445:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1446:Veno-Echo.cpp ****                 }
1447:Veno-Echo.cpp ****             }
1448:Veno-Echo.cpp ****         }
1449:Veno-Echo.cpp **** 
1450:Veno-Echo.cpp ****         float filterXfadeTarget{};
1451:Veno-Echo.cpp **** 
1452:Veno-Echo.cpp ****         if(filterXfade_pickup)
1453:Veno-Echo.cpp ****         {
1454:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1455:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1456:Veno-Echo.cpp ****         }
1457:Veno-Echo.cpp **** 
1458:Veno-Echo.cpp ****         else
1459:Veno-Echo.cpp ****         {
1460:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1461:Veno-Echo.cpp ****         }
1462:Veno-Echo.cpp **** 
1463:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1464:Veno-Echo.cpp ****     }
1465:Veno-Echo.cpp ****     else    //alternate controls
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 64


1466:Veno-Echo.cpp ****     {
1467:Veno-Echo.cpp **** 
1468:Veno-Echo.cpp ****         static float PostFilters_new{};
1469:Veno-Echo.cpp **** 
1470:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1471:Veno-Echo.cpp ****         {
1472:Veno-Echo.cpp ****             lastShift = shift;
1473:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1474:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1475:Veno-Echo.cpp ****         }
1476:Veno-Echo.cpp **** 
1477:Veno-Echo.cpp ****         else    //not a recent shift change
1478:Veno-Echo.cpp ****         {
1479:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1480:Veno-Echo.cpp ****             {
1481:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1482:Veno-Echo.cpp ****                 {
1483:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1484:Veno-Echo.cpp ****                 }
1485:Veno-Echo.cpp ****             }
1486:Veno-Echo.cpp ****         }
1487:Veno-Echo.cpp ****         
1488:Veno-Echo.cpp ****         if(PostFilters_pickup)
1489:Veno-Echo.cpp ****         {
1490:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1491:Veno-Echo.cpp ****             {
1492:Veno-Echo.cpp ****                 PostFilters = false;
1493:Veno-Echo.cpp ****             }
1494:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1495:Veno-Echo.cpp ****             {
1496:Veno-Echo.cpp ****                 PostFilters = true;
1497:Veno-Echo.cpp ****             }
1498:Veno-Echo.cpp ****             else
1499:Veno-Echo.cpp ****             {
1500:Veno-Echo.cpp ****               //do nothing
1501:Veno-Echo.cpp ****             }
1502:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1503:Veno-Echo.cpp ****         }  
1504:Veno-Echo.cpp ****     }
1505:Veno-Echo.cpp **** }
1506:Veno-Echo.cpp **** 
1507:Veno-Echo.cpp **** void GetModCV()
1508:Veno-Echo.cpp **** {
1509:Veno-Echo.cpp ****     //get modulation CV input
1510:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(7),-1.0f * maxModAmp,maxModAmp,LINEAR);
1511:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1512:Veno-Echo.cpp **** }
1513:Veno-Echo.cpp **** 
1514:Veno-Echo.cpp **** void Update_Mod()
1515:Veno-Echo.cpp **** {    
1516:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1517:Veno-Echo.cpp ****     static float modulation_CV{};
1518:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1519:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1520:Veno-Echo.cpp ****     //calculate InternalMod
1521:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1522:Veno-Echo.cpp ****     //apply modulation to delay lines
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 65


1523:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1524:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1525:Veno-Echo.cpp **** }
1526:Veno-Echo.cpp **** 
1527:Veno-Echo.cpp **** void UpdateClock()
1528:Veno-Echo.cpp **** {
1529:Veno-Echo.cpp ****     static int divCounter{};
1530:Veno-Echo.cpp ****     ClockIn.Debounce();
1531:Veno-Echo.cpp **** 
1532:Veno-Echo.cpp ****     //if clock in pulse received
1533:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1534:Veno-Echo.cpp ****     {   
1535:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1536:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1537:Veno-Echo.cpp ****         if(divCounter == 0)
1538:Veno-Echo.cpp ****         {
1539:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1540:Veno-Echo.cpp ****             {
1541:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1542:Veno-Echo.cpp ****                 
1543:Veno-Echo.cpp ****                 //shouldn't need to do this
1544:Veno-Echo.cpp ****                 //any clock tempo change or ratio change will trigger 
1545:Veno-Echo.cpp ****                 //a phase reset of both sides
1546:Veno-Echo.cpp ****                 /*
1547:Veno-Echo.cpp ****                 if(syncMode)
1548:Veno-Echo.cpp ****                 {
1549:Veno-Echo.cpp ****                     if(div_L <= UNITY)
1550:Veno-Echo.cpp ****                     {
1551:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
1552:Veno-Echo.cpp ****                     }
1553:Veno-Echo.cpp **** 
1554:Veno-Echo.cpp ****                     if(div_R <= UNITY)
1555:Veno-Echo.cpp ****                     {
1556:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
1557:Veno-Echo.cpp ****                     }
1558:Veno-Echo.cpp ****                 }
1559:Veno-Echo.cpp ****                 */
1560:Veno-Echo.cpp ****                 
1561:Veno-Echo.cpp ****             }
1562:Veno-Echo.cpp ****         }
1563:Veno-Echo.cpp ****     }
1564:Veno-Echo.cpp ****     
1565:Veno-Echo.cpp **** }
1566:Veno-Echo.cpp **** 
1567:Veno-Echo.cpp **** void Update_Buttons()
1568:Veno-Echo.cpp **** {  
1569:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1570:Veno-Echo.cpp ****     static uint32_t resetTime{};
1571:Veno-Echo.cpp ****     static int buttonstate{};
1572:Veno-Echo.cpp **** 
1573:Veno-Echo.cpp ****     Rev_L_sw.update();
1574:Veno-Echo.cpp ****     Rev_R_sw.update();
1575:Veno-Echo.cpp ****     LPF_sw.update();
1576:Veno-Echo.cpp ****     HPF_sw.update();
1577:Veno-Echo.cpp ****     Tap_Button.update();
1578:Veno-Echo.cpp **** 
1579:Veno-Echo.cpp ****     ReverseGateL.Debounce();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 66


1580:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1581:Veno-Echo.cpp ****     //TapButton.Debounce();
1582:Veno-Echo.cpp ****     Sync.Debounce();
1583:Veno-Echo.cpp ****     ClockIn.Debounce();
1584:Veno-Echo.cpp ****     //gate inputs
1585:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1586:Veno-Echo.cpp ****     {
1587:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1588:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1589:Veno-Echo.cpp ****     }
1590:Veno-Echo.cpp **** 
1591:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1592:Veno-Echo.cpp ****     {
1593:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1594:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1595:Veno-Echo.cpp ****     }
1596:Veno-Echo.cpp **** 
1597:Veno-Echo.cpp ****     //buttons
1598:Veno-Echo.cpp **** 
1599:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1600:Veno-Echo.cpp ****     {
1601:Veno-Echo.cpp ****         buttonstate += 1;
1602:Veno-Echo.cpp ****         if (buttonstate == 3)
1603:Veno-Echo.cpp ****         {
1604:Veno-Echo.cpp ****             resetTime = System::GetNow();
1605:Veno-Echo.cpp ****         }
1606:Veno-Echo.cpp ****     }
1607:Veno-Echo.cpp **** 
1608:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1609:Veno-Echo.cpp ****     {
1610:Veno-Echo.cpp ****         buttonstate -= 1;
1611:Veno-Echo.cpp ****     }
1612:Veno-Echo.cpp **** 
1613:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1614:Veno-Echo.cpp ****     {
1615:Veno-Echo.cpp ****         buttonstate += 1;
1616:Veno-Echo.cpp ****         if (buttonstate == 3)
1617:Veno-Echo.cpp ****         {
1618:Veno-Echo.cpp ****             resetTime = System::GetNow();
1619:Veno-Echo.cpp ****         }
1620:Veno-Echo.cpp ****     }
1621:Veno-Echo.cpp **** 
1622:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1623:Veno-Echo.cpp ****     {
1624:Veno-Echo.cpp ****         buttonstate -= 1;
1625:Veno-Echo.cpp ****     }
1626:Veno-Echo.cpp **** 
1627:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1628:Veno-Echo.cpp ****     {
1629:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1630:Veno-Echo.cpp ****         {
1631:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1632:Veno-Echo.cpp ****         }
1633:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1634:Veno-Echo.cpp ****         
1635:Veno-Echo.cpp ****         /*
1636:Veno-Echo.cpp ****         if(syncMode)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 67


1637:Veno-Echo.cpp ****         {
1638:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1639:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1640:Veno-Echo.cpp ****         }
1641:Veno-Echo.cpp **** 
1642:Veno-Echo.cpp ****         */
1643:Veno-Echo.cpp **** 
1644:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1645:Veno-Echo.cpp ****         buttonstate += 1;
1646:Veno-Echo.cpp ****         
1647:Veno-Echo.cpp ****         if (buttonstate == 3)
1648:Veno-Echo.cpp ****         {
1649:Veno-Echo.cpp ****             resetTime = System::GetNow();
1650:Veno-Echo.cpp ****         }
1651:Veno-Echo.cpp **** 
1652:Veno-Echo.cpp ****     }
1653:Veno-Echo.cpp **** 
1654:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1655:Veno-Echo.cpp ****     {
1656:Veno-Echo.cpp ****         shift = false;
1657:Veno-Echo.cpp ****         buttonstate -= 1;
1658:Veno-Echo.cpp ****         mute = false;
1659:Veno-Echo.cpp ****     }
1660:Veno-Echo.cpp **** 
1661:Veno-Echo.cpp ****     if (Tap_Button.getState())
1662:Veno-Echo.cpp ****     {
1663:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1664:Veno-Echo.cpp ****         {
1665:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1666:Veno-Echo.cpp ****         } 
1667:Veno-Echo.cpp ****     }
1668:Veno-Echo.cpp **** 
1669:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1670:Veno-Echo.cpp ****     {
1671:Veno-Echo.cpp ****         /*
1672:Veno-Echo.cpp ****             if(!save_flag)
1673:Veno-Echo.cpp ****             {
1674:Veno-Echo.cpp ****                 save_flag = true; 
1675:Veno-Echo.cpp ****             }
1676:Veno-Echo.cpp ****         */
1677:Veno-Echo.cpp **** 
1678:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1679:Veno-Echo.cpp ****             {
1680:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1681:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1682:Veno-Echo.cpp ****                 ResetAllLEDs();
1683:Veno-Echo.cpp ****                 //don't let reset or shift update
1684:Veno-Echo.cpp ****                 shift = false;
1685:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1686:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1687:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1688:Veno-Echo.cpp ****             }
1689:Veno-Echo.cpp ****     } 
1690:Veno-Echo.cpp **** 
1691:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1692:Veno-Echo.cpp **** 
1693:Veno-Echo.cpp ****     //update syncMode
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 68


1694:Veno-Echo.cpp ****     delayL.SetSync(syncMode);
1695:Veno-Echo.cpp ****     delayR.SetSync(syncMode);
1696:Veno-Echo.cpp **** }
1697:Veno-Echo.cpp **** 
1698:Veno-Echo.cpp **** void Update_BaseTempoLED()
1699:Veno-Echo.cpp **** {
1700:Veno-Echo.cpp ****     tempoLED_BASE.update();
1701:Veno-Echo.cpp **** 
1702:Veno-Echo.cpp ****     static int phaseCounter{};
1703:Veno-Echo.cpp **** 
1704:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1705:Veno-Echo.cpp ****     {
1706:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1707:Veno-Echo.cpp ****     }
1708:Veno-Echo.cpp **** 
1709:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1710:Veno-Echo.cpp ****     //update base phase for both delay lines
1711:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1712:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1713:Veno-Echo.cpp **** 
1714:Veno-Echo.cpp ****     /*
1715:Veno-Echo.cpp ****     
1716:Veno-Echo.cpp ****     //if a flag is set (change in delaytime in sync mode), reset phaseCounter for other delayLine
1717:Veno-Echo.cpp ****     if(divChange_flag)
1718:Veno-Echo.cpp ****         {
1719:Veno-Echo.cpp ****             delayL.tempoled.resetPhaseCounter();
1720:Veno-Echo.cpp ****             delayR.tempoled.resetPhaseCounter();
1721:Veno-Echo.cpp ****             divChange_flag = false;
1722:Veno-Echo.cpp ****         }
1723:Veno-Echo.cpp **** 
1724:Veno-Echo.cpp ****         */
1725:Veno-Echo.cpp **** }
1726:Veno-Echo.cpp **** 
1727:Veno-Echo.cpp **** 
1728:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1729:Veno-Echo.cpp **** {
1730:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1731:Veno-Echo.cpp ****     {
1732:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1733:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1734:Veno-Echo.cpp ****     }
1735:Veno-Echo.cpp ****     else
1736:Veno-Echo.cpp ****     {
1737:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1738:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1739:Veno-Echo.cpp ****     }
1740:Veno-Echo.cpp **** 
1741:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1742:Veno-Echo.cpp ****     {
1743:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1744:Veno-Echo.cpp ****     }
1745:Veno-Echo.cpp ****     else
1746:Veno-Echo.cpp ****     {
1747:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1748:Veno-Echo.cpp ****     }
1749:Veno-Echo.cpp **** 
1750:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 69


1751:Veno-Echo.cpp ****     {
1752:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1753:Veno-Echo.cpp ****     }
1754:Veno-Echo.cpp ****     else
1755:Veno-Echo.cpp ****     {
1756:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1757:Veno-Echo.cpp ****     }
1758:Veno-Echo.cpp **** 
1759:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1760:Veno-Echo.cpp ****     {
1761:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1762:Veno-Echo.cpp ****     }
1763:Veno-Echo.cpp ****     else
1764:Veno-Echo.cpp ****     {
1765:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1766:Veno-Echo.cpp ****     }
1767:Veno-Echo.cpp **** 
1768:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1769:Veno-Echo.cpp ****     {
1770:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1771:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1772:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1773:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1774:Veno-Echo.cpp ****     }
1775:Veno-Echo.cpp ****     else
1776:Veno-Echo.cpp ****     {
1777:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1778:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1779:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1780:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1781:Veno-Echo.cpp ****     }
1782:Veno-Echo.cpp ****     
1783:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1784:Veno-Echo.cpp ****     {
1785:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1786:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1787:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1788:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1789:Veno-Echo.cpp ****     }
1790:Veno-Echo.cpp ****     else
1791:Veno-Echo.cpp ****     {
1792:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1793:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1794:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1795:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1796:Veno-Echo.cpp **** 
1797:Veno-Echo.cpp ****     }
1798:Veno-Echo.cpp **** 
1799:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1800:Veno-Echo.cpp ****     {
1801:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1802:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1803:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1804:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1805:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1806:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1807:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 70


1808:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1809:Veno-Echo.cpp ****     }
1810:Veno-Echo.cpp **** 
1811:Veno-Echo.cpp ****     else
1812:Veno-Echo.cpp ****     {
1813:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1814:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1815:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1816:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1817:Veno-Echo.cpp ****     }
1818:Veno-Echo.cpp **** 
1819:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1820:Veno-Echo.cpp ****     {
1821:Veno-Echo.cpp ****         PostFilters = false;
1822:Veno-Echo.cpp ****     }
1823:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1824:Veno-Echo.cpp ****     {
1825:Veno-Echo.cpp ****         PostFilters = true;
1826:Veno-Echo.cpp ****     }
1827:Veno-Echo.cpp ****     else
1828:Veno-Echo.cpp ****     {
1829:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1830:Veno-Echo.cpp ****     }
1831:Veno-Echo.cpp **** 
1832:Veno-Echo.cpp **** }
1833:Veno-Echo.cpp **** 
1834:Veno-Echo.cpp **** void TurnOnAllLEDs()
1835:Veno-Echo.cpp **** {
1836:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1837:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1838:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1839:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1840:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1841:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1842:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1843:Veno-Echo.cpp **** }
1844:Veno-Echo.cpp **** 
1845:Veno-Echo.cpp **** void ResetAllLEDs()
1846:Veno-Echo.cpp **** {
1847:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1848:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1849:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1850:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1851:Veno-Echo.cpp ****     {
1852:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1853:Veno-Echo.cpp ****     }
1854:Veno-Echo.cpp ****     else
1855:Veno-Echo.cpp ****     {
1856:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1857:Veno-Echo.cpp ****     }
1858:Veno-Echo.cpp **** 
1859:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1860:Veno-Echo.cpp ****     {
1861:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1862:Veno-Echo.cpp ****     }
1863:Veno-Echo.cpp ****     else
1864:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 71


1865:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1866:Veno-Echo.cpp ****     }
1867:Veno-Echo.cpp ****     
1868:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1869:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1870:Veno-Echo.cpp **** }
1871:Veno-Echo.cpp **** 
1872:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1873:Veno-Echo.cpp **** {
1874:Veno-Echo.cpp ****     float returnval{};
1875:Veno-Echo.cpp ****     if (input > limit)
1876:Veno-Echo.cpp ****         returnval = limit;
1877:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1878:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1879:Veno-Echo.cpp ****     else
1880:Veno-Echo.cpp ****         returnval = input;
1881:Veno-Echo.cpp **** 
1882:Veno-Echo.cpp ****     return returnval;   
1883:Veno-Echo.cpp **** }
1884:Veno-Echo.cpp **** 
1885:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1148              		.loc 20 1885 7 view .LVU241
 1149              	.LBB892:
1886:Veno-Echo.cpp **** {
1887:Veno-Echo.cpp ****     float output{};
 1150              		.loc 20 1887 5 view .LVU242
1888:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1151              		.loc 20 1888 5 view .LVU243
 1152              	.LBE892:
 1153              	.LBE891:
 813:Veno-Echo.cpp ****         }
 1154              		.loc 20 813 36 is_stmt 0 view .LVU244
 1155 0044 654A     		ldr	r2, .L75+28
 1156              	.LBB895:
 1157              	.LBB893:
 1158              		.loc 20 1888 12 view .LVU245
 1159 0046 DFED667A 		vldr.32	s15, .L75+32
 1160 004a 92ED008A 		vldr.32	s16, [r2]
 1161 004e 38EE278A 		vadd.f32	s16, s16, s15
 1162              	.LVL43:
1889:Veno-Echo.cpp **** 
1890:Veno-Echo.cpp ****     if(output < 0.0f)
 1163              		.loc 20 1890 5 is_stmt 1 view .LVU246
 1164 0052 B4EEE78A 		vcmpe.f32	s16, s15
 1165 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1166 005a 00F1AB80 		bmi	.L73
1891:Veno-Echo.cpp ****     {
1892:Veno-Echo.cpp ****         output = 0.0f;
1893:Veno-Echo.cpp ****     }
1894:Veno-Echo.cpp **** 
1895:Veno-Echo.cpp ****     if(output > 1.0f)
 1167              		.loc 20 1895 5 view .LVU247
 1168 005e F7EE007A 		vmov.f32	s15, #1.0e+0
1896:Veno-Echo.cpp ****     {
1897:Veno-Echo.cpp ****         output = 1.0f;
 1169              		.loc 20 1897 16 is_stmt 0 view .LVU248
 1170 0062 B4EE678A 		vcmp.f32	s16, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 72


 1171 0066 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1172 006a 37FE888A 		vselgt.f32	s16, s15, s16
 1173              	.LVL44:
 1174              	.L50:
 1175              		.loc 20 1897 16 view .LVU249
 1176              	.LBE893:
 1177              	.LBE895:
 816:Veno-Echo.cpp ****         {
 1178              		.loc 20 816 9 is_stmt 1 view .LVU250
 1179 006e D3B9     		cbnz	r3, .L42
 818:Veno-Echo.cpp ****             {
 1180              		.loc 20 818 13 view .LVU251
 818:Veno-Echo.cpp ****             {
 1181              		.loc 20 818 35 is_stmt 0 view .LVU252
 1182 0070 5C48     		ldr	r0, .L75+36
 1183 0072 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 1184              	.LVL45:
 818:Veno-Echo.cpp ****             {
 1185              		.loc 20 818 35 view .LVU253
 1186 0076 F0EE400A 		vmov.f32	s1, s0
 1187 007a B7EE000A 		vmov.f32	s0, #1.0e+0
 1188 007e 5A4B     		ldr	r3, .L75+40
 1189 0080 5A48     		ldr	r0, .L75+44
 1190 0082 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1191 0084 30EE480A 		vsub.f32	s0, s0, s16
 1192              	.LBE905:
 1193              	.LBE954:
 859:Veno-Echo.cpp **** 
 1194              		.loc 20 859 1 view .LVU254
 1195 0088 BDEC028B 		vldm	sp!, {d8}
 1196              		.cfi_remember_state
 1197              		.cfi_restore 80
 1198              		.cfi_restore 81
 1199              		.cfi_def_cfa_offset 8
 1200              	.LVL46:
 859:Veno-Echo.cpp **** 
 1201              		.loc 20 859 1 view .LVU255
 1202 008c BDE81040 		pop	{r4, lr}
 1203              		.cfi_restore 14
 1204              		.cfi_restore 4
 1205              		.cfi_def_cfa_offset 0
 1206              	.LBB955:
 1207              	.LBB906:
 818:Veno-Echo.cpp ****             {
 1208              		.loc 20 818 35 view .LVU256
 1209 0090 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEffb
 1210              	.LVL47:
 1211              	.L43:
 1212              		.cfi_restore_state
 818:Veno-Echo.cpp ****             {
 1213              		.loc 20 818 35 view .LVU257
 1214              	.LBE906:
 1215              	.LBB907:
 829:Veno-Echo.cpp **** 
 1216              		.loc 20 829 9 is_stmt 1 view .LVU258
 831:Veno-Echo.cpp ****         {
 1217              		.loc 20 831 9 view .LVU259
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 73


 1218 0094 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1219 0096 8BBB     		cbnz	r3, .L53
 833:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1220              		.loc 20 833 13 view .LVU260
 833:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1221              		.loc 20 833 23 is_stmt 0 view .LVU261
 1222 0098 0124     		movs	r4, #1
 834:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1223              		.loc 20 834 34 view .LVU262
 1224 009a 5548     		ldr	r0, .L75+48
 835:Veno-Echo.cpp ****         }
 1225              		.loc 20 835 31 view .LVU263
 1226 009c 5549     		ldr	r1, .L75+52
 833:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1227              		.loc 20 833 23 view .LVU264
 1228 009e 1470     		strb	r4, [r2]
 834:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1229              		.loc 20 834 13 is_stmt 1 view .LVU265
 834:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1230              		.loc 20 834 34 is_stmt 0 view .LVU266
 1231 00a0 0370     		strb	r3, [r0]
 835:Veno-Echo.cpp ****         }
 1232              		.loc 20 835 13 is_stmt 1 view .LVU267
 835:Veno-Echo.cpp ****         }
 1233              		.loc 20 835 31 is_stmt 0 view .LVU268
 1234 00a2 81ED000A 		vstr.32	s0, [r1]
 1235              	.L42:
 835:Veno-Echo.cpp ****         }
 1236              		.loc 20 835 31 view .LVU269
 1237              	.LBE907:
 1238              	.LBE955:
 859:Veno-Echo.cpp **** 
 1239              		.loc 20 859 1 view .LVU270
 1240 00a6 BDEC028B 		vldm	sp!, {d8}
 1241              		.cfi_remember_state
 1242              		.cfi_restore 80
 1243              		.cfi_restore 81
 1244              		.cfi_def_cfa_offset 8
 1245 00aa 10BD     		pop	{r4, pc}
 1246              	.L44:
 1247              		.cfi_restore_state
 1248              	.LBB956:
 1249              	.LBB948:
 794:Veno-Echo.cpp ****             {
 1250              		.loc 20 794 13 is_stmt 1 view .LVU271
 794:Veno-Echo.cpp ****             {
 1251              		.loc 20 794 16 is_stmt 0 view .LVU272
 1252 00ac 494A     		ldr	r2, .L75+20
 794:Veno-Echo.cpp ****             {
 1253              		.loc 20 794 13 view .LVU273
 1254 00ae 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1255 00b0 79B9     		cbnz	r1, .L46
 796:Veno-Echo.cpp ****                 {
 1256              		.loc 20 796 17 is_stmt 1 view .LVU274
 1257              	.LVL48:
 1258              	.LBB896:
 1259              	.LBI896:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 74


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1260              		.loc 21 75 3 view .LVU275
 1261              	.LBB897:
 1262              		.loc 21 76 5 view .LVU276
 1263              		.loc 21 76 5 is_stmt 0 view .LVU277
 1264              	.LBE897:
 1265              	.LBE896:
 796:Veno-Echo.cpp ****                 {
 1266              		.loc 20 796 23 view .LVU278
 1267 00b2 4949     		ldr	r1, .L75+24
 796:Veno-Echo.cpp ****                 {
 1268              		.loc 20 796 17 view .LVU279
 1269 00b4 9FED507A 		vldr.32	s14, .L75+56
 796:Veno-Echo.cpp ****                 {
 1270              		.loc 20 796 23 view .LVU280
 1271 00b8 D1ED007A 		vldr.32	s15, [r1]
 1272 00bc 70EE677A 		vsub.f32	s15, s0, s15
 1273              	.LBB899:
 1274              	.LBB898:
 1275              		.loc 21 76 31 view .LVU281
 1276 00c0 F0EEE77A 		vabs.f32	s15, s15
 1277              	.LBE898:
 1278              	.LBE899:
 796:Veno-Echo.cpp ****                 {
 1279              		.loc 20 796 17 view .LVU282
 1280 00c4 F4EEC77A 		vcmpe.f32	s15, s14
 1281 00c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1282 00cc BADD     		ble	.L45
 798:Veno-Echo.cpp ****                 }
 1283              		.loc 20 798 21 is_stmt 1 view .LVU283
 798:Veno-Echo.cpp ****                 }
 1284              		.loc 20 798 39 is_stmt 0 view .LVU284
 1285 00ce 0121     		movs	r1, #1
 1286 00d0 1170     		strb	r1, [r2]
 1287              	.L46:
 803:Veno-Echo.cpp **** 
 1288              		.loc 20 803 9 is_stmt 1 view .LVU285
 1289              	.LVL49:
 805:Veno-Echo.cpp ****         {
 1290              		.loc 20 805 9 view .LVU286
 807:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1291              		.loc 20 807 13 view .LVU287
 1292              	.LBB900:
 1293              	.LBI900:
1885:Veno-Echo.cpp **** {
 1294              		.loc 20 1885 7 view .LVU288
 1295              	.LBB901:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1296              		.loc 20 1887 5 view .LVU289
1888:Veno-Echo.cpp **** 
 1297              		.loc 20 1888 5 view .LVU290
1888:Veno-Echo.cpp **** 
 1298              		.loc 20 1888 12 is_stmt 0 view .LVU291
 1299 00d2 DFED437A 		vldr.32	s15, .L75+32
 1300 00d6 30EE278A 		vadd.f32	s16, s0, s15
 1301              	.LVL50:
1890:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 75


 1302              		.loc 20 1890 5 is_stmt 1 view .LVU292
 1303 00da B4EEE78A 		vcmpe.f32	s16, s15
 1304 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1305 00e2 6AD4     		bmi	.L74
1895:Veno-Echo.cpp ****     {
 1306              		.loc 20 1895 5 view .LVU293
 1307 00e4 F7EE007A 		vmov.f32	s15, #1.0e+0
 1308              		.loc 20 1897 16 is_stmt 0 view .LVU294
 1309 00e8 B4EE678A 		vcmp.f32	s16, s15
 1310 00ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1311 00f0 37FE888A 		vselgt.f32	s16, s15, s16
 1312              	.LVL51:
 1313              	.L48:
1898:Veno-Echo.cpp ****     }
1899:Veno-Echo.cpp **** 
1900:Veno-Echo.cpp ****     return output;
 1314              		.loc 20 1900 5 is_stmt 1 view .LVU295
 1315              		.loc 20 1900 5 is_stmt 0 view .LVU296
 1316              	.LBE901:
 1317              	.LBE900:
 808:Veno-Echo.cpp ****         }
 1318              		.loc 20 808 13 is_stmt 1 view .LVU297
 808:Veno-Echo.cpp ****         }
 1319              		.loc 20 808 29 is_stmt 0 view .LVU298
 1320 00f4 394A     		ldr	r2, .L75+28
 1321 00f6 82ED000A 		vstr.32	s0, [r2]
 1322 00fa B8E7     		b	.L50
 1323              	.LVL52:
 1324              	.L53:
 808:Veno-Echo.cpp ****         }
 1325              		.loc 20 808 29 view .LVU299
 1326              	.LBE948:
 1327              	.LBB949:
 840:Veno-Echo.cpp ****             {
 1328              		.loc 20 840 13 is_stmt 1 view .LVU300
 840:Veno-Echo.cpp ****             {
 1329              		.loc 20 840 16 is_stmt 0 view .LVU301
 1330 00fc 3C4B     		ldr	r3, .L75+48
 840:Veno-Echo.cpp ****             {
 1331              		.loc 20 840 13 view .LVU302
 1332 00fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1333 0100 7AB9     		cbnz	r2, .L54
 842:Veno-Echo.cpp ****                 {
 1334              		.loc 20 842 17 is_stmt 1 view .LVU303
 1335              	.LVL53:
 1336              	.LBB908:
 1337              	.LBI908:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1338              		.loc 21 75 3 view .LVU304
 1339              	.LBB909:
 1340              		.loc 21 76 5 view .LVU305
 1341              		.loc 21 76 5 is_stmt 0 view .LVU306
 1342              	.LBE909:
 1343              	.LBE908:
 842:Veno-Echo.cpp ****                 {
 1344              		.loc 20 842 23 view .LVU307
 1345 0102 3C4A     		ldr	r2, .L75+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 76


 842:Veno-Echo.cpp ****                 {
 1346              		.loc 20 842 17 view .LVU308
 1347 0104 9FED3C7A 		vldr.32	s14, .L75+56
 842:Veno-Echo.cpp ****                 {
 1348              		.loc 20 842 23 view .LVU309
 1349 0108 D2ED007A 		vldr.32	s15, [r2]
 1350 010c 70EE677A 		vsub.f32	s15, s0, s15
 1351              	.LBB911:
 1352              	.LBB910:
 1353              		.loc 21 76 31 view .LVU310
 1354 0110 F0EEE77A 		vabs.f32	s15, s15
 1355              	.LBE910:
 1356              	.LBE911:
 842:Veno-Echo.cpp ****                 {
 1357              		.loc 20 842 17 view .LVU311
 1358 0114 F4EEC77A 		vcmpe.f32	s15, s14
 1359 0118 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1360 011c C3DD     		ble	.L42
 844:Veno-Echo.cpp ****                 }
 1361              		.loc 20 844 21 is_stmt 1 view .LVU312
 844:Veno-Echo.cpp ****                 }
 1362              		.loc 20 844 42 is_stmt 0 view .LVU313
 1363 011e 0122     		movs	r2, #1
 1364 0120 1A70     		strb	r2, [r3]
 1365              	.L54:
 849:Veno-Echo.cpp ****         {
 1366              		.loc 20 849 9 is_stmt 1 view .LVU314
 1367              	.LBB912:
 1368              	.LBB913:
 851:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1369              		.loc 20 851 13 view .LVU315
 851:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1370              		.loc 20 851 38 is_stmt 0 view .LVU316
 1371 0122 0120     		movs	r0, #1
 1372 0124 9FED351A 		vldr.32	s2, .L75+60
 1373 0128 DFED350A 		vldr.32	s1, .L75+64
 1374 012c FFF7FEFF 		bl	_Z5scalefff9CurveType
 1375              	.LVL54:
 1376              	.LBB914:
 1377              	.LBB915:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1378              		.loc 20 70 28 view .LVU317
 1379 0130 344B     		ldr	r3, .L75+68
 1380              	.LVL55:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1381              		.loc 20 70 28 view .LVU318
 1382              	.LBE915:
 1383              	.LBE914:
 852:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1384              		.loc 20 852 13 is_stmt 1 view .LVU319
 1385              	.LBB929:
 1386              	.LBI914:
  68:Veno-Echo.cpp ****     {
 1387              		.loc 20 68 10 view .LVU320
 1388              	.LBB927:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1389              		.loc 20 70 9 view .LVU321
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 77


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1390              		.loc 20 70 53 is_stmt 0 view .LVU322
 1391 0132 DFED316A 		vldr.32	s13, .L75+56
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1392              		.loc 20 70 28 view .LVU323
 1393 0136 D3ED017A 		vldr.32	s15, [r3, #4]
 1394              	.LVL56:
 1395              	.LBB916:
 1396              	.LBI916:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1397              		.loc 21 75 3 is_stmt 1 view .LVU324
 1398              	.LBB917:
 1399              		.loc 21 76 5 view .LVU325
 1400              		.loc 21 76 5 is_stmt 0 view .LVU326
 1401              	.LBE917:
 1402              	.LBE916:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1403              		.loc 20 70 15 view .LVU327
 1404 013a 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 53 view .LVU328
 1406 013e 67EEA67A 		vmul.f32	s15, s15, s13
 1407              	.LBB919:
 1408              	.LBB918:
 1409              		.loc 21 76 31 view .LVU329
 1410 0142 B0EEC77A 		vabs.f32	s14, s14
 1411              	.LBE918:
 1412              	.LBE919:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1413              		.loc 20 70 9 view .LVU330
 1414 0146 B4EEE77A 		vcmpe.f32	s14, s15
 1415 014a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1416 014e 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1417              		.loc 20 74 29 view .LVU331
 1418 0150 FCEEC07A 		vcvt.u32.f32	s15, s0
 1419              	.LBB920:
 1420              	.LBB921:
 1421              		.loc 19 72 9 view .LVU332
 1422 0154 2C4C     		ldr	r4, .L75+72
 1423              	.LBE921:
 1424              	.LBE920:
 1425              	.LBE927:
 1426              	.LBE929:
 852:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1427              		.loc 20 852 37 view .LVU333
 1428 0156 1968     		ldr	r1, [r3]
 1429              	.LBB930:
 1430              	.LBB928:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1431              		.loc 20 73 13 is_stmt 1 view .LVU334
 1432              	.LBB924:
 1433              	.LBB922:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1434              		.loc 19 71 9 is_stmt 0 view .LVU335
 1435 0158 0020     		movs	r0, #0
 1436              	.LBE922:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 78


 1437              	.LBE924:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1438              		.loc 20 73 27 view .LVU336
 1439 015a 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1440              		.loc 20 74 13 is_stmt 1 view .LVU337
 1441              	.LVL57:
 1442              	.LBB925:
 1443              	.LBI920:
  69:delayline_reverse.h ****     {
 1444              		.loc 19 69 17 view .LVU338
  69:delayline_reverse.h ****     {
 1445              		.loc 19 69 17 is_stmt 0 view .LVU339
 1446              	.LBE925:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1447              		.loc 20 74 29 view .LVU340
 1448 015e 17EE902A 		vmov	r2, s15	@ int
 1449              	.LBB926:
 1450              	.LBB923:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1451              		.loc 19 71 9 view .LVU341
 1452 0162 0860     		str	r0, [r1]	@ float
 1453              		.loc 19 72 9 view .LVU342
 1454 0164 A242     		cmp	r2, r4
 1455 0166 28BF     		it	cs
 1456 0168 2246     		movcs	r2, r4
 1457 016a 0A61     		str	r2, [r1, #16]
 1458              	.LVL58:
 1459              	.L62:
 1460              		.loc 19 72 9 view .LVU343
 1461              	.LBE923:
 1462              	.LBE926:
 1463              	.LBE928:
 1464              	.LBE930:
 853:Veno-Echo.cpp ****             //save setting:
 1465              		.loc 20 853 13 is_stmt 1 view .LVU344
 1466              	.LBB931:
 1467              	.LBI931:
  68:Veno-Echo.cpp ****     {
 1468              		.loc 20 68 10 view .LVU345
 1469              	.LBB932:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1470              		.loc 20 70 9 view .LVU346
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1471              		.loc 20 70 28 is_stmt 0 view .LVU347
 1472 016c 274B     		ldr	r3, .L75+76
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1473              		.loc 20 70 53 view .LVU348
 1474 016e DFED226A 		vldr.32	s13, .L75+56
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1475              		.loc 20 70 28 view .LVU349
 1476 0172 D3ED017A 		vldr.32	s15, [r3, #4]
 1477              	.LVL59:
 1478              	.LBB933:
 1479              	.LBI933:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1480              		.loc 21 75 3 is_stmt 1 view .LVU350
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 79


 1481              	.LBB934:
 1482              		.loc 21 76 5 view .LVU351
 1483              		.loc 21 76 5 is_stmt 0 view .LVU352
 1484              	.LBE934:
 1485              	.LBE933:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 15 view .LVU353
 1487 0176 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1488              		.loc 20 70 53 view .LVU354
 1489 017a 67EEA67A 		vmul.f32	s15, s15, s13
 1490              	.LBB936:
 1491              	.LBB935:
 1492              		.loc 21 76 31 view .LVU355
 1493 017e B0EEC77A 		vabs.f32	s14, s14
 1494              	.LBE935:
 1495              	.LBE936:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1496              		.loc 20 70 9 view .LVU356
 1497 0182 B4EEE77A 		vcmpe.f32	s14, s15
 1498 0186 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1499 018a 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1500              		.loc 20 74 29 view .LVU357
 1501 018c FCEEC07A 		vcvt.u32.f32	s15, s0
 1502              	.LBB937:
 1503              	.LBB938:
 1504              		.loc 19 72 9 view .LVU358
 1505 0190 1D4C     		ldr	r4, .L75+72
 1506              	.LBE938:
 1507              	.LBE937:
 1508              	.LBE932:
 1509              	.LBE931:
 853:Veno-Echo.cpp ****             //save setting:
 1510              		.loc 20 853 37 view .LVU359
 1511 0192 1968     		ldr	r1, [r3]
 1512              	.LBB945:
 1513              	.LBB944:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1514              		.loc 20 73 13 is_stmt 1 view .LVU360
 1515              	.LBB941:
 1516              	.LBB939:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1517              		.loc 19 71 9 is_stmt 0 view .LVU361
 1518 0194 0020     		movs	r0, #0
 1519              	.LBE939:
 1520              	.LBE941:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1521              		.loc 20 73 27 view .LVU362
 1522 0196 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1523              		.loc 20 74 13 is_stmt 1 view .LVU363
 1524              	.LVL60:
 1525              	.LBB942:
 1526              	.LBI937:
  69:delayline_reverse.h ****     {
 1527              		.loc 19 69 17 view .LVU364
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 80


  69:delayline_reverse.h ****     {
 1528              		.loc 19 69 17 is_stmt 0 view .LVU365
 1529              	.LBE942:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1530              		.loc 20 74 29 view .LVU366
 1531 019a 17EE902A 		vmov	r2, s15	@ int
 1532              	.LBB943:
 1533              	.LBB940:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1534              		.loc 19 71 9 view .LVU367
 1535 019e 0860     		str	r0, [r1]	@ float
 1536              		.loc 19 72 9 view .LVU368
 1537 01a0 A242     		cmp	r2, r4
 1538 01a2 28BF     		it	cs
 1539 01a4 2246     		movcs	r2, r4
 1540 01a6 0A61     		str	r2, [r1, #16]
 1541              	.LVL61:
 1542              	.L56:
 1543              		.loc 19 72 9 view .LVU369
 1544              	.LBE940:
 1545              	.LBE943:
 1546              	.LBE944:
 1547              	.LBE945:
 855:Veno-Echo.cpp ****         }
 1548              		.loc 20 855 13 is_stmt 1 view .LVU370
 855:Veno-Echo.cpp ****         }
 1549              		.loc 20 855 35 is_stmt 0 view .LVU371
 1550 01a8 194B     		ldr	r3, .L75+80
 1551              	.LBE913:
 1552              	.LBE912:
 1553              	.LBE949:
 1554              	.LBE956:
 859:Veno-Echo.cpp **** 
 1555              		.loc 20 859 1 view .LVU372
 1556 01aa BDEC028B 		vldm	sp!, {d8}
 1557              		.cfi_remember_state
 1558              		.cfi_restore 80
 1559              		.cfi_restore 81
 1560              		.cfi_def_cfa_offset 8
 1561              	.LBB957:
 1562              	.LBB950:
 1563              	.LBB947:
 1564              	.LBB946:
 855:Veno-Echo.cpp ****         }
 1565              		.loc 20 855 35 view .LVU373
 1566 01ae 83ED000A 		vstr.32	s0, [r3]
 1567              	.LBE946:
 1568              	.LBE947:
 1569              	.LBE950:
 1570              	.LBE957:
 859:Veno-Echo.cpp **** 
 1571              		.loc 20 859 1 view .LVU374
 1572 01b2 10BD     		pop	{r4, pc}
 1573              	.LVL62:
 1574              	.L73:
 1575              		.cfi_restore_state
 1576              	.LBB958:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 81


 1577              	.LBB951:
 1578              	.LBB903:
 1579              	.LBB894:
1892:Veno-Echo.cpp ****     }
 1580              		.loc 20 1892 16 view .LVU375
 1581 01b4 B0EE678A 		vmov.f32	s16, s15
 1582              	.LVL63:
1892:Veno-Echo.cpp ****     }
 1583              		.loc 20 1892 16 view .LVU376
 1584 01b8 59E7     		b	.L50
 1585              	.LVL64:
 1586              	.L74:
1892:Veno-Echo.cpp ****     }
 1587              		.loc 20 1892 16 view .LVU377
 1588              	.LBE894:
 1589              	.LBE903:
 1590              	.LBB904:
 1591              	.LBB902:
 1592 01ba B0EE678A 		vmov.f32	s16, s15
 1593              	.LVL65:
1892:Veno-Echo.cpp ****     }
 1594              		.loc 20 1892 16 view .LVU378
 1595 01be 99E7     		b	.L48
 1596              	.L76:
 1597              		.align	2
 1598              	.L75:
 1599 01c0 18000000 		.word	.LANCHOR4+24
 1600 01c4 00000000 		.word	.LANCHOR6
 1601 01c8 ABAAAA2A 		.word	715827883
 1602 01cc 00000000 		.word	.LANCHOR7
 1603 01d0 00000000 		.word	.LANCHOR8
 1604 01d4 00000000 		.word	.LANCHOR9
 1605 01d8 00000000 		.word	.LANCHOR10
 1606 01dc 00000000 		.word	.LANCHOR11
 1607 01e0 00000000 		.word	0
 1608 01e4 00000000 		.word	.LANCHOR12
 1609 01e8 00000000 		.word	.LANCHOR13
 1610 01ec 00000000 		.word	.LANCHOR0
 1611 01f0 00000000 		.word	.LANCHOR14
 1612 01f4 00000000 		.word	.LANCHOR15
 1613 01f8 0AD7A33B 		.word	1000593162
 1614 01fc 0050C346 		.word	1187205120
 1615 0200 00606A48 		.word	1214930944
 1616 0204 00000000 		.word	.LANCHOR2
 1617 0208 BF270900 		.word	599999
 1618 020c 00000000 		.word	.LANCHOR3
 1619 0210 00000000 		.word	.LANCHOR16
 1620              	.LBE902:
 1621              	.LBE904:
 1622              	.LBE951:
 1623              	.LBE958:
 1624              		.cfi_endproc
 1625              	.LFE4313:
 1627              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1628              		.align	1
 1629              		.p2align 2,,3
 1630              		.global	_Z20Update_DelayTimeR_CVv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 82


 1631              		.syntax unified
 1632              		.thumb
 1633              		.thumb_func
 1634              		.fpu fpv5-d16
 1636              	_Z20Update_DelayTimeR_CVv:
 1637              	.LFB4314:
 862:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1638              		.loc 20 862 1 is_stmt 1 view -0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 0
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 863:Veno-Echo.cpp **** }
 1642              		.loc 20 863 5 view .LVU380
 862:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1643              		.loc 20 862 1 is_stmt 0 view .LVU381
 1644 0000 08B5     		push	{r3, lr}
 1645              		.cfi_def_cfa_offset 8
 1646              		.cfi_offset 3, -8
 1647              		.cfi_offset 14, -4
 863:Veno-Echo.cpp **** }
 1648              		.loc 20 863 36 view .LVU382
 1649 0002 0121     		movs	r1, #1
 1650 0004 0348     		ldr	r0, .L79
 1651 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1652              	.LVL66:
 863:Veno-Echo.cpp **** }
 1653              		.loc 20 863 19 view .LVU383
 1654 000a 034B     		ldr	r3, .L79+4
 1655 000c 83ED000A 		vstr.32	s0, [r3]
 864:Veno-Echo.cpp **** 
 1656              		.loc 20 864 1 view .LVU384
 1657 0010 08BD     		pop	{r3, pc}
 1658              	.L80:
 1659 0012 00BF     		.align	2
 1660              	.L79:
 1661 0014 18000000 		.word	.LANCHOR4+24
 1662 0018 00000000 		.word	.LANCHOR17
 1663              		.cfi_endproc
 1664              	.LFE4314:
 1666              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1667              		.align	1
 1668              		.p2align 2,,3
 1669              		.global	_Z17Update_DelayTimeRv
 1670              		.syntax unified
 1671              		.thumb
 1672              		.thumb_func
 1673              		.fpu fpv5-d16
 1675              	_Z17Update_DelayTimeRv:
 1676              	.LFB4315:
 867:Veno-Echo.cpp ****     static bool lastShift{};
 1677              		.loc 20 867 1 is_stmt 1 view -0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 0
 1680              		@ frame_needed = 0, uses_anonymous_args = 0
 868:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1681              		.loc 20 868 5 view .LVU386
 869:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 83


 1682              		.loc 20 869 5 view .LVU387
 870:Veno-Echo.cpp ****     
 1683              		.loc 20 870 5 view .LVU388
 872:Veno-Echo.cpp **** 
 1684              		.loc 20 872 5 view .LVU389
 875:Veno-Echo.cpp **** 
 1685              		.loc 20 875 5 view .LVU390
 867:Veno-Echo.cpp ****     static bool lastShift{};
 1686              		.loc 20 867 1 is_stmt 0 view .LVU391
 1687 0000 10B5     		push	{r4, lr}
 1688              		.cfi_def_cfa_offset 8
 1689              		.cfi_offset 4, -8
 1690              		.cfi_offset 14, -4
 875:Veno-Echo.cpp **** 
 1691              		.loc 20 875 41 view .LVU392
 1692 0002 0121     		movs	r1, #1
 1693 0004 5B48     		ldr	r0, .L111
 867:Veno-Echo.cpp ****     static bool lastShift{};
 1694              		.loc 20 867 1 view .LVU393
 1695 0006 2DED028B 		vpush.64	{d8}
 1696              		.cfi_def_cfa_offset 16
 1697              		.cfi_offset 80, -16
 1698              		.cfi_offset 81, -12
 875:Veno-Echo.cpp **** 
 1699              		.loc 20 875 41 view .LVU394
 1700 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1701              	.LVL67:
 880:Veno-Echo.cpp **** 
 1702              		.loc 20 880 26 view .LVU395
 1703 000e 5A48     		ldr	r0, .L111+4
 880:Veno-Echo.cpp **** 
 1704              		.loc 20 880 31 view .LVU396
 1705 0010 5A4B     		ldr	r3, .L111+8
 1706              	.LVL68:
 879:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1707              		.loc 20 879 5 is_stmt 1 view .LVU397
 880:Veno-Echo.cpp **** 
 1708              		.loc 20 880 5 view .LVU398
 880:Veno-Echo.cpp **** 
 1709              		.loc 20 880 26 is_stmt 0 view .LVU399
 1710 0012 0268     		ldr	r2, [r0]
 1711              	.LBB959:
 882:Veno-Echo.cpp ****     {
 1712              		.loc 20 882 9 view .LVU400
 1713 0014 5A49     		ldr	r1, .L111+12
 1714              	.LBE959:
 880:Veno-Echo.cpp **** 
 1715              		.loc 20 880 26 view .LVU401
 1716 0016 0132     		adds	r2, r2, #1
 1717              	.LBB996:
 882:Veno-Echo.cpp ****     {
 1718              		.loc 20 882 5 view .LVU402
 1719 0018 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1720              	.LBE996:
 880:Veno-Echo.cpp **** 
 1721              		.loc 20 880 31 view .LVU403
 1722 001a 83FB0231 		smull	r3, r1, r3, r2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 84


 1723 001e D317     		asrs	r3, r2, #31
 1724 0020 C3EB6113 		rsb	r3, r3, r1, asr #5
 1725 0024 03EB4303 		add	r3, r3, r3, lsl #1
 1726 0028 A2EB8313 		sub	r3, r2, r3, lsl #6
 1727              	.LBB997:
 1728              	.LBB960:
 886:Veno-Echo.cpp ****         {
 1729              		.loc 20 886 19 view .LVU404
 1730 002c 554A     		ldr	r2, .L111+16
 1731              	.LBE960:
 1732              	.LBE997:
 880:Veno-Echo.cpp **** 
 1733              		.loc 20 880 14 view .LVU405
 1734 002e 0360     		str	r3, [r0]
 882:Veno-Echo.cpp ****     {
 1735              		.loc 20 882 5 is_stmt 1 view .LVU406
 1736              	.LBB998:
 1737 0030 7CBB     		cbnz	r4, .L82
 1738              	.LBB975:
 884:Veno-Echo.cpp ****         //udpate pickup
 1739              		.loc 20 884 9 view .LVU407
 886:Veno-Echo.cpp ****         {
 1740              		.loc 20 886 9 view .LVU408
 1741 0032 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1742 0034 0029     		cmp	r1, #0
 1743 0036 38D0     		beq	.L83
 888:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1744              		.loc 20 888 13 view .LVU409
 889:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1745              		.loc 20 889 31 is_stmt 0 view .LVU410
 1746 0038 5348     		ldr	r0, .L111+20
 890:Veno-Echo.cpp ****         } 
 1747              		.loc 20 890 28 view .LVU411
 1748 003a 5449     		ldr	r1, .L111+24
 888:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1749              		.loc 20 888 23 view .LVU412
 1750 003c 1470     		strb	r4, [r2]
 889:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1751              		.loc 20 889 13 is_stmt 1 view .LVU413
 889:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1752              		.loc 20 889 31 is_stmt 0 view .LVU414
 1753 003e 0470     		strb	r4, [r0]
 890:Veno-Echo.cpp ****         } 
 1754              		.loc 20 890 13 is_stmt 1 view .LVU415
 890:Veno-Echo.cpp ****         } 
 1755              		.loc 20 890 28 is_stmt 0 view .LVU416
 1756 0040 81ED000A 		vstr.32	s0, [r1]
 1757              	.L84:
 903:Veno-Echo.cpp **** 
 1758              		.loc 20 903 9 is_stmt 1 view .LVU417
 1759              	.LVL69:
 905:Veno-Echo.cpp ****         {
 1760              		.loc 20 905 9 view .LVU418
 913:Veno-Echo.cpp ****         }
 1761              		.loc 20 913 13 view .LVU419
 1762              	.LBB961:
 1763              	.LBI961:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 85


1885:Veno-Echo.cpp **** {
 1764              		.loc 20 1885 7 view .LVU420
 1765              	.LBB962:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1766              		.loc 20 1887 5 view .LVU421
1888:Veno-Echo.cpp **** 
 1767              		.loc 20 1888 5 view .LVU422
 1768              	.LBE962:
 1769              	.LBE961:
 913:Veno-Echo.cpp ****         }
 1770              		.loc 20 913 36 is_stmt 0 view .LVU423
 1771 0044 524A     		ldr	r2, .L111+28
 1772              	.LBB965:
 1773              	.LBB963:
1888:Veno-Echo.cpp **** 
 1774              		.loc 20 1888 12 view .LVU424
 1775 0046 DFED537A 		vldr.32	s15, .L111+32
 1776 004a 92ED008A 		vldr.32	s16, [r2]
 1777 004e 38EE278A 		vadd.f32	s16, s16, s15
 1778              	.LVL70:
1890:Veno-Echo.cpp ****     {
 1779              		.loc 20 1890 5 is_stmt 1 view .LVU425
 1780 0052 B4EEE78A 		vcmpe.f32	s16, s15
 1781 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1782 005a 7FD4     		bmi	.L109
1895:Veno-Echo.cpp ****     {
 1783              		.loc 20 1895 5 view .LVU426
 1784 005c F7EE007A 		vmov.f32	s15, #1.0e+0
1897:Veno-Echo.cpp ****     }
 1785              		.loc 20 1897 16 is_stmt 0 view .LVU427
 1786 0060 B4EE678A 		vcmp.f32	s16, s15
 1787 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1788 0068 37FE888A 		vselgt.f32	s16, s15, s16
 1789              	.LVL71:
 1790              	.L89:
1897:Veno-Echo.cpp ****     }
 1791              		.loc 20 1897 16 view .LVU428
 1792              	.LBE963:
 1793              	.LBE965:
 916:Veno-Echo.cpp ****         {
 1794              		.loc 20 916 9 is_stmt 1 view .LVU429
 1795 006c D3B9     		cbnz	r3, .L81
 918:Veno-Echo.cpp ****             {
 1796              		.loc 20 918 13 view .LVU430
 918:Veno-Echo.cpp ****             {
 1797              		.loc 20 918 35 is_stmt 0 view .LVU431
 1798 006e 4A48     		ldr	r0, .L111+36
 1799 0070 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 1800              	.LVL72:
 918:Veno-Echo.cpp ****             {
 1801              		.loc 20 918 35 view .LVU432
 1802 0074 F0EE400A 		vmov.f32	s1, s0
 1803 0078 B7EE000A 		vmov.f32	s0, #1.0e+0
 1804 007c 474B     		ldr	r3, .L111+40
 1805 007e 4848     		ldr	r0, .L111+44
 1806 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1807 0082 30EE480A 		vsub.f32	s0, s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 86


 1808              	.LBE975:
 1809              	.LBE998:
 960:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1810              		.loc 20 960 1 view .LVU433
 1811 0086 BDEC028B 		vldm	sp!, {d8}
 1812              		.cfi_remember_state
 1813              		.cfi_restore 80
 1814              		.cfi_restore 81
 1815              		.cfi_def_cfa_offset 8
 1816              	.LVL73:
 960:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1817              		.loc 20 960 1 view .LVU434
 1818 008a BDE81040 		pop	{r4, lr}
 1819              		.cfi_restore 14
 1820              		.cfi_restore 4
 1821              		.cfi_def_cfa_offset 0
 1822              	.LBB999:
 1823              	.LBB976:
 918:Veno-Echo.cpp ****             {
 1824              		.loc 20 918 35 view .LVU435
 1825 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEffb
 1826              	.LVL74:
 1827              	.L82:
 1828              		.cfi_restore_state
 918:Veno-Echo.cpp ****             {
 1829              		.loc 20 918 35 view .LVU436
 1830              	.LBE976:
 1831              	.LBB977:
 930:Veno-Echo.cpp **** 
 1832              		.loc 20 930 9 is_stmt 1 view .LVU437
 932:Veno-Echo.cpp ****         {
 1833              		.loc 20 932 9 view .LVU438
 1834 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1835 0094 8BBB     		cbnz	r3, .L92
 934:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1836              		.loc 20 934 13 view .LVU439
 934:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1837              		.loc 20 934 23 is_stmt 0 view .LVU440
 1838 0096 0124     		movs	r4, #1
 935:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1839              		.loc 20 935 29 view .LVU441
 1840 0098 4248     		ldr	r0, .L111+48
 936:Veno-Echo.cpp ****         }
 1841              		.loc 20 936 26 view .LVU442
 1842 009a 4349     		ldr	r1, .L111+52
 934:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1843              		.loc 20 934 23 view .LVU443
 1844 009c 1470     		strb	r4, [r2]
 935:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1845              		.loc 20 935 13 is_stmt 1 view .LVU444
 935:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1846              		.loc 20 935 29 is_stmt 0 view .LVU445
 1847 009e 0370     		strb	r3, [r0]
 936:Veno-Echo.cpp ****         }
 1848              		.loc 20 936 13 is_stmt 1 view .LVU446
 936:Veno-Echo.cpp ****         }
 1849              		.loc 20 936 26 is_stmt 0 view .LVU447
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 87


 1850 00a0 81ED000A 		vstr.32	s0, [r1]
 1851              	.L81:
 936:Veno-Echo.cpp ****         }
 1852              		.loc 20 936 26 view .LVU448
 1853              	.LBE977:
 1854              	.LBE999:
 960:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1855              		.loc 20 960 1 view .LVU449
 1856 00a4 BDEC028B 		vldm	sp!, {d8}
 1857              		.cfi_remember_state
 1858              		.cfi_restore 80
 1859              		.cfi_restore 81
 1860              		.cfi_def_cfa_offset 8
 1861 00a8 10BD     		pop	{r4, pc}
 1862              	.L83:
 1863              		.cfi_restore_state
 1864              	.LBB1000:
 1865              	.LBB992:
 894:Veno-Echo.cpp ****             {
 1866              		.loc 20 894 13 is_stmt 1 view .LVU450
 894:Veno-Echo.cpp ****             {
 1867              		.loc 20 894 16 is_stmt 0 view .LVU451
 1868 00aa 374A     		ldr	r2, .L111+20
 894:Veno-Echo.cpp ****             {
 1869              		.loc 20 894 13 view .LVU452
 1870 00ac 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1871 00ae 79B9     		cbnz	r1, .L85
 896:Veno-Echo.cpp ****                 {
 1872              		.loc 20 896 17 is_stmt 1 view .LVU453
 1873              	.LVL75:
 1874              	.LBB966:
 1875              	.LBI966:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1876              		.loc 21 75 3 view .LVU454
 1877              	.LBB967:
 1878              		.loc 21 76 5 view .LVU455
 1879              		.loc 21 76 5 is_stmt 0 view .LVU456
 1880              	.LBE967:
 1881              	.LBE966:
 896:Veno-Echo.cpp ****                 {
 1882              		.loc 20 896 23 view .LVU457
 1883 00b0 3649     		ldr	r1, .L111+24
 896:Veno-Echo.cpp ****                 {
 1884              		.loc 20 896 17 view .LVU458
 1885 00b2 9FED3E7A 		vldr.32	s14, .L111+56
 896:Veno-Echo.cpp ****                 {
 1886              		.loc 20 896 23 view .LVU459
 1887 00b6 D1ED007A 		vldr.32	s15, [r1]
 1888 00ba 70EE677A 		vsub.f32	s15, s0, s15
 1889              	.LBB969:
 1890              	.LBB968:
 1891              		.loc 21 76 31 view .LVU460
 1892 00be F0EEE77A 		vabs.f32	s15, s15
 1893              	.LBE968:
 1894              	.LBE969:
 896:Veno-Echo.cpp ****                 {
 1895              		.loc 20 896 17 view .LVU461
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 88


 1896 00c2 F4EEC77A 		vcmpe.f32	s15, s14
 1897 00c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1898 00ca BBDD     		ble	.L84
 898:Veno-Echo.cpp ****                 }
 1899              		.loc 20 898 21 is_stmt 1 view .LVU462
 898:Veno-Echo.cpp ****                 }
 1900              		.loc 20 898 39 is_stmt 0 view .LVU463
 1901 00cc 0121     		movs	r1, #1
 1902 00ce 1170     		strb	r1, [r2]
 1903              	.L85:
 903:Veno-Echo.cpp **** 
 1904              		.loc 20 903 9 is_stmt 1 view .LVU464
 1905              	.LVL76:
 905:Veno-Echo.cpp ****         {
 1906              		.loc 20 905 9 view .LVU465
 907:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1907              		.loc 20 907 13 view .LVU466
 1908              	.LBB970:
 1909              	.LBI970:
1885:Veno-Echo.cpp **** {
 1910              		.loc 20 1885 7 view .LVU467
 1911              	.LBB971:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1912              		.loc 20 1887 5 view .LVU468
1888:Veno-Echo.cpp **** 
 1913              		.loc 20 1888 5 view .LVU469
1888:Veno-Echo.cpp **** 
 1914              		.loc 20 1888 12 is_stmt 0 view .LVU470
 1915 00d0 DFED307A 		vldr.32	s15, .L111+32
 1916 00d4 30EE278A 		vadd.f32	s16, s0, s15
 1917              	.LVL77:
1890:Veno-Echo.cpp ****     {
 1918              		.loc 20 1890 5 is_stmt 1 view .LVU471
 1919 00d8 B4EEE78A 		vcmpe.f32	s16, s15
 1920 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1921 00e0 3FD4     		bmi	.L110
1895:Veno-Echo.cpp ****     {
 1922              		.loc 20 1895 5 view .LVU472
 1923 00e2 F7EE007A 		vmov.f32	s15, #1.0e+0
1897:Veno-Echo.cpp ****     }
 1924              		.loc 20 1897 16 is_stmt 0 view .LVU473
 1925 00e6 B4EE678A 		vcmp.f32	s16, s15
 1926 00ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1927 00ee 37FE888A 		vselgt.f32	s16, s15, s16
 1928              	.LVL78:
 1929              	.L87:
 1930              		.loc 20 1900 5 is_stmt 1 view .LVU474
 1931              		.loc 20 1900 5 is_stmt 0 view .LVU475
 1932              	.LBE971:
 1933              	.LBE970:
 908:Veno-Echo.cpp ****         }
 1934              		.loc 20 908 13 is_stmt 1 view .LVU476
 908:Veno-Echo.cpp ****         }
 1935              		.loc 20 908 29 is_stmt 0 view .LVU477
 1936 00f2 274A     		ldr	r2, .L111+28
 1937 00f4 82ED000A 		vstr.32	s0, [r2]
 1938 00f8 B8E7     		b	.L89
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 89


 1939              	.LVL79:
 1940              	.L92:
 908:Veno-Echo.cpp ****         }
 1941              		.loc 20 908 29 view .LVU478
 1942              	.LBE992:
 1943              	.LBB993:
 941:Veno-Echo.cpp ****             {
 1944              		.loc 20 941 13 is_stmt 1 view .LVU479
 941:Veno-Echo.cpp ****             {
 1945              		.loc 20 941 16 is_stmt 0 view .LVU480
 1946 00fa 2A4B     		ldr	r3, .L111+48
 941:Veno-Echo.cpp ****             {
 1947              		.loc 20 941 13 view .LVU481
 1948 00fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1949 00fe 7AB9     		cbnz	r2, .L93
 943:Veno-Echo.cpp ****                 {
 1950              		.loc 20 943 17 is_stmt 1 view .LVU482
 1951              	.LVL80:
 1952              	.LBB978:
 1953              	.LBI978:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1954              		.loc 21 75 3 view .LVU483
 1955              	.LBB979:
 1956              		.loc 21 76 5 view .LVU484
 1957              		.loc 21 76 5 is_stmt 0 view .LVU485
 1958              	.LBE979:
 1959              	.LBE978:
 943:Veno-Echo.cpp ****                 {
 1960              		.loc 20 943 23 view .LVU486
 1961 0100 294A     		ldr	r2, .L111+52
 943:Veno-Echo.cpp ****                 {
 1962              		.loc 20 943 17 view .LVU487
 1963 0102 9FED2A7A 		vldr.32	s14, .L111+56
 943:Veno-Echo.cpp ****                 {
 1964              		.loc 20 943 23 view .LVU488
 1965 0106 D2ED007A 		vldr.32	s15, [r2]
 1966 010a 70EE677A 		vsub.f32	s15, s0, s15
 1967              	.LBB981:
 1968              	.LBB980:
 1969              		.loc 21 76 31 view .LVU489
 1970 010e F0EEE77A 		vabs.f32	s15, s15
 1971              	.LBE980:
 1972              	.LBE981:
 943:Veno-Echo.cpp ****                 {
 1973              		.loc 20 943 17 view .LVU490
 1974 0112 F4EEC77A 		vcmpe.f32	s15, s14
 1975 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1976 011a C3DD     		ble	.L81
 945:Veno-Echo.cpp ****                 }
 1977              		.loc 20 945 21 is_stmt 1 view .LVU491
 945:Veno-Echo.cpp ****                 }
 1978              		.loc 20 945 37 is_stmt 0 view .LVU492
 1979 011c 0122     		movs	r2, #1
 1980 011e 1A70     		strb	r2, [r3]
 1981              	.L93:
 950:Veno-Echo.cpp ****         {
 1982              		.loc 20 950 9 is_stmt 1 view .LVU493
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 90


 1983              	.LBB982:
 1984              	.LBB983:
 952:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 1985              		.loc 20 952 13 view .LVU494
 1986              	.LVL81:
 953:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 1987              		.loc 20 953 13 view .LVU495
 953:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 1988              		.loc 20 953 61 is_stmt 0 view .LVU496
 1989 0120 F0EE080A 		vmov.f32	s1, #3.0e+0
 1990 0124 0020     		movs	r0, #0
 1991 0126 9FED1B1A 		vldr.32	s2, .L111+32
 1992 012a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1993              	.LVL82:
 1994              	.LBB984:
 1995              	.LBI984:
 1996              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 91


  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 92


  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 93


 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 94


 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 95


 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 96


 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 97


 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 98


 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 99


 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 100


 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 101


 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 102


 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 103


 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 104


 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 105


 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 106


 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 107


 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 108


1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 109


1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 110


1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 111


1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 112


1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 113


1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 114


1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 115


1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 116


1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 117


1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 118


1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 119


1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 120


1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 121


1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 1997              		.loc 22 1756 3 is_stmt 1 view .LVU497
 1998              	.LBB985:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 1999              		.loc 22 1757 5 view .LVU498
 2000              		.loc 22 1757 28 is_stmt 0 view .LVU499
 2001 012e B8FE400A 		vrinta.f32	s0, s0
 2002              	.LVL83:
 2003              		.loc 22 1757 28 view .LVU500
 2004              	.LBE985:
 2005              	.LBE984:
 954:Veno-Echo.cpp ****             //save setting:
 2006              		.loc 20 954 13 is_stmt 1 view .LVU501
 2007              	.LBB986:
 2008              	.LBI986:
1901:Veno-Echo.cpp **** }
1902:Veno-Echo.cpp **** 
1903:Veno-Echo.cpp **** //checks pickup state of primary controls
1904:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
1905:Veno-Echo.cpp **** {
1906:Veno-Echo.cpp ****     bool retval{};
1907:Veno-Echo.cpp ****     
1908:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
1909:Veno-Echo.cpp ****     {
1910:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1911:Veno-Echo.cpp ****         {
1912:Veno-Echo.cpp ****             retval = false;
1913:Veno-Echo.cpp ****         }
1914:Veno-Echo.cpp ****         else
1915:Veno-Echo.cpp ****         {
1916:Veno-Echo.cpp ****             retval = true;
1917:Veno-Echo.cpp ****         }
1918:Veno-Echo.cpp ****     }
1919:Veno-Echo.cpp **** 
1920:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
1921:Veno-Echo.cpp ****     {
1922:Veno-Echo.cpp ****     if(!lastState) //if not picked up
1923:Veno-Echo.cpp ****     {
1924:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1925:Veno-Echo.cpp ****         {
1926:Veno-Echo.cpp ****             retval = true;
1927:Veno-Echo.cpp ****         }
1928:Veno-Echo.cpp **** 
1929:Veno-Echo.cpp ****         else
1930:Veno-Echo.cpp ****         {
1931:Veno-Echo.cpp ****             retval = false;
1932:Veno-Echo.cpp ****         }
1933:Veno-Echo.cpp **** 
1934:Veno-Echo.cpp ****     }
1935:Veno-Echo.cpp ****     else    //previous state is picked up
1936:Veno-Echo.cpp ****     {
1937:Veno-Echo.cpp ****         retval = true;  //always return true
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 122


1938:Veno-Echo.cpp ****     }
1939:Veno-Echo.cpp **** 
1940:Veno-Echo.cpp ****     }
1941:Veno-Echo.cpp ****     return retval;
1942:Veno-Echo.cpp **** 
1943:Veno-Echo.cpp **** }
1944:Veno-Echo.cpp **** 
1945:Veno-Echo.cpp **** //Checks pickup state of secondary controls
1946:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
1947:Veno-Echo.cpp **** {
1948:Veno-Echo.cpp ****     pickupState retval{};
1949:Veno-Echo.cpp **** 
1950:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
1951:Veno-Echo.cpp ****     {
1952:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
1953:Veno-Echo.cpp ****         {
1954:Veno-Echo.cpp ****             retval = BELOW;
1955:Veno-Echo.cpp ****         }
1956:Veno-Echo.cpp ****         
1957:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
1958:Veno-Echo.cpp ****         {
1959:Veno-Echo.cpp ****             retval = ABOVE;
1960:Veno-Echo.cpp ****         }
1961:Veno-Echo.cpp **** 
1962:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
1963:Veno-Echo.cpp ****         {
1964:Veno-Echo.cpp ****             retval = PICKEDUP;
1965:Veno-Echo.cpp ****         }
1966:Veno-Echo.cpp ****     }
1967:Veno-Echo.cpp **** 
1968:Veno-Echo.cpp ****     else    //not a recent shift change
1969:Veno-Echo.cpp ****     {
1970:Veno-Echo.cpp ****         switch(lastState)
1971:Veno-Echo.cpp ****         {
1972:Veno-Echo.cpp ****             case BELOW:
1973:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
1974:Veno-Echo.cpp ****                 retval = PICKEDUP;
1975:Veno-Echo.cpp ****             else
1976:Veno-Echo.cpp ****                 retval = lastState;
1977:Veno-Echo.cpp ****             break;
1978:Veno-Echo.cpp **** 
1979:Veno-Echo.cpp ****             case ABOVE:
1980:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
1981:Veno-Echo.cpp ****                 retval = PICKEDUP;
1982:Veno-Echo.cpp ****             else
1983:Veno-Echo.cpp ****                 retval = lastState;
1984:Veno-Echo.cpp ****             break;
1985:Veno-Echo.cpp ****             case PICKEDUP:
1986:Veno-Echo.cpp ****                 retval = lastState;
1987:Veno-Echo.cpp ****             break;
1988:Veno-Echo.cpp ****         }
1989:Veno-Echo.cpp ****     }
1990:Veno-Echo.cpp ****     
1991:Veno-Echo.cpp ****     return retval;
1992:Veno-Echo.cpp **** }
1993:Veno-Echo.cpp **** 
1994:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 123


 2009              		.loc 20 1994 7 view .LVU502
 2010              	.LBB987:
1995:Veno-Echo.cpp **** {
1996:Veno-Echo.cpp **** float retVal{};
 2011              		.loc 20 1996 1 view .LVU503
1997:Veno-Echo.cpp ****     switch(ratio)
 2012              		.loc 20 1997 5 view .LVU504
 2013              	.LBE987:
 2014              	.LBE986:
 953:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2015              		.loc 20 953 130 is_stmt 0 view .LVU505
 2016 0132 FCEEC07A 		vcvt.u32.f32	s15, s0
 2017 0136 17EE903A 		vmov	r3, s15	@ int
 2018 013a 013B     		subs	r3, r3, #1
 2019 013c DBB2     		uxtb	r3, r3
 2020 013e 022B     		cmp	r3, #2
 2021 0140 12D9     		bls	.L97
 2022 0142 B7EE008A 		vmov.f32	s16, #1.0e+0
 2023              	.L98:
 2024              	.LVL84:
 2025              	.LBB989:
 2026              	.LBB988:
1998:Veno-Echo.cpp ****     {
1999:Veno-Echo.cpp ****         case QUARTER:
2000:Veno-Echo.cpp ****         retVal = 1.0f;
2001:Veno-Echo.cpp ****         break;
2002:Veno-Echo.cpp **** 
2003:Veno-Echo.cpp ****         case DOTTED_EIGHT:
2004:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
2005:Veno-Echo.cpp ****         break;
2006:Veno-Echo.cpp **** 
2007:Veno-Echo.cpp ****         case EIGHT:
2008:Veno-Echo.cpp ****         retVal = 2.0f;
2009:Veno-Echo.cpp ****         break;
2010:Veno-Echo.cpp **** 
2011:Veno-Echo.cpp ****         case TWELVE:
2012:Veno-Echo.cpp ****         retVal = 3.0f;
2013:Veno-Echo.cpp ****         break;
2014:Veno-Echo.cpp **** 
2015:Veno-Echo.cpp ****         default:
2016:Veno-Echo.cpp ****         retVal = 1.0f;
2017:Veno-Echo.cpp ****         break;
2018:Veno-Echo.cpp ****     }
2019:Veno-Echo.cpp **** 
2020:Veno-Echo.cpp **** return retVal;
 2027              		.loc 20 2020 1 is_stmt 1 view .LVU506
 2028              		.loc 20 2020 1 is_stmt 0 view .LVU507
 2029              	.LBE988:
 2030              	.LBE989:
 954:Veno-Echo.cpp ****             //save setting:
 2031              		.loc 20 954 34 view .LVU508
 2032 0146 B0EE480A 		vmov.f32	s0, s16
 2033              	.LVL85:
 954:Veno-Echo.cpp ****             //save setting:
 2034              		.loc 20 954 34 view .LVU509
 2035 014a 1348     		ldr	r0, .L111+36
 2036 014c FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 124


 2037              	.LVL86:
 956:Veno-Echo.cpp ****         }
 2038              		.loc 20 956 13 is_stmt 1 view .LVU510
 956:Veno-Echo.cpp ****         }
 2039              		.loc 20 956 13 is_stmt 0 view .LVU511
 2040              	.LBE983:
 2041              	.LBE982:
 2042              	.LBE993:
 2043              	.LBE1000:
1996:Veno-Echo.cpp ****     switch(ratio)
 2044              		.loc 20 1996 1 is_stmt 1 view .LVU512
1997:Veno-Echo.cpp ****     {
 2045              		.loc 20 1997 5 view .LVU513
 2046              		.loc 20 2020 1 view .LVU514
 2047              	.LBB1001:
 2048              	.LBB994:
 2049              	.LBB991:
 2050              	.LBB990:
 956:Veno-Echo.cpp ****         }
 2051              		.loc 20 956 34 is_stmt 0 view .LVU515
 2052 0150 174B     		ldr	r3, .L111+60
 2053 0152 83ED018A 		vstr.32	s16, [r3, #4]
 2054              	.LBE990:
 2055              	.LBE991:
 2056              	.LBE994:
 2057              	.LBE1001:
 960:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2058              		.loc 20 960 1 view .LVU516
 2059 0156 BDEC028B 		vldm	sp!, {d8}
 2060              		.cfi_remember_state
 2061              		.cfi_restore 80
 2062              		.cfi_restore 81
 2063              		.cfi_def_cfa_offset 8
 2064 015a 10BD     		pop	{r4, pc}
 2065              	.LVL87:
 2066              	.L109:
 2067              		.cfi_restore_state
 2068              	.LBB1002:
 2069              	.LBB995:
 2070              	.LBB973:
 2071              	.LBB964:
1892:Veno-Echo.cpp ****     }
 2072              		.loc 20 1892 16 view .LVU517
 2073 015c B0EE678A 		vmov.f32	s16, s15
 2074              	.LVL88:
1892:Veno-Echo.cpp ****     }
 2075              		.loc 20 1892 16 view .LVU518
 2076 0160 84E7     		b	.L89
 2077              	.LVL89:
 2078              	.L110:
1892:Veno-Echo.cpp ****     }
 2079              		.loc 20 1892 16 view .LVU519
 2080              	.LBE964:
 2081              	.LBE973:
 2082              	.LBB974:
 2083              	.LBB972:
 2084 0162 B0EE678A 		vmov.f32	s16, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 125


 2085              	.LVL90:
1892:Veno-Echo.cpp ****     }
 2086              		.loc 20 1892 16 view .LVU520
 2087 0166 C4E7     		b	.L87
 2088              	.LVL91:
 2089              	.L97:
1892:Veno-Echo.cpp ****     }
 2090              		.loc 20 1892 16 view .LVU521
 2091 0168 124A     		ldr	r2, .L111+64
 2092 016a 02EB8303 		add	r3, r2, r3, lsl #2
 2093 016e 93ED008A 		vldr.32	s16, [r3]
 2094 0172 E8E7     		b	.L98
 2095              	.L112:
 2096              		.align	2
 2097              	.L111:
 2098 0174 18000000 		.word	.LANCHOR4+24
 2099 0178 00000000 		.word	.LANCHOR18
 2100 017c ABAAAA2A 		.word	715827883
 2101 0180 00000000 		.word	.LANCHOR7
 2102 0184 00000000 		.word	.LANCHOR19
 2103 0188 00000000 		.word	.LANCHOR20
 2104 018c 00000000 		.word	.LANCHOR21
 2105 0190 00000000 		.word	.LANCHOR22
 2106 0194 00000000 		.word	0
 2107 0198 00000000 		.word	.LANCHOR12
 2108 019c 00000000 		.word	.LANCHOR13
 2109 01a0 00000000 		.word	.LANCHOR1
 2110 01a4 00000000 		.word	.LANCHOR23
 2111 01a8 00000000 		.word	.LANCHOR24
 2112 01ac 0AD7A33B 		.word	1000593162
 2113 01b0 00000000 		.word	.LANCHOR16
 2114 01b4 00000000 		.word	.LANCHOR25
 2115              	.LBE972:
 2116              	.LBE974:
 2117              	.LBE995:
 2118              	.LBE1002:
 2119              		.cfi_endproc
 2120              	.LFE4315:
 2122              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2123              		.align	1
 2124              		.p2align 2,,3
 2125              		.global	_Z19Update_feedbackL_CVv
 2126              		.syntax unified
 2127              		.thumb
 2128              		.thumb_func
 2129              		.fpu fpv5-d16
 2131              	_Z19Update_feedbackL_CVv:
 2132              	.LFB4316:
 962:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2133              		.loc 20 962 1 is_stmt 1 view -0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 0
 2136              		@ frame_needed = 0, uses_anonymous_args = 0
 963:Veno-Echo.cpp **** }
 2137              		.loc 20 963 5 view .LVU523
 962:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2138              		.loc 20 962 1 is_stmt 0 view .LVU524
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 126


 2139 0000 08B5     		push	{r3, lr}
 2140              		.cfi_def_cfa_offset 8
 2141              		.cfi_offset 3, -8
 2142              		.cfi_offset 14, -4
 963:Veno-Echo.cpp **** }
 2143              		.loc 20 963 35 view .LVU525
 2144 0002 0221     		movs	r1, #2
 2145 0004 0348     		ldr	r0, .L115
 2146 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2147              	.LVL92:
 963:Veno-Echo.cpp **** }
 2148              		.loc 20 963 18 view .LVU526
 2149 000a 034B     		ldr	r3, .L115+4
 2150 000c 83ED000A 		vstr.32	s0, [r3]
 964:Veno-Echo.cpp **** void Update_feedbackL()
 2151              		.loc 20 964 1 view .LVU527
 2152 0010 08BD     		pop	{r3, pc}
 2153              	.L116:
 2154 0012 00BF     		.align	2
 2155              	.L115:
 2156 0014 18000000 		.word	.LANCHOR4+24
 2157 0018 00000000 		.word	.LANCHOR26
 2158              		.cfi_endproc
 2159              	.LFE4316:
 2161              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2162              		.align	1
 2163              		.p2align 2,,3
 2164              		.global	_Z16Update_feedbackLv
 2165              		.syntax unified
 2166              		.thumb
 2167              		.thumb_func
 2168              		.fpu fpv5-d16
 2170              	_Z16Update_feedbackLv:
 2171              	.LFB4317:
 966:Veno-Echo.cpp ****     static bool lastShift{};
 2172              		.loc 20 966 1 is_stmt 1 view -0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 0
 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 967:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2176              		.loc 20 967 5 view .LVU529
 968:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2177              		.loc 20 968 5 view .LVU530
 969:Veno-Echo.cpp **** 
 2178              		.loc 20 969 5 view .LVU531
 971:Veno-Echo.cpp **** 
 2179              		.loc 20 971 5 view .LVU532
 975:Veno-Echo.cpp **** 
 2180              		.loc 20 975 5 view .LVU533
 966:Veno-Echo.cpp ****     static bool lastShift{};
 2181              		.loc 20 966 1 is_stmt 0 view .LVU534
 2182 0000 10B5     		push	{r4, lr}
 2183              		.cfi_def_cfa_offset 8
 2184              		.cfi_offset 4, -8
 2185              		.cfi_offset 14, -4
 975:Veno-Echo.cpp **** 
 2186              		.loc 20 975 47 view .LVU535
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 127


 2187 0002 0221     		movs	r1, #2
 2188 0004 5748     		ldr	r0, .L145
 966:Veno-Echo.cpp ****     static bool lastShift{};
 2189              		.loc 20 966 1 view .LVU536
 2190 0006 2DED028B 		vpush.64	{d8}
 2191              		.cfi_def_cfa_offset 16
 2192              		.cfi_offset 80, -16
 2193              		.cfi_offset 81, -12
 975:Veno-Echo.cpp **** 
 2194              		.loc 20 975 47 view .LVU537
 2195 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2196              	.LVL93:
 2197              	.LBB1003:
 977:Veno-Echo.cpp ****     {   
 2198              		.loc 20 977 9 view .LVU538
 2199 000e 564B     		ldr	r3, .L145+4
 2200              	.LBE1003:
 975:Veno-Echo.cpp **** 
 2201              		.loc 20 975 50 view .LVU539
 2202 0010 B7EE007A 		vmov.f32	s14, #1.0e+0
 2203              	.LBB1035:
 2204              	.LBB1004:
 981:Veno-Echo.cpp ****         {
 2205              		.loc 20 981 19 view .LVU540
 2206 0014 554A     		ldr	r2, .L145+8
 2207              	.LBE1004:
 977:Veno-Echo.cpp ****     {   
 2208              		.loc 20 977 5 view .LVU541
 2209 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2210              	.LBE1035:
 975:Veno-Echo.cpp **** 
 2211              		.loc 20 975 50 view .LVU542
 2212 0018 77EE407A 		vsub.f32	s15, s14, s0
 2213              	.LVL94:
 977:Veno-Echo.cpp ****     {   
 2214              		.loc 20 977 5 is_stmt 1 view .LVU543
 2215              	.LBB1036:
 2216 001c 93BB     		cbnz	r3, .L118
 2217              	.LBB1023:
 979:Veno-Echo.cpp ****         //update pickup
 2218              		.loc 20 979 9 view .LVU544
 981:Veno-Echo.cpp ****         {
 2219              		.loc 20 981 9 view .LVU545
 2220 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2221 0020 0029     		cmp	r1, #0
 2222 0022 3BD0     		beq	.L119
 983:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2223              		.loc 20 983 13 view .LVU546
 984:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2224              		.loc 20 984 30 is_stmt 0 view .LVU547
 2225 0024 5248     		ldr	r0, .L145+12
 985:Veno-Echo.cpp ****         } 
 2226              		.loc 20 985 27 view .LVU548
 2227 0026 5349     		ldr	r1, .L145+16
 983:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2228              		.loc 20 983 23 view .LVU549
 2229 0028 1370     		strb	r3, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 128


 984:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2230              		.loc 20 984 13 is_stmt 1 view .LVU550
 984:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2231              		.loc 20 984 30 is_stmt 0 view .LVU551
 2232 002a 0370     		strb	r3, [r0]
 985:Veno-Echo.cpp ****         } 
 2233              		.loc 20 985 13 is_stmt 1 view .LVU552
 985:Veno-Echo.cpp ****         } 
 2234              		.loc 20 985 27 is_stmt 0 view .LVU553
 2235 002c C1ED007A 		vstr.32	s15, [r1]
 2236              	.L120:
 998:Veno-Echo.cpp **** 
 2237              		.loc 20 998 9 is_stmt 1 view .LVU554
 2238              	.LVL95:
1000:Veno-Echo.cpp ****         {
 2239              		.loc 20 1000 9 view .LVU555
1008:Veno-Echo.cpp ****         }
 2240              		.loc 20 1008 13 view .LVU556
 2241              	.LBB1005:
 2242              	.LBI1005:
1885:Veno-Echo.cpp **** {
 2243              		.loc 20 1885 7 view .LVU557
 2244              	.LBB1006:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2245              		.loc 20 1887 5 view .LVU558
1888:Veno-Echo.cpp **** 
 2246              		.loc 20 1888 5 view .LVU559
 2247              	.LBE1006:
 2248              	.LBE1005:
1008:Veno-Echo.cpp ****         }
 2249              		.loc 20 1008 41 is_stmt 0 view .LVU560
 2250 0030 514B     		ldr	r3, .L145+20
 2251              	.LBB1009:
 2252              	.LBB1007:
1888:Veno-Echo.cpp **** 
 2253              		.loc 20 1888 12 view .LVU561
 2254 0032 DFED527A 		vldr.32	s15, .L145+24
 2255              	.LVL96:
1888:Veno-Echo.cpp **** 
 2256              		.loc 20 1888 12 view .LVU562
 2257 0036 93ED000A 		vldr.32	s0, [r3]
 2258              	.LVL97:
1888:Veno-Echo.cpp **** 
 2259              		.loc 20 1888 12 view .LVU563
 2260 003a 30EE270A 		vadd.f32	s0, s0, s15
 2261              	.LVL98:
1890:Veno-Echo.cpp ****     {
 2262              		.loc 20 1890 5 is_stmt 1 view .LVU564
 2263 003e B4EEE70A 		vcmpe.f32	s0, s15
 2264 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2265 0046 00F18780 		bmi	.L143
1895:Veno-Echo.cpp ****     {
 2266              		.loc 20 1895 5 view .LVU565
 2267 004a F7EE007A 		vmov.f32	s15, #1.0e+0
1897:Veno-Echo.cpp ****     }
 2268              		.loc 20 1897 16 is_stmt 0 view .LVU566
 2269 004e B4EE670A 		vcmp.f32	s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 129


 2270 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2271 0056 37FE800A 		vselgt.f32	s0, s15, s0
 2272              	.LVL99:
 2273              	.L125:
1897:Veno-Echo.cpp ****     }
 2274              		.loc 20 1897 16 view .LVU567
 2275              	.LBE1007:
 2276              	.LBE1009:
1011:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2277              		.loc 20 1011 9 is_stmt 1 view .LVU568
1011:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2278              		.loc 20 1011 37 is_stmt 0 view .LVU569
 2279 005a B7EE041A 		vmov.f32	s2, #1.25e+0
 2280 005e 0020     		movs	r0, #0
 2281 0060 DFED460A 		vldr.32	s1, .L145+24
 2282 0064 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2283              	.LVL100:
1012:Veno-Echo.cpp ****     }
 2284              		.loc 20 1012 9 is_stmt 1 view .LVU570
 2285              	.LBB1010:
 2286              	.LBI1010:
 2287              		.file 23 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 130


  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 131


  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2288              		.loc 23 135 13 view .LVU571
 2289              	.LBB1011:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2290              		.loc 23 137 5 view .LVU572
 2291              		.loc 23 137 9 is_stmt 0 view .LVU573
 2292 0068 454B     		ldr	r3, .L145+28
 2293 006a 9FED467A 		vldr.32	s14, .L145+32
 2294 006e D3ED007A 		vldr.32	s15, [r3]
 2295              		.loc 23 137 24 view .LVU574
 2296 0072 30EE670A 		vsub.f32	s0, s0, s15
 2297              	.LVL101:
 2298              		.loc 23 137 24 view .LVU575
 2299              	.LBE1011:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 132


 2300              	.LBE1010:
 2301              	.LBE1023:
 2302              	.LBE1036:
1047:Veno-Echo.cpp **** 
 2303              		.loc 20 1047 1 view .LVU576
 2304 0076 BDEC028B 		vldm	sp!, {d8}
 2305              		.cfi_remember_state
 2306              		.cfi_restore 80
 2307              		.cfi_restore 81
 2308              		.cfi_def_cfa_offset 8
 2309              	.LBB1037:
 2310              	.LBB1024:
 2311              	.LBB1013:
 2312              	.LBB1012:
 2313              		.loc 23 137 9 view .LVU577
 2314 007a E0EE077A 		vfma.f32	s15, s0, s14
 2315 007e C3ED007A 		vstr.32	s15, [r3]
 2316              	.LBE1012:
 2317              	.LBE1013:
 2318              	.LBE1024:
 2319              	.LBE1037:
1047:Veno-Echo.cpp **** 
 2320              		.loc 20 1047 1 view .LVU578
 2321 0082 10BD     		pop	{r4, pc}
 2322              	.LVL102:
 2323              	.L118:
 2324              		.cfi_restore_state
 2325              	.LBB1038:
 2326              	.LBB1025:
1016:Veno-Echo.cpp **** 
 2327              		.loc 20 1016 9 is_stmt 1 view .LVU579
1018:Veno-Echo.cpp ****         {
 2328              		.loc 20 1018 9 view .LVU580
 2329 0084 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2330 0086 8BBB     		cbnz	r3, .L128
1020:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2331              		.loc 20 1020 13 view .LVU581
1020:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2332              		.loc 20 1020 23 is_stmt 0 view .LVU582
 2333 0088 0124     		movs	r4, #1
1021:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2334              		.loc 20 1021 29 view .LVU583
 2335 008a 3F48     		ldr	r0, .L145+36
1022:Veno-Echo.cpp ****         }
 2336              		.loc 20 1022 26 view .LVU584
 2337 008c 3F49     		ldr	r1, .L145+40
1020:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2338              		.loc 20 1020 23 view .LVU585
 2339 008e 1470     		strb	r4, [r2]
1021:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2340              		.loc 20 1021 13 is_stmt 1 view .LVU586
1021:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2341              		.loc 20 1021 29 is_stmt 0 view .LVU587
 2342 0090 0370     		strb	r3, [r0]
1022:Veno-Echo.cpp ****         }
 2343              		.loc 20 1022 13 is_stmt 1 view .LVU588
1022:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 133


 2344              		.loc 20 1022 26 is_stmt 0 view .LVU589
 2345 0092 C1ED007A 		vstr.32	s15, [r1]
 2346              	.L117:
1022:Veno-Echo.cpp ****         }
 2347              		.loc 20 1022 26 view .LVU590
 2348              	.LBE1025:
 2349              	.LBE1038:
1047:Veno-Echo.cpp **** 
 2350              		.loc 20 1047 1 view .LVU591
 2351 0096 BDEC028B 		vldm	sp!, {d8}
 2352              		.cfi_remember_state
 2353              		.cfi_restore 80
 2354              		.cfi_restore 81
 2355              		.cfi_def_cfa_offset 8
 2356 009a 10BD     		pop	{r4, pc}
 2357              	.L119:
 2358              		.cfi_restore_state
 2359              	.LBB1039:
 2360              	.LBB1032:
 989:Veno-Echo.cpp ****             {
 2361              		.loc 20 989 13 is_stmt 1 view .LVU592
 989:Veno-Echo.cpp ****             {
 2362              		.loc 20 989 16 is_stmt 0 view .LVU593
 2363 009c 344B     		ldr	r3, .L145+12
 989:Veno-Echo.cpp ****             {
 2364              		.loc 20 989 13 view .LVU594
 2365 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2366 00a0 7AB9     		cbnz	r2, .L121
 991:Veno-Echo.cpp ****                 {
 2367              		.loc 20 991 17 is_stmt 1 view .LVU595
 2368              	.LVL103:
 2369              	.LBB1014:
 2370              	.LBI1014:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2371              		.loc 21 75 3 view .LVU596
 2372              	.LBB1015:
 2373              		.loc 21 76 5 view .LVU597
 2374              		.loc 21 76 5 is_stmt 0 view .LVU598
 2375              	.LBE1015:
 2376              	.LBE1014:
 991:Veno-Echo.cpp ****                 {
 2377              		.loc 20 991 23 view .LVU599
 2378 00a2 344A     		ldr	r2, .L145+16
 991:Veno-Echo.cpp ****                 {
 2379              		.loc 20 991 17 view .LVU600
 2380 00a4 DFED3A6A 		vldr.32	s13, .L145+44
 991:Veno-Echo.cpp ****                 {
 2381              		.loc 20 991 23 view .LVU601
 2382 00a8 92ED007A 		vldr.32	s14, [r2]
 2383 00ac 37EEC77A 		vsub.f32	s14, s15, s14
 2384              	.LBB1017:
 2385              	.LBB1016:
 2386              		.loc 21 76 31 view .LVU602
 2387 00b0 B0EEC77A 		vabs.f32	s14, s14
 2388              	.LBE1016:
 2389              	.LBE1017:
 991:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 134


 2390              		.loc 20 991 17 view .LVU603
 2391 00b4 B4EEE67A 		vcmpe.f32	s14, s13
 2392 00b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2393 00bc B8DD     		ble	.L120
 993:Veno-Echo.cpp ****                 }
 2394              		.loc 20 993 21 is_stmt 1 view .LVU604
 993:Veno-Echo.cpp ****                 }
 2395              		.loc 20 993 38 is_stmt 0 view .LVU605
 2396 00be 0122     		movs	r2, #1
 2397 00c0 1A70     		strb	r2, [r3]
 2398              	.L121:
 998:Veno-Echo.cpp **** 
 2399              		.loc 20 998 9 is_stmt 1 view .LVU606
 2400              	.LVL104:
1000:Veno-Echo.cpp ****         {
 2401              		.loc 20 1000 9 view .LVU607
1002:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2402              		.loc 20 1002 13 view .LVU608
 2403              	.LBB1018:
 2404              	.LBI1018:
1885:Veno-Echo.cpp **** {
 2405              		.loc 20 1885 7 view .LVU609
 2406              	.LBB1019:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2407              		.loc 20 1887 5 view .LVU610
1888:Veno-Echo.cpp **** 
 2408              		.loc 20 1888 5 view .LVU611
1888:Veno-Echo.cpp **** 
 2409              		.loc 20 1888 12 is_stmt 0 view .LVU612
 2410 00c2 9FED2E7A 		vldr.32	s14, .L145+24
 2411 00c6 37EE870A 		vadd.f32	s0, s15, s14
 2412              	.LVL105:
1890:Veno-Echo.cpp ****     {
 2413              		.loc 20 1890 5 is_stmt 1 view .LVU613
 2414 00ca B4EEC70A 		vcmpe.f32	s0, s14
 2415 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2416 00d2 44D4     		bmi	.L144
1895:Veno-Echo.cpp ****     {
 2417              		.loc 20 1895 5 view .LVU614
 2418 00d4 B7EE007A 		vmov.f32	s14, #1.0e+0
1897:Veno-Echo.cpp ****     }
 2419              		.loc 20 1897 16 is_stmt 0 view .LVU615
 2420 00d8 B4EE470A 		vcmp.f32	s0, s14
 2421 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2422 00e0 37FE000A 		vselgt.f32	s0, s14, s0
 2423              	.LVL106:
 2424              	.L123:
1900:Veno-Echo.cpp **** }
 2425              		.loc 20 1900 5 is_stmt 1 view .LVU616
1900:Veno-Echo.cpp **** }
 2426              		.loc 20 1900 5 is_stmt 0 view .LVU617
 2427              	.LBE1019:
 2428              	.LBE1018:
1003:Veno-Echo.cpp ****         }
 2429              		.loc 20 1003 13 is_stmt 1 view .LVU618
1003:Veno-Echo.cpp ****         }
 2430              		.loc 20 1003 28 is_stmt 0 view .LVU619
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 135


 2431 00e4 244B     		ldr	r3, .L145+20
 2432 00e6 C3ED007A 		vstr.32	s15, [r3]
 2433 00ea B6E7     		b	.L125
 2434              	.LVL107:
 2435              	.L128:
1003:Veno-Echo.cpp ****         }
 2436              		.loc 20 1003 28 view .LVU620
 2437              	.LBE1032:
 2438              	.LBB1033:
1027:Veno-Echo.cpp ****             {
 2439              		.loc 20 1027 13 is_stmt 1 view .LVU621
1027:Veno-Echo.cpp ****             {
 2440              		.loc 20 1027 16 is_stmt 0 view .LVU622
 2441 00ec 264B     		ldr	r3, .L145+36
1027:Veno-Echo.cpp ****             {
 2442              		.loc 20 1027 13 view .LVU623
 2443 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2444 00f0 7AB9     		cbnz	r2, .L130
1029:Veno-Echo.cpp ****                 {
 2445              		.loc 20 1029 17 is_stmt 1 view .LVU624
 2446              	.LVL108:
 2447              	.LBB1026:
 2448              	.LBI1026:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2449              		.loc 21 75 3 view .LVU625
 2450              	.LBB1027:
 2451              		.loc 21 76 5 view .LVU626
 2452              		.loc 21 76 5 is_stmt 0 view .LVU627
 2453              	.LBE1027:
 2454              	.LBE1026:
1029:Veno-Echo.cpp ****                 {
 2455              		.loc 20 1029 23 view .LVU628
 2456 00f2 264A     		ldr	r2, .L145+40
1029:Veno-Echo.cpp ****                 {
 2457              		.loc 20 1029 17 view .LVU629
 2458 00f4 DFED266A 		vldr.32	s13, .L145+44
1029:Veno-Echo.cpp ****                 {
 2459              		.loc 20 1029 23 view .LVU630
 2460 00f8 92ED007A 		vldr.32	s14, [r2]
 2461 00fc 37EEC77A 		vsub.f32	s14, s15, s14
 2462              	.LBB1029:
 2463              	.LBB1028:
 2464              		.loc 21 76 31 view .LVU631
 2465 0100 B0EEC77A 		vabs.f32	s14, s14
 2466              	.LBE1028:
 2467              	.LBE1029:
1029:Veno-Echo.cpp ****                 {
 2468              		.loc 20 1029 17 view .LVU632
 2469 0104 B4EEE67A 		vcmpe.f32	s14, s13
 2470 0108 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2471 010c C3DD     		ble	.L117
1031:Veno-Echo.cpp ****                 }
 2472              		.loc 20 1031 21 is_stmt 1 view .LVU633
1031:Veno-Echo.cpp ****                 }
 2473              		.loc 20 1031 37 is_stmt 0 view .LVU634
 2474 010e 0122     		movs	r2, #1
 2475 0110 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 136


 2476              	.L130:
1036:Veno-Echo.cpp ****         {
 2477              		.loc 20 1036 9 is_stmt 1 view .LVU635
 2478              	.LBB1030:
 2479              	.LBB1031:
1038:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2480              		.loc 20 1038 13 view .LVU636
 2481              	.LVL109:
1039:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2482              		.loc 20 1039 13 view .LVU637
1039:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2483              		.loc 20 1039 29 is_stmt 0 view .LVU638
 2484 0112 B0EE670A 		vmov.f32	s0, s15
 2485 0116 9FED1F1A 		vldr.32	s2, .L145+48
 2486 011a DFED1F0A 		vldr.32	s1, .L145+52
 2487 011e 0120     		movs	r0, #1
 2488 0120 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2489              	.LVL110:
1039:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2490              		.loc 20 1039 29 view .LVU639
 2491 0124 B0EE408A 		vmov.f32	s16, s0
 2492              	.LVL111:
1040:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2493              		.loc 20 1040 13 is_stmt 1 view .LVU640
1040:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2494              		.loc 20 1040 26 is_stmt 0 view .LVU641
 2495 0128 1C48     		ldr	r0, .L145+56
 2496 012a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2497              	.LVL112:
1041:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2498              		.loc 20 1041 13 is_stmt 1 view .LVU642
1041:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2499              		.loc 20 1041 26 is_stmt 0 view .LVU643
 2500 012e 1C48     		ldr	r0, .L145+60
 2501 0130 B0EE480A 		vmov.f32	s0, s16
 2502 0134 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2503              	.LVL113:
1042:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2504              		.loc 20 1042 13 is_stmt 1 view .LVU644
1042:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2505              		.loc 20 1042 31 is_stmt 0 view .LVU645
 2506 0138 B0EE480A 		vmov.f32	s0, s16
 2507 013c 1948     		ldr	r0, .L145+64
 2508 013e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2509              	.LVL114:
1043:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2510              		.loc 20 1043 13 is_stmt 1 view .LVU646
1043:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2511              		.loc 20 1043 31 is_stmt 0 view .LVU647
 2512 0142 B0EE480A 		vmov.f32	s0, s16
 2513 0146 1848     		ldr	r0, .L145+68
 2514 0148 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2515              	.LVL115:
1044:Veno-Echo.cpp ****         }
 2516              		.loc 20 1044 13 is_stmt 1 view .LVU648
1044:Veno-Echo.cpp ****         }
 2517              		.loc 20 1044 35 is_stmt 0 view .LVU649
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 137


 2518 014c 174B     		ldr	r3, .L145+72
 2519 014e 83ED048A 		vstr.32	s16, [r3, #16]
 2520              	.LBE1031:
 2521              	.LBE1030:
 2522              	.LBE1033:
 2523              	.LBE1039:
1047:Veno-Echo.cpp **** 
 2524              		.loc 20 1047 1 view .LVU650
 2525 0152 BDEC028B 		vldm	sp!, {d8}
 2526              		.cfi_remember_state
 2527              		.cfi_restore 80
 2528              		.cfi_restore 81
 2529              		.cfi_def_cfa_offset 8
 2530              	.LVL116:
1047:Veno-Echo.cpp **** 
 2531              		.loc 20 1047 1 view .LVU651
 2532 0156 10BD     		pop	{r4, pc}
 2533              	.LVL117:
 2534              	.L143:
 2535              		.cfi_restore_state
 2536              	.LBB1040:
 2537              	.LBB1034:
 2538              	.LBB1021:
 2539              	.LBB1008:
1892:Veno-Echo.cpp ****     }
 2540              		.loc 20 1892 16 view .LVU652
 2541 0158 B0EE670A 		vmov.f32	s0, s15
 2542              	.LVL118:
1892:Veno-Echo.cpp ****     }
 2543              		.loc 20 1892 16 view .LVU653
 2544 015c 7DE7     		b	.L125
 2545              	.LVL119:
 2546              	.L144:
1892:Veno-Echo.cpp ****     }
 2547              		.loc 20 1892 16 view .LVU654
 2548              	.LBE1008:
 2549              	.LBE1021:
 2550              	.LBB1022:
 2551              	.LBB1020:
 2552 015e B0EE470A 		vmov.f32	s0, s14
 2553              	.LVL120:
1892:Veno-Echo.cpp ****     }
 2554              		.loc 20 1892 16 view .LVU655
 2555 0162 BFE7     		b	.L123
 2556              	.L146:
 2557              		.align	2
 2558              	.L145:
 2559 0164 18000000 		.word	.LANCHOR4+24
 2560 0168 00000000 		.word	.LANCHOR7
 2561 016c 00000000 		.word	.LANCHOR27
 2562 0170 00000000 		.word	.LANCHOR28
 2563 0174 00000000 		.word	.LANCHOR29
 2564 0178 00000000 		.word	.LANCHOR30
 2565 017c 00000000 		.word	0
 2566 0180 00000000 		.word	.LANCHOR31
 2567 0184 6F12033D 		.word	1023611503
 2568 0188 00000000 		.word	.LANCHOR32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 138


 2569 018c 00000000 		.word	.LANCHOR33
 2570 0190 0AD7A33B 		.word	1000593162
 2571 0194 00004844 		.word	1145569280
 2572 0198 0000C842 		.word	1120403456
 2573 019c 00000000 		.word	.LANCHOR34
 2574 01a0 00000000 		.word	.LANCHOR35
 2575 01a4 00000000 		.word	.LANCHOR36
 2576 01a8 00000000 		.word	.LANCHOR37
 2577 01ac 00000000 		.word	.LANCHOR16
 2578              	.LBE1020:
 2579              	.LBE1022:
 2580              	.LBE1034:
 2581              	.LBE1040:
 2582              		.cfi_endproc
 2583              	.LFE4317:
 2585              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2586              		.align	1
 2587              		.p2align 2,,3
 2588              		.global	_Z19Update_feedbackR_CVv
 2589              		.syntax unified
 2590              		.thumb
 2591              		.thumb_func
 2592              		.fpu fpv5-d16
 2594              	_Z19Update_feedbackR_CVv:
 2595              	.LFB4318:
1050:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2596              		.loc 20 1050 1 is_stmt 1 view -0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 0
 2599              		@ frame_needed = 0, uses_anonymous_args = 0
1051:Veno-Echo.cpp **** }
 2600              		.loc 20 1051 5 view .LVU657
1050:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2601              		.loc 20 1050 1 is_stmt 0 view .LVU658
 2602 0000 08B5     		push	{r3, lr}
 2603              		.cfi_def_cfa_offset 8
 2604              		.cfi_offset 3, -8
 2605              		.cfi_offset 14, -4
1051:Veno-Echo.cpp **** }
 2606              		.loc 20 1051 35 view .LVU659
 2607 0002 0321     		movs	r1, #3
 2608 0004 0348     		ldr	r0, .L149
 2609 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2610              	.LVL121:
1051:Veno-Echo.cpp **** }
 2611              		.loc 20 1051 18 view .LVU660
 2612 000a 034B     		ldr	r3, .L149+4
 2613 000c 83ED000A 		vstr.32	s0, [r3]
1052:Veno-Echo.cpp **** 
 2614              		.loc 20 1052 1 view .LVU661
 2615 0010 08BD     		pop	{r3, pc}
 2616              	.L150:
 2617 0012 00BF     		.align	2
 2618              	.L149:
 2619 0014 18000000 		.word	.LANCHOR4+24
 2620 0018 00000000 		.word	.LANCHOR38
 2621              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 139


 2622              	.LFE4318:
 2624              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2625              		.align	1
 2626              		.p2align 2,,3
 2627              		.global	_Z16Update_feedbackRv
 2628              		.syntax unified
 2629              		.thumb
 2630              		.thumb_func
 2631              		.fpu fpv5-d16
 2633              	_Z16Update_feedbackRv:
 2634              	.LFB4319:
1055:Veno-Echo.cpp ****     static bool lastShift{};
 2635              		.loc 20 1055 1 is_stmt 1 view -0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 0
 2638              		@ frame_needed = 0, uses_anonymous_args = 0
1056:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2639              		.loc 20 1056 5 view .LVU663
1057:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2640              		.loc 20 1057 5 view .LVU664
1058:Veno-Echo.cpp **** 
 2641              		.loc 20 1058 5 view .LVU665
1060:Veno-Echo.cpp **** 
 2642              		.loc 20 1060 5 view .LVU666
1063:Veno-Echo.cpp **** 
 2643              		.loc 20 1063 5 view .LVU667
1055:Veno-Echo.cpp ****     static bool lastShift{};
 2644              		.loc 20 1055 1 is_stmt 0 view .LVU668
 2645 0000 10B5     		push	{r4, lr}
 2646              		.cfi_def_cfa_offset 8
 2647              		.cfi_offset 4, -8
 2648              		.cfi_offset 14, -4
1063:Veno-Echo.cpp **** 
 2649              		.loc 20 1063 47 view .LVU669
 2650 0002 0321     		movs	r1, #3
 2651 0004 5948     		ldr	r0, .L181
1055:Veno-Echo.cpp ****     static bool lastShift{};
 2652              		.loc 20 1055 1 view .LVU670
 2653 0006 2DED028B 		vpush.64	{d8}
 2654              		.cfi_def_cfa_offset 16
 2655              		.cfi_offset 80, -16
 2656              		.cfi_offset 81, -12
1063:Veno-Echo.cpp **** 
 2657              		.loc 20 1063 47 view .LVU671
 2658 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2659              	.LVL122:
 2660              	.LBB1041:
1065:Veno-Echo.cpp ****     {   
 2661              		.loc 20 1065 9 view .LVU672
 2662 000e 584B     		ldr	r3, .L181+4
 2663              	.LBE1041:
1063:Veno-Echo.cpp **** 
 2664              		.loc 20 1063 50 view .LVU673
 2665 0010 B7EE007A 		vmov.f32	s14, #1.0e+0
 2666              	.LBB1071:
 2667              	.LBB1042:
1069:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 140


 2668              		.loc 20 1069 19 view .LVU674
 2669 0014 574A     		ldr	r2, .L181+8
 2670              	.LBE1042:
1065:Veno-Echo.cpp ****     {   
 2671              		.loc 20 1065 5 view .LVU675
 2672 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2673              	.LBE1071:
1063:Veno-Echo.cpp **** 
 2674              		.loc 20 1063 50 view .LVU676
 2675 0018 77EE407A 		vsub.f32	s15, s14, s0
 2676              	.LVL123:
1065:Veno-Echo.cpp ****     {   
 2677              		.loc 20 1065 5 is_stmt 1 view .LVU677
 2678              	.LBB1072:
 2679 001c 93BB     		cbnz	r3, .L152
 2680              	.LBB1059:
1067:Veno-Echo.cpp ****         //update pickup
 2681              		.loc 20 1067 9 view .LVU678
1069:Veno-Echo.cpp ****         {
 2682              		.loc 20 1069 9 view .LVU679
 2683 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2684 0020 0029     		cmp	r1, #0
 2685 0022 3BD0     		beq	.L153
1071:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2686              		.loc 20 1071 13 view .LVU680
1072:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2687              		.loc 20 1072 30 is_stmt 0 view .LVU681
 2688 0024 544C     		ldr	r4, .L181+12
1073:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2689              		.loc 20 1073 28 view .LVU682
 2690 0026 5548     		ldr	r0, .L181+16
1074:Veno-Echo.cpp ****         } 
 2691              		.loc 20 1074 27 view .LVU683
 2692 0028 5549     		ldr	r1, .L181+20
1071:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2693              		.loc 20 1071 23 view .LVU684
 2694 002a 1370     		strb	r3, [r2]
1072:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2695              		.loc 20 1072 13 is_stmt 1 view .LVU685
1072:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2696              		.loc 20 1072 30 is_stmt 0 view .LVU686
 2697 002c 2370     		strb	r3, [r4]
1073:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2698              		.loc 20 1073 13 is_stmt 1 view .LVU687
1073:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2699              		.loc 20 1073 28 is_stmt 0 view .LVU688
 2700 002e C0ED007A 		vstr.32	s15, [r0]
1074:Veno-Echo.cpp ****         } 
 2701              		.loc 20 1074 13 is_stmt 1 view .LVU689
1074:Veno-Echo.cpp ****         } 
 2702              		.loc 20 1074 27 is_stmt 0 view .LVU690
 2703 0032 C1ED007A 		vstr.32	s15, [r1]
 2704              	.LVL124:
 2705              	.L154:
1087:Veno-Echo.cpp ****         
 2706              		.loc 20 1087 9 is_stmt 1 view .LVU691
1089:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 141


 2707              		.loc 20 1089 9 view .LVU692
1097:Veno-Echo.cpp ****         }
 2708              		.loc 20 1097 13 view .LVU693
 2709              	.LBB1043:
 2710              	.LBI1043:
1885:Veno-Echo.cpp **** {
 2711              		.loc 20 1885 7 view .LVU694
 2712              	.LBB1044:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2713              		.loc 20 1887 5 view .LVU695
1888:Veno-Echo.cpp **** 
 2714              		.loc 20 1888 5 view .LVU696
1888:Veno-Echo.cpp **** 
 2715              		.loc 20 1888 12 is_stmt 0 view .LVU697
 2716 0036 9FED537A 		vldr.32	s14, .L181+24
 2717 003a 37EE870A 		vadd.f32	s0, s15, s14
 2718              	.LVL125:
1890:Veno-Echo.cpp ****     {
 2719              		.loc 20 1890 5 is_stmt 1 view .LVU698
 2720 003e B4EEC70A 		vcmpe.f32	s0, s14
 2721 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2722 0046 00F18780 		bmi	.L179
1895:Veno-Echo.cpp ****     {
 2723              		.loc 20 1895 5 view .LVU699
 2724 004a F7EE007A 		vmov.f32	s15, #1.0e+0
1897:Veno-Echo.cpp ****     }
 2725              		.loc 20 1897 16 is_stmt 0 view .LVU700
 2726 004e B4EE670A 		vcmp.f32	s0, s15
 2727 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2728 0056 37FE800A 		vselgt.f32	s0, s15, s0
 2729              	.LVL126:
 2730              	.L160:
1897:Veno-Echo.cpp ****     }
 2731              		.loc 20 1897 16 view .LVU701
 2732              	.LBE1044:
 2733              	.LBE1043:
1100:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2734              		.loc 20 1100 9 is_stmt 1 view .LVU702
1100:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2735              		.loc 20 1100 37 is_stmt 0 view .LVU703
 2736 005a B7EE041A 		vmov.f32	s2, #1.25e+0
 2737 005e 0020     		movs	r0, #0
 2738 0060 DFED480A 		vldr.32	s1, .L181+24
 2739 0064 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2740              	.LVL127:
1101:Veno-Echo.cpp ****     }
 2741              		.loc 20 1101 9 is_stmt 1 view .LVU704
 2742              	.LBB1046:
 2743              	.LBI1046:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2744              		.loc 23 135 13 view .LVU705
 2745              	.LBB1047:
 2746              		.loc 23 137 5 view .LVU706
 2747              		.loc 23 137 9 is_stmt 0 view .LVU707
 2748 0068 474B     		ldr	r3, .L181+28
 2749 006a 9FED487A 		vldr.32	s14, .L181+32
 2750 006e D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 142


 2751              		.loc 23 137 24 view .LVU708
 2752 0072 30EE670A 		vsub.f32	s0, s0, s15
 2753              	.LVL128:
 2754              		.loc 23 137 24 view .LVU709
 2755              	.LBE1047:
 2756              	.LBE1046:
 2757              	.LBE1059:
 2758              	.LBE1072:
1137:Veno-Echo.cpp **** 
 2759              		.loc 20 1137 1 view .LVU710
 2760 0076 BDEC028B 		vldm	sp!, {d8}
 2761              		.cfi_remember_state
 2762              		.cfi_restore 80
 2763              		.cfi_restore 81
 2764              		.cfi_def_cfa_offset 8
 2765              	.LBB1073:
 2766              	.LBB1060:
 2767              	.LBB1049:
 2768              	.LBB1048:
 2769              		.loc 23 137 9 view .LVU711
 2770 007a E0EE077A 		vfma.f32	s15, s0, s14
 2771 007e C3ED007A 		vstr.32	s15, [r3]
 2772              	.LBE1048:
 2773              	.LBE1049:
 2774              	.LBE1060:
 2775              	.LBE1073:
1137:Veno-Echo.cpp **** 
 2776              		.loc 20 1137 1 view .LVU712
 2777 0082 10BD     		pop	{r4, pc}
 2778              	.LVL129:
 2779              	.L152:
 2780              		.cfi_restore_state
 2781              	.LBB1074:
 2782              	.LBB1061:
1106:Veno-Echo.cpp **** 
 2783              		.loc 20 1106 9 is_stmt 1 view .LVU713
1108:Veno-Echo.cpp ****         {
 2784              		.loc 20 1108 10 view .LVU714
 2785 0084 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2786 0086 8BBB     		cbnz	r3, .L163
1110:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2787              		.loc 20 1110 13 view .LVU715
1110:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2788              		.loc 20 1110 23 is_stmt 0 view .LVU716
 2789 0088 0124     		movs	r4, #1
1111:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2790              		.loc 20 1111 29 view .LVU717
 2791 008a 4148     		ldr	r0, .L181+36
1112:Veno-Echo.cpp ****         }
 2792              		.loc 20 1112 26 view .LVU718
 2793 008c 4149     		ldr	r1, .L181+40
1110:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2794              		.loc 20 1110 23 view .LVU719
 2795 008e 1470     		strb	r4, [r2]
1111:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2796              		.loc 20 1111 13 is_stmt 1 view .LVU720
1111:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 143


 2797              		.loc 20 1111 29 is_stmt 0 view .LVU721
 2798 0090 0370     		strb	r3, [r0]
1112:Veno-Echo.cpp ****         }
 2799              		.loc 20 1112 13 is_stmt 1 view .LVU722
1112:Veno-Echo.cpp ****         }
 2800              		.loc 20 1112 26 is_stmt 0 view .LVU723
 2801 0092 C1ED007A 		vstr.32	s15, [r1]
 2802              	.L151:
1112:Veno-Echo.cpp ****         }
 2803              		.loc 20 1112 26 view .LVU724
 2804              	.LBE1061:
 2805              	.LBE1074:
1137:Veno-Echo.cpp **** 
 2806              		.loc 20 1137 1 view .LVU725
 2807 0096 BDEC028B 		vldm	sp!, {d8}
 2808              		.cfi_remember_state
 2809              		.cfi_restore 80
 2810              		.cfi_restore 81
 2811              		.cfi_def_cfa_offset 8
 2812 009a 10BD     		pop	{r4, pc}
 2813              	.L153:
 2814              		.cfi_restore_state
 2815              	.LBB1075:
 2816              	.LBB1068:
1078:Veno-Echo.cpp ****             {
 2817              		.loc 20 1078 13 is_stmt 1 view .LVU726
1078:Veno-Echo.cpp ****             {
 2818              		.loc 20 1078 16 is_stmt 0 view .LVU727
 2819 009c 364B     		ldr	r3, .L181+12
1078:Veno-Echo.cpp ****             {
 2820              		.loc 20 1078 13 view .LVU728
 2821 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2822 00a0 7AB9     		cbnz	r2, .L155
1080:Veno-Echo.cpp ****                 {
 2823              		.loc 20 1080 17 is_stmt 1 view .LVU729
 2824              	.LVL130:
 2825              	.LBB1050:
 2826              	.LBI1050:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2827              		.loc 21 75 3 view .LVU730
 2828              	.LBB1051:
 2829              		.loc 21 76 5 view .LVU731
 2830              		.loc 21 76 5 is_stmt 0 view .LVU732
 2831              	.LBE1051:
 2832              	.LBE1050:
1080:Veno-Echo.cpp ****                 {
 2833              		.loc 20 1080 23 view .LVU733
 2834 00a2 374A     		ldr	r2, .L181+20
1080:Veno-Echo.cpp ****                 {
 2835              		.loc 20 1080 17 view .LVU734
 2836 00a4 DFED3C6A 		vldr.32	s13, .L181+44
1080:Veno-Echo.cpp ****                 {
 2837              		.loc 20 1080 23 view .LVU735
 2838 00a8 92ED007A 		vldr.32	s14, [r2]
 2839 00ac 37EEC77A 		vsub.f32	s14, s15, s14
 2840              	.LBB1053:
 2841              	.LBB1052:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 144


 2842              		.loc 21 76 31 view .LVU736
 2843 00b0 B0EEC77A 		vabs.f32	s14, s14
 2844              	.LBE1052:
 2845              	.LBE1053:
1080:Veno-Echo.cpp ****                 {
 2846              		.loc 20 1080 17 view .LVU737
 2847 00b4 B4EEE67A 		vcmpe.f32	s14, s13
 2848 00b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2849 00bc 52DD     		ble	.L175
1082:Veno-Echo.cpp ****                 }
 2850              		.loc 20 1082 21 is_stmt 1 view .LVU738
1082:Veno-Echo.cpp ****                 }
 2851              		.loc 20 1082 38 is_stmt 0 view .LVU739
 2852 00be 0122     		movs	r2, #1
 2853 00c0 1A70     		strb	r2, [r3]
 2854              	.L155:
1087:Veno-Echo.cpp ****         
 2855              		.loc 20 1087 9 is_stmt 1 view .LVU740
 2856              	.LVL131:
1089:Veno-Echo.cpp ****         {
 2857              		.loc 20 1089 9 view .LVU741
1091:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2858              		.loc 20 1091 13 view .LVU742
 2859              	.LBB1054:
 2860              	.LBI1054:
1885:Veno-Echo.cpp **** {
 2861              		.loc 20 1885 7 view .LVU743
 2862              	.LBB1055:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2863              		.loc 20 1887 5 view .LVU744
1888:Veno-Echo.cpp **** 
 2864              		.loc 20 1888 5 view .LVU745
1888:Veno-Echo.cpp **** 
 2865              		.loc 20 1888 12 is_stmt 0 view .LVU746
 2866 00c2 9FED307A 		vldr.32	s14, .L181+24
 2867 00c6 37EE870A 		vadd.f32	s0, s15, s14
 2868              	.LVL132:
1890:Veno-Echo.cpp ****     {
 2869              		.loc 20 1890 5 is_stmt 1 view .LVU747
 2870 00ca B4EEC70A 		vcmpe.f32	s0, s14
 2871 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2872 00d2 44D4     		bmi	.L180
1895:Veno-Echo.cpp ****     {
 2873              		.loc 20 1895 5 view .LVU748
 2874 00d4 B7EE007A 		vmov.f32	s14, #1.0e+0
1897:Veno-Echo.cpp ****     }
 2875              		.loc 20 1897 16 is_stmt 0 view .LVU749
 2876 00d8 B4EE470A 		vcmp.f32	s0, s14
 2877 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2878 00e0 37FE000A 		vselgt.f32	s0, s14, s0
 2879              	.LVL133:
 2880              	.L158:
1900:Veno-Echo.cpp **** }
 2881              		.loc 20 1900 5 is_stmt 1 view .LVU750
1900:Veno-Echo.cpp **** }
 2882              		.loc 20 1900 5 is_stmt 0 view .LVU751
 2883              	.LBE1055:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 145


 2884              	.LBE1054:
1092:Veno-Echo.cpp ****         }
 2885              		.loc 20 1092 13 is_stmt 1 view .LVU752
1092:Veno-Echo.cpp ****         }
 2886              		.loc 20 1092 28 is_stmt 0 view .LVU753
 2887 00e4 254B     		ldr	r3, .L181+16
 2888 00e6 C3ED007A 		vstr.32	s15, [r3]
 2889 00ea B6E7     		b	.L160
 2890              	.LVL134:
 2891              	.L163:
1092:Veno-Echo.cpp ****         }
 2892              		.loc 20 1092 28 view .LVU754
 2893              	.LBE1068:
 2894              	.LBB1069:
1117:Veno-Echo.cpp ****             {
 2895              		.loc 20 1117 13 is_stmt 1 view .LVU755
1117:Veno-Echo.cpp ****             {
 2896              		.loc 20 1117 16 is_stmt 0 view .LVU756
 2897 00ec 284B     		ldr	r3, .L181+36
1117:Veno-Echo.cpp ****             {
 2898              		.loc 20 1117 13 view .LVU757
 2899 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2900 00f0 7AB9     		cbnz	r2, .L165
1119:Veno-Echo.cpp ****                 {
 2901              		.loc 20 1119 17 is_stmt 1 view .LVU758
 2902              	.LVL135:
 2903              	.LBB1062:
 2904              	.LBI1062:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2905              		.loc 21 75 3 view .LVU759
 2906              	.LBB1063:
 2907              		.loc 21 76 5 view .LVU760
 2908              		.loc 21 76 5 is_stmt 0 view .LVU761
 2909              	.LBE1063:
 2910              	.LBE1062:
1119:Veno-Echo.cpp ****                 {
 2911              		.loc 20 1119 23 view .LVU762
 2912 00f2 284A     		ldr	r2, .L181+40
1119:Veno-Echo.cpp ****                 {
 2913              		.loc 20 1119 17 view .LVU763
 2914 00f4 DFED286A 		vldr.32	s13, .L181+44
1119:Veno-Echo.cpp ****                 {
 2915              		.loc 20 1119 23 view .LVU764
 2916 00f8 92ED007A 		vldr.32	s14, [r2]
 2917 00fc 37EEC77A 		vsub.f32	s14, s15, s14
 2918              	.LBB1065:
 2919              	.LBB1064:
 2920              		.loc 21 76 31 view .LVU765
 2921 0100 B0EEC77A 		vabs.f32	s14, s14
 2922              	.LBE1064:
 2923              	.LBE1065:
1119:Veno-Echo.cpp ****                 {
 2924              		.loc 20 1119 17 view .LVU766
 2925 0104 B4EEE67A 		vcmpe.f32	s14, s13
 2926 0108 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2927 010c C3DD     		ble	.L151
1121:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 146


 2928              		.loc 20 1121 21 is_stmt 1 view .LVU767
1121:Veno-Echo.cpp ****                 }
 2929              		.loc 20 1121 37 is_stmt 0 view .LVU768
 2930 010e 0122     		movs	r2, #1
 2931 0110 1A70     		strb	r2, [r3]
 2932              	.L165:
1126:Veno-Echo.cpp ****         {
 2933              		.loc 20 1126 9 is_stmt 1 view .LVU769
 2934              	.LBB1066:
 2935              	.LBB1067:
1128:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 2936              		.loc 20 1128 13 view .LVU770
 2937              	.LVL136:
1129:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2938              		.loc 20 1129 13 view .LVU771
1129:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2939              		.loc 20 1129 29 is_stmt 0 view .LVU772
 2940 0112 B0EE670A 		vmov.f32	s0, s15
 2941 0116 9FED211A 		vldr.32	s2, .L181+48
 2942 011a DFED210A 		vldr.32	s1, .L181+52
 2943 011e 0120     		movs	r0, #1
 2944 0120 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2945              	.LVL137:
1129:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2946              		.loc 20 1129 29 view .LVU773
 2947 0124 B0EE408A 		vmov.f32	s16, s0
 2948              	.LVL138:
1130:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 2949              		.loc 20 1130 13 is_stmt 1 view .LVU774
1130:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 2950              		.loc 20 1130 26 is_stmt 0 view .LVU775
 2951 0128 1E48     		ldr	r0, .L181+56
 2952 012a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2953              	.LVL139:
1131:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2954              		.loc 20 1131 13 is_stmt 1 view .LVU776
1131:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2955              		.loc 20 1131 26 is_stmt 0 view .LVU777
 2956 012e 1E48     		ldr	r0, .L181+60
 2957 0130 B0EE480A 		vmov.f32	s0, s16
 2958 0134 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2959              	.LVL140:
1132:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2960              		.loc 20 1132 13 is_stmt 1 view .LVU778
1132:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2961              		.loc 20 1132 31 is_stmt 0 view .LVU779
 2962 0138 B0EE480A 		vmov.f32	s0, s16
 2963 013c 1B48     		ldr	r0, .L181+64
 2964 013e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2965              	.LVL141:
1133:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2966              		.loc 20 1133 13 is_stmt 1 view .LVU780
1133:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2967              		.loc 20 1133 31 is_stmt 0 view .LVU781
 2968 0142 B0EE480A 		vmov.f32	s0, s16
 2969 0146 1A48     		ldr	r0, .L181+68
 2970 0148 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 147


 2971              	.LVL142:
1134:Veno-Echo.cpp ****         }
 2972              		.loc 20 1134 13 is_stmt 1 view .LVU782
1134:Veno-Echo.cpp ****         }
 2973              		.loc 20 1134 35 is_stmt 0 view .LVU783
 2974 014c 194B     		ldr	r3, .L181+72
 2975 014e 83ED058A 		vstr.32	s16, [r3, #20]
 2976              	.LBE1067:
 2977              	.LBE1066:
 2978              	.LBE1069:
 2979              	.LBE1075:
1137:Veno-Echo.cpp **** 
 2980              		.loc 20 1137 1 view .LVU784
 2981 0152 BDEC028B 		vldm	sp!, {d8}
 2982              		.cfi_remember_state
 2983              		.cfi_restore 80
 2984              		.cfi_restore 81
 2985              		.cfi_def_cfa_offset 8
 2986              	.LVL143:
1137:Veno-Echo.cpp **** 
 2987              		.loc 20 1137 1 view .LVU785
 2988 0156 10BD     		pop	{r4, pc}
 2989              	.LVL144:
 2990              	.L179:
 2991              		.cfi_restore_state
 2992              	.LBB1076:
 2993              	.LBB1070:
 2994              	.LBB1057:
 2995              	.LBB1045:
1892:Veno-Echo.cpp ****     }
 2996              		.loc 20 1892 16 view .LVU786
 2997 0158 B0EE470A 		vmov.f32	s0, s14
 2998              	.LVL145:
1892:Veno-Echo.cpp ****     }
 2999              		.loc 20 1892 16 view .LVU787
 3000 015c 7DE7     		b	.L160
 3001              	.LVL146:
 3002              	.L180:
1892:Veno-Echo.cpp ****     }
 3003              		.loc 20 1892 16 view .LVU788
 3004              	.LBE1045:
 3005              	.LBE1057:
 3006              	.LBB1058:
 3007              	.LBB1056:
 3008 015e B0EE470A 		vmov.f32	s0, s14
 3009              	.LVL147:
1892:Veno-Echo.cpp ****     }
 3010              		.loc 20 1892 16 view .LVU789
 3011 0162 BFE7     		b	.L158
 3012              	.LVL148:
 3013              	.L175:
1892:Veno-Echo.cpp ****     }
 3014              		.loc 20 1892 16 view .LVU790
 3015 0164 054B     		ldr	r3, .L181+16
 3016 0166 D3ED007A 		vldr.32	s15, [r3]
 3017              	.LVL149:
1892:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 148


 3018              		.loc 20 1892 16 view .LVU791
 3019 016a 64E7     		b	.L154
 3020              	.L182:
 3021              		.align	2
 3022              	.L181:
 3023 016c 18000000 		.word	.LANCHOR4+24
 3024 0170 00000000 		.word	.LANCHOR7
 3025 0174 00000000 		.word	.LANCHOR39
 3026 0178 00000000 		.word	.LANCHOR40
 3027 017c 00000000 		.word	.LANCHOR41
 3028 0180 00000000 		.word	.LANCHOR42
 3029 0184 00000000 		.word	0
 3030 0188 00000000 		.word	.LANCHOR43
 3031 018c 6F12033D 		.word	1023611503
 3032 0190 00000000 		.word	.LANCHOR44
 3033 0194 00000000 		.word	.LANCHOR45
 3034 0198 0AD7A33B 		.word	1000593162
 3035 019c 00803B46 		.word	1178304512
 3036 01a0 0080BB44 		.word	1153138688
 3037 01a4 00000000 		.word	.LANCHOR46
 3038 01a8 00000000 		.word	.LANCHOR47
 3039 01ac 00000000 		.word	.LANCHOR48
 3040 01b0 00000000 		.word	.LANCHOR49
 3041 01b4 00000000 		.word	.LANCHOR16
 3042              	.LBE1056:
 3043              	.LBE1058:
 3044              	.LBE1070:
 3045              	.LBE1076:
 3046              		.cfi_endproc
 3047              	.LFE4319:
 3049              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3050              		.align	1
 3051              		.p2align 2,,3
 3052              		.global	_Z16Update_drywet_CVv
 3053              		.syntax unified
 3054              		.thumb
 3055              		.thumb_func
 3056              		.fpu fpv5-d16
 3058              	_Z16Update_drywet_CVv:
 3059              	.LFB4320:
1140:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3060              		.loc 20 1140 1 is_stmt 1 view -0
 3061              		.cfi_startproc
 3062              		@ args = 0, pretend = 0, frame = 0
 3063              		@ frame_needed = 0, uses_anonymous_args = 0
1141:Veno-Echo.cpp **** }
 3064              		.loc 20 1141 5 view .LVU793
1140:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3065              		.loc 20 1140 1 is_stmt 0 view .LVU794
 3066 0000 08B5     		push	{r3, lr}
 3067              		.cfi_def_cfa_offset 8
 3068              		.cfi_offset 3, -8
 3069              		.cfi_offset 14, -4
1141:Veno-Echo.cpp **** }
 3070              		.loc 20 1141 32 view .LVU795
 3071 0002 0421     		movs	r1, #4
 3072 0004 0348     		ldr	r0, .L185
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 149


 3073 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3074              	.LVL150:
1141:Veno-Echo.cpp **** }
 3075              		.loc 20 1141 15 view .LVU796
 3076 000a 034B     		ldr	r3, .L185+4
 3077 000c 83ED000A 		vstr.32	s0, [r3]
1142:Veno-Echo.cpp **** 
 3078              		.loc 20 1142 1 view .LVU797
 3079 0010 08BD     		pop	{r3, pc}
 3080              	.L186:
 3081 0012 00BF     		.align	2
 3082              	.L185:
 3083 0014 18000000 		.word	.LANCHOR4+24
 3084 0018 00000000 		.word	.LANCHOR50
 3085              		.cfi_endproc
 3086              	.LFE4320:
 3088              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3089              		.align	1
 3090              		.p2align 2,,3
 3091              		.global	_Z13Update_drywetv
 3092              		.syntax unified
 3093              		.thumb
 3094              		.thumb_func
 3095              		.fpu fpv5-d16
 3097              	_Z13Update_drywetv:
 3098              	.LFB4321:
1145:Veno-Echo.cpp ****     static bool lastShift{};
 3099              		.loc 20 1145 1 is_stmt 1 view -0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 0
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
1146:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3103              		.loc 20 1146 5 view .LVU799
1147:Veno-Echo.cpp ****     static bool Res_pickup{};
 3104              		.loc 20 1147 5 view .LVU800
1148:Veno-Echo.cpp **** 
 3105              		.loc 20 1148 5 view .LVU801
1150:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3106              		.loc 20 1150 5 view .LVU802
1155:Veno-Echo.cpp **** 
 3107              		.loc 20 1155 5 view .LVU803
1145:Veno-Echo.cpp ****     static bool lastShift{};
 3108              		.loc 20 1145 1 is_stmt 0 view .LVU804
 3109 0000 10B5     		push	{r4, lr}
 3110              		.cfi_def_cfa_offset 8
 3111              		.cfi_offset 4, -8
 3112              		.cfi_offset 14, -4
1155:Veno-Echo.cpp **** 
 3113              		.loc 20 1155 44 view .LVU805
 3114 0002 0421     		movs	r1, #4
 3115 0004 7648     		ldr	r0, .L220+24
1145:Veno-Echo.cpp ****     static bool lastShift{};
 3116              		.loc 20 1145 1 view .LVU806
 3117 0006 2DED028B 		vpush.64	{d8}
 3118              		.cfi_def_cfa_offset 16
 3119              		.cfi_offset 80, -16
 3120              		.cfi_offset 81, -12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 150


1155:Veno-Echo.cpp **** 
 3121              		.loc 20 1155 44 view .LVU807
 3122 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3123              	.LVL151:
 3124              	.LBB1077:
1157:Veno-Echo.cpp ****     {   
 3125              		.loc 20 1157 9 view .LVU808
 3126 000e 754B     		ldr	r3, .L220+28
 3127              	.LBE1077:
1155:Veno-Echo.cpp **** 
 3128              		.loc 20 1155 47 view .LVU809
 3129 0010 F7EE007A 		vmov.f32	s15, #1.0e+0
 3130              	.LBB1107:
 3131              	.LBB1078:
1162:Veno-Echo.cpp ****         {
 3132              		.loc 20 1162 19 view .LVU810
 3133 0014 744A     		ldr	r2, .L220+32
 3134              	.LBE1078:
1157:Veno-Echo.cpp ****     {   
 3135              		.loc 20 1157 5 view .LVU811
 3136 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3137              	.LBE1107:
1155:Veno-Echo.cpp **** 
 3138              		.loc 20 1155 47 view .LVU812
 3139 0018 37EEC00A 		vsub.f32	s0, s15, s0
 3140              	.LVL152:
1157:Veno-Echo.cpp ****     {   
 3141              		.loc 20 1157 5 is_stmt 1 view .LVU813
 3142              	.LBB1108:
 3143 001c 6BBB     		cbnz	r3, .L188
 3144              	.LBB1095:
1160:Veno-Echo.cpp **** 
 3145              		.loc 20 1160 9 view .LVU814
1162:Veno-Echo.cpp ****         {
 3146              		.loc 20 1162 9 view .LVU815
 3147 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3148 0020 0029     		cmp	r1, #0
 3149 0022 37D0     		beq	.L189
1164:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3150              		.loc 20 1164 13 view .LVU816
1166:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3151              		.loc 20 1166 27 is_stmt 0 view .LVU817
 3152 0024 7148     		ldr	r0, .L220+36
1167:Veno-Echo.cpp ****         } 
 3153              		.loc 20 1167 24 view .LVU818
 3154 0026 7249     		ldr	r1, .L220+40
1164:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3155              		.loc 20 1164 23 view .LVU819
 3156 0028 1370     		strb	r3, [r2]
1166:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3157              		.loc 20 1166 13 is_stmt 1 view .LVU820
1166:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3158              		.loc 20 1166 27 is_stmt 0 view .LVU821
 3159 002a 0370     		strb	r3, [r0]
1167:Veno-Echo.cpp ****         } 
 3160              		.loc 20 1167 13 is_stmt 1 view .LVU822
1167:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 151


 3161              		.loc 20 1167 24 is_stmt 0 view .LVU823
 3162 002c 81ED000A 		vstr.32	s0, [r1]
 3163              	.L190:
1183:Veno-Echo.cpp **** 
 3164              		.loc 20 1183 9 is_stmt 1 view .LVU824
 3165              	.LVL153:
1185:Veno-Echo.cpp ****         {
 3166              		.loc 20 1185 9 view .LVU825
1193:Veno-Echo.cpp ****         }
 3167              		.loc 20 1193 13 view .LVU826
 3168              	.LBB1079:
 3169              	.LBI1079:
1885:Veno-Echo.cpp **** {
 3170              		.loc 20 1885 7 view .LVU827
 3171              	.LBB1080:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3172              		.loc 20 1887 5 view .LVU828
1888:Veno-Echo.cpp **** 
 3173              		.loc 20 1888 5 view .LVU829
 3174              	.LBE1080:
 3175              	.LBE1079:
1193:Veno-Echo.cpp ****         }
 3176              		.loc 20 1193 37 is_stmt 0 view .LVU830
 3177 0030 704B     		ldr	r3, .L220+44
 3178              	.LBB1082:
 3179              	.LBB1081:
1888:Veno-Echo.cpp **** 
 3180              		.loc 20 1888 12 view .LVU831
 3181 0032 9FED710A 		vldr.32	s0, .L220+48
 3182              	.LVL154:
1888:Veno-Echo.cpp **** 
 3183              		.loc 20 1888 12 view .LVU832
 3184 0036 D3ED007A 		vldr.32	s15, [r3]
 3185 003a 77EE807A 		vadd.f32	s15, s15, s0
 3186              	.LVL155:
1890:Veno-Echo.cpp ****     {
 3187              		.loc 20 1890 5 is_stmt 1 view .LVU833
 3188 003e F4EEC07A 		vcmpe.f32	s15, s0
 3189 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3190 0046 00F1AF80 		bmi	.L207
1895:Veno-Echo.cpp ****     {
 3191              		.loc 20 1895 5 view .LVU834
 3192 004a B7EE007A 		vmov.f32	s14, #1.0e+0
1895:Veno-Echo.cpp ****     {
 3193              		.loc 20 1895 5 is_stmt 0 view .LVU835
 3194 004e F4EEC77A 		vcmpe.f32	s15, s14
 3195 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3196 0056 40F3B280 		ble	.L213
 3197              	.LVL156:
 3198              	.L198:
1895:Veno-Echo.cpp ****     {
 3199              		.loc 20 1895 5 view .LVU836
 3200              	.LBE1081:
 3201              	.LBE1082:
1200:Veno-Echo.cpp ****         }
 3202              		.loc 20 1200 26 view .LVU837
 3203 005a B7EE000A 		vmov.f32	s0, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 152


 3204              	.L197:
 3205              	.LVL157:
1212:Veno-Echo.cpp ****     }
 3206              		.loc 20 1212 9 is_stmt 1 view .LVU838
 3207              	.LBB1083:
 3208              	.LBI1083:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3209              		.loc 23 135 13 view .LVU839
 3210              	.LBB1084:
 3211              		.loc 23 137 5 view .LVU840
 3212              		.loc 23 137 9 is_stmt 0 view .LVU841
 3213 005e 674B     		ldr	r3, .L220+52
 3214 0060 9FED677A 		vldr.32	s14, .L220+56
 3215 0064 D3ED007A 		vldr.32	s15, [r3]
 3216              		.loc 23 137 24 view .LVU842
 3217 0068 30EE670A 		vsub.f32	s0, s0, s15
 3218              	.LVL158:
 3219              		.loc 23 137 24 view .LVU843
 3220              	.LBE1084:
 3221              	.LBE1083:
 3222              	.LBE1095:
 3223              	.LBE1108:
1251:Veno-Echo.cpp **** 
 3224              		.loc 20 1251 1 view .LVU844
 3225 006c BDEC028B 		vldm	sp!, {d8}
 3226              		.cfi_remember_state
 3227              		.cfi_restore 80
 3228              		.cfi_restore 81
 3229              		.cfi_def_cfa_offset 8
 3230              	.LBB1109:
 3231              	.LBB1096:
 3232              	.LBB1086:
 3233              	.LBB1085:
 3234              		.loc 23 137 9 view .LVU845
 3235 0070 E0EE077A 		vfma.f32	s15, s0, s14
 3236 0074 C3ED007A 		vstr.32	s15, [r3]
 3237              	.LBE1085:
 3238              	.LBE1086:
 3239              	.LBE1096:
 3240              	.LBE1109:
1251:Veno-Echo.cpp **** 
 3241              		.loc 20 1251 1 view .LVU846
 3242 0078 10BD     		pop	{r4, pc}
 3243              	.LVL159:
 3244              	.L188:
 3245              		.cfi_restore_state
 3246              	.LBB1110:
 3247              	.LBB1097:
1216:Veno-Echo.cpp **** 
 3248              		.loc 20 1216 9 is_stmt 1 view .LVU847
1218:Veno-Echo.cpp ****         {
 3249              		.loc 20 1218 9 view .LVU848
 3250 007a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3251 007c 002B     		cmp	r3, #0
 3252 007e 4BD1     		bne	.L202
1220:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3253              		.loc 20 1220 13 view .LVU849
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 153


1220:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3254              		.loc 20 1220 23 is_stmt 0 view .LVU850
 3255 0080 0124     		movs	r4, #1
1221:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3256              		.loc 20 1221 24 view .LVU851
 3257 0082 6048     		ldr	r0, .L220+60
1222:Veno-Echo.cpp ****         }
 3258              		.loc 20 1222 21 view .LVU852
 3259 0084 6049     		ldr	r1, .L220+64
1220:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3260              		.loc 20 1220 23 view .LVU853
 3261 0086 1470     		strb	r4, [r2]
1221:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3262              		.loc 20 1221 13 is_stmt 1 view .LVU854
1221:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3263              		.loc 20 1221 24 is_stmt 0 view .LVU855
 3264 0088 0370     		strb	r3, [r0]
1222:Veno-Echo.cpp ****         }
 3265              		.loc 20 1222 13 is_stmt 1 view .LVU856
1222:Veno-Echo.cpp ****         }
 3266              		.loc 20 1222 21 is_stmt 0 view .LVU857
 3267 008a 81ED000A 		vstr.32	s0, [r1]
 3268              	.L187:
1222:Veno-Echo.cpp ****         }
 3269              		.loc 20 1222 21 view .LVU858
 3270              	.LBE1097:
 3271              	.LBE1110:
1251:Veno-Echo.cpp **** 
 3272              		.loc 20 1251 1 view .LVU859
 3273 008e BDEC028B 		vldm	sp!, {d8}
 3274              		.cfi_remember_state
 3275              		.cfi_restore 80
 3276              		.cfi_restore 81
 3277              		.cfi_def_cfa_offset 8
 3278 0092 10BD     		pop	{r4, pc}
 3279              	.L189:
 3280              		.cfi_restore_state
 3281              	.LBB1111:
 3282              	.LBB1104:
1172:Veno-Echo.cpp ****             {
 3283              		.loc 20 1172 13 is_stmt 1 view .LVU860
1172:Veno-Echo.cpp ****             {
 3284              		.loc 20 1172 16 is_stmt 0 view .LVU861
 3285 0094 554B     		ldr	r3, .L220+36
1172:Veno-Echo.cpp ****             {
 3286              		.loc 20 1172 13 view .LVU862
 3287 0096 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3288 0098 7AB9     		cbnz	r2, .L191
1175:Veno-Echo.cpp ****                 {
 3289              		.loc 20 1175 17 is_stmt 1 view .LVU863
 3290              	.LVL160:
 3291              	.LBB1087:
 3292              	.LBI1087:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3293              		.loc 21 75 3 view .LVU864
 3294              	.LBB1088:
 3295              		.loc 21 76 5 view .LVU865
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 154


 3296              		.loc 21 76 5 is_stmt 0 view .LVU866
 3297              	.LBE1088:
 3298              	.LBE1087:
1175:Veno-Echo.cpp ****                 {
 3299              		.loc 20 1175 23 view .LVU867
 3300 009a 554A     		ldr	r2, .L220+40
1175:Veno-Echo.cpp ****                 {
 3301              		.loc 20 1175 17 view .LVU868
 3302 009c 9FED5B7A 		vldr.32	s14, .L220+68
1175:Veno-Echo.cpp ****                 {
 3303              		.loc 20 1175 23 view .LVU869
 3304 00a0 D2ED007A 		vldr.32	s15, [r2]
 3305 00a4 70EE677A 		vsub.f32	s15, s0, s15
 3306              	.LBB1090:
 3307              	.LBB1089:
 3308              		.loc 21 76 31 view .LVU870
 3309 00a8 F0EEE77A 		vabs.f32	s15, s15
 3310              	.LBE1089:
 3311              	.LBE1090:
1175:Veno-Echo.cpp ****                 {
 3312              		.loc 20 1175 17 view .LVU871
 3313 00ac F4EEC77A 		vcmpe.f32	s15, s14
 3314 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3315 00b4 BCDD     		ble	.L190
1177:Veno-Echo.cpp ****                 }
 3316              		.loc 20 1177 21 is_stmt 1 view .LVU872
1177:Veno-Echo.cpp ****                 }
 3317              		.loc 20 1177 35 is_stmt 0 view .LVU873
 3318 00b6 0122     		movs	r2, #1
 3319 00b8 1A70     		strb	r2, [r3]
 3320              	.L191:
1183:Veno-Echo.cpp **** 
 3321              		.loc 20 1183 9 is_stmt 1 view .LVU874
 3322              	.LVL161:
1185:Veno-Echo.cpp ****         {
 3323              		.loc 20 1185 9 view .LVU875
1187:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3324              		.loc 20 1187 13 view .LVU876
 3325              	.LBB1091:
 3326              	.LBI1091:
1885:Veno-Echo.cpp **** {
 3327              		.loc 20 1885 7 view .LVU877
 3328              	.LBB1092:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3329              		.loc 20 1887 5 view .LVU878
1888:Veno-Echo.cpp **** 
 3330              		.loc 20 1888 5 view .LVU879
1888:Veno-Echo.cpp **** 
 3331              		.loc 20 1888 12 is_stmt 0 view .LVU880
 3332 00ba 9FED4F7A 		vldr.32	s14, .L220+48
 3333 00be 70EE077A 		vadd.f32	s15, s0, s14
 3334              	.LVL162:
1890:Veno-Echo.cpp ****     {
 3335              		.loc 20 1890 5 is_stmt 1 view .LVU881
 3336 00c2 F4EEC77A 		vcmpe.f32	s15, s14
 3337 00c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3338 00ca 70D4     		bmi	.L218
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 155


1895:Veno-Echo.cpp ****     {
 3339              		.loc 20 1895 5 view .LVU882
 3340 00cc B7EE007A 		vmov.f32	s14, #1.0e+0
 3341 00d0 F4EEC77A 		vcmpe.f32	s15, s14
 3342 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3343 00d8 6EDD     		ble	.L219
1897:Veno-Echo.cpp ****     }
 3344              		.loc 20 1897 16 is_stmt 0 view .LVU883
 3345 00da F0EE477A 		vmov.f32	s15, s14
 3346              	.LVL163:
1897:Veno-Echo.cpp ****     }
 3347              		.loc 20 1897 16 view .LVU884
 3348 00de B7EE006B 		vmov.f64	d6, #1.0e+0
 3349              	.L193:
 3350              	.LVL164:
1900:Veno-Echo.cpp **** }
 3351              		.loc 20 1900 5 is_stmt 1 view .LVU885
1900:Veno-Echo.cpp **** }
 3352              		.loc 20 1900 5 is_stmt 0 view .LVU886
 3353              	.LBE1092:
 3354              	.LBE1091:
1188:Veno-Echo.cpp ****         }
 3355              		.loc 20 1188 13 is_stmt 1 view .LVU887
1188:Veno-Echo.cpp ****         }
 3356              		.loc 20 1188 25 is_stmt 0 view .LVU888
 3357 00e2 444B     		ldr	r3, .L220+44
 3358 00e4 83ED000A 		vstr.32	s0, [r3]
 3359              	.LVL165:
 3360              	.L194:
1196:Veno-Echo.cpp **** 
 3361              		.loc 20 1196 9 is_stmt 1 view .LVU889
1198:Veno-Echo.cpp ****         {
 3362              		.loc 20 1198 9 view .LVU890
 3363 00e8 9FED375B 		vldr.64	d5, .L220
 3364 00ec B4EEC56B 		vcmpe.f64	d6, d5
 3365 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3366 00f4 B1DA     		bge	.L198
1202:Veno-Echo.cpp ****         {
 3367              		.loc 20 1202 14 view .LVU891
 3368 00f6 9FED365B 		vldr.64	d5, .L220+8
 3369 00fa B4EEC56B 		vcmpe.f64	d6, d5
 3370 00fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3371 0102 51D9     		bls	.L207
1208:Veno-Echo.cpp ****         }
 3372              		.loc 20 1208 13 view .LVU892
1208:Veno-Echo.cpp ****         }
 3373              		.loc 20 1208 33 is_stmt 0 view .LVU893
 3374 0104 B0EE670A 		vmov.f32	s0, s15
 3375 0108 0020     		movs	r0, #0
 3376 010a B7EE001A 		vmov.f32	s2, #1.0e+0
1208:Veno-Echo.cpp ****         }
 3377              		.loc 20 1208 33 view .LVU894
 3378 010e DFED3A0A 		vldr.32	s1, .L220+48
 3379 0112 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3380              	.LVL166:
1208:Veno-Echo.cpp ****         }
 3381              		.loc 20 1208 33 view .LVU895
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 156


 3382 0116 A2E7     		b	.L197
 3383              	.LVL167:
 3384              	.L202:
1208:Veno-Echo.cpp ****         }
 3385              		.loc 20 1208 33 view .LVU896
 3386              	.LBE1104:
 3387              	.LBB1105:
1227:Veno-Echo.cpp ****             {
 3388              		.loc 20 1227 13 is_stmt 1 view .LVU897
1227:Veno-Echo.cpp ****             {
 3389              		.loc 20 1227 16 is_stmt 0 view .LVU898
 3390 0118 3A4B     		ldr	r3, .L220+60
1227:Veno-Echo.cpp ****             {
 3391              		.loc 20 1227 13 view .LVU899
 3392 011a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3393 011c 7AB9     		cbnz	r2, .L204
1229:Veno-Echo.cpp ****                 {
 3394              		.loc 20 1229 17 is_stmt 1 view .LVU900
 3395              	.LVL168:
 3396              	.LBB1098:
 3397              	.LBI1098:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3398              		.loc 21 75 3 view .LVU901
 3399              	.LBB1099:
 3400              		.loc 21 76 5 view .LVU902
 3401              		.loc 21 76 5 is_stmt 0 view .LVU903
 3402              	.LBE1099:
 3403              	.LBE1098:
1229:Veno-Echo.cpp ****                 {
 3404              		.loc 20 1229 23 view .LVU904
 3405 011e 3A4A     		ldr	r2, .L220+64
1229:Veno-Echo.cpp ****                 {
 3406              		.loc 20 1229 17 view .LVU905
 3407 0120 9FED3A7A 		vldr.32	s14, .L220+68
1229:Veno-Echo.cpp ****                 {
 3408              		.loc 20 1229 23 view .LVU906
 3409 0124 D2ED007A 		vldr.32	s15, [r2]
 3410 0128 70EE677A 		vsub.f32	s15, s0, s15
 3411              	.LBB1101:
 3412              	.LBB1100:
 3413              		.loc 21 76 31 view .LVU907
 3414 012c F0EEE77A 		vabs.f32	s15, s15
 3415              	.LBE1100:
 3416              	.LBE1101:
1229:Veno-Echo.cpp ****                 {
 3417              		.loc 20 1229 17 view .LVU908
 3418 0130 F4EEC77A 		vcmpe.f32	s15, s14
 3419 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3420 0138 A9DD     		ble	.L187
1231:Veno-Echo.cpp ****                 }
 3421              		.loc 20 1231 21 is_stmt 1 view .LVU909
1231:Veno-Echo.cpp ****                 }
 3422              		.loc 20 1231 32 is_stmt 0 view .LVU910
 3423 013a 0122     		movs	r2, #1
 3424 013c 1A70     		strb	r2, [r3]
 3425              	.L204:
1236:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 157


 3426              		.loc 20 1236 9 is_stmt 1 view .LVU911
 3427              	.LBB1102:
 3428              	.LBB1103:
1238:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3429              		.loc 20 1238 13 view .LVU912
 3430              	.LVL169:
1239:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3431              		.loc 20 1239 13 view .LVU913
1239:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3432              		.loc 20 1239 24 is_stmt 0 view .LVU914
 3433 013e B6EE001A 		vmov.f32	s2, #5.0e-1
 3434 0142 DFED2D0A 		vldr.32	s1, .L220+48
 3435 0146 0020     		movs	r0, #0
 3436 0148 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3437              	.LVL170:
1239:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3438              		.loc 20 1239 24 view .LVU915
 3439 014c B0EE408A 		vmov.f32	s16, s0
 3440              	.LVL171:
1240:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3441              		.loc 20 1240 13 is_stmt 1 view .LVU916
1240:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3442              		.loc 20 1240 25 is_stmt 0 view .LVU917
 3443 0150 2F48     		ldr	r0, .L220+72
 3444 0152 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3445              	.LVL172:
1241:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3446              		.loc 20 1241 13 is_stmt 1 view .LVU918
1241:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3447              		.loc 20 1241 25 is_stmt 0 view .LVU919
 3448 0156 2F48     		ldr	r0, .L220+76
 3449 0158 B0EE480A 		vmov.f32	s0, s16
 3450 015c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3451              	.LVL173:
1242:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3452              		.loc 20 1242 13 is_stmt 1 view .LVU920
1242:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3453              		.loc 20 1242 25 is_stmt 0 view .LVU921
 3454 0160 B0EE480A 		vmov.f32	s0, s16
 3455 0164 2C48     		ldr	r0, .L220+80
 3456 0166 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3457              	.LVL174:
1243:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3458              		.loc 20 1243 13 is_stmt 1 view .LVU922
1243:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3459              		.loc 20 1243 25 is_stmt 0 view .LVU923
 3460 016a B0EE480A 		vmov.f32	s0, s16
 3461 016e 2B48     		ldr	r0, .L220+84
 3462 0170 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3463              	.LVL175:
1244:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3464              		.loc 20 1244 13 is_stmt 1 view .LVU924
1244:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3465              		.loc 20 1244 30 is_stmt 0 view .LVU925
 3466 0174 B0EE480A 		vmov.f32	s0, s16
 3467 0178 2948     		ldr	r0, .L220+88
 3468 017a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 158


 3469              	.LVL176:
1245:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3470              		.loc 20 1245 13 is_stmt 1 view .LVU926
1245:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3471              		.loc 20 1245 30 is_stmt 0 view .LVU927
 3472 017e B0EE480A 		vmov.f32	s0, s16
 3473 0182 2848     		ldr	r0, .L220+92
 3474 0184 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3475              	.LVL177:
1246:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3476              		.loc 20 1246 13 is_stmt 1 view .LVU928
1246:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3477              		.loc 20 1246 30 is_stmt 0 view .LVU929
 3478 0188 B0EE480A 		vmov.f32	s0, s16
 3479 018c 2648     		ldr	r0, .L220+96
 3480 018e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3481              	.LVL178:
1247:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3482              		.loc 20 1247 13 is_stmt 1 view .LVU930
1247:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3483              		.loc 20 1247 30 is_stmt 0 view .LVU931
 3484 0192 B0EE480A 		vmov.f32	s0, s16
 3485 0196 2548     		ldr	r0, .L220+100
 3486 0198 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3487              	.LVL179:
1248:Veno-Echo.cpp ****         }
 3488              		.loc 20 1248 13 is_stmt 1 view .LVU932
1248:Veno-Echo.cpp ****         }
 3489              		.loc 20 1248 35 is_stmt 0 view .LVU933
 3490 019c 244B     		ldr	r3, .L220+104
 3491 019e 83ED068A 		vstr.32	s16, [r3, #24]
 3492              	.LBE1103:
 3493              	.LBE1102:
 3494              	.LBE1105:
 3495              	.LBE1111:
1251:Veno-Echo.cpp **** 
 3496              		.loc 20 1251 1 view .LVU934
 3497 01a2 BDEC028B 		vldm	sp!, {d8}
 3498              		.cfi_remember_state
 3499              		.cfi_restore 80
 3500              		.cfi_restore 81
 3501              		.cfi_def_cfa_offset 8
 3502              	.LVL180:
1251:Veno-Echo.cpp **** 
 3503              		.loc 20 1251 1 view .LVU935
 3504 01a6 10BD     		pop	{r4, pc}
 3505              	.LVL181:
 3506              	.L207:
 3507              		.cfi_restore_state
 3508              	.LBB1112:
 3509              	.LBB1106:
1204:Veno-Echo.cpp ****         }
 3510              		.loc 20 1204 26 view .LVU936
 3511 01a8 9FED130A 		vldr.32	s0, .L220+48
 3512 01ac 57E7     		b	.L197
 3513              	.LVL182:
 3514              	.L218:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 159


 3515              	.LBB1094:
 3516              	.LBB1093:
1204:Veno-Echo.cpp ****         }
 3517              		.loc 20 1204 26 view .LVU937
 3518 01ae 9FED0A6B 		vldr.64	d6, .L220+16
1892:Veno-Echo.cpp ****     }
 3519              		.loc 20 1892 16 view .LVU938
 3520 01b2 F0EE477A 		vmov.f32	s15, s14
 3521              	.LVL183:
1892:Veno-Echo.cpp ****     }
 3522              		.loc 20 1892 16 view .LVU939
 3523 01b6 94E7     		b	.L193
 3524              	.LVL184:
 3525              	.L219:
1892:Veno-Echo.cpp ****     }
 3526              		.loc 20 1892 16 view .LVU940
 3527 01b8 B7EEE76A 		vcvt.f64.f32	d6, s15
 3528 01bc 91E7     		b	.L193
 3529              	.LVL185:
 3530              	.L213:
1892:Veno-Echo.cpp ****     }
 3531              		.loc 20 1892 16 view .LVU941
 3532 01be B7EEE76A 		vcvt.f64.f32	d6, s15
 3533 01c2 91E7     		b	.L194
 3534              	.L221:
 3535 01c4 AFF30080 		.align	3
 3536              	.L220:
 3537 01c8 5C8FC2F5 		.word	4123168604
 3538 01cc 285CEF3F 		.word	1072651304
 3539 01d0 7B14AE47 		.word	1202590843
 3540 01d4 E17A943F 		.word	1066695393
 3541 01d8 00000000 		.word	0
 3542 01dc 00000000 		.word	0
 3543 01e0 18000000 		.word	.LANCHOR4+24
 3544 01e4 00000000 		.word	.LANCHOR7
 3545 01e8 00000000 		.word	.LANCHOR51
 3546 01ec 00000000 		.word	.LANCHOR52
 3547 01f0 00000000 		.word	.LANCHOR53
 3548 01f4 00000000 		.word	.LANCHOR54
 3549 01f8 00000000 		.word	0
 3550 01fc 00000000 		.word	.LANCHOR55
 3551 0200 6F12833C 		.word	1015222895
 3552 0204 00000000 		.word	.LANCHOR56
 3553 0208 00000000 		.word	.LANCHOR57
 3554 020c 0AD7A33B 		.word	1000593162
 3555 0210 00000000 		.word	.LANCHOR46
 3556 0214 00000000 		.word	.LANCHOR47
 3557 0218 00000000 		.word	.LANCHOR34
 3558 021c 00000000 		.word	.LANCHOR35
 3559 0220 00000000 		.word	.LANCHOR48
 3560 0224 00000000 		.word	.LANCHOR49
 3561 0228 00000000 		.word	.LANCHOR36
 3562 022c 00000000 		.word	.LANCHOR37
 3563 0230 00000000 		.word	.LANCHOR16
 3564              	.LBE1093:
 3565              	.LBE1094:
 3566              	.LBE1106:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 160


 3567              	.LBE1112:
 3568              		.cfi_endproc
 3569              	.LFE4321:
 3571              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3572              		.align	1
 3573              		.p2align 2,,3
 3574              		.global	_Z15Update_width_CVv
 3575              		.syntax unified
 3576              		.thumb
 3577              		.thumb_func
 3578              		.fpu fpv5-d16
 3580              	_Z15Update_width_CVv:
 3581              	.LFB4322:
1254:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3582              		.loc 20 1254 1 is_stmt 1 view -0
 3583              		.cfi_startproc
 3584              		@ args = 0, pretend = 0, frame = 0
 3585              		@ frame_needed = 0, uses_anonymous_args = 0
1255:Veno-Echo.cpp **** }
 3586              		.loc 20 1255 5 view .LVU943
1254:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3587              		.loc 20 1254 1 is_stmt 0 view .LVU944
 3588 0000 08B5     		push	{r3, lr}
 3589              		.cfi_def_cfa_offset 8
 3590              		.cfi_offset 3, -8
 3591              		.cfi_offset 14, -4
1255:Veno-Echo.cpp **** }
 3592              		.loc 20 1255 30 view .LVU945
 3593 0002 0521     		movs	r1, #5
 3594 0004 0348     		ldr	r0, .L224
 3595 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3596              	.LVL186:
1255:Veno-Echo.cpp **** }
 3597              		.loc 20 1255 13 view .LVU946
 3598 000a 034B     		ldr	r3, .L224+4
 3599 000c 83ED000A 		vstr.32	s0, [r3]
1256:Veno-Echo.cpp **** 
 3600              		.loc 20 1256 1 view .LVU947
 3601 0010 08BD     		pop	{r3, pc}
 3602              	.L225:
 3603 0012 00BF     		.align	2
 3604              	.L224:
 3605 0014 18000000 		.word	.LANCHOR4+24
 3606 0018 00000000 		.word	.LANCHOR58
 3607              		.cfi_endproc
 3608              	.LFE4322:
 3610              		.section	.text._Z12Update_widthv,"ax",%progbits
 3611              		.align	1
 3612              		.p2align 2,,3
 3613              		.global	_Z12Update_widthv
 3614              		.syntax unified
 3615              		.thumb
 3616              		.thumb_func
 3617              		.fpu fpv5-d16
 3619              	_Z12Update_widthv:
 3620              	.LFB4323:
1259:Veno-Echo.cpp ****     static bool lastShift{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 161


 3621              		.loc 20 1259 1 is_stmt 1 view -0
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 0
 3624              		@ frame_needed = 0, uses_anonymous_args = 0
1260:Veno-Echo.cpp ****     static bool width_pickup{};
 3625              		.loc 20 1260 5 view .LVU949
1261:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3626              		.loc 20 1261 5 view .LVU950
1262:Veno-Echo.cpp **** 
 3627              		.loc 20 1262 5 view .LVU951
1264:Veno-Echo.cpp **** 
 3628              		.loc 20 1264 5 view .LVU952
1267:Veno-Echo.cpp **** 
 3629              		.loc 20 1267 5 view .LVU953
1259:Veno-Echo.cpp ****     static bool lastShift{};
 3630              		.loc 20 1259 1 is_stmt 0 view .LVU954
 3631 0000 10B5     		push	{r4, lr}
 3632              		.cfi_def_cfa_offset 8
 3633              		.cfi_offset 4, -8
 3634              		.cfi_offset 14, -4
1267:Veno-Echo.cpp **** 
 3635              		.loc 20 1267 36 view .LVU955
 3636 0002 0521     		movs	r1, #5
 3637 0004 5248     		ldr	r0, .L255
1259:Veno-Echo.cpp ****     static bool lastShift{};
 3638              		.loc 20 1259 1 view .LVU956
 3639 0006 2DED028B 		vpush.64	{d8}
 3640              		.cfi_def_cfa_offset 16
 3641              		.cfi_offset 80, -16
 3642              		.cfi_offset 81, -12
1267:Veno-Echo.cpp **** 
 3643              		.loc 20 1267 36 view .LVU957
 3644 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3645              	.LVL187:
 3646              	.LBB1113:
1269:Veno-Echo.cpp ****     {   
 3647              		.loc 20 1269 9 view .LVU958
 3648 000e 514B     		ldr	r3, .L255+4
 3649              	.LBE1113:
1267:Veno-Echo.cpp **** 
 3650              		.loc 20 1267 36 view .LVU959
 3651 0010 B0EE408A 		vmov.f32	s16, s0
 3652              	.LVL188:
1269:Veno-Echo.cpp ****     {   
 3653              		.loc 20 1269 5 is_stmt 1 view .LVU960
 3654              	.LBB1149:
 3655              	.LBB1114:
1273:Veno-Echo.cpp ****         {
 3656              		.loc 20 1273 19 is_stmt 0 view .LVU961
 3657 0014 504A     		ldr	r2, .L255+8
 3658              	.LBE1114:
1269:Veno-Echo.cpp ****     {   
 3659              		.loc 20 1269 5 view .LVU962
 3660 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3661 0018 A3BB     		cbnz	r3, .L227
 3662              	.LBB1139:
1271:Veno-Echo.cpp ****         //update pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 162


 3663              		.loc 20 1271 9 is_stmt 1 view .LVU963
1273:Veno-Echo.cpp ****         {
 3664              		.loc 20 1273 9 view .LVU964
 3665 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3666 001c 0029     		cmp	r1, #0
 3667 001e 3DD0     		beq	.L228
1275:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3668              		.loc 20 1275 13 view .LVU965
1276:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3669              		.loc 20 1276 26 is_stmt 0 view .LVU966
 3670 0020 4E48     		ldr	r0, .L255+12
1277:Veno-Echo.cpp ****         }
 3671              		.loc 20 1277 23 view .LVU967
 3672 0022 4F49     		ldr	r1, .L255+16
1275:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3673              		.loc 20 1275 23 view .LVU968
 3674 0024 1370     		strb	r3, [r2]
1276:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3675              		.loc 20 1276 13 is_stmt 1 view .LVU969
1276:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3676              		.loc 20 1276 26 is_stmt 0 view .LVU970
 3677 0026 0370     		strb	r3, [r0]
1277:Veno-Echo.cpp ****         }
 3678              		.loc 20 1277 13 is_stmt 1 view .LVU971
1277:Veno-Echo.cpp ****         }
 3679              		.loc 20 1277 23 is_stmt 0 view .LVU972
 3680 0028 81ED000A 		vstr.32	s0, [r1]
 3681              	.L229:
1292:Veno-Echo.cpp **** 
 3682              		.loc 20 1292 9 is_stmt 1 view .LVU973
 3683              	.LVL189:
1294:Veno-Echo.cpp ****         {
 3684              		.loc 20 1294 9 view .LVU974
1302:Veno-Echo.cpp ****         }
 3685              		.loc 20 1302 13 view .LVU975
 3686              	.LBB1115:
 3687              	.LBI1115:
1885:Veno-Echo.cpp **** {
 3688              		.loc 20 1885 7 view .LVU976
 3689              	.LBB1116:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3690              		.loc 20 1887 5 view .LVU977
1888:Veno-Echo.cpp **** 
 3691              		.loc 20 1888 5 view .LVU978
 3692              	.LBE1116:
 3693              	.LBE1115:
1302:Veno-Echo.cpp ****         }
 3694              		.loc 20 1302 32 is_stmt 0 view .LVU979
 3695 002c 4D4B     		ldr	r3, .L255+20
 3696              	.LBB1119:
 3697              	.LBB1117:
1888:Veno-Echo.cpp **** 
 3698              		.loc 20 1888 12 view .LVU980
 3699 002e DFED4E7A 		vldr.32	s15, .L255+24
 3700 0032 93ED000A 		vldr.32	s0, [r3]
 3701              	.LVL190:
1888:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 163


 3702              		.loc 20 1888 12 view .LVU981
 3703 0036 30EE270A 		vadd.f32	s0, s0, s15
 3704              	.LVL191:
1890:Veno-Echo.cpp ****     {
 3705              		.loc 20 1890 5 is_stmt 1 view .LVU982
 3706 003a B4EEE70A 		vcmpe.f32	s0, s15
 3707 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3708 0042 7FD4     		bmi	.L253
1895:Veno-Echo.cpp ****     {
 3709              		.loc 20 1895 5 view .LVU983
 3710 0044 F7EE007A 		vmov.f32	s15, #1.0e+0
1897:Veno-Echo.cpp ****     }
 3711              		.loc 20 1897 16 is_stmt 0 view .LVU984
 3712 0048 B4EE670A 		vcmp.f32	s0, s15
 3713 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3714 0050 37FE800A 		vselgt.f32	s0, s15, s0
 3715              	.LVL192:
 3716              	.L235:
1900:Veno-Echo.cpp **** }
 3717              		.loc 20 1900 5 is_stmt 1 view .LVU985
1900:Veno-Echo.cpp **** }
 3718              		.loc 20 1900 5 is_stmt 0 view .LVU986
 3719              	.LBE1117:
 3720              	.LBE1119:
1302:Veno-Echo.cpp ****         }
 3721              		.loc 20 1302 32 view .LVU987
 3722 0054 B6EE001A 		vmov.f32	s2, #5.0e-1
 3723 0058 0020     		movs	r0, #0
 3724 005a DFED430A 		vldr.32	s1, .L255+24
 3725 005e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3726              	.LVL193:
 3727              	.L234:
1305:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 3728              		.loc 20 1305 13 is_stmt 1 view .LVU988
 3729              	.LBB1120:
 3730              	.LBI1120:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3731              		.loc 23 135 13 view .LVU989
 3732              	.LBB1121:
 3733              		.loc 23 137 5 view .LVU990
 3734              		.loc 23 137 9 is_stmt 0 view .LVU991
 3735 0062 424B     		ldr	r3, .L255+28
 3736 0064 9FED427A 		vldr.32	s14, .L255+32
 3737 0068 D3ED007A 		vldr.32	s15, [r3]
 3738              	.LBE1121:
 3739              	.LBE1120:
 3740              	.LBB1124:
 3741              	.LBB1125:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 164


  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 3742              		.loc 10 60 42 view .LVU992
 3743 006c 414A     		ldr	r2, .L255+36
 3744              	.LBE1125:
 3745              	.LBE1124:
 3746              	.LBB1127:
 3747              	.LBB1122:
 3748              		.loc 23 137 24 view .LVU993
 3749 006e 30EE670A 		vsub.f32	s0, s0, s15
 3750              	.LVL194:
 3751              		.loc 23 137 24 view .LVU994
 3752              	.LBE1122:
 3753              	.LBE1127:
 3754              	.LBE1139:
 3755              	.LBE1149:
1337:Veno-Echo.cpp **** 
 3756              		.loc 20 1337 1 view .LVU995
 3757 0072 BDEC028B 		vldm	sp!, {d8}
 3758              		.cfi_remember_state
 3759              		.cfi_restore 80
 3760              		.cfi_restore 81
 3761              		.cfi_def_cfa_offset 8
 3762              	.LVL195:
 3763              	.LBB1150:
 3764              	.LBB1140:
 3765              	.LBB1128:
 3766              	.LBB1123:
 3767              		.loc 23 137 9 view .LVU996
 3768 0076 E0EE077A 		vfma.f32	s15, s0, s14
 3769 007a C3ED007A 		vstr.32	s15, [r3]
 3770              	.LVL196:
 3771              		.loc 23 137 9 view .LVU997
 3772              	.LBE1123:
 3773              	.LBE1128:
1306:Veno-Echo.cpp ****     }
 3774              		.loc 20 1306 13 is_stmt 1 view .LVU998
 3775              	.LBB1129:
 3776              	.LBI1124:
 3777              		.loc 10 60 17 view .LVU999
 3778              	.LBB1126:
 3779              		.loc 10 60 37 view .LVU1000
 3780              		.loc 10 60 42 is_stmt 0 view .LVU1001
 3781 007e C2ED007A 		vstr.32	s15, [r2]
 3782              	.LBE1126:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 165


 3783              	.LBE1129:
 3784              	.LBE1140:
 3785              	.LBE1150:
1337:Veno-Echo.cpp **** 
 3786              		.loc 20 1337 1 view .LVU1002
 3787 0082 10BD     		pop	{r4, pc}
 3788              	.LVL197:
 3789              	.L227:
 3790              		.cfi_restore_state
 3791              	.LBB1151:
 3792              	.LBB1141:
1311:Veno-Echo.cpp **** 
 3793              		.loc 20 1311 9 is_stmt 1 view .LVU1003
1313:Veno-Echo.cpp ****         {
 3794              		.loc 20 1313 9 view .LVU1004
 3795 0084 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3796 0086 C3BB     		cbnz	r3, .L238
1315:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3797              		.loc 20 1315 13 view .LVU1005
1315:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3798              		.loc 20 1315 23 is_stmt 0 view .LVU1006
 3799 0088 0124     		movs	r4, #1
1316:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3800              		.loc 20 1316 29 view .LVU1007
 3801 008a 3B48     		ldr	r0, .L255+40
1317:Veno-Echo.cpp ****         }
 3802              		.loc 20 1317 26 view .LVU1008
 3803 008c 3B49     		ldr	r1, .L255+44
1315:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3804              		.loc 20 1315 23 view .LVU1009
 3805 008e 1470     		strb	r4, [r2]
1316:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3806              		.loc 20 1316 13 is_stmt 1 view .LVU1010
1316:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3807              		.loc 20 1316 29 is_stmt 0 view .LVU1011
 3808 0090 0370     		strb	r3, [r0]
1317:Veno-Echo.cpp ****         }
 3809              		.loc 20 1317 13 is_stmt 1 view .LVU1012
1317:Veno-Echo.cpp ****         }
 3810              		.loc 20 1317 26 is_stmt 0 view .LVU1013
 3811 0092 81ED000A 		vstr.32	s0, [r1]
 3812              	.L226:
1317:Veno-Echo.cpp ****         }
 3813              		.loc 20 1317 26 view .LVU1014
 3814              	.LBE1141:
 3815              	.LBE1151:
1337:Veno-Echo.cpp **** 
 3816              		.loc 20 1337 1 view .LVU1015
 3817 0096 BDEC028B 		vldm	sp!, {d8}
 3818              		.cfi_remember_state
 3819              		.cfi_restore 80
 3820              		.cfi_restore 81
 3821              		.cfi_def_cfa_offset 8
 3822 009a 10BD     		pop	{r4, pc}
 3823              	.L228:
 3824              		.cfi_restore_state
 3825              	.LBB1152:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 166


 3826              	.LBB1146:
1282:Veno-Echo.cpp ****             {
 3827              		.loc 20 1282 13 is_stmt 1 view .LVU1016
1282:Veno-Echo.cpp ****             {
 3828              		.loc 20 1282 16 is_stmt 0 view .LVU1017
 3829 009c 2F4B     		ldr	r3, .L255+12
1282:Veno-Echo.cpp ****             {
 3830              		.loc 20 1282 13 view .LVU1018
 3831 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3832 00a0 7AB9     		cbnz	r2, .L230
1284:Veno-Echo.cpp ****                 {
 3833              		.loc 20 1284 17 is_stmt 1 view .LVU1019
 3834              	.LVL198:
 3835              	.LBB1130:
 3836              	.LBI1130:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3837              		.loc 21 75 3 view .LVU1020
 3838              	.LBB1131:
 3839              		.loc 21 76 5 view .LVU1021
 3840              		.loc 21 76 5 is_stmt 0 view .LVU1022
 3841              	.LBE1131:
 3842              	.LBE1130:
1284:Veno-Echo.cpp ****                 {
 3843              		.loc 20 1284 23 view .LVU1023
 3844 00a2 2F4A     		ldr	r2, .L255+16
1284:Veno-Echo.cpp ****                 {
 3845              		.loc 20 1284 17 view .LVU1024
 3846 00a4 9FED367A 		vldr.32	s14, .L255+48
1284:Veno-Echo.cpp ****                 {
 3847              		.loc 20 1284 23 view .LVU1025
 3848 00a8 D2ED007A 		vldr.32	s15, [r2]
 3849 00ac 70EE677A 		vsub.f32	s15, s0, s15
 3850              	.LBB1133:
 3851              	.LBB1132:
 3852              		.loc 21 76 31 view .LVU1026
 3853 00b0 F0EEE77A 		vabs.f32	s15, s15
 3854              	.LBE1132:
 3855              	.LBE1133:
1284:Veno-Echo.cpp ****                 {
 3856              		.loc 20 1284 17 view .LVU1027
 3857 00b4 F4EEC77A 		vcmpe.f32	s15, s14
 3858 00b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3859 00bc B6DD     		ble	.L229
1286:Veno-Echo.cpp ****                 }
 3860              		.loc 20 1286 21 is_stmt 1 view .LVU1028
1286:Veno-Echo.cpp ****                 }
 3861              		.loc 20 1286 34 is_stmt 0 view .LVU1029
 3862 00be 0122     		movs	r2, #1
 3863 00c0 1A70     		strb	r2, [r3]
 3864              	.L230:
1292:Veno-Echo.cpp **** 
 3865              		.loc 20 1292 9 is_stmt 1 view .LVU1030
 3866              	.LVL199:
1294:Veno-Echo.cpp ****         {
 3867              		.loc 20 1294 9 view .LVU1031
1296:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 3868              		.loc 20 1296 13 view .LVU1032
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 167


 3869              	.LBB1134:
 3870              	.LBI1134:
1885:Veno-Echo.cpp **** {
 3871              		.loc 20 1885 7 view .LVU1033
 3872              	.LBB1135:
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3873              		.loc 20 1887 5 view .LVU1034
1888:Veno-Echo.cpp **** 
 3874              		.loc 20 1888 5 view .LVU1035
1888:Veno-Echo.cpp **** 
 3875              		.loc 20 1888 12 is_stmt 0 view .LVU1036
 3876 00c2 DFED297A 		vldr.32	s15, .L255+24
 3877 00c6 38EE270A 		vadd.f32	s0, s16, s15
 3878              	.LVL200:
1890:Veno-Echo.cpp ****     {
 3879              		.loc 20 1890 5 is_stmt 1 view .LVU1037
 3880 00ca B4EEE70A 		vcmpe.f32	s0, s15
 3881 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3882 00d2 3AD4     		bmi	.L254
1895:Veno-Echo.cpp ****     {
 3883              		.loc 20 1895 5 view .LVU1038
 3884 00d4 F7EE007A 		vmov.f32	s15, #1.0e+0
1897:Veno-Echo.cpp ****     }
 3885              		.loc 20 1897 16 is_stmt 0 view .LVU1039
 3886 00d8 B4EE670A 		vcmp.f32	s0, s15
 3887 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3888 00e0 37FE800A 		vselgt.f32	s0, s15, s0
 3889              	.LVL201:
 3890              	.L232:
1900:Veno-Echo.cpp **** }
 3891              		.loc 20 1900 5 is_stmt 1 view .LVU1040
1900:Veno-Echo.cpp **** }
 3892              		.loc 20 1900 5 is_stmt 0 view .LVU1041
 3893              	.LBE1135:
 3894              	.LBE1134:
1296:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 3895              		.loc 20 1296 32 view .LVU1042
 3896 00e4 B6EE001A 		vmov.f32	s2, #5.0e-1
 3897 00e8 0020     		movs	r0, #0
 3898 00ea DFED1F0A 		vldr.32	s1, .L255+24
 3899 00ee FFF7FEFF 		bl	_Z5scalefff9CurveType
 3900              	.LVL202:
1297:Veno-Echo.cpp ****         }
 3901              		.loc 20 1297 24 view .LVU1043
 3902 00f2 1C4B     		ldr	r3, .L255+20
 3903              	.LVL203:
1297:Veno-Echo.cpp ****         }
 3904              		.loc 20 1297 13 is_stmt 1 view .LVU1044
1297:Veno-Echo.cpp ****         }
 3905              		.loc 20 1297 24 is_stmt 0 view .LVU1045
 3906 00f4 83ED008A 		vstr.32	s16, [r3]
 3907 00f8 B3E7     		b	.L234
 3908              	.LVL204:
 3909              	.L238:
1297:Veno-Echo.cpp ****         }
 3910              		.loc 20 1297 24 view .LVU1046
 3911              	.LBE1146:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 168


 3912              	.LBB1147:
1322:Veno-Echo.cpp ****             {
 3913              		.loc 20 1322 13 is_stmt 1 view .LVU1047
1322:Veno-Echo.cpp ****             {
 3914              		.loc 20 1322 16 is_stmt 0 view .LVU1048
 3915 00fa 1F4B     		ldr	r3, .L255+40
1322:Veno-Echo.cpp ****             {
 3916              		.loc 20 1322 13 view .LVU1049
 3917 00fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3918 00fe 7AB9     		cbnz	r2, .L240
1324:Veno-Echo.cpp ****                 {
 3919              		.loc 20 1324 17 is_stmt 1 view .LVU1050
 3920              	.LVL205:
 3921              	.LBB1142:
 3922              	.LBI1142:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3923              		.loc 21 75 3 view .LVU1051
 3924              	.LBB1143:
 3925              		.loc 21 76 5 view .LVU1052
 3926              		.loc 21 76 5 is_stmt 0 view .LVU1053
 3927              	.LBE1143:
 3928              	.LBE1142:
1324:Veno-Echo.cpp ****                 {
 3929              		.loc 20 1324 23 view .LVU1054
 3930 0100 1E4A     		ldr	r2, .L255+44
1324:Veno-Echo.cpp ****                 {
 3931              		.loc 20 1324 17 view .LVU1055
 3932 0102 9FED1F7A 		vldr.32	s14, .L255+48
1324:Veno-Echo.cpp ****                 {
 3933              		.loc 20 1324 23 view .LVU1056
 3934 0106 D2ED007A 		vldr.32	s15, [r2]
 3935 010a 70EE677A 		vsub.f32	s15, s0, s15
 3936              	.LBB1145:
 3937              	.LBB1144:
 3938              		.loc 21 76 31 view .LVU1057
 3939 010e F0EEE77A 		vabs.f32	s15, s15
 3940              	.LBE1144:
 3941              	.LBE1145:
1324:Veno-Echo.cpp ****                 {
 3942              		.loc 20 1324 17 view .LVU1058
 3943 0112 F4EEC77A 		vcmpe.f32	s15, s14
 3944 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3945 011a BCDD     		ble	.L226
1326:Veno-Echo.cpp ****                 }
 3946              		.loc 20 1326 21 is_stmt 1 view .LVU1059
1326:Veno-Echo.cpp ****                 }
 3947              		.loc 20 1326 37 is_stmt 0 view .LVU1060
 3948 011c 0122     		movs	r2, #1
 3949 011e 1A70     		strb	r2, [r3]
 3950              	.L240:
1331:Veno-Echo.cpp ****         {
 3951              		.loc 20 1331 9 is_stmt 1 view .LVU1061
1333:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3952              		.loc 20 1333 13 view .LVU1062
1333:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3953              		.loc 20 1333 29 is_stmt 0 view .LVU1063
 3954 0120 B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 169


 3955              	.LVL206:
1333:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3956              		.loc 20 1333 29 view .LVU1064
 3957 0124 0020     		movs	r0, #0
 3958 0126 9FED171A 		vldr.32	s2, .L255+52
 3959 012a DFED0F0A 		vldr.32	s1, .L255+24
 3960 012e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3961              	.LVL207:
1333:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3962              		.loc 20 1333 22 view .LVU1065
 3963 0132 154A     		ldr	r2, .L255+56
1334:Veno-Echo.cpp ****         }
 3964              		.loc 20 1334 34 view .LVU1066
 3965 0134 154B     		ldr	r3, .L255+60
1333:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3966              		.loc 20 1333 22 view .LVU1067
 3967 0136 82ED000A 		vstr.32	s0, [r2]
1334:Veno-Echo.cpp ****         }
 3968              		.loc 20 1334 13 is_stmt 1 view .LVU1068
1334:Veno-Echo.cpp ****         }
 3969              		.loc 20 1334 34 is_stmt 0 view .LVU1069
 3970 013a 83ED020A 		vstr.32	s0, [r3, #8]
 3971              	.LBE1147:
 3972              	.LBE1152:
1337:Veno-Echo.cpp **** 
 3973              		.loc 20 1337 1 view .LVU1070
 3974 013e BDEC028B 		vldm	sp!, {d8}
 3975              		.cfi_remember_state
 3976              		.cfi_restore 80
 3977              		.cfi_restore 81
 3978              		.cfi_def_cfa_offset 8
 3979              	.LVL208:
1337:Veno-Echo.cpp **** 
 3980              		.loc 20 1337 1 view .LVU1071
 3981 0142 10BD     		pop	{r4, pc}
 3982              	.LVL209:
 3983              	.L253:
 3984              		.cfi_restore_state
 3985              	.LBB1153:
 3986              	.LBB1148:
 3987              	.LBB1137:
 3988              	.LBB1118:
1892:Veno-Echo.cpp ****     }
 3989              		.loc 20 1892 16 view .LVU1072
 3990 0144 B0EE670A 		vmov.f32	s0, s15
 3991              	.LVL210:
1892:Veno-Echo.cpp ****     }
 3992              		.loc 20 1892 16 view .LVU1073
 3993 0148 84E7     		b	.L235
 3994              	.LVL211:
 3995              	.L254:
1892:Veno-Echo.cpp ****     }
 3996              		.loc 20 1892 16 view .LVU1074
 3997              	.LBE1118:
 3998              	.LBE1137:
 3999              	.LBB1138:
 4000              	.LBB1136:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 170


 4001 014a B0EE670A 		vmov.f32	s0, s15
 4002              	.LVL212:
1892:Veno-Echo.cpp ****     }
 4003              		.loc 20 1892 16 view .LVU1075
 4004 014e C9E7     		b	.L232
 4005              	.L256:
 4006              		.align	2
 4007              	.L255:
 4008 0150 18000000 		.word	.LANCHOR4+24
 4009 0154 00000000 		.word	.LANCHOR7
 4010 0158 00000000 		.word	.LANCHOR59
 4011 015c 00000000 		.word	.LANCHOR60
 4012 0160 00000000 		.word	.LANCHOR61
 4013 0164 00000000 		.word	.LANCHOR62
 4014 0168 00000000 		.word	0
 4015 016c 00000000 		.word	.LANCHOR63
 4016 0170 6F12033D 		.word	1023611503
 4017 0174 00000000 		.word	.LANCHOR64
 4018 0178 00000000 		.word	.LANCHOR65
 4019 017c 00000000 		.word	.LANCHOR66
 4020 0180 0AD7A33B 		.word	1000593162
 4021 0184 0000FA43 		.word	1140457472
 4022 0188 00000000 		.word	.LANCHOR67
 4023 018c 00000000 		.word	.LANCHOR16
 4024              	.LBE1136:
 4025              	.LBE1138:
 4026              	.LBE1148:
 4027              	.LBE1153:
 4028              		.cfi_endproc
 4029              	.LFE4323:
 4031              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4032              		.align	1
 4033              		.p2align 2,,3
 4034              		.global	_Z20Update_crossfeedbackv
 4035              		.syntax unified
 4036              		.thumb
 4037              		.thumb_func
 4038              		.fpu fpv5-d16
 4040              	_Z20Update_crossfeedbackv:
 4041              	.LFB4324:
1340:Veno-Echo.cpp ****     static bool lastShift{};
 4042              		.loc 20 1340 1 is_stmt 1 view -0
 4043              		.cfi_startproc
 4044              		@ args = 0, pretend = 0, frame = 0
 4045              		@ frame_needed = 0, uses_anonymous_args = 0
1341:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4046              		.loc 20 1341 5 view .LVU1077
1342:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4047              		.loc 20 1342 5 view .LVU1078
1343:Veno-Echo.cpp **** 
 4048              		.loc 20 1343 5 view .LVU1079
1345:Veno-Echo.cpp **** 
 4049              		.loc 20 1345 5 view .LVU1080
1348:Veno-Echo.cpp **** 
 4050              		.loc 20 1348 5 view .LVU1081
1340:Veno-Echo.cpp ****     static bool lastShift{};
 4051              		.loc 20 1340 1 is_stmt 0 view .LVU1082
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 171


 4052 0000 10B5     		push	{r4, lr}
 4053              		.cfi_def_cfa_offset 8
 4054              		.cfi_offset 4, -8
 4055              		.cfi_offset 14, -4
1348:Veno-Echo.cpp **** 
 4056              		.loc 20 1348 44 view .LVU1083
 4057 0002 0621     		movs	r1, #6
 4058 0004 4148     		ldr	r0, .L272
1340:Veno-Echo.cpp ****     static bool lastShift{};
 4059              		.loc 20 1340 1 view .LVU1084
 4060 0006 2DED028B 		vpush.64	{d8}
 4061              		.cfi_def_cfa_offset 16
 4062              		.cfi_offset 80, -16
 4063              		.cfi_offset 81, -12
1348:Veno-Echo.cpp **** 
 4064              		.loc 20 1348 44 view .LVU1085
 4065 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4066              	.LVL213:
 4067              	.LBB1154:
1350:Veno-Echo.cpp ****     {   
 4068              		.loc 20 1350 9 view .LVU1086
 4069 000e 404B     		ldr	r3, .L272+4
 4070              	.LBE1154:
1348:Veno-Echo.cpp **** 
 4071              		.loc 20 1348 44 view .LVU1087
 4072 0010 B0EE408A 		vmov.f32	s16, s0
 4073              	.LVL214:
1350:Veno-Echo.cpp ****     {   
 4074              		.loc 20 1350 5 is_stmt 1 view .LVU1088
 4075              	.LBB1183:
 4076              	.LBB1155:
1354:Veno-Echo.cpp ****         {
 4077              		.loc 20 1354 19 is_stmt 0 view .LVU1089
 4078 0014 3F4A     		ldr	r2, .L272+8
 4079              	.LBE1155:
1350:Veno-Echo.cpp ****     {   
 4080              		.loc 20 1350 5 view .LVU1090
 4081 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4082 0018 FBB9     		cbnz	r3, .L258
 4083              	.LBB1164:
1352:Veno-Echo.cpp ****         //update pickup
 4084              		.loc 20 1352 9 is_stmt 1 view .LVU1091
1354:Veno-Echo.cpp ****         {
 4085              		.loc 20 1354 9 view .LVU1092
 4086 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4087 001c 49B3     		cbz	r1, .L259
1356:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4088              		.loc 20 1356 13 view .LVU1093
1357:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4089              		.loc 20 1357 34 is_stmt 0 view .LVU1094
 4090 001e 3E48     		ldr	r0, .L272+12
1358:Veno-Echo.cpp ****         }
 4091              		.loc 20 1358 31 view .LVU1095
 4092 0020 3E49     		ldr	r1, .L272+16
1356:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4093              		.loc 20 1356 23 view .LVU1096
 4094 0022 1370     		strb	r3, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 172


1357:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4095              		.loc 20 1357 13 is_stmt 1 view .LVU1097
1357:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4096              		.loc 20 1357 34 is_stmt 0 view .LVU1098
 4097 0024 0370     		strb	r3, [r0]
1358:Veno-Echo.cpp ****         }
 4098              		.loc 20 1358 13 is_stmt 1 view .LVU1099
1358:Veno-Echo.cpp ****         }
 4099              		.loc 20 1358 31 is_stmt 0 view .LVU1100
 4100 0026 81ED000A 		vstr.32	s0, [r1]
 4101              	.L260:
1371:Veno-Echo.cpp **** 
 4102              		.loc 20 1371 9 is_stmt 1 view .LVU1101
 4103              	.LVL215:
1373:Veno-Echo.cpp ****         {
 4104              		.loc 20 1373 9 view .LVU1102
1381:Veno-Echo.cpp ****         }
 4105              		.loc 20 1381 13 view .LVU1103
1381:Veno-Echo.cpp ****         }
 4106              		.loc 20 1381 40 is_stmt 0 view .LVU1104
 4107 002a 3D4B     		ldr	r3, .L272+20
 4108 002c B7EE001A 		vmov.f32	s2, #1.0e+0
 4109 0030 0020     		movs	r0, #0
 4110 0032 DFED3C0A 		vldr.32	s1, .L272+24
 4111 0036 93ED000A 		vldr.32	s0, [r3]
 4112              	.LVL216:
1381:Veno-Echo.cpp ****         }
 4113              		.loc 20 1381 40 view .LVU1105
 4114 003a FFF7FEFF 		bl	_Z5scalefff9CurveType
 4115              	.LVL217:
 4116              	.L268:
1384:Veno-Echo.cpp ****     }
 4117              		.loc 20 1384 9 is_stmt 1 view .LVU1106
 4118              	.LBB1156:
 4119              	.LBI1156:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4120              		.loc 23 135 13 view .LVU1107
 4121              	.LBB1157:
 4122              		.loc 23 137 5 view .LVU1108
 4123              		.loc 23 137 9 is_stmt 0 view .LVU1109
 4124 003e 3A4B     		ldr	r3, .L272+28
 4125 0040 9FED3A7A 		vldr.32	s14, .L272+32
 4126 0044 D3ED007A 		vldr.32	s15, [r3]
 4127              		.loc 23 137 24 view .LVU1110
 4128 0048 30EE670A 		vsub.f32	s0, s0, s15
 4129              	.LVL218:
 4130              		.loc 23 137 24 view .LVU1111
 4131              	.LBE1157:
 4132              	.LBE1156:
 4133              	.LBE1164:
 4134              	.LBE1183:
1415:Veno-Echo.cpp **** 
 4135              		.loc 20 1415 1 view .LVU1112
 4136 004c BDEC028B 		vldm	sp!, {d8}
 4137              		.cfi_remember_state
 4138              		.cfi_restore 80
 4139              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 173


 4140              		.cfi_def_cfa_offset 8
 4141              	.LVL219:
 4142              	.LBB1184:
 4143              	.LBB1165:
 4144              	.LBB1159:
 4145              	.LBB1158:
 4146              		.loc 23 137 9 view .LVU1113
 4147 0050 E0EE077A 		vfma.f32	s15, s0, s14
 4148 0054 C3ED007A 		vstr.32	s15, [r3]
 4149              	.LBE1158:
 4150              	.LBE1159:
 4151              	.LBE1165:
 4152              	.LBE1184:
1415:Veno-Echo.cpp **** 
 4153              		.loc 20 1415 1 view .LVU1114
 4154 0058 10BD     		pop	{r4, pc}
 4155              	.LVL220:
 4156              	.L258:
 4157              		.cfi_restore_state
 4158              	.LBB1185:
 4159              	.LBB1166:
1388:Veno-Echo.cpp **** 
 4160              		.loc 20 1388 9 is_stmt 1 view .LVU1115
1390:Veno-Echo.cpp ****         {
 4161              		.loc 20 1390 9 view .LVU1116
 4162 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4163 005c 4BBB     		cbnz	r3, .L264
1392:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4164              		.loc 20 1392 13 view .LVU1117
1392:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4165              		.loc 20 1392 23 is_stmt 0 view .LVU1118
 4166 005e 0124     		movs	r4, #1
1393:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4167              		.loc 20 1393 28 view .LVU1119
 4168 0060 3348     		ldr	r0, .L272+36
1394:Veno-Echo.cpp ****         }
 4169              		.loc 20 1394 25 view .LVU1120
 4170 0062 3449     		ldr	r1, .L272+40
1392:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4171              		.loc 20 1392 23 view .LVU1121
 4172 0064 1470     		strb	r4, [r2]
1393:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4173              		.loc 20 1393 13 is_stmt 1 view .LVU1122
1393:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4174              		.loc 20 1393 28 is_stmt 0 view .LVU1123
 4175 0066 0370     		strb	r3, [r0]
1394:Veno-Echo.cpp ****         }
 4176              		.loc 20 1394 13 is_stmt 1 view .LVU1124
1394:Veno-Echo.cpp ****         }
 4177              		.loc 20 1394 25 is_stmt 0 view .LVU1125
 4178 0068 81ED000A 		vstr.32	s0, [r1]
 4179              	.L257:
1394:Veno-Echo.cpp ****         }
 4180              		.loc 20 1394 25 view .LVU1126
 4181              	.LBE1166:
 4182              	.LBE1185:
1415:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 174


 4183              		.loc 20 1415 1 view .LVU1127
 4184 006c BDEC028B 		vldm	sp!, {d8}
 4185              		.cfi_remember_state
 4186              		.cfi_restore 80
 4187              		.cfi_restore 81
 4188              		.cfi_def_cfa_offset 8
 4189 0070 10BD     		pop	{r4, pc}
 4190              	.L259:
 4191              		.cfi_restore_state
 4192              	.LBB1186:
 4193              	.LBB1181:
1363:Veno-Echo.cpp ****             {
 4194              		.loc 20 1363 13 is_stmt 1 view .LVU1128
1363:Veno-Echo.cpp ****             {
 4195              		.loc 20 1363 16 is_stmt 0 view .LVU1129
 4196 0072 294B     		ldr	r3, .L272+12
1363:Veno-Echo.cpp ****             {
 4197              		.loc 20 1363 13 view .LVU1130
 4198 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4199 0076 7AB9     		cbnz	r2, .L261
1365:Veno-Echo.cpp ****                 {
 4200              		.loc 20 1365 17 is_stmt 1 view .LVU1131
 4201              	.LVL221:
 4202              	.LBB1160:
 4203              	.LBI1160:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4204              		.loc 21 75 3 view .LVU1132
 4205              	.LBB1161:
 4206              		.loc 21 76 5 view .LVU1133
 4207              		.loc 21 76 5 is_stmt 0 view .LVU1134
 4208              	.LBE1161:
 4209              	.LBE1160:
1365:Veno-Echo.cpp ****                 {
 4210              		.loc 20 1365 23 view .LVU1135
 4211 0078 284A     		ldr	r2, .L272+16
1365:Veno-Echo.cpp ****                 {
 4212              		.loc 20 1365 17 view .LVU1136
 4213 007a 9FED2F7A 		vldr.32	s14, .L272+44
1365:Veno-Echo.cpp ****                 {
 4214              		.loc 20 1365 23 view .LVU1137
 4215 007e D2ED007A 		vldr.32	s15, [r2]
 4216 0082 70EE677A 		vsub.f32	s15, s0, s15
 4217              	.LBB1163:
 4218              	.LBB1162:
 4219              		.loc 21 76 31 view .LVU1138
 4220 0086 F0EEE77A 		vabs.f32	s15, s15
 4221              	.LBE1162:
 4222              	.LBE1163:
1365:Veno-Echo.cpp ****                 {
 4223              		.loc 20 1365 17 view .LVU1139
 4224 008a F4EEC77A 		vcmpe.f32	s15, s14
 4225 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4226 0092 CADD     		ble	.L260
1367:Veno-Echo.cpp ****                 }
 4227              		.loc 20 1367 21 is_stmt 1 view .LVU1140
1367:Veno-Echo.cpp ****                 }
 4228              		.loc 20 1367 42 is_stmt 0 view .LVU1141
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 175


 4229 0094 0122     		movs	r2, #1
 4230 0096 1A70     		strb	r2, [r3]
 4231              	.L261:
1371:Veno-Echo.cpp **** 
 4232              		.loc 20 1371 9 is_stmt 1 view .LVU1142
 4233              	.LVL222:
1373:Veno-Echo.cpp ****         {
 4234              		.loc 20 1373 9 view .LVU1143
1375:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4235              		.loc 20 1375 13 view .LVU1144
1375:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4236              		.loc 20 1375 40 is_stmt 0 view .LVU1145
 4237 0098 B7EE001A 		vmov.f32	s2, #1.0e+0
 4238 009c 0020     		movs	r0, #0
 4239 009e B0EE480A 		vmov.f32	s0, s16
 4240              	.LVL223:
1375:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4241              		.loc 20 1375 40 view .LVU1146
 4242 00a2 DFED200A 		vldr.32	s1, .L272+24
 4243 00a6 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4244              	.LVL224:
1376:Veno-Echo.cpp ****         }
 4245              		.loc 20 1376 32 view .LVU1147
 4246 00aa 1D4B     		ldr	r3, .L272+20
 4247              	.LVL225:
1376:Veno-Echo.cpp ****         }
 4248              		.loc 20 1376 13 is_stmt 1 view .LVU1148
1376:Veno-Echo.cpp ****         }
 4249              		.loc 20 1376 32 is_stmt 0 view .LVU1149
 4250 00ac 83ED008A 		vstr.32	s16, [r3]
 4251 00b0 C5E7     		b	.L268
 4252              	.LVL226:
 4253              	.L264:
1376:Veno-Echo.cpp ****         }
 4254              		.loc 20 1376 32 view .LVU1150
 4255              	.LBE1181:
 4256              	.LBB1182:
1399:Veno-Echo.cpp ****             {
 4257              		.loc 20 1399 13 is_stmt 1 view .LVU1151
1399:Veno-Echo.cpp ****             {
 4258              		.loc 20 1399 16 is_stmt 0 view .LVU1152
 4259 00b2 1F4B     		ldr	r3, .L272+36
1399:Veno-Echo.cpp ****             {
 4260              		.loc 20 1399 13 view .LVU1153
 4261 00b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4262 00b6 7AB9     		cbnz	r2, .L266
1401:Veno-Echo.cpp ****                 {
 4263              		.loc 20 1401 17 is_stmt 1 view .LVU1154
 4264              	.LVL227:
 4265              	.LBB1167:
 4266              	.LBI1167:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4267              		.loc 21 75 3 view .LVU1155
 4268              	.LBB1168:
 4269              		.loc 21 76 5 view .LVU1156
 4270              		.loc 21 76 5 is_stmt 0 view .LVU1157
 4271              	.LBE1168:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 176


 4272              	.LBE1167:
1401:Veno-Echo.cpp ****                 {
 4273              		.loc 20 1401 23 view .LVU1158
 4274 00b8 1E4A     		ldr	r2, .L272+40
1401:Veno-Echo.cpp ****                 {
 4275              		.loc 20 1401 17 view .LVU1159
 4276 00ba 9FED1F7A 		vldr.32	s14, .L272+44
1401:Veno-Echo.cpp ****                 {
 4277              		.loc 20 1401 23 view .LVU1160
 4278 00be D2ED007A 		vldr.32	s15, [r2]
 4279 00c2 70EE677A 		vsub.f32	s15, s0, s15
 4280              	.LBB1170:
 4281              	.LBB1169:
 4282              		.loc 21 76 31 view .LVU1161
 4283 00c6 F0EEE77A 		vabs.f32	s15, s15
 4284              	.LBE1169:
 4285              	.LBE1170:
1401:Veno-Echo.cpp ****                 {
 4286              		.loc 20 1401 17 view .LVU1162
 4287 00ca F4EEC77A 		vcmpe.f32	s15, s14
 4288 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4289 00d2 CBDD     		ble	.L257
1403:Veno-Echo.cpp ****                 }
 4290              		.loc 20 1403 21 is_stmt 1 view .LVU1163
1403:Veno-Echo.cpp ****                 }
 4291              		.loc 20 1403 36 is_stmt 0 view .LVU1164
 4292 00d4 0122     		movs	r2, #1
 4293 00d6 1A70     		strb	r2, [r3]
 4294              	.L266:
1408:Veno-Echo.cpp ****         {
 4295              		.loc 20 1408 9 is_stmt 1 view .LVU1165
 4296              	.LBB1171:
 4297              	.LBB1172:
1410:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4298              		.loc 20 1410 13 view .LVU1166
 4299              	.LBB1173:
 4300              	.LBB1174:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 177


  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4301              		.loc 8 60 20 is_stmt 0 view .LVU1167
 4302 00d8 184C     		ldr	r4, .L272+48
 4303              	.LBE1174:
 4304              	.LBE1173:
1410:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4305              		.loc 20 1410 32 view .LVU1168
 4306 00da B0EE480A 		vmov.f32	s0, s16
 4307              	.LVL228:
1410:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4308              		.loc 20 1410 32 view .LVU1169
 4309 00de B2EE041A 		vmov.f32	s2, #1.0e+1
 4310 00e2 0020     		movs	r0, #0
 4311 00e4 DFED160A 		vldr.32	s1, .L272+52
 4312 00e8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4313              	.LVL229:
 4314              	.LBB1178:
 4315              	.LBB1175:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4316              		.loc 8 61 34 view .LVU1170
 4317 00ec 2046     		mov	r0, r4
 4318              	.LBE1175:
 4319              	.LBE1178:
1410:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4320              		.loc 20 1410 32 view .LVU1171
 4321 00ee B0EE408A 		vmov.f32	s16, s0
 4322              	.LVL230:
1411:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4323              		.loc 20 1411 13 is_stmt 1 view .LVU1172
 4324              	.LBB1179:
 4325              	.LBI1173:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4326              		.loc 8 58 17 view .LVU1173
 4327              	.LBB1176:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 178


  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4328              		.loc 8 60 9 view .LVU1174
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4329              		.loc 8 60 20 is_stmt 0 view .LVU1175
 4330 00f2 84ED020A 		vstr.32	s0, [r4, #8]
 4331              		.loc 8 61 9 is_stmt 1 view .LVU1176
 4332              		.loc 8 61 34 is_stmt 0 view .LVU1177
 4333 00f6 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4334              	.LVL231:
 4335              		.loc 8 61 34 view .LVU1178
 4336              	.LBE1176:
 4337              	.LBE1179:
1412:Veno-Echo.cpp ****         }
 4338              		.loc 20 1412 33 view .LVU1179
 4339 00fa 124B     		ldr	r3, .L272+56
 4340              	.LBB1180:
 4341              	.LBB1177:
 4342              		.loc 8 61 20 view .LVU1180
 4343 00fc 84ED060A 		vstr.32	s0, [r4, #24]
 4344              	.LVL232:
 4345              		.loc 8 61 20 view .LVU1181
 4346              	.LBE1177:
 4347              	.LBE1180:
1412:Veno-Echo.cpp ****         }
 4348              		.loc 20 1412 13 is_stmt 1 view .LVU1182
1412:Veno-Echo.cpp ****         }
 4349              		.loc 20 1412 33 is_stmt 0 view .LVU1183
 4350 0100 83ED038A 		vstr.32	s16, [r3, #12]
 4351              	.LBE1172:
 4352              	.LBE1171:
 4353              	.LBE1182:
 4354              	.LBE1186:
1415:Veno-Echo.cpp **** 
 4355              		.loc 20 1415 1 view .LVU1184
 4356 0104 BDEC028B 		vldm	sp!, {d8}
 4357              		.cfi_restore 80
 4358              		.cfi_restore 81
 4359              		.cfi_def_cfa_offset 8
 4360              	.LVL233:
1415:Veno-Echo.cpp **** 
 4361              		.loc 20 1415 1 view .LVU1185
 4362 0108 10BD     		pop	{r4, pc}
 4363              	.L273:
 4364 010a 00BF     		.align	2
 4365              	.L272:
 4366 010c 18000000 		.word	.LANCHOR4+24
 4367 0110 00000000 		.word	.LANCHOR7
 4368 0114 00000000 		.word	.LANCHOR68
 4369 0118 00000000 		.word	.LANCHOR69
 4370 011c 00000000 		.word	.LANCHOR70
 4371 0120 00000000 		.word	.LANCHOR74
 4372 0124 00000000 		.word	0
 4373 0128 00000000 		.word	.LANCHOR71
 4374 012c 6F12033D 		.word	1023611503
 4375 0130 00000000 		.word	.LANCHOR72
 4376 0134 00000000 		.word	.LANCHOR73
 4377 0138 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 179


 4378 013c 00000000 		.word	.LANCHOR75
 4379 0140 CDCCCC3D 		.word	1036831949
 4380 0144 00000000 		.word	.LANCHOR16
 4381              		.cfi_endproc
 4382              	.LFE4324:
 4384              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4385              		.align	1
 4386              		.p2align 2,,3
 4387              		.global	_Z18Update_filterXfadev
 4388              		.syntax unified
 4389              		.thumb
 4390              		.thumb_func
 4391              		.fpu fpv5-d16
 4393              	_Z18Update_filterXfadev:
 4394              	.LFB4325:
1418:Veno-Echo.cpp ****     static bool lastShift{};
 4395              		.loc 20 1418 1 is_stmt 1 view -0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
1419:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4399              		.loc 20 1419 5 view .LVU1187
1420:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4400              		.loc 20 1420 5 view .LVU1188
1421:Veno-Echo.cpp **** 
 4401              		.loc 20 1421 5 view .LVU1189
1423:Veno-Echo.cpp **** 
 4402              		.loc 20 1423 5 view .LVU1190
1426:Veno-Echo.cpp **** 
 4403              		.loc 20 1426 5 view .LVU1191
1418:Veno-Echo.cpp ****     static bool lastShift{};
 4404              		.loc 20 1418 1 is_stmt 0 view .LVU1192
 4405 0000 10B5     		push	{r4, lr}
 4406              		.cfi_def_cfa_offset 8
 4407              		.cfi_offset 4, -8
 4408              		.cfi_offset 14, -4
1426:Veno-Echo.cpp **** 
 4409              		.loc 20 1426 42 view .LVU1193
 4410 0002 0621     		movs	r1, #6
 4411 0004 4248     		ldr	r0, .L296
1418:Veno-Echo.cpp ****     static bool lastShift{};
 4412              		.loc 20 1418 1 view .LVU1194
 4413 0006 2DED028B 		vpush.64	{d8}
 4414              		.cfi_def_cfa_offset 16
 4415              		.cfi_offset 80, -16
 4416              		.cfi_offset 81, -12
1426:Veno-Echo.cpp **** 
 4417              		.loc 20 1426 42 view .LVU1195
 4418 000a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4419              	.LVL234:
 4420              	.LBB1187:
1428:Veno-Echo.cpp ****     {   
 4421              		.loc 20 1428 9 view .LVU1196
 4422 000e 414B     		ldr	r3, .L296+4
 4423              	.LBE1187:
1426:Veno-Echo.cpp **** 
 4424              		.loc 20 1426 42 view .LVU1197
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 180


 4425 0010 B0EE408A 		vmov.f32	s16, s0
 4426              	.LVL235:
1428:Veno-Echo.cpp ****     {   
 4427              		.loc 20 1428 5 is_stmt 1 view .LVU1198
 4428              	.LBB1207:
 4429              	.LBB1188:
1432:Veno-Echo.cpp ****         {
 4430              		.loc 20 1432 19 is_stmt 0 view .LVU1199
 4431 0014 404A     		ldr	r2, .L296+8
 4432              	.LBE1188:
1428:Veno-Echo.cpp ****     {   
 4433              		.loc 20 1428 5 view .LVU1200
 4434 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4435 0018 FBB9     		cbnz	r3, .L275
 4436              	.LBB1197:
1430:Veno-Echo.cpp ****         //update pickup
 4437              		.loc 20 1430 9 is_stmt 1 view .LVU1201
1432:Veno-Echo.cpp ****         {
 4438              		.loc 20 1432 9 view .LVU1202
 4439 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4440 001c 49B3     		cbz	r1, .L276
1434:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4441              		.loc 20 1434 13 view .LVU1203
1435:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4442              		.loc 20 1435 32 is_stmt 0 view .LVU1204
 4443 001e 3F48     		ldr	r0, .L296+12
1436:Veno-Echo.cpp ****         }
 4444              		.loc 20 1436 29 view .LVU1205
 4445 0020 3F49     		ldr	r1, .L296+16
1434:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4446              		.loc 20 1434 23 view .LVU1206
 4447 0022 1370     		strb	r3, [r2]
1435:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4448              		.loc 20 1435 13 is_stmt 1 view .LVU1207
1435:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4449              		.loc 20 1435 32 is_stmt 0 view .LVU1208
 4450 0024 0370     		strb	r3, [r0]
1436:Veno-Echo.cpp ****         }
 4451              		.loc 20 1436 13 is_stmt 1 view .LVU1209
1436:Veno-Echo.cpp ****         }
 4452              		.loc 20 1436 29 is_stmt 0 view .LVU1210
 4453 0026 81ED000A 		vstr.32	s0, [r1]
 4454              	.L277:
1450:Veno-Echo.cpp **** 
 4455              		.loc 20 1450 9 is_stmt 1 view .LVU1211
 4456              	.LVL236:
1452:Veno-Echo.cpp ****         {
 4457              		.loc 20 1452 9 view .LVU1212
1460:Veno-Echo.cpp ****         }
 4458              		.loc 20 1460 13 view .LVU1213
1460:Veno-Echo.cpp ****         }
 4459              		.loc 20 1460 38 is_stmt 0 view .LVU1214
 4460 002a 3E4B     		ldr	r3, .L296+20
 4461 002c B7EE001A 		vmov.f32	s2, #1.0e+0
 4462 0030 0120     		movs	r0, #1
 4463 0032 DFED3D0A 		vldr.32	s1, .L296+24
 4464 0036 93ED000A 		vldr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 181


 4465              	.LVL237:
1460:Veno-Echo.cpp ****         }
 4466              		.loc 20 1460 38 view .LVU1215
 4467 003a FFF7FEFF 		bl	_Z5scalefff9CurveType
 4468              	.LVL238:
 4469              	.L287:
1463:Veno-Echo.cpp ****     }
 4470              		.loc 20 1463 9 is_stmt 1 view .LVU1216
 4471              	.LBB1189:
 4472              	.LBI1189:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4473              		.loc 23 135 13 view .LVU1217
 4474              	.LBB1190:
 4475              		.loc 23 137 5 view .LVU1218
 4476              		.loc 23 137 9 is_stmt 0 view .LVU1219
 4477 003e 3B4B     		ldr	r3, .L296+28
 4478 0040 9FED3B7A 		vldr.32	s14, .L296+32
 4479 0044 D3ED007A 		vldr.32	s15, [r3]
 4480              		.loc 23 137 24 view .LVU1220
 4481 0048 30EE670A 		vsub.f32	s0, s0, s15
 4482              	.LVL239:
 4483              		.loc 23 137 24 view .LVU1221
 4484              	.LBE1190:
 4485              	.LBE1189:
 4486              	.LBE1197:
 4487              	.LBE1207:
1505:Veno-Echo.cpp **** 
 4488              		.loc 20 1505 1 view .LVU1222
 4489 004c BDEC028B 		vldm	sp!, {d8}
 4490              		.cfi_remember_state
 4491              		.cfi_restore 80
 4492              		.cfi_restore 81
 4493              		.cfi_def_cfa_offset 8
 4494              	.LVL240:
 4495              	.LBB1208:
 4496              	.LBB1198:
 4497              	.LBB1192:
 4498              	.LBB1191:
 4499              		.loc 23 137 9 view .LVU1223
 4500 0050 E0EE077A 		vfma.f32	s15, s0, s14
 4501 0054 C3ED007A 		vstr.32	s15, [r3]
 4502              	.LBE1191:
 4503              	.LBE1192:
 4504              	.LBE1198:
 4505              	.LBE1208:
1505:Veno-Echo.cpp **** 
 4506              		.loc 20 1505 1 view .LVU1224
 4507 0058 10BD     		pop	{r4, pc}
 4508              	.LVL241:
 4509              	.L275:
 4510              		.cfi_restore_state
 4511              	.LBB1209:
 4512              	.LBB1199:
1468:Veno-Echo.cpp **** 
 4513              		.loc 20 1468 9 is_stmt 1 view .LVU1225
1470:Veno-Echo.cpp ****         {
 4514              		.loc 20 1470 9 view .LVU1226
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 182


 4515 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4516 005c 4BBB     		cbnz	r3, .L281
1472:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4517              		.loc 20 1472 13 view .LVU1227
1472:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4518              		.loc 20 1472 23 is_stmt 0 view .LVU1228
 4519 005e 0124     		movs	r4, #1
1473:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4520              		.loc 20 1473 32 view .LVU1229
 4521 0060 3448     		ldr	r0, .L296+36
1474:Veno-Echo.cpp ****         }
 4522              		.loc 20 1474 29 view .LVU1230
 4523 0062 3549     		ldr	r1, .L296+40
1472:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4524              		.loc 20 1472 23 view .LVU1231
 4525 0064 1470     		strb	r4, [r2]
1473:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4526              		.loc 20 1473 13 is_stmt 1 view .LVU1232
1473:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4527              		.loc 20 1473 32 is_stmt 0 view .LVU1233
 4528 0066 0370     		strb	r3, [r0]
1474:Veno-Echo.cpp ****         }
 4529              		.loc 20 1474 13 is_stmt 1 view .LVU1234
1474:Veno-Echo.cpp ****         }
 4530              		.loc 20 1474 29 is_stmt 0 view .LVU1235
 4531 0068 81ED000A 		vstr.32	s0, [r1]
 4532              	.L274:
1474:Veno-Echo.cpp ****         }
 4533              		.loc 20 1474 29 view .LVU1236
 4534              	.LBE1199:
 4535              	.LBE1209:
1505:Veno-Echo.cpp **** 
 4536              		.loc 20 1505 1 view .LVU1237
 4537 006c BDEC028B 		vldm	sp!, {d8}
 4538              		.cfi_remember_state
 4539              		.cfi_restore 80
 4540              		.cfi_restore 81
 4541              		.cfi_def_cfa_offset 8
 4542 0070 10BD     		pop	{r4, pc}
 4543              	.L276:
 4544              		.cfi_restore_state
 4545              	.LBB1210:
 4546              	.LBB1204:
1441:Veno-Echo.cpp ****             {
 4547              		.loc 20 1441 13 is_stmt 1 view .LVU1238
1441:Veno-Echo.cpp ****             {
 4548              		.loc 20 1441 16 is_stmt 0 view .LVU1239
 4549 0072 2A4B     		ldr	r3, .L296+12
1441:Veno-Echo.cpp ****             {
 4550              		.loc 20 1441 13 view .LVU1240
 4551 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4552 0076 7AB9     		cbnz	r2, .L278
1443:Veno-Echo.cpp ****                 {
 4553              		.loc 20 1443 17 is_stmt 1 view .LVU1241
 4554              	.LVL242:
 4555              	.LBB1193:
 4556              	.LBI1193:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 183


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4557              		.loc 21 75 3 view .LVU1242
 4558              	.LBB1194:
 4559              		.loc 21 76 5 view .LVU1243
 4560              		.loc 21 76 5 is_stmt 0 view .LVU1244
 4561              	.LBE1194:
 4562              	.LBE1193:
1443:Veno-Echo.cpp ****                 {
 4563              		.loc 20 1443 23 view .LVU1245
 4564 0078 294A     		ldr	r2, .L296+16
1443:Veno-Echo.cpp ****                 {
 4565              		.loc 20 1443 17 view .LVU1246
 4566 007a 9FED307A 		vldr.32	s14, .L296+44
1443:Veno-Echo.cpp ****                 {
 4567              		.loc 20 1443 23 view .LVU1247
 4568 007e D2ED007A 		vldr.32	s15, [r2]
 4569 0082 70EE677A 		vsub.f32	s15, s0, s15
 4570              	.LBB1196:
 4571              	.LBB1195:
 4572              		.loc 21 76 31 view .LVU1248
 4573 0086 F0EEE77A 		vabs.f32	s15, s15
 4574              	.LBE1195:
 4575              	.LBE1196:
1443:Veno-Echo.cpp ****                 {
 4576              		.loc 20 1443 17 view .LVU1249
 4577 008a F4EEC77A 		vcmpe.f32	s15, s14
 4578 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4579 0092 CADD     		ble	.L277
1445:Veno-Echo.cpp ****                 }
 4580              		.loc 20 1445 21 is_stmt 1 view .LVU1250
1445:Veno-Echo.cpp ****                 }
 4581              		.loc 20 1445 40 is_stmt 0 view .LVU1251
 4582 0094 0122     		movs	r2, #1
 4583 0096 1A70     		strb	r2, [r3]
 4584              	.L278:
1450:Veno-Echo.cpp **** 
 4585              		.loc 20 1450 9 is_stmt 1 view .LVU1252
 4586              	.LVL243:
1452:Veno-Echo.cpp ****         {
 4587              		.loc 20 1452 9 view .LVU1253
1454:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4588              		.loc 20 1454 13 view .LVU1254
1454:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4589              		.loc 20 1454 38 is_stmt 0 view .LVU1255
 4590 0098 B7EE001A 		vmov.f32	s2, #1.0e+0
 4591 009c 0120     		movs	r0, #1
 4592 009e B0EE480A 		vmov.f32	s0, s16
 4593              	.LVL244:
1454:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4594              		.loc 20 1454 38 view .LVU1256
 4595 00a2 DFED210A 		vldr.32	s1, .L296+24
 4596 00a6 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4597              	.LVL245:
1455:Veno-Echo.cpp ****         }
 4598              		.loc 20 1455 30 view .LVU1257
 4599 00aa 1E4B     		ldr	r3, .L296+20
 4600              	.LVL246:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 184


1455:Veno-Echo.cpp ****         }
 4601              		.loc 20 1455 13 is_stmt 1 view .LVU1258
1455:Veno-Echo.cpp ****         }
 4602              		.loc 20 1455 30 is_stmt 0 view .LVU1259
 4603 00ac 83ED008A 		vstr.32	s16, [r3]
 4604 00b0 C5E7     		b	.L287
 4605              	.LVL247:
 4606              	.L281:
1455:Veno-Echo.cpp ****         }
 4607              		.loc 20 1455 30 view .LVU1260
 4608              	.LBE1204:
 4609              	.LBB1205:
1479:Veno-Echo.cpp ****             {
 4610              		.loc 20 1479 13 is_stmt 1 view .LVU1261
1479:Veno-Echo.cpp ****             {
 4611              		.loc 20 1479 16 is_stmt 0 view .LVU1262
 4612 00b2 204B     		ldr	r3, .L296+36
1479:Veno-Echo.cpp ****             {
 4613              		.loc 20 1479 13 view .LVU1263
 4614 00b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4615 00b6 7AB9     		cbnz	r2, .L283
1481:Veno-Echo.cpp ****                 {
 4616              		.loc 20 1481 17 is_stmt 1 view .LVU1264
 4617              	.LVL248:
 4618              	.LBB1200:
 4619              	.LBI1200:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4620              		.loc 21 75 3 view .LVU1265
 4621              	.LBB1201:
 4622              		.loc 21 76 5 view .LVU1266
 4623              		.loc 21 76 5 is_stmt 0 view .LVU1267
 4624              	.LBE1201:
 4625              	.LBE1200:
1481:Veno-Echo.cpp ****                 {
 4626              		.loc 20 1481 23 view .LVU1268
 4627 00b8 1F4A     		ldr	r2, .L296+40
1481:Veno-Echo.cpp ****                 {
 4628              		.loc 20 1481 17 view .LVU1269
 4629 00ba 9FED207A 		vldr.32	s14, .L296+44
1481:Veno-Echo.cpp ****                 {
 4630              		.loc 20 1481 23 view .LVU1270
 4631 00be D2ED007A 		vldr.32	s15, [r2]
 4632 00c2 70EE677A 		vsub.f32	s15, s0, s15
 4633              	.LBB1203:
 4634              	.LBB1202:
 4635              		.loc 21 76 31 view .LVU1271
 4636 00c6 F0EEE77A 		vabs.f32	s15, s15
 4637              	.LBE1202:
 4638              	.LBE1203:
1481:Veno-Echo.cpp ****                 {
 4639              		.loc 20 1481 17 view .LVU1272
 4640 00ca F4EEC77A 		vcmpe.f32	s15, s14
 4641 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4642 00d2 CBDD     		ble	.L274
1483:Veno-Echo.cpp ****                 }
 4643              		.loc 20 1483 21 is_stmt 1 view .LVU1273
1483:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 185


 4644              		.loc 20 1483 40 is_stmt 0 view .LVU1274
 4645 00d4 0122     		movs	r2, #1
 4646 00d6 1A70     		strb	r2, [r3]
 4647              	.L283:
1488:Veno-Echo.cpp ****         {
 4648              		.loc 20 1488 9 is_stmt 1 view .LVU1275
1490:Veno-Echo.cpp ****             {
 4649              		.loc 20 1490 13 view .LVU1276
 4650 00d8 DFED197A 		vldr.32	s15, .L296+48
 4651 00dc B4EEE78A 		vcmpe.f32	s16, s15
 4652 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4653 00e4 08D5     		bpl	.L295
1492:Veno-Echo.cpp ****             }
 4654              		.loc 20 1492 17 view .LVU1277
1492:Veno-Echo.cpp ****             }
 4655              		.loc 20 1492 29 is_stmt 0 view .LVU1278
 4656 00e6 174B     		ldr	r3, .L296+52
 4657 00e8 0022     		movs	r2, #0
 4658 00ea 1A70     		strb	r2, [r3]
 4659              	.L285:
1502:Veno-Echo.cpp ****         }  
 4660              		.loc 20 1502 13 is_stmt 1 view .LVU1279
1502:Veno-Echo.cpp ****         }  
 4661              		.loc 20 1502 39 is_stmt 0 view .LVU1280
 4662 00ec 164B     		ldr	r3, .L296+56
 4663 00ee 83ED078A 		vstr.32	s16, [r3, #28]
 4664              	.LBE1205:
 4665              	.LBE1210:
1505:Veno-Echo.cpp **** 
 4666              		.loc 20 1505 1 view .LVU1281
 4667 00f2 BDEC028B 		vldm	sp!, {d8}
 4668              		.cfi_remember_state
 4669              		.cfi_restore 80
 4670              		.cfi_restore 81
 4671              		.cfi_def_cfa_offset 8
 4672 00f6 10BD     		pop	{r4, pc}
 4673              	.L295:
 4674              		.cfi_restore_state
 4675              	.LBB1211:
 4676              	.LBB1206:
1494:Veno-Echo.cpp ****             {
 4677              		.loc 20 1494 18 is_stmt 1 view .LVU1282
 4678 00f8 DFED147A 		vldr.32	s15, .L296+60
 4679 00fc B4EEE78A 		vcmpe.f32	s16, s15
 4680 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4681 0104 F2DD     		ble	.L285
1496:Veno-Echo.cpp ****             }
 4682              		.loc 20 1496 17 view .LVU1283
1496:Veno-Echo.cpp ****             }
 4683              		.loc 20 1496 29 is_stmt 0 view .LVU1284
 4684 0106 0F4B     		ldr	r3, .L296+52
 4685 0108 0122     		movs	r2, #1
 4686 010a 1A70     		strb	r2, [r3]
 4687 010c EEE7     		b	.L285
 4688              	.L297:
 4689 010e 00BF     		.align	2
 4690              	.L296:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 186


 4691 0110 18000000 		.word	.LANCHOR4+24
 4692 0114 00000000 		.word	.LANCHOR7
 4693 0118 00000000 		.word	.LANCHOR76
 4694 011c 00000000 		.word	.LANCHOR77
 4695 0120 00000000 		.word	.LANCHOR78
 4696 0124 00000000 		.word	.LANCHOR83
 4697 0128 00000000 		.word	0
 4698 012c 00000000 		.word	.LANCHOR79
 4699 0130 6F12033D 		.word	1023611503
 4700 0134 00000000 		.word	.LANCHOR80
 4701 0138 00000000 		.word	.LANCHOR81
 4702 013c 0AD7A33B 		.word	1000593162
 4703 0140 6666E63E 		.word	1055286886
 4704 0144 00000000 		.word	.LANCHOR82
 4705 0148 00000000 		.word	.LANCHOR16
 4706 014c CDCC0C3F 		.word	1057803469
 4707              	.LBE1206:
 4708              	.LBE1211:
 4709              		.cfi_endproc
 4710              	.LFE4325:
 4712              		.section	.text._Z8GetModCVv,"ax",%progbits
 4713              		.align	1
 4714              		.p2align 2,,3
 4715              		.global	_Z8GetModCVv
 4716              		.syntax unified
 4717              		.thumb
 4718              		.thumb_func
 4719              		.fpu fpv5-d16
 4721              	_Z8GetModCVv:
 4722              	.LFB4326:
1508:Veno-Echo.cpp ****     //get modulation CV input
 4723              		.loc 20 1508 1 is_stmt 1 view -0
 4724              		.cfi_startproc
 4725              		@ args = 0, pretend = 0, frame = 0
 4726              		@ frame_needed = 0, uses_anonymous_args = 0
1510:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4727              		.loc 20 1510 5 view .LVU1286
1508:Veno-Echo.cpp ****     //get modulation CV input
 4728              		.loc 20 1508 1 is_stmt 0 view .LVU1287
 4729 0000 08B5     		push	{r3, lr}
 4730              		.cfi_def_cfa_offset 8
 4731              		.cfi_offset 3, -8
 4732              		.cfi_offset 14, -4
1510:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4733              		.loc 20 1510 30 view .LVU1288
 4734 0002 0721     		movs	r1, #7
 4735 0004 0648     		ldr	r0, .L300
 4736 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4737              	.LVL249:
 4738 000a 0020     		movs	r0, #0
 4739 000c 9FED051A 		vldr.32	s2, .L300+4
 4740 0010 DFED050A 		vldr.32	s1, .L300+8
 4741 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4742              	.LVL250:
1510:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4743              		.loc 20 1510 23 view .LVU1289
 4744 0018 044B     		ldr	r3, .L300+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 187


 4745 001a 83ED000A 		vstr.32	s0, [r3]
1512:Veno-Echo.cpp **** 
 4746              		.loc 20 1512 1 view .LVU1290
 4747 001e 08BD     		pop	{r3, pc}
 4748              	.L301:
 4749              		.align	2
 4750              	.L300:
 4751 0020 18000000 		.word	.LANCHOR4+24
 4752 0024 00004843 		.word	1128792064
 4753 0028 000048C3 		.word	3276275712
 4754 002c 00000000 		.word	.LANCHOR84
 4755              		.cfi_endproc
 4756              	.LFE4326:
 4758              		.section	.text._Z10Update_Modv,"ax",%progbits
 4759              		.align	1
 4760              		.p2align 2,,3
 4761              		.global	_Z10Update_Modv
 4762              		.syntax unified
 4763              		.thumb
 4764              		.thumb_func
 4765              		.fpu fpv5-d16
 4767              	_Z10Update_Modv:
 4768              	.LFB4327:
1515:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4769              		.loc 20 1515 1 is_stmt 1 view -0
 4770              		.cfi_startproc
 4771              		@ args = 0, pretend = 0, frame = 0
 4772              		@ frame_needed = 0, uses_anonymous_args = 0
1516:Veno-Echo.cpp ****     static float modulation_CV{};
 4773              		.loc 20 1516 5 view .LVU1292
1517:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 4774              		.loc 20 1517 5 view .LVU1293
1518:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4775              		.loc 20 1518 5 view .LVU1294
 4776              	.LVL251:
 4777              	.LBB1212:
 4778              	.LBI1212:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4779              		.loc 23 135 13 view .LVU1295
 4780              	.LBB1213:
 4781              		.loc 23 137 5 view .LVU1296
 4782              	.LBE1213:
 4783              	.LBE1212:
1515:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4784              		.loc 20 1515 1 is_stmt 0 view .LVU1297
 4785 0000 38B5     		push	{r3, r4, r5, lr}
 4786              		.cfi_def_cfa_offset 16
 4787              		.cfi_offset 3, -16
 4788              		.cfi_offset 4, -12
 4789              		.cfi_offset 5, -8
 4790              		.cfi_offset 14, -4
1518:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4791              		.loc 20 1518 13 view .LVU1298
 4792 0002 154A     		ldr	r2, .L304
 4793              	.LBB1220:
 4794              	.LBB1214:
 4795              		.loc 23 137 9 view .LVU1299
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 188


 4796 0004 154C     		ldr	r4, .L304+4
 4797              	.LBE1214:
 4798              	.LBE1220:
 4799              	.LBB1221:
 4800              	.LBB1222:
 4801 0006 164D     		ldr	r5, .L304+8
 4802              	.LBE1222:
 4803              	.LBE1221:
1519:Veno-Echo.cpp ****     //calculate InternalMod
 4804              		.loc 20 1519 13 view .LVU1300
 4805 0008 164B     		ldr	r3, .L304+12
 4806              	.LBB1228:
 4807              	.LBB1215:
 4808              		.loc 23 137 9 view .LVU1301
 4809 000a 94ED007A 		vldr.32	s14, [r4]
 4810              	.LBE1215:
 4811              	.LBE1228:
 4812              	.LBB1229:
 4813              	.LBB1223:
 4814 000e D5ED007A 		vldr.32	s15, [r5]
 4815              	.LBE1223:
 4816              	.LBE1229:
 4817              	.LBB1230:
 4818              	.LBB1216:
 4819              		.loc 23 137 24 view .LVU1302
 4820 0012 92ED006A 		vldr.32	s12, [r2]
 4821              	.LBE1216:
 4822              	.LBE1230:
 4823              	.LBB1231:
 4824              	.LBB1224:
 4825 0016 D3ED006A 		vldr.32	s13, [r3]
 4826              	.LBE1224:
 4827              	.LBE1231:
 4828              	.LBB1232:
 4829              	.LBB1217:
 4830 001a 36EE476A 		vsub.f32	s12, s12, s14
 4831              		.loc 23 137 9 view .LVU1303
 4832 001e DFED125A 		vldr.32	s11, .L304+16
 4833              	.LBE1217:
 4834              	.LBE1232:
 4835              	.LBB1233:
 4836              	.LBB1225:
 4837              		.loc 23 137 24 view .LVU1304
 4838 0022 76EEE76A 		vsub.f32	s13, s13, s15
 4839              	.LBE1225:
 4840              	.LBE1233:
1521:Veno-Echo.cpp ****     //apply modulation to delay lines
 4841              		.loc 20 1521 34 view .LVU1305
 4842 0026 1148     		ldr	r0, .L304+20
 4843              	.LBB1234:
 4844              	.LBB1218:
 4845              		.loc 23 137 9 view .LVU1306
 4846 0028 A6EE257A 		vfma.f32	s14, s12, s11
 4847              	.LBE1218:
 4848              	.LBE1234:
 4849              	.LBB1235:
 4850              	.LBB1226:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 189


 4851 002c E6EEA57A 		vfma.f32	s15, s13, s11
 4852              	.LBE1226:
 4853              	.LBE1235:
 4854              	.LBB1236:
 4855              	.LBB1219:
 4856 0030 84ED007A 		vstr.32	s14, [r4]
 4857              	.LVL252:
 4858              		.loc 23 137 9 view .LVU1307
 4859              	.LBE1219:
 4860              	.LBE1236:
1519:Veno-Echo.cpp ****     //calculate InternalMod
 4861              		.loc 20 1519 5 is_stmt 1 view .LVU1308
 4862              	.LBB1237:
 4863              	.LBI1221:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4864              		.loc 23 135 13 view .LVU1309
 4865              	.LBB1227:
 4866              		.loc 23 137 5 view .LVU1310
 4867              		.loc 23 137 9 is_stmt 0 view .LVU1311
 4868 0034 C5ED007A 		vstr.32	s15, [r5]
 4869              	.LVL253:
 4870              		.loc 23 137 9 view .LVU1312
 4871              	.LBE1227:
 4872              	.LBE1237:
1521:Veno-Echo.cpp ****     //apply modulation to delay lines
 4873              		.loc 20 1521 5 is_stmt 1 view .LVU1313
1521:Veno-Echo.cpp ****     //apply modulation to delay lines
 4874              		.loc 20 1521 34 is_stmt 0 view .LVU1314
 4875 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 4876              	.LVL254:
1523:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4877              		.loc 20 1523 5 is_stmt 1 view .LVU1315
1523:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4878              		.loc 20 1523 40 is_stmt 0 view .LVU1316
 4879 003c 95ED007A 		vldr.32	s14, [r5]
 4880 0040 D4ED007A 		vldr.32	s15, [r4]
 4881              	.LBB1238:
 4882              	.LBB1239:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, float baseTempo, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 190


 4883              		.loc 17 69 43 view .LVU1317
 4884 0044 0A4A     		ldr	r2, .L304+24
 4885              	.LBE1239:
 4886              	.LBE1238:
1523:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4887              		.loc 20 1523 40 view .LVU1318
 4888 0046 E0EE077A 		vfma.f32	s15, s0, s14
 4889              	.LBB1242:
 4890              	.LBI1238:
 4891              		.loc 17 69 6 is_stmt 1 view .LVU1319
 4892              	.LVL255:
 4893              	.LBB1240:
 4894              		.loc 17 69 38 view .LVU1320
 4895              	.LBE1240:
 4896              	.LBE1242:
 4897              	.LBB1243:
 4898              	.LBB1244:
 4899              		.loc 17 69 43 is_stmt 0 view .LVU1321
 4900 004a 0A4B     		ldr	r3, .L304+28
 4901              	.LBE1244:
 4902              	.LBE1243:
 4903              	.LBB1246:
 4904              	.LBB1241:
 4905 004c C2ED3F7A 		vstr.32	s15, [r2, #252]
 4906              	.LBE1241:
 4907              	.LBE1246:
1524:Veno-Echo.cpp **** }
 4908              		.loc 20 1524 5 is_stmt 1 view .LVU1322
 4909              	.LVL256:
 4910              	.LBB1247:
 4911              	.LBI1243:
 4912              		.loc 17 69 6 view .LVU1323
 4913              	.LBB1245:
 4914              		.loc 17 69 38 view .LVU1324
 4915              		.loc 17 69 43 is_stmt 0 view .LVU1325
 4916 0050 C3ED3F7A 		vstr.32	s15, [r3, #252]
 4917              	.LBE1245:
 4918              	.LBE1247:
1525:Veno-Echo.cpp **** 
 4919              		.loc 20 1525 1 view .LVU1326
 4920 0054 38BD     		pop	{r3, r4, r5, pc}
 4921              	.L305:
 4922 0056 00BF     		.align	2
 4923              	.L304:
 4924 0058 00000000 		.word	.LANCHOR84
 4925 005c 00000000 		.word	.LANCHOR85
 4926 0060 00000000 		.word	.LANCHOR86
 4927 0064 00000000 		.word	.LANCHOR67
 4928 0068 0AD7233C 		.word	1008981770
 4929 006c 00000000 		.word	.LANCHOR75
 4930 0070 00000000 		.word	.LANCHOR0
 4931 0074 00000000 		.word	.LANCHOR1
 4932              		.cfi_endproc
 4933              	.LFE4327:
 4935              		.section	.text._Z11UpdateClockv,"ax",%progbits
 4936              		.align	1
 4937              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 191


 4938              		.global	_Z11UpdateClockv
 4939              		.syntax unified
 4940              		.thumb
 4941              		.thumb_func
 4942              		.fpu fpv5-d16
 4944              	_Z11UpdateClockv:
 4945              	.LFB4328:
1528:Veno-Echo.cpp ****     static int divCounter{};
 4946              		.loc 20 1528 1 is_stmt 1 view -0
 4947              		.cfi_startproc
 4948              		@ args = 0, pretend = 0, frame = 0
 4949              		@ frame_needed = 0, uses_anonymous_args = 0
1529:Veno-Echo.cpp ****     ClockIn.Debounce();
 4950              		.loc 20 1529 5 view .LVU1328
1530:Veno-Echo.cpp **** 
 4951              		.loc 20 1530 5 view .LVU1329
1528:Veno-Echo.cpp ****     static int divCounter{};
 4952              		.loc 20 1528 1 is_stmt 0 view .LVU1330
 4953 0000 10B5     		push	{r4, lr}
 4954              		.cfi_def_cfa_offset 8
 4955              		.cfi_offset 4, -8
 4956              		.cfi_offset 14, -4
1530:Veno-Echo.cpp **** 
 4957              		.loc 20 1530 21 view .LVU1331
 4958 0002 0F4C     		ldr	r4, .L315
 4959 0004 2046     		mov	r0, r4
 4960 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 4961              	.LVL257:
1533:Veno-Echo.cpp ****     {   
 4962              		.loc 20 1533 5 is_stmt 1 view .LVU1332
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 192


  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 4963              		.loc 1 69 38 view .LVU1333
1533:Veno-Echo.cpp ****     {   
 4964              		.loc 20 1533 5 is_stmt 0 view .LVU1334
 4965 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4966 000c 7F2B     		cmp	r3, #127
 4967 000e 00D0     		beq	.L314
 4968              	.L306:
1565:Veno-Echo.cpp **** 
 4969              		.loc 20 1565 1 view .LVU1335
 4970 0010 10BD     		pop	{r4, pc}
 4971              	.L314:
1535:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 4972              		.loc 20 1535 9 is_stmt 1 view .LVU1336
1535:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 4973              		.loc 20 1535 20 is_stmt 0 view .LVU1337
 4974 0012 0023     		movs	r3, #0
 4975 0014 0B4C     		ldr	r4, .L315+4
1536:Veno-Echo.cpp ****         if(divCounter == 0)
 4976              		.loc 20 1536 33 view .LVU1338
 4977 0016 0C48     		ldr	r0, .L315+8
1535:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 4978              		.loc 20 1535 20 view .LVU1339
 4979 0018 2360     		str	r3, [r4]
1536:Veno-Echo.cpp ****         if(divCounter == 0)
 4980              		.loc 20 1536 9 is_stmt 1 view .LVU1340
1536:Veno-Echo.cpp ****         if(divCounter == 0)
 4981              		.loc 20 1536 33 is_stmt 0 view .LVU1341
 4982 001a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4983              	.LVL258:
1537:Veno-Echo.cpp ****         {
 4984              		.loc 20 1537 9 is_stmt 1 view .LVU1342
 4985 001e 2368     		ldr	r3, [r4]
 4986 0020 002B     		cmp	r3, #0
 4987 0022 F5D1     		bne	.L306
1539:Veno-Echo.cpp ****             {
 4988              		.loc 20 1539 13 view .LVU1343
1539:Veno-Echo.cpp ****             {
 4989              		.loc 20 1539 29 is_stmt 0 view .LVU1344
 4990 0024 0948     		ldr	r0, .L315+12
 4991 0026 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 4992              	.LVL259:
1539:Veno-Echo.cpp ****             {
 4993              		.loc 20 1539 13 view .LVU1345
 4994 002a 0028     		cmp	r0, #0
 4995 002c F0D0     		beq	.L306
 4996              	.LBB1252:
 4997              	.LBI1252:
1527:Veno-Echo.cpp **** {
 4998              		.loc 20 1527 6 is_stmt 1 view .LVU1346
 4999              	.LBB1253:
1541:Veno-Echo.cpp ****                 
 5000              		.loc 20 1541 17 view .LVU1347
1541:Veno-Echo.cpp ****                 
 5001              		.loc 20 1541 39 is_stmt 0 view .LVU1348
 5002 002e 0748     		ldr	r0, .L315+12
 5003 0030 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 193


 5004              	.LVL260:
 5005 0034 0448     		ldr	r0, .L315+8
 5006              	.LBE1253:
 5007              	.LBE1252:
1565:Veno-Echo.cpp **** 
 5008              		.loc 20 1565 1 view .LVU1349
 5009 0036 BDE81040 		pop	{r4, lr}
 5010              		.cfi_restore 14
 5011              		.cfi_restore 4
 5012              		.cfi_def_cfa_offset 0
 5013              	.LBB1255:
 5014              	.LBB1254:
1541:Veno-Echo.cpp ****                 
 5015              		.loc 20 1541 39 view .LVU1350
 5016 003a FFF7FEBF 		b	_ZN8TempoLED8setTempoEf
 5017              	.LVL261:
 5018              	.L316:
 5019 003e 00BF     		.align	2
 5020              	.L315:
 5021 0040 00000000 		.word	.LANCHOR87
 5022 0044 00000000 		.word	.LANCHOR88
 5023 0048 00000000 		.word	.LANCHOR89
 5024 004c 00000000 		.word	.LANCHOR12
 5025              	.LBE1254:
 5026              	.LBE1255:
 5027              		.cfi_endproc
 5028              	.LFE4328:
 5030              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5031              		.align	1
 5032              		.p2align 2,,3
 5033              		.global	_Z19Update_BaseTempoLEDv
 5034              		.syntax unified
 5035              		.thumb
 5036              		.thumb_func
 5037              		.fpu fpv5-d16
 5039              	_Z19Update_BaseTempoLEDv:
 5040              	.LFB4330:
1699:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5041              		.loc 20 1699 1 is_stmt 1 view -0
 5042              		.cfi_startproc
 5043              		@ args = 0, pretend = 0, frame = 0
 5044              		@ frame_needed = 0, uses_anonymous_args = 0
1700:Veno-Echo.cpp **** 
 5045              		.loc 20 1700 5 view .LVU1352
1700:Veno-Echo.cpp **** 
 5046              		.loc 20 1700 25 is_stmt 0 view .LVU1353
 5047 0000 1648     		ldr	r0, .L321
1699:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5048              		.loc 20 1699 1 view .LVU1354
 5049 0002 08B5     		push	{r3, lr}
 5050              		.cfi_def_cfa_offset 8
 5051              		.cfi_offset 3, -8
 5052              		.cfi_offset 14, -4
1700:Veno-Echo.cpp **** 
 5053              		.loc 20 1700 25 view .LVU1355
 5054 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5055              	.LVL262:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 194


1702:Veno-Echo.cpp **** 
 5056              		.loc 20 1702 5 is_stmt 1 view .LVU1356
1704:Veno-Echo.cpp ****     {
 5057              		.loc 20 1704 5 view .LVU1357
1704:Veno-Echo.cpp ****     {
 5058              		.loc 20 1704 27 is_stmt 0 view .LVU1358
 5059 0008 1448     		ldr	r0, .L321
 5060 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5061              	.LVL263:
1704:Veno-Echo.cpp ****     {
 5062              		.loc 20 1704 5 view .LVU1359
 5063 000e B8B9     		cbnz	r0, .L318
 5064 0010 134B     		ldr	r3, .L321+4
 5065 0012 1B68     		ldr	r3, [r3]
 5066              	.L319:
1709:Veno-Echo.cpp ****     //update base phase for both delay lines
 5067              		.loc 20 1709 5 is_stmt 1 view .LVU1360
 5068              	.LVL264:
 5069              	.LBB1256:
 5070              	.LBI1256:
  71:LEDs.h        **** 
 5071              		.loc 14 71 7 view .LVU1361
 5072              	.LBB1257:
  71:LEDs.h        **** 
 5073              		.loc 14 71 20 view .LVU1362
  71:LEDs.h        **** 
 5074              		.loc 14 71 20 is_stmt 0 view .LVU1363
 5075              	.LBE1257:
 5076              	.LBE1256:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 195


  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5077              		.loc 15 92 31 is_stmt 1 view .LVU1364
 5078              	.LBB1259:
 5079              	.LBB1258:
  71:LEDs.h        **** 
 5080              		.loc 14 71 41 is_stmt 0 view .LVU1365
 5081 0014 114A     		ldr	r2, .L321
 5082              	.LBE1258:
 5083              	.LBE1259:
1709:Veno-Echo.cpp ****     //update base phase for both delay lines
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 196


 5084              		.loc 20 1709 50 view .LVU1366
 5085 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1709:Veno-Echo.cpp ****     //update base phase for both delay lines
 5086              		.loc 20 1709 73 view .LVU1367
 5087 001a 07EE903A 		vmov	s15, r3	@ int
1709:Veno-Echo.cpp ****     //update base phase for both delay lines
 5088              		.loc 20 1709 55 view .LVU1368
 5089 001e DFED116A 		vldr.32	s13, .L321+8
1709:Veno-Echo.cpp ****     //update base phase for both delay lines
 5090              		.loc 20 1709 50 view .LVU1369
 5091 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1709:Veno-Echo.cpp ****     //update base phase for both delay lines
 5092              		.loc 20 1709 73 view .LVU1370
 5093 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5094              	.LBB1260:
 5095              	.LBB1261:
  70:DelayMulti.h  **** void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5096              		.loc 17 71 54 view .LVU1371
 5097 002a 0F4A     		ldr	r2, .L321+12
 5098              	.LBE1261:
 5099              	.LBE1260:
1709:Veno-Echo.cpp ****     //update base phase for both delay lines
 5100              		.loc 20 1709 50 view .LVU1372
 5101 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5102              	.LBB1263:
 5103              	.LBB1264:
 5104              		.loc 17 71 54 view .LVU1373
 5105 0030 0E4B     		ldr	r3, .L321+16
 5106              	.LBE1264:
 5107              	.LBE1263:
1709:Veno-Echo.cpp ****     //update base phase for both delay lines
 5108              		.loc 20 1709 55 view .LVU1374
 5109 0032 A7EEA67A 		vfma.f32	s14, s15, s13
 5110              	.LVL265:
1711:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5111              		.loc 20 1711 5 is_stmt 1 view .LVU1375
 5112              	.LBB1266:
 5113              	.LBI1260:
 5114              		.loc 17 71 6 view .LVU1376
 5115              	.LBB1262:
 5116              		.loc 17 71 43 view .LVU1377
 5117              		.loc 17 71 54 is_stmt 0 view .LVU1378
 5118 0036 82ED487A 		vstr.32	s14, [r2, #288]
 5119              	.LBE1262:
 5120              	.LBE1266:
1712:Veno-Echo.cpp **** 
 5121              		.loc 20 1712 5 is_stmt 1 view .LVU1379
 5122              	.LVL266:
 5123              	.LBB1267:
 5124              	.LBI1263:
 5125              		.loc 17 71 6 view .LVU1380
 5126              	.LBB1265:
 5127              		.loc 17 71 43 view .LVU1381
 5128              		.loc 17 71 54 is_stmt 0 view .LVU1382
 5129 003a 83ED487A 		vstr.32	s14, [r3, #288]
 5130              	.LVL267:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 197


 5131              		.loc 17 71 54 view .LVU1383
 5132              	.LBE1265:
 5133              	.LBE1267:
1725:Veno-Echo.cpp **** 
 5134              		.loc 20 1725 1 view .LVU1384
 5135 003e 08BD     		pop	{r3, pc}
 5136              	.LVL268:
 5137              	.L318:
1706:Veno-Echo.cpp ****     }
 5138              		.loc 20 1706 9 is_stmt 1 view .LVU1385
1706:Veno-Echo.cpp ****     }
 5139              		.loc 20 1706 38 is_stmt 0 view .LVU1386
 5140 0040 0749     		ldr	r1, .L321+4
1706:Veno-Echo.cpp ****     }
 5141              		.loc 20 1706 43 view .LVU1387
 5142 0042 0B4B     		ldr	r3, .L321+20
1706:Veno-Echo.cpp ****     }
 5143              		.loc 20 1706 38 view .LVU1388
 5144 0044 0A68     		ldr	r2, [r1]
 5145 0046 0132     		adds	r2, r2, #1
1706:Veno-Echo.cpp ****     }
 5146              		.loc 20 1706 43 view .LVU1389
 5147 0048 83FB0203 		smull	r0, r3, r3, r2
 5148 004c A3EBE273 		sub	r3, r3, r2, asr #31
 5149 0050 03EB4303 		add	r3, r3, r3, lsl #1
 5150 0054 A2EB4303 		sub	r3, r2, r3, lsl #1
1706:Veno-Echo.cpp ****     }
 5151              		.loc 20 1706 22 view .LVU1390
 5152 0058 0B60     		str	r3, [r1]
 5153 005a DBE7     		b	.L319
 5154              	.L322:
 5155              		.align	2
 5156              	.L321:
 5157 005c 00000000 		.word	.LANCHOR89
 5158 0060 00000000 		.word	.LANCHOR90
 5159 0064 920A863F 		.word	1065749138
 5160 0068 00000000 		.word	.LANCHOR0
 5161 006c 00000000 		.word	.LANCHOR1
 5162 0070 ABAAAA2A 		.word	715827883
 5163              		.cfi_endproc
 5164              	.LFE4330:
 5166              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5167              		.align	1
 5168              		.p2align 2,,3
 5169              		.global	_Z13ApplySettingsRK8Settings
 5170              		.syntax unified
 5171              		.thumb
 5172              		.thumb_func
 5173              		.fpu fpv5-d16
 5175              	_Z13ApplySettingsRK8Settings:
 5176              	.LVL269:
 5177              	.LFB4331:
1729:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5178              		.loc 20 1729 1 is_stmt 1 view -0
 5179              		.cfi_startproc
 5180              		@ args = 0, pretend = 0, frame = 0
 5181              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 198


1730:Veno-Echo.cpp ****     {
 5182              		.loc 20 1730 5 view .LVU1392
 5183 0000 9FEDCF7A 		vldr.32	s14, .L391
1730:Veno-Echo.cpp ****     {
 5184              		.loc 20 1730 17 is_stmt 0 view .LVU1393
 5185 0004 D0ED007A 		vldr.32	s15, [r0]
1730:Veno-Echo.cpp ****     {
 5186              		.loc 20 1730 5 view .LVU1394
 5187 0008 F4EEC77A 		vcmpe.f32	s15, s14
1729:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5188              		.loc 20 1729 1 view .LVU1395
 5189 000c 38B5     		push	{r3, r4, r5, lr}
 5190              		.cfi_def_cfa_offset 16
 5191              		.cfi_offset 3, -16
 5192              		.cfi_offset 4, -12
 5193              		.cfi_offset 5, -8
 5194              		.cfi_offset 14, -4
1730:Veno-Echo.cpp ****     {
 5195              		.loc 20 1730 5 view .LVU1396
 5196 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1729:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5197              		.loc 20 1729 1 view .LVU1397
 5198 0012 0446     		mov	r4, r0
 5199              	.LBB1268:
 5200              	.LBB1269:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5201              		.loc 20 70 28 view .LVU1398
 5202 0014 CB4B     		ldr	r3, .L391+4
 5203              	.LBE1269:
 5204              	.LBE1268:
1730:Veno-Echo.cpp ****     {
 5205              		.loc 20 1730 5 view .LVU1399
 5206 0016 C0F2FD80 		blt	.L324
1730:Veno-Echo.cpp ****     {
 5207              		.loc 20 1730 43 discriminator 1 view .LVU1400
 5208 001a 9FEDCB7A 		vldr.32	s14, .L391+8
 5209 001e F4EEC77A 		vcmpe.f32	s15, s14
 5210 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5211 0026 00F2F580 		bhi	.L324
1732:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5212              		.loc 20 1732 9 is_stmt 1 view .LVU1401
 5213              	.LVL270:
 5214              	.LBB1283:
 5215              	.LBI1268:
  68:Veno-Echo.cpp ****     {
 5216              		.loc 20 68 10 view .LVU1402
 5217              	.LBB1281:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5218              		.loc 20 70 9 view .LVU1403
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5219              		.loc 20 70 28 is_stmt 0 view .LVU1404
 5220 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5221              	.LVL271:
 5222              	.LBB1270:
 5223              	.LBI1270:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5224              		.loc 21 75 3 is_stmt 1 view .LVU1405
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 199


 5225              	.LBB1271:
 5226              		.loc 21 76 5 view .LVU1406
 5227              		.loc 21 76 5 is_stmt 0 view .LVU1407
 5228              	.LBE1271:
 5229              	.LBE1270:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5230              		.loc 20 70 53 view .LVU1408
 5231 002e 9FEDC76A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5232              		.loc 20 70 15 view .LVU1409
 5233 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5234              		.loc 20 70 53 view .LVU1410
 5235 0036 27EE067A 		vmul.f32	s14, s14, s12
 5236              	.LBB1273:
 5237              	.LBB1272:
 5238              		.loc 21 76 31 view .LVU1411
 5239 003a F0EEE66A 		vabs.f32	s13, s13
 5240              	.LBE1272:
 5241              	.LBE1273:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5242              		.loc 20 70 9 view .LVU1412
 5243 003e F4EEC76A 		vcmpe.f32	s13, s14
 5244 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5245 0046 0FDD     		ble	.L327
  74:Veno-Echo.cpp ****             //del -> Reset();
 5246              		.loc 20 74 29 view .LVU1413
 5247 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5248              	.LBB1274:
 5249              	.LBB1275:
 5250              		.loc 19 72 9 view .LVU1414
 5251 004c C04D     		ldr	r5, .L391+16
 5252              	.LBE1275:
 5253              	.LBE1274:
 5254              	.LBE1281:
 5255              	.LBE1283:
1732:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5256              		.loc 20 1732 33 view .LVU1415
 5257 004e 1968     		ldr	r1, [r3]
 5258              	.LBB1284:
 5259              	.LBB1282:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5260              		.loc 20 73 13 is_stmt 1 view .LVU1416
 5261              	.LBB1278:
 5262              	.LBB1276:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5263              		.loc 19 71 9 is_stmt 0 view .LVU1417
 5264 0050 0020     		movs	r0, #0
 5265              	.LVL272:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5266              		.loc 19 71 9 view .LVU1418
 5267              	.LBE1276:
 5268              	.LBE1278:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5269              		.loc 20 73 27 view .LVU1419
 5270 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 200


 5271              		.loc 20 74 13 is_stmt 1 view .LVU1420
 5272              	.LVL273:
 5273              	.LBB1279:
 5274              	.LBI1274:
  69:delayline_reverse.h ****     {
 5275              		.loc 19 69 17 view .LVU1421
  69:delayline_reverse.h ****     {
 5276              		.loc 19 69 17 is_stmt 0 view .LVU1422
 5277              	.LBE1279:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5278              		.loc 20 74 29 view .LVU1423
 5279 0056 17EE102A 		vmov	r2, s14	@ int
 5280              	.LBB1280:
 5281              	.LBB1277:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5282              		.loc 19 71 9 view .LVU1424
 5283 005a 0860     		str	r0, [r1]	@ float
 5284 005c D4ED007A 		vldr.32	s15, [r4]
 5285              	.LVL274:
 5286              		.loc 19 72 9 view .LVU1425
 5287 0060 AA42     		cmp	r2, r5
 5288 0062 28BF     		it	cs
 5289 0064 2A46     		movcs	r2, r5
 5290 0066 0A61     		str	r2, [r1, #16]
 5291              	.LVL275:
 5292              	.L327:
 5293              		.loc 19 72 9 view .LVU1426
 5294              	.LBE1277:
 5295              	.LBE1280:
 5296              	.LBE1282:
 5297              	.LBE1284:
1733:Veno-Echo.cpp ****     }
 5298              		.loc 20 1733 9 is_stmt 1 view .LVU1427
 5299              	.LBB1285:
 5300              	.LBI1285:
  68:Veno-Echo.cpp ****     {
 5301              		.loc 20 68 10 view .LVU1428
 5302              	.LBB1286:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5303              		.loc 20 70 9 view .LVU1429
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5304              		.loc 20 70 28 is_stmt 0 view .LVU1430
 5305 0068 BA4B     		ldr	r3, .L391+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5306              		.loc 20 70 53 view .LVU1431
 5307 006a 9FEDB86A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5308              		.loc 20 70 28 view .LVU1432
 5309 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5310              	.LVL276:
 5311              	.LBB1287:
 5312              	.LBI1287:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5313              		.loc 21 75 3 is_stmt 1 view .LVU1433
 5314              	.LBB1288:
 5315              		.loc 21 76 5 view .LVU1434
 5316              		.loc 21 76 5 is_stmt 0 view .LVU1435
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 201


 5317              	.LBE1288:
 5318              	.LBE1287:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5319              		.loc 20 70 15 view .LVU1436
 5320 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5321              		.loc 20 70 53 view .LVU1437
 5322 0076 27EE067A 		vmul.f32	s14, s14, s12
 5323              	.LBB1290:
 5324              	.LBB1289:
 5325              		.loc 21 76 31 view .LVU1438
 5326 007a F0EEE66A 		vabs.f32	s13, s13
 5327              	.LBE1289:
 5328              	.LBE1290:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5329              		.loc 20 70 9 view .LVU1439
 5330 007e F4EEC76A 		vcmpe.f32	s13, s14
 5331 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5332 0086 00F34B81 		bgt	.L387
 5333              	.LVL277:
 5334              	.L330:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5335              		.loc 20 70 9 view .LVU1440
 5336              	.LBE1286:
 5337              	.LBE1285:
1741:Veno-Echo.cpp ****     {
 5338              		.loc 20 1741 5 is_stmt 1 view .LVU1441
 5339 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1741:Veno-Echo.cpp ****     {
 5340              		.loc 20 1741 17 is_stmt 0 view .LVU1442
 5341 008e 94ED010A 		vldr.32	s0, [r4, #4]
1741:Veno-Echo.cpp ****     {
 5342              		.loc 20 1741 5 view .LVU1443
 5343 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5344 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5345 009a 06DB     		blt	.L335
1741:Veno-Echo.cpp ****     {
 5346              		.loc 20 1741 35 discriminator 1 view .LVU1444
 5347 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5348 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5349 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5350 00a8 01D9     		bls	.L385
 5351              	.L335:
1747:Veno-Echo.cpp ****     }
 5352              		.loc 20 1747 9 is_stmt 1 view .LVU1445
1747:Veno-Echo.cpp ****     }
 5353              		.loc 20 1747 30 is_stmt 0 view .LVU1446
 5354 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5355              	.L385:
 5356 00ae AA48     		ldr	r0, .L391+24
 5357 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5358              	.LVL278:
1750:Veno-Echo.cpp ****     {
 5359              		.loc 20 1750 5 is_stmt 1 view .LVU1447
1750:Veno-Echo.cpp ****     {
 5360              		.loc 20 1750 17 is_stmt 0 view .LVU1448
 5361 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 202


1750:Veno-Echo.cpp ****     {
 5362              		.loc 20 1750 5 view .LVU1449
 5363 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5364 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5365 00c0 C0F22B81 		blt	.L382
1750:Veno-Echo.cpp ****     {
 5366              		.loc 20 1750 42 discriminator 1 view .LVU1450
 5367 00c4 DFEDA56A 		vldr.32	s13, .L391+28
1756:Veno-Echo.cpp ****     }
 5368              		.loc 20 1756 18 discriminator 1 view .LVU1451
 5369 00c8 9FEDA57A 		vldr.32	s14, .L391+32
 5370 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5371 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5372 00d4 88BF     		it	hi
 5373 00d6 F0EE477A 		vmovhi.f32	s15, s14
 5374              	.L339:
1759:Veno-Echo.cpp ****     {
 5375              		.loc 20 1759 17 view .LVU1452
 5376 00da 94ED030A 		vldr.32	s0, [r4, #12]
1759:Veno-Echo.cpp ****     {
 5377              		.loc 20 1759 5 view .LVU1453
 5378 00de 9FEDA17A 		vldr.32	s14, .L391+36
 5379 00e2 A14B     		ldr	r3, .L391+40
 5380 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 5381              	.LBB1301:
 5382              	.LBB1302:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5383              		.loc 8 60 20 view .LVU1454
 5384 00e8 A04D     		ldr	r5, .L391+44
 5385 00ea C3ED007A 		vstr.32	s15, [r3]
 5386              	.LBE1302:
 5387              	.LBE1301:
1759:Veno-Echo.cpp ****     {
 5388              		.loc 20 1759 5 is_stmt 1 view .LVU1455
 5389 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5390 00f2 06DB     		blt	.L342
1759:Veno-Echo.cpp ****     {
 5391              		.loc 20 1759 40 is_stmt 0 discriminator 1 view .LVU1456
 5392 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 5393 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 5394 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5395 0100 01D9     		bls	.L386
 5396              	.L342:
1765:Veno-Echo.cpp ****     }
 5397              		.loc 20 1765 9 is_stmt 1 view .LVU1457
 5398              	.LVL279:
 5399              	.LBB1303:
 5400              	.LBI1303:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 5401              		.loc 8 58 17 view .LVU1458
 5402              	.LBB1304:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5403              		.loc 8 60 9 view .LVU1459
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5404              		.loc 8 60 20 is_stmt 0 view .LVU1460
 5405 0102 9FED9B0A 		vldr.32	s0, .L391+48
 5406              	.LVL280:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 203


 5407              	.L386:
 5408              		.loc 8 61 34 view .LVU1461
 5409 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5410              		.loc 8 60 20 view .LVU1462
 5411 0108 85ED020A 		vstr.32	s0, [r5, #8]
 5412              		.loc 8 61 9 is_stmt 1 view .LVU1463
 5413              		.loc 8 61 34 is_stmt 0 view .LVU1464
 5414 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 5415              	.LVL281:
 5416              	.LBE1304:
 5417              	.LBE1303:
1768:Veno-Echo.cpp ****     {
 5418              		.loc 20 1768 5 view .LVU1465
 5419 0110 DFED987A 		vldr.32	s15, .L391+52
 5420              	.LBB1306:
 5421              	.LBB1305:
 5422              		.loc 8 61 20 view .LVU1466
 5423 0114 85ED060A 		vstr.32	s0, [r5, #24]
 5424              	.LBE1305:
 5425              	.LBE1306:
1768:Veno-Echo.cpp ****     {
 5426              		.loc 20 1768 5 is_stmt 1 view .LVU1467
1768:Veno-Echo.cpp ****     {
 5427              		.loc 20 1768 17 is_stmt 0 view .LVU1468
 5428 0118 94ED050A 		vldr.32	s0, [r4, #20]
1768:Veno-Echo.cpp ****     {
 5429              		.loc 20 1768 5 view .LVU1469
 5430 011c B4EEE70A 		vcmpe.f32	s0, s15
 5431 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5432 0124 07DB     		blt	.L346
1768:Veno-Echo.cpp ****     {
 5433              		.loc 20 1768 40 discriminator 1 view .LVU1470
 5434 0126 DFED947A 		vldr.32	s15, .L391+56
 5435 012a B4EEE70A 		vcmpe.f32	s0, s15
 5436 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5437 0132 40F2DF80 		bls	.L388
 5438              	.L346:
1777:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5439              		.loc 20 1777 9 is_stmt 1 view .LVU1471
1777:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5440              		.loc 20 1777 22 is_stmt 0 view .LVU1472
 5441 0136 9FED900A 		vldr.32	s0, .L391+56
 5442 013a 9048     		ldr	r0, .L391+60
 5443 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5444              	.LVL282:
1778:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5445              		.loc 20 1778 9 is_stmt 1 view .LVU1473
1778:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5446              		.loc 20 1778 22 is_stmt 0 view .LVU1474
 5447 0140 9FED8D0A 		vldr.32	s0, .L391+56
 5448 0144 8E48     		ldr	r0, .L391+64
 5449 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5450              	.LVL283:
1779:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5451              		.loc 20 1779 9 is_stmt 1 view .LVU1475
1779:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 204


 5452              		.loc 20 1779 27 is_stmt 0 view .LVU1476
 5453 014a 9FED8B0A 		vldr.32	s0, .L391+56
 5454 014e 8D48     		ldr	r0, .L391+68
 5455 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5456              	.LVL284:
1780:Veno-Echo.cpp ****     }
 5457              		.loc 20 1780 9 is_stmt 1 view .LVU1477
1780:Veno-Echo.cpp ****     }
 5458              		.loc 20 1780 27 is_stmt 0 view .LVU1478
 5459 0154 9FED880A 		vldr.32	s0, .L391+56
 5460 0158 8B48     		ldr	r0, .L391+72
 5461 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5462              	.LVL285:
 5463              	.L349:
1783:Veno-Echo.cpp ****     {
 5464              		.loc 20 1783 5 is_stmt 1 view .LVU1479
1783:Veno-Echo.cpp ****     {
 5465              		.loc 20 1783 17 is_stmt 0 view .LVU1480
 5466 015e 94ED040A 		vldr.32	s0, [r4, #16]
1783:Veno-Echo.cpp ****     {
 5467              		.loc 20 1783 5 view .LVU1481
 5468 0162 DFED8A7A 		vldr.32	s15, .L391+76
 5469 0166 B4EEE70A 		vcmpe.f32	s0, s15
 5470 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5471 016e 07DB     		blt	.L350
1783:Veno-Echo.cpp ****     {
 5472              		.loc 20 1783 40 discriminator 1 view .LVU1482
 5473 0170 DFED877A 		vldr.32	s15, .L391+80
 5474 0174 B4EEE70A 		vcmpe.f32	s0, s15
 5475 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5476 017c 40F2A780 		bls	.L389
 5477              	.L350:
1792:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5478              		.loc 20 1792 9 is_stmt 1 view .LVU1483
1792:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5479              		.loc 20 1792 22 is_stmt 0 view .LVU1484
 5480 0180 9FED840A 		vldr.32	s0, .L391+84
 5481 0184 8448     		ldr	r0, .L391+88
 5482 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5483              	.LVL286:
1793:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5484              		.loc 20 1793 9 is_stmt 1 view .LVU1485
1793:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5485              		.loc 20 1793 22 is_stmt 0 view .LVU1486
 5486 018a 9FED820A 		vldr.32	s0, .L391+84
 5487 018e 8348     		ldr	r0, .L391+92
 5488 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5489              	.LVL287:
1794:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5490              		.loc 20 1794 9 is_stmt 1 view .LVU1487
1794:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5491              		.loc 20 1794 27 is_stmt 0 view .LVU1488
 5492 0194 9FED7F0A 		vldr.32	s0, .L391+84
 5493 0198 8148     		ldr	r0, .L391+96
 5494 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5495              	.LVL288:
1795:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 205


 5496              		.loc 20 1795 9 is_stmt 1 view .LVU1489
1795:Veno-Echo.cpp **** 
 5497              		.loc 20 1795 27 is_stmt 0 view .LVU1490
 5498 019e 9FED7D0A 		vldr.32	s0, .L391+84
 5499 01a2 8048     		ldr	r0, .L391+100
 5500 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5501              	.LVL289:
 5502              	.L353:
1799:Veno-Echo.cpp ****     {
 5503              		.loc 20 1799 5 is_stmt 1 view .LVU1491
1799:Veno-Echo.cpp ****     {
 5504              		.loc 20 1799 17 is_stmt 0 view .LVU1492
 5505 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1799:Veno-Echo.cpp ****     {
 5506              		.loc 20 1799 5 view .LVU1493
 5507 01ac B5EEC00A 		vcmpe.f32	s0, #0
 5508 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5509 01b4 06DB     		blt	.L354
1799:Veno-Echo.cpp ****     {
 5510              		.loc 20 1799 38 discriminator 1 view .LVU1494
 5511 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 5512 01ba B4EEE70A 		vcmpe.f32	s0, s15
 5513 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5514 01c2 5DD9     		bls	.L390
 5515              	.L354:
1813:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5516              		.loc 20 1813 9 is_stmt 1 view .LVU1495
1813:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5517              		.loc 20 1813 26 is_stmt 0 view .LVU1496
 5518 01c4 9FED660A 		vldr.32	s0, .L391+32
 5519 01c8 6E48     		ldr	r0, .L391+68
 5520 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5521              	.LVL290:
1814:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5522              		.loc 20 1814 9 is_stmt 1 view .LVU1497
1814:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5523              		.loc 20 1814 26 is_stmt 0 view .LVU1498
 5524 01ce 9FED640A 		vldr.32	s0, .L391+32
 5525 01d2 7348     		ldr	r0, .L391+96
 5526 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5527              	.LVL291:
1815:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5528              		.loc 20 1815 9 is_stmt 1 view .LVU1499
1815:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5529              		.loc 20 1815 26 is_stmt 0 view .LVU1500
 5530 01d8 9FED610A 		vldr.32	s0, .L391+32
 5531 01dc 6A48     		ldr	r0, .L391+72
 5532 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5533              	.LVL292:
1816:Veno-Echo.cpp ****     }
 5534              		.loc 20 1816 9 is_stmt 1 view .LVU1501
1816:Veno-Echo.cpp ****     }
 5535              		.loc 20 1816 26 is_stmt 0 view .LVU1502
 5536 01e2 9FED5F0A 		vldr.32	s0, .L391+32
 5537 01e6 6F48     		ldr	r0, .L391+100
 5538 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5539              	.LVL293:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 206


 5540              	.L357:
1819:Veno-Echo.cpp ****     {
 5541              		.loc 20 1819 5 is_stmt 1 view .LVU1503
1819:Veno-Echo.cpp ****     {
 5542              		.loc 20 1819 16 is_stmt 0 view .LVU1504
 5543 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1819:Veno-Echo.cpp ****     {
 5544              		.loc 20 1819 5 view .LVU1505
 5545 01f0 9FED6D7A 		vldr.32	s14, .L391+104
1825:Veno-Echo.cpp ****     }
 5546              		.loc 20 1825 21 view .LVU1506
 5547 01f4 6D4B     		ldr	r3, .L391+108
1819:Veno-Echo.cpp ****     {
 5548              		.loc 20 1819 5 view .LVU1507
 5549 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 5550 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5551 01fe 3CD4     		bmi	.L361
1823:Veno-Echo.cpp ****     {
 5552              		.loc 20 1823 14 is_stmt 1 view .LVU1508
 5553 0200 9FED6B7A 		vldr.32	s14, .L391+112
 5554 0204 F4EEC77A 		vcmpe.f32	s15, s14
 5555 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5556 020c 35DD     		ble	.L361
1825:Veno-Echo.cpp ****     }
 5557              		.loc 20 1825 9 view .LVU1509
1825:Veno-Echo.cpp ****     }
 5558              		.loc 20 1825 21 is_stmt 0 view .LVU1510
 5559 020e 0122     		movs	r2, #1
 5560 0210 1A70     		strb	r2, [r3]
1832:Veno-Echo.cpp **** 
 5561              		.loc 20 1832 1 view .LVU1511
 5562 0212 38BD     		pop	{r3, r4, r5, pc}
 5563              	.LVL294:
 5564              	.L324:
1737:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5565              		.loc 20 1737 9 is_stmt 1 view .LVU1512
 5566              	.LBB1307:
 5567              	.LBI1307:
  68:Veno-Echo.cpp ****     {
 5568              		.loc 20 68 10 view .LVU1513
 5569              	.LBB1308:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5570              		.loc 20 70 9 view .LVU1514
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5571              		.loc 20 70 28 is_stmt 0 view .LVU1515
 5572 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 5573              	.LVL295:
 5574              	.LBB1309:
 5575              	.LBI1309:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5576              		.loc 21 75 3 is_stmt 1 view .LVU1516
 5577              	.LBB1310:
 5578              		.loc 21 76 5 view .LVU1517
 5579              		.loc 21 76 5 is_stmt 0 view .LVU1518
 5580              	.LBE1310:
 5581              	.LBE1309:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 207


 5582              		.loc 20 70 15 view .LVU1519
 5583 0218 DFED666A 		vldr.32	s13, .L391+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5584              		.loc 20 70 53 view .LVU1520
 5585 021c 9FED4B6A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5586              		.loc 20 70 15 view .LVU1521
 5587 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5588              		.loc 20 70 53 view .LVU1522
 5589 0224 67EE867A 		vmul.f32	s15, s15, s12
 5590              	.LBB1312:
 5591              	.LBB1311:
 5592              		.loc 21 76 31 view .LVU1523
 5593 0228 B0EEC77A 		vabs.f32	s14, s14
 5594              	.LBE1311:
 5595              	.LBE1312:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5596              		.loc 20 70 9 view .LVU1524
 5597 022c B4EEE77A 		vcmpe.f32	s14, s15
 5598 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5599 0234 06DD     		ble	.L331
 5600              	.LBE1308:
 5601              	.LBE1307:
1737:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5602              		.loc 20 1737 33 view .LVU1525
 5603 0236 1A68     		ldr	r2, [r3]
 5604              	.LBB1318:
 5605              	.LBB1317:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5606              		.loc 20 73 13 is_stmt 1 view .LVU1526
 5607              	.LBB1313:
 5608              	.LBB1314:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5609              		.loc 19 71 9 is_stmt 0 view .LVU1527
 5610 0238 0021     		movs	r1, #0
 5611              		.loc 19 72 9 view .LVU1528
 5612 023a 5F48     		ldr	r0, .L391+120
 5613              	.LVL296:
 5614              		.loc 19 72 9 view .LVU1529
 5615              	.LBE1314:
 5616              	.LBE1313:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5617              		.loc 20 73 27 view .LVU1530
 5618 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5619              		.loc 20 74 13 is_stmt 1 view .LVU1531
 5620              	.LVL297:
 5621              	.LBB1316:
 5622              	.LBI1313:
  69:delayline_reverse.h ****     {
 5623              		.loc 19 69 17 view .LVU1532
 5624              	.LBB1315:
 5625              		.loc 19 72 9 is_stmt 0 view .LVU1533
 5626 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5627              		.loc 19 71 9 view .LVU1534
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 208


 5628 0242 1160     		str	r1, [r2]	@ float
 5629              	.LVL298:
 5630              	.L331:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5631              		.loc 19 71 9 view .LVU1535
 5632              	.LBE1315:
 5633              	.LBE1316:
 5634              	.LBE1317:
 5635              	.LBE1318:
1738:Veno-Echo.cpp ****     }
 5636              		.loc 20 1738 9 is_stmt 1 view .LVU1536
 5637              	.LBB1319:
 5638              	.LBI1319:
  68:Veno-Echo.cpp ****     {
 5639              		.loc 20 68 10 view .LVU1537
 5640              	.LBB1320:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5641              		.loc 20 70 9 view .LVU1538
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5642              		.loc 20 70 28 is_stmt 0 view .LVU1539
 5643 0244 434B     		ldr	r3, .L391+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5644              		.loc 20 70 15 view .LVU1540
 5645 0246 DFED5B6A 		vldr.32	s13, .L391+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5646              		.loc 20 70 28 view .LVU1541
 5647 024a D3ED017A 		vldr.32	s15, [r3, #4]
 5648              	.LVL299:
 5649              	.LBB1321:
 5650              	.LBI1321:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5651              		.loc 21 75 3 is_stmt 1 view .LVU1542
 5652              	.LBB1322:
 5653              		.loc 21 76 5 view .LVU1543
 5654              		.loc 21 76 5 is_stmt 0 view .LVU1544
 5655              	.LBE1322:
 5656              	.LBE1321:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5657              		.loc 20 70 53 view .LVU1545
 5658 024e 9FED3F6A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5659              		.loc 20 70 15 view .LVU1546
 5660 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5661              		.loc 20 70 53 view .LVU1547
 5662 0256 67EE867A 		vmul.f32	s15, s15, s12
 5663              	.LBB1324:
 5664              	.LBB1323:
 5665              		.loc 21 76 31 view .LVU1548
 5666 025a B0EEC77A 		vabs.f32	s14, s14
 5667              	.LBE1323:
 5668              	.LBE1324:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5669              		.loc 20 70 9 view .LVU1549
 5670 025e B4EEE77A 		vcmpe.f32	s14, s15
 5671 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5672 0266 7FF710AF 		ble	.L330
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 209


 5673              	.LBE1320:
 5674              	.LBE1319:
1738:Veno-Echo.cpp ****     }
 5675              		.loc 20 1738 33 view .LVU1550
 5676 026a 1A68     		ldr	r2, [r3]
 5677              	.LBB1330:
 5678              	.LBB1329:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5679              		.loc 20 73 13 is_stmt 1 view .LVU1551
 5680              	.LBB1325:
 5681              	.LBB1326:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5682              		.loc 19 71 9 is_stmt 0 view .LVU1552
 5683 026c 0021     		movs	r1, #0
 5684              		.loc 19 72 9 view .LVU1553
 5685 026e 5248     		ldr	r0, .L391+120
 5686              	.LBE1326:
 5687              	.LBE1325:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5688              		.loc 20 73 27 view .LVU1554
 5689 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5690              		.loc 20 74 13 is_stmt 1 view .LVU1555
 5691              	.LVL300:
 5692              	.LBB1328:
 5693              	.LBI1325:
  69:delayline_reverse.h ****     {
 5694              		.loc 19 69 17 view .LVU1556
 5695              	.LBB1327:
 5696              		.loc 19 72 9 is_stmt 0 view .LVU1557
 5697 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5698              		.loc 19 71 9 view .LVU1558
 5699 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 5700              		.loc 19 73 5 view .LVU1559
 5701 0278 07E7     		b	.L330
 5702              	.LVL301:
 5703              	.L361:
 5704              		.loc 19 73 5 view .LVU1560
 5705              	.LBE1327:
 5706              	.LBE1328:
 5707              	.LBE1329:
 5708              	.LBE1330:
1821:Veno-Echo.cpp ****     }
 5709              		.loc 20 1821 9 is_stmt 1 view .LVU1561
1821:Veno-Echo.cpp ****     }
 5710              		.loc 20 1821 21 is_stmt 0 view .LVU1562
 5711 027a 0022     		movs	r2, #0
 5712 027c 1A70     		strb	r2, [r3]
1832:Veno-Echo.cpp **** 
 5713              		.loc 20 1832 1 view .LVU1563
 5714 027e 38BD     		pop	{r3, r4, r5, pc}
 5715              	.LVL302:
 5716              	.L390:
1801:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5717              		.loc 20 1801 9 is_stmt 1 view .LVU1564
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 210


1801:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5718              		.loc 20 1801 21 is_stmt 0 view .LVU1565
 5719 0280 3E48     		ldr	r0, .L391+60
 5720 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5721              	.LVL303:
1802:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5722              		.loc 20 1802 9 is_stmt 1 view .LVU1566
1802:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5723              		.loc 20 1802 21 is_stmt 0 view .LVU1567
 5724 0286 94ED060A 		vldr.32	s0, [r4, #24]
 5725 028a 4348     		ldr	r0, .L391+88
 5726 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5727              	.LVL304:
1803:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5728              		.loc 20 1803 9 is_stmt 1 view .LVU1568
1803:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5729              		.loc 20 1803 21 is_stmt 0 view .LVU1569
 5730 0290 94ED060A 		vldr.32	s0, [r4, #24]
 5731 0294 3A48     		ldr	r0, .L391+64
 5732 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5733              	.LVL305:
1804:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5734              		.loc 20 1804 9 is_stmt 1 view .LVU1570
1804:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5735              		.loc 20 1804 21 is_stmt 0 view .LVU1571
 5736 029a 94ED060A 		vldr.32	s0, [r4, #24]
 5737 029e 3F48     		ldr	r0, .L391+92
 5738 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5739              	.LVL306:
1805:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5740              		.loc 20 1805 9 is_stmt 1 view .LVU1572
1805:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5741              		.loc 20 1805 26 is_stmt 0 view .LVU1573
 5742 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 5743 02a8 3648     		ldr	r0, .L391+68
 5744 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5745              	.LVL307:
1806:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5746              		.loc 20 1806 9 is_stmt 1 view .LVU1574
1806:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5747              		.loc 20 1806 26 is_stmt 0 view .LVU1575
 5748 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 5749 02b2 3B48     		ldr	r0, .L391+96
 5750 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5751              	.LVL308:
1807:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5752              		.loc 20 1807 9 is_stmt 1 view .LVU1576
1807:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5753              		.loc 20 1807 26 is_stmt 0 view .LVU1577
 5754 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 5755 02bc 3248     		ldr	r0, .L391+72
 5756 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5757              	.LVL309:
1808:Veno-Echo.cpp ****     }
 5758              		.loc 20 1808 9 is_stmt 1 view .LVU1578
1808:Veno-Echo.cpp ****     }
 5759              		.loc 20 1808 26 is_stmt 0 view .LVU1579
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 211


 5760 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 5761 02c6 3748     		ldr	r0, .L391+100
 5762 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5763              	.LVL310:
 5764 02cc 8EE7     		b	.L357
 5765              	.L389:
1785:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 5766              		.loc 20 1785 9 is_stmt 1 view .LVU1580
1785:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 5767              		.loc 20 1785 22 is_stmt 0 view .LVU1581
 5768 02ce 3248     		ldr	r0, .L391+88
 5769 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5770              	.LVL311:
1786:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 5771              		.loc 20 1786 9 is_stmt 1 view .LVU1582
1786:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 5772              		.loc 20 1786 22 is_stmt 0 view .LVU1583
 5773 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 5774 02d8 3048     		ldr	r0, .L391+92
 5775 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5776              	.LVL312:
1787:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 5777              		.loc 20 1787 9 is_stmt 1 view .LVU1584
1787:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 5778              		.loc 20 1787 27 is_stmt 0 view .LVU1585
 5779 02de 94ED040A 		vldr.32	s0, [r4, #16]
 5780 02e2 2F48     		ldr	r0, .L391+96
 5781 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5782              	.LVL313:
1788:Veno-Echo.cpp ****     }
 5783              		.loc 20 1788 9 is_stmt 1 view .LVU1586
1788:Veno-Echo.cpp ****     }
 5784              		.loc 20 1788 27 is_stmt 0 view .LVU1587
 5785 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 5786 02ec 2D48     		ldr	r0, .L391+100
 5787 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5788              	.LVL314:
 5789 02f2 59E7     		b	.L353
 5790              	.L388:
1770:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 5791              		.loc 20 1770 9 is_stmt 1 view .LVU1588
1770:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 5792              		.loc 20 1770 22 is_stmt 0 view .LVU1589
 5793 02f4 2148     		ldr	r0, .L391+60
 5794 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5795              	.LVL315:
1771:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 5796              		.loc 20 1771 9 is_stmt 1 view .LVU1590
1771:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 5797              		.loc 20 1771 22 is_stmt 0 view .LVU1591
 5798 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 5799 02fe 2048     		ldr	r0, .L391+64
 5800 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5801              	.LVL316:
1772:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 5802              		.loc 20 1772 9 is_stmt 1 view .LVU1592
1772:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 212


 5803              		.loc 20 1772 27 is_stmt 0 view .LVU1593
 5804 0304 94ED050A 		vldr.32	s0, [r4, #20]
 5805 0308 1E48     		ldr	r0, .L391+68
 5806 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5807              	.LVL317:
1773:Veno-Echo.cpp ****     }
 5808              		.loc 20 1773 9 is_stmt 1 view .LVU1594
1773:Veno-Echo.cpp ****     }
 5809              		.loc 20 1773 27 is_stmt 0 view .LVU1595
 5810 030e 94ED050A 		vldr.32	s0, [r4, #20]
 5811 0312 1D48     		ldr	r0, .L391+72
 5812 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5813              	.LVL318:
 5814 0318 21E7     		b	.L349
 5815              	.L382:
1756:Veno-Echo.cpp ****     }
 5816              		.loc 20 1756 18 view .LVU1596
 5817 031a DFED117A 		vldr.32	s15, .L391+32
 5818 031e DCE6     		b	.L339
 5819              	.LVL319:
 5820              	.L387:
 5821              	.LBB1331:
 5822              	.LBB1299:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5823              		.loc 20 74 29 view .LVU1597
 5824 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 5825              	.LBB1291:
 5826              	.LBB1292:
  72:delayline_reverse.h ****     }
 5827              		.loc 19 72 9 view .LVU1598
 5828 0324 0A4D     		ldr	r5, .L391+16
 5829              	.LBE1292:
 5830              	.LBE1291:
 5831              	.LBE1299:
 5832              	.LBE1331:
1733:Veno-Echo.cpp ****     }
 5833              		.loc 20 1733 33 view .LVU1599
 5834 0326 1968     		ldr	r1, [r3]
 5835              	.LBB1332:
 5836              	.LBB1300:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5837              		.loc 20 73 13 is_stmt 1 view .LVU1600
 5838              	.LBB1296:
 5839              	.LBB1293:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5840              		.loc 19 71 9 is_stmt 0 view .LVU1601
 5841 0328 0020     		movs	r0, #0
 5842              	.LBE1293:
 5843              	.LBE1296:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5844              		.loc 20 73 27 view .LVU1602
 5845 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5846              		.loc 20 74 29 view .LVU1603
 5847 032e 17EE102A 		vmov	r2, s14	@ int
 5848              	.LBB1297:
 5849              	.LBB1294:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 213


  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5850              		.loc 19 71 9 view .LVU1604
 5851 0332 0860     		str	r0, [r1]	@ float
 5852              	.LVL320:
  72:delayline_reverse.h ****     }
 5853              		.loc 19 72 9 view .LVU1605
 5854 0334 AA42     		cmp	r2, r5
 5855 0336 28BF     		it	cs
 5856 0338 2A46     		movcs	r2, r5
 5857              	.LBE1294:
 5858              	.LBE1297:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5859              		.loc 20 74 13 is_stmt 1 view .LVU1606
 5860              	.LVL321:
 5861              	.LBB1298:
 5862              	.LBI1291:
  69:delayline_reverse.h ****     {
 5863              		.loc 19 69 17 view .LVU1607
 5864              	.LBB1295:
  72:delayline_reverse.h ****     }
 5865              		.loc 19 72 9 is_stmt 0 view .LVU1608
 5866 033a 0A61     		str	r2, [r1, #16]
 5867              		.loc 19 73 5 view .LVU1609
 5868 033c A5E6     		b	.L330
 5869              	.L392:
 5870 033e 00BF     		.align	2
 5871              	.L391:
 5872 0340 0050C346 		.word	1187205120
 5873 0344 00000000 		.word	.LANCHOR2
 5874 0348 00606A48 		.word	1214930944
 5875 034c 0AD7A33B 		.word	1000593162
 5876 0350 BF270900 		.word	599999
 5877 0354 00000000 		.word	.LANCHOR3
 5878 0358 00000000 		.word	.LANCHOR12
 5879 035c 0000FA43 		.word	1140457472
 5880 0360 00000000 		.word	0
 5881 0364 CDCCCC3D 		.word	1036831949
 5882 0368 00000000 		.word	.LANCHOR67
 5883 036c 00000000 		.word	.LANCHOR75
 5884 0370 9A99A140 		.word	1084332442
 5885 0374 0080BB44 		.word	1153138688
 5886 0378 00803B46 		.word	1178304512
 5887 037c 00000000 		.word	.LANCHOR46
 5888 0380 00000000 		.word	.LANCHOR47
 5889 0384 00000000 		.word	.LANCHOR48
 5890 0388 00000000 		.word	.LANCHOR49
 5891 038c 0000C842 		.word	1120403456
 5892 0390 00004844 		.word	1145569280
 5893 0394 00004843 		.word	1128792064
 5894 0398 00000000 		.word	.LANCHOR34
 5895 039c 00000000 		.word	.LANCHOR35
 5896 03a0 00000000 		.word	.LANCHOR36
 5897 03a4 00000000 		.word	.LANCHOR37
 5898 03a8 6666E63E 		.word	1055286886
 5899 03ac 00000000 		.word	.LANCHOR82
 5900 03b0 CDCC0C3F 		.word	1057803469
 5901 03b4 00650148 		.word	1208050944
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 214


 5902 03b8 94050200 		.word	132500
 5903              	.LBE1295:
 5904              	.LBE1298:
 5905              	.LBE1300:
 5906              	.LBE1332:
 5907              		.cfi_endproc
 5908              	.LFE4331:
 5910              		.section	.text.startup.main,"ax",%progbits
 5911              		.align	1
 5912              		.p2align 2,,3
 5913              		.global	main
 5914              		.syntax unified
 5915              		.thumb
 5916              		.thumb_func
 5917              		.fpu fpv5-d16
 5919              	main:
 5920              	.LFB4311:
 586:Veno-Echo.cpp ****     // initialize hardware.
 5921              		.loc 20 586 1 is_stmt 1 view -0
 5922              		.cfi_startproc
 5923              		@ Volatile: function does not return.
 5924              		@ args = 0, pretend = 0, frame = 232
 5925              		@ frame_needed = 0, uses_anonymous_args = 0
 588:Veno-Echo.cpp ****     hw.Init();
 5926              		.loc 20 588 5 view .LVU1611
 586:Veno-Echo.cpp ****     // initialize hardware.
 5927              		.loc 20 586 1 is_stmt 0 view .LVU1612
 5928 0000 80B5     		push	{r7, lr}
 5929              		.cfi_def_cfa_offset 8
 5930              		.cfi_offset 7, -8
 5931              		.cfi_offset 14, -4
 588:Veno-Echo.cpp ****     hw.Init();
 5932              		.loc 20 588 17 view .LVU1613
 5933 0002 D148     		ldr	r0, .L396
 586:Veno-Echo.cpp ****     // initialize hardware.
 5934              		.loc 20 586 1 view .LVU1614
 5935 0004 BCB0     		sub	sp, sp, #240
 5936              		.cfi_def_cfa_offset 248
 588:Veno-Echo.cpp ****     hw.Init();
 5937              		.loc 20 588 17 view .LVU1615
 5938 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 5939              	.LVL322:
 589:Veno-Echo.cpp ****     
 5940              		.loc 20 589 5 is_stmt 1 view .LVU1616
 589:Veno-Echo.cpp ****     
 5941              		.loc 20 589 12 is_stmt 0 view .LVU1617
 5942 000a 0021     		movs	r1, #0
 5943 000c CE48     		ldr	r0, .L396
 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5944              		.loc 20 593 16 view .LVU1618
 5945 000e B2EE088A 		vmov.f32	s16, #1.2e+1
 589:Veno-Echo.cpp ****     
 5946              		.loc 20 589 12 view .LVU1619
 5947 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 5948              	.LVL323:
 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5949              		.loc 20 593 5 is_stmt 1 view .LVU1620
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 215


 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5950              		.loc 20 593 16 is_stmt 0 view .LVU1621
 5951 0016 0C20     		movs	r0, #12
 5952 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5953              	.LVL324:
 5954 001c 0346     		mov	r3, r0	@ movhi
 5955 001e 0620     		movs	r0, #6
 600:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5956              		.loc 20 600 22 view .LVU1622
 5957 0020 0224     		movs	r4, #2
 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5958              		.loc 20 593 16 view .LVU1623
 5959 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 5960 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5961              	.LVL325:
 5962 002a 0346     		mov	r3, r0	@ movhi
 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5963              		.loc 20 593 80 view .LVU1624
 5964 002c C648     		ldr	r0, .L396
 600:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5965              		.loc 20 600 22 view .LVU1625
 5966 002e 9FEDC79A 		vldr.32	s18, .L396+4
 5967              	.LBB1333:
 5968              	.LBB1334:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 5969              		.loc 7 58 57 view .LVU1626
 5970 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 5971              	.LBE1334:
 5972              	.LBE1333:
 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5973              		.loc 20 593 16 view .LVU1627
 5974 0036 ADF81030 		strh	r3, [sp, #16]	@ movhi
 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5975              		.loc 20 593 80 view .LVU1628
 5976 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5977              	.LVL326:
 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5978              		.loc 20 593 16 view .LVU1629
 5979 003e 0123     		movs	r3, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 216


 5980 0040 80EE080A 		vdiv.f32	s0, s0, s16
 5981 0044 049A     		ldr	r2, [sp, #16]
 5982              	.LBB1337:
 5983              	.LBB1338:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5984              		.loc 7 54 63 view .LVU1630
 5985 0046 4FF07C55 		mov	r5, #1056964608
 5986              	.LBE1338:
 5987              	.LBE1337:
 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5988              		.loc 20 593 16 view .LVU1631
 5989 004a 0399     		ldr	r1, [sp, #12]
 5990              	.LBB1341:
 5991              	.LBB1342:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 5992              		.loc 10 64 50 view .LVU1632
 5993 004c 1F46     		mov	r7, r3
 5994              	.LBE1342:
 5995              	.LBE1341:
 593:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(13),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5996              		.loc 20 593 16 view .LVU1633
 5997 004e C048     		ldr	r0, .L396+8
 5998 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5999              	.LVL327:
 594:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6000              		.loc 20 594 5 is_stmt 1 view .LVU1634
 594:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6001              		.loc 20 594 16 is_stmt 0 view .LVU1635
 6002 0054 0D20     		movs	r0, #13
 6003 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6004              	.LVL328:
 6005 005a 0346     		mov	r3, r0	@ movhi
 6006 005c 0720     		movs	r0, #7
 607:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6007              		.loc 20 607 20 view .LVU1636
 6008 005e DFF85483 		ldr	r8, .L396+108
 594:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6009              		.loc 20 594 16 view .LVU1637
 6010 0062 ADF81430 		strh	r3, [sp, #20]	@ movhi
 6011 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6012              	.LVL329:
 6013 006a 0346     		mov	r3, r0	@ movhi
 594:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6014              		.loc 20 594 80 view .LVU1638
 6015 006c B648     		ldr	r0, .L396
 6016              	.LBB1345:
 6017              	.LBB1346:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6018              		.loc 7 54 63 view .LVU1639
 6019 006e B94E     		ldr	r6, .L396+12
 6020              	.LBE1346:
 6021              	.LBE1345:
 594:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6022              		.loc 20 594 16 view .LVU1640
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 217


 6023 0070 ADF81830 		strh	r3, [sp, #24]	@ movhi
 594:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6024              		.loc 20 594 80 view .LVU1641
 6025 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6026              	.LVL330:
 594:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6027              		.loc 20 594 16 view .LVU1642
 6028 0078 069A     		ldr	r2, [sp, #24]
 6029 007a 80EE080A 		vdiv.f32	s0, s0, s16
 6030 007e 0599     		ldr	r1, [sp, #20]
 6031 0080 3B46     		mov	r3, r7
 6032 0082 B548     		ldr	r0, .L396+16
 6033 0084 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6034              	.LVL331:
 595:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6035              		.loc 20 595 5 is_stmt 1 view .LVU1643
 595:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6036              		.loc 20 595 18 is_stmt 0 view .LVU1644
 6037 0088 0A20     		movs	r0, #10
 6038 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6039              	.LVL332:
 6040 008e 0346     		mov	r3, r0	@ movhi
 6041 0090 2046     		mov	r0, r4
 613:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6042              		.loc 20 613 20 view .LVU1645
 6043 0092 DFF82493 		ldr	r9, .L396+112
 595:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6044              		.loc 20 595 18 view .LVU1646
 6045 0096 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 6046 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6047              	.LVL333:
 6048 009e 0346     		mov	r3, r0	@ movhi
 595:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6049              		.loc 20 595 85 view .LVU1647
 6050 00a0 A948     		ldr	r0, .L396
 595:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6051              		.loc 20 595 18 view .LVU1648
 6052 00a2 ADF82030 		strh	r3, [sp, #32]	@ movhi
 595:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6053              		.loc 20 595 85 view .LVU1649
 6054 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6055              	.LVL334:
 595:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6056              		.loc 20 595 18 view .LVU1650
 6057 00aa 089A     		ldr	r2, [sp, #32]
 6058 00ac 80EE080A 		vdiv.f32	s0, s0, s16
 6059 00b0 0799     		ldr	r1, [sp, #28]
 6060 00b2 0023     		movs	r3, #0
 6061 00b4 A948     		ldr	r0, .L396+20
 6062 00b6 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6063              	.LVL335:
 596:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6064              		.loc 20 596 5 is_stmt 1 view .LVU1651
 596:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6065              		.loc 20 596 18 is_stmt 0 view .LVU1652
 6066 00ba 0B20     		movs	r0, #11
 6067 00bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 218


 6068              	.LVL336:
 6069 00c0 0346     		mov	r3, r0	@ movhi
 6070 00c2 0320     		movs	r0, #3
 6071 00c4 ADF82430 		strh	r3, [sp, #36]	@ movhi
 6072 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6073              	.LVL337:
 6074 00cc 0346     		mov	r3, r0	@ movhi
 596:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6075              		.loc 20 596 85 view .LVU1653
 6076 00ce 9E48     		ldr	r0, .L396
 596:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6077              		.loc 20 596 18 view .LVU1654
 6078 00d0 ADF82830 		strh	r3, [sp, #40]	@ movhi
 596:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6079              		.loc 20 596 85 view .LVU1655
 6080 00d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6081              	.LVL338:
 596:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6082              		.loc 20 596 18 view .LVU1656
 6083 00d8 0A9A     		ldr	r2, [sp, #40]
 6084 00da 80EE080A 		vdiv.f32	s0, s0, s16
 6085 00de 0999     		ldr	r1, [sp, #36]
 6086 00e0 0023     		movs	r3, #0
 6087 00e2 9F48     		ldr	r0, .L396+24
 6088 00e4 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6089              	.LVL339:
 597:Veno-Echo.cpp **** 
 6090              		.loc 20 597 5 is_stmt 1 view .LVU1657
 597:Veno-Echo.cpp **** 
 6091              		.loc 20 597 20 is_stmt 0 view .LVU1658
 6092 00e8 1820     		movs	r0, #24
 6093 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6094              	.LVL340:
 6095 00ee 0346     		mov	r3, r0	@ movhi
 6096 00f0 0420     		movs	r0, #4
 6097 00f2 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6098 00f6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6099              	.LVL341:
 6100 00fa 0346     		mov	r3, r0	@ movhi
 597:Veno-Echo.cpp **** 
 6101              		.loc 20 597 93 view .LVU1659
 6102 00fc 9248     		ldr	r0, .L396
 597:Veno-Echo.cpp **** 
 6103              		.loc 20 597 20 view .LVU1660
 6104 00fe ADF83030 		strh	r3, [sp, #48]	@ movhi
 597:Veno-Echo.cpp **** 
 6105              		.loc 20 597 93 view .LVU1661
 6106 0102 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6107              	.LVL342:
 597:Veno-Echo.cpp **** 
 6108              		.loc 20 597 20 view .LVU1662
 6109 0106 2346     		mov	r3, r4
 6110 0108 80EE080A 		vdiv.f32	s0, s0, s16
 6111 010c 0C9A     		ldr	r2, [sp, #48]
 6112 010e 0B99     		ldr	r1, [sp, #44]
 6113 0110 9448     		ldr	r0, .L396+28
 6114 0112 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 219


 6115              	.LVL343:
 600:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6116              		.loc 20 600 5 is_stmt 1 view .LVU1663
 600:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6117              		.loc 20 600 22 is_stmt 0 view .LVU1664
 6118 0116 0020     		movs	r0, #0
 6119 0118 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6120              	.LVL344:
 6121 011c 0346     		mov	r3, r0	@ movhi
 600:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6122              		.loc 20 600 55 view .LVU1665
 6123 011e 8A48     		ldr	r0, .L396
 600:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6124              		.loc 20 600 22 view .LVU1666
 6125 0120 ADF83430 		strh	r3, [sp, #52]	@ movhi
 600:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6126              		.loc 20 600 55 view .LVU1667
 6127 0124 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6128              	.LVL345:
 600:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6129              		.loc 20 600 22 view .LVU1668
 6130 0128 3A46     		mov	r2, r7
 6131 012a 0D99     		ldr	r1, [sp, #52]
 6132 012c 80EE090A 		vdiv.f32	s0, s0, s18
 6133 0130 3B46     		mov	r3, r7
 6134 0132 8D48     		ldr	r0, .L396+32
 6135 0134 0094     		str	r4, [sp]
 6136 0136 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6137              	.LVL346:
 601:Veno-Echo.cpp **** 
 6138              		.loc 20 601 5 is_stmt 1 view .LVU1669
 601:Veno-Echo.cpp **** 
 6139              		.loc 20 601 22 is_stmt 0 view .LVU1670
 6140 013a 3846     		mov	r0, r7
 6141 013c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6142              	.LVL347:
 6143 0140 0346     		mov	r3, r0	@ movhi
 601:Veno-Echo.cpp **** 
 6144              		.loc 20 601 55 view .LVU1671
 6145 0142 8148     		ldr	r0, .L396
 601:Veno-Echo.cpp **** 
 6146              		.loc 20 601 22 view .LVU1672
 6147 0144 ADF83830 		strh	r3, [sp, #56]	@ movhi
 601:Veno-Echo.cpp **** 
 6148              		.loc 20 601 55 view .LVU1673
 6149 0148 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6150              	.LVL348:
 601:Veno-Echo.cpp **** 
 6151              		.loc 20 601 22 view .LVU1674
 6152 014c 3A46     		mov	r2, r7
 6153 014e 0E99     		ldr	r1, [sp, #56]
 6154 0150 80EE090A 		vdiv.f32	s0, s0, s18
 6155 0154 3B46     		mov	r3, r7
 6156 0156 8548     		ldr	r0, .L396+36
 6157 0158 0094     		str	r4, [sp]
 6158 015a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6159              	.LVL349:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 220


 604:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6160              		.loc 20 604 5 is_stmt 1 view .LVU1675
 604:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6161              		.loc 20 604 14 is_stmt 0 view .LVU1676
 6162 015e 1720     		movs	r0, #23
 6163 0160 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6164              	.LVL350:
 6165 0164 0346     		mov	r3, r0	@ movhi
 604:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6166              		.loc 20 604 48 view .LVU1677
 6167 0166 7848     		ldr	r0, .L396
 604:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6168              		.loc 20 604 14 view .LVU1678
 6169 0168 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 604:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6170              		.loc 20 604 48 view .LVU1679
 6171 016c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6172              	.LVL351:
 604:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6173              		.loc 20 604 14 view .LVU1680
 6174 0170 0F99     		ldr	r1, [sp, #60]
 6175 0172 80EE090A 		vdiv.f32	s0, s0, s18
 6176 0176 7E48     		ldr	r0, .L396+40
 6177 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6178              	.LVL352:
 605:Veno-Echo.cpp ****     
 6179              		.loc 20 605 5 is_stmt 1 view .LVU1681
 605:Veno-Echo.cpp ****     
 6180              		.loc 20 605 17 is_stmt 0 view .LVU1682
 6181 017c 0520     		movs	r0, #5
 6182 017e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6183              	.LVL353:
 6184 0182 0346     		mov	r3, r0	@ movhi
 6185 0184 7048     		ldr	r0, .L396
 6186 0186 ADF84030 		strh	r3, [sp, #64]	@ movhi
 6187 018a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6188              	.LVL354:
 6189 018e 1099     		ldr	r1, [sp, #64]
 6190 0190 7848     		ldr	r0, .L396+44
 6191 0192 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6192              	.LVL355:
 607:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6193              		.loc 20 607 5 is_stmt 1 view .LVU1683
 607:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6194              		.loc 20 607 20 is_stmt 0 view .LVU1684
 6195 0196 6C48     		ldr	r0, .L396
 6196 0198 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6197              	.LVL356:
 6198 019c 4046     		mov	r0, r8
 6199 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6200              	.LVL357:
 608:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6201              		.loc 20 608 5 is_stmt 1 view .LVU1685
 6202              	.LBB1349:
 6203              	.LBI1337:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6204              		.loc 7 54 17 view .LVU1686
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 221


 6205              	.LBB1339:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6206              		.loc 7 54 48 view .LVU1687
 6207              	.LBE1339:
 6208              	.LBE1349:
 613:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6209              		.loc 20 613 20 is_stmt 0 view .LVU1688
 6210 01a2 6948     		ldr	r0, .L396
 6211              	.LBB1350:
 6212              	.LBB1335:
 6213              		.loc 7 58 57 view .LVU1689
 6214 01a4 C8ED008A 		vstr.32	s17, [r8]
 6215              	.LBE1335:
 6216              	.LBE1350:
 619:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6217              		.loc 20 619 17 view .LVU1690
 6218 01a8 734C     		ldr	r4, .L396+48
 6219              	.LBB1351:
 6220              	.LBB1340:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6221              		.loc 7 54 63 view .LVU1691
 6222 01aa C8F80850 		str	r5, [r8, #8]	@ float
 6223              	.LVL358:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6224              		.loc 7 54 63 view .LVU1692
 6225              	.LBE1340:
 6226              	.LBE1351:
 609:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6227              		.loc 20 609 5 is_stmt 1 view .LVU1693
 6228              	.LBB1352:
 6229              	.LBI1345:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6230              		.loc 7 54 17 view .LVU1694
 6231              	.LBB1347:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6232              		.loc 7 54 48 view .LVU1695
 6233              	.LBE1347:
 6234              	.LBE1352:
 6235              	.LBB1353:
 6236              	.LBB1354:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6237              		.loc 7 54 63 is_stmt 0 view .LVU1696
 6238 01ae C8F81450 		str	r5, [r8, #20]	@ float
 6239              	.LBE1354:
 6240              	.LBE1353:
 6241              	.LBB1356:
 6242              	.LBB1348:
 6243 01b2 C8F80C60 		str	r6, [r8, #12]	@ float
 6244              	.LVL359:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6245              		.loc 7 54 63 view .LVU1697
 6246              	.LBE1348:
 6247              	.LBE1356:
 610:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6248              		.loc 20 610 5 is_stmt 1 view .LVU1698
 6249              	.LBB1357:
 6250              	.LBI1353:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 222


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6251              		.loc 7 54 17 view .LVU1699
 6252              	.LBB1355:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6253              		.loc 7 54 48 view .LVU1700
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6254              		.loc 7 54 48 is_stmt 0 view .LVU1701
 6255              	.LBE1355:
 6256              	.LBE1357:
 611:Veno-Echo.cpp **** 
 6257              		.loc 20 611 5 is_stmt 1 view .LVU1702
 6258              	.LBB1358:
 6259              	.LBI1333:
 6260              		.loc 7 58 17 view .LVU1703
 6261              	.LBB1336:
 6262              		.loc 7 58 52 view .LVU1704
 6263              		.loc 7 58 52 is_stmt 0 view .LVU1705
 6264              	.LBE1336:
 6265              	.LBE1358:
 613:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6266              		.loc 20 613 5 is_stmt 1 view .LVU1706
 613:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6267              		.loc 20 613 20 is_stmt 0 view .LVU1707
 6268 01b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6269              	.LVL360:
 6270 01ba 4846     		mov	r0, r9
 625:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6271              		.loc 20 625 17 view .LVU1708
 6272 01bc DFF8FC81 		ldr	r8, .L396+116
 613:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6273              		.loc 20 613 20 view .LVU1709
 6274 01c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6275              	.LVL361:
 614:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6276              		.loc 20 614 5 is_stmt 1 view .LVU1710
 6277              	.LBB1359:
 6278              	.LBI1359:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6279              		.loc 7 54 17 view .LVU1711
 6280              	.LBB1360:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6281              		.loc 7 54 48 view .LVU1712
 6282              	.LBE1360:
 6283              	.LBE1359:
 619:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6284              		.loc 20 619 17 is_stmt 0 view .LVU1713
 6285 01c4 6048     		ldr	r0, .L396
 6286              	.LBB1362:
 6287              	.LBB1361:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6288              		.loc 7 54 63 view .LVU1714
 6289 01c6 C9F80850 		str	r5, [r9, #8]	@ float
 6290              	.LVL362:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6291              		.loc 7 54 63 view .LVU1715
 6292              	.LBE1361:
 6293              	.LBE1362:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 223


 615:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6294              		.loc 20 615 5 is_stmt 1 view .LVU1716
 6295              	.LBB1363:
 6296              	.LBI1363:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6297              		.loc 7 54 17 view .LVU1717
 6298              	.LBB1364:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6299              		.loc 7 54 48 view .LVU1718
 6300              	.LBE1364:
 6301              	.LBE1363:
 6302              	.LBB1366:
 6303              	.LBB1367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6304              		.loc 7 54 63 is_stmt 0 view .LVU1719
 6305 01ca C9F81450 		str	r5, [r9, #20]	@ float
 6306              	.LBE1367:
 6307              	.LBE1366:
 6308              	.LBB1369:
 6309              	.LBB1365:
 6310 01ce C9F80C60 		str	r6, [r9, #12]	@ float
 6311              	.LVL363:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6312              		.loc 7 54 63 view .LVU1720
 6313              	.LBE1365:
 6314              	.LBE1369:
 616:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6315              		.loc 20 616 5 is_stmt 1 view .LVU1721
 6316              	.LBB1370:
 6317              	.LBI1366:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6318              		.loc 7 54 17 view .LVU1722
 6319              	.LBB1368:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6320              		.loc 7 54 48 view .LVU1723
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6321              		.loc 7 54 48 is_stmt 0 view .LVU1724
 6322              	.LBE1368:
 6323              	.LBE1370:
 617:Veno-Echo.cpp **** 
 6324              		.loc 20 617 5 is_stmt 1 view .LVU1725
 6325              	.LBB1371:
 6326              	.LBI1371:
 6327              		.loc 7 58 17 view .LVU1726
 6328              	.LBB1372:
 6329              		.loc 7 58 52 view .LVU1727
 6330              		.loc 7 58 57 is_stmt 0 view .LVU1728
 6331 01d2 C9ED008A 		vstr.32	s17, [r9]
 6332              	.LVL364:
 6333              		.loc 7 58 57 view .LVU1729
 6334              	.LBE1372:
 6335              	.LBE1371:
 619:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6336              		.loc 20 619 5 is_stmt 1 view .LVU1730
 619:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6337              		.loc 20 619 17 is_stmt 0 view .LVU1731
 6338 01d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 224


 6339              	.LVL365:
 6340 01da 2046     		mov	r0, r4
 644:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6341              		.loc 20 644 17 view .LVU1732
 6342 01dc 9FED678A 		vldr.32	s16, .L396+52
 619:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6343              		.loc 20 619 17 view .LVU1733
 6344 01e0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6345              	.LVL366:
 620:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6346              		.loc 20 620 5 is_stmt 1 view .LVU1734
 6347              	.LBB1373:
 6348              	.LBI1373:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6349              		.loc 7 54 17 view .LVU1735
 6350              	.LBB1374:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6351              		.loc 7 54 48 view .LVU1736
 6352              	.LBE1374:
 6353              	.LBE1373:
 625:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6354              		.loc 20 625 17 is_stmt 0 view .LVU1737
 6355 01e4 5848     		ldr	r0, .L396
 6356              	.LBB1376:
 6357              	.LBB1377:
 6358              		.loc 7 58 57 view .LVU1738
 6359 01e6 C4ED008A 		vstr.32	s17, [r4]
 6360              	.LBE1377:
 6361              	.LBE1376:
 6362              	.LBB1379:
 6363              	.LBB1375:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6364              		.loc 7 54 63 view .LVU1739
 6365 01ea A660     		str	r6, [r4, #8]	@ float
 6366              	.LVL367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6367              		.loc 7 54 63 view .LVU1740
 6368              	.LBE1375:
 6369              	.LBE1379:
 621:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6370              		.loc 20 621 5 is_stmt 1 view .LVU1741
 6371              	.LBB1380:
 6372              	.LBI1380:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6373              		.loc 7 54 17 view .LVU1742
 6374              	.LBB1381:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6375              		.loc 7 54 48 view .LVU1743
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6376              		.loc 7 54 63 is_stmt 0 view .LVU1744
 6377 01ec E660     		str	r6, [r4, #12]	@ float
 6378              	.LVL368:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6379              		.loc 7 54 63 view .LVU1745
 6380              	.LBE1381:
 6381              	.LBE1380:
 622:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 225


 6382              		.loc 20 622 5 is_stmt 1 view .LVU1746
 6383              	.LBB1382:
 6384              	.LBI1382:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6385              		.loc 7 54 17 view .LVU1747
 6386              	.LBB1383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6387              		.loc 7 54 48 view .LVU1748
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6388              		.loc 7 54 63 is_stmt 0 view .LVU1749
 6389 01ee 6661     		str	r6, [r4, #20]	@ float
 6390              	.LVL369:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6391              		.loc 7 54 63 view .LVU1750
 6392              	.LBE1383:
 6393              	.LBE1382:
 623:Veno-Echo.cpp **** 
 6394              		.loc 20 623 5 is_stmt 1 view .LVU1751
 6395              	.LBB1384:
 6396              	.LBI1376:
 6397              		.loc 7 58 17 view .LVU1752
 6398              	.LBB1378:
 6399              		.loc 7 58 52 view .LVU1753
 6400              		.loc 7 58 52 is_stmt 0 view .LVU1754
 6401              	.LBE1378:
 6402              	.LBE1384:
 625:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6403              		.loc 20 625 5 is_stmt 1 view .LVU1755
 625:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6404              		.loc 20 625 17 is_stmt 0 view .LVU1756
 6405 01f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6406              	.LVL370:
 6407 01f4 4046     		mov	r0, r8
 6408              	.LBB1385:
 6409              	.LBB1386:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6410              		.loc 8 44 20 view .LVU1757
 6411 01f6 624C     		ldr	r4, .L396+56
 6412              	.LBE1386:
 6413              	.LBE1385:
 625:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6414              		.loc 20 625 17 view .LVU1758
 6415 01f8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6416              	.LVL371:
 626:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6417              		.loc 20 626 5 is_stmt 1 view .LVU1759
 6418              	.LBB1391:
 6419              	.LBI1391:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6420              		.loc 7 54 17 view .LVU1760
 6421              	.LBB1392:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6422              		.loc 7 54 48 view .LVU1761
 6423              	.LBE1392:
 6424              	.LBE1391:
 6425              	.LBB1394:
 6426              	.LBB1395:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 226


 6427              	.LBB1396:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6428              		.loc 10 45 16 is_stmt 0 view .LVU1762
 6429 01fc 6149     		ldr	r1, .L396+60
 6430              	.LBE1396:
 6431              	.LBE1395:
 6432              	.LBE1394:
 6433              	.LBB1401:
 6434              	.LBB1402:
 6435              	.LBB1403:
 6436 01fe 624A     		ldr	r2, .L396+64
 6437              	.LBE1403:
 6438              	.LBE1402:
 6439              	.LBE1401:
 6440              	.LBB1408:
 6441              	.LBB1409:
 6442              	.LBB1410:
 6443 0200 624B     		ldr	r3, .L396+68
 6444              	.LBE1410:
 6445              	.LBE1409:
 6446              	.LBE1408:
 6447              	.LBB1415:
 6448              	.LBB1399:
 6449              	.LBB1397:
 6450 0202 0D60     		str	r5, [r1]	@ float
 6451              	.LBE1397:
 6452              	.LBE1399:
 6453              	.LBE1415:
 6454              	.LBB1416:
 6455              	.LBB1406:
 6456              	.LBB1404:
 6457 0204 1560     		str	r5, [r2]	@ float
 6458              	.LBE1404:
 6459              	.LBE1406:
 6460              	.LBE1416:
 6461              	.LBB1417:
 6462              	.LBB1413:
 6463              	.LBB1411:
 6464 0206 1D60     		str	r5, [r3]	@ float
 6465              	.LBE1411:
 6466              	.LBE1413:
 6467              	.LBE1417:
 6468              	.LBB1418:
 6469              	.LBB1343:
 6470              		.loc 10 64 50 view .LVU1763
 6471 0208 0F71     		strb	r7, [r1, #4]
 6472              	.LBE1343:
 6473              	.LBE1418:
 6474              	.LBB1419:
 6475              	.LBB1420:
 6476 020a 1771     		strb	r7, [r2, #4]
 6477              	.LBE1420:
 6478              	.LBE1419:
 6479              	.LBB1422:
 6480              	.LBB1423:
 6481 020c 1F71     		strb	r7, [r3, #4]
 6482              	.LBE1423:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 227


 6483              	.LBE1422:
 640:Veno-Echo.cpp **** 
 6484              		.loc 20 640 15 view .LVU1764
 6485 020e 4E48     		ldr	r0, .L396
 6486              	.LBB1425:
 6487              	.LBB1426:
 6488              		.loc 7 58 57 view .LVU1765
 6489 0210 C8ED008A 		vstr.32	s17, [r8]
 6490              	.LBE1426:
 6491              	.LBE1425:
 6492              	.LBB1428:
 6493              	.LBB1393:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6494              		.loc 7 54 63 view .LVU1766
 6495 0214 C8F80860 		str	r6, [r8, #8]	@ float
 6496              	.LVL372:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6497              		.loc 7 54 63 view .LVU1767
 6498              	.LBE1393:
 6499              	.LBE1428:
 627:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6500              		.loc 20 627 5 is_stmt 1 view .LVU1768
 6501              	.LBB1429:
 6502              	.LBI1429:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6503              		.loc 7 54 17 view .LVU1769
 6504              	.LBB1430:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6505              		.loc 7 54 48 view .LVU1770
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6506              		.loc 7 54 63 is_stmt 0 view .LVU1771
 6507 0218 C8F80C60 		str	r6, [r8, #12]	@ float
 6508              	.LVL373:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6509              		.loc 7 54 63 view .LVU1772
 6510              	.LBE1430:
 6511              	.LBE1429:
 628:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 6512              		.loc 20 628 5 is_stmt 1 view .LVU1773
 6513              	.LBB1431:
 6514              	.LBI1431:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6515              		.loc 7 54 17 view .LVU1774
 6516              	.LBB1432:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6517              		.loc 7 54 48 view .LVU1775
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6518              		.loc 7 54 63 is_stmt 0 view .LVU1776
 6519 021c C8F81460 		str	r6, [r8, #20]	@ float
 6520              	.LVL374:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6521              		.loc 7 54 63 view .LVU1777
 6522              	.LBE1432:
 6523              	.LBE1431:
 629:Veno-Echo.cpp **** 
 6524              		.loc 20 629 5 is_stmt 1 view .LVU1778
 6525              	.LBB1433:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 228


 6526              	.LBI1425:
 6527              		.loc 7 58 17 view .LVU1779
 6528              	.LBB1427:
 6529              		.loc 7 58 52 view .LVU1780
 6530              		.loc 7 58 52 is_stmt 0 view .LVU1781
 6531              	.LBE1427:
 6532              	.LBE1433:
 632:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 6533              		.loc 20 632 5 is_stmt 1 view .LVU1782
 6534              	.LBB1434:
 6535              	.LBI1394:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6536              		.loc 10 51 17 view .LVU1783
 6537              	.LBE1434:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6538              		.loc 10 51 26 view .LVU1784
 6539              	.LBB1435:
 6540              	.LBB1400:
 6541              	.LBI1395:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6542              		.loc 10 43 17 view .LVU1785
 6543              	.LBB1398:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6544              		.loc 10 45 9 view .LVU1786
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6545              		.loc 10 46 9 view .LVU1787
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6546              		.loc 10 46 9 is_stmt 0 view .LVU1788
 6547              	.LBE1398:
 6548              	.LBE1400:
 6549              	.LBE1435:
 633:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 6550              		.loc 20 633 5 is_stmt 1 view .LVU1789
 6551              	.LBB1436:
 6552              	.LBI1341:
 6553              		.loc 10 64 17 view .LVU1790
 6554              	.LBB1344:
 6555              		.loc 10 64 43 view .LVU1791
 6556              		.loc 10 64 43 is_stmt 0 view .LVU1792
 6557              	.LBE1344:
 6558              	.LBE1436:
 634:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 6559              		.loc 20 634 5 is_stmt 1 view .LVU1793
 6560              	.LBB1437:
 6561              	.LBI1401:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6562              		.loc 10 51 17 view .LVU1794
 6563              	.LBE1437:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6564              		.loc 10 51 26 view .LVU1795
 6565              	.LBB1438:
 6566              	.LBB1407:
 6567              	.LBI1402:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6568              		.loc 10 43 17 view .LVU1796
 6569              	.LBB1405:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 229


 6570              		.loc 10 45 9 view .LVU1797
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6571              		.loc 10 46 9 view .LVU1798
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6572              		.loc 10 46 9 is_stmt 0 view .LVU1799
 6573              	.LBE1405:
 6574              	.LBE1407:
 6575              	.LBE1438:
 635:Veno-Echo.cpp **** 
 6576              		.loc 20 635 5 is_stmt 1 view .LVU1800
 6577              	.LBB1439:
 6578              	.LBI1419:
 6579              		.loc 10 64 17 view .LVU1801
 6580              	.LBB1421:
 6581              		.loc 10 64 43 view .LVU1802
 6582              		.loc 10 64 43 is_stmt 0 view .LVU1803
 6583              	.LBE1421:
 6584              	.LBE1439:
 637:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 6585              		.loc 20 637 5 is_stmt 1 view .LVU1804
 6586              	.LBB1440:
 6587              	.LBI1408:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6588              		.loc 10 51 17 view .LVU1805
 6589              	.LBE1440:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6590              		.loc 10 51 26 view .LVU1806
 6591              	.LBB1441:
 6592              	.LBB1414:
 6593              	.LBI1409:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6594              		.loc 10 43 17 view .LVU1807
 6595              	.LBB1412:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6596              		.loc 10 45 9 view .LVU1808
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6597              		.loc 10 46 9 view .LVU1809
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6598              		.loc 10 46 9 is_stmt 0 view .LVU1810
 6599              	.LBE1412:
 6600              	.LBE1414:
 6601              	.LBE1441:
 638:Veno-Echo.cpp **** 
 6602              		.loc 20 638 5 is_stmt 1 view .LVU1811
 6603              	.LBB1442:
 6604              	.LBI1422:
 6605              		.loc 10 64 17 view .LVU1812
 6606              	.LBB1424:
 6607              		.loc 10 64 43 view .LVU1813
 6608              		.loc 10 64 43 is_stmt 0 view .LVU1814
 6609              	.LBE1424:
 6610              	.LBE1442:
 640:Veno-Echo.cpp **** 
 6611              		.loc 20 640 5 is_stmt 1 view .LVU1815
 640:Veno-Echo.cpp **** 
 6612              		.loc 20 640 15 is_stmt 0 view .LVU1816
 6613 0220 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 230


 6614              	.LVL375:
 6615 0224 FFF7FEFF 		bl	_Z10InitDelaysf
 6616              	.LVL376:
 643:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6617              		.loc 20 643 5 is_stmt 1 view .LVU1817
 643:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6618              		.loc 20 643 15 is_stmt 0 view .LVU1818
 6619 0228 4748     		ldr	r0, .L396
 6620 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6621              	.LVL377:
 6622 022e 5848     		ldr	r0, .L396+72
 6623 0230 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6624              	.LVL378:
 644:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6625              		.loc 20 644 5 is_stmt 1 view .LVU1819
 644:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6626              		.loc 20 644 17 is_stmt 0 view .LVU1820
 6627 0234 B0EE480A 		vmov.f32	s0, s16
 6628 0238 5548     		ldr	r0, .L396+72
 6629 023a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6630              	.LVL379:
 645:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6631              		.loc 20 645 5 is_stmt 1 view .LVU1821
 645:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6632              		.loc 20 645 18 is_stmt 0 view .LVU1822
 6633 023e 9FED550A 		vldr.32	s0, .L396+76
 6634 0242 5348     		ldr	r0, .L396+72
 6635 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6636              	.LVL380:
 646:Veno-Echo.cpp **** 
 6637              		.loc 20 646 5 is_stmt 1 view .LVU1823
 646:Veno-Echo.cpp **** 
 6638              		.loc 20 646 19 is_stmt 0 view .LVU1824
 6639 0248 9FED5D0A 		vldr.32	s0, .L396+120
 6640 024c 5048     		ldr	r0, .L396+72
 6641 024e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6642              	.LVL381:
 648:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6643              		.loc 20 648 5 is_stmt 1 view .LVU1825
 648:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6644              		.loc 20 648 15 is_stmt 0 view .LVU1826
 6645 0252 3D48     		ldr	r0, .L396
 6646 0254 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6647              	.LVL382:
 6648 0258 4F48     		ldr	r0, .L396+80
 6649 025a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6650              	.LVL383:
 649:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6651              		.loc 20 649 5 is_stmt 1 view .LVU1827
 649:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6652              		.loc 20 649 17 is_stmt 0 view .LVU1828
 6653 025e B0EE480A 		vmov.f32	s0, s16
 6654 0262 4D48     		ldr	r0, .L396+80
 6655 0264 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6656              	.LVL384:
 650:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6657              		.loc 20 650 5 is_stmt 1 view .LVU1829
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 231


 650:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6658              		.loc 20 650 18 is_stmt 0 view .LVU1830
 6659 0268 9FED4A0A 		vldr.32	s0, .L396+76
 6660 026c 4A48     		ldr	r0, .L396+80
 6661 026e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6662              	.LVL385:
 651:Veno-Echo.cpp **** 
 6663              		.loc 20 651 5 is_stmt 1 view .LVU1831
 651:Veno-Echo.cpp **** 
 6664              		.loc 20 651 19 is_stmt 0 view .LVU1832
 6665 0272 9FED530A 		vldr.32	s0, .L396+120
 6666 0276 4848     		ldr	r0, .L396+80
 6667 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6668              	.LVL386:
 654:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6669              		.loc 20 654 5 is_stmt 1 view .LVU1833
 654:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6670              		.loc 20 654 15 is_stmt 0 view .LVU1834
 6671 027c 3248     		ldr	r0, .L396
 6672 027e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6673              	.LVL387:
 6674 0282 4648     		ldr	r0, .L396+84
 6675 0284 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6676              	.LVL388:
 655:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6677              		.loc 20 655 5 is_stmt 1 view .LVU1835
 655:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6678              		.loc 20 655 17 is_stmt 0 view .LVU1836
 6679 0288 B0EE480A 		vmov.f32	s0, s16
 6680 028c 4348     		ldr	r0, .L396+84
 6681 028e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6682              	.LVL389:
 656:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6683              		.loc 20 656 5 is_stmt 1 view .LVU1837
 656:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6684              		.loc 20 656 18 is_stmt 0 view .LVU1838
 6685 0292 9FED430A 		vldr.32	s0, .L396+88
 6686 0296 4148     		ldr	r0, .L396+84
 6687 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6688              	.LVL390:
 657:Veno-Echo.cpp **** 
 6689              		.loc 20 657 5 is_stmt 1 view .LVU1839
 657:Veno-Echo.cpp **** 
 6690              		.loc 20 657 19 is_stmt 0 view .LVU1840
 6691 029c 9FED480A 		vldr.32	s0, .L396+120
 6692 02a0 3E48     		ldr	r0, .L396+84
 6693 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6694              	.LVL391:
 659:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6695              		.loc 20 659 5 is_stmt 1 view .LVU1841
 659:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6696              		.loc 20 659 15 is_stmt 0 view .LVU1842
 6697 02a6 2848     		ldr	r0, .L396
 6698 02a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6699              	.LVL392:
 6700 02ac 3D48     		ldr	r0, .L396+92
 6701 02ae FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 232


 6702              	.LVL393:
 660:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6703              		.loc 20 660 5 is_stmt 1 view .LVU1843
 660:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6704              		.loc 20 660 17 is_stmt 0 view .LVU1844
 6705 02b2 B0EE480A 		vmov.f32	s0, s16
 6706 02b6 3B48     		ldr	r0, .L396+92
 6707 02b8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6708              	.LVL394:
 661:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6709              		.loc 20 661 5 is_stmt 1 view .LVU1845
 661:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6710              		.loc 20 661 18 is_stmt 0 view .LVU1846
 6711 02bc 9FED380A 		vldr.32	s0, .L396+88
 6712 02c0 3848     		ldr	r0, .L396+92
 6713 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6714              	.LVL395:
 662:Veno-Echo.cpp **** 
 6715              		.loc 20 662 5 is_stmt 1 view .LVU1847
 662:Veno-Echo.cpp **** 
 6716              		.loc 20 662 19 is_stmt 0 view .LVU1848
 6717 02c6 9FED3E0A 		vldr.32	s0, .L396+120
 6718 02ca 3648     		ldr	r0, .L396+92
 6719 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6720              	.LVL396:
 665:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6721              		.loc 20 665 5 is_stmt 1 view .LVU1849
 665:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6722              		.loc 20 665 20 is_stmt 0 view .LVU1850
 6723 02d0 1D48     		ldr	r0, .L396
 6724 02d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6725              	.LVL397:
 6726 02d6 3448     		ldr	r0, .L396+96
 6727 02d8 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6728              	.LVL398:
 666:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6729              		.loc 20 666 5 is_stmt 1 view .LVU1851
 666:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6730              		.loc 20 666 22 is_stmt 0 view .LVU1852
 6731 02dc B0EE480A 		vmov.f32	s0, s16
 6732 02e0 3148     		ldr	r0, .L396+96
 6733 02e2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6734              	.LVL399:
 667:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6735              		.loc 20 667 5 is_stmt 1 view .LVU1853
 667:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6736              		.loc 20 667 23 is_stmt 0 view .LVU1854
 6737 02e6 9FED2B0A 		vldr.32	s0, .L396+76
 6738 02ea 2F48     		ldr	r0, .L396+96
 6739 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6740              	.LVL400:
 668:Veno-Echo.cpp **** 
 6741              		.loc 20 668 5 is_stmt 1 view .LVU1855
 668:Veno-Echo.cpp **** 
 6742              		.loc 20 668 24 is_stmt 0 view .LVU1856
 6743 02f0 9FED330A 		vldr.32	s0, .L396+120
 6744 02f4 2C48     		ldr	r0, .L396+96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 233


 6745 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6746              	.LVL401:
 670:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6747              		.loc 20 670 5 is_stmt 1 view .LVU1857
 670:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6748              		.loc 20 670 20 is_stmt 0 view .LVU1858
 6749 02fa 1348     		ldr	r0, .L396
 6750 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6751              	.LVL402:
 6752 0300 2A48     		ldr	r0, .L396+100
 6753 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6754              	.LVL403:
 671:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6755              		.loc 20 671 5 is_stmt 1 view .LVU1859
 671:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6756              		.loc 20 671 22 is_stmt 0 view .LVU1860
 6757 0306 B0EE480A 		vmov.f32	s0, s16
 6758 030a 2848     		ldr	r0, .L396+100
 6759 030c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6760              	.LVL404:
 672:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6761              		.loc 20 672 5 is_stmt 1 view .LVU1861
 672:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6762              		.loc 20 672 23 is_stmt 0 view .LVU1862
 6763 0310 9FED200A 		vldr.32	s0, .L396+76
 6764 0314 2548     		ldr	r0, .L396+100
 6765 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6766              	.LVL405:
 673:Veno-Echo.cpp **** 
 6767              		.loc 20 673 5 is_stmt 1 view .LVU1863
 673:Veno-Echo.cpp **** 
 6768              		.loc 20 673 24 is_stmt 0 view .LVU1864
 6769 031a 9FED290A 		vldr.32	s0, .L396+120
 6770 031e 2348     		ldr	r0, .L396+100
 6771 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6772              	.LVL406:
 676:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6773              		.loc 20 676 5 is_stmt 1 view .LVU1865
 676:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6774              		.loc 20 676 20 is_stmt 0 view .LVU1866
 6775 0324 0848     		ldr	r0, .L396
 6776 0326 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6777              	.LVL407:
 6778 032a 2148     		ldr	r0, .L396+104
 6779 032c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6780              	.LVL408:
 677:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 6781              		.loc 20 677 5 is_stmt 1 view .LVU1867
 677:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 6782              		.loc 20 677 22 is_stmt 0 view .LVU1868
 6783 0330 B0EE480A 		vmov.f32	s0, s16
 6784 0334 1E48     		ldr	r0, .L396+104
 6785 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6786              	.LVL409:
 678:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 6787              		.loc 20 678 5 is_stmt 1 view .LVU1869
 678:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 234


 6788              		.loc 20 678 23 is_stmt 0 view .LVU1870
 6789 033a 9FED190A 		vldr.32	s0, .L396+88
 6790 033e 1C48     		ldr	r0, .L396+104
 6791 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6792              	.LVL410:
 6793 0344 3EE0     		b	.L397
 6794              	.L398:
 6795 0346 00BF     		.align	2
 6796              	.L396:
 6797 0348 00000000 		.word	.LANCHOR4
 6798 034c 00004042 		.word	1111490560
 6799 0350 00000000 		.word	.LANCHOR91
 6800 0354 0AD7233C 		.word	1008981770
 6801 0358 00000000 		.word	.LANCHOR92
 6802 035c 00000000 		.word	.LANCHOR93
 6803 0360 00000000 		.word	.LANCHOR94
 6804 0364 00000000 		.word	.LANCHOR95
 6805 0368 00000000 		.word	.LANCHOR96
 6806 036c 00000000 		.word	.LANCHOR97
 6807 0370 00000000 		.word	.LANCHOR98
 6808 0374 00000000 		.word	.LANCHOR87
 6809 0378 00000000 		.word	.LANCHOR101
 6810 037c 00000000 		.word	0
 6811 0380 00000000 		.word	.LANCHOR75
 6812 0384 00000000 		.word	.LANCHOR103
 6813 0388 00000000 		.word	.LANCHOR104
 6814 038c 00000000 		.word	.LANCHOR64
 6815 0390 00000000 		.word	.LANCHOR46
 6816 0394 00803B46 		.word	1178304512
 6817 0398 00000000 		.word	.LANCHOR47
 6818 039c 00000000 		.word	.LANCHOR34
 6819 03a0 00004843 		.word	1128792064
 6820 03a4 00000000 		.word	.LANCHOR35
 6821 03a8 00000000 		.word	.LANCHOR48
 6822 03ac 00000000 		.word	.LANCHOR49
 6823 03b0 00000000 		.word	.LANCHOR36
 6824 03b4 00000000 		.word	.LANCHOR99
 6825 03b8 00000000 		.word	.LANCHOR100
 6826 03bc 00000000 		.word	.LANCHOR102
 6827 03c0 3333333F 		.word	1060320051
 6828              	.L397:
 679:Veno-Echo.cpp **** 
 6829              		.loc 20 679 5 is_stmt 1 view .LVU1871
 679:Veno-Echo.cpp **** 
 6830              		.loc 20 679 24 is_stmt 0 view .LVU1872
 6831 03c4 1FED020A 		vldr.32	s0, .L396+120
 6832 03c8 7048     		ldr	r0, .L399
 6833 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6834              	.LVL411:
 681:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 6835              		.loc 20 681 5 is_stmt 1 view .LVU1873
 681:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 6836              		.loc 20 681 20 is_stmt 0 view .LVU1874
 6837 03ce 7048     		ldr	r0, .L399+4
 6838 03d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6839              	.LVL412:
 6840 03d4 6F48     		ldr	r0, .L399+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 235


 6841 03d6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6842              	.LVL413:
 682:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 6843              		.loc 20 682 5 is_stmt 1 view .LVU1875
 682:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 6844              		.loc 20 682 22 is_stmt 0 view .LVU1876
 6845 03da B0EE480A 		vmov.f32	s0, s16
 6846 03de 6D48     		ldr	r0, .L399+8
 6847 03e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6848              	.LVL414:
 683:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 6849              		.loc 20 683 5 is_stmt 1 view .LVU1877
 683:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 6850              		.loc 20 683 23 is_stmt 0 view .LVU1878
 6851 03e4 9FED6C0A 		vldr.32	s0, .L399+12
 6852 03e8 6A48     		ldr	r0, .L399+8
 6853 03ea FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6854              	.LVL415:
 684:Veno-Echo.cpp **** 
 6855              		.loc 20 684 5 is_stmt 1 view .LVU1879
 684:Veno-Echo.cpp **** 
 6856              		.loc 20 684 24 is_stmt 0 view .LVU1880
 6857 03ee 9FED6B0A 		vldr.32	s0, .L399+16
 6858 03f2 6848     		ldr	r0, .L399+8
 6859 03f4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6860              	.LVL416:
 686:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 6861              		.loc 20 686 5 is_stmt 1 view .LVU1881
 686:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 6862              		.loc 20 686 21 is_stmt 0 view .LVU1882
 6863 03f8 6548     		ldr	r0, .L399+4
 6864 03fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6865              	.LVL417:
 6866 03fe 6848     		ldr	r0, .L399+20
 6867 0400 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 6868              	.LVL418:
 687:Veno-Echo.cpp **** 
 6869              		.loc 20 687 5 is_stmt 1 view .LVU1883
 687:Veno-Echo.cpp **** 
 6870              		.loc 20 687 21 is_stmt 0 view .LVU1884
 6871 0404 6248     		ldr	r0, .L399+4
 6872 0406 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6873              	.LVL419:
 6874 040a 6648     		ldr	r0, .L399+24
 6875 040c FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 6876              	.LVL420:
 690:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 6877              		.loc 20 690 5 is_stmt 1 view .LVU1885
 690:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 6878              		.loc 20 690 13 is_stmt 0 view .LVU1886
 6879 0410 5F48     		ldr	r0, .L399+4
 6880 0412 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6881              	.LVL421:
 6882 0416 F0EE407A 		vmov.f32	s15, s0
 6883              	.LVL422:
 6884              	.LBB1443:
 6885              	.LBI1385:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 236


  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6886              		.loc 8 42 10 is_stmt 1 view .LVU1887
 6887              	.LBB1387:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6888              		.loc 8 44 9 view .LVU1888
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 6889              		.loc 8 46 20 is_stmt 0 view .LVU1889
 6890 041a 9FED637A 		vldr.32	s14, .L399+28
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6891              		.loc 8 49 34 view .LVU1890
 6892 041e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 6893              		.loc 8 47 20 view .LVU1891
 6894 0420 6560     		str	r5, [r4, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 6895              		.loc 8 45 27 view .LVU1892
 6896 0422 C8EEA76A 		vdiv.f32	s13, s17, s15
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 6897              		.loc 8 46 20 view .LVU1893
 6898 0426 84ED027A 		vstr.32	s14, [r4, #8]
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6899              		.loc 8 44 20 view .LVU1894
 6900 042a C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 6901              		.loc 8 45 9 is_stmt 1 view .LVU1895
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 6902              		.loc 8 48 20 is_stmt 0 view .LVU1896
 6903 042e 84ED058A 		vstr.32	s16, [r4, #20]
 6904              	.LBE1387:
 6905              	.LBE1443:
 712:Veno-Echo.cpp **** 
 6906              		.loc 20 712 17 view .LVU1897
 6907 0432 5E4D     		ldr	r5, .L399+32
 6908              	.LBB1444:
 6909              	.LBB1388:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6910              		.loc 8 49 34 view .LVU1898
 6911 0434 B0EE470A 		vmov.f32	s0, s14
 6912              	.LVL423:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 6913              		.loc 8 45 20 view .LVU1899
 6914 0438 C4ED046A 		vstr.32	s13, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 6915              		.loc 8 46 9 is_stmt 1 view .LVU1900
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 6916              		.loc 8 47 9 view .LVU1901
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 6917              		.loc 8 48 9 view .LVU1902
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6918              		.loc 8 49 9 view .LVU1903
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6919              		.loc 8 49 34 is_stmt 0 view .LVU1904
 6920 043c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6921              	.LVL424:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6922              		.loc 8 52 20 view .LVU1905
 6923 0440 40F20113 		movw	r3, #257
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 237


  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6924              		.loc 8 49 34 view .LVU1906
 6925 0444 F0EE407A 		vmov.f32	s15, s0
 6926              	.LBE1388:
 6927              	.LBE1444:
 6928              	.LBB1445:
 6929              	.LBB1446:
 6930              		.loc 8 61 34 view .LVU1907
 6931 0448 2046     		mov	r0, r4
 6932              	.LBE1446:
 6933              	.LBE1445:
 6934              	.LBB1450:
 6935              	.LBB1451:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 6936              		.loc 8 72 19 view .LVU1908
 6937 044a 2770     		strb	r7, [r4]
 6938              	.LBE1451:
 6939              	.LBE1450:
 6940              	.LBB1453:
 6941              	.LBB1389:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6942              		.loc 8 52 20 view .LVU1909
 6943 044c A384     		strh	r3, [r4, #36]	@ movhi
 6944              	.LBE1389:
 6945              	.LBE1453:
 6946              	.LBB1454:
 6947              	.LBB1447:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6948              		.loc 8 61 34 view .LVU1910
 6949 044e B0EE680A 		vmov.f32	s0, s17
 6950              	.LBE1447:
 6951              	.LBE1454:
 6952              	.LBB1455:
 6953              	.LBB1390:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6954              		.loc 8 49 20 view .LVU1911
 6955 0452 C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 6956              		.loc 8 50 9 is_stmt 1 view .LVU1912
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 6957              		.loc 8 51 9 view .LVU1913
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6958              		.loc 8 52 9 view .LVU1914
 6959              	.LVL425:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6960              		.loc 8 52 9 is_stmt 0 view .LVU1915
 6961              	.LBE1390:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 238


 6962              	.LBE1455:
 691:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 6963              		.loc 20 691 5 is_stmt 1 view .LVU1916
 6964              	.LBB1456:
 6965              	.LBI1450:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6966              		.loc 8 70 17 view .LVU1917
 6967              	.LBB1452:
 6968              		.loc 8 72 9 view .LVU1918
 6969              		.loc 8 72 9 is_stmt 0 view .LVU1919
 6970              	.LBE1452:
 6971              	.LBE1456:
 692:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 6972              		.loc 20 692 5 is_stmt 1 view .LVU1920
 6973              	.LBB1457:
 6974              	.LBI1445:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6975              		.loc 8 58 17 view .LVU1921
 6976              	.LBB1448:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6977              		.loc 8 60 9 view .LVU1922
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6978              		.loc 8 61 9 view .LVU1923
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6979              		.loc 8 60 20 is_stmt 0 view .LVU1924
 6980 0456 C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6981              		.loc 8 61 34 view .LVU1925
 6982 045a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6983              	.LVL426:
 6984 045e F0EE407A 		vmov.f32	s15, s0
 6985              	.LBE1448:
 6986              	.LBE1457:
 700:Veno-Echo.cpp **** 
 6987              		.loc 20 700 19 view .LVU1926
 6988 0462 41F27072 		movw	r2, #6000
 6989 0466 5021     		movs	r1, #80
 6990 0468 B7EE040A 		vmov.f32	s0, #1.25e+0
 6991 046c 5048     		ldr	r0, .L399+36
 6992              	.LBB1458:
 6993              	.LBB1459:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6994              		.loc 8 67 46 view .LVU1927
 6995 046e C4ED018A 		vstr.32	s17, [r4, #4]
 6996              	.LBE1459:
 6997              	.LBE1458:
 6998              	.LBB1461:
 6999              	.LBB1449:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7000              		.loc 8 61 20 view .LVU1928
 7001 0472 C4ED067A 		vstr.32	s15, [r4, #24]
 7002              	.LVL427:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7003              		.loc 8 61 20 view .LVU1929
 7004              	.LBE1449:
 7005              	.LBE1461:
 693:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 239


 7006              		.loc 20 693 5 is_stmt 1 view .LVU1930
 7007              	.LBB1462:
 7008              	.LBI1458:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7009              		.loc 8 67 17 view .LVU1931
 7010              	.LBB1460:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7011              		.loc 8 67 41 view .LVU1932
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7012              		.loc 8 67 41 is_stmt 0 view .LVU1933
 7013              	.LBE1460:
 7014              	.LBE1462:
 700:Veno-Echo.cpp **** 
 7015              		.loc 20 700 5 is_stmt 1 view .LVU1934
 700:Veno-Echo.cpp **** 
 7016              		.loc 20 700 19 is_stmt 0 view .LVU1935
 7017 0476 FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 7018              	.LVL428:
 704:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7019              		.loc 20 704 5 is_stmt 1 view .LVU1936
 704:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7020              		.loc 20 704 23 is_stmt 0 view .LVU1937
 7021 047a 1820     		movs	r0, #24
 712:Veno-Echo.cpp **** 
 7022              		.loc 20 712 17 view .LVU1938
 7023 047c 4D4C     		ldr	r4, .L399+40
 704:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7024              		.loc 20 704 23 view .LVU1939
 7025 047e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7026              	.LVL429:
 7027 0482 0346     		mov	r3, r0	@ movhi
 7028 0484 4248     		ldr	r0, .L399+4
 7029 0486 ADF84430 		strh	r3, [sp, #68]	@ movhi
 7030 048a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7031              	.LVL430:
 7032 048e 1199     		ldr	r1, [sp, #68]
 7033 0490 4948     		ldr	r0, .L399+44
 7034 0492 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7035              	.LVL431:
 705:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7036              		.loc 20 705 5 is_stmt 1 view .LVU1940
 705:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7037              		.loc 20 705 27 is_stmt 0 view .LVU1941
 7038 0496 4648     		ldr	r0, .L399+36
 7039 0498 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7040              	.LVL432:
 7041 049c 4648     		ldr	r0, .L399+44
 7042 049e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7043              	.LVL433:
 706:Veno-Echo.cpp **** 
 7044              		.loc 20 706 5 is_stmt 1 view .LVU1942
 706:Veno-Echo.cpp **** 
 7045              		.loc 20 706 29 is_stmt 0 view .LVU1943
 7046 04a2 4548     		ldr	r0, .L399+44
 7047 04a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7048              	.LVL434:
 711:Veno-Echo.cpp ****     AltControls = defaultAltControls;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 240


 7049              		.loc 20 711 5 is_stmt 1 view .LVU1944
 711:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7050              		.loc 20 711 18 is_stmt 0 view .LVU1945
 7051 04a8 4048     		ldr	r0, .L399+32
 7052 04aa FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7053              	.LVL435:
 712:Veno-Echo.cpp **** 
 7054              		.loc 20 712 5 is_stmt 1 view .LVU1946
 712:Veno-Echo.cpp **** 
 7055              		.loc 20 712 17 is_stmt 0 view .LVU1947
 7056 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7057 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7058 04b2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7059 04b6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 720:Veno-Echo.cpp **** 
 7060              		.loc 20 720 5 is_stmt 1 view .LVU1948
 722:Veno-Echo.cpp ****     adc[1].InitSingle(hw.GetPin(16));
 7061              		.loc 20 722 5 view .LVU1949
 722:Veno-Echo.cpp ****     adc[1].InitSingle(hw.GetPin(16));
 7062              		.loc 20 722 22 is_stmt 0 view .LVU1950
 7063 04ba 0F20     		movs	r0, #15
 7064 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7065              	.LVL436:
 7066 04c0 0346     		mov	r3, r0	@ movhi
 7067 04c2 1AA8     		add	r0, sp, #104
 7068 04c4 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7069 04c8 1299     		ldr	r1, [sp, #72]
 7070 04ca FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7071              	.LVL437:
 723:Veno-Echo.cpp ****     adc[2].InitSingle(hw.GetPin(17));
 7072              		.loc 20 723 5 is_stmt 1 view .LVU1951
 723:Veno-Echo.cpp ****     adc[2].InitSingle(hw.GetPin(17));
 7073              		.loc 20 723 22 is_stmt 0 view .LVU1952
 7074 04ce 1020     		movs	r0, #16
 7075 04d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7076              	.LVL438:
 7077 04d4 0346     		mov	r3, r0	@ movhi
 7078 04d6 0DF17900 		add	r0, sp, #121
 7079 04da ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7080 04de 1399     		ldr	r1, [sp, #76]
 7081 04e0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7082              	.LVL439:
 724:Veno-Echo.cpp ****     adc[3].InitSingle(hw.GetPin(18));
 7083              		.loc 20 724 5 is_stmt 1 view .LVU1953
 724:Veno-Echo.cpp ****     adc[3].InitSingle(hw.GetPin(18));
 7084              		.loc 20 724 22 is_stmt 0 view .LVU1954
 7085 04e4 1120     		movs	r0, #17
 7086 04e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7087              	.LVL440:
 7088 04ea 0346     		mov	r3, r0	@ movhi
 7089 04ec 0DF18A00 		add	r0, sp, #138
 7090 04f0 ADF85030 		strh	r3, [sp, #80]	@ movhi
 7091 04f4 1499     		ldr	r1, [sp, #80]
 7092 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7093              	.LVL441:
 725:Veno-Echo.cpp ****     adc[4].InitSingle(hw.GetPin(19));
 7094              		.loc 20 725 5 is_stmt 1 view .LVU1955
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 241


 725:Veno-Echo.cpp ****     adc[4].InitSingle(hw.GetPin(19));
 7095              		.loc 20 725 22 is_stmt 0 view .LVU1956
 7096 04fa 1220     		movs	r0, #18
 7097 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7098              	.LVL442:
 7099 0500 0346     		mov	r3, r0	@ movhi
 7100 0502 0DF19B00 		add	r0, sp, #155
 7101 0506 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7102 050a 1599     		ldr	r1, [sp, #84]
 7103 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7104              	.LVL443:
 726:Veno-Echo.cpp ****     adc[5].InitSingle(hw.GetPin(20));
 7105              		.loc 20 726 5 is_stmt 1 view .LVU1957
 726:Veno-Echo.cpp ****     adc[5].InitSingle(hw.GetPin(20));
 7106              		.loc 20 726 22 is_stmt 0 view .LVU1958
 7107 0510 1320     		movs	r0, #19
 7108 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7109              	.LVL444:
 7110 0516 0346     		mov	r3, r0	@ movhi
 7111 0518 2BA8     		add	r0, sp, #172
 7112 051a ADF85830 		strh	r3, [sp, #88]	@ movhi
 7113 051e 1699     		ldr	r1, [sp, #88]
 7114 0520 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7115              	.LVL445:
 727:Veno-Echo.cpp ****     adc[6].InitSingle(hw.GetPin(21));
 7116              		.loc 20 727 5 is_stmt 1 view .LVU1959
 727:Veno-Echo.cpp ****     adc[6].InitSingle(hw.GetPin(21));
 7117              		.loc 20 727 22 is_stmt 0 view .LVU1960
 7118 0524 1420     		movs	r0, #20
 7119 0526 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7120              	.LVL446:
 7121 052a 0346     		mov	r3, r0	@ movhi
 7122 052c 0DF1BD00 		add	r0, sp, #189
 7123 0530 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7124 0534 1799     		ldr	r1, [sp, #92]
 7125 0536 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7126              	.LVL447:
 728:Veno-Echo.cpp ****     adc[7].InitSingle(hw.GetPin(22));
 7127              		.loc 20 728 5 is_stmt 1 view .LVU1961
 728:Veno-Echo.cpp ****     adc[7].InitSingle(hw.GetPin(22));
 7128              		.loc 20 728 22 is_stmt 0 view .LVU1962
 7129 053a 1520     		movs	r0, #21
 7130 053c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7131              	.LVL448:
 7132 0540 0346     		mov	r3, r0	@ movhi
 7133 0542 0DF1CE00 		add	r0, sp, #206
 7134 0546 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7135 054a 1899     		ldr	r1, [sp, #96]
 7136 054c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7137              	.LVL449:
 729:Veno-Echo.cpp **** 
 7138              		.loc 20 729 5 is_stmt 1 view .LVU1963
 729:Veno-Echo.cpp **** 
 7139              		.loc 20 729 22 is_stmt 0 view .LVU1964
 7140 0550 1620     		movs	r0, #22
 7141 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7142              	.LVL450:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 242


 7143 0556 0346     		mov	r3, r0	@ movhi
 7144 0558 0DF1DF00 		add	r0, sp, #223
 7145 055c ADF86430 		strh	r3, [sp, #100]	@ movhi
 7146 0560 1999     		ldr	r1, [sp, #100]
 7147 0562 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7148              	.LVL451:
 731:Veno-Echo.cpp ****     hw.adc.Start();
 7149              		.loc 20 731 5 is_stmt 1 view .LVU1965
 731:Veno-Echo.cpp ****     hw.adc.Start();
 7150              		.loc 20 731 16 is_stmt 0 view .LVU1966
 7151 0566 1AA9     		add	r1, sp, #104
 7152 0568 0423     		movs	r3, #4
 7153 056a 0822     		movs	r2, #8
 7154 056c 1348     		ldr	r0, .L399+48
 7155 056e FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7156              	.LVL452:
 732:Veno-Echo.cpp **** 
 7157              		.loc 20 732 5 is_stmt 1 view .LVU1967
 732:Veno-Echo.cpp **** 
 7158              		.loc 20 732 17 is_stmt 0 view .LVU1968
 7159 0572 1248     		ldr	r0, .L399+48
 7160 0574 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7161              	.LVL453:
 735:Veno-Echo.cpp ****     // start audio callback
 7162              		.loc 20 735 5 is_stmt 1 view .LVU1969
 735:Veno-Echo.cpp ****     // start audio callback
 7163              		.loc 20 735 25 is_stmt 0 view .LVU1970
 7164 0578 3946     		mov	r1, r7
 7165 057a 0548     		ldr	r0, .L399+4
 7166 057c FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7167              	.LVL454:
 737:Veno-Echo.cpp **** 
 7168              		.loc 20 737 5 is_stmt 1 view .LVU1971
 737:Veno-Echo.cpp **** 
 7169              		.loc 20 737 18 is_stmt 0 view .LVU1972
 7170 0580 0F49     		ldr	r1, .L399+52
 7171 0582 0348     		ldr	r0, .L399+4
 7172 0584 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7173              	.LVL455:
 7174              	.L394:
 741:Veno-Echo.cpp ****      {
 7175              		.loc 20 741 6 is_stmt 1 discriminator 1 view .LVU1973
 741:Veno-Echo.cpp ****      {
 7176              		.loc 20 741 6 discriminator 1 view .LVU1974
 741:Veno-Echo.cpp ****      {
 7177              		.loc 20 741 6 discriminator 1 view .LVU1975
 741:Veno-Echo.cpp ****      {
 7178              		.loc 20 741 6 discriminator 1 view .LVU1976
 7179 0588 FEE7     		b	.L394
 7180              	.L400:
 7181 058a 00BF     		.align	2
 7182              	.L399:
 7183 058c 00000000 		.word	.LANCHOR36
 7184 0590 00000000 		.word	.LANCHOR4
 7185 0594 00000000 		.word	.LANCHOR37
 7186 0598 00004843 		.word	1128792064
 7187 059c 3333333F 		.word	1060320051
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 243


 7188 05a0 00000000 		.word	.LANCHOR105
 7189 05a4 00000000 		.word	.LANCHOR106
 7190 05a8 0000C842 		.word	1120403456
 7191 05ac 00000000 		.word	.LANCHOR107
 7192 05b0 00000000 		.word	.LANCHOR12
 7193 05b4 00000000 		.word	.LANCHOR16
 7194 05b8 00000000 		.word	.LANCHOR89
 7195 05bc 18000000 		.word	.LANCHOR4+24
 7196 05c0 00000000 		.word	_ZL13AudioCallbackPfS_j
 7197              		.cfi_endproc
 7198              	.LFE4311:
 7200              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 7201              		.align	1
 7202              		.p2align 2,,3
 7203              		.global	_Z13TurnOnAllLEDsv
 7204              		.syntax unified
 7205              		.thumb
 7206              		.thumb_func
 7207              		.fpu fpv5-d16
 7209              	_Z13TurnOnAllLEDsv:
 7210              	.LFB4332:
1835:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7211              		.loc 20 1835 1 view -0
 7212              		.cfi_startproc
 7213              		@ args = 0, pretend = 0, frame = 0
 7214              		@ frame_needed = 0, uses_anonymous_args = 0
1836:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7215              		.loc 20 1836 5 view .LVU1978
1835:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7216              		.loc 20 1835 1 is_stmt 0 view .LVU1979
 7217 0000 08B5     		push	{r3, lr}
 7218              		.cfi_def_cfa_offset 8
 7219              		.cfi_offset 3, -8
 7220              		.cfi_offset 14, -4
1836:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7221              		.loc 20 1836 26 view .LVU1980
 7222 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 7223 0006 1148     		ldr	r0, .L403
 7224 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7225              	.LVL456:
1837:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7226              		.loc 20 1837 5 is_stmt 1 view .LVU1981
1837:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7227              		.loc 20 1837 28 is_stmt 0 view .LVU1982
 7228 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 7229 0010 0F48     		ldr	r0, .L403+4
 7230 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7231              	.LVL457:
1838:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7232              		.loc 20 1838 5 is_stmt 1 view .LVU1983
1838:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7233              		.loc 20 1838 28 is_stmt 0 view .LVU1984
 7234 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 7235 001a 0E48     		ldr	r0, .L403+8
 7236 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7237              	.LVL458:
1839:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 244


 7238              		.loc 20 1839 5 is_stmt 1 view .LVU1985
1839:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7239              		.loc 20 1839 21 is_stmt 0 view .LVU1986
 7240 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 7241 0024 0C48     		ldr	r0, .L403+12
 7242 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7243              	.LVL459:
1840:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7244              		.loc 20 1840 5 is_stmt 1 view .LVU1987
1840:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7245              		.loc 20 1840 21 is_stmt 0 view .LVU1988
 7246 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 7247 002e 0B48     		ldr	r0, .L403+16
 7248 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7249              	.LVL460:
1841:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7250              		.loc 20 1841 5 is_stmt 1 view .LVU1989
1841:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7251              		.loc 20 1841 19 is_stmt 0 view .LVU1990
 7252 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 7253 0038 0948     		ldr	r0, .L403+20
 7254 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7255              	.LVL461:
1842:Veno-Echo.cpp **** }
 7256              		.loc 20 1842 5 is_stmt 1 view .LVU1991
1842:Veno-Echo.cpp **** }
 7257              		.loc 20 1842 19 is_stmt 0 view .LVU1992
 7258 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 7259 0042 0848     		ldr	r0, .L403+24
1843:Veno-Echo.cpp **** 
 7260              		.loc 20 1843 1 view .LVU1993
 7261 0044 BDE80840 		pop	{r3, lr}
 7262              		.cfi_restore 14
 7263              		.cfi_restore 3
 7264              		.cfi_def_cfa_offset 0
1842:Veno-Echo.cpp **** }
 7265              		.loc 20 1842 19 view .LVU1994
 7266 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7267              	.LVL462:
 7268              	.L404:
 7269              		.align	2
 7270              	.L403:
 7271 004c 00000000 		.word	.LANCHOR89
 7272 0050 04000000 		.word	.LANCHOR0+4
 7273 0054 04000000 		.word	.LANCHOR1+4
 7274 0058 00000000 		.word	.LANCHOR93
 7275 005c 00000000 		.word	.LANCHOR94
 7276 0060 00000000 		.word	.LANCHOR91
 7277 0064 00000000 		.word	.LANCHOR92
 7278              		.cfi_endproc
 7279              	.LFE4332:
 7281              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 7282              		.align	1
 7283              		.p2align 2,,3
 7284              		.global	_Z12ResetAllLEDsv
 7285              		.syntax unified
 7286              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 245


 7287              		.thumb_func
 7288              		.fpu fpv5-d16
 7290              	_Z12ResetAllLEDsv:
 7291              	.LFB4333:
1846:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7292              		.loc 20 1846 1 is_stmt 1 view -0
 7293              		.cfi_startproc
 7294              		@ args = 0, pretend = 0, frame = 0
 7295              		@ frame_needed = 0, uses_anonymous_args = 0
1847:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7296              		.loc 20 1847 5 view .LVU1996
1846:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7297              		.loc 20 1846 1 is_stmt 0 view .LVU1997
 7298 0000 08B5     		push	{r3, lr}
 7299              		.cfi_def_cfa_offset 8
 7300              		.cfi_offset 3, -8
 7301              		.cfi_offset 14, -4
1847:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7302              		.loc 20 1847 26 view .LVU1998
 7303 0002 9FED1E0A 		vldr.32	s0, .L412
 7304 0006 1E48     		ldr	r0, .L412+4
 7305 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7306              	.LVL463:
1848:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7307              		.loc 20 1848 5 is_stmt 1 view .LVU1999
1848:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7308              		.loc 20 1848 28 is_stmt 0 view .LVU2000
 7309 000c 9FED1B0A 		vldr.32	s0, .L412
 7310 0010 1C48     		ldr	r0, .L412+8
 7311 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7312              	.LVL464:
1849:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7313              		.loc 20 1849 5 is_stmt 1 view .LVU2001
1849:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7314              		.loc 20 1849 28 is_stmt 0 view .LVU2002
 7315 0016 1C48     		ldr	r0, .L412+12
 7316 0018 9FED180A 		vldr.32	s0, .L412
 7317 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7318              	.LVL465:
1850:Veno-Echo.cpp ****     {
 7319              		.loc 20 1850 5 is_stmt 1 view .LVU2003
1850:Veno-Echo.cpp ****     {
 7320              		.loc 20 1850 26 is_stmt 0 view .LVU2004
 7321 0020 1A48     		ldr	r0, .L412+16
 7322 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7323              	.LVL466:
1850:Veno-Echo.cpp ****     {
 7324              		.loc 20 1850 5 view .LVU2005
 7325 0026 C8B9     		cbnz	r0, .L406
1852:Veno-Echo.cpp ****     }
 7326              		.loc 20 1852 9 is_stmt 1 view .LVU2006
1852:Veno-Echo.cpp ****     }
 7327              		.loc 20 1852 25 is_stmt 0 view .LVU2007
 7328 0028 1848     		ldr	r0, .L412+16
 7329 002a 9FED140A 		vldr.32	s0, .L412
 7330 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7331              	.LVL467:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 246


1859:Veno-Echo.cpp ****     {
 7332              		.loc 20 1859 5 is_stmt 1 view .LVU2008
1859:Veno-Echo.cpp ****     {
 7333              		.loc 20 1859 26 is_stmt 0 view .LVU2009
 7334 0032 1748     		ldr	r0, .L412+20
 7335 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7336              	.LVL468:
1859:Veno-Echo.cpp ****     {
 7337              		.loc 20 1859 5 view .LVU2010
 7338 0038 D0B9     		cbnz	r0, .L408
 7339              	.L411:
1861:Veno-Echo.cpp ****     }
 7340              		.loc 20 1861 9 is_stmt 1 view .LVU2011
1861:Veno-Echo.cpp ****     }
 7341              		.loc 20 1861 25 is_stmt 0 view .LVU2012
 7342 003a 9FED100A 		vldr.32	s0, .L412
 7343 003e 1448     		ldr	r0, .L412+20
 7344 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7345              	.LVL469:
 7346              	.L409:
1868:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7347              		.loc 20 1868 5 is_stmt 1 view .LVU2013
1868:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7348              		.loc 20 1868 19 is_stmt 0 view .LVU2014
 7349 0044 9FED0D0A 		vldr.32	s0, .L412
 7350 0048 1248     		ldr	r0, .L412+24
 7351 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7352              	.LVL470:
1869:Veno-Echo.cpp **** }
 7353              		.loc 20 1869 5 is_stmt 1 view .LVU2015
1869:Veno-Echo.cpp **** }
 7354              		.loc 20 1869 19 is_stmt 0 view .LVU2016
 7355 004e 9FED0B0A 		vldr.32	s0, .L412
 7356 0052 1148     		ldr	r0, .L412+28
1870:Veno-Echo.cpp **** 
 7357              		.loc 20 1870 1 view .LVU2017
 7358 0054 BDE80840 		pop	{r3, lr}
 7359              		.cfi_remember_state
 7360              		.cfi_restore 14
 7361              		.cfi_restore 3
 7362              		.cfi_def_cfa_offset 0
1869:Veno-Echo.cpp **** }
 7363              		.loc 20 1869 19 view .LVU2018
 7364 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7365              	.LVL471:
 7366              	.L406:
 7367              		.cfi_restore_state
1856:Veno-Echo.cpp ****     }
 7368              		.loc 20 1856 8 is_stmt 1 view .LVU2019
1856:Veno-Echo.cpp ****     }
 7369              		.loc 20 1856 24 is_stmt 0 view .LVU2020
 7370 005c 0B48     		ldr	r0, .L412+16
 7371 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 7372 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7373              	.LVL472:
1859:Veno-Echo.cpp ****     {
 7374              		.loc 20 1859 5 is_stmt 1 view .LVU2021
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 247


1859:Veno-Echo.cpp ****     {
 7375              		.loc 20 1859 26 is_stmt 0 view .LVU2022
 7376 0066 0A48     		ldr	r0, .L412+20
 7377 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7378              	.LVL473:
1859:Veno-Echo.cpp ****     {
 7379              		.loc 20 1859 5 view .LVU2023
 7380 006c 0028     		cmp	r0, #0
 7381 006e E4D0     		beq	.L411
 7382              	.L408:
1865:Veno-Echo.cpp ****     }
 7383              		.loc 20 1865 9 is_stmt 1 view .LVU2024
1865:Veno-Echo.cpp ****     }
 7384              		.loc 20 1865 25 is_stmt 0 view .LVU2025
 7385 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 7386 0074 0648     		ldr	r0, .L412+20
 7387 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7388              	.LVL474:
 7389 007a E3E7     		b	.L409
 7390              	.L413:
 7391              		.align	2
 7392              	.L412:
 7393 007c 00000000 		.word	0
 7394 0080 00000000 		.word	.LANCHOR89
 7395 0084 04000000 		.word	.LANCHOR0+4
 7396 0088 04000000 		.word	.LANCHOR1+4
 7397 008c 00000000 		.word	.LANCHOR93
 7398 0090 00000000 		.word	.LANCHOR94
 7399 0094 00000000 		.word	.LANCHOR91
 7400 0098 00000000 		.word	.LANCHOR92
 7401              		.cfi_endproc
 7402              	.LFE4333:
 7404              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 7405              		.align	1
 7406              		.p2align 2,,3
 7407              		.global	_Z14Update_Buttonsv
 7408              		.syntax unified
 7409              		.thumb
 7410              		.thumb_func
 7411              		.fpu fpv5-d16
 7413              	_Z14Update_Buttonsv:
 7414              	.LFB4329:
1568:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7415              		.loc 20 1568 1 is_stmt 1 view -0
 7416              		.cfi_startproc
 7417              		@ args = 0, pretend = 0, frame = 0
 7418              		@ frame_needed = 0, uses_anonymous_args = 0
1569:Veno-Echo.cpp ****     static uint32_t resetTime{};
 7419              		.loc 20 1569 5 view .LVU2027
1570:Veno-Echo.cpp ****     static int buttonstate{};
 7420              		.loc 20 1570 5 view .LVU2028
1571:Veno-Echo.cpp **** 
 7421              		.loc 20 1571 5 view .LVU2029
1573:Veno-Echo.cpp ****     Rev_R_sw.update();
 7422              		.loc 20 1573 5 view .LVU2030
1568:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7423              		.loc 20 1568 1 is_stmt 0 view .LVU2031
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 248


 7424 0000 70B5     		push	{r4, r5, r6, lr}
 7425              		.cfi_def_cfa_offset 16
 7426              		.cfi_offset 4, -16
 7427              		.cfi_offset 5, -12
 7428              		.cfi_offset 6, -8
 7429              		.cfi_offset 14, -4
1573:Veno-Echo.cpp ****     Rev_R_sw.update();
 7430              		.loc 20 1573 20 view .LVU2032
 7431 0002 6748     		ldr	r0, .L457
 7432 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7433              	.LVL475:
1574:Veno-Echo.cpp ****     LPF_sw.update();
 7434              		.loc 20 1574 5 is_stmt 1 view .LVU2033
1574:Veno-Echo.cpp ****     LPF_sw.update();
 7435              		.loc 20 1574 20 is_stmt 0 view .LVU2034
 7436 0008 6648     		ldr	r0, .L457+4
 7437 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7438              	.LVL476:
1575:Veno-Echo.cpp ****     HPF_sw.update();
 7439              		.loc 20 1575 5 is_stmt 1 view .LVU2035
1575:Veno-Echo.cpp ****     HPF_sw.update();
 7440              		.loc 20 1575 18 is_stmt 0 view .LVU2036
 7441 000e 6648     		ldr	r0, .L457+8
 7442 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7443              	.LVL477:
1576:Veno-Echo.cpp ****     Tap_Button.update();
 7444              		.loc 20 1576 5 is_stmt 1 view .LVU2037
1579:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7445              		.loc 20 1579 26 is_stmt 0 view .LVU2038
 7446 0014 654C     		ldr	r4, .L457+12
1576:Veno-Echo.cpp ****     Tap_Button.update();
 7447              		.loc 20 1576 18 view .LVU2039
 7448 0016 6648     		ldr	r0, .L457+16
 7449 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7450              	.LVL478:
1577:Veno-Echo.cpp **** 
 7451              		.loc 20 1577 5 is_stmt 1 view .LVU2040
1577:Veno-Echo.cpp **** 
 7452              		.loc 20 1577 22 is_stmt 0 view .LVU2041
 7453 001c 6548     		ldr	r0, .L457+20
 7454 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7455              	.LVL479:
1579:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7456              		.loc 20 1579 5 is_stmt 1 view .LVU2042
1579:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7457              		.loc 20 1579 26 is_stmt 0 view .LVU2043
 7458 0022 2046     		mov	r0, r4
 7459 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7460              	.LVL480:
1580:Veno-Echo.cpp ****     //TapButton.Debounce();
 7461              		.loc 20 1580 5 is_stmt 1 view .LVU2044
1580:Veno-Echo.cpp ****     //TapButton.Debounce();
 7462              		.loc 20 1580 26 is_stmt 0 view .LVU2045
 7463 0028 6348     		ldr	r0, .L457+24
 7464 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7465              	.LVL481:
1582:Veno-Echo.cpp ****     ClockIn.Debounce();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 249


 7466              		.loc 20 1582 5 is_stmt 1 view .LVU2046
1582:Veno-Echo.cpp ****     ClockIn.Debounce();
 7467              		.loc 20 1582 18 is_stmt 0 view .LVU2047
 7468 002e 6348     		ldr	r0, .L457+28
 7469 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7470              	.LVL482:
1583:Veno-Echo.cpp ****     //gate inputs
 7471              		.loc 20 1583 5 is_stmt 1 view .LVU2048
1583:Veno-Echo.cpp ****     //gate inputs
 7472              		.loc 20 1583 21 is_stmt 0 view .LVU2049
 7473 0034 6248     		ldr	r0, .L457+32
 7474 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7475              	.LVL483:
1585:Veno-Echo.cpp ****     {
 7476              		.loc 20 1585 5 is_stmt 1 view .LVU2050
 7477              		.loc 1 69 38 view .LVU2051
1585:Veno-Echo.cpp ****     {
 7478              		.loc 20 1585 5 is_stmt 0 view .LVU2052
 7479 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 7480 003c 7F2B     		cmp	r3, #127
 7481 003e 00F09980 		beq	.L449
 7482              	.L415:
1591:Veno-Echo.cpp ****     {
 7483              		.loc 20 1591 5 is_stmt 1 view .LVU2053
 7484              	.LVL484:
 7485              		.loc 1 69 38 view .LVU2054
1591:Veno-Echo.cpp ****     {
 7486              		.loc 20 1591 32 is_stmt 0 view .LVU2055
 7487 0042 5D4B     		ldr	r3, .L457+24
1591:Veno-Echo.cpp ****     {
 7488              		.loc 20 1591 5 view .LVU2056
 7489 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7490 0046 7F2B     		cmp	r3, #127
 7491 0048 00F09080 		beq	.L450
 7492              	.L416:
1599:Veno-Echo.cpp ****     {
 7493              		.loc 20 1599 5 is_stmt 1 view .LVU2057
1599:Veno-Echo.cpp ****     {
 7494              		.loc 20 1599 28 is_stmt 0 view .LVU2058
 7495 004c 5448     		ldr	r0, .L457
1601:Veno-Echo.cpp ****         if (buttonstate == 3)
 7496              		.loc 20 1601 21 view .LVU2059
 7497 004e 5D4C     		ldr	r4, .L457+36
1599:Veno-Echo.cpp ****     {
 7498              		.loc 20 1599 28 view .LVU2060
 7499 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7500              	.LVL485:
1599:Veno-Echo.cpp ****     {
 7501              		.loc 20 1599 5 view .LVU2061
 7502 0054 28B1     		cbz	r0, .L418
1601:Veno-Echo.cpp ****         if (buttonstate == 3)
 7503              		.loc 20 1601 9 is_stmt 1 view .LVU2062
1601:Veno-Echo.cpp ****         if (buttonstate == 3)
 7504              		.loc 20 1601 21 is_stmt 0 view .LVU2063
 7505 0056 2368     		ldr	r3, [r4]
 7506 0058 0133     		adds	r3, r3, #1
1602:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 250


 7507              		.loc 20 1602 9 view .LVU2064
 7508 005a 032B     		cmp	r3, #3
1601:Veno-Echo.cpp ****         if (buttonstate == 3)
 7509              		.loc 20 1601 21 view .LVU2065
 7510 005c 2360     		str	r3, [r4]
1602:Veno-Echo.cpp ****         {
 7511              		.loc 20 1602 9 is_stmt 1 view .LVU2066
 7512 005e 00F08D80 		beq	.L451
 7513              	.L418:
1608:Veno-Echo.cpp ****     {
 7514              		.loc 20 1608 5 view .LVU2067
1608:Veno-Echo.cpp ****     {
 7515              		.loc 20 1608 29 is_stmt 0 view .LVU2068
 7516 0062 4F48     		ldr	r0, .L457
 7517 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7518              	.LVL486:
1608:Veno-Echo.cpp ****     {
 7519              		.loc 20 1608 5 view .LVU2069
 7520 0068 10B1     		cbz	r0, .L420
1610:Veno-Echo.cpp ****     }
 7521              		.loc 20 1610 9 is_stmt 1 view .LVU2070
1610:Veno-Echo.cpp ****     }
 7522              		.loc 20 1610 21 is_stmt 0 view .LVU2071
 7523 006a 2368     		ldr	r3, [r4]
 7524 006c 013B     		subs	r3, r3, #1
 7525 006e 2360     		str	r3, [r4]
 7526              	.L420:
1613:Veno-Echo.cpp ****     {
 7527              		.loc 20 1613 5 is_stmt 1 view .LVU2072
1613:Veno-Echo.cpp ****     {
 7528              		.loc 20 1613 28 is_stmt 0 view .LVU2073
 7529 0070 4C48     		ldr	r0, .L457+4
 7530 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7531              	.LVL487:
1613:Veno-Echo.cpp ****     {
 7532              		.loc 20 1613 5 view .LVU2074
 7533 0076 28B1     		cbz	r0, .L422
1615:Veno-Echo.cpp ****         if (buttonstate == 3)
 7534              		.loc 20 1615 9 is_stmt 1 view .LVU2075
1615:Veno-Echo.cpp ****         if (buttonstate == 3)
 7535              		.loc 20 1615 21 is_stmt 0 view .LVU2076
 7536 0078 2368     		ldr	r3, [r4]
 7537 007a 0133     		adds	r3, r3, #1
1616:Veno-Echo.cpp ****         {
 7538              		.loc 20 1616 9 view .LVU2077
 7539 007c 032B     		cmp	r3, #3
1615:Veno-Echo.cpp ****         if (buttonstate == 3)
 7540              		.loc 20 1615 21 view .LVU2078
 7541 007e 2360     		str	r3, [r4]
1616:Veno-Echo.cpp ****         {
 7542              		.loc 20 1616 9 is_stmt 1 view .LVU2079
 7543 0080 00F08180 		beq	.L452
 7544              	.L422:
1622:Veno-Echo.cpp ****     {
 7545              		.loc 20 1622 5 view .LVU2080
1622:Veno-Echo.cpp ****     {
 7546              		.loc 20 1622 29 is_stmt 0 view .LVU2081
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 251


 7547 0084 4748     		ldr	r0, .L457+4
 7548 0086 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7549              	.LVL488:
1622:Veno-Echo.cpp ****     {
 7550              		.loc 20 1622 5 view .LVU2082
 7551 008a 10B1     		cbz	r0, .L424
1624:Veno-Echo.cpp ****     }
 7552              		.loc 20 1624 9 is_stmt 1 view .LVU2083
1624:Veno-Echo.cpp ****     }
 7553              		.loc 20 1624 21 is_stmt 0 view .LVU2084
 7554 008c 2368     		ldr	r3, [r4]
 7555 008e 013B     		subs	r3, r3, #1
 7556 0090 2360     		str	r3, [r4]
 7557              	.L424:
1627:Veno-Echo.cpp ****     {
 7558              		.loc 20 1627 5 is_stmt 1 view .LVU2085
1627:Veno-Echo.cpp ****     {
 7559              		.loc 20 1627 30 is_stmt 0 view .LVU2086
 7560 0092 4848     		ldr	r0, .L457+20
 7561 0094 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7562              	.LVL489:
1627:Veno-Echo.cpp ****     {
 7563              		.loc 20 1627 5 view .LVU2087
 7564 0098 0028     		cmp	r0, #0
 7565 009a 52D1     		bne	.L453
 7566              	.L426:
1654:Veno-Echo.cpp ****     {
 7567              		.loc 20 1654 5 is_stmt 1 view .LVU2088
1654:Veno-Echo.cpp ****     {
 7568              		.loc 20 1654 31 is_stmt 0 view .LVU2089
 7569 009c 4548     		ldr	r0, .L457+20
 7570 009e FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7571              	.LVL490:
1654:Veno-Echo.cpp ****     {
 7572              		.loc 20 1654 5 view .LVU2090
 7573 00a2 38B1     		cbz	r0, .L429
1656:Veno-Echo.cpp ****         buttonstate -= 1;
 7574              		.loc 20 1656 9 is_stmt 1 view .LVU2091
1657:Veno-Echo.cpp ****         mute = false;
 7575              		.loc 20 1657 21 is_stmt 0 view .LVU2092
 7576 00a4 2368     		ldr	r3, [r4]
1656:Veno-Echo.cpp ****         buttonstate -= 1;
 7577              		.loc 20 1656 15 view .LVU2093
 7578 00a6 0022     		movs	r2, #0
 7579 00a8 4748     		ldr	r0, .L457+40
1657:Veno-Echo.cpp ****         mute = false;
 7580              		.loc 20 1657 21 view .LVU2094
 7581 00aa 013B     		subs	r3, r3, #1
1658:Veno-Echo.cpp ****     }
 7582              		.loc 20 1658 14 view .LVU2095
 7583 00ac 4749     		ldr	r1, .L457+44
1656:Veno-Echo.cpp ****         buttonstate -= 1;
 7584              		.loc 20 1656 15 view .LVU2096
 7585 00ae 0270     		strb	r2, [r0]
1657:Veno-Echo.cpp ****         mute = false;
 7586              		.loc 20 1657 9 is_stmt 1 view .LVU2097
1657:Veno-Echo.cpp ****         mute = false;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 252


 7587              		.loc 20 1657 21 is_stmt 0 view .LVU2098
 7588 00b0 2360     		str	r3, [r4]
1658:Veno-Echo.cpp ****     }
 7589              		.loc 20 1658 9 is_stmt 1 view .LVU2099
1658:Veno-Echo.cpp ****     }
 7590              		.loc 20 1658 14 is_stmt 0 view .LVU2100
 7591 00b2 0A70     		strb	r2, [r1]
 7592              	.L429:
1661:Veno-Echo.cpp ****     {
 7593              		.loc 20 1661 5 is_stmt 1 view .LVU2101
1661:Veno-Echo.cpp ****     {
 7594              		.loc 20 1661 28 is_stmt 0 view .LVU2102
 7595 00b4 3F48     		ldr	r0, .L457+20
 7596 00b6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7597              	.LVL491:
1661:Veno-Echo.cpp ****     {
 7598              		.loc 20 1661 5 view .LVU2103
 7599 00ba 90B9     		cbnz	r0, .L454
 7600              	.L431:
1669:Veno-Echo.cpp ****     {
 7601              		.loc 20 1669 5 is_stmt 1 view .LVU2104
 7602 00bc 2368     		ldr	r3, [r4]
 7603 00be 032B     		cmp	r3, #3
 7604 00c0 1CD0     		beq	.L455
 7605              	.L434:
1691:Veno-Echo.cpp **** 
 7606              		.loc 20 1691 5 view .LVU2105
 7607              	.LBB1463:
 7608              	.LBI1463:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 7609              		.loc 1 75 17 view .LVU2106
 7610              	.LVL492:
 7611              	.LBB1464:
 7612              		.loc 1 75 35 view .LVU2107
 7613              	.LBE1464:
 7614              	.LBE1463:
1691:Veno-Echo.cpp **** 
 7615              		.loc 20 1691 31 is_stmt 0 view .LVU2108
 7616 00c2 3E4B     		ldr	r3, .L457+28
1691:Veno-Echo.cpp **** 
 7617              		.loc 20 1691 14 view .LVU2109
 7618 00c4 4248     		ldr	r0, .L457+48
 7619              	.LBB1468:
 7620              	.LBB1465:
 7621              		.loc 1 75 52 view .LVU2110
 7622 00c6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7623              	.LBE1465:
 7624              	.LBE1468:
 7625              	.LBB1469:
 7626              	.LBB1470:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7627              		.loc 17 70 46 view .LVU2111
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 253


 7628 00c8 4249     		ldr	r1, .L457+52
 7629              	.LBE1470:
 7630              	.LBE1469:
 7631              	.LBB1472:
 7632              	.LBB1466:
 7633              		.loc 1 75 52 view .LVU2112
 7634 00ca A3F1FF03 		sub	r3, #255
 7635              	.LBE1466:
 7636              	.LBE1472:
 7637              	.LBB1473:
 7638              	.LBB1474:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7639              		.loc 17 70 46 view .LVU2113
 7640 00ce 424A     		ldr	r2, .L457+56
 7641              	.LBE1474:
 7642              	.LBE1473:
 7643              	.LBB1476:
 7644              	.LBB1467:
 7645              		.loc 1 75 52 view .LVU2114
 7646 00d0 B3FA83F3 		clz	r3, r3
 7647 00d4 5B09     		lsrs	r3, r3, #5
 7648              	.LBE1467:
 7649              	.LBE1476:
1691:Veno-Echo.cpp **** 
 7650              		.loc 20 1691 14 view .LVU2115
 7651 00d6 0370     		strb	r3, [r0]
1694:Veno-Echo.cpp ****     delayR.SetSync(syncMode);
 7652              		.loc 20 1694 5 is_stmt 1 view .LVU2116
 7653              	.LBB1477:
 7654              	.LBI1469:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7655              		.loc 17 70 6 view .LVU2117
 7656              	.LVL493:
 7657              	.LBB1471:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7658              		.loc 17 70 36 view .LVU2118
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7659              		.loc 17 70 46 is_stmt 0 view .LVU2119
 7660 00d8 81F81E31 		strb	r3, [r1, #286]
 7661              	.LBE1471:
 7662              	.LBE1477:
1695:Veno-Echo.cpp **** }
 7663              		.loc 20 1695 5 is_stmt 1 view .LVU2120
 7664              	.LVL494:
 7665              	.LBB1478:
 7666              	.LBI1473:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7667              		.loc 17 70 6 view .LVU2121
 7668              	.LBB1475:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7669              		.loc 17 70 36 view .LVU2122
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7670              		.loc 17 70 46 is_stmt 0 view .LVU2123
 7671 00dc 82F81E31 		strb	r3, [r2, #286]
 7672              	.LBE1475:
 7673              	.LBE1478:
1696:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 254


 7674              		.loc 20 1696 1 view .LVU2124
 7675 00e0 70BD     		pop	{r4, r5, r6, pc}
 7676              	.LVL495:
 7677              	.L454:
1663:Veno-Echo.cpp ****         {
 7678              		.loc 20 1663 9 is_stmt 1 view .LVU2125
1663:Veno-Echo.cpp ****         {
 7679              		.loc 20 1663 29 is_stmt 0 view .LVU2126
 7680 00e2 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7681              	.LVL496:
1663:Veno-Echo.cpp ****         {
 7682              		.loc 20 1663 32 view .LVU2127
 7683 00e6 3D4B     		ldr	r3, .L457+60
 7684 00e8 1B68     		ldr	r3, [r3]
 7685 00ea C01A     		subs	r0, r0, r3
1663:Veno-Echo.cpp ****         {
 7686              		.loc 20 1663 9 view .LVU2128
 7687 00ec 3228     		cmp	r0, #50
 7688 00ee E5D9     		bls	.L431
1665:Veno-Echo.cpp ****         } 
 7689              		.loc 20 1665 13 is_stmt 1 view .LVU2129
1665:Veno-Echo.cpp ****         } 
 7690              		.loc 20 1665 19 is_stmt 0 view .LVU2130
 7691 00f0 354B     		ldr	r3, .L457+40
 7692 00f2 0122     		movs	r2, #1
 7693 00f4 1A70     		strb	r2, [r3]
1669:Veno-Echo.cpp ****     {
 7694              		.loc 20 1669 5 is_stmt 1 view .LVU2131
 7695 00f6 2368     		ldr	r3, [r4]
 7696 00f8 032B     		cmp	r3, #3
 7697 00fa E2D1     		bne	.L434
 7698              	.L455:
1678:Veno-Echo.cpp ****             {
 7699              		.loc 20 1678 13 view .LVU2132
1678:Veno-Echo.cpp ****             {
 7700              		.loc 20 1678 36 is_stmt 0 view .LVU2133
 7701 00fc 384E     		ldr	r6, .L457+64
1678:Veno-Echo.cpp ****             {
 7702              		.loc 20 1678 33 view .LVU2134
 7703 00fe FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7704              	.LVL497:
1678:Veno-Echo.cpp ****             {
 7705              		.loc 20 1678 13 view .LVU2135
 7706 0102 40F6B833 		movw	r3, #3000
1678:Veno-Echo.cpp ****             {
 7707              		.loc 20 1678 36 view .LVU2136
 7708 0106 3268     		ldr	r2, [r6]
 7709 0108 801A     		subs	r0, r0, r2
1678:Veno-Echo.cpp ****             {
 7710              		.loc 20 1678 13 view .LVU2137
 7711 010a 9842     		cmp	r0, r3
 7712 010c D9D9     		bls	.L434
1680:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7713              		.loc 20 1680 17 is_stmt 1 view .LVU2138
1680:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7714              		.loc 20 1680 32 is_stmt 0 view .LVU2139
 7715 010e 2448     		ldr	r0, .L457
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 255


 7716 0110 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7717              	.LVL498:
1681:Veno-Echo.cpp ****                 ResetAllLEDs();
 7718              		.loc 20 1681 17 is_stmt 1 view .LVU2140
1681:Veno-Echo.cpp ****                 ResetAllLEDs();
 7719              		.loc 20 1681 32 is_stmt 0 view .LVU2141
 7720 0114 2348     		ldr	r0, .L457+4
 7721 0116 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7722              	.LVL499:
1682:Veno-Echo.cpp ****                 //don't let reset or shift update
 7723              		.loc 20 1682 17 is_stmt 1 view .LVU2142
1686:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7724              		.loc 20 1686 29 is_stmt 0 view .LVU2143
 7725 011a 324D     		ldr	r5, .L457+68
1682:Veno-Echo.cpp ****                 //don't let reset or shift update
 7726              		.loc 20 1682 29 view .LVU2144
 7727 011c FFF7FEFF 		bl	_Z12ResetAllLEDsv
 7728              	.LVL500:
1684:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7729              		.loc 20 1684 17 is_stmt 1 view .LVU2145
1684:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7730              		.loc 20 1684 23 is_stmt 0 view .LVU2146
 7731 0120 294B     		ldr	r3, .L457+40
 7732 0122 0022     		movs	r2, #0
1685:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7733              		.loc 20 1685 30 view .LVU2147
 7734 0124 2F48     		ldr	r0, .L457+68
1686:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7735              		.loc 20 1686 29 view .LVU2148
 7736 0126 304C     		ldr	r4, .L457+72
1684:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7737              		.loc 20 1684 23 view .LVU2149
 7738 0128 1A70     		strb	r2, [r3]
1685:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7739              		.loc 20 1685 17 is_stmt 1 view .LVU2150
1685:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7740              		.loc 20 1685 30 is_stmt 0 view .LVU2151
 7741 012a FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7742              	.LVL501:
1686:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7743              		.loc 20 1686 17 is_stmt 1 view .LVU2152
1686:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7744              		.loc 20 1686 29 is_stmt 0 view .LVU2153
 7745 012e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7746 0130 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7747 0132 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7748 0136 84E80F00 		stm	r4, {r0, r1, r2, r3}
1687:Veno-Echo.cpp ****             }
 7749              		.loc 20 1687 17 is_stmt 1 view .LVU2154
1687:Veno-Echo.cpp ****             }
 7750              		.loc 20 1687 43 is_stmt 0 view .LVU2155
 7751 013a FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7752              	.LVL502:
1687:Veno-Echo.cpp ****             }
 7753              		.loc 20 1687 27 view .LVU2156
 7754 013e 3060     		str	r0, [r6]
 7755 0140 BFE7     		b	.L434
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 256


 7756              	.L453:
1629:Veno-Echo.cpp ****         {
 7757              		.loc 20 1629 9 is_stmt 1 view .LVU2157
1629:Veno-Echo.cpp ****         {
 7758              		.loc 20 1629 25 is_stmt 0 view .LVU2158
 7759 0142 2A48     		ldr	r0, .L457+76
 7760 0144 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 7761              	.LVL503:
1629:Veno-Echo.cpp ****         {
 7762              		.loc 20 1629 9 view .LVU2159
 7763 0148 10BB     		cbnz	r0, .L456
 7764              	.L427:
1633:Veno-Echo.cpp ****         
 7765              		.loc 20 1633 9 is_stmt 1 view .LVU2160
1633:Veno-Echo.cpp ****         
 7766              		.loc 20 1633 33 is_stmt 0 view .LVU2161
 7767 014a 2948     		ldr	r0, .L457+80
 7768 014c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7769              	.LVL504:
1644:Veno-Echo.cpp ****         buttonstate += 1;
 7770              		.loc 20 1644 9 is_stmt 1 view .LVU2162
1644:Veno-Echo.cpp ****         buttonstate += 1;
 7771              		.loc 20 1644 35 is_stmt 0 view .LVU2163
 7772 0150 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7773              	.LVL505:
1645:Veno-Echo.cpp ****         
 7774              		.loc 20 1645 21 view .LVU2164
 7775 0154 2368     		ldr	r3, [r4]
1644:Veno-Echo.cpp ****         buttonstate += 1;
 7776              		.loc 20 1644 19 view .LVU2165
 7777 0156 214A     		ldr	r2, .L457+60
1645:Veno-Echo.cpp ****         
 7778              		.loc 20 1645 21 view .LVU2166
 7779 0158 0133     		adds	r3, r3, #1
1644:Veno-Echo.cpp ****         buttonstate += 1;
 7780              		.loc 20 1644 19 view .LVU2167
 7781 015a 1060     		str	r0, [r2]
1645:Veno-Echo.cpp ****         
 7782              		.loc 20 1645 9 is_stmt 1 view .LVU2168
1647:Veno-Echo.cpp ****         {
 7783              		.loc 20 1647 9 is_stmt 0 view .LVU2169
 7784 015c 032B     		cmp	r3, #3
1645:Veno-Echo.cpp ****         
 7785              		.loc 20 1645 21 view .LVU2170
 7786 015e 2360     		str	r3, [r4]
1647:Veno-Echo.cpp ****         {
 7787              		.loc 20 1647 9 is_stmt 1 view .LVU2171
 7788 0160 9CD1     		bne	.L426
1649:Veno-Echo.cpp ****         }
 7789              		.loc 20 1649 13 view .LVU2172
1649:Veno-Echo.cpp ****         }
 7790              		.loc 20 1649 39 is_stmt 0 view .LVU2173
 7791 0162 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7792              	.LVL506:
1649:Veno-Echo.cpp ****         }
 7793              		.loc 20 1649 23 view .LVU2174
 7794 0166 1E4B     		ldr	r3, .L457+64
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 257


 7795 0168 1860     		str	r0, [r3]
 7796 016a 97E7     		b	.L426
 7797              	.L450:
1593:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7798              		.loc 20 1593 9 is_stmt 1 view .LVU2175
1593:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7799              		.loc 20 1593 24 is_stmt 0 view .LVU2176
 7800 016c 0D48     		ldr	r0, .L457+4
 7801 016e FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7802              	.LVL507:
 7803 0172 6BE7     		b	.L416
 7804              	.LVL508:
 7805              	.L449:
1587:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7806              		.loc 20 1587 9 is_stmt 1 view .LVU2177
1587:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7807              		.loc 20 1587 24 is_stmt 0 view .LVU2178
 7808 0174 0A48     		ldr	r0, .L457
 7809 0176 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7810              	.LVL509:
 7811 017a 62E7     		b	.L415
 7812              	.LVL510:
 7813              	.L451:
1604:Veno-Echo.cpp ****         }
 7814              		.loc 20 1604 13 is_stmt 1 view .LVU2179
1604:Veno-Echo.cpp ****         }
 7815              		.loc 20 1604 39 is_stmt 0 view .LVU2180
 7816 017c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7817              	.LVL511:
1604:Veno-Echo.cpp ****         }
 7818              		.loc 20 1604 23 view .LVU2181
 7819 0180 174B     		ldr	r3, .L457+64
 7820 0182 1860     		str	r0, [r3]
 7821 0184 6DE7     		b	.L418
 7822              	.L452:
1618:Veno-Echo.cpp ****         }
 7823              		.loc 20 1618 13 is_stmt 1 view .LVU2182
1618:Veno-Echo.cpp ****         }
 7824              		.loc 20 1618 39 is_stmt 0 view .LVU2183
 7825 0186 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7826              	.LVL512:
1618:Veno-Echo.cpp ****         }
 7827              		.loc 20 1618 23 view .LVU2184
 7828 018a 154B     		ldr	r3, .L457+64
 7829 018c 1860     		str	r0, [r3]
 7830 018e 79E7     		b	.L422
 7831              	.L456:
1631:Veno-Echo.cpp ****         }
 7832              		.loc 20 1631 13 is_stmt 1 view .LVU2185
1631:Veno-Echo.cpp ****         }
 7833              		.loc 20 1631 35 is_stmt 0 view .LVU2186
 7834 0190 1648     		ldr	r0, .L457+76
 7835 0192 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7836              	.LVL513:
 7837 0196 1648     		ldr	r0, .L457+80
 7838 0198 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7839              	.LVL514:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 258


 7840 019c D5E7     		b	.L427
 7841              	.L458:
 7842 019e 00BF     		.align	2
 7843              	.L457:
 7844 01a0 00000000 		.word	.LANCHOR93
 7845 01a4 00000000 		.word	.LANCHOR94
 7846 01a8 00000000 		.word	.LANCHOR91
 7847 01ac 00000000 		.word	.LANCHOR96
 7848 01b0 00000000 		.word	.LANCHOR92
 7849 01b4 00000000 		.word	.LANCHOR95
 7850 01b8 00000000 		.word	.LANCHOR97
 7851 01bc 00000000 		.word	.LANCHOR98
 7852 01c0 00000000 		.word	.LANCHOR87
 7853 01c4 00000000 		.word	.LANCHOR108
 7854 01c8 00000000 		.word	.LANCHOR7
 7855 01cc 00000000 		.word	.LANCHOR111
 7856 01d0 00000000 		.word	.LANCHOR13
 7857 01d4 00000000 		.word	.LANCHOR0
 7858 01d8 00000000 		.word	.LANCHOR1
 7859 01dc 00000000 		.word	.LANCHOR110
 7860 01e0 00000000 		.word	.LANCHOR109
 7861 01e4 00000000 		.word	.LANCHOR107
 7862 01e8 00000000 		.word	.LANCHOR16
 7863 01ec 00000000 		.word	.LANCHOR12
 7864 01f0 00000000 		.word	.LANCHOR89
 7865              		.cfi_endproc
 7866              	.LFE4329:
 7868              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 7869              		.align	1
 7870              		.p2align 2,,3
 7871              		.syntax unified
 7872              		.thumb
 7873              		.thumb_func
 7874              		.fpu fpv5-d16
 7876              	_ZL13AudioCallbackPfS_j:
 7877              	.LVL515:
 7878              	.LFB4309:
 241:Veno-Echo.cpp **** 
 7879              		.loc 20 241 1 is_stmt 1 view -0
 7880              		.cfi_startproc
 7881              		@ args = 0, pretend = 0, frame = 72
 7882              		@ frame_needed = 0, uses_anonymous_args = 0
 252:Veno-Echo.cpp **** 
 7883              		.loc 20 252 1 view .LVU2188
 270:Veno-Echo.cpp **** 
 7884              		.loc 20 270 1 view .LVU2189
 270:Veno-Echo.cpp **** 
 7885              		.loc 20 270 9 is_stmt 0 view .LVU2190
 7886 0000 DFF884C0 		ldr	ip, .L569+8
 270:Veno-Echo.cpp **** 
 7887              		.loc 20 270 20 view .LVU2191
 7888 0004 DCF80030 		ldr	r3, [ip]
 241:Veno-Echo.cpp **** 
 7889              		.loc 20 241 1 view .LVU2192
 7890 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7891              		.cfi_def_cfa_offset 36
 7892              		.cfi_offset 4, -36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 259


 7893              		.cfi_offset 5, -32
 7894              		.cfi_offset 6, -28
 7895              		.cfi_offset 7, -24
 7896              		.cfi_offset 8, -20
 7897              		.cfi_offset 9, -16
 7898              		.cfi_offset 10, -12
 7899              		.cfi_offset 11, -8
 7900              		.cfi_offset 14, -4
 270:Veno-Echo.cpp **** 
 7901              		.loc 20 270 20 view .LVU2193
 7902 000c 0133     		adds	r3, r3, #1
 270:Veno-Echo.cpp **** 
 7903              		.loc 20 270 25 view .LVU2194
 7904 000e 1C4C     		ldr	r4, .L569
 241:Veno-Echo.cpp **** 
 7905              		.loc 20 241 1 view .LVU2195
 7906 0010 0646     		mov	r6, r0
 7907 0012 1546     		mov	r5, r2
 270:Veno-Echo.cpp **** 
 7908              		.loc 20 270 25 view .LVU2196
 7909 0014 84FB0302 		smull	r0, r2, r4, r3
 7910              	.LVL516:
 270:Veno-Echo.cpp **** 
 7911              		.loc 20 270 25 view .LVU2197
 7912 0018 DC17     		asrs	r4, r3, #31
 241:Veno-Echo.cpp **** 
 7913              		.loc 20 241 1 view .LVU2198
 7914 001a 0F46     		mov	r7, r1
 7915              	.LBB1556:
 7916              	.LBB1557:
 7917              	.LBB1558:
 7918              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 260


  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 261


  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 262


 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 263


 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 264


 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 265


 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 266


 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7919              		.loc 24 419 24 view .LVU2199
 7920 001c 1949     		ldr	r1, .L569+4
 7921              	.LVL517:
 7922              		.loc 24 419 24 view .LVU2200
 7923              	.LBE1558:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 267


 7924              	.LBE1557:
 7925              	.LBE1556:
 270:Veno-Echo.cpp **** 
 7926              		.loc 20 270 25 view .LVU2201
 7927 001e 1A44     		add	r2, r2, r3
 7928 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 7929 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 7930 0028 1B1B     		subs	r3, r3, r4
 241:Veno-Echo.cpp **** 
 7931              		.loc 20 241 1 view .LVU2202
 7932 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 7933              		.cfi_def_cfa_offset 92
 7934              		.cfi_offset 80, -92
 7935              		.cfi_offset 81, -88
 7936              		.cfi_offset 82, -84
 7937              		.cfi_offset 83, -80
 7938              		.cfi_offset 84, -76
 7939              		.cfi_offset 85, -72
 7940              		.cfi_offset 86, -68
 7941              		.cfi_offset 87, -64
 7942              		.cfi_offset 88, -60
 7943              		.cfi_offset 89, -56
 7944              		.cfi_offset 90, -52
 7945              		.cfi_offset 91, -48
 7946              		.cfi_offset 92, -44
 7947              		.cfi_offset 93, -40
 270:Veno-Echo.cpp **** 
 7948              		.loc 20 270 9 view .LVU2203
 7949 002e CCF80030 		str	r3, [ip]
 272:Veno-Echo.cpp **** {
 7950              		.loc 20 272 1 is_stmt 1 view .LVU2204
 7951              	.LVL518:
 7952              	.LBB1563:
 7953              	.LBI1556:
 7954              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 268


  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 269


  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7955              		.loc 25 87 5 view .LVU2205
 7956              	.LBE1563:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7957              		.loc 25 88 7 view .LVU2206
 7958              	.LBB1564:
 7959              	.LBB1561:
 7960              	.LBI1557:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7961              		.loc 24 413 7 view .LVU2207
 7962              	.LBB1559:
 7963              		.loc 24 419 24 is_stmt 0 view .LVU2208
 7964 0032 BFF35B8F 		dmb	ish
 7965 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 7966              	.LBE1559:
 7967              	.LBE1561:
 7968              	.LBE1564:
 241:Veno-Echo.cpp **** 
 7969              		.loc 20 241 1 view .LVU2209
 7970 0038 93B0     		sub	sp, sp, #76
 7971              		.cfi_def_cfa_offset 168
 7972              	.LBB1565:
 7973              	.LBB1562:
 7974              	.LBB1560:
 7975              		.loc 24 419 24 view .LVU2210
 7976 003a BFF35B8F 		dmb	ish
 7977              	.LBE1560:
 7978              	.LBE1562:
 7979              	.LBE1565:
 272:Veno-Echo.cpp **** {
 7980              		.loc 20 272 1 view .LVU2211
 7981 003e 7BB9     		cbnz	r3, .L460
 285:Veno-Echo.cpp ****         {
 7982              		.loc 20 285 9 is_stmt 1 view .LVU2212
 7983 0040 DCF80030 		ldr	r3, [ip]
 7984 0044 072B     		cmp	r3, #7
 7985 0046 0BD8     		bhi	.L460
 7986 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 7987              	.L462:
 7988 004c 8D05     		.2byte	(.L469-.L462)/2
 7989 004e 9305     		.2byte	(.L468-.L462)/2
 7990 0050 9705     		.2byte	(.L467-.L462)/2
 7991 0052 9B05     		.2byte	(.L466-.L462)/2
 7992 0054 9F05     		.2byte	(.L465-.L462)/2
 7993 0056 A305     		.2byte	(.L464-.L462)/2
 7994 0058 0800     		.2byte	(.L463-.L462)/2
 7995 005a 8905     		.2byte	(.L461-.L462)/2
 7996              		.p2align 1
 7997              	.L463:
 312:Veno-Echo.cpp ****                 Update_width();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 270


 7998              		.loc 20 312 13 view .LVU2213
 313:Veno-Echo.cpp ****             break;
 7999              		.loc 20 313 17 view .LVU2214
 313:Veno-Echo.cpp ****             break;
 8000              		.loc 20 313 29 is_stmt 0 view .LVU2215
 8001 005c FFF7FEFF 		bl	_Z12Update_widthv
 8002              	.LVL519:
 314:Veno-Echo.cpp **** 
 8003              		.loc 20 314 13 is_stmt 1 view .LVU2216
 8004              	.L460:
 8005              	.LBB1566:
 323:Veno-Echo.cpp ****     {   
 8006              		.loc 20 323 25 discriminator 1 view .LVU2217
 8007 0060 002D     		cmp	r5, #0
 8008 0062 00F06285 		beq	.L459
 323:Veno-Echo.cpp ****     {   
 8009              		.loc 20 323 25 is_stmt 0 view .LVU2218
 8010 0066 0023     		movs	r3, #0
 8011 0068 013D     		subs	r5, r5, #1
 8012              	.LVL520:
 323:Veno-Echo.cpp ****     {   
 8013              		.loc 20 323 25 view .LVU2219
 8014 006a DFF82080 		ldr	r8, .L569+12
 8015 006e B346     		mov	fp, r6
 8016 0070 0293     		str	r3, [sp, #8]
 8017 0072 25F00103 		bic	r3, r5, #1
 8018 0076 DFF81890 		ldr	r9, .L569+16
 8019 007a 0097     		str	r7, [sp]
 8020 007c 0593     		str	r3, [sp, #20]
 8021 007e AFE1     		b	.L525
 8022              	.L570:
 8023              		.align	2
 8024              	.L569:
 8025 0080 89888888 		.word	-2004318071
 8026 0084 00000000 		.word	.LANCHOR113
 8027 0088 00000000 		.word	.LANCHOR112
 8028 008c 00000000 		.word	.LANCHOR128
 8029 0090 00000000 		.word	.LANCHOR129
 8030              	.LVL521:
 8031              	.L568:
 8032              	.LBB1567:
 8033              	.LBB1568:
 8034              	.LBB1569:
 8035              	.LBB1570:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 271


  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 8036              		.loc 19 103 17 view .LVU2220
 8037 0094 DF49     		ldr	r1, .L571
 8038              		.loc 19 103 13 view .LVU2221
 8039 0096 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 8040              		.loc 19 103 17 view .LVU2222
 8041 0098 6318     		adds	r3, r4, r1
 8042              		.loc 19 103 13 view .LVU2223
 8043 009a 0028     		cmp	r0, #0
 8044 009c 40F04B83 		bne	.L564
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 8045              		.loc 19 107 21 view .LVU2224
 8046 00a0 DD48     		ldr	r0, .L571+4
 105:delayline_reverse.h ****                 
 8047              		.loc 19 105 17 view .LVU2225
 8048 00a2 0127     		movs	r7, #1
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 8049              		.loc 19 110 45 view .LVU2226
 8050 00a4 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 8051              		.loc 19 107 17 view .LVU2227
 8052 00a6 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 8053              		.loc 19 107 21 view .LVU2228
 8054 00a8 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 8055              		.loc 19 105 17 view .LVU2229
 8056 00aa 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 8057              		.loc 19 107 17 view .LVU2230
 8058 00ac 002D     		cmp	r5, #0
 8059 00ae 40F03A85 		bne	.L483
 8060              		.loc 19 110 21 view .LVU2231
 8061 00b2 E260     		str	r2, [r4, #12]
 8062              	.L484:
 111:delayline_reverse.h ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 272


 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 8063              		.loc 19 130 45 view .LVU2232
 8064 00b4 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 8065              	.LVL522:
 8066              		.loc 19 130 45 view .LVU2233
 8067 00b8 B7EE007A 		vmov.f32	s14, #1.0e+0
 8068              		.loc 19 130 37 view .LVU2234
 8069 00bc 039A     		ldr	r2, [sp, #12]
 8070              		.loc 19 130 45 view .LVU2235
 8071 00be B8EE676A 		vcvt.f32.u32	s12, s15
 8072              		.loc 19 130 37 view .LVU2236
 8073 00c2 D2ED006A 		vldr.32	s13, [r2]
 8074              		.loc 19 130 45 view .LVU2237
 8075 00c6 C7EE067A 		vdiv.f32	s15, s14, s12
 8076              		.loc 19 130 37 view .LVU2238
 8077 00ca 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8078              		.loc 19 131 17 view .LVU2239
 8079 00ce F4EEC77A 		vcmpe.f32	s15, s14
 8080 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8081 00d6 40F32D85 		ble	.L565
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 8082              		.loc 19 133 21 view .LVU2240
 8083 00da 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8084              		.loc 19 134 21 view .LVU2241
 8085 00dc 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8086              		.loc 19 133 21 view .LVU2242
 8087 00de 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                     playinghead_ = true;
 8088              		.loc 19 135 21 view .LVU2243
 8089 00e2 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8090              		.loc 19 134 21 view .LVU2244
 8091 00e4 1970     		strb	r1, [r3]
 8092              		.loc 19 135 21 view .LVU2245
 8093 00e6 0270     		strb	r2, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 273


 8094              	.LVL523:
 8095              	.L487:
 8096              		.loc 19 135 21 view .LVU2246
 8097              	.LBE1570:
 8098              	.LBE1569:
 8099              	.LBE1568:
 366:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8100              		.loc 20 366 9 is_stmt 1 view .LVU2247
 366:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8101              		.loc 20 366 56 is_stmt 0 view .LVU2248
 8102 00e8 06AA     		add	r2, sp, #24
 8103 00ea 5946     		mov	r1, fp
 8104 00ec CB48     		ldr	r0, .L571+8
 8105 00ee FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8106              	.LVL524:
 367:Veno-Echo.cpp **** 
 8107              		.loc 20 367 56 view .LVU2249
 8108 00f2 18EE101A 		vmov	r1, s16	@ int
 8109 00f6 07AA     		add	r2, sp, #28
 8110 00f8 C948     		ldr	r0, .L571+12
 366:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8111              		.loc 20 366 56 view .LVU2250
 8112 00fa F0EE408A 		vmov.f32	s17, s0
 8113              	.LVL525:
 367:Veno-Echo.cpp **** 
 8114              		.loc 20 367 9 is_stmt 1 view .LVU2251
 367:Veno-Echo.cpp **** 
 8115              		.loc 20 367 56 is_stmt 0 view .LVU2252
 8116 00fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8117              	.LVL526:
 370:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8118              		.loc 20 370 46 view .LVU2253
 8119 0102 C848     		ldr	r0, .L571+16
 367:Veno-Echo.cpp **** 
 8120              		.loc 20 367 56 view .LVU2254
 8121 0104 B0EE408A 		vmov.f32	s16, s0
 8122              	.LVL527:
 370:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8123              		.loc 20 370 9 is_stmt 1 view .LVU2255
 370:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8124              		.loc 20 370 46 is_stmt 0 view .LVU2256
 8125 0108 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 8126              	.LVL528:
 370:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8127              		.loc 20 370 46 view .LVU2257
 8128 010c 0346     		mov	r3, r0
 371:Veno-Echo.cpp **** 
 8129              		.loc 20 371 46 view .LVU2258
 8130 010e C648     		ldr	r0, .L571+20
 370:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8131              		.loc 20 370 45 view .LVU2259
 8132 0110 1B68     		ldr	r3, [r3]	@ float
 370:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8133              		.loc 20 370 47 view .LVU2260
 8134 0112 0893     		str	r3, [sp, #32]	@ float
 371:Veno-Echo.cpp **** 
 8135              		.loc 20 371 9 is_stmt 1 view .LVU2261
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 274


 371:Veno-Echo.cpp **** 
 8136              		.loc 20 371 46 is_stmt 0 view .LVU2262
 8137 0114 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 8138              	.LVL529:
 371:Veno-Echo.cpp **** 
 8139              		.loc 20 371 45 view .LVU2263
 8140 0118 0368     		ldr	r3, [r0]	@ float
 371:Veno-Echo.cpp **** 
 8141              		.loc 20 371 47 view .LVU2264
 8142 011a 0993     		str	r3, [sp, #36]	@ float
 374:Veno-Echo.cpp **** 
 8143              		.loc 20 374 9 is_stmt 1 view .LVU2265
 374:Veno-Echo.cpp **** 
 8144              		.loc 20 374 28 is_stmt 0 view .LVU2266
 8145 011c FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 8146              	.LVL530:
 377:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8147              		.loc 20 377 9 is_stmt 1 view .LVU2267
 8148              	.LBB1579:
 8149              	.LBB1580:
1875:Veno-Echo.cpp ****         returnval = limit;
 8150              		.loc 20 1875 5 is_stmt 0 view .LVU2268
 8151 0120 B0EE007A 		vmov.f32	s14, #2.0e+0
 8152              	.LBE1580:
 8153              	.LBE1579:
 377:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8154              		.loc 20 377 34 view .LVU2269
 8155 0124 DDED087A 		vldr.32	s15, [sp, #32]
 8156              	.LVL531:
 8157              	.LBB1583:
 8158              	.LBI1579:
1872:Veno-Echo.cpp **** {
 8159              		.loc 20 1872 7 is_stmt 1 view .LVU2270
 8160              	.LBB1581:
1874:Veno-Echo.cpp ****     if (input > limit)
 8161              		.loc 20 1874 5 view .LVU2271
1875:Veno-Echo.cpp ****         returnval = limit;
 8162              		.loc 20 1875 5 view .LVU2272
 8163 0128 F4EEC77A 		vcmpe.f32	s15, s14
 8164 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8165 0130 00F3CC84 		bgt	.L528
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8166              		.loc 20 1877 10 view .LVU2273
 8167 0134 B8EE007A 		vmov.f32	s14, #-2.0e+0
1878:Veno-Echo.cpp ****     else
 8168              		.loc 20 1878 19 is_stmt 0 view .LVU2274
 8169 0138 F4EE477A 		vcmp.f32	s15, s14
 8170 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8171 0140 48BF     		it	mi
 8172 0142 F0EE477A 		vmovmi.f32	s15, s14
 8173              	.LVL532:
 8174              	.L491:
1882:Veno-Echo.cpp **** }
 8175              		.loc 20 1882 5 is_stmt 1 view .LVU2275
1882:Veno-Echo.cpp **** }
 8176              		.loc 20 1882 5 is_stmt 0 view .LVU2276
 8177              	.LBE1581:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 275


 8178              	.LBE1583:
 8179              	.LBB1584:
 8180              	.LBB1585:
1875:Veno-Echo.cpp ****         returnval = limit;
 8181              		.loc 20 1875 5 view .LVU2277
 8182 0146 B0EE007A 		vmov.f32	s14, #2.0e+0
 8183              	.LBE1585:
 8184              	.LBE1584:
 378:Veno-Echo.cpp **** 
 8185              		.loc 20 378 34 view .LVU2278
 8186 014a 9DED090A 		vldr.32	s0, [sp, #36]
 377:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8187              		.loc 20 377 23 view .LVU2279
 8188 014e CDED087A 		vstr.32	s15, [sp, #32]
 378:Veno-Echo.cpp **** 
 8189              		.loc 20 378 9 is_stmt 1 view .LVU2280
 8190              	.LVL533:
 8191              	.LBB1589:
 8192              	.LBI1584:
1872:Veno-Echo.cpp **** {
 8193              		.loc 20 1872 7 view .LVU2281
 8194              	.LBB1586:
1874:Veno-Echo.cpp ****     if (input > limit)
 8195              		.loc 20 1874 5 view .LVU2282
1875:Veno-Echo.cpp ****         returnval = limit;
 8196              		.loc 20 1875 5 view .LVU2283
 8197 0152 B4EEC70A 		vcmpe.f32	s0, s14
 8198 0156 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8199 015a 00F31F84 		bgt	.L529
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8200              		.loc 20 1877 10 view .LVU2284
 8201 015e B8EE007A 		vmov.f32	s14, #-2.0e+0
 8202              	.LBE1586:
 8203              	.LBE1589:
 8204              	.LBB1590:
 380:Veno-Echo.cpp **** {
 8205              		.loc 20 380 1 is_stmt 0 view .LVU2285
 8206 0162 B24B     		ldr	r3, .L571+24
 8207 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8208              	.LBE1590:
 8209              	.LBB1612:
 8210              	.LBB1587:
1878:Veno-Echo.cpp ****     else
 8211              		.loc 20 1878 19 view .LVU2286
 8212 0166 B4EE470A 		vcmp.f32	s0, s14
 8213 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8214 016e 48BF     		it	mi
 8215 0170 B0EE470A 		vmovmi.f32	s0, s14
 8216              	.LVL534:
1882:Veno-Echo.cpp **** }
 8217              		.loc 20 1882 5 is_stmt 1 view .LVU2287
1882:Veno-Echo.cpp **** }
 8218              		.loc 20 1882 5 is_stmt 0 view .LVU2288
 8219              	.LBE1587:
 8220              	.LBE1612:
 378:Veno-Echo.cpp **** 
 8221              		.loc 20 378 23 view .LVU2289
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 276


 8222 0174 8DED090A 		vstr.32	s0, [sp, #36]
 380:Veno-Echo.cpp **** {
 8223              		.loc 20 380 1 is_stmt 1 view .LVU2290
 8224              	.LBB1613:
 8225 0178 002B     		cmp	r3, #0
 8226 017a 00F01884 		beq	.L566
 8227              	.L495:
 8228              	.LBE1613:
 424:Veno-Echo.cpp ****         static float RNegFB{};
 8229              		.loc 20 424 9 view .LVU2291
 425:Veno-Echo.cpp **** 
 8230              		.loc 20 425 9 view .LVU2292
 428:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8231              		.loc 20 428 9 view .LVU2293
 428:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8232              		.loc 20 428 22 is_stmt 0 view .LVU2294
 8233 017e AC4B     		ldr	r3, .L571+28
 8234              	.LBB1614:
 8235              	.LBB1615:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 8236              		.loc 12 57 16 view .LVU2295
 8237 0180 D8ED042A 		vldr.32	s5, [r8, #16]
 8238              	.LBE1615:
 8239              	.LBE1614:
 428:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8240              		.loc 20 428 22 view .LVU2296
 8241 0184 D3ED004A 		vldr.32	s9, [r3]
 8242 0188 AA4B     		ldr	r3, .L571+32
 8243              	.LBB1627:
 8244              	.LBB1616:
 8245              		.loc 12 57 37 view .LVU2297
 8246 018a 98ED006A 		vldr.32	s12, [r8]
 8247              	.LBE1616:
 8248              	.LBE1627:
 428:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8249              		.loc 20 428 22 view .LVU2298
 8250 018e 93ED007A 		vldr.32	s14, [r3]
 431:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8251              		.loc 20 431 22 view .LVU2299
 8252 0192 A94B     		ldr	r3, .L571+36
 428:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8253              		.loc 20 428 9 view .LVU2300
 8254 0194 F4EEC74A 		vcmpe.f32	s9, s14
 8255              	.LBB1628:
 8256              	.LBB1629:
 8257              		.loc 12 57 16 view .LVU2301
 8258 0198 D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 277


  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 8259              		.loc 12 65 20 view .LVU2302
 8260 019c 99ED054A 		vldr.32	s8, [r9, #20]
 8261              		.loc 12 65 53 view .LVU2303
 8262 01a0 99ED032A 		vldr.32	s4, [r9, #12]
 8263              	.LBE1629:
 8264              	.LBE1628:
 428:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8265              		.loc 20 428 9 view .LVU2304
 8266 01a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8267              	.LBB1638:
 8268              	.LBB1617:
 8269              		.loc 12 65 20 view .LVU2305
 8270 01a8 98ED053A 		vldr.32	s6, [r8, #20]
 8271              		.loc 12 65 53 view .LVU2306
 8272 01ac 98ED031A 		vldr.32	s2, [r8, #12]
 8273              	.LBE1617:
 8274              	.LBE1638:
 447:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 8275              		.loc 20 447 13 view .LVU2307
 8276 01b0 DFEDA21A 		vldr.32	s3, .L571+40
 8277 01b4 58BF     		it	pl
 8278 01b6 74EEC74A 		vsubpl.f32	s9, s9, s14
 431:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8279              		.loc 20 431 9 is_stmt 1 view .LVU2308
 431:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8280              		.loc 20 431 22 is_stmt 0 view .LVU2309
 8281 01ba 93ED007A 		vldr.32	s14, [r3]
 8282 01be A04B     		ldr	r3, .L571+44
 8283 01c0 D3ED006A 		vldr.32	s13, [r3]
 434:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 8284              		.loc 20 434 15 view .LVU2310
 8285 01c4 67EEA44A 		vmul.f32	s9, s15, s9
 8286              	.LBB1639:
 8287              	.LBB1630:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8288              		.loc 12 57 37 view .LVU2311
 8289 01c8 D9ED007A 		vldr.32	s15, [r9]
 8290              	.LBE1630:
 8291              	.LBE1639:
 431:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8292              		.loc 20 431 9 view .LVU2312
 8293 01cc B4EEE67A 		vcmpe.f32	s14, s13
 438:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8294              		.loc 20 438 36 view .LVU2313
 8295 01d0 9C4B     		ldr	r3, .L571+48
 431:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8296              		.loc 20 431 9 view .LVU2314
 8297 01d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8298 01d6 58BF     		it	pl
 8299 01d8 37EE667A 		vsubpl.f32	s14, s14, s13
 434:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 8300              		.loc 20 434 9 is_stmt 1 view .LVU2315
 8301              	.LVL535:
 435:Veno-Echo.cpp **** 
 8302              		.loc 20 435 9 view .LVU2316
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 278


 438:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8303              		.loc 20 438 36 is_stmt 0 view .LVU2317
 8304 01dc F7EE006A 		vmov.f32	s13, #1.0e+0
 435:Veno-Echo.cpp **** 
 8305              		.loc 20 435 15 view .LVU2318
 8306 01e0 20EE070A 		vmul.f32	s0, s0, s14
 8307              	.LVL536:
 438:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8308              		.loc 20 438 9 is_stmt 1 view .LVU2319
 8309              	.LBB1640:
 8310              	.LBB1618:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8311              		.loc 12 57 33 is_stmt 0 view .LVU2320
 8312 01e4 36EEE25A 		vsub.f32	s10, s13, s5
 8313              	.LBE1618:
 8314              	.LBE1640:
 8315              	.LBB1641:
 8316              	.LBB1631:
 8317 01e8 76EEE35A 		vsub.f32	s11, s13, s7
 8318              	.LBE1631:
 8319              	.LBE1641:
 8320              	.LBB1642:
 8321              	.LBB1619:
 8322              		.loc 12 65 45 view .LVU2321
 8323 01ec 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8324              		.loc 12 57 37 view .LVU2322
 8325 01f0 25EE065A 		vmul.f32	s10, s10, s12
 8326              	.LBE1619:
 8327              	.LBE1642:
 438:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8328              		.loc 20 438 36 view .LVU2323
 8329 01f4 93ED006A 		vldr.32	s12, [r3]
 8330              	.LBB1643:
 8331              	.LBB1632:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8332              		.loc 12 57 37 view .LVU2324
 8333 01f8 65EEA75A 		vmul.f32	s11, s11, s15
 8334              		.loc 12 65 45 view .LVU2325
 8335 01fc 76EEC47A 		vsub.f32	s15, s13, s8
 8336              	.LBE1632:
 8337              	.LBE1643:
 8338              	.LBB1644:
 8339              	.LBB1620:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8340              		.loc 12 57 28 view .LVU2326
 8341 0200 A4EEA25A 		vfma.f32	s10, s9, s5
 8342              	.LBE1620:
 8343              	.LBE1644:
 8344              	.LBB1645:
 8345              	.LBB1633:
 8346 0204 E0EE235A 		vfma.f32	s11, s0, s7
 8347              		.loc 12 65 53 view .LVU2327
 8348 0208 67EE827A 		vmul.f32	s15, s15, s4
 8349              	.LBE1633:
 8350              	.LBE1645:
 8351              	.LBB1646:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 279


 8352              	.LBB1621:
 8353 020c 27EE017A 		vmul.f32	s14, s14, s2
 8354              	.LBE1621:
 8355              	.LBE1646:
 438:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8356              		.loc 20 438 36 view .LVU2328
 8357 0210 76EEC66A 		vsub.f32	s13, s13, s12
 8358              	.LBB1647:
 8359              	.LBB1622:
  58:envFollow.h   **** 
 8360              		.loc 12 58 30 view .LVU2329
 8361 0214 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8362              		.loc 12 57 13 view .LVU2330
 8363 0218 88ED005A 		vstr.32	s10, [r8]
 8364              	.LBE1622:
 8365              	.LBE1647:
 8366              	.LBB1648:
 8367              	.LBB1634:
  58:envFollow.h   **** 
 8368              		.loc 12 58 30 view .LVU2331
 8369 021c 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8370              		.loc 12 57 13 view .LVU2332
 8371 0220 C9ED005A 		vstr.32	s11, [r9]
 8372              	.LBE1634:
 8373              	.LBE1648:
 438:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8374              		.loc 20 438 89 view .LVU2333
 8375 0224 66EE005A 		vmul.f32	s11, s12, s0
 8376              	.LBB1649:
 8377              	.LBB1623:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8378              		.loc 12 61 27 view .LVU2334
 8379 0228 F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 8380              		.loc 12 58 21 view .LVU2335
 8381 022c 88ED022A 		vstr.32	s4, [r8, #8]
 8382              	.LBE1623:
 8383              	.LBE1649:
 8384              	.LBB1650:
 8385              	.LBB1635:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8386              		.loc 12 61 27 view .LVU2336
 8387 0230 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 8388              		.loc 12 58 21 view .LVU2337
 8389 0234 C9ED022A 		vstr.32	s5, [r9, #8]
 8390              	.LBE1635:
 8391              	.LBE1650:
 439:Veno-Echo.cpp **** 
 8392              		.loc 20 439 89 view .LVU2338
 8393 0238 26EE246A 		vmul.f32	s12, s12, s9
 8394              	.LBB1651:
 8395              	.LBB1624:
 8396              		.loc 12 65 40 view .LVU2339
 8397 023c A3EE837A 		vfma.f32	s14, s7, s6
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 280


  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8398              		.loc 12 61 20 view .LVU2340
 8399 0240 C8ED013A 		vstr.32	s7, [r8, #4]
 8400              	.LBE1624:
 8401              	.LBE1651:
 8402              	.LBB1652:
 8403              	.LBB1636:
 8404              		.loc 12 65 40 view .LVU2341
 8405 0244 E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8406              		.loc 12 61 20 view .LVU2342
 8407 0248 89ED015A 		vstr.32	s10, [r9, #4]
 8408              	.LBE1636:
 8409              	.LBE1652:
 438:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8410              		.loc 20 438 15 view .LVU2343
 8411 024c E6EEA45A 		vfma.f32	s11, s13, s9
 8412              	.LVL537:
 439:Veno-Echo.cpp **** 
 8413              		.loc 20 439 9 is_stmt 1 view .LVU2344
 439:Veno-Echo.cpp **** 
 8414              		.loc 20 439 15 is_stmt 0 view .LVU2345
 8415 0250 A6EE806A 		vfma.f32	s12, s13, s0
 8416              	.LVL538:
 443:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 8417              		.loc 20 443 9 is_stmt 1 view .LVU2346
 8418              	.LBB1653:
 8419              	.LBI1614:
  54:envFollow.h   ****     {
 8420              		.loc 12 54 11 view .LVU2347
 8421              	.LBB1625:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8422              		.loc 12 57 9 view .LVU2348
  58:envFollow.h   **** 
 8423              		.loc 12 58 9 view .LVU2349
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8424              		.loc 12 61 9 view .LVU2350
 8425              		.loc 12 65 9 view .LVU2351
 8426              	.LBE1625:
 8427              	.LBE1653:
 447:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 8428              		.loc 20 447 13 is_stmt 0 view .LVU2352
 8429 0254 B4EEE17A 		vcmpe.f32	s14, s3
 8430              	.LBB1654:
 8431              	.LBB1626:
 8432              		.loc 12 65 17 view .LVU2353
 8433 0258 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 8434              		.loc 12 67 9 is_stmt 1 view .LVU2354
 8435              	.LVL539:
 8436              		.loc 12 67 9 is_stmt 0 view .LVU2355
 8437              	.LBE1626:
 8438              	.LBE1654:
 444:Veno-Echo.cpp **** 
 8439              		.loc 20 444 9 is_stmt 1 view .LVU2356
 8440              	.LBB1655:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 281


 8441              	.LBI1628:
  54:envFollow.h   ****     {
 8442              		.loc 12 54 11 view .LVU2357
 8443              	.LBB1637:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8444              		.loc 12 57 9 view .LVU2358
  58:envFollow.h   **** 
 8445              		.loc 12 58 9 view .LVU2359
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8446              		.loc 12 61 9 view .LVU2360
  65:envFollow.h   **** 
 8447              		.loc 12 65 9 view .LVU2361
  65:envFollow.h   **** 
 8448              		.loc 12 65 17 is_stmt 0 view .LVU2362
 8449 025c C9ED037A 		vstr.32	s15, [r9, #12]
 8450              		.loc 12 67 9 is_stmt 1 view .LVU2363
 8451              	.LVL540:
 8452              		.loc 12 67 9 is_stmt 0 view .LVU2364
 8453              	.LBE1637:
 8454              	.LBE1655:
 447:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 8455              		.loc 20 447 13 is_stmt 1 view .LVU2365
 8456 0260 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8457 0264 C0F29783 		blt	.L557
 448:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 8458              		.loc 20 448 17 view .LVU2366
 448:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 8459              		.loc 20 448 32 is_stmt 0 view .LVU2367
 8460 0268 37EE617A 		vsub.f32	s14, s14, s3
 8461              	.LVL541:
 448:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 8462              		.loc 20 448 47 view .LVU2368
 8463 026c F0EE086A 		vmov.f32	s13, #3.0e+0
 8464 0270 27EE267A 		vmul.f32	s14, s14, s13
 8465              	.L501:
 452:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 8466              		.loc 20 452 13 view .LVU2369
 8467 0274 DFED716A 		vldr.32	s13, .L571+40
 8468 0278 6E4B     		ldr	r3, .L571+32
 8469 027a F4EEE67A 		vcmpe.f32	s15, s13
 8470 027e 83ED007A 		vstr.32	s14, [r3]
 452:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 8471              		.loc 20 452 13 is_stmt 1 view .LVU2370
 8472 0282 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8473 0286 C0F28383 		blt	.L558
 453:Veno-Echo.cpp ****             else RNegFB = 0.0;
 8474              		.loc 20 453 17 view .LVU2371
 453:Veno-Echo.cpp ****             else RNegFB = 0.0;
 8475              		.loc 20 453 32 is_stmt 0 view .LVU2372
 8476 028a 77EEE67A 		vsub.f32	s15, s15, s13
 8477              	.LVL542:
 453:Veno-Echo.cpp ****             else RNegFB = 0.0;
 8478              		.loc 20 453 47 view .LVU2373
 8479 028e B0EE087A 		vmov.f32	s14, #3.0e+0
 8480 0292 67EE877A 		vmul.f32	s15, s15, s14
 8481              	.L503:
 8482 0296 6A4B     		ldr	r3, .L571+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 282


 457:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 8483              		.loc 20 457 15 view .LVU2374
 8484 0298 38EEA50A 		vadd.f32	s0, s17, s11
 8485              	.LVL543:
 458:Veno-Echo.cpp ****  
 8486              		.loc 20 458 15 view .LVU2375
 8487 029c 38EE068A 		vadd.f32	s16, s16, s12
 8488              	.LVL544:
 458:Veno-Echo.cpp ****  
 8489              		.loc 20 458 15 view .LVU2376
 8490 02a0 C3ED007A 		vstr.32	s15, [r3]
 457:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 8491              		.loc 20 457 9 is_stmt 1 view .LVU2377
 8492              	.LVL545:
 458:Veno-Echo.cpp ****  
 8493              		.loc 20 458 9 view .LVU2378
 461:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 8494              		.loc 20 461 9 view .LVU2379
 8495              	.LBB1656:
 8496              	.LBI1656:
1872:Veno-Echo.cpp **** {
 8497              		.loc 20 1872 7 view .LVU2380
 8498              	.LBB1657:
1874:Veno-Echo.cpp ****     if (input > limit)
 8499              		.loc 20 1874 5 view .LVU2381
1875:Veno-Echo.cpp ****         returnval = limit;
 8500              		.loc 20 1875 5 view .LVU2382
 8501 02a4 F0EE007A 		vmov.f32	s15, #2.0e+0
 8502 02a8 B4EEE70A 		vcmpe.f32	s0, s15
 8503 02ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8504 02b0 00F31384 		bgt	.L535
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8505              		.loc 20 1877 10 view .LVU2383
 8506 02b4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1878:Veno-Echo.cpp ****     else
 8507              		.loc 20 1878 19 is_stmt 0 view .LVU2384
 8508 02b8 B4EE670A 		vcmp.f32	s0, s15
 8509 02bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8510 02c0 48BF     		it	mi
 8511 02c2 B0EE670A 		vmovmi.f32	s0, s15
 8512              	.LVL546:
 8513              	.L505:
1882:Veno-Echo.cpp **** }
 8514              		.loc 20 1882 5 is_stmt 1 view .LVU2385
1882:Veno-Echo.cpp **** }
 8515              		.loc 20 1882 5 is_stmt 0 view .LVU2386
 8516              	.LBE1657:
 8517              	.LBE1656:
 462:Veno-Echo.cpp **** 
 8518              		.loc 20 462 9 is_stmt 1 view .LVU2387
 8519              	.LBB1659:
 8520              	.LBI1659:
1872:Veno-Echo.cpp **** {
 8521              		.loc 20 1872 7 view .LVU2388
 8522              	.LBB1660:
1874:Veno-Echo.cpp ****     if (input > limit)
 8523              		.loc 20 1874 5 view .LVU2389
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 283


1875:Veno-Echo.cpp ****         returnval = limit;
 8524              		.loc 20 1875 5 view .LVU2390
 8525 02c6 F0EE007A 		vmov.f32	s15, #2.0e+0
 8526 02ca B4EEE78A 		vcmpe.f32	s16, s15
 8527 02ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8528 02d2 00F3FF83 		bgt	.L536
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8529              		.loc 20 1877 10 view .LVU2391
 8530 02d6 F8EE007A 		vmov.f32	s15, #-2.0e+0
1878:Veno-Echo.cpp ****     else
 8531              		.loc 20 1878 19 is_stmt 0 view .LVU2392
 8532 02da B4EE678A 		vcmp.f32	s16, s15
 8533 02de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8534 02e2 48BF     		it	mi
 8535 02e4 B0EE678A 		vmovmi.f32	s16, s15
 8536              	.LVL547:
 8537              	.L507:
1882:Veno-Echo.cpp **** }
 8538              		.loc 20 1882 5 is_stmt 1 view .LVU2393
1882:Veno-Echo.cpp **** }
 8539              		.loc 20 1882 5 is_stmt 0 view .LVU2394
 8540              	.LBE1660:
 8541              	.LBE1659:
 464:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8542              		.loc 20 464 9 is_stmt 1 view .LVU2395
 464:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8543              		.loc 20 464 42 is_stmt 0 view .LVU2396
 8544 02e8 5748     		ldr	r0, .L571+52
 8545 02ea FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8546              	.LVL548:
 464:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8547              		.loc 20 464 21 view .LVU2397
 8548 02ee 11A9     		add	r1, sp, #68
 8549 02f0 4C48     		ldr	r0, .L571+16
 464:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8550              		.loc 20 464 42 view .LVU2398
 8551 02f2 8DED110A 		vstr.32	s0, [sp, #68]
 464:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8552              		.loc 20 464 21 view .LVU2399
 8553 02f6 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8554              	.LVL549:
 465:Veno-Echo.cpp **** 
 8555              		.loc 20 465 9 is_stmt 1 view .LVU2400
 465:Veno-Echo.cpp **** 
 8556              		.loc 20 465 42 is_stmt 0 view .LVU2401
 8557 02fa 5448     		ldr	r0, .L571+56
 8558 02fc B0EE480A 		vmov.f32	s0, s16
 8559 0300 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8560              	.LVL550:
 465:Veno-Echo.cpp **** 
 8561              		.loc 20 465 21 view .LVU2402
 8562 0304 11A9     		add	r1, sp, #68
 8563 0306 4848     		ldr	r0, .L571+20
 465:Veno-Echo.cpp **** 
 8564              		.loc 20 465 42 view .LVU2403
 8565 0308 8DED110A 		vstr.32	s0, [sp, #68]
 465:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 284


 8566              		.loc 20 465 21 view .LVU2404
 8567 030c FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8568              	.LVL551:
 468:Veno-Echo.cpp ****         float mixR;
 8569              		.loc 20 468 9 is_stmt 1 view .LVU2405
 469:Veno-Echo.cpp **** 
 8570              		.loc 20 469 9 view .LVU2406
 471:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8571              		.loc 20 471 9 view .LVU2407
 471:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8572              		.loc 20 471 53 is_stmt 0 view .LVU2408
 8573 0310 09AA     		add	r2, sp, #36
 8574 0312 08A9     		add	r1, sp, #32
 8575 0314 4E48     		ldr	r0, .L571+60
 8576 0316 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8577              	.LVL552:
 472:Veno-Echo.cpp **** 
 8578              		.loc 20 472 53 view .LVU2409
 8579 031a 08AA     		add	r2, sp, #32
 8580 031c 09A9     		add	r1, sp, #36
 8581 031e 4C48     		ldr	r0, .L571+60
 471:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8582              		.loc 20 471 81 view .LVU2410
 8583 0320 8DED0A0A 		vstr.32	s0, [sp, #40]
 472:Veno-Echo.cpp **** 
 8584              		.loc 20 472 9 is_stmt 1 view .LVU2411
 472:Veno-Echo.cpp **** 
 8585              		.loc 20 472 53 is_stmt 0 view .LVU2412
 8586 0324 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8587              	.LVL553:
 8588              	.LBB1662:
 8589              	.LBB1663:
1875:Veno-Echo.cpp ****         returnval = limit;
 8590              		.loc 20 1875 5 view .LVU2413
 8591 0328 B0EE007A 		vmov.f32	s14, #2.0e+0
 8592              	.LBE1663:
 8593              	.LBE1662:
 475:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8594              		.loc 20 475 38 view .LVU2414
 8595 032c DDED0A7A 		vldr.32	s15, [sp, #40]
 475:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8596              		.loc 20 475 9 is_stmt 1 view .LVU2415
 8597              	.LVL554:
 8598              	.LBB1666:
 8599              	.LBI1662:
1872:Veno-Echo.cpp **** {
 8600              		.loc 20 1872 7 view .LVU2416
 8601              	.LBB1664:
1874:Veno-Echo.cpp ****     if (input > limit)
 8602              		.loc 20 1874 5 view .LVU2417
1875:Veno-Echo.cpp ****         returnval = limit;
 8603              		.loc 20 1875 5 view .LVU2418
 8604 0330 F4EEC77A 		vcmpe.f32	s15, s14
 8605 0334 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8606 0338 00F3D383 		bgt	.L537
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8607              		.loc 20 1877 10 view .LVU2419
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 285


 8608 033c B8EE007A 		vmov.f32	s14, #-2.0e+0
1878:Veno-Echo.cpp ****     else
 8609              		.loc 20 1878 19 is_stmt 0 view .LVU2420
 8610 0340 F4EE477A 		vcmp.f32	s15, s14
 8611 0344 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8612 0348 48BF     		it	mi
 8613 034a F0EE477A 		vmovmi.f32	s15, s14
 8614              	.LVL555:
 8615              	.L509:
1882:Veno-Echo.cpp **** }
 8616              		.loc 20 1882 5 is_stmt 1 view .LVU2421
1882:Veno-Echo.cpp **** }
 8617              		.loc 20 1882 5 is_stmt 0 view .LVU2422
 8618              	.LBE1664:
 8619              	.LBE1666:
 8620              	.LBB1667:
 8621              	.LBB1668:
1875:Veno-Echo.cpp ****         returnval = limit;
 8622              		.loc 20 1875 5 view .LVU2423
 8623 034e B0EE007A 		vmov.f32	s14, #2.0e+0
 8624              	.LBE1668:
 8625              	.LBE1667:
 475:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8626              		.loc 20 475 27 view .LVU2424
 8627 0352 CDED0A7A 		vstr.32	s15, [sp, #40]
 476:Veno-Echo.cpp **** 
 8628              		.loc 20 476 9 is_stmt 1 view .LVU2425
 8629              	.LVL556:
 8630              	.LBB1672:
 8631              	.LBI1667:
1872:Veno-Echo.cpp **** {
 8632              		.loc 20 1872 7 view .LVU2426
 8633              	.LBB1669:
1874:Veno-Echo.cpp ****     if (input > limit)
 8634              		.loc 20 1874 5 view .LVU2427
1875:Veno-Echo.cpp ****         returnval = limit;
 8635              		.loc 20 1875 5 view .LVU2428
 8636 0356 B4EEC70A 		vcmpe.f32	s0, s14
 8637 035a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8638 035e 00F37E82 		bgt	.L538
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8639              		.loc 20 1877 10 view .LVU2429
 8640 0362 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8641              	.LBE1669:
 8642              	.LBE1672:
 8643              	.LBB1673:
 478:Veno-Echo.cpp **** {
 8644              		.loc 20 478 1 is_stmt 0 view .LVU2430
 8645 0366 314B     		ldr	r3, .L571+24
 8646 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8647              	.LBE1673:
 8648              	.LBB1695:
 8649              	.LBB1670:
1878:Veno-Echo.cpp ****     else
 8650              		.loc 20 1878 19 view .LVU2431
 8651 036a B4EE470A 		vcmp.f32	s0, s14
 8652 036e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 286


 8653 0372 48BF     		it	mi
 8654 0374 B0EE470A 		vmovmi.f32	s0, s14
 8655              	.LVL557:
1882:Veno-Echo.cpp **** }
 8656              		.loc 20 1882 5 is_stmt 1 view .LVU2432
1882:Veno-Echo.cpp **** }
 8657              		.loc 20 1882 5 is_stmt 0 view .LVU2433
 8658              	.LBE1670:
 8659              	.LBE1695:
 476:Veno-Echo.cpp **** 
 8660              		.loc 20 476 27 view .LVU2434
 8661 0378 8DED0B0A 		vstr.32	s0, [sp, #44]
 478:Veno-Echo.cpp **** {
 8662              		.loc 20 478 1 is_stmt 1 view .LVU2435
 8663              	.LBB1696:
 8664 037c 002B     		cmp	r3, #0
 8665 037e 40F07782 		bne	.L567
 8666              	.LVL558:
 8667              	.L513:
 478:Veno-Echo.cpp **** {
 8668              		.loc 20 478 1 is_stmt 0 view .LVU2436
 8669              	.LBE1696:
 519:Veno-Echo.cpp ****         {
 8670              		.loc 20 519 9 is_stmt 1 view .LVU2437
 519:Veno-Echo.cpp ****         {
 8671              		.loc 20 519 19 is_stmt 0 view .LVU2438
 8672 0382 344B     		ldr	r3, .L571+64
 519:Veno-Echo.cpp ****         {
 8673              		.loc 20 519 9 view .LVU2439
 8674 0384 F6EE006A 		vmov.f32	s13, #5.0e-1
 519:Veno-Echo.cpp ****         {
 8675              		.loc 20 519 19 view .LVU2440
 8676 0388 93ED007A 		vldr.32	s14, [r3]
 519:Veno-Echo.cpp ****         {
 8677              		.loc 20 519 9 view .LVU2441
 8678 038c B4EEE67A 		vcmpe.f32	s14, s13
 8679 0390 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8680 0394 40F15282 		bpl	.L559
 521:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8681              		.loc 20 521 13 is_stmt 1 view .LVU2442
 521:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8682              		.loc 20 521 34 is_stmt 0 view .LVU2443
 8683 0398 37EE077A 		vadd.f32	s14, s14, s14
 521:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8684              		.loc 20 521 18 view .LVU2444
 8685 039c 9BED006A 		vldr.32	s12, [fp]
 522:Veno-Echo.cpp ****         }
 8686              		.loc 20 522 18 view .LVU2445
 8687 03a0 DBED016A 		vldr.32	s13, [fp, #4]
 521:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8688              		.loc 20 521 18 view .LVU2446
 8689 03a4 A7EE276A 		vfma.f32	s12, s14, s15
 522:Veno-Echo.cpp ****         }
 8690              		.loc 20 522 18 view .LVU2447
 8691 03a8 E7EE006A 		vfma.f32	s13, s14, s0
 521:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8692              		.loc 20 521 18 view .LVU2448
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 287


 8693 03ac F0EE467A 		vmov.f32	s15, s12
 8694              	.LVL559:
 522:Veno-Echo.cpp ****         }
 8695              		.loc 20 522 13 is_stmt 1 view .LVU2449
 522:Veno-Echo.cpp ****         }
 8696              		.loc 20 522 18 is_stmt 0 view .LVU2450
 8697 03b0 B0EE660A 		vmov.f32	s0, s13
 8698              	.LVL560:
 8699              	.L519:
 536:Veno-Echo.cpp ****         {
 8700              		.loc 20 536 9 is_stmt 1 view .LVU2451
 8701 03b4 284B     		ldr	r3, .L571+68
 8702 03b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8703 03b8 002B     		cmp	r3, #0
 8704 03ba 00F0FB81 		beq	.L522
 538:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8705              		.loc 20 538 13 view .LVU2452
 538:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8706              		.loc 20 538 20 is_stmt 0 view .LVU2453
 8707 03be 0023     		movs	r3, #0
 8708 03c0 009A     		ldr	r2, [sp]
 8709 03c2 1360     		str	r3, [r2]	@ float
 539:Veno-Echo.cpp ****         }
 8710              		.loc 20 539 13 is_stmt 1 view .LVU2454
 539:Veno-Echo.cpp ****         }
 8711              		.loc 20 539 22 is_stmt 0 view .LVU2455
 8712 03c4 5360     		str	r3, [r2, #4]	@ float
 8713              	.L523:
 8714              	.LBE1567:
 323:Veno-Echo.cpp ****     {   
 8715              		.loc 20 323 5 is_stmt 1 discriminator 2 view .LVU2456
 8716 03c6 009B     		ldr	r3, [sp]
 8717 03c8 0BF1080B 		add	fp, fp, #8
 323:Veno-Echo.cpp ****     {   
 8718              		.loc 20 323 35 is_stmt 0 discriminator 2 view .LVU2457
 8719 03cc 029A     		ldr	r2, [sp, #8]
 323:Veno-Echo.cpp ****     {   
 8720              		.loc 20 323 25 discriminator 2 view .LVU2458
 8721 03ce 0599     		ldr	r1, [sp, #20]
 8722 03d0 0833     		adds	r3, r3, #8
 8723 03d2 8A42     		cmp	r2, r1
 8724 03d4 0093     		str	r3, [sp]
 323:Veno-Echo.cpp ****     {   
 8725              		.loc 20 323 35 discriminator 2 view .LVU2459
 8726 03d6 02F10203 		add	r3, r2, #2
 8727              	.LVL561:
 323:Veno-Echo.cpp ****     {   
 8728              		.loc 20 323 25 is_stmt 1 discriminator 2 view .LVU2460
 8729 03da 00F0A683 		beq	.L459
 8730 03de 0293     		str	r3, [sp, #8]
 8731              	.LVL562:
 8732              	.L525:
 8733              	.LBB1941:
 325:Veno-Echo.cpp ****         Update_Mod();
 8734              		.loc 20 325 9 view .LVU2461
 325:Veno-Echo.cpp ****         Update_Mod();
 8735              		.loc 20 325 20 is_stmt 0 view .LVU2462
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 288


 8736 03e0 FFF7FEFF 		bl	_Z11UpdateClockv
 8737              	.LVL563:
 326:Veno-Echo.cpp **** 
 8738              		.loc 20 326 9 is_stmt 1 view .LVU2463
 8739              	.LBB1697:
 8740              	.LBB1698:
 8741              	.LBB1699:
 8742              	.LBB1700:
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 8743              		.loc 19 174 71 is_stmt 0 view .LVU2464
 8744 03e4 DFF884A0 		ldr	r10, .L571+88
 8745              	.LBE1700:
 8746              	.LBE1699:
 8747              	.LBE1698:
 8748              	.LBE1697:
 326:Veno-Echo.cpp **** 
 8749              		.loc 20 326 19 view .LVU2465
 8750 03e8 FFF7FEFF 		bl	_Z10Update_Modv
 8751              	.LVL564:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 289


 329:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8752              		.loc 20 329 9 is_stmt 1 view .LVU2466
 329:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8753              		.loc 20 329 51 is_stmt 0 view .LVU2467
 8754 03ec 1B48     		ldr	r0, .L571+72
 8755 03ee FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8756              	.LVL565:
 8757 03f2 0146     		mov	r1, r0
 8758 03f4 1A48     		ldr	r0, .L571+76
 8759              	.LBB1752:
 8760              	.LBB1735:
 8761              	.LBB1718:
 8762              	.LBB1701:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8763              		.loc 19 175 77 view .LVU2468
 8764 03f6 F7EE00AA 		vmov.f32	s21, #1.0e+0
 8765              	.LBE1701:
 8766              	.LBE1718:
 8767              	.LBE1735:
 8768              	.LBE1752:
 329:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8769              		.loc 20 329 51 view .LVU2469
 8770 03fa FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8771              	.LVL566:
 330:Veno-Echo.cpp ****         
 8772              		.loc 20 330 51 view .LVU2470
 8773 03fe 1948     		ldr	r0, .L571+80
 329:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8774              		.loc 20 329 51 view .LVU2471
 8775 0400 F0EE40BA 		vmov.f32	s23, s0
 8776              	.LVL567:
 330:Veno-Echo.cpp ****         
 8777              		.loc 20 330 9 is_stmt 1 view .LVU2472
 330:Veno-Echo.cpp ****         
 8778              		.loc 20 330 51 is_stmt 0 view .LVU2473
 8779 0404 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8780              	.LVL568:
 330:Veno-Echo.cpp ****         
 8781              		.loc 20 330 51 view .LVU2474
 8782 0408 0146     		mov	r1, r0
 8783 040a 1748     		ldr	r0, .L571+84
 8784 040c FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8785              	.LVL569:
 8786 0410 2EE0     		b	.L572
 8787              	.L573:
 8788 0412 00BF     		.align	2
 8789              	.L571:
 8790 0414 249F2400 		.word	2400036
 8791 0418 1C9F2400 		.word	2400028
 8792 041c 00000000 		.word	.LANCHOR103
 8793 0420 00000000 		.word	.LANCHOR104
 8794 0424 00000000 		.word	.LANCHOR0
 8795 0428 00000000 		.word	.LANCHOR1
 8796 042c 00000000 		.word	.LANCHOR82
 8797 0430 00000000 		.word	.LANCHOR31
 8798 0434 00000000 		.word	.LANCHOR126
 8799 0438 00000000 		.word	.LANCHOR43
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 290


 8800 043c CDCCCC3E 		.word	1053609165
 8801 0440 00000000 		.word	.LANCHOR127
 8802 0444 00000000 		.word	.LANCHOR71
 8803 0448 00000000 		.word	.LANCHOR105
 8804 044c 00000000 		.word	.LANCHOR106
 8805 0450 00000000 		.word	.LANCHOR64
 8806 0454 00000000 		.word	.LANCHOR55
 8807 0458 00000000 		.word	.LANCHOR111
 8808 045c 00000000 		.word	.LANCHOR93
 8809 0460 00000000 		.word	.LANCHOR99
 8810 0464 00000000 		.word	.LANCHOR94
 8811 0468 00000000 		.word	.LANCHOR100
 8812 046c 209F2400 		.word	2400032
 8813              	.L572:
 332:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8814              		.loc 20 332 44 view .LVU2475
 8815 0470 D348     		ldr	r0, .L574
 330:Veno-Echo.cpp ****         
 8816              		.loc 20 330 51 view .LVU2476
 8817 0472 B0EE409A 		vmov.f32	s18, s0
 8818              	.LVL570:
 332:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8819              		.loc 20 332 9 is_stmt 1 view .LVU2477
 332:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8820              		.loc 20 332 44 is_stmt 0 view .LVU2478
 8821 0476 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8822              	.LVL571:
 332:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8823              		.loc 20 332 44 view .LVU2479
 8824 047a 0146     		mov	r1, r0
 8825 047c D148     		ldr	r0, .L574+4
 8826 047e FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8827              	.LVL572:
 333:Veno-Echo.cpp **** 
 8828              		.loc 20 333 44 view .LVU2480
 8829 0482 D148     		ldr	r0, .L574+8
 332:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8830              		.loc 20 332 44 view .LVU2481
 8831 0484 B0EE408A 		vmov.f32	s16, s0
 8832              	.LVL573:
 333:Veno-Echo.cpp **** 
 8833              		.loc 20 333 9 is_stmt 1 view .LVU2482
 333:Veno-Echo.cpp **** 
 8834              		.loc 20 333 44 is_stmt 0 view .LVU2483
 8835 0488 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8836              	.LVL574:
 333:Veno-Echo.cpp **** 
 8837              		.loc 20 333 44 view .LVU2484
 8838 048c 0146     		mov	r1, r0
 8839 048e CF48     		ldr	r0, .L574+12
 8840 0490 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8841              	.LVL575:
 8842              	.LBB1753:
 8843              	.LBB1754:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8844              		.loc 10 60 42 view .LVU2485
 8845 0494 CE48     		ldr	r0, .L574+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 291


 8846              	.LBE1754:
 8847              	.LBE1753:
 356:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8848              		.loc 20 356 49 view .LVU2486
 8849 0496 CF4B     		ldr	r3, .L574+20
 333:Veno-Echo.cpp **** 
 8850              		.loc 20 333 44 view .LVU2487
 8851 0498 F0EE407A 		vmov.f32	s15, s0
 8852              	.LVL576:
 336:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 8853              		.loc 20 336 9 is_stmt 1 view .LVU2488
 8854              	.LBB1756:
 8855              	.LBI1753:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8856              		.loc 10 60 17 view .LVU2489
 8857              	.LBB1755:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8858              		.loc 10 60 37 view .LVU2490
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8859              		.loc 10 60 42 is_stmt 0 view .LVU2491
 8860 049c C0ED00BA 		vstr.32	s23, [r0]
 8861              	.LVL577:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8862              		.loc 10 60 42 view .LVU2492
 8863              	.LBE1755:
 8864              	.LBE1756:
 337:Veno-Echo.cpp ****         
 8865              		.loc 20 337 9 is_stmt 1 view .LVU2493
 8866              	.LBB1757:
 8867              	.LBI1757:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8868              		.loc 10 60 17 view .LVU2494
 8869              	.LBB1758:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8870              		.loc 10 60 37 view .LVU2495
 8871              	.LBE1758:
 8872              	.LBE1757:
 8873              	.LBB1761:
 8874              	.LBB1736:
 8875              	.LBB1719:
 8876              	.LBB1702:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8877              		.loc 19 174 82 is_stmt 0 view .LVU2496
 8878 04a0 F6EE028A 		vmov.f32	s17, #5.625e-1
 8879              	.LBE1702:
 8880              	.LBE1719:
 8881              	.LBE1736:
 8882              	.LBE1761:
 8883              	.LBB1762:
 8884              	.LBB1759:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8885              		.loc 10 60 42 view .LVU2497
 8886 04a4 CC48     		ldr	r0, .L574+24
 8887              	.LBE1759:
 8888              	.LBE1762:
 356:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8889              		.loc 20 356 49 view .LVU2498
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 292


 8890 04a6 1D68     		ldr	r5, [r3]
 8891              	.LBB1763:
 8892              	.LBB1760:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8893              		.loc 10 60 42 view .LVU2499
 8894 04a8 80ED009A 		vstr.32	s18, [r0]
 8895              	.LVL578:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8896              		.loc 10 60 42 view .LVU2500
 8897              	.LBE1760:
 8898              	.LBE1763:
 339:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 8899              		.loc 20 339 9 is_stmt 1 view .LVU2501
 8900              	.LBB1764:
 8901              	.LBI1764:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8902              		.loc 10 60 17 view .LVU2502
 8903              	.LBB1765:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8904              		.loc 10 60 37 view .LVU2503
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8905              		.loc 10 60 42 is_stmt 0 view .LVU2504
 8906 04ac CB48     		ldr	r0, .L574+28
 8907              	.LBE1765:
 8908              	.LBE1764:
 8909              	.LBB1767:
 8910              	.LBB1737:
 8911              	.LBB1720:
 8912              	.LBB1703:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8913              		.loc 19 174 71 view .LVU2505
 8914 04ae 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8915              		.loc 19 174 46 view .LVU2506
 8916 04b2 9FEDCBAA 		vldr.32	s20, .L574+32
 8917              	.LBE1703:
 8918              	.LBE1720:
 8919              	.LBE1737:
 8920              	.LBE1767:
 8921              	.LBB1768:
 8922              	.LBB1766:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8923              		.loc 10 60 42 view .LVU2507
 8924 04b6 80ED008A 		vstr.32	s16, [r0]
 8925              	.LVL579:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8926              		.loc 10 60 42 view .LVU2508
 8927              	.LBE1766:
 8928              	.LBE1768:
 340:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 8929              		.loc 20 340 9 is_stmt 1 view .LVU2509
 8930              	.LBB1769:
 8931              	.LBI1769:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8932              		.loc 10 60 17 view .LVU2510
 8933              	.LBB1770:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 293


 8934              		.loc 10 60 37 view .LVU2511
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8935              		.loc 10 60 42 is_stmt 0 view .LVU2512
 8936 04ba CA48     		ldr	r0, .L574+36
 8937              	.LBE1770:
 8938              	.LBE1769:
 8939              	.LBB1772:
 8940              	.LBB1738:
 8941              	.LBB1721:
 8942              	.LBB1704:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8943              		.loc 19 174 71 view .LVU2513
 8944 04bc 93ED00BA 		vldr.32	s22, [r3]
 8945              	.LBE1704:
 8946              	.LBE1721:
 8947              	.LBE1738:
 8948              	.LBE1772:
 8949              	.LBB1773:
 8950              	.LBB1771:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8951              		.loc 10 60 42 view .LVU2514
 8952 04c0 80ED008A 		vstr.32	s16, [r0]
 8953              	.LVL580:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8954              		.loc 10 60 42 view .LVU2515
 8955              	.LBE1771:
 8956              	.LBE1773:
 341:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 8957              		.loc 20 341 9 is_stmt 1 view .LVU2516
 8958              	.LBB1774:
 8959              	.LBI1774:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8960              		.loc 10 60 17 view .LVU2517
 8961              	.LBB1775:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8962              		.loc 10 60 37 view .LVU2518
 8963              	.LBE1775:
 8964              	.LBE1774:
 8965              	.LBB1778:
 8966              	.LBB1779:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8967              		.loc 10 60 42 is_stmt 0 view .LVU2519
 8968 04c4 C848     		ldr	r0, .L574+40
 8969              	.LBE1779:
 8970              	.LBE1778:
 8971              	.LBB1782:
 8972              	.LBB1739:
 8973              	.LBB1722:
 8974              	.LBB1705:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8975              		.loc 19 174 46 view .LVU2520
 8976 04c6 2BEE0A0A 		vmul.f32	s0, s22, s20
 8977              	.LVL581:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8978              		.loc 19 174 71 view .LVU2521
 8979 04ca 0493     		str	r3, [sp, #16]
 8980              		.loc 19 175 77 view .LVU2522
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 294


 8981 04cc 3AEECBCA 		vsub.f32	s24, s21, s22
 8982              	.LBE1705:
 8983              	.LBE1722:
 8984              	.LBE1739:
 8985              	.LBE1782:
 8986              	.LBB1783:
 8987              	.LBB1780:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8988              		.loc 10 60 42 view .LVU2523
 8989 04d0 80ED008A 		vstr.32	s16, [r0]
 8990              	.LBE1780:
 8991              	.LBE1783:
 349:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8992              		.loc 20 349 27 view .LVU2524
 8993 04d4 C54B     		ldr	r3, .L574+44
 8994              	.LBB1784:
 8995              	.LBB1785:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8996              		.loc 10 60 42 view .LVU2525
 8997 04d6 C648     		ldr	r0, .L574+48
 8998              	.LBE1785:
 8999              	.LBE1784:
 349:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9000              		.loc 20 349 27 view .LVU2526
 9001 04d8 1B68     		ldr	r3, [r3]	@ float
 9002              	.LBB1788:
 9003              	.LBB1786:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9004              		.loc 10 60 42 view .LVU2527
 9005 04da 80ED008A 		vstr.32	s16, [r0]
 9006              	.LBE1786:
 9007              	.LBE1788:
 9008              	.LBB1789:
 9009              	.LBB1776:
 9010 04de C548     		ldr	r0, .L574+52
 9011              	.LBE1776:
 9012              	.LBE1789:
 9013              	.LBB1790:
 9014              	.LBB1740:
 9015              	.LBB1723:
 9016              	.LBB1706:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9017              		.loc 19 174 103 view .LVU2528
 9018 04e0 DFEDC59A 		vldr.32	s19, .L574+56
 9019              	.LBE1706:
 9020              	.LBE1723:
 9021              	.LBE1740:
 9022              	.LBE1790:
 9023              	.LBB1791:
 9024              	.LBB1777:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9025              		.loc 10 60 42 view .LVU2529
 9026 04e4 C0ED007A 		vstr.32	s15, [r0]
 9027              	.LVL582:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9028              		.loc 10 60 42 view .LVU2530
 9029              	.LBE1777:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 295


 9030              	.LBE1791:
 342:Veno-Echo.cpp **** 
 9031              		.loc 20 342 9 is_stmt 1 view .LVU2531
 9032              	.LBB1792:
 9033              	.LBI1792:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9034              		.loc 10 60 17 view .LVU2532
 9035              	.LBB1793:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9036              		.loc 10 60 37 view .LVU2533
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9037              		.loc 10 60 42 is_stmt 0 view .LVU2534
 9038 04e8 C448     		ldr	r0, .L574+60
 9039              	.LBE1793:
 9040              	.LBE1792:
 9041              	.LBB1795:
 9042              	.LBB1741:
 9043              	.LBB1724:
 9044              	.LBB1707:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9045              		.loc 19 174 98 view .LVU2535
 9046 04ea 9FEDC59A 		vldr.32	s18, .L574+64
 9047              	.LVL583:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9048              		.loc 19 174 98 view .LVU2536
 9049              	.LBE1707:
 9050              	.LBE1724:
 9051              	.LBE1741:
 9052              	.LBE1795:
 9053              	.LBB1796:
 9054              	.LBB1794:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9055              		.loc 10 60 42 view .LVU2537
 9056 04ee C0ED007A 		vstr.32	s15, [r0]
 9057              	.LVL584:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9058              		.loc 10 60 42 view .LVU2538
 9059              	.LBE1794:
 9060              	.LBE1796:
 344:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 9061              		.loc 20 344 9 is_stmt 1 view .LVU2539
 9062              	.LBB1797:
 9063              	.LBI1778:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9064              		.loc 10 60 17 view .LVU2540
 9065              	.LBB1781:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9066              		.loc 10 60 37 view .LVU2541
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9067              		.loc 10 60 37 is_stmt 0 view .LVU2542
 9068              	.LBE1781:
 9069              	.LBE1797:
 345:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 9070              		.loc 20 345 9 is_stmt 1 view .LVU2543
 9071              	.LBB1798:
 9072              	.LBI1784:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 296


 9073              		.loc 10 60 17 view .LVU2544
 9074              	.LBB1787:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9075              		.loc 10 60 37 view .LVU2545
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9076              		.loc 10 60 37 is_stmt 0 view .LVU2546
 9077              	.LBE1787:
 9078              	.LBE1798:
 346:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 9079              		.loc 20 346 9 is_stmt 1 view .LVU2547
 9080              	.LBB1799:
 9081              	.LBI1799:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9082              		.loc 10 60 17 view .LVU2548
 9083              	.LBB1800:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9084              		.loc 10 60 37 view .LVU2549
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9085              		.loc 10 60 42 is_stmt 0 view .LVU2550
 9086 04f2 C448     		ldr	r0, .L574+68
 9087              	.LBE1800:
 9088              	.LBE1799:
 9089              	.LBB1802:
 9090              	.LBB1742:
 9091              	.LBB1725:
 9092              	.LBB1708:
 162:delayline_reverse.h **** 
 9093              		.loc 19 162 23 view .LVU2551
 9094 04f4 D5E90267 		ldrd	r6, r7, [r5, #8]
 9095              	.LBE1708:
 9096              	.LBE1725:
 9097              	.LBE1742:
 9098              	.LBE1802:
 9099              	.LBB1803:
 9100              	.LBB1801:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9101              		.loc 10 60 42 view .LVU2552
 9102 04f8 C0ED007A 		vstr.32	s15, [r0]
 9103              	.LVL585:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9104              		.loc 10 60 42 view .LVU2553
 9105              	.LBE1801:
 9106              	.LBE1803:
 347:Veno-Echo.cpp **** 
 9107              		.loc 20 347 9 is_stmt 1 view .LVU2554
 9108              	.LBB1804:
 9109              	.LBI1804:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9110              		.loc 10 60 17 view .LVU2555
 9111              	.LBB1805:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9112              		.loc 10 60 37 view .LVU2556
 9113              	.LBE1805:
 9114              	.LBE1804:
 9115              	.LBB1808:
 9116              	.LBB1743:
 9117              	.LBB1726:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 297


 9118              	.LBB1709:
 162:delayline_reverse.h **** 
 9119              		.loc 19 162 11 is_stmt 0 view .LVU2557
 9120 04fc 05EB8702 		add	r2, r5, r7, lsl #2
 9121              	.LBE1709:
 9122              	.LBE1726:
 9123              	.LBE1743:
 9124              	.LBE1808:
 9125              	.LBB1809:
 9126              	.LBB1806:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9127              		.loc 10 60 42 view .LVU2558
 9128 0500 C148     		ldr	r0, .L574+72
 9129              	.LBE1806:
 9130              	.LBE1809:
 9131              	.LBB1810:
 9132              	.LBB1744:
 9133              	.LBB1727:
 9134              	.LBB1710:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9135              		.loc 19 161 11 view .LVU2559
 9136 0502 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 9137              		.loc 19 162 11 view .LVU2560
 9138 0506 D2ED06DA 		vldr.32	s27, [r2, #24]
 9139              	.LBE1710:
 9140              	.LBE1727:
 9141              	.LBE1744:
 9142              	.LBE1810:
 9143              	.LBB1811:
 9144              	.LBB1812:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9145              		.loc 10 60 42 view .LVU2561
 9146 050a C04A     		ldr	r2, .L574+76
 9147              	.LBE1812:
 9148              	.LBE1811:
 9149              	.LBB1814:
 9150              	.LBB1807:
 9151 050c C0ED007A 		vstr.32	s15, [r0]
 9152              	.LVL586:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9153              		.loc 10 60 42 view .LVU2562
 9154              	.LBE1807:
 9155              	.LBE1814:
 349:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9156              		.loc 20 349 9 is_stmt 1 view .LVU2563
 9157              	.LBB1815:
 9158              	.LBI1811:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9159              		.loc 10 60 17 view .LVU2564
 9160              	.LBB1813:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9161              		.loc 10 60 37 view .LVU2565
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9162              		.loc 10 60 42 is_stmt 0 view .LVU2566
 9163 0510 1360     		str	r3, [r2]	@ float
 9164              	.LVL587:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 298


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9165              		.loc 10 60 42 view .LVU2567
 9166              	.LBE1813:
 9167              	.LBE1815:
 350:Veno-Echo.cpp **** 
 9168              		.loc 20 350 9 is_stmt 1 view .LVU2568
 9169              	.LBB1816:
 9170              	.LBI1816:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9171              		.loc 10 60 17 view .LVU2569
 9172              	.LBB1817:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9173              		.loc 10 60 37 view .LVU2570
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9174              		.loc 10 60 42 is_stmt 0 view .LVU2571
 9175 0512 BF4A     		ldr	r2, .L574+80
 9176              	.LBE1817:
 9177              	.LBE1816:
 9178              	.LBB1819:
 9179              	.LBB1745:
 9180              	.LBB1728:
 9181              	.LBB1711:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9182              		.loc 19 161 11 view .LVU2572
 9183 0514 91ED06EA 		vldr.32	s28, [r1, #24]
 9184              	.LBE1711:
 9185              	.LBE1728:
 9186              	.LBE1745:
 9187              	.LBE1819:
 9188              	.LBB1820:
 9189              	.LBB1818:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9190              		.loc 10 60 42 view .LVU2573
 9191 0518 1360     		str	r3, [r2]	@ float
 9192              	.LVL588:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9193              		.loc 10 60 42 view .LVU2574
 9194              	.LBE1818:
 9195              	.LBE1820:
 352:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 9196              		.loc 20 352 9 is_stmt 1 view .LVU2575
 9197              	.LBB1821:
 9198              	.LBI1821:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9199              		.loc 10 60 17 view .LVU2576
 9200              	.LBB1822:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9201              		.loc 10 60 37 view .LVU2577
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9202              		.loc 10 60 42 is_stmt 0 view .LVU2578
 9203 051a BE4A     		ldr	r2, .L574+84
 9204 051c 1360     		str	r3, [r2]	@ float
 9205              	.LVL589:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9206              		.loc 10 60 42 view .LVU2579
 9207              	.LBE1822:
 9208              	.LBE1821:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 299


 353:Veno-Echo.cpp **** 
 9209              		.loc 20 353 9 is_stmt 1 view .LVU2580
 9210              	.LBB1823:
 9211              	.LBI1823:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9212              		.loc 10 60 17 view .LVU2581
 9213              	.LBB1824:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9214              		.loc 10 60 37 view .LVU2582
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9215              		.loc 10 60 42 is_stmt 0 view .LVU2583
 9216 051e BE4A     		ldr	r2, .L574+88
 9217 0520 1360     		str	r3, [r2]	@ float
 9218              	.LVL590:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9219              		.loc 10 60 42 view .LVU2584
 9220              	.LBE1824:
 9221              	.LBE1823:
 356:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9222              		.loc 20 356 9 is_stmt 1 view .LVU2585
 9223              	.LBB1825:
 9224              	.LBI1697:
  79:Veno-Echo.cpp ****     {
 9225              		.loc 20 79 11 view .LVU2586
 9226              	.LBB1746:
  82:Veno-Echo.cpp ****         return read;
 9227              		.loc 20 82 9 view .LVU2587
 9228              	.LBB1729:
 9229              	.LBI1699:
 159:delayline_reverse.h ****     {
 9230              		.loc 19 159 20 view .LVU2588
 9231              	.LBB1712:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9232              		.loc 19 174 46 is_stmt 0 view .LVU2589
 9233 0522 FFF7FEFF 		bl	sinf
 9234              	.LVL591:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9235              		.loc 19 174 46 view .LVU2590
 9236 0526 F0EE40BA 		vmov.f32	s23, s0
 9237              	.LVL592:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9238              		.loc 19 174 103 view .LVU2591
 9239 052a 2BEE290A 		vmul.f32	s0, s22, s19
 9240 052e FFF7FEFF 		bl	sinf
 9241              	.LVL593:
 9242 0532 B0EE408A 		vmov.f32	s16, s0
 9243              	.LVL594:
 9244              		.loc 19 175 46 view .LVU2592
 9245 0536 2CEE0A0A 		vmul.f32	s0, s24, s20
 9246 053a FFF7FEFF 		bl	sinf
 9247              	.LVL595:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9248              		.loc 19 174 98 view .LVU2593
 9249 053e 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9250              		.loc 19 174 82 view .LVU2594
 9251 0542 ABEEA88A 		vfma.f32	s16, s23, s17
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 300


 9252              	.LVL596:
 9253              		.loc 19 175 46 view .LVU2595
 9254 0546 F0EE40BA 		vmov.f32	s23, s0
 9255              		.loc 19 175 112 view .LVU2596
 9256 054a 2CEE290A 		vmul.f32	s0, s24, s19
 9257 054e FFF7FEFF 		bl	sinf
 9258              	.LVL597:
 9259              		.loc 19 175 107 view .LVU2597
 9260 0552 60EE097A 		vmul.f32	s15, s0, s18
 9261              	.LBE1712:
 9262              	.LBE1729:
 9263              	.LBE1746:
 9264              	.LBE1825:
 357:Veno-Echo.cpp **** 
 9265              		.loc 20 357 49 view .LVU2598
 9266 0556 B14B     		ldr	r3, .L574+92
 9267              	.LBB1826:
 9268              	.LBB1747:
 9269              	.LBB1730:
 9270              	.LBB1713:
 9271              		.loc 19 175 91 view .LVU2599
 9272 0558 EBEEA87A 		vfma.f32	s15, s23, s17
 9273              	.LVL598:
 9274              		.loc 19 175 91 view .LVU2600
 9275              	.LBE1713:
 9276              	.LBE1730:
 9277              	.LBE1747:
 9278              	.LBE1826:
 357:Veno-Echo.cpp **** 
 9279              		.loc 20 357 49 view .LVU2601
 9280 055c 1C68     		ldr	r4, [r3]
 9281              	.LBB1827:
 9282              	.LBB1748:
 9283              	.LBB1731:
 9284              	.LBB1714:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9285              		.loc 19 174 9 view .LVU2602
 9286 055e 38EE088A 		vadd.f32	s16, s16, s16
 9287              	.LVL599:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9288              		.loc 19 174 9 view .LVU2603
 9289              	.LBE1714:
 9290              	.LBE1731:
 9291              	.LBE1748:
 9292              	.LBE1827:
 9293              	.LBB1828:
 9294              	.LBB1829:
 9295              	.LBB1830:
 9296              	.LBB1831:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9297              		.loc 19 174 71 view .LVU2604
 9298 0562 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 9299              		.loc 19 162 11 view .LVU2605
 9300 0566 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9301              		.loc 19 174 71 view .LVU2606
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 301


 9302 056a 91ED00CA 		vldr.32	s24, [r1]
 9303              	.LBE1831:
 9304              	.LBE1830:
 9305              	.LBE1829:
 9306              	.LBE1828:
 9307              	.LBB1862:
 9308              	.LBB1749:
 9309              	.LBB1732:
 9310              	.LBB1715:
 9311              		.loc 19 175 9 view .LVU2607
 9312 056e 77EEA77A 		vadd.f32	s15, s15, s15
 9313              	.LVL600:
 9314              		.loc 19 175 9 view .LVU2608
 9315              	.LBE1715:
 9316              	.LBE1732:
 9317              	.LBE1749:
 9318              	.LBE1862:
 9319              	.LBB1863:
 9320              	.LBB1852:
 9321              	.LBB1842:
 9322              	.LBB1832:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9323              		.loc 19 161 11 view .LVU2609
 9324 0572 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9325              		.loc 19 162 11 view .LVU2610
 9326 0576 04EB8303 		add	r3, r4, r3, lsl #2
 9327              		.loc 19 175 77 view .LVU2611
 9328 057a 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9329              		.loc 19 174 46 view .LVU2612
 9330 057e 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9331              		.loc 19 161 11 view .LVU2613
 9332 0582 92ED06DA 		vldr.32	s26, [r2, #24]
 9333              	.LBE1832:
 9334              	.LBE1842:
 9335              	.LBE1852:
 9336              	.LBE1863:
 9337              	.LBB1864:
 9338              	.LBB1750:
 9339              	.LBB1733:
 9340              	.LBB1716:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9341              		.loc 19 177 44 view .LVU2614
 9342 0586 67EE8E7A 		vmul.f32	s15, s15, s28
 9343              	.LVL601:
 9344              		.loc 19 177 44 view .LVU2615
 9345              	.LBE1716:
 9346              	.LBE1733:
 9347              	.LBE1750:
 9348              	.LBE1864:
 9349              	.LBB1865:
 9350              	.LBB1853:
 9351              	.LBB1843:
 9352              	.LBB1833:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 302


 162:delayline_reverse.h **** 
 9353              		.loc 19 162 11 view .LVU2616
 9354 058a D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9355              		.loc 19 174 71 view .LVU2617
 9356 058e 0391     		str	r1, [sp, #12]
 9357              	.LBE1833:
 9358              	.LBE1843:
 9359              	.LBE1853:
 9360              	.LBE1865:
 9361              	.LBB1866:
 9362              	.LBB1751:
 9363              	.LBB1734:
 9364              	.LBB1717:
 9365              		.loc 19 177 54 view .LVU2618
 9366 0590 EDEE887A 		vfma.f32	s15, s27, s16
 9367              	.LVL602:
 9368              		.loc 19 177 54 view .LVU2619
 9369              	.LBE1717:
 9370              	.LBE1734:
  83:Veno-Echo.cpp ****     }
 9371              		.loc 20 83 9 is_stmt 1 view .LVU2620
  83:Veno-Echo.cpp ****     }
 9372              		.loc 20 83 9 is_stmt 0 view .LVU2621
 9373              	.LBE1751:
 9374              	.LBE1866:
 356:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9375              		.loc 20 356 50 view .LVU2622
 9376 0594 CDED067A 		vstr.32	s15, [sp, #24]
 357:Veno-Echo.cpp **** 
 9377              		.loc 20 357 9 is_stmt 1 view .LVU2623
 9378              	.LVL603:
 9379              	.LBB1867:
 9380              	.LBI1828:
  79:Veno-Echo.cpp ****     {
 9381              		.loc 20 79 11 view .LVU2624
 9382              	.LBB1854:
  82:Veno-Echo.cpp ****         return read;
 9383              		.loc 20 82 9 view .LVU2625
 9384              	.LBB1844:
 9385              	.LBI1830:
 159:delayline_reverse.h ****     {
 9386              		.loc 19 159 20 view .LVU2626
 9387              	.LBB1834:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9388              		.loc 19 174 46 is_stmt 0 view .LVU2627
 9389 0598 FFF7FEFF 		bl	sinf
 9390              	.LVL604:
 9391 059c F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9392              		.loc 19 174 103 view .LVU2628
 9393 05a0 2CEE290A 		vmul.f32	s0, s24, s19
 9394 05a4 FFF7FEFF 		bl	sinf
 9395              	.LVL605:
 9396 05a8 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 9397              		.loc 19 175 46 view .LVU2629
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 303


 9398 05ac 2AEE8A0A 		vmul.f32	s0, s21, s20
 9399 05b0 FFF7FEFF 		bl	sinf
 9400              	.LVL606:
 9401 05b4 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9402              		.loc 19 175 112 view .LVU2630
 9403 05b8 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9404              		.loc 19 174 98 view .LVU2631
 9405 05bc 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9406              		.loc 19 175 46 view .LVU2632
 9407 05c0 F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9408              		.loc 19 175 112 view .LVU2633
 9409 05c4 FFF7FEFF 		bl	sinf
 9410              	.LVL607:
 9411              	.LBE1834:
 9412              	.LBE1844:
 9413              	.LBE1854:
 9414              	.LBE1867:
 9415              	.LBB1868:
 9416              	.LBB1869:
 9417              	.LBB1870:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9418              		.loc 19 98 38 view .LVU2634
 9419 05c8 9548     		ldr	r0, .L574+96
 9420              	.LBE1870:
 9421              	.LBE1869:
 9422              	.LBE1868:
 9423              	.LBB1893:
 9424              	.LBB1855:
 9425              	.LBB1845:
 9426              	.LBB1835:
 175:delayline_reverse.h **** 
 9427              		.loc 19 175 107 view .LVU2635
 9428 05ca 60EE097A 		vmul.f32	s15, s0, s18
 9429              	.LBE1835:
 9430              	.LBE1845:
 9431              	.LBE1855:
 9432              	.LBE1893:
 9433              	.LBB1894:
 9434              	.LBB1882:
 9435              	.LBB1871:
  92:delayline_reverse.h ****         
 9436              		.loc 19 92 57 view .LVU2636
 9437 05ce 954B     		ldr	r3, .L574+100
 9438              	.LBE1871:
 9439              	.LBE1882:
 9440              	.LBE1894:
 9441              	.LBB1895:
 9442              	.LBB1856:
 9443              	.LBB1846:
 9444              	.LBB1836:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9445              		.loc 19 174 82 view .LVU2637
 9446 05d0 ABEEA88A 		vfma.f32	s16, s23, s17
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 304


 9447              	.LVL608:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9448              		.loc 19 174 82 view .LVU2638
 9449              	.LBE1836:
 9450              	.LBE1846:
 9451              	.LBE1856:
 9452              	.LBE1895:
 9453              	.LBB1896:
 9454              	.LBB1883:
 9455              	.LBB1872:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9456              		.loc 19 98 38 view .LVU2639
 9457 05d4 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9458              		.loc 19 90 15 view .LVU2640
 9459 05d6 D5F804E0 		ldr	lr, [r5, #4]
 9460              	.LBE1872:
 9461              	.LBE1883:
 9462              	.LBE1896:
 9463              	.LBB1897:
 9464              	.LBB1857:
 9465              	.LBB1847:
 9466              	.LBB1837:
 175:delayline_reverse.h **** 
 9467              		.loc 19 175 91 view .LVU2641
 9468 05da E9EEA87A 		vfma.f32	s15, s19, s17
 9469              	.LVL609:
 175:delayline_reverse.h **** 
 9470              		.loc 19 175 91 view .LVU2642
 9471              	.LBE1837:
 9472              	.LBE1847:
 9473              	.LBE1857:
 9474              	.LBE1897:
 9475              	.LBB1898:
 9476              	.LBB1884:
 9477              	.LBB1873:
  99:delayline_reverse.h ****  
 9478              		.loc 19 99 38 view .LVU2643
 9479 05de 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9480              		.loc 19 98 50 view .LVU2644
 9481 05e0 A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9482              		.loc 19 92 57 view .LVU2645
 9483 05e4 DFF850C2 		ldr	ip, .L574+120
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9484              		.loc 19 90 9 view .LVU2646
 9485 05e8 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9486              		.loc 19 98 50 view .LVU2647
 9487 05ec 890C     		lsrs	r1, r1, #18
 9488              	.LBE1873:
 9489              	.LBE1884:
 9490              	.LBE1898:
 9491              	.LBB1899:
 9492              	.LBB1858:
 9493              	.LBB1848:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 305


 9494              	.LBB1838:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9495              		.loc 19 174 9 view .LVU2648
 9496 05ee 38EE088A 		vadd.f32	s16, s16, s16
 9497              	.LVL610:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9498              		.loc 19 174 9 view .LVU2649
 9499              	.LBE1838:
 9500              	.LBE1848:
 9501              	.LBE1858:
 9502              	.LBE1899:
 9503              	.LBB1900:
 9504              	.LBB1885:
 9505              	.LBB1874:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9506              		.loc 19 98 50 view .LVU2650
 9507 05f2 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9508              		.loc 19 92 45 view .LVU2651
 9509 05f6 8C4E     		ldr	r6, .L574+104
 9510              	.LBE1874:
 9511              	.LBE1885:
 9512              	.LBE1900:
 9513              	.LBB1901:
 9514              	.LBB1859:
 9515              	.LBB1849:
 9516              	.LBB1839:
 175:delayline_reverse.h **** 
 9517              		.loc 19 175 9 view .LVU2652
 9518 05f8 37EEA70A 		vadd.f32	s0, s15, s15
 9519              	.LVL611:
 175:delayline_reverse.h **** 
 9520              		.loc 19 175 9 view .LVU2653
 9521              	.LBE1839:
 9522              	.LBE1849:
 9523              	.LBE1859:
 9524              	.LBE1901:
 360:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9525              		.loc 20 360 26 view .LVU2654
 9526 05fc DBED007A 		vldr.32	s15, [fp]
 9527              	.LBB1902:
 9528              	.LBB1886:
 9529              	.LBB1875:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9530              		.loc 19 98 50 view .LVU2655
 9531 0600 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9532              		.loc 19 92 45 view .LVU2656
 9533 0602 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 9534              		.loc 19 99 50 view .LVU2657
 9535 0604 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 9536              		.loc 19 92 57 view .LVU2658
 9537 0608 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9538              		.loc 19 98 9 view .LVU2659
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 306


 9539 060c 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9540              		.loc 19 99 50 view .LVU2660
 9541 060e 4FEA9E4E 		lsr	lr, lr, #18
 9542              	.LBE1875:
 9543              	.LBE1886:
 9544              	.LBE1902:
 9545              	.LBB1903:
 9546              	.LBB1860:
 9547              	.LBB1850:
 9548              	.LBB1840:
 9549              		.loc 19 177 44 view .LVU2661
 9550 0612 20EE0D0A 		vmul.f32	s0, s0, s26
 9551              	.LVL612:
 9552              		.loc 19 177 44 view .LVU2662
 9553              	.LBE1840:
 9554              	.LBE1850:
 9555              	.LBE1860:
 9556              	.LBE1903:
 9557              	.LBB1904:
 9558              	.LBB1887:
 9559              	.LBB1876:
  92:delayline_reverse.h ****         
 9560              		.loc 19 92 57 view .LVU2663
 9561 0616 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9562              		.loc 19 99 50 view .LVU2664
 9563 0618 0CFB1E00 		mls	r0, ip, lr, r0
 9564              	.LBE1876:
 9565              	.LBE1887:
 9566              	.LBE1904:
 9567              	.LBB1905:
 9568              	.LBB1861:
 9569              	.LBB1851:
 9570              	.LBB1841:
 9571              		.loc 19 177 54 view .LVU2665
 9572 061c ACEE880A 		vfma.f32	s0, s25, s16
 9573              	.LVL613:
 9574              		.loc 19 177 54 view .LVU2666
 9575              	.LBE1841:
 9576              	.LBE1851:
  83:Veno-Echo.cpp ****     }
 9577              		.loc 20 83 9 is_stmt 1 view .LVU2667
  83:Veno-Echo.cpp ****     }
 9578              		.loc 20 83 9 is_stmt 0 view .LVU2668
 9579              	.LBE1861:
 9580              	.LBE1905:
 9581              	.LBB1906:
 9582              	.LBB1888:
 9583              	.LBB1877:
  92:delayline_reverse.h ****         
 9584              		.loc 19 92 57 view .LVU2669
 9585 0620 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 9586              		.loc 19 95 43 view .LVU2670
 9587 0624 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 307


 9588              		.loc 19 90 9 view .LVU2671
 9589 0628 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9590              		.loc 19 95 43 view .LVU2672
 9591 062c 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9592              		.loc 19 101 36 view .LVU2673
 9593 062e DFF804A2 		ldr	r10, .L574+116
  95:delayline_reverse.h **** 
 9594              		.loc 19 95 43 view .LVU2674
 9595 0632 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9596              		.loc 19 101 36 view .LVU2675
 9597 0634 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9598              		.loc 19 101 45 view .LVU2676
 9599 0638 07F1FF3A 		add	r10, r7, #-1
 9600              	.LBE1877:
 9601              	.LBE1888:
 9602              	.LBE1906:
 357:Veno-Echo.cpp **** 
 9603              		.loc 20 357 50 view .LVU2677
 9604 063c 8DED070A 		vstr.32	s0, [sp, #28]
 360:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9605              		.loc 20 360 9 is_stmt 1 view .LVU2678
 9606              	.LVL614:
 9607              	.LBB1907:
 9608              	.LBI1868:
  92:Veno-Echo.cpp ****     {
 9609              		.loc 20 92 10 view .LVU2679
  92:Veno-Echo.cpp ****     {
 9610              		.loc 20 92 10 is_stmt 0 view .LVU2680
 9611              	.LBE1907:
 9612              	.LBE1941:
 9613              	.LBE1566:
  94:Veno-Echo.cpp ****     }
 9614              		.loc 20 94 9 is_stmt 1 view .LVU2681
 9615              	.LBB1953:
 9616              	.LBB1942:
 9617              	.LBB1908:
 9618              	.LBB1889:
 9619              	.LBI1869:
  88:delayline_reverse.h ****     {
 9620              		.loc 19 88 17 view .LVU2682
 9621              	.LBB1878:
  99:delayline_reverse.h ****  
 9622              		.loc 19 99 9 is_stmt 0 view .LVU2683
 9623 0640 C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9624              		.loc 19 95 54 view .LVU2684
 9625 0644 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9626              		.loc 19 101 45 view .LVU2685
 9627 0648 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 9628              		.loc 19 95 54 view .LVU2686
 9629 064c 07FB1122 		mls	r2, r7, r1, r2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 308


  92:delayline_reverse.h ****         
 9630              		.loc 19 92 9 view .LVU2687
 9631 0650 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9632              		.loc 19 101 9 view .LVU2688
 9633 0652 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9634              		.loc 19 95 9 view .LVU2689
 9635 0654 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9636              		.loc 19 101 9 view .LVU2690
 9637 0656 40F28B80 		bls	.L471
 103:delayline_reverse.h ****             {
 9638              		.loc 19 103 17 view .LVU2691
 9639 065a 7449     		ldr	r1, .L574+108
 103:delayline_reverse.h ****             {
 9640              		.loc 19 103 13 view .LVU2692
 9641 065c 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9642              		.loc 19 103 17 view .LVU2693
 9643 065e 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9644              		.loc 19 103 13 view .LVU2694
 9645 0660 0028     		cmp	r0, #0
 9646 0662 40F08A80 		bne	.L562
 107:delayline_reverse.h ****                 {
 9647              		.loc 19 107 21 view .LVU2695
 9648 0666 7248     		ldr	r0, .L574+112
 105:delayline_reverse.h ****                 
 9649              		.loc 19 105 17 view .LVU2696
 9650 0668 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9651              		.loc 19 110 45 view .LVU2697
 9652 066a 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9653              		.loc 19 107 17 view .LVU2698
 9654 066c 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9655              		.loc 19 107 21 view .LVU2699
 9656 066e 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9657              		.loc 19 105 17 view .LVU2700
 9658 0670 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9659              		.loc 19 107 17 view .LVU2701
 9660 0672 002E     		cmp	r6, #0
 9661 0674 40F05582 		bne	.L473
 110:delayline_reverse.h ****                 }
 9662              		.loc 19 110 21 view .LVU2702
 9663 0678 EB60     		str	r3, [r5, #12]
 9664              	.L474:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9665              		.loc 19 130 45 view .LVU2703
 9666 067a 07EE90EA 		vmov	s15, lr	@ int
 9667              	.LVL615:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9668              		.loc 19 130 45 view .LVU2704
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 309


 9669 067e B7EE007A 		vmov.f32	s14, #1.0e+0
 9670 0682 F8EE676A 		vcvt.f32.u32	s13, s15
 9671 0686 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9672              		.loc 19 130 37 view .LVU2705
 9673 068a 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9674              		.loc 19 131 17 view .LVU2706
 9675 068e B4EEC7BA 		vcmpe.f32	s22, s14
 9676 0692 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9677 0696 40F33082 		ble	.L563
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9678              		.loc 19 133 21 view .LVU2707
 9679 069a 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9680              		.loc 19 134 21 view .LVU2708
 9681 069c 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9682              		.loc 19 133 21 view .LVU2709
 9683 069e 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 9684              		.loc 19 135 21 view .LVU2710
 9685 06a2 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9686              		.loc 19 134 21 view .LVU2711
 9687 06a4 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9688              		.loc 19 135 21 view .LVU2712
 9689 06a6 0370     		strb	r3, [r0]
 9690              	.LVL616:
 9691              	.L477:
 135:delayline_reverse.h ****                 }
 9692              		.loc 19 135 21 view .LVU2713
 9693              	.LBE1878:
 9694              	.LBE1889:
 9695              	.LBE1908:
 361:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9696              		.loc 20 361 9 is_stmt 1 view .LVU2714
 9697              	.LBB1909:
 9698              	.LBB1575:
 9699              	.LBB1571:
  95:delayline_reverse.h **** 
 9700              		.loc 19 95 45 is_stmt 0 view .LVU2715
 9701 06a8 2169     		ldr	r1, [r4, #16]
 9702 06aa 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 9703              		.loc 19 95 43 view .LVU2716
 9704 06ae 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9705              		.loc 19 90 15 view .LVU2717
 9706 06b0 6568     		ldr	r5, [r4, #4]
 9707 06b2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 9708              		.loc 19 95 43 view .LVU2718
 9709 06b6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 9710              		.loc 19 92 45 view .LVU2719
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 310


 9711 06b8 5B4F     		ldr	r7, .L574+104
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9712              		.loc 19 90 9 view .LVU2720
 9713 06ba 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9714              		.loc 19 98 38 view .LVU2721
 9715 06be 584B     		ldr	r3, .L574+96
  95:delayline_reverse.h **** 
 9716              		.loc 19 95 43 view .LVU2722
 9717 06c0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 9718              		.loc 19 92 45 view .LVU2723
 9719 06c2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 9720              		.loc 19 101 45 view .LVU2724
 9721 06c4 01F1FF3C 		add	ip, r1, #-1
 9722              	.LBE1571:
 9723              	.LBE1575:
 9724              	.LBE1909:
 361:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9725              		.loc 20 361 26 view .LVU2725
 9726 06c8 DBED017A 		vldr.32	s15, [fp, #4]
 9727              	.LVL617:
 9728              	.LBB1910:
 9729              	.LBI1568:
  92:Veno-Echo.cpp ****     {
 9730              		.loc 20 92 10 is_stmt 1 view .LVU2726
  92:Veno-Echo.cpp ****     {
 9731              		.loc 20 92 10 is_stmt 0 view .LVU2727
 9732              	.LBE1910:
 9733              	.LBE1942:
 9734              	.LBE1953:
  94:Veno-Echo.cpp ****     }
 9735              		.loc 20 94 9 is_stmt 1 view .LVU2728
 9736              	.LBB1954:
 9737              	.LBB1943:
 9738              	.LBB1911:
 9739              	.LBB1576:
 9740              	.LBI1569:
  88:delayline_reverse.h ****     {
 9741              		.loc 19 88 17 view .LVU2729
 9742              	.LBB1572:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9743              		.loc 19 98 38 is_stmt 0 view .LVU2730
 9744 06cc D4E90205 		ldrd	r0, r5, [r4, #8]
 9745 06d0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 9746              		.loc 19 99 38 view .LVU2731
 9747 06d4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 9748              		.loc 19 92 57 view .LVU2732
 9749 06d6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 9750              		.loc 19 95 54 view .LVU2733
 9751 06da B2FBF1F0 		udiv	r0, r2, r1
 9752 06de 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 311


 9753              		.loc 19 101 36 view .LVU2734
 9754 06e2 5449     		ldr	r1, .L574+116
  92:delayline_reverse.h ****         
 9755              		.loc 19 92 57 view .LVU2735
 9756 06e4 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 9757              		.loc 19 101 36 view .LVU2736
 9758 06e8 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 9759              		.loc 19 92 57 view .LVU2737
 9760 06ea A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9761              		.loc 19 90 9 view .LVU2738
 9762 06ee CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 9763              		.loc 19 101 36 view .LVU2739
 9764 06f2 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9765              		.loc 19 92 57 view .LVU2740
 9766 06f4 A3FB0762 		umull	r6, r2, r3, r7
 9767 06f8 DFF83CE1 		ldr	lr, .L574+120
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9768              		.loc 19 98 50 view .LVU2741
 9769 06fc A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 9770              		.loc 19 99 50 view .LVU2742
 9771 0700 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 9772              		.loc 19 101 45 view .LVU2743
 9773 0704 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 9774              		.loc 19 92 57 view .LVU2744
 9775 0706 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 9776              		.loc 19 95 9 view .LVU2745
 9777 0708 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9778              		.loc 19 98 50 view .LVU2746
 9779 070a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 9780              		.loc 19 101 45 view .LVU2747
 9781 070c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 9782              		.loc 19 99 50 view .LVU2748
 9783 0710 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 9784              		.loc 19 92 57 view .LVU2749
 9785 0712 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9786              		.loc 19 98 50 view .LVU2750
 9787 0716 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 9788              		.loc 19 101 9 view .LVU2751
 9789 071a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 9790              		.loc 19 99 50 view .LVU2752
 9791 071c 0EFB1353 		mls	r3, lr, r3, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 312


  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9792              		.loc 19 98 9 view .LVU2753
 9793 0720 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 9794              		.loc 19 99 9 view .LVU2754
 9795 0724 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 9796              		.loc 19 101 9 view .LVU2755
 9797 0726 3FF6B5AC 		bhi	.L568
 126:delayline_reverse.h ****         {
 9798              		.loc 19 126 12 view .LVU2756
 9799 072a 404B     		ldr	r3, .L574+108
 126:delayline_reverse.h ****         {
 9800              		.loc 19 126 9 view .LVU2757
 9801 072c E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 9802              		.loc 19 126 12 view .LVU2758
 9803 072e 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 9804              		.loc 19 126 9 view .LVU2759
 9805 0730 002A     		cmp	r2, #0
 9806 0732 3FF4D9AC 		beq	.L487
 9807              	.L564:
 126:delayline_reverse.h ****         {
 9808              		.loc 19 126 9 view .LVU2760
 9809 0736 3E4A     		ldr	r2, .L574+112
 9810 0738 A018     		adds	r0, r4, r2
 9811 073a A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 9812              		.loc 19 128 13 view .LVU2761
 9813 073c 002A     		cmp	r2, #0
 9814 073e 3FF4B9AC 		beq	.L484
 9815              	.L485:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9816              		.loc 19 141 45 view .LVU2762
 9817 0742 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9818              	.LVL618:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9819              		.loc 19 141 45 view .LVU2763
 9820 0746 B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9821              		.loc 19 141 37 view .LVU2764
 9822 074a 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 9823              		.loc 19 142 17 view .LVU2765
 9824 074c 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9825              		.loc 19 141 45 view .LVU2766
 9826 074e F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9827              		.loc 19 141 37 view .LVU2767
 9828 0752 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9829              		.loc 19 141 45 view .LVU2768
 9830 0756 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9831              		.loc 19 141 37 view .LVU2769
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 313


 9832 075a 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 9833              		.loc 19 142 17 view .LVU2770
 9834 075e F5EEC07A 		vcmpe.f32	s15, #0
 9835 0762 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9836 0766 00F1E981 		bmi	.L490
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9837              		.loc 19 141 17 view .LVU2771
 9838 076a C1ED007A 		vstr.32	s15, [r1]
 9839 076e BBE4     		b	.L487
 9840              	.LVL619:
 9841              	.L471:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9842              		.loc 19 141 17 view .LVU2772
 9843              	.LBE1572:
 9844              	.LBE1576:
 9845              	.LBE1911:
 9846              	.LBB1912:
 9847              	.LBB1890:
 9848              	.LBB1879:
 126:delayline_reverse.h ****         {
 9849              		.loc 19 126 12 view .LVU2773
 9850 0770 2E4A     		ldr	r2, .L574+108
 126:delayline_reverse.h ****         {
 9851              		.loc 19 126 9 view .LVU2774
 9852 0772 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 9853              		.loc 19 126 12 view .LVU2775
 9854 0774 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 9855              		.loc 19 126 9 view .LVU2776
 9856 0776 002B     		cmp	r3, #0
 9857 0778 96D0     		beq	.L477
 9858              	.L562:
 126:delayline_reverse.h ****         {
 9859              		.loc 19 126 9 view .LVU2777
 9860 077a 2D4B     		ldr	r3, .L574+112
 9861 077c E818     		adds	r0, r5, r3
 9862 077e EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 9863              		.loc 19 128 13 view .LVU2778
 9864 0780 002B     		cmp	r3, #0
 9865 0782 3FF47AAF 		beq	.L474
 9866              	.L475:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9867              		.loc 19 141 45 view .LVU2779
 9868 0786 07EE90EA 		vmov	s15, lr	@ int
 9869              	.LVL620:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9870              		.loc 19 141 45 view .LVU2780
 9871 078a F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 9872              		.loc 19 142 17 view .LVU2781
 9873 078e 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9874              		.loc 19 141 45 view .LVU2782
 9875 0790 B8EE677A 		vcvt.f32.u32	s14, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 314


 9876 0794 C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9877              		.loc 19 141 37 view .LVU2783
 9878 0798 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 9879              		.loc 19 142 17 view .LVU2784
 9880 079c B5EEC0BA 		vcmpe.f32	s22, #0
 9881 07a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9882 07a4 40F1A981 		bpl	.L563
 145:delayline_reverse.h ****                     playinghead_ = false;
 9883              		.loc 19 145 21 view .LVU2785
 9884 07a8 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9885              		.loc 19 144 21 view .LVU2786
 9886 07aa 049D     		ldr	r5, [sp, #16]
 9887              	.LVL621:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9888              		.loc 19 144 21 view .LVU2787
 9889 07ac 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 9890              		.loc 19 145 21 view .LVU2788
 9891 07ae 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 9892              		.loc 19 146 21 view .LVU2789
 9893 07b0 0170     		strb	r1, [r0]
 9894 07b2 79E7     		b	.L477
 9895              	.LVL622:
 9896              	.L522:
 146:delayline_reverse.h ****                 }
 9897              		.loc 19 146 21 view .LVU2790
 9898              	.LBE1879:
 9899              	.LBE1890:
 9900              	.LBE1912:
 543:Veno-Echo.cpp ****             out[i+1] = mixR;
 9901              		.loc 20 543 13 is_stmt 1 view .LVU2791
 543:Veno-Echo.cpp ****             out[i+1] = mixR;
 9902              		.loc 20 543 20 is_stmt 0 view .LVU2792
 9903 07b4 009B     		ldr	r3, [sp]
 9904 07b6 C3ED007A 		vstr.32	s15, [r3]
 544:Veno-Echo.cpp ****         }
 9905              		.loc 20 544 13 is_stmt 1 view .LVU2793
 544:Veno-Echo.cpp ****         }
 9906              		.loc 20 544 22 is_stmt 0 view .LVU2794
 9907 07ba 83ED010A 		vstr.32	s0, [r3, #4]
 9908 07be 02E6     		b	.L523
 9909              	.L575:
 9910              		.align	2
 9911              	.L574:
 9912 07c0 00000000 		.word	.LANCHOR92
 9913 07c4 00000000 		.word	.LANCHOR102
 9914 07c8 00000000 		.word	.LANCHOR91
 9915 07cc 00000000 		.word	.LANCHOR101
 9916 07d0 00000000 		.word	.LANCHOR103
 9917 07d4 00000000 		.word	.LANCHOR2
 9918 07d8 00000000 		.word	.LANCHOR104
 9919 07dc 00000000 		.word	.LANCHOR114
 9920 07e0 DB0FC93F 		.word	1070141403
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 315


 9921 07e4 00000000 		.word	.LANCHOR115
 9922 07e8 00000000 		.word	.LANCHOR118
 9923 07ec 00000000 		.word	.LANCHOR79
 9924 07f0 00000000 		.word	.LANCHOR119
 9925 07f4 00000000 		.word	.LANCHOR116
 9926 07f8 E4CB9640 		.word	1083624420
 9927 07fc 00000000 		.word	.LANCHOR117
 9928 0800 0000803D 		.word	1031798784
 9929 0804 00000000 		.word	.LANCHOR120
 9930 0808 00000000 		.word	.LANCHOR121
 9931 080c 00000000 		.word	.LANCHOR122
 9932 0810 00000000 		.word	.LANCHOR123
 9933 0814 00000000 		.word	.LANCHOR124
 9934 0818 00000000 		.word	.LANCHOR125
 9935 081c 00000000 		.word	.LANCHOR3
 9936 0820 BF270900 		.word	599999
 9937 0824 851DD96F 		.word	1876499845
 9938 0828 C1270900 		.word	600001
 9939 082c 249F2400 		.word	2400036
 9940 0830 1C9F2400 		.word	2400028
 9941 0834 189F2400 		.word	2400024
 9942 0838 C0270900 		.word	600000
 9943              	.LVL623:
 9944              	.L559:
 524:Veno-Echo.cpp ****         {
 9945              		.loc 20 524 14 is_stmt 1 view .LVU2795
 9946 083c 40F35481 		ble	.L560
 526:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9947              		.loc 20 526 13 view .LVU2796
 526:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9948              		.loc 20 526 24 is_stmt 0 view .LVU2797
 9949 0840 F7EE006A 		vmov.f32	s13, #1.0e+0
 526:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9950              		.loc 20 526 18 view .LVU2798
 9951 0844 DBED005A 		vldr.32	s11, [fp]
 527:Veno-Echo.cpp ****         }
 9952              		.loc 20 527 18 view .LVU2799
 9953 0848 9BED016A 		vldr.32	s12, [fp, #4]
 526:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9954              		.loc 20 526 24 view .LVU2800
 9955 084c 36EEC77A 		vsub.f32	s14, s13, s14
 526:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9956              		.loc 20 526 33 view .LVU2801
 9957 0850 37EE077A 		vadd.f32	s14, s14, s14
 526:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9958              		.loc 20 526 18 view .LVU2802
 9959 0854 E7EE257A 		vfma.f32	s15, s14, s11
 9960              	.LVL624:
 527:Veno-Echo.cpp ****         }
 9961              		.loc 20 527 13 is_stmt 1 view .LVU2803
 527:Veno-Echo.cpp ****         }
 9962              		.loc 20 527 18 is_stmt 0 view .LVU2804
 9963 0858 A7EE060A 		vfma.f32	s0, s14, s12
 9964              	.LVL625:
 527:Veno-Echo.cpp ****         }
 9965              		.loc 20 527 18 view .LVU2805
 9966 085c AAE5     		b	.L519
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 316


 9967              	.LVL626:
 9968              	.L538:
 9969              	.LBB1913:
 478:Veno-Echo.cpp **** {
 9970              		.loc 20 478 1 view .LVU2806
 9971 085e CF4B     		ldr	r3, .L576
 9972              	.LBE1913:
 9973              	.LBB1914:
 9974              	.LBB1671:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9975              		.loc 20 1876 19 view .LVU2807
 9976 0860 B0EE470A 		vmov.f32	s0, s14
 9977              	.LVL627:
1882:Veno-Echo.cpp **** }
 9978              		.loc 20 1882 5 is_stmt 1 view .LVU2808
1882:Veno-Echo.cpp **** }
 9979              		.loc 20 1882 5 is_stmt 0 view .LVU2809
 9980              	.LBE1671:
 9981              	.LBE1914:
 9982              	.LBB1915:
 478:Veno-Echo.cpp **** {
 9983              		.loc 20 478 1 view .LVU2810
 9984 0864 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9985              	.LBE1915:
 476:Veno-Echo.cpp **** 
 9986              		.loc 20 476 27 view .LVU2811
 9987 0866 8DED0B0A 		vstr.32	s0, [sp, #44]
 478:Veno-Echo.cpp **** {
 9988              		.loc 20 478 1 is_stmt 1 view .LVU2812
 9989              	.LBB1916:
 9990 086a 002B     		cmp	r3, #0
 9991 086c 3FF489AD 		beq	.L513
 9992              	.L567:
 9993              	.LBB1674:
 484:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9994              		.loc 20 484 9 view .LVU2813
 484:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9995              		.loc 20 484 27 is_stmt 0 view .LVU2814
 9996 0870 9FEDCB8A 		vldr.32	s16, .L576+4
 9997              	.LVL628:
 484:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9998              		.loc 20 484 27 view .LVU2815
 9999 0874 CB4D     		ldr	r5, .L576+8
 10000 0876 27EE880A 		vmul.f32	s0, s15, s16
 485:Veno-Echo.cpp **** 
 10001              		.loc 20 485 27 view .LVU2816
 10002 087a CB4C     		ldr	r4, .L576+12
 484:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10003              		.loc 20 484 27 view .LVU2817
 10004 087c 2846     		mov	r0, r5
 10005 087e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10006              	.LVL629:
 485:Veno-Echo.cpp **** 
 10007              		.loc 20 485 9 is_stmt 1 view .LVU2818
 485:Veno-Echo.cpp **** 
 10008              		.loc 20 485 27 is_stmt 0 view .LVU2819
 10009 0882 9DED0B0A 		vldr.32	s0, [sp, #44]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 317


 10010 0886 2046     		mov	r0, r4
 10011 0888 20EE080A 		vmul.f32	s0, s0, s16
 10012 088c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10013              	.LVL630:
 488:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10014              		.loc 20 488 9 is_stmt 1 view .LVU2820
 488:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10015              		.loc 20 488 9 is_stmt 0 view .LVU2821
 10016              	.LBE1674:
 10017              	.LBE1916:
 10018              	.LBE1943:
 10019              	.LBE1954:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10020              		.loc 9 52 26 is_stmt 1 view .LVU2822
 10021              	.LBB1955:
 10022              	.LBB1944:
 10023              	.LBB1917:
 10024              	.LBB1689:
 488:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10025              		.loc 20 488 50 is_stmt 0 view .LVU2823
 10026 0890 F2EE046A 		vmov.f32	s13, #1.0e+1
 10027 0894 95ED0C7A 		vldr.32	s14, [r5, #48]
 492:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10028              		.loc 20 492 59 view .LVU2824
 10029 0898 0AA9     		add	r1, sp, #40
 489:Veno-Echo.cpp ****         
 10030              		.loc 20 489 50 view .LVU2825
 10031 089a D4ED0C7A 		vldr.32	s15, [r4, #48]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 318


 492:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10032              		.loc 20 492 59 view .LVU2826
 10033 089e 0CAA     		add	r2, sp, #48
 488:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10034              		.loc 20 488 50 view .LVU2827
 10035 08a0 27EE267A 		vmul.f32	s14, s14, s13
 492:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10036              		.loc 20 492 59 view .LVU2828
 10037 08a4 C148     		ldr	r0, .L576+16
 489:Veno-Echo.cpp ****         
 10038              		.loc 20 489 50 view .LVU2829
 10039 08a6 67EEA67A 		vmul.f32	s15, s15, s13
 488:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10040              		.loc 20 488 57 view .LVU2830
 10041 08aa 8DED0C7A 		vstr.32	s14, [sp, #48]
 489:Veno-Echo.cpp ****         
 10042              		.loc 20 489 9 is_stmt 1 view .LVU2831
 10043              	.LVL631:
 489:Veno-Echo.cpp ****         
 10044              		.loc 20 489 9 is_stmt 0 view .LVU2832
 10045              	.LBE1689:
 10046              	.LBE1917:
 10047              	.LBE1944:
 10048              	.LBE1955:
 10049              		.loc 9 52 26 is_stmt 1 view .LVU2833
 10050              	.LBB1956:
 10051              	.LBB1945:
 10052              	.LBB1918:
 10053              	.LBB1690:
 489:Veno-Echo.cpp ****         
 10054              		.loc 20 489 57 is_stmt 0 view .LVU2834
 10055 08ae CDED0D7A 		vstr.32	s15, [sp, #52]
 492:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10056              		.loc 20 492 9 is_stmt 1 view .LVU2835
 492:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10057              		.loc 20 492 59 is_stmt 0 view .LVU2836
 10058 08b2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10059              	.LVL632:
 493:Veno-Echo.cpp **** 
 10060              		.loc 20 493 59 view .LVU2837
 10061 08b6 0BA9     		add	r1, sp, #44
 10062 08b8 0DAA     		add	r2, sp, #52
 10063 08ba BD48     		ldr	r0, .L576+20
 492:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10064              		.loc 20 492 97 view .LVU2838
 10065 08bc 8DED0E0A 		vstr.32	s0, [sp, #56]
 493:Veno-Echo.cpp **** 
 10066              		.loc 20 493 9 is_stmt 1 view .LVU2839
 493:Veno-Echo.cpp **** 
 10067              		.loc 20 493 59 is_stmt 0 view .LVU2840
 10068 08c0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10069              	.LVL633:
 10070              	.LBB1675:
 10071              	.LBB1676:
1875:Veno-Echo.cpp ****         returnval = limit;
 10072              		.loc 20 1875 5 view .LVU2841
 10073 08c4 F0EE006A 		vmov.f32	s13, #2.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 319


 10074              	.LBE1676:
 10075              	.LBE1675:
 496:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10076              		.loc 20 496 41 view .LVU2842
 10077 08c8 9DED0E7A 		vldr.32	s14, [sp, #56]
 493:Veno-Echo.cpp **** 
 10078              		.loc 20 493 59 view .LVU2843
 10079 08cc F0EE407A 		vmov.f32	s15, s0
 496:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10080              		.loc 20 496 9 is_stmt 1 view .LVU2844
 10081              	.LVL634:
 10082              	.LBB1680:
 10083              	.LBI1675:
1872:Veno-Echo.cpp **** {
 10084              		.loc 20 1872 7 view .LVU2845
 10085              	.LBB1677:
1874:Veno-Echo.cpp ****     if (input > limit)
 10086              		.loc 20 1874 5 view .LVU2846
1875:Veno-Echo.cpp ****         returnval = limit;
 10087              		.loc 20 1875 5 view .LVU2847
 10088 08d0 B4EEE67A 		vcmpe.f32	s14, s13
 10089 08d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10090 08d8 00F31681 		bgt	.L539
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10091              		.loc 20 1877 10 view .LVU2848
 10092 08dc F8EE006A 		vmov.f32	s13, #-2.0e+0
 10093 08e0 B4EEE67A 		vcmpe.f32	s14, s13
 10094 08e4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10095 08e8 00F12F81 		bmi	.L540
 10096 08ec 27EE080A 		vmul.f32	s0, s14, s16
 10097              	.LVL635:
 10098              	.L514:
1882:Veno-Echo.cpp **** }
 10099              		.loc 20 1882 5 view .LVU2849
1882:Veno-Echo.cpp **** }
 10100              		.loc 20 1882 5 is_stmt 0 view .LVU2850
 10101              	.LBE1677:
 10102              	.LBE1680:
 10103              	.LBB1681:
 10104              	.LBB1682:
1875:Veno-Echo.cpp ****         returnval = limit;
 10105              		.loc 20 1875 5 view .LVU2851
 10106 08f0 F0EE006A 		vmov.f32	s13, #2.0e+0
 10107              	.LBE1682:
 10108              	.LBE1681:
 496:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10109              		.loc 20 496 30 view .LVU2852
 10110 08f4 8DED0E7A 		vstr.32	s14, [sp, #56]
 497:Veno-Echo.cpp **** 
 10111              		.loc 20 497 9 is_stmt 1 view .LVU2853
 10112              	.LVL636:
 10113              	.LBB1685:
 10114              	.LBI1681:
1872:Veno-Echo.cpp **** {
 10115              		.loc 20 1872 7 view .LVU2854
 10116              	.LBB1683:
1874:Veno-Echo.cpp ****     if (input > limit)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 320


 10117              		.loc 20 1874 5 view .LVU2855
1875:Veno-Echo.cpp ****         returnval = limit;
 10118              		.loc 20 1875 5 view .LVU2856
 10119 08f8 F4EEE67A 		vcmpe.f32	s15, s13
 10120 08fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10121 0900 00F3FF80 		bgt	.L541
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10122              		.loc 20 1877 10 view .LVU2857
 10123 0904 B8EE007A 		vmov.f32	s14, #-2.0e+0
1878:Veno-Echo.cpp ****     else
 10124              		.loc 20 1878 19 is_stmt 0 view .LVU2858
 10125 0908 F4EE477A 		vcmp.f32	s15, s14
 10126 090c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10127 0910 48BF     		it	mi
 10128 0912 F0EE477A 		vmovmi.f32	s15, s14
 10129              	.LVL637:
 10130              	.L515:
1882:Veno-Echo.cpp **** }
 10131              		.loc 20 1882 5 is_stmt 1 view .LVU2859
1882:Veno-Echo.cpp **** }
 10132              		.loc 20 1882 5 is_stmt 0 view .LVU2860
 10133              	.LBE1683:
 10134              	.LBE1685:
 500:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10135              		.loc 20 500 27 view .LVU2861
 10136 0916 A74D     		ldr	r5, .L576+24
 501:Veno-Echo.cpp **** 
 10137              		.loc 20 501 27 view .LVU2862
 10138 0918 A74C     		ldr	r4, .L576+28
 500:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10139              		.loc 20 500 27 view .LVU2863
 10140 091a 2846     		mov	r0, r5
 497:Veno-Echo.cpp **** 
 10141              		.loc 20 497 30 view .LVU2864
 10142 091c CDED0F7A 		vstr.32	s15, [sp, #60]
 500:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10143              		.loc 20 500 9 is_stmt 1 view .LVU2865
 500:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10144              		.loc 20 500 27 is_stmt 0 view .LVU2866
 10145 0920 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10146              	.LVL638:
 501:Veno-Echo.cpp **** 
 10147              		.loc 20 501 9 is_stmt 1 view .LVU2867
 501:Veno-Echo.cpp **** 
 10148              		.loc 20 501 27 is_stmt 0 view .LVU2868
 10149 0924 DFED9E7A 		vldr.32	s15, .L576+4
 10150 0928 9DED0F0A 		vldr.32	s0, [sp, #60]
 10151 092c 2046     		mov	r0, r4
 10152 092e 20EE270A 		vmul.f32	s0, s0, s15
 10153 0932 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10154              	.LVL639:
 503:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10155              		.loc 20 503 9 is_stmt 1 view .LVU2869
 503:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10156              		.loc 20 503 9 is_stmt 0 view .LVU2870
 10157              	.LBE1690:
 10158              	.LBE1918:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 321


 10159              	.LBE1945:
 10160              	.LBE1956:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10161              		.loc 9 56 27 is_stmt 1 view .LVU2871
 10162              	.LBB1957:
 10163              	.LBB1946:
 10164              	.LBB1919:
 10165              	.LBB1691:
 503:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10166              		.loc 20 503 51 is_stmt 0 view .LVU2872
 10167 0936 F2EE046A 		vmov.f32	s13, #1.0e+1
 10168 093a 95ED0D7A 		vldr.32	s14, [r5, #52]
 506:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10169              		.loc 20 506 55 view .LVU2873
 10170 093e 0EA9     		add	r1, sp, #56
 504:Veno-Echo.cpp **** 
 10171              		.loc 20 504 51 view .LVU2874
 10172 0940 D4ED0D7A 		vldr.32	s15, [r4, #52]
 506:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10173              		.loc 20 506 55 view .LVU2875
 10174 0944 10AA     		add	r2, sp, #64
 503:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10175              		.loc 20 503 51 view .LVU2876
 10176 0946 27EE267A 		vmul.f32	s14, s14, s13
 506:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10177              		.loc 20 506 55 view .LVU2877
 10178 094a 9C48     		ldr	r0, .L576+32
 504:Veno-Echo.cpp **** 
 10179              		.loc 20 504 51 view .LVU2878
 10180 094c 67EEA67A 		vmul.f32	s15, s15, s13
 503:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10181              		.loc 20 503 58 view .LVU2879
 10182 0950 8DED107A 		vstr.32	s14, [sp, #64]
 504:Veno-Echo.cpp **** 
 10183              		.loc 20 504 9 is_stmt 1 view .LVU2880
 10184              	.LVL640:
 504:Veno-Echo.cpp **** 
 10185              		.loc 20 504 9 is_stmt 0 view .LVU2881
 10186              	.LBE1691:
 10187              	.LBE1919:
 10188              	.LBE1946:
 10189              	.LBE1957:
 10190              		.loc 9 56 27 is_stmt 1 view .LVU2882
 10191              	.LBB1958:
 10192              	.LBB1947:
 10193              	.LBB1920:
 10194              	.LBB1692:
 504:Veno-Echo.cpp **** 
 10195              		.loc 20 504 58 is_stmt 0 view .LVU2883
 10196 0954 CDED117A 		vstr.32	s15, [sp, #68]
 506:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10197              		.loc 20 506 9 is_stmt 1 view .LVU2884
 506:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10198              		.loc 20 506 55 is_stmt 0 view .LVU2885
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 322


 10199 0958 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10200              	.LVL641:
 507:Veno-Echo.cpp **** 
 10201              		.loc 20 507 55 view .LVU2886
 10202 095c 0FA9     		add	r1, sp, #60
 10203 095e 11AA     		add	r2, sp, #68
 10204 0960 9748     		ldr	r0, .L576+36
 506:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10205              		.loc 20 506 30 view .LVU2887
 10206 0962 8DED0E0A 		vstr.32	s0, [sp, #56]
 507:Veno-Echo.cpp **** 
 10207              		.loc 20 507 9 is_stmt 1 view .LVU2888
 507:Veno-Echo.cpp **** 
 10208              		.loc 20 507 55 is_stmt 0 view .LVU2889
 10209 0966 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10210              	.LVL642:
 510:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10211              		.loc 20 510 53 view .LVU2890
 10212 096a 0EAA     		add	r2, sp, #56
 10213 096c 0AA9     		add	r1, sp, #40
 10214 096e 9548     		ldr	r0, .L576+40
 507:Veno-Echo.cpp **** 
 10215              		.loc 20 507 30 view .LVU2891
 10216 0970 8DED0F0A 		vstr.32	s0, [sp, #60]
 510:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10217              		.loc 20 510 9 is_stmt 1 view .LVU2892
 510:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10218              		.loc 20 510 53 is_stmt 0 view .LVU2893
 10219 0974 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10220              	.LVL643:
 511:Veno-Echo.cpp **** 
 10221              		.loc 20 511 53 view .LVU2894
 10222 0978 0FAA     		add	r2, sp, #60
 10223 097a 0BA9     		add	r1, sp, #44
 10224 097c 9248     		ldr	r0, .L576+44
 510:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10225              		.loc 20 510 27 view .LVU2895
 10226 097e 8DED0A0A 		vstr.32	s0, [sp, #40]
 511:Veno-Echo.cpp **** 
 10227              		.loc 20 511 9 is_stmt 1 view .LVU2896
 511:Veno-Echo.cpp **** 
 10228              		.loc 20 511 53 is_stmt 0 view .LVU2897
 10229 0982 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10230              	.LVL644:
 10231 0986 DDED0A7A 		vldr.32	s15, [sp, #40]
 511:Veno-Echo.cpp **** 
 10232              		.loc 20 511 27 view .LVU2898
 10233 098a 8DED0B0A 		vstr.32	s0, [sp, #44]
 10234              	.LBE1692:
 10235 098e F8E4     		b	.L513
 10236              	.LVL645:
 10237              	.L558:
 511:Veno-Echo.cpp **** 
 10238              		.loc 20 511 27 view .LVU2899
 10239              	.LBE1920:
 454:Veno-Echo.cpp **** 
 10240              		.loc 20 454 25 view .LVU2900
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 323


 10241 0990 DFED8E7A 		vldr.32	s15, .L576+48
 10242              	.LVL646:
 454:Veno-Echo.cpp **** 
 10243              		.loc 20 454 25 view .LVU2901
 10244 0994 7FE4     		b	.L503
 10245              	.LVL647:
 10246              	.L557:
 450:Veno-Echo.cpp ****             
 10247              		.loc 20 450 25 view .LVU2902
 10248 0996 9FED8D7A 		vldr.32	s14, .L576+48
 10249              	.LVL648:
 450:Veno-Echo.cpp ****             
 10250              		.loc 20 450 25 view .LVU2903
 10251 099a 6BE4     		b	.L501
 10252              	.LVL649:
 10253              	.L529:
 10254              	.LBB1921:
 380:Veno-Echo.cpp **** {
 10255              		.loc 20 380 1 view .LVU2904
 10256 099c 7F4B     		ldr	r3, .L576
 10257              	.LBE1921:
 10258              	.LBB1922:
 10259              	.LBB1588:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10260              		.loc 20 1876 19 view .LVU2905
 10261 099e B0EE470A 		vmov.f32	s0, s14
 10262              	.LVL650:
1882:Veno-Echo.cpp **** }
 10263              		.loc 20 1882 5 is_stmt 1 view .LVU2906
1882:Veno-Echo.cpp **** }
 10264              		.loc 20 1882 5 is_stmt 0 view .LVU2907
 10265              	.LBE1588:
 10266              	.LBE1922:
 10267              	.LBB1923:
 380:Veno-Echo.cpp **** {
 10268              		.loc 20 380 1 view .LVU2908
 10269 09a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10270              	.LBE1923:
 378:Veno-Echo.cpp **** 
 10271              		.loc 20 378 23 view .LVU2909
 10272 09a4 8DED090A 		vstr.32	s0, [sp, #36]
 380:Veno-Echo.cpp **** {
 10273              		.loc 20 380 1 is_stmt 1 view .LVU2910
 10274              	.LBB1924:
 10275 09a8 002B     		cmp	r3, #0
 10276 09aa 7FF4E8AB 		bne	.L495
 10277              	.L566:
 10278              	.LBB1591:
 386:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10279              		.loc 20 386 9 view .LVU2911
 386:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10280              		.loc 20 386 22 is_stmt 0 view .LVU2912
 10281 09ae 9FED7C9A 		vldr.32	s18, .L576+4
 10282 09b2 874D     		ldr	r5, .L576+52
 10283 09b4 27EE890A 		vmul.f32	s0, s15, s18
 387:Veno-Echo.cpp **** 
 10284              		.loc 20 387 22 view .LVU2913
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 324


 10285 09b8 864C     		ldr	r4, .L576+56
 386:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10286              		.loc 20 386 22 view .LVU2914
 10287 09ba 2846     		mov	r0, r5
 10288 09bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10289              	.LVL651:
 387:Veno-Echo.cpp **** 
 10290              		.loc 20 387 9 is_stmt 1 view .LVU2915
 387:Veno-Echo.cpp **** 
 10291              		.loc 20 387 22 is_stmt 0 view .LVU2916
 10292 09c0 9DED090A 		vldr.32	s0, [sp, #36]
 10293 09c4 2046     		mov	r0, r4
 10294 09c6 20EE090A 		vmul.f32	s0, s0, s18
 10295 09ca FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10296              	.LVL652:
 390:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10297              		.loc 20 390 9 is_stmt 1 view .LVU2917
 390:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10298              		.loc 20 390 9 is_stmt 0 view .LVU2918
 10299              	.LBE1591:
 10300              	.LBE1924:
 10301              	.LBE1947:
 10302              	.LBE1958:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10303              		.loc 9 52 26 is_stmt 1 view .LVU2919
 10304              	.LBB1959:
 10305              	.LBB1948:
 10306              	.LBB1925:
 10307              	.LBB1606:
 390:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10308              		.loc 20 390 40 is_stmt 0 view .LVU2920
 10309 09ce F2EE046A 		vmov.f32	s13, #1.0e+1
 10310 09d2 95ED0C7A 		vldr.32	s14, [r5, #48]
 394:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10311              		.loc 20 394 49 view .LVU2921
 10312 09d6 0CAA     		add	r2, sp, #48
 391:Veno-Echo.cpp ****         
 10313              		.loc 20 391 40 view .LVU2922
 10314 09d8 D4ED0C7A 		vldr.32	s15, [r4, #48]
 394:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10315              		.loc 20 394 49 view .LVU2923
 10316 09dc 08A9     		add	r1, sp, #32
 390:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10317              		.loc 20 390 40 view .LVU2924
 10318 09de 27EE267A 		vmul.f32	s14, s14, s13
 394:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10319              		.loc 20 394 49 view .LVU2925
 10320 09e2 7D48     		ldr	r0, .L576+60
 391:Veno-Echo.cpp ****         
 10321              		.loc 20 391 40 view .LVU2926
 10322 09e4 67EEA67A 		vmul.f32	s15, s15, s13
 390:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10323              		.loc 20 390 47 view .LVU2927
 10324 09e8 8DED0C7A 		vstr.32	s14, [sp, #48]
 391:Veno-Echo.cpp ****         
 10325              		.loc 20 391 9 is_stmt 1 view .LVU2928
 10326              	.LVL653:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 325


 391:Veno-Echo.cpp ****         
 10327              		.loc 20 391 9 is_stmt 0 view .LVU2929
 10328              	.LBE1606:
 10329              	.LBE1925:
 10330              	.LBE1948:
 10331              	.LBE1959:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10332              		.loc 9 52 26 is_stmt 1 view .LVU2930
 10333              	.LBB1960:
 10334              	.LBB1949:
 10335              	.LBB1926:
 10336              	.LBB1607:
 391:Veno-Echo.cpp ****         
 10337              		.loc 20 391 47 is_stmt 0 view .LVU2931
 10338 09ec CDED0D7A 		vstr.32	s15, [sp, #52]
 394:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10339              		.loc 20 394 9 is_stmt 1 view .LVU2932
 394:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10340              		.loc 20 394 49 is_stmt 0 view .LVU2933
 10341 09f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10342              	.LVL654:
 395:Veno-Echo.cpp **** 
 10343              		.loc 20 395 49 view .LVU2934
 10344 09f4 0DAA     		add	r2, sp, #52
 10345 09f6 09A9     		add	r1, sp, #36
 10346 09f8 7848     		ldr	r0, .L576+64
 394:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10347              		.loc 20 394 78 view .LVU2935
 10348 09fa 8DED0E0A 		vstr.32	s0, [sp, #56]
 395:Veno-Echo.cpp **** 
 10349              		.loc 20 395 9 is_stmt 1 view .LVU2936
 395:Veno-Echo.cpp **** 
 10350              		.loc 20 395 49 is_stmt 0 view .LVU2937
 10351 09fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10352              	.LVL655:
 10353              	.LBB1592:
 10354              	.LBB1593:
1875:Veno-Echo.cpp ****         returnval = limit;
 10355              		.loc 20 1875 5 view .LVU2938
 10356 0a02 F0EE006A 		vmov.f32	s13, #2.0e+0
 10357              	.LBE1593:
 10358              	.LBE1592:
 398:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10359              		.loc 20 398 36 view .LVU2939
 10360 0a06 9DED0E7A 		vldr.32	s14, [sp, #56]
 395:Veno-Echo.cpp **** 
 10361              		.loc 20 395 49 view .LVU2940
 10362 0a0a F0EE407A 		vmov.f32	s15, s0
 398:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10363              		.loc 20 398 9 is_stmt 1 view .LVU2941
 10364              	.LVL656:
 10365              	.LBB1597:
 10366              	.LBI1592:
1872:Veno-Echo.cpp **** {
 10367              		.loc 20 1872 7 view .LVU2942
 10368              	.LBB1594:
1874:Veno-Echo.cpp ****     if (input > limit)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 326


 10369              		.loc 20 1874 5 view .LVU2943
1875:Veno-Echo.cpp ****         returnval = limit;
 10370              		.loc 20 1875 5 view .LVU2944
 10371 0a0e B4EEE67A 		vcmpe.f32	s14, s13
 10372 0a12 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10373 0a16 7FDC     		bgt	.L530
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10374              		.loc 20 1877 10 view .LVU2945
 10375 0a18 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10376 0a1c B4EEE67A 		vcmpe.f32	s14, s13
 10377 0a20 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10378 0a24 00F19680 		bmi	.L531
 10379 0a28 27EE090A 		vmul.f32	s0, s14, s18
 10380              	.LVL657:
 10381              	.L496:
1882:Veno-Echo.cpp **** }
 10382              		.loc 20 1882 5 view .LVU2946
1882:Veno-Echo.cpp **** }
 10383              		.loc 20 1882 5 is_stmt 0 view .LVU2947
 10384              	.LBE1594:
 10385              	.LBE1597:
 10386              	.LBB1598:
 10387              	.LBB1599:
1875:Veno-Echo.cpp ****         returnval = limit;
 10388              		.loc 20 1875 5 view .LVU2948
 10389 0a2c F0EE006A 		vmov.f32	s13, #2.0e+0
 10390              	.LBE1599:
 10391              	.LBE1598:
 398:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10392              		.loc 20 398 25 view .LVU2949
 10393 0a30 8DED0E7A 		vstr.32	s14, [sp, #56]
 399:Veno-Echo.cpp **** 
 10394              		.loc 20 399 9 is_stmt 1 view .LVU2950
 10395              	.LVL658:
 10396              	.LBB1602:
 10397              	.LBI1598:
1872:Veno-Echo.cpp **** {
 10398              		.loc 20 1872 7 view .LVU2951
 10399              	.LBB1600:
1874:Veno-Echo.cpp ****     if (input > limit)
 10400              		.loc 20 1874 5 view .LVU2952
1875:Veno-Echo.cpp ****         returnval = limit;
 10401              		.loc 20 1875 5 view .LVU2953
 10402 0a34 F4EEE67A 		vcmpe.f32	s15, s13
 10403 0a38 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10404 0a3c 69DC     		bgt	.L532
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10405              		.loc 20 1877 10 view .LVU2954
 10406 0a3e B8EE007A 		vmov.f32	s14, #-2.0e+0
1878:Veno-Echo.cpp ****     else
 10407              		.loc 20 1878 19 is_stmt 0 view .LVU2955
 10408 0a42 F4EE477A 		vcmp.f32	s15, s14
 10409 0a46 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10410 0a4a 48BF     		it	mi
 10411 0a4c F0EE477A 		vmovmi.f32	s15, s14
 10412              	.LVL659:
 10413              	.L497:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 327


1882:Veno-Echo.cpp **** }
 10414              		.loc 20 1882 5 is_stmt 1 view .LVU2956
1882:Veno-Echo.cpp **** }
 10415              		.loc 20 1882 5 is_stmt 0 view .LVU2957
 10416              	.LBE1600:
 10417              	.LBE1602:
 402:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10418              		.loc 20 402 22 view .LVU2958
 10419 0a50 634D     		ldr	r5, .L576+68
 403:Veno-Echo.cpp **** 
 10420              		.loc 20 403 22 view .LVU2959
 10421 0a52 644C     		ldr	r4, .L576+72
 402:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10422              		.loc 20 402 22 view .LVU2960
 10423 0a54 2846     		mov	r0, r5
 399:Veno-Echo.cpp **** 
 10424              		.loc 20 399 25 view .LVU2961
 10425 0a56 CDED0F7A 		vstr.32	s15, [sp, #60]
 402:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10426              		.loc 20 402 9 is_stmt 1 view .LVU2962
 402:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10427              		.loc 20 402 22 is_stmt 0 view .LVU2963
 10428 0a5a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10429              	.LVL660:
 403:Veno-Echo.cpp **** 
 10430              		.loc 20 403 9 is_stmt 1 view .LVU2964
 403:Veno-Echo.cpp **** 
 10431              		.loc 20 403 22 is_stmt 0 view .LVU2965
 10432 0a5e DFED507A 		vldr.32	s15, .L576+4
 10433 0a62 9DED0F0A 		vldr.32	s0, [sp, #60]
 10434 0a66 2046     		mov	r0, r4
 10435 0a68 20EE270A 		vmul.f32	s0, s0, s15
 10436 0a6c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10437              	.LVL661:
 405:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10438              		.loc 20 405 9 is_stmt 1 view .LVU2966
 405:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10439              		.loc 20 405 9 is_stmt 0 view .LVU2967
 10440              	.LBE1607:
 10441              	.LBE1926:
 10442              	.LBE1949:
 10443              	.LBE1960:
 10444              		.loc 9 56 27 is_stmt 1 view .LVU2968
 10445              	.LBB1961:
 10446              	.LBB1950:
 10447              	.LBB1927:
 10448              	.LBB1608:
 405:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10449              		.loc 20 405 41 is_stmt 0 view .LVU2969
 10450 0a70 F2EE046A 		vmov.f32	s13, #1.0e+1
 10451 0a74 95ED0D7A 		vldr.32	s14, [r5, #52]
 408:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10452              		.loc 20 408 45 view .LVU2970
 10453 0a78 0EA9     		add	r1, sp, #56
 406:Veno-Echo.cpp **** 
 10454              		.loc 20 406 41 view .LVU2971
 10455 0a7a D4ED0D7A 		vldr.32	s15, [r4, #52]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 328


 408:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10456              		.loc 20 408 45 view .LVU2972
 10457 0a7e 10AA     		add	r2, sp, #64
 405:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10458              		.loc 20 405 41 view .LVU2973
 10459 0a80 27EE267A 		vmul.f32	s14, s14, s13
 408:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10460              		.loc 20 408 45 view .LVU2974
 10461 0a84 5848     		ldr	r0, .L576+76
 406:Veno-Echo.cpp **** 
 10462              		.loc 20 406 41 view .LVU2975
 10463 0a86 67EEA67A 		vmul.f32	s15, s15, s13
 405:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10464              		.loc 20 405 48 view .LVU2976
 10465 0a8a 8DED107A 		vstr.32	s14, [sp, #64]
 406:Veno-Echo.cpp **** 
 10466              		.loc 20 406 9 is_stmt 1 view .LVU2977
 10467              	.LVL662:
 406:Veno-Echo.cpp **** 
 10468              		.loc 20 406 9 is_stmt 0 view .LVU2978
 10469              	.LBE1608:
 10470              	.LBE1927:
 10471              	.LBE1950:
 10472              	.LBE1961:
 10473              		.loc 9 56 27 is_stmt 1 view .LVU2979
 10474              	.LBB1962:
 10475              	.LBB1951:
 10476              	.LBB1928:
 10477              	.LBB1609:
 406:Veno-Echo.cpp **** 
 10478              		.loc 20 406 48 is_stmt 0 view .LVU2980
 10479 0a8e CDED117A 		vstr.32	s15, [sp, #68]
 408:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10480              		.loc 20 408 9 is_stmt 1 view .LVU2981
 408:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10481              		.loc 20 408 45 is_stmt 0 view .LVU2982
 10482 0a92 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10483              	.LVL663:
 409:Veno-Echo.cpp **** 
 10484              		.loc 20 409 45 view .LVU2983
 10485 0a96 0FA9     		add	r1, sp, #60
 10486 0a98 11AA     		add	r2, sp, #68
 10487 0a9a 5448     		ldr	r0, .L576+80
 408:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10488              		.loc 20 408 25 view .LVU2984
 10489 0a9c 8DED0E0A 		vstr.32	s0, [sp, #56]
 409:Veno-Echo.cpp **** 
 10490              		.loc 20 409 9 is_stmt 1 view .LVU2985
 409:Veno-Echo.cpp **** 
 10491              		.loc 20 409 45 is_stmt 0 view .LVU2986
 10492 0aa0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10493              	.LVL664:
 413:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10494              		.loc 20 413 44 view .LVU2987
 10495 0aa4 0EAA     		add	r2, sp, #56
 10496 0aa6 08A9     		add	r1, sp, #32
 10497 0aa8 5148     		ldr	r0, .L576+84
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 329


 409:Veno-Echo.cpp **** 
 10498              		.loc 20 409 25 view .LVU2988
 10499 0aaa 8DED0F0A 		vstr.32	s0, [sp, #60]
 413:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10500              		.loc 20 413 9 is_stmt 1 view .LVU2989
 413:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10501              		.loc 20 413 44 is_stmt 0 view .LVU2990
 10502 0aae FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10503              	.LVL665:
 414:Veno-Echo.cpp **** 
 10504              		.loc 20 414 44 view .LVU2991
 10505 0ab2 0FAA     		add	r2, sp, #60
 10506 0ab4 09A9     		add	r1, sp, #36
 10507 0ab6 4F48     		ldr	r0, .L576+88
 413:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10508              		.loc 20 413 23 view .LVU2992
 10509 0ab8 8DED080A 		vstr.32	s0, [sp, #32]
 414:Veno-Echo.cpp **** 
 10510              		.loc 20 414 9 is_stmt 1 view .LVU2993
 414:Veno-Echo.cpp **** 
 10511              		.loc 20 414 44 is_stmt 0 view .LVU2994
 10512 0abc FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10513              	.LVL666:
 10514 0ac0 DDED087A 		vldr.32	s15, [sp, #32]
 414:Veno-Echo.cpp **** 
 10515              		.loc 20 414 23 view .LVU2995
 10516 0ac4 8DED090A 		vstr.32	s0, [sp, #36]
 10517              	.LBE1609:
 10518 0ac8 FFF759BB 		b	.L495
 10519              	.LVL667:
 10520              	.L528:
 414:Veno-Echo.cpp **** 
 10521              		.loc 20 414 23 view .LVU2996
 10522              	.LBE1928:
 10523              	.LBB1929:
 10524              	.LBB1582:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10525              		.loc 20 1876 19 view .LVU2997
 10526 0acc F0EE477A 		vmov.f32	s15, s14
 10527              	.LVL668:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10528              		.loc 20 1876 19 view .LVU2998
 10529 0ad0 FFF739BB 		b	.L491
 10530              	.LVL669:
 10531              	.L536:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10532              		.loc 20 1876 19 view .LVU2999
 10533              	.LBE1582:
 10534              	.LBE1929:
 10535              	.LBB1930:
 10536              	.LBB1661:
 10537 0ad4 B0EE678A 		vmov.f32	s16, s15
 10538              	.LVL670:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10539              		.loc 20 1876 19 view .LVU3000
 10540 0ad8 06E4     		b	.L507
 10541              	.LVL671:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 330


 10542              	.L535:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10543              		.loc 20 1876 19 view .LVU3001
 10544              	.LBE1661:
 10545              	.LBE1930:
 10546              	.LBB1931:
 10547              	.LBB1658:
 10548 0ada B0EE670A 		vmov.f32	s0, s15
 10549              	.LVL672:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10550              		.loc 20 1876 19 view .LVU3002
 10551 0ade FFF7F2BB 		b	.L505
 10552              	.LVL673:
 10553              	.L537:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10554              		.loc 20 1876 19 view .LVU3003
 10555              	.LBE1658:
 10556              	.LBE1931:
 10557              	.LBB1932:
 10558              	.LBB1665:
 10559 0ae2 F0EE477A 		vmov.f32	s15, s14
 10560              	.LVL674:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10561              		.loc 20 1876 19 view .LVU3004
 10562 0ae6 32E4     		b	.L509
 10563              	.LVL675:
 10564              	.L560:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10565              		.loc 20 1876 19 view .LVU3005
 10566              	.LBE1665:
 10567              	.LBE1932:
 531:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10568              		.loc 20 531 13 is_stmt 1 view .LVU3006
 531:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10569              		.loc 20 531 18 is_stmt 0 view .LVU3007
 10570 0ae8 DBED006A 		vldr.32	s13, [fp]
 532:Veno-Echo.cpp ****         }
 10571              		.loc 20 532 18 view .LVU3008
 10572 0aec 9BED017A 		vldr.32	s14, [fp, #4]
 531:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10573              		.loc 20 531 18 view .LVU3009
 10574 0af0 77EEA67A 		vadd.f32	s15, s15, s13
 10575              	.LVL676:
 532:Veno-Echo.cpp ****         }
 10576              		.loc 20 532 13 is_stmt 1 view .LVU3010
 532:Veno-Echo.cpp ****         }
 10577              		.loc 20 532 18 is_stmt 0 view .LVU3011
 10578 0af4 30EE070A 		vadd.f32	s0, s0, s14
 10579              	.LVL677:
 532:Veno-Echo.cpp ****         }
 10580              		.loc 20 532 18 view .LVU3012
 10581 0af8 5CE4     		b	.L519
 10582              	.LVL678:
 10583              	.L563:
 10584              	.LBB1933:
 10585              	.LBB1891:
 10586              	.LBB1880:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 331


 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10587              		.loc 19 141 17 view .LVU3013
 10588 0afa 049B     		ldr	r3, [sp, #16]
 10589 0afc 83ED00BA 		vstr.32	s22, [r3]
 10590 0b00 D2E5     		b	.L477
 10591              	.LVL679:
 10592              	.L541:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10593              		.loc 19 141 17 view .LVU3014
 10594              	.LBE1880:
 10595              	.LBE1891:
 10596              	.LBE1933:
 10597              	.LBB1934:
 10598              	.LBB1693:
 10599              	.LBB1686:
 10600              	.LBB1684:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10601              		.loc 20 1876 19 view .LVU3015
 10602 0b02 F0EE667A 		vmov.f32	s15, s13
 10603              	.LVL680:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10604              		.loc 20 1876 19 view .LVU3016
 10605 0b06 06E7     		b	.L515
 10606              	.LVL681:
 10607              	.L539:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10608              		.loc 20 1876 19 view .LVU3017
 10609              	.LBE1684:
 10610              	.LBE1686:
 10611              	.LBB1687:
 10612              	.LBB1678:
 10613 0b08 B0EE667A 		vmov.f32	s14, s13
 10614              	.LVL682:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10615              		.loc 20 1876 19 view .LVU3018
 10616 0b0c 9FED3A0A 		vldr.32	s0, .L576+92
 10617 0b10 EEE6     		b	.L514
 10618              	.LVL683:
 10619              	.L532:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10620              		.loc 20 1876 19 view .LVU3019
 10621              	.LBE1678:
 10622              	.LBE1687:
 10623              	.LBE1693:
 10624              	.LBE1934:
 10625              	.LBB1935:
 10626              	.LBB1610:
 10627              	.LBB1603:
 10628              	.LBB1601:
 10629 0b12 F0EE667A 		vmov.f32	s15, s13
 10630              	.LVL684:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10631              		.loc 20 1876 19 view .LVU3020
 10632 0b16 9BE7     		b	.L497
 10633              	.LVL685:
 10634              	.L530:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 332


 10635              		.loc 20 1876 19 view .LVU3021
 10636              	.LBE1601:
 10637              	.LBE1603:
 10638              	.LBB1604:
 10639              	.LBB1595:
 10640 0b18 B0EE667A 		vmov.f32	s14, s13
 10641              	.LVL686:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10642              		.loc 20 1876 19 view .LVU3022
 10643 0b1c 9FED360A 		vldr.32	s0, .L576+92
 10644 0b20 84E7     		b	.L496
 10645              	.LVL687:
 10646              	.L473:
1876:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10647              		.loc 20 1876 19 view .LVU3023
 10648              	.LBE1595:
 10649              	.LBE1604:
 10650              	.LBE1610:
 10651              	.LBE1935:
 10652              	.LBB1936:
 10653              	.LBB1892:
 10654              	.LBB1881:
 116:delayline_reverse.h ****                 }
 10655              		.loc 19 116 21 view .LVU3024
 10656 0b22 AB60     		str	r3, [r5, #8]
 10657 0b24 2FE6     		b	.L475
 10658              	.LVL688:
 10659              	.L483:
 116:delayline_reverse.h ****                 }
 10660              		.loc 19 116 21 view .LVU3025
 10661              	.LBE1881:
 10662              	.LBE1892:
 10663              	.LBE1936:
 10664              	.LBB1937:
 10665              	.LBB1577:
 10666              	.LBB1573:
 10667 0b26 A260     		str	r2, [r4, #8]
 10668 0b28 0BE6     		b	.L485
 10669              	.LVL689:
 10670              	.L459:
 116:delayline_reverse.h ****                 }
 10671              		.loc 19 116 21 view .LVU3026
 10672              	.LBE1573:
 10673              	.LBE1577:
 10674              	.LBE1937:
 10675              	.LBE1951:
 10676              	.LBE1962:
 552:Veno-Echo.cpp **** 
 10677              		.loc 20 552 1 view .LVU3027
 10678 0b2a 13B0     		add	sp, sp, #76
 10679              		.cfi_remember_state
 10680              		.cfi_def_cfa_offset 92
 10681              		@ sp needed
 10682 0b2c BDEC0E8B 		vldm	sp!, {d8-d14}
 10683              		.cfi_restore 92
 10684              		.cfi_restore 93
 10685              		.cfi_restore 90
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 333


 10686              		.cfi_restore 91
 10687              		.cfi_restore 88
 10688              		.cfi_restore 89
 10689              		.cfi_restore 86
 10690              		.cfi_restore 87
 10691              		.cfi_restore 84
 10692              		.cfi_restore 85
 10693              		.cfi_restore 82
 10694              		.cfi_restore 83
 10695              		.cfi_restore 80
 10696              		.cfi_restore 81
 10697              		.cfi_def_cfa_offset 36
 10698 0b30 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10699              	.LVL690:
 10700              	.L565:
 10701              		.cfi_restore_state
 10702              	.LBB1963:
 10703              	.LBB1952:
 10704              	.LBB1938:
 10705              	.LBB1578:
 10706              	.LBB1574:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10707              		.loc 19 130 17 view .LVU3028
 10708 0b34 C2ED007A 		vstr.32	s15, [r2]
 10709 0b38 FFF7D6BA 		b	.L487
 10710              	.L490:
 145:delayline_reverse.h ****                     playinghead_ = false;
 10711              		.loc 19 145 21 view .LVU3029
 10712 0b3c 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10713              		.loc 19 144 21 view .LVU3030
 10714 0b3e 039C     		ldr	r4, [sp, #12]
 10715              	.LVL691:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10716              		.loc 19 144 21 view .LVU3031
 10717 0b40 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10718              		.loc 19 145 21 view .LVU3032
 10719 0b42 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 10720              		.loc 19 146 21 view .LVU3033
 10721 0b44 0170     		strb	r1, [r0]
 10722 0b46 FFF7CFBA 		b	.L487
 10723              	.LVL692:
 10724              	.L540:
 146:delayline_reverse.h ****                 }
 10725              		.loc 19 146 21 view .LVU3034
 10726              	.LBE1574:
 10727              	.LBE1578:
 10728              	.LBE1938:
 10729              	.LBB1939:
 10730              	.LBB1694:
 10731              	.LBB1688:
 10732              	.LBB1679:
1878:Veno-Echo.cpp ****     else
 10733              		.loc 20 1878 19 view .LVU3035
 10734 0b4a B0EE667A 		vmov.f32	s14, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 334


 10735              	.LVL693:
1878:Veno-Echo.cpp ****     else
 10736              		.loc 20 1878 19 view .LVU3036
 10737 0b4e 9FED2B0A 		vldr.32	s0, .L576+96
 10738 0b52 CDE6     		b	.L514
 10739              	.LVL694:
 10740              	.L531:
1878:Veno-Echo.cpp ****     else
 10741              		.loc 20 1878 19 view .LVU3037
 10742              	.LBE1679:
 10743              	.LBE1688:
 10744              	.LBE1694:
 10745              	.LBE1939:
 10746              	.LBB1940:
 10747              	.LBB1611:
 10748              	.LBB1605:
 10749              	.LBB1596:
 10750 0b54 B0EE667A 		vmov.f32	s14, s13
 10751              	.LVL695:
1878:Veno-Echo.cpp ****     else
 10752              		.loc 20 1878 19 view .LVU3038
 10753 0b58 9FED280A 		vldr.32	s0, .L576+96
 10754 0b5c 66E7     		b	.L496
 10755              	.LVL696:
 10756              	.L461:
1878:Veno-Echo.cpp ****     else
 10757              		.loc 20 1878 19 view .LVU3039
 10758              	.LBE1596:
 10759              	.LBE1605:
 10760              	.LBE1611:
 10761              	.LBE1940:
 10762              	.LBE1952:
 10763              	.LBE1963:
 316:Veno-Echo.cpp ****                 //Update_crossfeedback();
 10764              		.loc 20 316 13 is_stmt 1 view .LVU3040
 318:Veno-Echo.cpp ****             break;
 10765              		.loc 20 318 17 view .LVU3041
 318:Veno-Echo.cpp ****             break;
 10766              		.loc 20 318 35 is_stmt 0 view .LVU3042
 10767 0b5e FFF7FEFF 		bl	_Z18Update_filterXfadev
 10768              	.LVL697:
 319:Veno-Echo.cpp ****         }
 10769              		.loc 20 319 13 is_stmt 1 view .LVU3043
 10770 0b62 FFF77DBA 		b	.L460
 10771              	.L469:
 287:Veno-Echo.cpp ****                 Update_Buttons();
 10772              		.loc 20 287 13 view .LVU3044
 288:Veno-Echo.cpp ****                 GetModCV();
 10773              		.loc 20 288 17 view .LVU3045
 288:Veno-Echo.cpp ****                 GetModCV();
 10774              		.loc 20 288 31 is_stmt 0 view .LVU3046
 10775 0b66 FFF7FEFF 		bl	_Z14Update_Buttonsv
 10776              	.LVL698:
 289:Veno-Echo.cpp ****             break;
 10777              		.loc 20 289 17 is_stmt 1 view .LVU3047
 289:Veno-Echo.cpp ****             break;
 10778              		.loc 20 289 25 is_stmt 0 view .LVU3048
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 335


 10779 0b6a FFF7FEFF 		bl	_Z8GetModCVv
 10780              	.LVL699:
 290:Veno-Echo.cpp **** 
 10781              		.loc 20 290 13 is_stmt 1 view .LVU3049
 10782 0b6e FFF777BA 		b	.L460
 10783              	.L468:
 292:Veno-Echo.cpp ****                 Update_DelayTimeL();
 10784              		.loc 20 292 13 view .LVU3050
 293:Veno-Echo.cpp ****             break;
 10785              		.loc 20 293 17 view .LVU3051
 293:Veno-Echo.cpp ****             break;
 10786              		.loc 20 293 34 is_stmt 0 view .LVU3052
 10787 0b72 FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 10788              	.LVL700:
 294:Veno-Echo.cpp **** 
 10789              		.loc 20 294 13 is_stmt 1 view .LVU3053
 10790 0b76 FFF773BA 		b	.L460
 10791              	.L467:
 296:Veno-Echo.cpp ****                 Update_DelayTimeR();
 10792              		.loc 20 296 13 view .LVU3054
 297:Veno-Echo.cpp ****             break;
 10793              		.loc 20 297 17 view .LVU3055
 297:Veno-Echo.cpp ****             break;
 10794              		.loc 20 297 34 is_stmt 0 view .LVU3056
 10795 0b7a FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 10796              	.LVL701:
 298:Veno-Echo.cpp **** 
 10797              		.loc 20 298 13 is_stmt 1 view .LVU3057
 10798 0b7e FFF76FBA 		b	.L460
 10799              	.L466:
 300:Veno-Echo.cpp ****                 Update_feedbackL();
 10800              		.loc 20 300 13 view .LVU3058
 301:Veno-Echo.cpp ****             break;
 10801              		.loc 20 301 17 view .LVU3059
 301:Veno-Echo.cpp ****             break;
 10802              		.loc 20 301 33 is_stmt 0 view .LVU3060
 10803 0b82 FFF7FEFF 		bl	_Z16Update_feedbackLv
 10804              	.LVL702:
 302:Veno-Echo.cpp **** 
 10805              		.loc 20 302 13 is_stmt 1 view .LVU3061
 10806 0b86 FFF76BBA 		b	.L460
 10807              	.L465:
 304:Veno-Echo.cpp ****                 Update_feedbackR();
 10808              		.loc 20 304 13 view .LVU3062
 305:Veno-Echo.cpp ****             break;
 10809              		.loc 20 305 17 view .LVU3063
 305:Veno-Echo.cpp ****             break;
 10810              		.loc 20 305 33 is_stmt 0 view .LVU3064
 10811 0b8a FFF7FEFF 		bl	_Z16Update_feedbackRv
 10812              	.LVL703:
 306:Veno-Echo.cpp **** 
 10813              		.loc 20 306 13 is_stmt 1 view .LVU3065
 10814 0b8e FFF767BA 		b	.L460
 10815              	.L464:
 308:Veno-Echo.cpp ****                 Update_drywet();
 10816              		.loc 20 308 13 view .LVU3066
 309:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 336


 10817              		.loc 20 309 17 view .LVU3067
 309:Veno-Echo.cpp ****             break;
 10818              		.loc 20 309 30 is_stmt 0 view .LVU3068
 10819 0b92 FFF7FEFF 		bl	_Z13Update_drywetv
 10820              	.LVL704:
 310:Veno-Echo.cpp **** 
 10821              		.loc 20 310 13 is_stmt 1 view .LVU3069
 10822 0b96 FFF763BA 		b	.L460
 10823              	.L577:
 10824 0b9a 00BF     		.align	2
 10825              	.L576:
 10826 0b9c 00000000 		.word	.LANCHOR82
 10827 0ba0 CDCCCC3D 		.word	1036831949
 10828 0ba4 00000000 		.word	.LANCHOR48
 10829 0ba8 00000000 		.word	.LANCHOR49
 10830 0bac 00000000 		.word	.LANCHOR120
 10831 0bb0 00000000 		.word	.LANCHOR121
 10832 0bb4 00000000 		.word	.LANCHOR36
 10833 0bb8 00000000 		.word	.LANCHOR37
 10834 0bbc 00000000 		.word	.LANCHOR118
 10835 0bc0 00000000 		.word	.LANCHOR119
 10836 0bc4 00000000 		.word	.LANCHOR124
 10837 0bc8 00000000 		.word	.LANCHOR125
 10838 0bcc 00000000 		.word	0
 10839 0bd0 00000000 		.word	.LANCHOR46
 10840 0bd4 00000000 		.word	.LANCHOR47
 10841 0bd8 00000000 		.word	.LANCHOR116
 10842 0bdc 00000000 		.word	.LANCHOR117
 10843 0be0 00000000 		.word	.LANCHOR34
 10844 0be4 00000000 		.word	.LANCHOR35
 10845 0be8 00000000 		.word	.LANCHOR114
 10846 0bec 00000000 		.word	.LANCHOR115
 10847 0bf0 00000000 		.word	.LANCHOR122
 10848 0bf4 00000000 		.word	.LANCHOR123
 10849 0bf8 CDCC4C3E 		.word	1045220557
 10850 0bfc CDCC4CBE 		.word	3192704205
 10851              		.cfi_endproc
 10852              	.LFE4309:
 10854              		.section	.text._Z9HardLimitff,"ax",%progbits
 10855              		.align	1
 10856              		.p2align 2,,3
 10857              		.global	_Z9HardLimitff
 10858              		.syntax unified
 10859              		.thumb
 10860              		.thumb_func
 10861              		.fpu fpv5-d16
 10863              	_Z9HardLimitff:
 10864              	.LVL705:
 10865              	.LFB4334:
1873:Veno-Echo.cpp ****     float returnval{};
 10866              		.loc 20 1873 1 view -0
 10867              		.cfi_startproc
 10868              		@ args = 0, pretend = 0, frame = 0
 10869              		@ frame_needed = 0, uses_anonymous_args = 0
 10870              		@ link register save eliminated.
1874:Veno-Echo.cpp ****     if (input > limit)
 10871              		.loc 20 1874 5 view .LVU3071
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 337


1875:Veno-Echo.cpp ****         returnval = limit;
 10872              		.loc 20 1875 5 view .LVU3072
 10873 0000 B4EEE00A 		vcmpe.f32	s0, s1
 10874 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10875 0008 07DC     		bgt	.L579
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10876              		.loc 20 1877 10 view .LVU3073
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10877              		.loc 20 1877 28 is_stmt 0 view .LVU3074
 10878 000a F1EE600A 		vneg.f32	s1, s1
 10879              	.LVL706:
1877:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10880              		.loc 20 1877 10 view .LVU3075
 10881 000e F4EEC00A 		vcmpe.f32	s1, s0
 10882 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1880:Veno-Echo.cpp **** 
 10883              		.loc 20 1880 19 view .LVU3076
 10884 0016 70FE800A 		vselgt.f32	s1, s1, s0
 10885              	.L579:
 10886              	.LVL707:
1882:Veno-Echo.cpp **** }
 10887              		.loc 20 1882 5 is_stmt 1 view .LVU3077
1883:Veno-Echo.cpp **** 
 10888              		.loc 20 1883 1 is_stmt 0 view .LVU3078
 10889 001a B0EE600A 		vmov.f32	s0, s1
 10890              	.LVL708:
1883:Veno-Echo.cpp **** 
 10891              		.loc 20 1883 1 view .LVU3079
 10892 001e 7047     		bx	lr
 10893              		.cfi_endproc
 10894              	.LFE4334:
 10896              		.section	.text._Z10PotCVComboff,"ax",%progbits
 10897              		.align	1
 10898              		.p2align 2,,3
 10899              		.global	_Z10PotCVComboff
 10900              		.syntax unified
 10901              		.thumb
 10902              		.thumb_func
 10903              		.fpu fpv5-d16
 10905              	_Z10PotCVComboff:
 10906              	.LVL709:
 10907              	.LFB4335:
1886:Veno-Echo.cpp ****     float output{};
 10908              		.loc 20 1886 1 is_stmt 1 view -0
 10909              		.cfi_startproc
 10910              		@ args = 0, pretend = 0, frame = 0
 10911              		@ frame_needed = 0, uses_anonymous_args = 0
 10912              		@ link register save eliminated.
1887:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10913              		.loc 20 1887 5 view .LVU3081
1888:Veno-Echo.cpp **** 
 10914              		.loc 20 1888 5 view .LVU3082
1888:Veno-Echo.cpp **** 
 10915              		.loc 20 1888 39 is_stmt 0 view .LVU3083
 10916 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1888:Veno-Echo.cpp **** 
 10917              		.loc 20 1888 49 view .LVU3084
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 338


 10918 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1888:Veno-Echo.cpp **** 
 10919              		.loc 20 1888 12 view .LVU3085
 10920 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1888:Veno-Echo.cpp **** 
 10921              		.loc 20 1888 39 view .LVU3086
 10922 000c 77EEE00A 		vsub.f32	s1, s15, s1
 10923              	.LVL710:
1888:Veno-Echo.cpp **** 
 10924              		.loc 20 1888 49 view .LVU3087
 10925 0010 70EEE60A 		vsub.f32	s1, s1, s13
1888:Veno-Echo.cpp **** 
 10926              		.loc 20 1888 12 view .LVU3088
 10927 0014 A0EE870A 		vfma.f32	s0, s1, s14
 10928              	.LVL711:
1890:Veno-Echo.cpp ****     {
 10929              		.loc 20 1890 5 is_stmt 1 view .LVU3089
 10930 0018 B5EEC00A 		vcmpe.f32	s0, #0
 10931 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10932 0020 06D4     		bmi	.L585
1895:Veno-Echo.cpp ****     {
 10933              		.loc 20 1895 5 view .LVU3090
1897:Veno-Echo.cpp ****     }
 10934              		.loc 20 1897 16 is_stmt 0 view .LVU3091
 10935 0022 B4EE670A 		vcmp.f32	s0, s15
 10936 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10937 002a 37FE800A 		vselgt.f32	s0, s15, s0
 10938              	.LVL712:
1897:Veno-Echo.cpp ****     }
 10939              		.loc 20 1897 16 view .LVU3092
 10940 002e 7047     		bx	lr
 10941              	.LVL713:
 10942              	.L585:
1892:Veno-Echo.cpp ****     }
 10943              		.loc 20 1892 16 view .LVU3093
 10944 0030 9FED010A 		vldr.32	s0, .L587
 10945              	.LVL714:
1900:Veno-Echo.cpp **** }
 10946              		.loc 20 1900 5 is_stmt 1 view .LVU3094
1901:Veno-Echo.cpp **** 
 10947              		.loc 20 1901 1 is_stmt 0 view .LVU3095
 10948 0034 7047     		bx	lr
 10949              	.L588:
 10950 0036 00BF     		.align	2
 10951              	.L587:
 10952 0038 00000000 		.word	0
 10953              		.cfi_endproc
 10954              	.LFE4335:
 10956              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 10957              		.align	1
 10958              		.p2align 2,,3
 10959              		.global	_Z16checkPickupStateffbb
 10960              		.syntax unified
 10961              		.thumb
 10962              		.thumb_func
 10963              		.fpu fpv5-d16
 10965              	_Z16checkPickupStateffbb:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 339


 10966              	.LVL715:
 10967              	.LFB4336:
1905:Veno-Echo.cpp ****     bool retval{};
 10968              		.loc 20 1905 1 is_stmt 1 view -0
 10969              		.cfi_startproc
 10970              		@ args = 0, pretend = 0, frame = 0
 10971              		@ frame_needed = 0, uses_anonymous_args = 0
 10972              		@ link register save eliminated.
1906:Veno-Echo.cpp ****     
 10973              		.loc 20 1906 5 view .LVU3097
1908:Veno-Echo.cpp ****     {
 10974              		.loc 20 1908 5 view .LVU3098
 10975 0000 69B1     		cbz	r1, .L590
1910:Veno-Echo.cpp ****         {
 10976              		.loc 20 1910 9 view .LVU3099
 10977              	.LVL716:
 10978              	.LBB1964:
 10979              	.LBI1964:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 10980              		.loc 21 75 3 view .LVU3100
 10981              	.LBB1965:
 10982              		.loc 21 76 5 view .LVU3101
 10983              		.loc 21 76 5 is_stmt 0 view .LVU3102
 10984              	.LBE1965:
 10985              	.LBE1964:
1910:Veno-Echo.cpp ****         {
 10986              		.loc 20 1910 15 view .LVU3103
 10987 0002 70EE600A 		vsub.f32	s1, s0, s1
 10988              	.LVL717:
1910:Veno-Echo.cpp ****         {
 10989              		.loc 20 1910 9 view .LVU3104
 10990 0006 DFED0D7A 		vldr.32	s15, .L593
 10991              	.LBB1967:
 10992              	.LBB1966:
 10993              		.loc 21 76 31 view .LVU3105
 10994 000a B0EEE00A 		vabs.f32	s0, s1
 10995              	.LVL718:
 10996              		.loc 21 76 31 view .LVU3106
 10997              	.LBE1966:
 10998              	.LBE1967:
1910:Veno-Echo.cpp ****         {
 10999              		.loc 20 1910 9 view .LVU3107
 11000 000e B4EEE70A 		vcmpe.f32	s0, s15
 11001 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11002 0016 D4BF     		ite	le
 11003 0018 0120     		movle	r0, #1
 11004              	.LVL719:
1910:Veno-Echo.cpp ****         {
 11005              		.loc 20 1910 9 view .LVU3108
 11006 001a 0020     		movgt	r0, #0
 11007 001c 7047     		bx	lr
 11008              	.LVL720:
 11009              	.L590:
1922:Veno-Echo.cpp ****     {
 11010              		.loc 20 1922 5 is_stmt 1 view .LVU3109
 11011 001e 60B9     		cbnz	r0, .L591
1924:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 340


 11012              		.loc 20 1924 9 view .LVU3110
 11013              	.LVL721:
 11014              	.LBB1968:
 11015              	.LBI1968:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11016              		.loc 21 75 3 view .LVU3111
 11017              	.LBB1969:
 11018              		.loc 21 76 5 view .LVU3112
 11019              		.loc 21 76 5 is_stmt 0 view .LVU3113
 11020              	.LBE1969:
 11021              	.LBE1968:
1924:Veno-Echo.cpp ****         {
 11022              		.loc 20 1924 15 view .LVU3114
 11023 0020 30EE600A 		vsub.f32	s0, s0, s1
 11024              	.LVL722:
1924:Veno-Echo.cpp ****         {
 11025              		.loc 20 1924 9 view .LVU3115
 11026 0024 DFED057A 		vldr.32	s15, .L593
 11027              	.LBB1971:
 11028              	.LBB1970:
 11029              		.loc 21 76 31 view .LVU3116
 11030 0028 B0EEC00A 		vabs.f32	s0, s0
 11031              	.LBE1970:
 11032              	.LBE1971:
1924:Veno-Echo.cpp ****         {
 11033              		.loc 20 1924 9 view .LVU3117
 11034 002c B4EEE70A 		vcmpe.f32	s0, s15
 11035 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11036 0034 CCBF     		ite	gt
 11037 0036 0120     		movgt	r0, #1
 11038              	.LVL723:
1924:Veno-Echo.cpp ****         {
 11039              		.loc 20 1924 9 view .LVU3118
 11040 0038 0020     		movle	r0, #0
 11041              	.L591:
 11042              	.LVL724:
1941:Veno-Echo.cpp **** 
 11043              		.loc 20 1941 5 is_stmt 1 view .LVU3119
1943:Veno-Echo.cpp **** 
 11044              		.loc 20 1943 1 is_stmt 0 view .LVU3120
 11045 003a 7047     		bx	lr
 11046              	.L594:
 11047              		.align	2
 11048              	.L593:
 11049 003c 0AD7A33B 		.word	1000593162
 11050              		.cfi_endproc
 11051              	.LFE4336:
 11053              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 11054              		.align	1
 11055              		.p2align 2,,3
 11056              		.global	_Z20checkPickupState_altff11pickupStateb
 11057              		.syntax unified
 11058              		.thumb
 11059              		.thumb_func
 11060              		.fpu fpv5-d16
 11062              	_Z20checkPickupState_altff11pickupStateb:
 11063              	.LVL725:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 341


 11064              	.LFB4337:
1947:Veno-Echo.cpp ****     pickupState retval{};
 11065              		.loc 20 1947 1 is_stmt 1 view -0
 11066              		.cfi_startproc
 11067              		@ args = 0, pretend = 0, frame = 0
 11068              		@ frame_needed = 0, uses_anonymous_args = 0
 11069              		@ link register save eliminated.
1948:Veno-Echo.cpp **** 
 11070              		.loc 20 1948 5 view .LVU3122
1950:Veno-Echo.cpp ****     {
 11071              		.loc 20 1950 5 view .LVU3123
 11072 0000 A1B1     		cbz	r1, .L596
1952:Veno-Echo.cpp ****         {
 11073              		.loc 20 1952 9 view .LVU3124
1952:Veno-Echo.cpp ****         {
 11074              		.loc 20 1952 31 is_stmt 0 view .LVU3125
 11075 0002 DFED1A7A 		vldr.32	s15, .L613
 11076 0006 30EEE77A 		vsub.f32	s14, s1, s15
1952:Veno-Echo.cpp ****         {
 11077              		.loc 20 1952 9 view .LVU3126
 11078 000a B4EEC07A 		vcmpe.f32	s14, s0
 11079 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11080 0012 01DD     		ble	.L611
 11081 0014 0020     		movs	r0, #0
 11082              	.LVL726:
1952:Veno-Echo.cpp ****         {
 11083              		.loc 20 1952 9 view .LVU3127
 11084 0016 7047     		bx	lr
 11085              	.LVL727:
 11086              	.L611:
1957:Veno-Echo.cpp ****         {
 11087              		.loc 20 1957 14 is_stmt 1 view .LVU3128
1957:Veno-Echo.cpp ****         {
 11088              		.loc 20 1957 36 is_stmt 0 view .LVU3129
 11089 0018 70EEA70A 		vadd.f32	s1, s1, s15
 11090              	.LVL728:
1957:Veno-Echo.cpp ****         {
 11091              		.loc 20 1957 14 view .LVU3130
 11092 001c F4EEC00A 		vcmpe.f32	s1, s0
 11093 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1964:Veno-Echo.cpp ****         }
 11094              		.loc 20 1964 20 view .LVU3131
 11095 0024 4CBF     		ite	mi
 11096 0026 0120     		movmi	r0, #1
 11097              	.LVL729:
1964:Veno-Echo.cpp ****         }
 11098              		.loc 20 1964 20 view .LVU3132
 11099 0028 0220     		movpl	r0, #2
 11100 002a 7047     		bx	lr
 11101              	.LVL730:
 11102              	.L596:
1970:Veno-Echo.cpp ****         {
 11103              		.loc 20 1970 9 is_stmt 1 view .LVU3133
 11104 002c 0128     		cmp	r0, #1
 11105 002e 04D0     		beq	.L599
 11106 0030 0228     		cmp	r0, #2
 11107 0032 01D0     		beq	.L597
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 342


 11108 0034 68B1     		cbz	r0, .L612
 11109 0036 0846     		mov	r0, r1
 11110              	.LVL731:
 11111              	.L597:
1991:Veno-Echo.cpp **** }
 11112              		.loc 20 1991 5 view .LVU3134
1992:Veno-Echo.cpp **** 
 11113              		.loc 20 1992 1 is_stmt 0 view .LVU3135
 11114 0038 7047     		bx	lr
 11115              	.LVL732:
 11116              	.L599:
1979:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 11117              		.loc 20 1979 13 is_stmt 1 view .LVU3136
1980:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11118              		.loc 20 1980 13 view .LVU3137
1980:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11119              		.loc 20 1980 35 is_stmt 0 view .LVU3138
 11120 003a DFED0C7A 		vldr.32	s15, .L613
 11121 003e 70EEA70A 		vadd.f32	s1, s1, s15
 11122              	.LVL733:
1980:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11123              		.loc 20 1980 13 view .LVU3139
 11124 0042 F4EEC00A 		vcmpe.f32	s1, s0
 11125 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11126 004a CCBF     		ite	gt
 11127 004c 0220     		movgt	r0, #2
 11128              	.LVL734:
1980:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11129              		.loc 20 1980 13 view .LVU3140
 11130 004e 0120     		movle	r0, #1
 11131 0050 7047     		bx	lr
 11132              	.LVL735:
 11133              	.L612:
1972:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 11134              		.loc 20 1972 13 is_stmt 1 view .LVU3141
1973:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11135              		.loc 20 1973 13 view .LVU3142
1973:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11136              		.loc 20 1973 35 is_stmt 0 view .LVU3143
 11137 0052 DFED067A 		vldr.32	s15, .L613
 11138 0056 70EEE70A 		vsub.f32	s1, s1, s15
 11139              	.LVL736:
1973:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11140              		.loc 20 1973 13 view .LVU3144
 11141 005a F4EEC00A 		vcmpe.f32	s1, s0
 11142 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11143 0062 4CBF     		ite	mi
 11144 0064 0220     		movmi	r0, #2
 11145              	.LVL737:
1973:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11146              		.loc 20 1973 13 view .LVU3145
 11147 0066 0020     		movpl	r0, #0
 11148 0068 7047     		bx	lr
 11149              	.L614:
 11150 006a 00BF     		.align	2
 11151              	.L613:
 11152 006c 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 343


 11153              		.cfi_endproc
 11154              	.LFE4337:
 11156              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 11157              		.align	1
 11158              		.p2align 2,,3
 11159              		.global	_Z11GetTapRatio9TapRatios
 11160              		.syntax unified
 11161              		.thumb
 11162              		.thumb_func
 11163              		.fpu fpv5-d16
 11165              	_Z11GetTapRatio9TapRatios:
 11166              	.LVL738:
 11167              	.LFB4338:
1995:Veno-Echo.cpp **** float retVal{};
 11168              		.loc 20 1995 1 is_stmt 1 view -0
 11169              		.cfi_startproc
 11170              		@ args = 0, pretend = 0, frame = 0
 11171              		@ frame_needed = 0, uses_anonymous_args = 0
 11172              		@ link register save eliminated.
1996:Veno-Echo.cpp ****     switch(ratio)
 11173              		.loc 20 1996 1 view .LVU3147
1997:Veno-Echo.cpp ****     {
 11174              		.loc 20 1997 5 view .LVU3148
 11175 0000 0138     		subs	r0, r0, #1
 11176              	.LVL739:
1997:Veno-Echo.cpp ****     {
 11177              		.loc 20 1997 5 is_stmt 0 view .LVU3149
 11178 0002 C0B2     		uxtb	r0, r0
 11179 0004 0228     		cmp	r0, #2
 11180 0006 05D8     		bhi	.L617
 11181 0008 044B     		ldr	r3, .L618
 11182 000a 03EB8000 		add	r0, r3, r0, lsl #2
 11183 000e 90ED000A 		vldr.32	s0, [r0]
 11184 0012 7047     		bx	lr
 11185              	.L617:
1995:Veno-Echo.cpp **** float retVal{};
 11186              		.loc 20 1995 1 view .LVU3150
 11187 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 11188              	.LVL740:
 11189              		.loc 20 2020 1 is_stmt 1 view .LVU3151
2021:Veno-Echo.cpp **** }
 11190              		.loc 20 2021 1 is_stmt 0 view .LVU3152
 11191 0018 7047     		bx	lr
 11192              	.L619:
 11193 001a 00BF     		.align	2
 11194              	.L618:
 11195 001c 00000000 		.word	.LANCHOR25
 11196              		.cfi_endproc
 11197              	.LFE4338:
 11199              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 11200              		.align	1
 11201              		.p2align 2,,3
 11202              		.syntax unified
 11203              		.thumb
 11204              		.thumb_func
 11205              		.fpu fpv5-d16
 11207              	_GLOBAL__sub_I_delMemsL:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 344


 11208              	.LFB4917:
 11209              		.loc 20 2021 1 is_stmt 1 view -0
 11210              		.cfi_startproc
 11211              		@ args = 0, pretend = 0, frame = 0
 11212              		@ frame_needed = 0, uses_anonymous_args = 0
 11213              	.LBB2128:
 11214              	.LBI2128:
 11215              		.loc 20 2021 1 view .LVU3154
 11216              	.LVL741:
 11217              	.LBB2129:
 11218              	.LBB2130:
 11219              	.LBI2130:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 11220              		.loc 2 21 5 view .LVU3155
 11221              	.LBB2131:
 11222              	.LBB2132:
 11223              	.LBI2132:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11224              		.loc 6 36 5 view .LVU3156
 11225              	.LBE2132:
 11226              	.LBE2131:
 11227              	.LBE2130:
 11228              	.LBE2129:
 11229              	.LBE2128:
 11230              		.loc 20 2021 1 is_stmt 0 view .LVU3157
 11231 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11232              		.cfi_def_cfa_offset 24
 11233              		.cfi_offset 4, -24
 11234              		.cfi_offset 5, -20
 11235              		.cfi_offset 6, -16
 11236              		.cfi_offset 7, -12
 11237              		.cfi_offset 8, -8
 11238              		.cfi_offset 14, -4
 11239              	.LBB2251:
 11240              	.LBB2247:
 11241              	.LBB2147:
 11242              	.LBB2145:
 11243              	.LBB2137:
 11244              	.LBB2133:
 11245              	.LBB2134:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11246              		.loc 6 36 35 view .LVU3158
 11247 0004 9448     		ldr	r0, .L622
 11248 0006 0026     		movs	r6, #0
 11249              	.LBE2134:
 11250              	.LBE2133:
 11251              	.LBE2137:
 11252              	.LBE2145:
 11253              	.LBE2147:
 11254              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 345


   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 11255              		.loc 26 33 18 view .LVU3159
 11256 0008 944C     		ldr	r4, .L622+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11257              		.loc 20 40 12 view .LVU3160
 11258 000a 954D     		ldr	r5, .L622+8
 11259              		.loc 26 33 18 view .LVU3161
 11260 000c 2246     		mov	r2, r4
 11261 000e 9549     		ldr	r1, .L622+12
 11262              	.LBB2148:
 11263              	.LBB2146:
 11264              	.LBB2138:
 11265              	.LBB2136:
 11266              	.LBB2135:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11267              		.loc 6 36 35 view .LVU3162
 11268 0010 4661     		str	r6, [r0, #20]
 11269              	.LVL742:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11270              		.loc 6 36 35 view .LVU3163
 11271              	.LBE2135:
 11272              	.LBE2136:
 11273              	.LBE2138:
 11274              	.LBB2139:
 11275              	.LBI2139:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11276              		.loc 5 84 5 is_stmt 1 view .LVU3164
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11277              		.loc 5 84 5 is_stmt 0 view .LVU3165
 11278              	.LBE2139:
 11279              	.LBB2140:
 11280              	.LBI2140:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 346


 11281              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 347


  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 11282              		.loc 27 83 5 is_stmt 1 view .LVU3166
 11283              	.LBB2141:
 11284              	.LBB2142:
 11285              		.loc 27 83 33 is_stmt 0 view .LVU3167
 11286 0012 0662     		str	r6, [r0, #32]
 11287              	.LVL743:
 11288              		.loc 27 83 33 view .LVU3168
 11289              	.LBE2142:
 11290              	.LBE2141:
 11291              	.LBE2140:
 11292              	.LBB2143:
 11293              	.LBI2143:
  40:../libdaisy/src/hid/usb.h **** 
 11294              		.loc 4 40 5 is_stmt 1 view .LVU3169
  40:../libdaisy/src/hid/usb.h **** 
 11295              		.loc 4 40 5 is_stmt 0 view .LVU3170
 11296              	.LBE2143:
 11297              	.LBB2144:
 11298              	.LBI2144:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11299              		.loc 3 56 5 is_stmt 1 view .LVU3171
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11300              		.loc 3 56 5 is_stmt 0 view .LVU3172
 11301              	.LBE2144:
 11302              	.LBE2146:
 11303              	.LBE2148:
 11304              		.loc 26 33 18 view .LVU3173
 11305 0014 FFF7FEFF 		bl	__aeabi_atexit
 11306              	.LVL744:
 11307              	.LBB2149:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 348


 11308              	.LBI2149:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11309              		.loc 9 21 5 is_stmt 1 view .LVU3174
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11310              		.loc 9 21 5 is_stmt 0 view .LVU3175
 11311              	.LBE2149:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11312              		.loc 20 40 12 view .LVU3176
 11313 0018 2246     		mov	r2, r4
 11314 001a 2946     		mov	r1, r5
 11315 001c 9248     		ldr	r0, .L622+16
 11316 001e FFF7FEFF 		bl	__aeabi_atexit
 11317              	.LVL745:
 11318              	.LBB2150:
 11319              	.LBI2150:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11320              		.loc 9 21 5 is_stmt 1 view .LVU3177
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11321              		.loc 9 21 5 is_stmt 0 view .LVU3178
 11322              	.LBE2150:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 11323              		.loc 20 41 12 view .LVU3179
 11324 0022 2246     		mov	r2, r4
 11325 0024 2946     		mov	r1, r5
 11326 0026 9148     		ldr	r0, .L622+20
 11327 0028 FFF7FEFF 		bl	__aeabi_atexit
 11328              	.LVL746:
 11329              	.LBB2151:
 11330              	.LBI2151:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11331              		.loc 9 21 5 is_stmt 1 view .LVU3180
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11332              		.loc 9 21 5 is_stmt 0 view .LVU3181
 11333              	.LBE2151:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 11334              		.loc 20 42 12 view .LVU3182
 11335 002c 2246     		mov	r2, r4
 11336 002e 2946     		mov	r1, r5
 11337 0030 8F48     		ldr	r0, .L622+24
 11338 0032 FFF7FEFF 		bl	__aeabi_atexit
 11339              	.LVL747:
 11340              	.LBB2152:
 11341              	.LBI2152:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11342              		.loc 9 21 5 is_stmt 1 view .LVU3183
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11343              		.loc 9 21 5 is_stmt 0 view .LVU3184
 11344              	.LBE2152:
  43:Veno-Echo.cpp **** 
 11345              		.loc 20 43 12 view .LVU3185
 11346 0036 2246     		mov	r2, r4
 11347 0038 2946     		mov	r1, r5
 11348 003a 8E48     		ldr	r0, .L622+28
 11349 003c FFF7FEFF 		bl	__aeabi_atexit
 11350              	.LVL748:
 11351              	.LBB2153:
 11352              	.LBI2153:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 349


  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11353              		.loc 9 21 5 is_stmt 1 view .LVU3186
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11354              		.loc 9 21 5 is_stmt 0 view .LVU3187
 11355              	.LBE2153:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 11356              		.loc 20 45 12 view .LVU3188
 11357 0040 2246     		mov	r2, r4
 11358 0042 2946     		mov	r1, r5
 11359 0044 8C48     		ldr	r0, .L622+32
 11360 0046 FFF7FEFF 		bl	__aeabi_atexit
 11361              	.LVL749:
 11362              	.LBB2154:
 11363              	.LBI2154:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11364              		.loc 9 21 5 is_stmt 1 view .LVU3189
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11365              		.loc 9 21 5 is_stmt 0 view .LVU3190
 11366              	.LBE2154:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 11367              		.loc 20 46 12 view .LVU3191
 11368 004a 2246     		mov	r2, r4
 11369 004c 2946     		mov	r1, r5
 11370 004e 8B48     		ldr	r0, .L622+36
 11371 0050 FFF7FEFF 		bl	__aeabi_atexit
 11372              	.LVL750:
 11373              	.LBB2155:
 11374              	.LBI2155:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11375              		.loc 9 21 5 is_stmt 1 view .LVU3192
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11376              		.loc 9 21 5 is_stmt 0 view .LVU3193
 11377              	.LBE2155:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 11378              		.loc 20 47 12 view .LVU3194
 11379 0054 2246     		mov	r2, r4
 11380 0056 2946     		mov	r1, r5
 11381 0058 8948     		ldr	r0, .L622+40
 11382 005a FFF7FEFF 		bl	__aeabi_atexit
 11383              	.LVL751:
 11384              	.LBB2156:
 11385              	.LBI2156:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11386              		.loc 9 21 5 is_stmt 1 view .LVU3195
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11387              		.loc 9 21 5 is_stmt 0 view .LVU3196
 11388              	.LBE2156:
  48:Veno-Echo.cpp **** 
 11389              		.loc 20 48 12 view .LVU3197
 11390 005e 2246     		mov	r2, r4
 11391 0060 2946     		mov	r1, r5
 11392 0062 8848     		ldr	r0, .L622+44
 11393 0064 FFF7FEFF 		bl	__aeabi_atexit
 11394              	.LVL752:
 11395              	.LBB2157:
 11396              	.LBI2157:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 350


 11397              		.loc 8 15 5 is_stmt 1 view .LVU3198
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11398              		.loc 8 15 5 is_stmt 0 view .LVU3199
 11399              	.LBE2157:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11400              		.loc 20 50 19 view .LVU3200
 11401 0068 2246     		mov	r2, r4
 11402 006a 8749     		ldr	r1, .L622+48
 11403              	.LBB2158:
 11404              	.LBB2159:
 11405              	.LBB2160:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11406              		.loc 12 45 13 view .LVU3201
 11407 006c 0025     		movs	r5, #0
 11408              	.LBE2160:
 11409              	.LBE2159:
 11410              	.LBE2158:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11411              		.loc 20 50 19 view .LVU3202
 11412 006e 8748     		ldr	r0, .L622+52
 11413 0070 FFF7FEFF 		bl	__aeabi_atexit
 11414              	.LVL753:
 11415              	.LBB2165:
 11416              	.LBI2158:
  43:envFollow.h   ****     {
 11417              		.loc 12 43 5 is_stmt 1 view .LVU3203
 11418              	.LBB2163:
 11419              	.LBB2161:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11420              		.loc 12 45 9 view .LVU3204
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11421              		.loc 12 48 11 is_stmt 0 view .LVU3205
 11422 0074 864F     		ldr	r7, .L622+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11423              		.loc 12 45 13 view .LVU3206
 11424 0076 8748     		ldr	r0, .L622+60
 11425              	.LBE2161:
 11426              	.LBE2163:
 11427              	.LBE2165:
  51:Veno-Echo.cpp **** 
 11428              		.loc 20 51 18 view .LVU3207
 11429 0078 2246     		mov	r2, r4
 11430 007a 8749     		ldr	r1, .L622+64
 11431              	.LBB2166:
 11432              	.LBB2164:
 11433              	.LBB2162:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11434              		.loc 12 45 13 view .LVU3208
 11435 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11436              		.loc 12 46 9 is_stmt 1 view .LVU3209
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11437              		.loc 12 46 20 is_stmt 0 view .LVU3210
 11438 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11439              		.loc 12 47 9 is_stmt 1 view .LVU3211
  47:envFollow.h   ****         w = 0.0001f;        //weighting
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 351


 11440              		.loc 12 47 17 is_stmt 0 view .LVU3212
 11441 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11442              		.loc 12 48 9 is_stmt 1 view .LVU3213
  50:envFollow.h   ****     }  
 11443              		.loc 12 50 21 is_stmt 0 view .LVU3214
 11444 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11445              		.loc 12 48 11 view .LVU3215
 11446 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11447              		.loc 12 49 9 is_stmt 1 view .LVU3216
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11448              		.loc 12 49 15 is_stmt 0 view .LVU3217
 11449 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11450              		.loc 12 50 9 is_stmt 1 view .LVU3218
 11451              	.LVL754:
  50:envFollow.h   ****     }  
 11452              		.loc 12 50 9 is_stmt 0 view .LVU3219
 11453              	.LBE2162:
 11454              	.LBE2164:
 11455              	.LBE2166:
  51:Veno-Echo.cpp **** 
 11456              		.loc 20 51 18 view .LVU3220
 11457 0088 FFF7FEFF 		bl	__aeabi_atexit
 11458              	.LVL755:
 11459              	.LBB2167:
 11460              	.LBI2167:
  43:envFollow.h   ****     {
 11461              		.loc 12 43 5 is_stmt 1 view .LVU3221
 11462              	.LBB2168:
 11463              	.LBB2169:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11464              		.loc 12 45 9 view .LVU3222
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11465              		.loc 12 45 13 is_stmt 0 view .LVU3223
 11466 008c 8348     		ldr	r0, .L622+68
 11467              	.LBE2169:
 11468              	.LBE2168:
 11469              	.LBE2167:
  53:Veno-Echo.cpp **** 
 11470              		.loc 20 53 16 view .LVU3224
 11471 008e DFF8D082 		ldr	r8, .L622+264
  51:Veno-Echo.cpp **** 
 11472              		.loc 20 51 27 view .LVU3225
 11473 0092 2246     		mov	r2, r4
 11474 0094 8049     		ldr	r1, .L622+64
 11475              	.LBB2172:
 11476              	.LBB2171:
 11477              	.LBB2170:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11478              		.loc 12 45 13 view .LVU3226
 11479 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11480              		.loc 12 46 9 is_stmt 1 view .LVU3227
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 352


 11481              		.loc 12 46 20 is_stmt 0 view .LVU3228
 11482 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11483              		.loc 12 47 9 is_stmt 1 view .LVU3229
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11484              		.loc 12 47 17 is_stmt 0 view .LVU3230
 11485 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11486              		.loc 12 48 9 is_stmt 1 view .LVU3231
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11487              		.loc 12 48 11 is_stmt 0 view .LVU3232
 11488 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11489              		.loc 12 49 9 is_stmt 1 view .LVU3233
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11490              		.loc 12 49 15 is_stmt 0 view .LVU3234
 11491 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11492              		.loc 12 50 9 is_stmt 1 view .LVU3235
  50:envFollow.h   ****     }  
 11493              		.loc 12 50 21 is_stmt 0 view .LVU3236
 11494 00a0 8560     		str	r5, [r0, #8]	@ float
 11495              	.LVL756:
  50:envFollow.h   ****     }  
 11496              		.loc 12 50 21 view .LVU3237
 11497              	.LBE2170:
 11498              	.LBE2171:
 11499              	.LBE2172:
  51:Veno-Echo.cpp **** 
 11500              		.loc 20 51 27 view .LVU3238
 11501 00a2 FFF7FEFF 		bl	__aeabi_atexit
 11502              	.LVL757:
 11503              	.LBB2173:
 11504              	.LBI2173:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11505              		.loc 11 14 5 is_stmt 1 view .LVU3239
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11506              		.loc 11 14 5 is_stmt 0 view .LVU3240
 11507              	.LBE2173:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11508              		.loc 20 56 76 view .LVU3241
 11509 00a6 7E4F     		ldr	r7, .L622+72
  53:Veno-Echo.cpp **** 
 11510              		.loc 20 53 16 view .LVU3242
 11511 00a8 2246     		mov	r2, r4
 11512 00aa 4146     		mov	r1, r8
 11513 00ac 7D48     		ldr	r0, .L622+76
 11514 00ae FFF7FEFF 		bl	__aeabi_atexit
 11515              	.LVL758:
 11516              	.LBB2174:
 11517              	.LBI2174:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11518              		.loc 11 14 5 is_stmt 1 view .LVU3243
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11519              		.loc 11 14 5 is_stmt 0 view .LVU3244
 11520              	.LBE2174:
  53:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 353


 11521              		.loc 20 53 29 view .LVU3245
 11522 00b2 2246     		mov	r2, r4
 11523 00b4 4146     		mov	r1, r8
 11524 00b6 7C48     		ldr	r0, .L622+80
 11525 00b8 FFF7FEFF 		bl	__aeabi_atexit
 11526              	.LVL759:
 11527              	.LBB2175:
 11528              	.LBI2175:
  48:delayline_multitap.h ****     {
 11529              		.loc 18 48 5 is_stmt 1 view .LVU3246
  48:delayline_multitap.h ****     {
 11530              		.loc 18 48 5 is_stmt 0 view .LVU3247
 11531              	.LBE2175:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11532              		.loc 20 59 80 view .LVU3248
 11533 00bc 7B4D     		ldr	r5, .L622+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11534              		.loc 20 56 76 view .LVU3249
 11535 00be 2246     		mov	r2, r4
 11536 00c0 3946     		mov	r1, r7
 11537 00c2 7B48     		ldr	r0, .L622+88
 11538 00c4 FFF7FEFF 		bl	__aeabi_atexit
 11539              	.LVL760:
 11540              	.LBB2176:
 11541              	.LBI2176:
  48:delayline_multitap.h ****     {
 11542              		.loc 18 48 5 is_stmt 1 view .LVU3250
  48:delayline_multitap.h ****     {
 11543              		.loc 18 48 5 is_stmt 0 view .LVU3251
 11544              	.LBE2176:
  57:Veno-Echo.cpp **** 
 11545              		.loc 20 57 76 view .LVU3252
 11546 00c8 2246     		mov	r2, r4
 11547 00ca 3946     		mov	r1, r7
 11548 00cc 7948     		ldr	r0, .L622+92
 11549 00ce FFF7FEFF 		bl	__aeabi_atexit
 11550              	.LVL761:
 11551              	.LBB2177:
 11552              	.LBI2177:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11553              		.loc 19 38 5 is_stmt 1 view .LVU3253
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11554              		.loc 19 38 5 is_stmt 0 view .LVU3254
 11555              	.LBE2177:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11556              		.loc 20 98 12 view .LVU3255
 11557 00d2 794F     		ldr	r7, .L622+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11558              		.loc 20 59 80 view .LVU3256
 11559 00d4 2246     		mov	r2, r4
 11560 00d6 2946     		mov	r1, r5
 11561 00d8 7848     		ldr	r0, .L622+100
 11562 00da FFF7FEFF 		bl	__aeabi_atexit
 11563              	.LVL762:
 11564              	.LBB2178:
 11565              	.LBI2178:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 354


 11566              		.loc 19 38 5 is_stmt 1 view .LVU3257
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11567              		.loc 19 38 5 is_stmt 0 view .LVU3258
 11568              	.LBE2178:
  60:Veno-Echo.cpp **** 
 11569              		.loc 20 60 80 view .LVU3259
 11570 00de 2246     		mov	r2, r4
 11571 00e0 2946     		mov	r1, r5
 11572 00e2 7748     		ldr	r0, .L622+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11573              		.loc 20 102 11 view .LVU3260
 11574 00e4 774D     		ldr	r5, .L622+108
  60:Veno-Echo.cpp **** 
 11575              		.loc 20 60 80 view .LVU3261
 11576 00e6 FFF7FEFF 		bl	__aeabi_atexit
 11577              	.LVL763:
 11578              	.LBB2179:
 11579              	.LBI2179:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11580              		.loc 17 49 1 is_stmt 1 view .LVU3262
 11581              	.LBB2180:
 11582              	.LBB2181:
 11583              	.LBI2181:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11584              		.loc 14 47 1 view .LVU3263
 11585              	.LBB2182:
 11586              	.LBB2183:
 11587              	.LBI2183:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11588              		.loc 16 24 5 view .LVU3264
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11589              		.loc 16 24 5 is_stmt 0 view .LVU3265
 11590              	.LBE2183:
 11591              	.LBB2184:
 11592              	.LBI2184:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11593              		.loc 15 15 5 is_stmt 1 view .LVU3266
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11594              		.loc 15 15 5 is_stmt 0 view .LVU3267
 11595              	.LBE2184:
 11596              	.LBE2182:
 11597              	.LBE2181:
 11598              	.LBE2180:
 11599              	.LBE2179:
 11600              	.LBE2247:
 11601              	.LBE2251:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11602              		.loc 17 49 14 is_stmt 1 view .LVU3268
  49:DelayMulti.h  **** ~DelayMulti() {}
 11603              		.loc 17 49 14 view .LVU3269
 11604              	.LBB2252:
 11605              	.LBB2248:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11606              		.loc 20 98 12 is_stmt 0 view .LVU3270
 11607 00ea 2246     		mov	r2, r4
 11608 00ec 3946     		mov	r1, r7
 11609 00ee 7648     		ldr	r0, .L622+112
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 355


 11610 00f0 FFF7FEFF 		bl	__aeabi_atexit
 11611              	.LVL764:
 11612              	.LBB2185:
 11613              	.LBI2185:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11614              		.loc 17 49 1 is_stmt 1 view .LVU3271
 11615              	.LBB2186:
 11616              	.LBB2187:
 11617              	.LBI2187:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11618              		.loc 14 47 1 view .LVU3272
 11619              	.LBB2188:
 11620              	.LBB2189:
 11621              	.LBI2189:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11622              		.loc 16 24 5 view .LVU3273
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11623              		.loc 16 24 5 is_stmt 0 view .LVU3274
 11624              	.LBE2189:
 11625              	.LBB2190:
 11626              	.LBI2190:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11627              		.loc 15 15 5 is_stmt 1 view .LVU3275
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11628              		.loc 15 15 5 is_stmt 0 view .LVU3276
 11629              	.LBE2190:
 11630              	.LBE2188:
 11631              	.LBE2187:
 11632              	.LBE2186:
 11633              	.LBE2185:
 11634              	.LBE2248:
 11635              	.LBE2252:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11636              		.loc 17 49 14 is_stmt 1 view .LVU3277
  49:DelayMulti.h  **** ~DelayMulti() {}
 11637              		.loc 17 49 14 view .LVU3278
 11638              	.LBB2253:
 11639              	.LBB2249:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11640              		.loc 20 98 19 is_stmt 0 view .LVU3279
 11641 00f4 2246     		mov	r2, r4
 11642 00f6 3946     		mov	r1, r7
 11643 00f8 7448     		ldr	r0, .L622+116
 11644 00fa FFF7FEFF 		bl	__aeabi_atexit
 11645              	.LVL765:
 11646              	.LBB2191:
 11647              	.LBI2191:
  78:LEDs.h        ****     ~ButtonLED() {}
 11648              		.loc 14 78 5 is_stmt 1 view .LVU3280
 11649              	.LBB2192:
 11650              	.LBB2193:
 11651              	.LBI2193:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11652              		.loc 1 40 5 view .LVU3281
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11653              		.loc 1 40 5 is_stmt 0 view .LVU3282
 11654              	.LBE2193:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 356


 11655              	.LBB2194:
 11656              	.LBI2194:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11657              		.loc 16 24 5 is_stmt 1 view .LVU3283
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11658              		.loc 16 24 5 is_stmt 0 view .LVU3284
 11659              	.LBE2194:
 11660              	.LBE2192:
 11661              	.LBE2191:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11662              		.loc 20 102 11 view .LVU3285
 11663 00fe 2246     		mov	r2, r4
 11664 0100 2946     		mov	r1, r5
 11665 0102 7348     		ldr	r0, .L622+120
 11666 0104 FFF7FEFF 		bl	__aeabi_atexit
 11667              	.LVL766:
 11668              	.LBB2195:
 11669              	.LBI2195:
  78:LEDs.h        ****     ~ButtonLED() {}
 11670              		.loc 14 78 5 is_stmt 1 view .LVU3286
 11671              	.LBB2196:
 11672              	.LBB2197:
 11673              	.LBI2197:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11674              		.loc 1 40 5 view .LVU3287
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11675              		.loc 1 40 5 is_stmt 0 view .LVU3288
 11676              	.LBE2197:
 11677              	.LBB2198:
 11678              	.LBI2198:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11679              		.loc 16 24 5 is_stmt 1 view .LVU3289
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11680              		.loc 16 24 5 is_stmt 0 view .LVU3290
 11681              	.LBE2198:
 11682              	.LBE2196:
 11683              	.LBE2195:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11684              		.loc 20 102 18 view .LVU3291
 11685 0108 2246     		mov	r2, r4
 11686 010a 2946     		mov	r1, r5
 11687 010c 7148     		ldr	r0, .L622+124
 11688 010e FFF7FEFF 		bl	__aeabi_atexit
 11689              	.LVL767:
 11690              	.LBB2199:
 11691              	.LBI2199:
  78:LEDs.h        ****     ~ButtonLED() {}
 11692              		.loc 14 78 5 is_stmt 1 view .LVU3292
 11693              	.LBB2200:
 11694              	.LBB2201:
 11695              	.LBI2201:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11696              		.loc 1 40 5 view .LVU3293
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11697              		.loc 1 40 5 is_stmt 0 view .LVU3294
 11698              	.LBE2201:
 11699              	.LBB2202:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 357


 11700              	.LBI2202:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11701              		.loc 16 24 5 is_stmt 1 view .LVU3295
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11702              		.loc 16 24 5 is_stmt 0 view .LVU3296
 11703              	.LBE2202:
 11704              	.LBE2200:
 11705              	.LBE2199:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11706              		.loc 20 102 25 view .LVU3297
 11707 0112 2246     		mov	r2, r4
 11708 0114 2946     		mov	r1, r5
 11709 0116 7048     		ldr	r0, .L622+128
 11710 0118 FFF7FEFF 		bl	__aeabi_atexit
 11711              	.LVL768:
 11712              	.LBB2203:
 11713              	.LBI2203:
  78:LEDs.h        ****     ~ButtonLED() {}
 11714              		.loc 14 78 5 is_stmt 1 view .LVU3298
 11715              	.LBB2204:
 11716              	.LBB2205:
 11717              	.LBI2205:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11718              		.loc 1 40 5 view .LVU3299
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11719              		.loc 1 40 5 is_stmt 0 view .LVU3300
 11720              	.LBE2205:
 11721              	.LBB2206:
 11722              	.LBI2206:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11723              		.loc 16 24 5 is_stmt 1 view .LVU3301
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11724              		.loc 16 24 5 is_stmt 0 view .LVU3302
 11725              	.LBE2206:
 11726              	.LBE2204:
 11727              	.LBE2203:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11728              		.loc 20 102 34 view .LVU3303
 11729 011c 2246     		mov	r2, r4
 11730 011e 2946     		mov	r1, r5
 11731 0120 6E48     		ldr	r0, .L622+132
 11732 0122 FFF7FEFF 		bl	__aeabi_atexit
 11733              	.LVL769:
 11734              	.LBB2207:
 11735              	.LBI2207:
  78:LEDs.h        ****     ~ButtonLED() {}
 11736              		.loc 14 78 5 is_stmt 1 view .LVU3304
 11737              	.LBB2208:
 11738              	.LBB2209:
 11739              	.LBI2209:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11740              		.loc 1 40 5 view .LVU3305
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11741              		.loc 1 40 5 is_stmt 0 view .LVU3306
 11742              	.LBE2209:
 11743              	.LBB2210:
 11744              	.LBI2210:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 358


  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11745              		.loc 16 24 5 is_stmt 1 view .LVU3307
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11746              		.loc 16 24 5 is_stmt 0 view .LVU3308
 11747              	.LBE2210:
 11748              	.LBE2208:
 11749              	.LBE2207:
 146:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 11750              		.loc 20 146 13 view .LVU3309
 11751 0126 6E4F     		ldr	r7, .L622+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11752              		.loc 20 102 44 view .LVU3310
 11753 0128 2246     		mov	r2, r4
 11754 012a 2946     		mov	r1, r5
 11755 012c 6D48     		ldr	r0, .L622+140
 11756 012e FFF7FEFF 		bl	__aeabi_atexit
 11757              	.LVL770:
 11758              	.LBB2211:
 11759              	.LBI2211:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11760              		.loc 14 47 1 is_stmt 1 view .LVU3311
 11761              	.LBB2212:
 11762              	.LBB2213:
 11763              	.LBI2213:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11764              		.loc 16 24 5 view .LVU3312
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11765              		.loc 16 24 5 is_stmt 0 view .LVU3313
 11766              	.LBE2213:
 11767              	.LBB2214:
 11768              	.LBI2214:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11769              		.loc 15 15 5 is_stmt 1 view .LVU3314
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11770              		.loc 15 15 5 is_stmt 0 view .LVU3315
 11771              	.LBE2214:
 11772              	.LBE2212:
 11773              	.LBE2211:
 103:Veno-Echo.cpp **** 
 11774              		.loc 20 103 10 view .LVU3316
 11775 0132 2246     		mov	r2, r4
 11776 0134 6C49     		ldr	r1, .L622+144
 11777 0136 6D48     		ldr	r0, .L622+148
 11778 0138 FFF7FEFF 		bl	__aeabi_atexit
 11779              	.LVL771:
 11780              	.LBB2215:
 11781              	.LBI2215:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11782              		.loc 7 38 5 is_stmt 1 view .LVU3317
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11783              		.loc 7 38 5 is_stmt 0 view .LVU3318
 11784              	.LBE2215:
 146:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 11785              		.loc 20 146 13 view .LVU3319
 11786 013c 2246     		mov	r2, r4
 11787 013e 3946     		mov	r1, r7
 11788 0140 6B48     		ldr	r0, .L622+152
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 359


 11789 0142 FFF7FEFF 		bl	__aeabi_atexit
 11790              	.LVL772:
 11791              	.LBB2216:
 11792              	.LBI2216:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11793              		.loc 7 38 5 is_stmt 1 view .LVU3320
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11794              		.loc 7 38 5 is_stmt 0 view .LVU3321
 11795              	.LBE2216:
 147:Veno-Echo.cpp **** 
 11796              		.loc 20 147 13 view .LVU3322
 11797 0146 2246     		mov	r2, r4
 11798 0148 3946     		mov	r1, r7
 11799 014a 6A48     		ldr	r0, .L622+156
 152:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 11800              		.loc 20 152 18 view .LVU3323
 11801 014c 6A4D     		ldr	r5, .L622+160
 147:Veno-Echo.cpp **** 
 11802              		.loc 20 147 13 view .LVU3324
 11803 014e FFF7FEFF 		bl	__aeabi_atexit
 11804              	.LVL773:
 11805              	.LBB2217:
 11806              	.LBI2217:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11807              		.loc 7 38 5 is_stmt 1 view .LVU3325
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11808              		.loc 7 38 5 is_stmt 0 view .LVU3326
 11809              	.LBE2217:
 149:Veno-Echo.cpp **** static Adsr HPF_Env;
 11810              		.loc 20 149 13 view .LVU3327
 11811 0152 2246     		mov	r2, r4
 11812 0154 3946     		mov	r1, r7
 11813 0156 6948     		ldr	r0, .L622+164
 11814 0158 FFF7FEFF 		bl	__aeabi_atexit
 11815              	.LVL774:
 11816              	.LBB2218:
 11817              	.LBI2218:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11818              		.loc 7 38 5 is_stmt 1 view .LVU3328
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11819              		.loc 7 38 5 is_stmt 0 view .LVU3329
 11820              	.LBE2218:
 150:Veno-Echo.cpp **** 
 11821              		.loc 20 150 13 view .LVU3330
 11822 015c 2246     		mov	r2, r4
 11823 015e 3946     		mov	r1, r7
 11824 0160 6748     		ldr	r0, .L622+168
 11825 0162 FFF7FEFF 		bl	__aeabi_atexit
 11826              	.LVL775:
 11827              	.LBB2219:
 11828              	.LBI2219:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11829              		.loc 10 36 5 is_stmt 1 view .LVU3331
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11830              		.loc 10 36 5 is_stmt 0 view .LVU3332
 11831              	.LBE2219:
 152:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 360


 11832              		.loc 20 152 18 view .LVU3333
 11833 0166 2246     		mov	r2, r4
 11834 0168 2946     		mov	r1, r5
 11835 016a 6648     		ldr	r0, .L622+172
 11836 016c FFF7FEFF 		bl	__aeabi_atexit
 11837              	.LVL776:
 11838              	.LBB2220:
 11839              	.LBI2220:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11840              		.loc 10 36 5 is_stmt 1 view .LVU3334
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11841              		.loc 10 36 5 is_stmt 0 view .LVU3335
 11842              	.LBE2220:
 153:Veno-Echo.cpp **** 
 11843              		.loc 20 153 18 view .LVU3336
 11844 0170 2246     		mov	r2, r4
 11845 0172 2946     		mov	r1, r5
 11846 0174 6448     		ldr	r0, .L622+176
 11847 0176 FFF7FEFF 		bl	__aeabi_atexit
 11848              	.LVL777:
 11849              	.LBB2221:
 11850              	.LBI2221:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11851              		.loc 10 36 5 is_stmt 1 view .LVU3337
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11852              		.loc 10 36 5 is_stmt 0 view .LVU3338
 11853              	.LBE2221:
 155:Veno-Echo.cpp **** 
 11854              		.loc 20 155 18 view .LVU3339
 11855 017a 2246     		mov	r2, r4
 11856 017c 2946     		mov	r1, r5
 11857 017e 6348     		ldr	r0, .L622+180
 11858 0180 FFF7FEFF 		bl	__aeabi_atexit
 11859              	.LVL778:
 11860              	.LBB2222:
 11861              	.LBI2222:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11862              		.loc 10 36 5 is_stmt 1 view .LVU3340
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11863              		.loc 10 36 5 is_stmt 0 view .LVU3341
 11864              	.LBE2222:
 158:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 11865              		.loc 20 158 18 view .LVU3342
 11866 0184 2246     		mov	r2, r4
 11867 0186 2946     		mov	r1, r5
 11868 0188 6148     		ldr	r0, .L622+184
 11869 018a FFF7FEFF 		bl	__aeabi_atexit
 11870              	.LVL779:
 11871              	.LBB2223:
 11872              	.LBI2223:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11873              		.loc 10 36 5 is_stmt 1 view .LVU3343
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11874              		.loc 10 36 5 is_stmt 0 view .LVU3344
 11875              	.LBE2223:
 159:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 11876              		.loc 20 159 18 view .LVU3345
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 361


 11877 018e 2246     		mov	r2, r4
 11878 0190 2946     		mov	r1, r5
 11879 0192 6048     		ldr	r0, .L622+188
 11880 0194 FFF7FEFF 		bl	__aeabi_atexit
 11881              	.LVL780:
 11882              	.LBB2224:
 11883              	.LBI2224:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11884              		.loc 10 36 5 is_stmt 1 view .LVU3346
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11885              		.loc 10 36 5 is_stmt 0 view .LVU3347
 11886              	.LBE2224:
 160:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 11887              		.loc 20 160 18 view .LVU3348
 11888 0198 2246     		mov	r2, r4
 11889 019a 2946     		mov	r1, r5
 11890 019c 5E48     		ldr	r0, .L622+192
 11891 019e FFF7FEFF 		bl	__aeabi_atexit
 11892              	.LVL781:
 11893              	.LBB2225:
 11894              	.LBI2225:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11895              		.loc 10 36 5 is_stmt 1 view .LVU3349
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11896              		.loc 10 36 5 is_stmt 0 view .LVU3350
 11897              	.LBE2225:
 161:Veno-Echo.cpp **** 
 11898              		.loc 20 161 18 view .LVU3351
 11899 01a2 2246     		mov	r2, r4
 11900 01a4 2946     		mov	r1, r5
 11901 01a6 5D48     		ldr	r0, .L622+196
 11902 01a8 FFF7FEFF 		bl	__aeabi_atexit
 11903              	.LVL782:
 11904              	.LBB2226:
 11905              	.LBI2226:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11906              		.loc 10 36 5 is_stmt 1 view .LVU3352
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11907              		.loc 10 36 5 is_stmt 0 view .LVU3353
 11908              	.LBE2226:
 164:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 11909              		.loc 20 164 18 view .LVU3354
 11910 01ac 2246     		mov	r2, r4
 11911 01ae 2946     		mov	r1, r5
 11912 01b0 5B48     		ldr	r0, .L622+200
 11913 01b2 FFF7FEFF 		bl	__aeabi_atexit
 11914              	.LVL783:
 11915              	.LBB2227:
 11916              	.LBI2227:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11917              		.loc 10 36 5 is_stmt 1 view .LVU3355
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11918              		.loc 10 36 5 is_stmt 0 view .LVU3356
 11919              	.LBE2227:
 165:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 11920              		.loc 20 165 18 view .LVU3357
 11921 01b6 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 362


 11922 01b8 2946     		mov	r1, r5
 11923 01ba 5A48     		ldr	r0, .L622+204
 11924 01bc FFF7FEFF 		bl	__aeabi_atexit
 11925              	.LVL784:
 11926              	.LBB2228:
 11927              	.LBI2228:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11928              		.loc 10 36 5 is_stmt 1 view .LVU3358
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11929              		.loc 10 36 5 is_stmt 0 view .LVU3359
 11930              	.LBE2228:
 166:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 11931              		.loc 20 166 18 view .LVU3360
 11932 01c0 2246     		mov	r2, r4
 11933 01c2 2946     		mov	r1, r5
 11934 01c4 5848     		ldr	r0, .L622+208
 11935 01c6 FFF7FEFF 		bl	__aeabi_atexit
 11936              	.LVL785:
 11937              	.LBB2229:
 11938              	.LBI2229:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11939              		.loc 10 36 5 is_stmt 1 view .LVU3361
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11940              		.loc 10 36 5 is_stmt 0 view .LVU3362
 11941              	.LBE2229:
 167:Veno-Echo.cpp **** 
 11942              		.loc 20 167 18 view .LVU3363
 11943 01ca 2246     		mov	r2, r4
 11944 01cc 2946     		mov	r1, r5
 11945 01ce 5748     		ldr	r0, .L622+212
 11946 01d0 FFF7FEFF 		bl	__aeabi_atexit
 11947              	.LVL786:
 11948              	.LBB2230:
 11949              	.LBI2230:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11950              		.loc 10 36 5 is_stmt 1 view .LVU3364
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11951              		.loc 10 36 5 is_stmt 0 view .LVU3365
 11952              	.LBE2230:
 170:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 11953              		.loc 20 170 18 view .LVU3366
 11954 01d4 2246     		mov	r2, r4
 11955 01d6 2946     		mov	r1, r5
 11956 01d8 5548     		ldr	r0, .L622+216
 11957 01da FFF7FEFF 		bl	__aeabi_atexit
 11958              	.LVL787:
 11959              	.LBB2231:
 11960              	.LBI2231:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11961              		.loc 10 36 5 is_stmt 1 view .LVU3367
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11962              		.loc 10 36 5 is_stmt 0 view .LVU3368
 11963              	.LBE2231:
 171:Veno-Echo.cpp **** 
 11964              		.loc 20 171 18 view .LVU3369
 11965 01de 2246     		mov	r2, r4
 11966 01e0 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 363


 11967 01e2 5448     		ldr	r0, .L622+220
 11968 01e4 FFF7FEFF 		bl	__aeabi_atexit
 11969              	.LVL788:
 11970              	.LBB2232:
 11971              	.LBI2232:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11972              		.loc 10 36 5 is_stmt 1 view .LVU3370
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11973              		.loc 10 36 5 is_stmt 0 view .LVU3371
 11974              	.LBE2232:
 177:Veno-Echo.cpp **** Switch ReverseGateR;
 11975              		.loc 20 177 8 view .LVU3372
 11976 01e8 534F     		ldr	r7, .L622+224
 173:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 11977              		.loc 20 173 18 view .LVU3373
 11978 01ea 2246     		mov	r2, r4
 11979 01ec 2946     		mov	r1, r5
 11980 01ee 5348     		ldr	r0, .L622+228
 11981 01f0 FFF7FEFF 		bl	__aeabi_atexit
 11982              	.LVL789:
 11983              	.LBB2233:
 11984              	.LBI2233:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11985              		.loc 10 36 5 is_stmt 1 view .LVU3374
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11986              		.loc 10 36 5 is_stmt 0 view .LVU3375
 11987              	.LBE2233:
 174:Veno-Echo.cpp **** 
 11988              		.loc 20 174 18 view .LVU3376
 11989 01f4 2246     		mov	r2, r4
 11990 01f6 2946     		mov	r1, r5
 11991 01f8 5148     		ldr	r0, .L622+232
 11992 01fa FFF7FEFF 		bl	__aeabi_atexit
 11993              	.LVL790:
 11994              	.LBB2234:
 11995              	.LBI2234:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11996              		.loc 1 40 5 is_stmt 1 view .LVU3377
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11997              		.loc 1 40 5 is_stmt 0 view .LVU3378
 11998              	.LBE2234:
 177:Veno-Echo.cpp **** Switch ReverseGateR;
 11999              		.loc 20 177 8 view .LVU3379
 12000 01fe 2246     		mov	r2, r4
 12001 0200 3946     		mov	r1, r7
 12002 0202 5048     		ldr	r0, .L622+236
 12003 0204 FFF7FEFF 		bl	__aeabi_atexit
 12004              	.LVL791:
 12005              	.LBB2235:
 12006              	.LBI2235:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12007              		.loc 1 40 5 is_stmt 1 view .LVU3380
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12008              		.loc 1 40 5 is_stmt 0 view .LVU3381
 12009              	.LBE2235:
 178:Veno-Echo.cpp **** 
 12010              		.loc 20 178 8 view .LVU3382
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 364


 12011 0208 2246     		mov	r2, r4
 12012 020a 3946     		mov	r1, r7
 12013 020c 4E48     		ldr	r0, .L622+240
 12014 020e FFF7FEFF 		bl	__aeabi_atexit
 12015              	.LVL792:
 12016              	.LBB2236:
 12017              	.LBI2236:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12018              		.loc 1 40 5 is_stmt 1 view .LVU3383
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12019              		.loc 1 40 5 is_stmt 0 view .LVU3384
 12020              	.LBE2236:
 181:Veno-Echo.cpp **** Switch ClockIn;
 12021              		.loc 20 181 8 view .LVU3385
 12022 0212 2246     		mov	r2, r4
 12023 0214 3946     		mov	r1, r7
 12024 0216 4D48     		ldr	r0, .L622+244
 12025 0218 FFF7FEFF 		bl	__aeabi_atexit
 12026              	.LVL793:
 12027              	.LBB2237:
 12028              	.LBI2237:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12029              		.loc 1 40 5 is_stmt 1 view .LVU3386
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12030              		.loc 1 40 5 is_stmt 0 view .LVU3387
 12031              	.LBE2237:
 182:Veno-Echo.cpp **** 
 12032              		.loc 20 182 8 view .LVU3388
 12033 021c 2246     		mov	r2, r4
 12034 021e 3946     		mov	r1, r7
 12035 0220 4B48     		ldr	r0, .L622+248
 12036 0222 FFF7FEFF 		bl	__aeabi_atexit
 12037              	.LVL794:
 12038              	.LBB2238:
 12039              	.LBI2238:
  41:taptempo.h    ****     {
 12040              		.loc 13 41 5 is_stmt 1 view .LVU3389
 12041              	.LBB2239:
 12042              	.LBB2240:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12043              		.loc 13 43 9 view .LVU3390
  46:taptempo.h    ****         lastTapLength_ = 0;
 12044              		.loc 13 46 17 is_stmt 0 view .LVU3391
 12045 0226 5027     		movs	r7, #80
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12046              		.loc 13 43 18 view .LVU3392
 12047 0228 4A48     		ldr	r0, .L622+252
  45:taptempo.h    ****         mintap_ = 80;
 12048              		.loc 13 45 17 view .LVU3393
 12049 022a 4FF4FA6C 		mov	ip, #2000
  44:taptempo.h    ****         maxtap_ = 2000;
 12050              		.loc 13 44 24 view .LVU3394
 12051 022e DFF834E1 		ldr	lr, .L622+268
  51:taptempo.h    **** 
 12052              		.loc 13 51 19 view .LVU3395
 12053 0232 4FF07E53 		mov	r3, #1065353216
  48:taptempo.h    ****         lastTime_ = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 365


 12054              		.loc 13 48 16 view .LVU3396
 12055 0236 484D     		ldr	r5, .L622+256
 12056              	.LBE2240:
 12057              	.LBE2239:
 12058              	.LBE2238:
 185:Veno-Echo.cpp **** 
 12059              		.loc 20 185 10 view .LVU3397
 12060 0238 2246     		mov	r2, r4
 12061              	.LBB2245:
 12062              	.LBB2243:
 12063              	.LBB2241:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12064              		.loc 13 43 18 view .LVU3398
 12065 023a 0676     		strb	r6, [r0, #24]
  44:taptempo.h    ****         maxtap_ = 2000;
 12066              		.loc 13 44 9 is_stmt 1 view .LVU3399
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12067              		.loc 13 50 22 is_stmt 0 view .LVU3400
 12068 023c 8660     		str	r6, [r0, #8]
  44:taptempo.h    ****         maxtap_ = 2000;
 12069              		.loc 13 44 24 view .LVU3401
 12070 023e C0F81CE0 		str	lr, [r0, #28]	@ float
  45:taptempo.h    ****         mintap_ = 80;
 12071              		.loc 13 45 9 is_stmt 1 view .LVU3402
  48:taptempo.h    ****         lastTime_ = 0;
 12072              		.loc 13 48 16 is_stmt 0 view .LVU3403
 12073 0242 0562     		str	r5, [r0, #32]	@ float
 12074              	.LBE2241:
 12075              	.LBE2243:
 12076              	.LBE2245:
 185:Veno-Echo.cpp **** 
 12077              		.loc 20 185 10 view .LVU3404
 12078 0244 4549     		ldr	r1, .L622+260
 12079              	.LBB2246:
 12080              	.LBB2244:
 12081              	.LBB2242:
  51:taptempo.h    **** 
 12082              		.loc 13 51 19 view .LVU3405
 12083 0246 4362     		str	r3, [r0, #36]	@ float
  49:taptempo.h    ****         currentTime_ = 0;
 12084              		.loc 13 49 19 view .LVU3406
 12085 0248 C0E90366 		strd	r6, r6, [r0, #12]
  46:taptempo.h    ****         lastTapLength_ = 0;
 12086              		.loc 13 46 17 view .LVU3407
 12087 024c C0E9007C 		strd	r7, ip, [r0]
  47:taptempo.h    ****         tempo_ = 500.0f;
 12088              		.loc 13 47 9 is_stmt 1 view .LVU3408
  48:taptempo.h    ****         lastTime_ = 0;
 12089              		.loc 13 48 9 view .LVU3409
  49:taptempo.h    ****         currentTime_ = 0;
 12090              		.loc 13 49 9 view .LVU3410
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12091              		.loc 13 50 9 view .LVU3411
  51:taptempo.h    **** 
 12092              		.loc 13 51 9 view .LVU3412
 12093              	.LVL795:
  51:taptempo.h    **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 366


 12094              		.loc 13 51 9 is_stmt 0 view .LVU3413
 12095              	.LBE2242:
 12096              	.LBE2244:
 12097              	.LBE2246:
 12098              	.LBE2249:
 12099              	.LBE2253:
 12100              		.loc 20 2021 1 view .LVU3414
 12101 0250 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 12102              		.cfi_restore 14
 12103              		.cfi_restore 8
 12104              		.cfi_restore 7
 12105              		.cfi_restore 6
 12106              		.cfi_restore 5
 12107              		.cfi_restore 4
 12108              		.cfi_def_cfa_offset 0
 12109              	.LBB2254:
 12110              	.LBB2250:
 185:Veno-Echo.cpp **** 
 12111              		.loc 20 185 10 view .LVU3415
 12112 0254 FFF7FEBF 		b	__aeabi_atexit
 12113              	.LVL796:
 12114              	.L623:
 12115              		.align	2
 12116              	.L622:
 12117 0258 00000000 		.word	.LANCHOR4
 12118 025c 00000000 		.word	__dso_handle
 12119 0260 00000000 		.word	_ZN7daisysp3SvfD1Ev
 12120 0264 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12121 0268 00000000 		.word	.LANCHOR46
 12122 026c 00000000 		.word	.LANCHOR47
 12123 0270 00000000 		.word	.LANCHOR34
 12124 0274 00000000 		.word	.LANCHOR35
 12125 0278 00000000 		.word	.LANCHOR48
 12126 027c 00000000 		.word	.LANCHOR49
 12127 0280 00000000 		.word	.LANCHOR36
 12128 0284 00000000 		.word	.LANCHOR37
 12129 0288 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 12130 028c 00000000 		.word	.LANCHOR75
 12131 0290 17B7D138 		.word	953267991
 12132 0294 00000000 		.word	.LANCHOR128
 12133 0298 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 12134 029c 00000000 		.word	.LANCHOR129
 12135 02a0 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 12136 02a4 00000000 		.word	.LANCHOR105
 12137 02a8 00000000 		.word	.LANCHOR106
 12138 02ac 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 12139 02b0 00000000 		.word	delMemsL
 12140 02b4 00000000 		.word	delMemsR
 12141 02b8 00000000 		.word	_ZN10DelayMultiD1Ev
 12142 02bc 00000000 		.word	delMemsL_REV
 12143 02c0 00000000 		.word	delMemsR_REV
 12144 02c4 00000000 		.word	_ZN9ButtonLEDD1Ev
 12145 02c8 00000000 		.word	.LANCHOR0
 12146 02cc 00000000 		.word	.LANCHOR1
 12147 02d0 00000000 		.word	.LANCHOR91
 12148 02d4 00000000 		.word	.LANCHOR92
 12149 02d8 00000000 		.word	.LANCHOR93
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 367


 12150 02dc 00000000 		.word	.LANCHOR94
 12151 02e0 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 12152 02e4 00000000 		.word	.LANCHOR95
 12153 02e8 00000000 		.word	_ZN8TempoLEDD1Ev
 12154 02ec 00000000 		.word	.LANCHOR89
 12155 02f0 00000000 		.word	.LANCHOR99
 12156 02f4 00000000 		.word	.LANCHOR100
 12157 02f8 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 12158 02fc 00000000 		.word	.LANCHOR101
 12159 0300 00000000 		.word	.LANCHOR102
 12160 0304 00000000 		.word	.LANCHOR103
 12161 0308 00000000 		.word	.LANCHOR104
 12162 030c 00000000 		.word	.LANCHOR64
 12163 0310 00000000 		.word	.LANCHOR116
 12164 0314 00000000 		.word	.LANCHOR117
 12165 0318 00000000 		.word	.LANCHOR114
 12166 031c 00000000 		.word	.LANCHOR115
 12167 0320 00000000 		.word	.LANCHOR120
 12168 0324 00000000 		.word	.LANCHOR121
 12169 0328 00000000 		.word	.LANCHOR118
 12170 032c 00000000 		.word	.LANCHOR119
 12171 0330 00000000 		.word	.LANCHOR122
 12172 0334 00000000 		.word	.LANCHOR123
 12173 0338 00000000 		.word	_ZN5daisy6SwitchD1Ev
 12174 033c 00000000 		.word	.LANCHOR124
 12175 0340 00000000 		.word	.LANCHOR125
 12176 0344 00000000 		.word	.LANCHOR96
 12177 0348 00000000 		.word	.LANCHOR97
 12178 034c 00000000 		.word	.LANCHOR98
 12179 0350 00000000 		.word	.LANCHOR87
 12180 0354 00000000 		.word	.LANCHOR12
 12181 0358 0000FA43 		.word	1140457472
 12182 035c 00000000 		.word	_ZN8TaptempoD1Ev
 12183 0360 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 12184 0364 0000A03F 		.word	1067450368
 12185              	.LBE2250:
 12186              	.LBE2254:
 12187              		.cfi_endproc
 12188              	.LFE4917:
 12190              		.section	.init_array,"aw",%init_array
 12191              		.align	2
 12192 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 12193              		.global	AltControls
 12194              		.global	BaseTempo
 12195              		.global	ClockIn
 12196              		.global	Sync
 12197              		.global	ReverseGateR
 12198              		.global	ReverseGateL
 12199              		.global	save_flag
 12200              		.global	PostFilters
 12201              		.global	ClockInFlag
 12202              		.global	mute
 12203              		.global	shift
 12204              		.global	syncMode
 12205              		.global	modulation_CV_Raw
 12206              		.global	ModDepth
 12207              		.global	div_R
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 368


 12208              		.global	div_L
 12209              		.global	filterXfade
 12210              		.global	width_CV
 12211              		.global	width
 12212              		.global	drywet_CV
 12213              		.global	drywet
 12214              		.global	crossfeedback_CV
 12215              		.global	crossfeedback
 12216              		.global	feedbackR_CV
 12217              		.global	feedbackR
 12218              		.global	feedbackL_CV
 12219              		.global	feedbackL
 12220              		.global	delayTimeR_CV
 12221              		.global	delayTimeL_CV
 12222              		.global	tempoLED_BASE
 12223              		.global	Tap_Button
 12224              		.global	Rev_R_sw
 12225              		.global	Rev_L_sw
 12226              		.global	HPF_sw
 12227              		.global	LPF_sw
 12228              		.global	delaysR_REV
 12229              		.global	delaysL_REV
 12230              		.global	delayR
 12231              		.global	delayL
 12232              		.global	delMemsR_REV
 12233              		.global	delMemsL_REV
 12234              		.global	delMemsR
 12235              		.global	delMemsL
 12236              		.section	.bss.AltControls,"aw",%nobits
 12237              		.align	2
 12238              		.set	.LANCHOR16,. + 0
 12241              	AltControls:
 12242 0000 00000000 		.space	32
 12242      00000000 
 12242      00000000 
 12242      00000000 
 12242      00000000 
 12243              		.section	.bss.BaseTempo,"aw",%nobits
 12244              		.align	2
 12245              		.set	.LANCHOR12,. + 0
 12248              	BaseTempo:
 12249 0000 00000000 		.space	40
 12249      00000000 
 12249      00000000 
 12249      00000000 
 12249      00000000 
 12250              		.section	.bss.ClockIn,"aw",%nobits
 12251              		.align	2
 12252              		.set	.LANCHOR87,. + 0
 12255              	ClockIn:
 12256 0000 00000000 		.space	16
 12256      00000000 
 12256      00000000 
 12256      00000000 
 12257              		.section	.bss.ClockInFlag,"aw",%nobits
 12260              	ClockInFlag:
 12261 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 369


 12262              		.section	.bss.HPF_sw,"aw",%nobits
 12263              		.align	2
 12264              		.set	.LANCHOR92,. + 0
 12267              	HPF_sw:
 12268 0000 00000000 		.space	52
 12268      00000000 
 12268      00000000 
 12268      00000000 
 12268      00000000 
 12269              		.section	.bss.LPF_sw,"aw",%nobits
 12270              		.align	2
 12271              		.set	.LANCHOR91,. + 0
 12274              	LPF_sw:
 12275 0000 00000000 		.space	52
 12275      00000000 
 12275      00000000 
 12275      00000000 
 12275      00000000 
 12276              		.section	.bss.ModDepth,"aw",%nobits
 12277              		.align	2
 12278              		.set	.LANCHOR67,. + 0
 12281              	ModDepth:
 12282 0000 00000000 		.space	4
 12283              		.section	.bss.PostFilters,"aw",%nobits
 12284              		.set	.LANCHOR82,. + 0
 12287              	PostFilters:
 12288 0000 00       		.space	1
 12289              		.section	.bss.Rev_L_sw,"aw",%nobits
 12290              		.align	2
 12291              		.set	.LANCHOR93,. + 0
 12294              	Rev_L_sw:
 12295 0000 00000000 		.space	52
 12295      00000000 
 12295      00000000 
 12295      00000000 
 12295      00000000 
 12296              		.section	.bss.Rev_R_sw,"aw",%nobits
 12297              		.align	2
 12298              		.set	.LANCHOR94,. + 0
 12301              	Rev_R_sw:
 12302 0000 00000000 		.space	52
 12302      00000000 
 12302      00000000 
 12302      00000000 
 12302      00000000 
 12303              		.section	.bss.ReverseGateL,"aw",%nobits
 12304              		.align	2
 12305              		.set	.LANCHOR96,. + 0
 12308              	ReverseGateL:
 12309 0000 00000000 		.space	16
 12309      00000000 
 12309      00000000 
 12309      00000000 
 12310              		.section	.bss.ReverseGateR,"aw",%nobits
 12311              		.align	2
 12312              		.set	.LANCHOR97,. + 0
 12315              	ReverseGateR:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 370


 12316 0000 00000000 		.space	16
 12316      00000000 
 12316      00000000 
 12316      00000000 
 12317              		.section	.bss.Sync,"aw",%nobits
 12318              		.align	2
 12319              		.set	.LANCHOR98,. + 0
 12322              	Sync:
 12323 0000 00000000 		.space	16
 12323      00000000 
 12323      00000000 
 12323      00000000 
 12324              		.section	.bss.Tap_Button,"aw",%nobits
 12325              		.align	2
 12326              		.set	.LANCHOR95,. + 0
 12329              	Tap_Button:
 12330 0000 00000000 		.space	52
 12330      00000000 
 12330      00000000 
 12330      00000000 
 12330      00000000 
 12331              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 12332              		.align	2
 12333              		.set	.LANCHOR99,. + 0
 12336              	_ZL10FwdRevLEnv:
 12337 0000 00000000 		.space	56
 12337      00000000 
 12337      00000000 
 12337      00000000 
 12337      00000000 
 12338              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 12339              		.align	2
 12340              		.set	.LANCHOR100,. + 0
 12343              	_ZL10FwdRevREnv:
 12344 0000 00000000 		.space	56
 12344      00000000 
 12344      00000000 
 12344      00000000 
 12344      00000000 
 12345              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 12346              		.align	2
 12347              		.set	.LANCHOR114,. + 0
 12350              	_ZL10HPF_LXfade:
 12351 0000 00000000 		.space	8
 12351      00000000 
 12352              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 12353              		.align	2
 12354              		.set	.LANCHOR36,. + 0
 12357              	_ZL10HPF_L_post:
 12358 0000 00000000 		.space	76
 12358      00000000 
 12358      00000000 
 12358      00000000 
 12358      00000000 
 12359              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 12360              		.align	2
 12361              		.set	.LANCHOR115,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 371


 12364              	_ZL10HPF_RXfade:
 12365 0000 00000000 		.space	8
 12365      00000000 
 12366              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 12367              		.align	2
 12368              		.set	.LANCHOR37,. + 0
 12371              	_ZL10HPF_R_post:
 12372 0000 00000000 		.space	76
 12372      00000000 
 12372      00000000 
 12372      00000000 
 12372      00000000 
 12373              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 12374              		.align	2
 12375              		.set	.LANCHOR116,. + 0
 12378              	_ZL10LPF_LXfade:
 12379 0000 00000000 		.space	8
 12379      00000000 
 12380              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 12381              		.align	2
 12382              		.set	.LANCHOR48,. + 0
 12385              	_ZL10LPF_L_post:
 12386 0000 00000000 		.space	76
 12386      00000000 
 12386      00000000 
 12386      00000000 
 12386      00000000 
 12387              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 12388              		.align	2
 12389              		.set	.LANCHOR117,. + 0
 12392              	_ZL10LPF_RXfade:
 12393 0000 00000000 		.space	8
 12393      00000000 
 12394              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 12395              		.align	2
 12396              		.set	.LANCHOR49,. + 0
 12399              	_ZL10LPF_R_post:
 12400 0000 00000000 		.space	76
 12400      00000000 
 12400      00000000 
 12400      00000000 
 12400      00000000 
 12401              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 12402              		.align	2
 12403              		.set	.LANCHOR64,. + 0
 12406              	_ZL10WidthXfade:
 12407 0000 00000000 		.space	8
 12407      00000000 
 12408              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 12409              		.align	2
 12410              		.set	.LANCHOR105,. + 0
 12413              	_ZL11DcBlock_LFB:
 12414 0000 00000000 		.space	12
 12414      00000000 
 12414      00000000 
 12415              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 12416              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 372


 12417              		.set	.LANCHOR106,. + 0
 12420              	_ZL11DcBlock_RFB:
 12421 0000 00000000 		.space	12
 12421      00000000 
 12421      00000000 
 12422              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 12423              		.align	2
 12424              		.set	.LANCHOR122,. + 0
 12427              	_ZL11FilterMix_L:
 12428 0000 00000000 		.space	8
 12428      00000000 
 12429              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 12430              		.align	2
 12431              		.set	.LANCHOR123,. + 0
 12434              	_ZL11FilterMix_R:
 12435 0000 00000000 		.space	8
 12435      00000000 
 12436              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 12437              		.align	2
 12438              		.set	.LANCHOR103,. + 0
 12441              	_ZL12FwdRevLXfade:
 12442 0000 00000000 		.space	8
 12442      00000000 
 12443              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 12444              		.align	2
 12445              		.set	.LANCHOR104,. + 0
 12448              	_ZL12FwdRevRXfade:
 12449 0000 00000000 		.space	8
 12449      00000000 
 12450              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 12451              		.align	2
 12452              		.set	.LANCHOR118,. + 0
 12455              	_ZL15HPF_LXfade_post:
 12456 0000 00000000 		.space	8
 12456      00000000 
 12457              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 12458              		.align	2
 12459              		.set	.LANCHOR119,. + 0
 12462              	_ZL15HPF_RXfade_post:
 12463 0000 00000000 		.space	8
 12463      00000000 
 12464              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 12465              		.align	2
 12466              		.set	.LANCHOR120,. + 0
 12469              	_ZL15LPF_LXfade_post:
 12470 0000 00000000 		.space	8
 12470      00000000 
 12471              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 12472              		.align	2
 12473              		.set	.LANCHOR121,. + 0
 12476              	_ZL15LPF_RXfade_post:
 12477 0000 00000000 		.space	8
 12477      00000000 
 12478              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 12479              		.align	2
 12480              		.set	.LANCHOR124,. + 0
 12483              	_ZL16FilterMix_L_post:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 373


 12484 0000 00000000 		.space	8
 12484      00000000 
 12485              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 12486              		.align	2
 12487              		.set	.LANCHOR125,. + 0
 12490              	_ZL16FilterMix_R_post:
 12491 0000 00000000 		.space	8
 12491      00000000 
 12492              		.section	.bss._ZL2hw,"aw",%nobits
 12493              		.align	2
 12494              		.set	.LANCHOR4,. + 0
 12497              	_ZL2hw:
 12498 0000 00000000 		.space	60
 12498      00000000 
 12498      00000000 
 12498      00000000 
 12498      00000000 
 12499              		.section	.bss._ZL3lfo,"aw",%nobits
 12500              		.align	2
 12501              		.set	.LANCHOR75,. + 0
 12504              	_ZL3lfo:
 12505 0000 00000000 		.space	40
 12505      00000000 
 12505      00000000 
 12505      00000000 
 12505      00000000 
 12506              		.section	.bss._ZL5HPF_L,"aw",%nobits
 12507              		.align	2
 12508              		.set	.LANCHOR34,. + 0
 12511              	_ZL5HPF_L:
 12512 0000 00000000 		.space	76
 12512      00000000 
 12512      00000000 
 12512      00000000 
 12512      00000000 
 12513              		.section	.bss._ZL5HPF_R,"aw",%nobits
 12514              		.align	2
 12515              		.set	.LANCHOR35,. + 0
 12518              	_ZL5HPF_R:
 12519 0000 00000000 		.space	76
 12519      00000000 
 12519      00000000 
 12519      00000000 
 12519      00000000 
 12520              		.section	.bss._ZL5LPF_L,"aw",%nobits
 12521              		.align	2
 12522              		.set	.LANCHOR46,. + 0
 12525              	_ZL5LPF_L:
 12526 0000 00000000 		.space	76
 12526      00000000 
 12526      00000000 
 12526      00000000 
 12526      00000000 
 12527              		.section	.bss._ZL5LPF_R,"aw",%nobits
 12528              		.align	2
 12529              		.set	.LANCHOR47,. + 0
 12532              	_ZL5LPF_R:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 374


 12533 0000 00000000 		.space	76
 12533      00000000 
 12533      00000000 
 12533      00000000 
 12533      00000000 
 12534              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 12535              		.align	2
 12536              		.set	.LANCHOR102,. + 0
 12539              	_ZL7HPF_Env:
 12540 0000 00000000 		.space	56
 12540      00000000 
 12540      00000000 
 12540      00000000 
 12540      00000000 
 12541              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 12542              		.align	2
 12543              		.set	.LANCHOR101,. + 0
 12546              	_ZL7LPF_Env:
 12547 0000 00000000 		.space	56
 12547      00000000 
 12547      00000000 
 12547      00000000 
 12547      00000000 
 12548              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 12549              		.align	2
 12550              		.set	.LANCHOR128,. + 0
 12553              	_ZL7LeftEnv:
 12554 0000 00000000 		.space	24
 12554      00000000 
 12554      00000000 
 12554      00000000 
 12554      00000000 
 12555              		.section	.bss._ZL8RightEnv,"aw",%nobits
 12556              		.align	2
 12557              		.set	.LANCHOR129,. + 0
 12560              	_ZL8RightEnv:
 12561 0000 00000000 		.space	24
 12561      00000000 
 12561      00000000 
 12561      00000000 
 12561      00000000 
 12562              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 12563              		.align	2
 12564              		.set	.LANCHOR85,. + 0
 12567              	_ZZ10Update_ModvE13modulation_CV:
 12568 0000 00000000 		.space	4
 12569              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 12570              		.align	2
 12571              		.set	.LANCHOR86,. + 0
 12574              	_ZZ10Update_ModvE17ModDepth_Filtered:
 12575 0000 00000000 		.space	4
 12576              		.section	.bss._ZZ11UpdateClockvE10divCounter,"aw",%nobits
 12577              		.align	2
 12578              		.set	.LANCHOR88,. + 0
 12581              	_ZZ11UpdateClockvE10divCounter:
 12582 0000 00000000 		.space	4
 12583              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 375


 12584              		.align	2
 12585              		.set	.LANCHOR62,. + 0
 12588              	_ZZ12Update_widthvE10width_Last:
 12589 0000 00000000 		.space	4
 12590              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 12591              		.align	2
 12592              		.set	.LANCHOR66,. + 0
 12595              	_ZZ12Update_widthvE12ModDepth_new:
 12596 0000 00000000 		.space	4
 12597              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 12598              		.set	.LANCHOR60,. + 0
 12601              	_ZZ12Update_widthvE12width_pickup:
 12602 0000 00       		.space	1
 12603              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 12604              		.set	.LANCHOR65,. + 0
 12607              	_ZZ12Update_widthvE15ModDepth_pickup:
 12608 0000 00       		.space	1
 12609              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 12610              		.set	.LANCHOR59,. + 0
 12613              	_ZZ12Update_widthvE9lastShift:
 12614 0000 00       		.space	1
 12615              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 12616              		.align	2
 12617              		.set	.LANCHOR61,. + 0
 12620              	_ZZ12Update_widthvE9width_new:
 12621 0000 00000000 		.space	4
 12622              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 12623              		.set	.LANCHOR56,. + 0
 12626              	_ZZ13Update_drywetvE10Res_pickup:
 12627 0000 00       		.space	1
 12628              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 12629              		.align	2
 12630              		.set	.LANCHOR53,. + 0
 12633              	_ZZ13Update_drywetvE10drywet_new:
 12634 0000 00000000 		.space	4
 12635              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 12636              		.align	2
 12637              		.set	.LANCHOR54,. + 0
 12640              	_ZZ13Update_drywetvE11drywet_Last:
 12641 0000 00000000 		.space	4
 12642              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 12643              		.set	.LANCHOR52,. + 0
 12646              	_ZZ13Update_drywetvE13drywet_pickup:
 12647 0000 00       		.space	1
 12648              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 12649              		.align	2
 12650              		.set	.LANCHOR57,. + 0
 12653              	_ZZ13Update_drywetvE7Res_new:
 12654 0000 00000000 		.space	4
 12655              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 12656              		.set	.LANCHOR51,. + 0
 12659              	_ZZ13Update_drywetvE9lastShift:
 12660 0000 00       		.space	1
 12661              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 12662              		.align	2
 12663              		.set	.LANCHOR108,. + 0
 12666              	_ZZ14Update_ButtonsvE11buttonstate:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 376


 12667 0000 00000000 		.space	4
 12668              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 12669              		.align	2
 12670              		.set	.LANCHOR109,. + 0
 12673              	_ZZ14Update_ButtonsvE9resetTime:
 12674 0000 00000000 		.space	4
 12675              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 12676              		.align	2
 12677              		.set	.LANCHOR110,. + 0
 12680              	_ZZ14Update_ButtonsvE9shiftTime:
 12681 0000 00000000 		.space	4
 12682              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 12683              		.align	2
 12684              		.set	.LANCHOR33,. + 0
 12687              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 12688 0000 00000000 		.space	4
 12689              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 12690              		.align	2
 12691              		.set	.LANCHOR29,. + 0
 12694              	_ZZ16Update_feedbackLvE13feedbackL_new:
 12695 0000 00000000 		.space	4
 12696              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 12697              		.align	2
 12698              		.set	.LANCHOR30,. + 0
 12701              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 12702 0000 00000000 		.space	4
 12703              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 12704              		.set	.LANCHOR32,. + 0
 12707              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 12708 0000 00       		.space	1
 12709              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 12710              		.set	.LANCHOR28,. + 0
 12713              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 12714 0000 00       		.space	1
 12715              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 12716              		.set	.LANCHOR27,. + 0
 12719              	_ZZ16Update_feedbackLvE9lastShift:
 12720 0000 00       		.space	1
 12721              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 12722              		.align	2
 12723              		.set	.LANCHOR45,. + 0
 12726              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 12727 0000 00000000 		.space	4
 12728              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 12729              		.align	2
 12730              		.set	.LANCHOR42,. + 0
 12733              	_ZZ16Update_feedbackRvE13feedbackR_new:
 12734 0000 00000000 		.space	4
 12735              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 12736              		.align	2
 12737              		.set	.LANCHOR41,. + 0
 12740              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 12741 0000 00000000 		.space	4
 12742              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 12743              		.set	.LANCHOR44,. + 0
 12746              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 12747 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 377


 12748              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 12749              		.set	.LANCHOR40,. + 0
 12752              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 12753 0000 00       		.space	1
 12754              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 12755              		.set	.LANCHOR39,. + 0
 12758              	_ZZ16Update_feedbackRvE9lastShift:
 12759 0000 00       		.space	1
 12760              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 12761              		.align	2
 12762              		.set	.LANCHOR10,. + 0
 12765              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 12766 0000 00000000 		.space	4
 12767              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 12768              		.align	2
 12769              		.set	.LANCHOR11,. + 0
 12772              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 12773 0000 00000000 		.space	4
 12774              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 12775              		.align	2
 12776              		.set	.LANCHOR15,. + 0
 12779              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 12780 0000 00000000 		.space	4
 12781              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 12782              		.set	.LANCHOR9,. + 0
 12785              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 12786 0000 00       		.space	1
 12787              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 12788              		.set	.LANCHOR14,. + 0
 12791              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 12792 0000 00       		.space	1
 12793              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 12794              		.align	2
 12795              		.set	.LANCHOR6,. + 0
 12798              	_ZZ17Update_DelayTimeLvE8counterL:
 12799 0000 00000000 		.space	4
 12800              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 12801              		.set	.LANCHOR8,. + 0
 12804              	_ZZ17Update_DelayTimeLvE9lastShift:
 12805 0000 00       		.space	1
 12806              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 12807              		.align	2
 12808              		.set	.LANCHOR24,. + 0
 12811              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 12812 0000 00000000 		.space	4
 12813              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 12814              		.align	2
 12815              		.set	.LANCHOR21,. + 0
 12818              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 12819 0000 00000000 		.space	4
 12820              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 12821              		.align	2
 12822              		.set	.LANCHOR22,. + 0
 12825              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 12826 0000 00000000 		.space	4
 12827              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 12828              		.set	.LANCHOR23,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 378


 12831              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 12832 0000 00       		.space	1
 12833              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 12834              		.set	.LANCHOR20,. + 0
 12837              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 12838 0000 00       		.space	1
 12839              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 12840              		.align	2
 12841              		.set	.LANCHOR18,. + 0
 12844              	_ZZ17Update_DelayTimeRvE8counterR:
 12845 0000 00000000 		.space	4
 12846              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 12847              		.set	.LANCHOR19,. + 0
 12850              	_ZZ17Update_DelayTimeRvE9lastShift:
 12851 0000 00       		.space	1
 12852              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 12853              		.align	2
 12854              		.set	.LANCHOR81,. + 0
 12857              	_ZZ18Update_filterXfadevE15PostFilters_new:
 12858 0000 00000000 		.space	4
 12859              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 12860              		.align	2
 12861              		.set	.LANCHOR78,. + 0
 12864              	_ZZ18Update_filterXfadevE15filterXfade_new:
 12865 0000 00000000 		.space	4
 12866              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 12867              		.align	2
 12868              		.set	.LANCHOR83,. + 0
 12871              	_ZZ18Update_filterXfadevE16filterXfade_last:
 12872 0000 00000000 		.space	4
 12873              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 12874              		.set	.LANCHOR80,. + 0
 12877              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 12878 0000 00       		.space	1
 12879              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 12880              		.set	.LANCHOR77,. + 0
 12883              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 12884 0000 00       		.space	1
 12885              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 12886              		.set	.LANCHOR76,. + 0
 12889              	_ZZ18Update_filterXfadevE9lastShift:
 12890 0000 00       		.space	1
 12891              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 12892              		.align	2
 12893              		.set	.LANCHOR90,. + 0
 12896              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 12897 0000 00000000 		.space	4
 12898              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 12899              		.align	2
 12900              		.set	.LANCHOR73,. + 0
 12903              	_ZZ20Update_crossfeedbackvE11modRate_new:
 12904 0000 00000000 		.space	4
 12905              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 12906              		.set	.LANCHOR72,. + 0
 12909              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 12910 0000 00       		.space	1
 12911              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 379


 12912              		.align	2
 12913              		.set	.LANCHOR70,. + 0
 12916              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 12917 0000 00000000 		.space	4
 12918              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 12919              		.align	2
 12920              		.set	.LANCHOR74,. + 0
 12923              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 12924 0000 00000000 		.space	4
 12925              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 12926              		.set	.LANCHOR69,. + 0
 12929              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 12930 0000 00       		.space	1
 12931              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 12932              		.set	.LANCHOR68,. + 0
 12935              	_ZZ20Update_crossfeedbackvE9lastShift:
 12936 0000 00       		.space	1
 12937              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 12938              		.align	2
 12939              		.set	.LANCHOR126,. + 0
 12942              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 12943 0000 00000000 		.space	4
 12944              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 12945              		.align	2
 12946              		.set	.LANCHOR127,. + 0
 12949              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 12950 0000 00000000 		.space	4
 12951              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 12952              		.align	2
 12953              		.set	.LANCHOR112,. + 0
 12956              	_ZZL13AudioCallbackPfS_jE7Counter:
 12957 0000 00000000 		.space	4
 12958              		.section	.bss.crossfeedback,"aw",%nobits
 12959              		.align	2
 12960              		.set	.LANCHOR71,. + 0
 12963              	crossfeedback:
 12964 0000 00000000 		.space	4
 12965              		.section	.bss.crossfeedback_CV,"aw",%nobits
 12966              		.align	2
 12969              	crossfeedback_CV:
 12970 0000 00000000 		.space	4
 12971              		.section	.bss.delayL,"aw",%nobits
 12972              		.align	2
 12973              		.set	.LANCHOR0,. + 0
 12976              	delayL:
 12977 0000 00000000 		.space	292
 12977      00000000 
 12977      00000000 
 12977      00000000 
 12977      00000000 
 12978              		.section	.bss.delayR,"aw",%nobits
 12979              		.align	2
 12980              		.set	.LANCHOR1,. + 0
 12983              	delayR:
 12984 0000 00000000 		.space	292
 12984      00000000 
 12984      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 380


 12984      00000000 
 12984      00000000 
 12985              		.section	.bss.delayTimeL_CV,"aw",%nobits
 12986              		.align	2
 12987              		.set	.LANCHOR5,. + 0
 12990              	delayTimeL_CV:
 12991 0000 00000000 		.space	4
 12992              		.section	.bss.delayTimeR_CV,"aw",%nobits
 12993              		.align	2
 12994              		.set	.LANCHOR17,. + 0
 12997              	delayTimeR_CV:
 12998 0000 00000000 		.space	4
 12999              		.section	.bss.delaysL_REV,"aw",%nobits
 13000              		.align	2
 13001              		.set	.LANCHOR2,. + 0
 13004              	delaysL_REV:
 13005 0000 00000000 		.space	8
 13005      00000000 
 13006              		.section	.bss.delaysR_REV,"aw",%nobits
 13007              		.align	2
 13008              		.set	.LANCHOR3,. + 0
 13011              	delaysR_REV:
 13012 0000 00000000 		.space	8
 13012      00000000 
 13013              		.section	.bss.div_L,"aw",%nobits
 13016              	div_L:
 13017 0000 00       		.space	1
 13018              		.section	.bss.div_R,"aw",%nobits
 13021              	div_R:
 13022 0000 00       		.space	1
 13023              		.section	.bss.drywet_CV,"aw",%nobits
 13024              		.align	2
 13025              		.set	.LANCHOR50,. + 0
 13028              	drywet_CV:
 13029 0000 00000000 		.space	4
 13030              		.section	.bss.feedbackL,"aw",%nobits
 13031              		.align	2
 13032              		.set	.LANCHOR31,. + 0
 13035              	feedbackL:
 13036 0000 00000000 		.space	4
 13037              		.section	.bss.feedbackL_CV,"aw",%nobits
 13038              		.align	2
 13039              		.set	.LANCHOR26,. + 0
 13042              	feedbackL_CV:
 13043 0000 00000000 		.space	4
 13044              		.section	.bss.feedbackR,"aw",%nobits
 13045              		.align	2
 13046              		.set	.LANCHOR43,. + 0
 13049              	feedbackR:
 13050 0000 00000000 		.space	4
 13051              		.section	.bss.feedbackR_CV,"aw",%nobits
 13052              		.align	2
 13053              		.set	.LANCHOR38,. + 0
 13056              	feedbackR_CV:
 13057 0000 00000000 		.space	4
 13058              		.section	.bss.filterXfade,"aw",%nobits
 13059              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 381


 13060              		.set	.LANCHOR79,. + 0
 13063              	filterXfade:
 13064 0000 00000000 		.space	4
 13065              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13066              		.align	2
 13067              		.set	.LANCHOR84,. + 0
 13070              	modulation_CV_Raw:
 13071 0000 00000000 		.space	4
 13072              		.section	.bss.mute,"aw",%nobits
 13073              		.set	.LANCHOR111,. + 0
 13076              	mute:
 13077 0000 00       		.space	1
 13078              		.section	.bss.save_flag,"aw",%nobits
 13079              		.align	2
 13080              		.set	.LANCHOR113,. + 0
 13083              	save_flag:
 13084 0000 00       		.space	1
 13085              		.section	.bss.shift,"aw",%nobits
 13086              		.set	.LANCHOR7,. + 0
 13089              	shift:
 13090 0000 00       		.space	1
 13091              		.section	.bss.syncMode,"aw",%nobits
 13092              		.set	.LANCHOR13,. + 0
 13095              	syncMode:
 13096 0000 00       		.space	1
 13097              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13098              		.align	2
 13099              		.set	.LANCHOR89,. + 0
 13102              	tempoLED_BASE:
 13103 0000 00000000 		.space	72
 13103      00000000 
 13103      00000000 
 13103      00000000 
 13103      00000000 
 13104              		.section	.bss.width_CV,"aw",%nobits
 13105              		.align	2
 13106              		.set	.LANCHOR58,. + 0
 13109              	width_CV:
 13110 0000 00000000 		.space	4
 13111              		.section	.data.drywet,"aw"
 13112              		.align	2
 13113              		.set	.LANCHOR55,. + 0
 13116              	drywet:
 13117 0000 0000003F 		.word	1056964608
 13118              		.section	.data.width,"aw"
 13119              		.align	2
 13120              		.set	.LANCHOR63,. + 0
 13123              	width:
 13124 0000 0000803F 		.word	1065353216
 13125              		.section	.rodata.CSWTCH.339,"a"
 13126              		.align	2
 13127              		.set	.LANCHOR25,. + 0
 13130              	CSWTCH.339:
 13131 0000 0000C03F 		.word	1069547520
 13132 0004 00000040 		.word	1073741824
 13133 0008 00004040 		.word	1077936128
 13134              		.section	.rodata._ZL18defaultAltControls,"a"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 382


 13135              		.align	2
 13136              		.set	.LANCHOR107,. + 0
 13139              	_ZL18defaultAltControls:
 13140 0000 00650148 		.word	1208050944
 13141 0004 0000803F 		.word	1065353216
 13142 0008 00000000 		.word	0
 13143 000c 9A99A140 		.word	1084332442
 13144 0010 00004843 		.word	1128792064
 13145 0014 00803B46 		.word	1178304512
 13146 0018 00000000 		.word	0
 13147 001c 00000000 		.word	0
 13148              		.section	.sdram_bss,"aw"
 13149              		.align	2
 13152              	delMemsR_REV:
 13153 0000 00000000 		.space	2400040
 13153      00000000 
 13153      00000000 
 13153      00000000 
 13153      00000000 
 13156              	delMemsL_REV:
 13157 249f28 00000000 		.space	2400040
 13157      00000000 
 13157      00000000 
 13157      00000000 
 13157      00000000 
 13160              	delMemsR:
 13161 493e50 00000000 		.space	6912136
 13161      00000000 
 13161      00000000 
 13161      00000000 
 13161      00000000 
 13164              	delMemsL:
 13165 b2b6d8 00000000 		.space	6912136
 13165      00000000 
 13165      00000000 
 13165      00000000 
 13165      00000000 
 13166              		.text
 13167              	.Letext0:
 13168              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 13169              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13170              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13171              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13172              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13173              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13174              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13175              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13176              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13177              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13178              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13179              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13180              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13181              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13182              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13183              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13184              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13185              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 383


 13186              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13187              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13188              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13189              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13190              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13191              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13192              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13193              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13194              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13195              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 13196              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13197              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13198              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13199              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13200              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13201              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13202              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13203              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13204              		.file 64 "../libdaisy/src/daisy_core.h"
 13205              		.file 65 "../libdaisy/src/per/tim.h"
 13206              		.file 66 "../libdaisy/src/per/sai.h"
 13207              		.file 67 "../libdaisy/src/util/wav_format.h"
 13208              		.file 68 "../libdaisy/src/per/qspi.h"
 13209              		.file 69 "../libdaisy/src/per/gpio.h"
 13210              		.file 70 "../libdaisy/src/dev/sdram.h"
 13211              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13212              		.file 72 "<built-in>"
 13213              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 13214              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 13215              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 13216              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 13217              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 13218              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 13219              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 13220              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 13221              		.file 81 "../libdaisy/src/sys/fatfs.h"
 13222              		.file 82 "../DaisySP/Source/Control/adenv.h"
 13223              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 13224              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 13225              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 13226              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 13227              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 13228              		.file 88 "QSPI_Settings.h"
 13229              		.file 89 "scale.h"
 13230              		.file 90 "constants.h"
 13231              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 384


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13164  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13160  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13156  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13152  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1599   .text._Z17Update_DelayTimeLv:00000000000001c0 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 385


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1628   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1636   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1661   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1667   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:1675   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2098   .text._Z17Update_DelayTimeRv:0000000000000174 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2123   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2131   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2156   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2162   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2170   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2559   .text._Z16Update_feedbackLv:0000000000000164 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2586   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2594   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2619   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2625   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:2633   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3023   .text._Z16Update_feedbackRv:000000000000016c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3050   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3058   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3083   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3089   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3097   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3537   .text._Z13Update_drywetv:00000000000001c8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3572   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3580   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3605   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3611   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:3619   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4008   .text._Z12Update_widthv:0000000000000150 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4032   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4040   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4366   .text._Z20Update_crossfeedbackv:000000000000010c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4385   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4393   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4691   .text._Z18Update_filterXfadev:0000000000000110 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4713   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4721   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4751   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4759   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4767   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4924   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4936   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:4944   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:5021   .text._Z11UpdateClockv:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:5031   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:5039   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:5157   .text._Z19Update_BaseTempoLEDv:000000000000005c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:5167   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:5175   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:5872   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:5911   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:5919   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:6797   .text.startup.main:0000000000000348 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:6831   .text.startup.main:00000000000003c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7183   .text.startup.main:000000000000058c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7876   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 386


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7201   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7209   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7271   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7282   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7290   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7393   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7405   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7413   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7844   .text._Z14Update_Buttonsv:00000000000001a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7869   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7988   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:7996   .text._ZL13AudioCallbackPfS_j:000000000000005c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:8025   .text._ZL13AudioCallbackPfS_j:0000000000000080 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:8037   .text._ZL13AudioCallbackPfS_j:0000000000000094 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:8790   .text._ZL13AudioCallbackPfS_j:0000000000000414 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:8815   .text._ZL13AudioCallbackPfS_j:0000000000000470 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:9912   .text._ZL13AudioCallbackPfS_j:00000000000007c0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:9946   .text._ZL13AudioCallbackPfS_j:000000000000083c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:10826  .text._ZL13AudioCallbackPfS_j:0000000000000b9c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:10855  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:10863  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:10897  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:10905  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:10952  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:10957  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:10965  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:11049  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:11054  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:11062  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:11152  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:11157  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:11165  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:11195  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:11200  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:11207  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12117  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000258 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12191  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12241  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12248  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12255  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12322  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12315  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12308  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13083  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12287  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12260  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13076  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13089  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13095  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13070  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12281  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13021  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13016  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13063  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13109  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13123  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13028  .bss.drywet_CV:0000000000000000 drywet_CV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 387


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13116  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12969  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12963  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13056  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13049  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13042  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13035  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12997  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12990  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13102  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12329  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12301  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12294  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12267  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12274  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13011  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13004  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12983  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12976  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12237  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12244  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12251  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12261  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12263  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12270  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12277  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12288  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12290  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12297  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12304  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12311  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12318  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12325  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12332  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12336  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12339  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12343  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12346  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12350  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12353  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12357  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12360  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12364  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12367  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12371  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12374  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12378  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12381  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12385  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12388  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12392  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12395  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12399  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12402  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12406  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12409  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12413  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 388


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12416  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12420  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12423  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12427  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12430  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12434  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12437  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12441  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12444  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12448  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12451  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12455  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12458  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12462  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12465  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12469  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12472  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12476  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12479  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12483  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12486  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12490  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12493  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12497  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12500  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12504  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12507  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12511  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12514  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12518  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12521  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12525  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12528  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12532  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12535  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12539  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12542  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12546  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12549  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12553  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12556  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12560  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12563  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12567  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12570  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12574  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12577  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12581  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 _ZZ11UpdateClockvE10divCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12584  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12588  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12591  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12595  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12601  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12602  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12607  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12608  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12613  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 389


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12614  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12616  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12620  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12626  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12627  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12629  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12633  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12636  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12640  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12646  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12647  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12649  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12653  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12659  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12660  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12662  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12666  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12669  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12673  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12676  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12680  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12683  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12687  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12690  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12694  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12697  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12701  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12707  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12708  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12713  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12714  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12719  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12720  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12722  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12726  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12729  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12733  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12736  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12740  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12746  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12747  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12752  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12753  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12758  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12759  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12761  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12765  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12768  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12772  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12775  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12779  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12785  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12786  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12791  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12792  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12794  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12798  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 390


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12804  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12805  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12807  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12811  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12814  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12818  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12821  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12825  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12831  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12832  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12837  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12838  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12840  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12844  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12850  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12851  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12853  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12857  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12860  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12864  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12867  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12871  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12877  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12878  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12883  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12884  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12889  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12890  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12892  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12896  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12899  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12903  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12909  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12910  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12912  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12916  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12919  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12923  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12929  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12930  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12935  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12936  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12938  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12942  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12945  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12949  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12952  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12956  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12959  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12966  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12972  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12979  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12986  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:12993  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13000  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13007  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13017  .bss.div_L:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 391


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13022  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13024  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13031  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13038  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13045  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13052  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13059  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13066  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13077  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13079  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13090  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13096  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13098  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13105  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13112  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13119  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13126  .rodata.CSWTCH.339:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13130  .rodata.CSWTCH.339:0000000000000000 CSWTCH.339
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13135  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13139  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s:13149  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN8Taptempo12getTapLengthEv
_ZN10DelayMulti12SetDelayTimeEffb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6Switch8DebounceEv
_ZN8TempoLED10resetPhaseEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccMxIJg4.s 			page 392


_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
