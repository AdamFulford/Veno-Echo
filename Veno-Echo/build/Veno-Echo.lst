ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB793:
  61              	.LBI793:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE793:
  66              	.LBB794:
  67              	.LBI794:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE794:
  72              	.LBB795:
  73              	.LBI795:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE795:
  78              	.LBB796:
  79              	.LBI796:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE796:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_;
  37:taptempo.h    ****         bool tapflag_;
  38:taptempo.h    ****         float tap_tolerance_;
  39:taptempo.h    ****         double tempo_, tapRatio_;
  40:taptempo.h    **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 14


  41:taptempo.h    ****     public:
  42:taptempo.h    **** 
  43:taptempo.h    ****     Taptempo()  //default constructor
  44:taptempo.h    ****     {
  45:taptempo.h    ****         tapflag_ = false;
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
  47:taptempo.h    ****         maxtap_ = 2000;
  48:taptempo.h    ****         mintap_ = 80;
  49:taptempo.h    ****         lastTapLength_ = 0;
  50:taptempo.h    ****         tempo_ = 500.0f;
  51:taptempo.h    ****         lastTime_ = 0;
  52:taptempo.h    ****         currentTime_ = 0;
  53:taptempo.h    ****         tapRatio_ = 1.0f;
  54:taptempo.h    ****         clockLength_ = 0;
  55:taptempo.h    ****         lastClockLength_ = 0;
  56:taptempo.h    ****         clockThresh_ = 10; //ms change
  57:taptempo.h    ****     }
  58:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 58 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 58 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 15


  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB797:
 285              	.LBI797:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 287              		.loc 15 16 5 view .LVU27
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 16


 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE797:
 290              	.LBB798:
 291              	.LBI798:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE798:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 17


  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB799:
 321              	.LBI799:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE799:
 325              	.LBB800:
 326              	.LBI800:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE800:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
 349              		.file 17 "DelayMulti.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 18


   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB801:
 356              	.LBI801:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 19


  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB802:
 359              	.LBI802:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE802:
 363              	.LBB803:
 364              	.LBI803:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE803:
 368              	.LBE801:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4914:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 20


  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4914:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4917:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 21


   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4917:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 22


   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 23


  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 24


 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 143:Veno-Echo.cpp **** 
 144:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 145:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr LPF_Env;
 148:Veno-Echo.cpp **** static Adsr HPF_Env;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 151:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade WidthXfade;
 154:Veno-Echo.cpp **** 
 155:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 156:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 157:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 158:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 159:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 160:Veno-Echo.cpp **** 
 161:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 162:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 166:Veno-Echo.cpp **** 
 167:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 168:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 169:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 170:Veno-Echo.cpp **** 
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** //Gate inputs
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 25


 175:Veno-Echo.cpp **** Switch ReverseGateL;
 176:Veno-Echo.cpp **** Switch ReverseGateR;
 177:Veno-Echo.cpp **** 
 178:Veno-Echo.cpp **** //Switch TapButton;
 179:Veno-Echo.cpp **** Switch Sync;
 180:Veno-Echo.cpp **** Switch ClockIn;
 181:Veno-Echo.cpp **** 
 182:Veno-Echo.cpp **** //Tap tempo
 183:Veno-Echo.cpp **** Taptempo BaseTempo; 
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** Settings AltControls;
 186:Veno-Echo.cpp **** 
 187:Veno-Echo.cpp **** //default alt control values
 188:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 189:Veno-Echo.cpp **** {
 190:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 191:Veno-Echo.cpp ****     1.0f,   //tapRatio
 192:Veno-Echo.cpp ****     0.0f,   //ModDepth
 193:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 194:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 195:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 196:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 197:Veno-Echo.cpp ****     0.0f
 198:Veno-Echo.cpp **** };
 199:Veno-Echo.cpp **** 
 200:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 201:Veno-Echo.cpp **** void Update_DelayTimeL();
 202:Veno-Echo.cpp **** 
 203:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 204:Veno-Echo.cpp **** void Update_DelayTimeR();
 205:Veno-Echo.cpp **** 
 206:Veno-Echo.cpp **** void Update_feedbackL_CV();
 207:Veno-Echo.cpp **** void Update_feedbackL();
 208:Veno-Echo.cpp **** 
 209:Veno-Echo.cpp **** void Update_feedbackR_CV();
 210:Veno-Echo.cpp **** void Update_feedbackR();
 211:Veno-Echo.cpp **** 
 212:Veno-Echo.cpp **** void Update_drywet_CV();
 213:Veno-Echo.cpp **** void Update_drywet();
 214:Veno-Echo.cpp **** 
 215:Veno-Echo.cpp **** void Update_width_CV();
 216:Veno-Echo.cpp **** void Update_width();
 217:Veno-Echo.cpp **** 
 218:Veno-Echo.cpp **** void Update_crossfeedback();
 219:Veno-Echo.cpp **** void Update_filterXfade();
 220:Veno-Echo.cpp **** 
 221:Veno-Echo.cpp **** void Update_Buttons();
 222:Veno-Echo.cpp **** void Update_DelayBaseTempo();
 223:Veno-Echo.cpp **** void Update_BaseTempoLED();
 224:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 225:Veno-Echo.cpp **** void Update_Mod();
 226:Veno-Echo.cpp **** void GetModCV();
 227:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 228:Veno-Echo.cpp **** void UpdateClock();
 229:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 230:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 231:Veno-Echo.cpp **** void TurnOnAllLEDs();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 26


 232:Veno-Echo.cpp **** void ResetAllLEDs();
 233:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 234:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 235:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 236:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 237:Veno-Echo.cpp **** 
 238:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 239:Veno-Echo.cpp **** {
 240:Veno-Echo.cpp **** 
 241:Veno-Echo.cpp **** /*
 242:Veno-Echo.cpp **** static uint32_t funcLength{};
 243:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 244:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 245:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 246:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 247:Veno-Echo.cpp **** 
 248:Veno-Echo.cpp **** */
 249:Veno-Echo.cpp **** 
 250:Veno-Echo.cpp **** static int Counter{};
 251:Veno-Echo.cpp **** 
 252:Veno-Echo.cpp **** /*
 253:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 254:Veno-Echo.cpp **** 
 255:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 256:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 257:Veno-Echo.cpp ****     {
 258:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 259:Veno-Echo.cpp ****     }
 260:Veno-Echo.cpp **** 
 261:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 262:Veno-Echo.cpp ****     {
 263:Veno-Echo.cpp ****         minFuncLength = funcLength;
 264:Veno-Echo.cpp ****     }
 265:Veno-Echo.cpp **** 
 266:Veno-Echo.cpp **** */
 267:Veno-Echo.cpp **** 
 268:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 269:Veno-Echo.cpp **** 
 270:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 271:Veno-Echo.cpp **** {
 272:Veno-Echo.cpp ****     /*
 273:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 274:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 275:Veno-Echo.cpp ****         //init timeofCall as current time
 276:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 277:Veno-Echo.cpp **** 
 278:Veno-Echo.cpp ****         //wait for random Dither time
 279:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 280:Veno-Echo.cpp ****         {}
 281:Veno-Echo.cpp ****     */
 282:Veno-Echo.cpp **** 
 283:Veno-Echo.cpp ****         switch (Counter)
 284:Veno-Echo.cpp ****         {
 285:Veno-Echo.cpp ****             case 0:
 286:Veno-Echo.cpp ****                 Update_Buttons();
 287:Veno-Echo.cpp ****                 GetModCV();
 288:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 27


 289:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 290:Veno-Echo.cpp ****             break;
 291:Veno-Echo.cpp **** 
 292:Veno-Echo.cpp ****             case 1:
 293:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 294:Veno-Echo.cpp ****             break;
 295:Veno-Echo.cpp **** 
 296:Veno-Echo.cpp ****             case 2:
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 298:Veno-Echo.cpp ****             break;
 299:Veno-Echo.cpp **** 
 300:Veno-Echo.cpp ****             case 3:
 301:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 302:Veno-Echo.cpp ****             break;
 303:Veno-Echo.cpp **** 
 304:Veno-Echo.cpp ****             case 4:
 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 306:Veno-Echo.cpp ****             break;
 307:Veno-Echo.cpp **** 
 308:Veno-Echo.cpp ****             case 5:
 309:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 310:Veno-Echo.cpp ****             break;
 311:Veno-Echo.cpp **** 
 312:Veno-Echo.cpp ****             case 6:
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 314:Veno-Echo.cpp ****             break;
 315:Veno-Echo.cpp **** 
 316:Veno-Echo.cpp ****             case 7:
 317:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 318:Veno-Echo.cpp ****             break;
 319:Veno-Echo.cpp **** 
 320:Veno-Echo.cpp ****             case 8:
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 322:Veno-Echo.cpp ****             break;
 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****             case 9:
 325:Veno-Echo.cpp ****                 Update_drywet_CV();
 326:Veno-Echo.cpp ****             break;
 327:Veno-Echo.cpp **** 
 328:Veno-Echo.cpp ****             case 10:
 329:Veno-Echo.cpp ****                 Update_drywet();
 330:Veno-Echo.cpp ****             break;
 331:Veno-Echo.cpp **** 
 332:Veno-Echo.cpp ****             case 11:
 333:Veno-Echo.cpp ****                 Update_width_CV();
 334:Veno-Echo.cpp ****             break;
 335:Veno-Echo.cpp **** 
 336:Veno-Echo.cpp ****             case 12:
 337:Veno-Echo.cpp ****                 Update_width();
 338:Veno-Echo.cpp ****             break;
 339:Veno-Echo.cpp **** 
 340:Veno-Echo.cpp ****             case 13:
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
 342:Veno-Echo.cpp ****             break;
 343:Veno-Echo.cpp **** 
 344:Veno-Echo.cpp ****             case 14:
 345:Veno-Echo.cpp ****                 Update_filterXfade();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 28


 346:Veno-Echo.cpp ****             break;
 347:Veno-Echo.cpp ****         }
 348:Veno-Echo.cpp **** }
 349:Veno-Echo.cpp **** 
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 351:Veno-Echo.cpp ****     {   
 352:Veno-Echo.cpp ****         UpdateClock(); 
 353:Veno-Echo.cpp ****         Update_Mod();
 354:Veno-Echo.cpp **** 
 355:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 356:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 357:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 358:Veno-Echo.cpp ****         
 359:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 360:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 361:Veno-Echo.cpp **** 
 362:Veno-Echo.cpp ****         //set xfade positions      
 363:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 364:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 365:Veno-Echo.cpp ****         
 366:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 367:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 368:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 369:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 370:Veno-Echo.cpp **** 
 371:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 372:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 373:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 374:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 375:Veno-Echo.cpp **** 
 376:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 377:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 378:Veno-Echo.cpp **** 
 379:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 380:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 381:Veno-Echo.cpp **** 
 382:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 383:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 384:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 385:Veno-Echo.cpp **** 
 386:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 387:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 388:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 389:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 390:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 391:Veno-Echo.cpp **** 
 392:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 393:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 394:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 395:Veno-Echo.cpp **** 
 396:Veno-Echo.cpp ****         //Get combined output from all delay heads
 397:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 398:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 399:Veno-Echo.cpp **** 
 400:Veno-Echo.cpp ****         //Update Base Tempo LED
 401:Veno-Echo.cpp ****         Update_BaseTempoLED();
 402:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 29


 403:Veno-Echo.cpp ****         //hard limit
 404:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 405:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 406:Veno-Echo.cpp **** 
 407:Veno-Echo.cpp **** if(!PostFilters)
 408:Veno-Echo.cpp **** {
 409:Veno-Echo.cpp **** //****************************************************************************************
 410:Veno-Echo.cpp ****         //pre filters
 411:Veno-Echo.cpp ****         //process LPF
 412:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 413:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 414:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 415:Veno-Echo.cpp **** 
 416:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 417:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 418:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 419:Veno-Echo.cpp ****         
 420:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 421:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 422:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 423:Veno-Echo.cpp **** 
 424:Veno-Echo.cpp ****         //hard limit
 425:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 426:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 427:Veno-Echo.cpp **** 
 428:Veno-Echo.cpp ****         //process HPF
 429:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 430:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 431:Veno-Echo.cpp **** 
 432:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 433:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 434:Veno-Echo.cpp **** 
 435:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 436:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 437:Veno-Echo.cpp **** 
 438:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 439:Veno-Echo.cpp **** 
 440:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 441:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 442:Veno-Echo.cpp **** 
 443:Veno-Echo.cpp **** //****************************************************************************************
 444:Veno-Echo.cpp **** }
 445:Veno-Echo.cpp **** 
 446:Veno-Echo.cpp **** else
 447:Veno-Echo.cpp **** {
 448:Veno-Echo.cpp ****     /* code */
 449:Veno-Echo.cpp **** }
 450:Veno-Echo.cpp **** 
 451:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 452:Veno-Echo.cpp ****         static float RNegFB{};
 453:Veno-Echo.cpp **** 
 454:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 455:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 456:Veno-Echo.cpp ****             LNegFB = 0.0f;
 457:Veno-Echo.cpp ****         
 458:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 459:Veno-Echo.cpp ****             RNegFB = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 30


 460:Veno-Echo.cpp **** 
 461:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 462:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 463:Veno-Echo.cpp **** 
 464:Veno-Echo.cpp ****         //crossfeedback:
 465:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 466:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 467:Veno-Echo.cpp **** 
 468:Veno-Echo.cpp **** 
 469:Veno-Echo.cpp ****         //get envelopes for feedback signals
 470:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 471:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 472:Veno-Echo.cpp **** 
 473:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 474:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 475:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 476:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 477:Veno-Echo.cpp ****             else LNegFB = 0.0;
 478:Veno-Echo.cpp ****             
 479:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 480:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 481:Veno-Echo.cpp ****             else RNegFB = 0.0;
 482:Veno-Echo.cpp **** 
 483:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 484:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 485:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 486:Veno-Echo.cpp ****  
 487:Veno-Echo.cpp ****         //hard limit
 488:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 489:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 490:Veno-Echo.cpp **** 
 491:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 492:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 493:Veno-Echo.cpp **** 
 494:Veno-Echo.cpp ****         // floats for wet dry mix
 495:Veno-Echo.cpp ****         float mixL;
 496:Veno-Echo.cpp ****         float mixR;
 497:Veno-Echo.cpp **** 
 498:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 499:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 500:Veno-Echo.cpp **** 
 501:Veno-Echo.cpp ****         //hard limit
 502:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 503:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 504:Veno-Echo.cpp **** 
 505:Veno-Echo.cpp **** if(PostFilters)
 506:Veno-Echo.cpp **** {
 507:Veno-Echo.cpp ****     //****************************************************************************************
 508:Veno-Echo.cpp ****         //post filters
 509:Veno-Echo.cpp ****         //process LPF
 510:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 511:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 512:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 513:Veno-Echo.cpp **** 
 514:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 515:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 516:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 31


 517:Veno-Echo.cpp ****         
 518:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 519:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 520:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 521:Veno-Echo.cpp **** 
 522:Veno-Echo.cpp ****         //hard limit
 523:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 524:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 525:Veno-Echo.cpp **** 
 526:Veno-Echo.cpp ****         //process HPF
 527:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 528:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 529:Veno-Echo.cpp **** 
 530:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 531:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 532:Veno-Echo.cpp **** 
 533:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 534:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 535:Veno-Echo.cpp **** 
 536:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 537:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 538:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 539:Veno-Echo.cpp **** 
 540:Veno-Echo.cpp ****     //****************************************************************************************
 541:Veno-Echo.cpp **** }
 542:Veno-Echo.cpp **** else
 543:Veno-Echo.cpp **** {
 544:Veno-Echo.cpp ****     /* code */
 545:Veno-Echo.cpp **** }
 546:Veno-Echo.cpp ****         if(drywet < 0.5f)
 547:Veno-Echo.cpp ****         {
 548:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 549:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 550:Veno-Echo.cpp ****         }
 551:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 552:Veno-Echo.cpp ****         {
 553:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 554:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 555:Veno-Echo.cpp ****         }
 556:Veno-Echo.cpp ****         else
 557:Veno-Echo.cpp ****         {
 558:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 559:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 560:Veno-Echo.cpp ****         }
 561:Veno-Echo.cpp **** 
 562:Veno-Echo.cpp ****         //send mixes to outputs
 563:Veno-Echo.cpp ****         if(mute)
 564:Veno-Echo.cpp ****         {
 565:Veno-Echo.cpp ****             out[i] = 0.0f;
 566:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 567:Veno-Echo.cpp ****         }
 568:Veno-Echo.cpp ****         else
 569:Veno-Echo.cpp ****         {
 570:Veno-Echo.cpp ****             out[i] = mixL;
 571:Veno-Echo.cpp ****             out[i+1] = mixR;
 572:Veno-Echo.cpp ****         }
 573:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 32


 574:Veno-Echo.cpp ****         //write to DAC for debug
 575:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 576:Veno-Echo.cpp **** 
 577:Veno-Echo.cpp ****     }
 578:Veno-Echo.cpp **** 
 579:Veno-Echo.cpp **** }
 580:Veno-Echo.cpp **** 
 581:Veno-Echo.cpp **** void InitDelays(float samplerate)
 582:Veno-Echo.cpp **** {
 439              		.loc 20 582 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 583:Veno-Echo.cpp **** 
 584:Veno-Echo.cpp ****     //Init fwd delays
 585:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 585 5 view .LVU50
 444              	.LBB804:
 445              	.LBI804:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB805:
 448              	.LBB806:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE806:
 453              	.LBE805:
 454              	.LBE804:
 582:Veno-Echo.cpp **** 
 455              		.loc 20 582 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB811:
 470              	.LBB810:
 471              	.LBB807:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 33


  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE807:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB808:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE808:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB809:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 34


 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE809:
 525              	.LBE810:
 526              	.LBE811:
 527              	.LBB812:
 528              	.LBB813:
 529              	.LBB814:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE814:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB815:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE815:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB816:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 35


 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE816:
 576              	.LBE813:
 577              	.LBE812:
 586:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 587:Veno-Echo.cpp **** 
 588:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 589:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 589 5 is_stmt 1 view .LVU91
 590:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 590 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 591:Veno-Echo.cpp **** 
 592:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 592 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 589:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 589 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 590:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 590 5 is_stmt 1 view .LVU95
 588              	.LBB817:
 589              	.LBB818:
 590              	.LBB819:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 36


  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE819:
 594              	.LBE818:
 595              	.LBE817:
 590:Veno-Echo.cpp **** 
 596              		.loc 20 590 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 592 5 is_stmt 1 view .LVU98
 599              		.loc 20 592 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 592 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 593:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 593 5 is_stmt 1 view .LVU101
 611              		.loc 20 593 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB831:
 618              	.LBB826:
 619              	.LBB821:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE821:
 623              	.LBE826:
 624              	.LBE831:
 625              		.loc 20 593 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 594:Veno-Echo.cpp **** 
 595:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 596:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 597:Veno-Echo.cpp **** 
 598:Veno-Echo.cpp ****     //Init rev delays
 599:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 599 5 is_stmt 1 view .LVU105
 632              	.LBB832:
 633              	.LBI817:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB827:
 636              	.LBI818:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 37


  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB822:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB820:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE820:
 660              	.LBE822:
 661              	.LBE827:
 662              	.LBE832:
 663              	.LBB833:
 664              	.LBB834:
 665              	.LBB835:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE835:
 675              	.LBE834:
 676              	.LBE833:
 677              	.LBB858:
 678              	.LBB828:
 679              	.LBB823:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 38


 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE823:
 683              	.LBE828:
 684              	.LBE858:
 685              	.LBB859:
 686              	.LBB848:
 687              	.LBB838:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE838:
 691              	.LBE848:
 692              	.LBE859:
 693              	.LBB860:
 694              	.LBB829:
 695              	.LBB824:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE824:
 714              	.LBE829:
 715              	.LBE860:
 600:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 600 5 is_stmt 1 view .LVU128
 717              	.LBB861:
 718              	.LBI833:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB849:
 721              	.LBI834:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 39


 723              	.LBB839:
 724              	.LBB836:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE836:
 727              	.LBE839:
 728              	.LBE849:
 729              	.LBE861:
 730              	.LBB862:
 731              	.LBB830:
 732              	.LBB825:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE825:
 742              	.LBE830:
 743              	.LBE862:
 744              	.LBB863:
 745              	.LBB850:
 746              	.LBB840:
 747              	.LBB837:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE837:
 756              	.LBE840:
 757              	.LBE850:
 758              	.LBE863:
 601:Veno-Echo.cpp **** 
 602:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 603:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 603 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB864:
 762              	.LBB851:
 763              	.LBB841:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE841:
 767              	.LBE851:
 768              	.LBE864:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 40


 769              	.LBB865:
 770              	.LBB866:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE866:
 780              	.LBE865:
 781              	.LBB880:
 782              	.LBB852:
 783              	.LBB842:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE842:
 787              	.LBE852:
 788              	.LBE880:
 789              	.LBB881:
 790              	.LBB875:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE875:
 794              	.LBE881:
 795              	.LBB882:
 796              	.LBB853:
 797              	.LBB843:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE843:
 803              	.LBE853:
 804              	.LBE882:
 805              	.LBB883:
 806              	.LBB876:
 807              	.LBB867:
 808              	.LBB868:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 41


  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 42


  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE868:
 813              	.LBE867:
 814              	.LBE876:
 815              	.LBE883:
 816              	.LBB884:
 817              	.LBB854:
 818              	.LBB844:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE844:
 826              	.LBE854:
 827              	.LBE884:
 828              	.LBB885:
 829              	.LBB877:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE877:
 833              	.LBE885:
 834              	.LBB886:
 835              	.LBB855:
 836              	.LBB845:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE845:
 842              	.LBE855:
 843              	.LBE886:
 844              		.loc 20 603 5 is_stmt 1 view .LVU155
 604:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 604 5 view .LVU156
 603:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 603 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB887:
 849              	.LBB856:
 850              	.LBB846:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 43


  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE846:
 854              	.LBE856:
 855              	.LBE887:
 856              	.LBB888:
 857              	.LBB878:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE878:
 861              	.LBE888:
 862              	.LBB889:
 863              	.LBB857:
 864              	.LBB847:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE847:
 868              	.LBE857:
 869              	.LBE889:
 870              		.loc 20 604 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 605:Veno-Echo.cpp **** 
 606:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 607:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 607 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB890:
 876              	.LBI865:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB879:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB870:
 881              	.LBI867:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB869:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE869:
 887              	.LBE870:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB871:
 892              	.LBB872:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 44


  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE872:
 896              	.LBE871:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB874:
 902              	.LBI871:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB873:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE873:
 913              	.LBE874:
 914              	.LBE879:
 915              	.LBE890:
 608:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 608 5 is_stmt 1 view .LVU177
 917              	.LBB891:
 918              	.LBI891:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB892:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB893:
 926              	.LBI893:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB894:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE894:
 932              	.LBE893:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 45


 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB896:
 942              	.LBB895:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE895:
 946              	.LBE896:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB897:
 953              	.LBB898:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE898:
 959              	.LBE897:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB900:
 965              	.LBI897:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB899:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE899:
 976              	.LBE900:
 977              	.LBE892:
 978              	.LBE891:
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp **** }
 979              		.loc 20 610 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 46


 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 611:Veno-Echo.cpp **** 
 612:Veno-Echo.cpp **** int main(void)
 613:Veno-Echo.cpp **** {
 614:Veno-Echo.cpp ****     // initialize hardware.
 615:Veno-Echo.cpp ****     hw.Configure();
 616:Veno-Echo.cpp ****     hw.Init();
 617:Veno-Echo.cpp ****     
 618:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 619:Veno-Echo.cpp **** 
 620:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 621:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 622:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 623:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 624:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 625:Veno-Echo.cpp **** 
 626:Veno-Echo.cpp ****     //Gates
 627:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 628:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 47


 629:Veno-Echo.cpp **** 
 630:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 631:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 632:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 633:Veno-Echo.cpp ****     
 634:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 638:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 639:Veno-Echo.cpp **** 
 640:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 642:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 643:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 644:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 645:Veno-Echo.cpp **** 
 646:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 648:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 649:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 650:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 651:Veno-Echo.cpp **** 
 652:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 654:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 655:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 656:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 657:Veno-Echo.cpp **** 
 658:Veno-Echo.cpp ****     // set params for CrossFade objects
 659:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 660:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 661:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 662:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 663:Veno-Echo.cpp **** 
 664:Veno-Echo.cpp ****     WidthXfade.Init();
 665:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 666:Veno-Echo.cpp **** 
 667:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 668:Veno-Echo.cpp **** 
 669:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 670:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 671:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 672:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 673:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 674:Veno-Echo.cpp **** 
 675:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 676:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 677:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 678:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 679:Veno-Echo.cpp **** 
 680:Veno-Echo.cpp ****     //setup L and R High Pass filters
 681:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 682:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 683:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 684:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 685:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 48


 686:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 687:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 688:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 689:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 690:Veno-Echo.cpp **** 
 691:Veno-Echo.cpp ****     //post filters
 692:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 693:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 694:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 695:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 696:Veno-Echo.cpp **** 
 697:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 698:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 699:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 700:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 701:Veno-Echo.cpp **** 
 702:Veno-Echo.cpp ****     //setup L and R High Pass filters
 703:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 704:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 705:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 706:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 707:Veno-Echo.cpp **** 
 708:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 709:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 710:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 711:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 712:Veno-Echo.cpp **** 
 713:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 714:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 715:Veno-Echo.cpp **** 
 716:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 717:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 718:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 719:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 720:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 721:Veno-Echo.cpp **** 
 722:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 723:Veno-Echo.cpp **** 
 724:Veno-Echo.cpp ****     //setup tempo indicators
 725:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 726:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 727:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 728:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 729:Veno-Echo.cpp **** 
 730:Veno-Echo.cpp ****     //load settings from flash
 731:Veno-Echo.cpp **** 
 732:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 733:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 734:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 735:Veno-Echo.cpp **** 
 736:Veno-Echo.cpp ****     //initialize DAC
 737:Veno-Echo.cpp **** 
 738:Veno-Echo.cpp ****    //ADC
 739:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 740:Veno-Echo.cpp **** 
 741:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 742:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 49


 743:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 744:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 745:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 746:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 747:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 748:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 749:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 750:Veno-Echo.cpp **** 
 751:Veno-Echo.cpp **** 
 752:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 753:Veno-Echo.cpp ****     hw.adc.Start();
 754:Veno-Echo.cpp **** 
 755:Veno-Echo.cpp **** 
 756:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 757:Veno-Echo.cpp ****     // start audio callback
 758:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 759:Veno-Echo.cpp **** 
 760:Veno-Echo.cpp ****     
 761:Veno-Echo.cpp **** 
 762:Veno-Echo.cpp ****      for(;;)
 763:Veno-Echo.cpp ****      {
 764:Veno-Echo.cpp **** 
 765:Veno-Echo.cpp **** /*
 766:Veno-Echo.cpp ****         if(save_flag)
 767:Veno-Echo.cpp ****         {
 768:Veno-Echo.cpp **** 
 769:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 770:Veno-Echo.cpp ****             {
 771:Veno-Echo.cpp ****                 //reset flag
 772:Veno-Echo.cpp ****                 //System::Delay(1000);
 773:Veno-Echo.cpp ****                 save_flag = false;
 774:Veno-Echo.cpp ****             }
 775:Veno-Echo.cpp ****         }
 776:Veno-Echo.cpp **** 
 777:Veno-Echo.cpp **** */
 778:Veno-Echo.cpp ****      }
 779:Veno-Echo.cpp **** 
 780:Veno-Echo.cpp **** }
 781:Veno-Echo.cpp **** 
 782:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 783:Veno-Echo.cpp **** {
 1022              		.loc 20 783 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 784:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 784 5 view .LVU201
 783:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 783 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 784 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 50


 1036              	.LVL39:
 1037              		.loc 20 784 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 785:Veno-Echo.cpp **** }
 1040              		.loc 20 785 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 786:Veno-Echo.cpp **** 
 787:Veno-Echo.cpp **** void Update_DelayTimeL()
 788:Veno-Echo.cpp **** {
 1061              		.loc 20 788 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 789:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 789 5 view .LVU207
 790:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 790 5 view .LVU208
 791:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 791 5 view .LVU209
 792:Veno-Echo.cpp ****     
 793:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 793 5 view .LVU210
 794:Veno-Echo.cpp **** 
 795:Veno-Echo.cpp ****     //update pot values
 796:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 796 5 view .LVU211
 788:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 788 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 796 44 view .LVU213
 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7348     		ldr	r0, .L75
 1079 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1080              	.LVL40:
 797:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 51


 798:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 799:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 800:Veno-Echo.cpp ****     static int counterL{};
 801:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1081              		.loc 20 801 26 view .LVU214
 1082 000c 7249     		ldr	r1, .L75+4
 1083              		.loc 20 801 31 view .LVU215
 1084 000e 734B     		ldr	r3, .L75+8
 1085              	.LVL41:
 800:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 800 5 is_stmt 1 view .LVU216
 1087              		.loc 20 801 5 view .LVU217
 1088              		.loc 20 801 26 is_stmt 0 view .LVU218
 1089 0010 0A68     		ldr	r2, [r1]
 1090              	.LBB901:
 802:Veno-Echo.cpp **** 
 803:Veno-Echo.cpp ****     if (!shift) //default control
 1091              		.loc 20 803 9 view .LVU219
 1092 0012 7348     		ldr	r0, .L75+12
 1093              	.LBE901:
 801:Veno-Echo.cpp **** 
 1094              		.loc 20 801 26 view .LVU220
 1095 0014 0132     		adds	r2, r2, #1
 1096              	.LBB965:
 1097              		.loc 20 803 5 view .LVU221
 1098 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1099              	.LBE965:
 801:Veno-Echo.cpp **** 
 1100              		.loc 20 801 31 view .LVU222
 1101 0018 83FB0243 		smull	r4, r3, r3, r2
 1102 001c D417     		asrs	r4, r2, #31
 1103 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1104 0022 03EB4303 		add	r3, r3, r3, lsl #1
 1105 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
 1106              	.LBB966:
 1107              	.LBB902:
 804:Veno-Echo.cpp ****     {
 805:Veno-Echo.cpp ****         static float delayTimeL_new{};
 806:Veno-Echo.cpp ****         //udpate pickup
 807:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1108              		.loc 20 807 19 view .LVU223
 1109 002a 6E4A     		ldr	r2, .L75+16
 1110              	.LBE902:
 1111              	.LBE966:
 801:Veno-Echo.cpp **** 
 1112              		.loc 20 801 14 view .LVU224
 1113 002c 0B60     		str	r3, [r1]
 803:Veno-Echo.cpp ****     {
 1114              		.loc 20 803 5 is_stmt 1 view .LVU225
 1115              	.LBB967:
 1116 002e 80BB     		cbnz	r0, .L43
 1117              	.LBB921:
 805:Veno-Echo.cpp ****         //udpate pickup
 1118              		.loc 20 805 9 view .LVU226
 1119              		.loc 20 807 9 view .LVU227
 1120 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1121 0032 0029     		cmp	r1, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 52


 1122 0034 38D0     		beq	.L44
 808:Veno-Echo.cpp ****         {
 809:Veno-Echo.cpp ****             lastShift = shift;
 1123              		.loc 20 809 13 view .LVU228
 810:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1124              		.loc 20 810 31 is_stmt 0 view .LVU229
 1125 0036 6C4C     		ldr	r4, .L75+20
 811:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1126              		.loc 20 811 28 view .LVU230
 1127 0038 6C49     		ldr	r1, .L75+24
 809:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1128              		.loc 20 809 23 view .LVU231
 1129 003a 1070     		strb	r0, [r2]
 810:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1130              		.loc 20 810 13 is_stmt 1 view .LVU232
 810:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 810 31 is_stmt 0 view .LVU233
 1132 003c 2070     		strb	r0, [r4]
 1133              		.loc 20 811 13 is_stmt 1 view .LVU234
 1134              		.loc 20 811 28 is_stmt 0 view .LVU235
 1135 003e 81ED000A 		vstr.32	s0, [r1]
 1136              	.L45:
 812:Veno-Echo.cpp ****         } 
 813:Veno-Echo.cpp ****         else    //not a recent shift change
 814:Veno-Echo.cpp ****         {
 815:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 816:Veno-Echo.cpp ****             {
 817:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 818:Veno-Echo.cpp ****                 {
 819:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 820:Veno-Echo.cpp ****                 }
 821:Veno-Echo.cpp ****             }
 822:Veno-Echo.cpp ****         }
 823:Veno-Echo.cpp **** 
 824:Veno-Echo.cpp ****         float delayTimeL{};
 1137              		.loc 20 824 9 is_stmt 1 view .LVU236
 1138              	.LVL42:
 825:Veno-Echo.cpp **** 
 826:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1139              		.loc 20 826 9 view .LVU237
 827:Veno-Echo.cpp ****         {
 828:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 829:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 830:Veno-Echo.cpp ****         }
 831:Veno-Echo.cpp **** 
 832:Veno-Echo.cpp ****         else
 833:Veno-Echo.cpp ****         {
 834:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1140              		.loc 20 834 13 view .LVU238
 1141              	.LBB903:
 1142              	.LBI903:
 835:Veno-Echo.cpp ****         }
 836:Veno-Echo.cpp **** 
 837:Veno-Echo.cpp ****         if(counterL == 0)
 838:Veno-Echo.cpp ****         {
 839:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 840:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 53


 841:Veno-Echo.cpp ****             };
 842:Veno-Echo.cpp ****         }
 843:Veno-Echo.cpp **** 
 844:Veno-Echo.cpp ****     }   //not shift mode
 845:Veno-Echo.cpp **** 
 846:Veno-Echo.cpp ****     else    //shift mode
 847:Veno-Echo.cpp ****     {
 848:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 849:Veno-Echo.cpp **** 
 850:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 851:Veno-Echo.cpp ****         {
 852:Veno-Echo.cpp ****             lastShift = shift;
 853:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 854:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 855:Veno-Echo.cpp ****         }
 856:Veno-Echo.cpp **** 
 857:Veno-Echo.cpp ****         else    //not a recent shift change
 858:Veno-Echo.cpp ****         {
 859:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 860:Veno-Echo.cpp ****             {
 861:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 862:Veno-Echo.cpp ****                 {
 863:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 864:Veno-Echo.cpp ****                 }
 865:Veno-Echo.cpp ****             }
 866:Veno-Echo.cpp ****         }
 867:Veno-Echo.cpp **** 
 868:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 869:Veno-Echo.cpp ****         {
 870:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 871:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 872:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 873:Veno-Echo.cpp ****             //save setting:
 874:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 875:Veno-Echo.cpp ****         }
 876:Veno-Echo.cpp ****     }
 877:Veno-Echo.cpp ****     
 878:Veno-Echo.cpp **** }
 879:Veno-Echo.cpp **** 
 880:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 881:Veno-Echo.cpp **** {
 882:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 883:Veno-Echo.cpp **** }
 884:Veno-Echo.cpp **** 
 885:Veno-Echo.cpp **** void Update_DelayTimeR()
 886:Veno-Echo.cpp **** {
 887:Veno-Echo.cpp ****     static bool lastShift{};
 888:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 889:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 890:Veno-Echo.cpp ****     
 891:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 892:Veno-Echo.cpp **** 
 893:Veno-Echo.cpp ****     //update pot values
 894:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 895:Veno-Echo.cpp **** 
 896:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 897:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 54


 898:Veno-Echo.cpp ****     static int counterR{};
 899:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 900:Veno-Echo.cpp **** 
 901:Veno-Echo.cpp ****     if (!shift) //default control
 902:Veno-Echo.cpp ****     {
 903:Veno-Echo.cpp ****         static float delayTimeR_new{};
 904:Veno-Echo.cpp ****         //udpate pickup
 905:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 906:Veno-Echo.cpp ****         {
 907:Veno-Echo.cpp ****             lastShift = shift;
 908:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 909:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 910:Veno-Echo.cpp ****         } 
 911:Veno-Echo.cpp ****         else    //not a default shift change
 912:Veno-Echo.cpp ****         {
 913:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 914:Veno-Echo.cpp ****             {
 915:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 916:Veno-Echo.cpp ****                 {
 917:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 918:Veno-Echo.cpp ****                 }
 919:Veno-Echo.cpp ****             }
 920:Veno-Echo.cpp ****         }
 921:Veno-Echo.cpp **** 
 922:Veno-Echo.cpp ****         float delayTimeR{};
 923:Veno-Echo.cpp **** 
 924:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 925:Veno-Echo.cpp ****         {
 926:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 927:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 928:Veno-Echo.cpp ****         }
 929:Veno-Echo.cpp **** 
 930:Veno-Echo.cpp ****         else
 931:Veno-Echo.cpp ****         {
 932:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
 933:Veno-Echo.cpp ****         }
 934:Veno-Echo.cpp **** 
 935:Veno-Echo.cpp ****         if(counterR == 0)
 936:Veno-Echo.cpp ****         {
 937:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
 938:Veno-Echo.cpp ****             {
 939:Veno-Echo.cpp ****             };
 940:Veno-Echo.cpp **** 
 941:Veno-Echo.cpp ****         }
 942:Veno-Echo.cpp ****     }   //not shift mode
 943:Veno-Echo.cpp **** 
 944:Veno-Echo.cpp ****     else    //shift mode
 945:Veno-Echo.cpp ****     {
 946:Veno-Echo.cpp **** 
 947:Veno-Echo.cpp ****         static float tapRatio_new{};
 948:Veno-Echo.cpp **** 
 949:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 950:Veno-Echo.cpp ****         {
 951:Veno-Echo.cpp ****             lastShift = shift;
 952:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 953:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 954:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 55


 955:Veno-Echo.cpp **** 
 956:Veno-Echo.cpp ****         else    //not a recent shift change
 957:Veno-Echo.cpp ****         {
 958:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
 959:Veno-Echo.cpp ****             {
 960:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
 961:Veno-Echo.cpp ****                 {
 962:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
 963:Veno-Echo.cpp ****                 }
 964:Veno-Echo.cpp ****             }
 965:Veno-Echo.cpp ****         }
 966:Veno-Echo.cpp **** 
 967:Veno-Echo.cpp ****         if(tapRatio_pickup)
 968:Veno-Echo.cpp ****         {
 969:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
 970:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 972:Veno-Echo.cpp ****             //save setting:
 973:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 974:Veno-Echo.cpp ****         }
 975:Veno-Echo.cpp ****     }
 976:Veno-Echo.cpp ****     
 977:Veno-Echo.cpp **** }
 978:Veno-Echo.cpp **** void Update_feedbackL_CV()
 979:Veno-Echo.cpp **** {
 980:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 981:Veno-Echo.cpp **** }
 982:Veno-Echo.cpp **** void Update_feedbackL()
 983:Veno-Echo.cpp **** {
 984:Veno-Echo.cpp ****     static bool lastShift{};
 985:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 986:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 987:Veno-Echo.cpp **** 
 988:Veno-Echo.cpp ****     static float feedbackL_Last{};
 989:Veno-Echo.cpp **** 
 990:Veno-Echo.cpp ****     //get pot values:
 991:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 992:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 993:Veno-Echo.cpp **** 
 994:Veno-Echo.cpp ****     if (!shift) //default controls
 995:Veno-Echo.cpp ****     {   
 996:Veno-Echo.cpp ****         static float feedbackL_new{};
 997:Veno-Echo.cpp ****         //update pickup
 998:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 999:Veno-Echo.cpp ****         {
1000:Veno-Echo.cpp ****             lastShift = shift;
1001:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1002:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1003:Veno-Echo.cpp ****         } 
1004:Veno-Echo.cpp ****         else    //not a default shift change
1005:Veno-Echo.cpp ****         {
1006:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1007:Veno-Echo.cpp ****             {
1008:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1009:Veno-Echo.cpp ****                 {
1010:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1011:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 56


1012:Veno-Echo.cpp ****             }
1013:Veno-Echo.cpp ****         }
1014:Veno-Echo.cpp **** 
1015:Veno-Echo.cpp ****         float feedbackL_combo{};
1016:Veno-Echo.cpp **** 
1017:Veno-Echo.cpp ****         if(feedbackL_pickup)
1018:Veno-Echo.cpp ****         {
1019:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1020:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1021:Veno-Echo.cpp ****         }
1022:Veno-Echo.cpp **** 
1023:Veno-Echo.cpp ****         else
1024:Veno-Echo.cpp ****         {
1025:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1026:Veno-Echo.cpp ****         }
1027:Veno-Echo.cpp ****   
1028:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1029:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1030:Veno-Echo.cpp ****     }
1031:Veno-Echo.cpp ****     else    //alternate controls
1032:Veno-Echo.cpp ****     {
1033:Veno-Echo.cpp ****         static float HPCutoff_new{};
1034:Veno-Echo.cpp **** 
1035:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1036:Veno-Echo.cpp ****         {
1037:Veno-Echo.cpp ****             lastShift = shift;
1038:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1039:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1040:Veno-Echo.cpp ****         }
1041:Veno-Echo.cpp **** 
1042:Veno-Echo.cpp ****         else    //not a recent shift change
1043:Veno-Echo.cpp ****         {
1044:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1045:Veno-Echo.cpp ****             {
1046:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1047:Veno-Echo.cpp ****                 {
1048:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1049:Veno-Echo.cpp ****                 }
1050:Veno-Echo.cpp ****             }
1051:Veno-Echo.cpp ****         }
1052:Veno-Echo.cpp **** 
1053:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1054:Veno-Echo.cpp ****         {
1055:Veno-Echo.cpp ****             float HPCutoff{};
1056:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1057:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1058:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1059:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1060:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1061:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1062:Veno-Echo.cpp ****         }
1063:Veno-Echo.cpp ****     }
1064:Veno-Echo.cpp **** }
1065:Veno-Echo.cpp **** 
1066:Veno-Echo.cpp **** void Update_feedbackR_CV()
1067:Veno-Echo.cpp **** {
1068:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 57


1069:Veno-Echo.cpp **** }
1070:Veno-Echo.cpp **** 
1071:Veno-Echo.cpp **** void Update_feedbackR()
1072:Veno-Echo.cpp **** {
1073:Veno-Echo.cpp ****     static bool lastShift{};
1074:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1075:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1076:Veno-Echo.cpp **** 
1077:Veno-Echo.cpp ****     static float feedbackR_Last{};
1078:Veno-Echo.cpp **** 
1079:Veno-Echo.cpp ****     //get pot values:
1080:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1081:Veno-Echo.cpp **** 
1082:Veno-Echo.cpp ****     if (!shift) //default controls
1083:Veno-Echo.cpp ****     {   
1084:Veno-Echo.cpp ****         static float feedbackR_new{};
1085:Veno-Echo.cpp ****         //update pickup
1086:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1087:Veno-Echo.cpp ****         {
1088:Veno-Echo.cpp ****             lastShift = shift;
1089:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1090:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1091:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1092:Veno-Echo.cpp ****         } 
1093:Veno-Echo.cpp ****         else    //not a recent shift change
1094:Veno-Echo.cpp ****         {
1095:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1096:Veno-Echo.cpp ****             {
1097:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1098:Veno-Echo.cpp ****                 {
1099:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1100:Veno-Echo.cpp ****                 }
1101:Veno-Echo.cpp ****             }
1102:Veno-Echo.cpp ****         }
1103:Veno-Echo.cpp **** 
1104:Veno-Echo.cpp ****         float feedbackR_combo{};
1105:Veno-Echo.cpp ****         
1106:Veno-Echo.cpp ****         if(feedbackR_pickup)
1107:Veno-Echo.cpp ****         {
1108:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1109:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1110:Veno-Echo.cpp ****         }
1111:Veno-Echo.cpp **** 
1112:Veno-Echo.cpp ****         else
1113:Veno-Echo.cpp ****         {
1114:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1115:Veno-Echo.cpp ****         }
1116:Veno-Echo.cpp **** 
1117:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1118:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1119:Veno-Echo.cpp ****     }
1120:Veno-Echo.cpp ****     else    //alternate controls
1121:Veno-Echo.cpp ****     {
1122:Veno-Echo.cpp **** 
1123:Veno-Echo.cpp ****         static float LPCutoff_new{};
1124:Veno-Echo.cpp **** 
1125:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 58


1126:Veno-Echo.cpp ****         {
1127:Veno-Echo.cpp ****             lastShift = shift;
1128:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1129:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1130:Veno-Echo.cpp ****         }
1131:Veno-Echo.cpp **** 
1132:Veno-Echo.cpp ****         else    //not a recent shift change
1133:Veno-Echo.cpp ****         {
1134:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1135:Veno-Echo.cpp ****             {
1136:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1137:Veno-Echo.cpp ****                 {
1138:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1139:Veno-Echo.cpp ****                 }
1140:Veno-Echo.cpp ****             }
1141:Veno-Echo.cpp ****         }
1142:Veno-Echo.cpp **** 
1143:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1144:Veno-Echo.cpp ****         {
1145:Veno-Echo.cpp ****             float LPCutoff{};
1146:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1147:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1148:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1149:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1150:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1151:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1152:Veno-Echo.cpp ****         }
1153:Veno-Echo.cpp ****     }
1154:Veno-Echo.cpp **** }
1155:Veno-Echo.cpp **** 
1156:Veno-Echo.cpp **** void Update_drywet_CV()
1157:Veno-Echo.cpp **** {
1158:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1159:Veno-Echo.cpp **** }
1160:Veno-Echo.cpp **** 
1161:Veno-Echo.cpp **** void Update_drywet()
1162:Veno-Echo.cpp **** {
1163:Veno-Echo.cpp ****     static bool lastShift{};
1164:Veno-Echo.cpp ****     static bool drywet_pickup{};
1165:Veno-Echo.cpp ****     static bool Res_pickup{};
1166:Veno-Echo.cpp **** 
1167:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1168:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1169:Veno-Echo.cpp **** 
1170:Veno-Echo.cpp ****     //get pot values:
1171:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1172:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1173:Veno-Echo.cpp **** 
1174:Veno-Echo.cpp ****     if (!shift) //default controls
1175:Veno-Echo.cpp ****     {   
1176:Veno-Echo.cpp **** 
1177:Veno-Echo.cpp ****         static float drywet_new{};
1178:Veno-Echo.cpp **** 
1179:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1180:Veno-Echo.cpp ****         {
1181:Veno-Echo.cpp ****             lastShift = shift;
1182:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 59


1183:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1184:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1185:Veno-Echo.cpp ****         } 
1186:Veno-Echo.cpp ****         
1187:Veno-Echo.cpp ****         else    //not a recent shift change
1188:Veno-Echo.cpp ****         {
1189:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1190:Veno-Echo.cpp ****             {
1191:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1192:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1193:Veno-Echo.cpp ****                 {
1194:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1195:Veno-Echo.cpp ****                 }
1196:Veno-Echo.cpp ****             }
1197:Veno-Echo.cpp **** 
1198:Veno-Echo.cpp ****         }
1199:Veno-Echo.cpp ****         
1200:Veno-Echo.cpp ****         float drywetcombo{};
1201:Veno-Echo.cpp **** 
1202:Veno-Echo.cpp ****         if (drywet_pickup)
1203:Veno-Echo.cpp ****         {
1204:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1205:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1206:Veno-Echo.cpp ****         }
1207:Veno-Echo.cpp **** 
1208:Veno-Echo.cpp ****         else
1209:Veno-Echo.cpp ****         {
1210:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1211:Veno-Echo.cpp ****         }
1212:Veno-Echo.cpp **** 
1213:Veno-Echo.cpp ****         float drywetTarget{};
1214:Veno-Echo.cpp **** 
1215:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1216:Veno-Echo.cpp ****         {
1217:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1218:Veno-Echo.cpp ****         }
1219:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1220:Veno-Echo.cpp ****         {
1221:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1222:Veno-Echo.cpp ****         }
1223:Veno-Echo.cpp ****         else
1224:Veno-Echo.cpp ****         {
1225:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1226:Veno-Echo.cpp ****         }
1227:Veno-Echo.cpp **** 
1228:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1229:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1230:Veno-Echo.cpp ****     }
1231:Veno-Echo.cpp ****     else    //alternate controls
1232:Veno-Echo.cpp ****     {
1233:Veno-Echo.cpp ****         static float Res_new{};
1234:Veno-Echo.cpp **** 
1235:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1236:Veno-Echo.cpp ****         {
1237:Veno-Echo.cpp ****             lastShift = shift;
1238:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1239:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 60


1240:Veno-Echo.cpp ****         }
1241:Veno-Echo.cpp **** 
1242:Veno-Echo.cpp ****         else    //not a recent shift change
1243:Veno-Echo.cpp ****         {
1244:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1245:Veno-Echo.cpp ****             {
1246:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1247:Veno-Echo.cpp ****                 {
1248:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1249:Veno-Echo.cpp ****                 }
1250:Veno-Echo.cpp ****             }
1251:Veno-Echo.cpp ****         }
1252:Veno-Echo.cpp **** 
1253:Veno-Echo.cpp ****         if(Res_pickup)
1254:Veno-Echo.cpp ****         {
1255:Veno-Echo.cpp ****             float Res{};
1256:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1257:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1258:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1259:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1260:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1261:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1262:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1263:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1264:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1265:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1266:Veno-Echo.cpp ****         }
1267:Veno-Echo.cpp ****     }
1268:Veno-Echo.cpp **** }
1269:Veno-Echo.cpp **** 
1270:Veno-Echo.cpp **** void Update_width_CV()
1271:Veno-Echo.cpp **** {
1272:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1273:Veno-Echo.cpp **** }
1274:Veno-Echo.cpp **** 
1275:Veno-Echo.cpp **** void Update_width()
1276:Veno-Echo.cpp **** {
1277:Veno-Echo.cpp ****     static bool lastShift{};
1278:Veno-Echo.cpp ****     static bool width_pickup{};
1279:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1280:Veno-Echo.cpp **** 
1281:Veno-Echo.cpp ****     static float width_Last{};
1282:Veno-Echo.cpp **** 
1283:Veno-Echo.cpp ****     //get pot values:
1284:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1285:Veno-Echo.cpp **** 
1286:Veno-Echo.cpp ****     if (!shift) //default controls
1287:Veno-Echo.cpp ****     {   
1288:Veno-Echo.cpp ****         static float width_new{};
1289:Veno-Echo.cpp ****         //update pickup
1290:Veno-Echo.cpp ****         if (shift != lastShift)
1291:Veno-Echo.cpp ****         {
1292:Veno-Echo.cpp ****             lastShift = shift;
1293:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1294:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1295:Veno-Echo.cpp ****         }
1296:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 61


1297:Veno-Echo.cpp ****         else
1298:Veno-Echo.cpp ****         {
1299:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1300:Veno-Echo.cpp ****             {
1301:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1302:Veno-Echo.cpp ****                 {
1303:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1304:Veno-Echo.cpp ****                 }
1305:Veno-Echo.cpp ****             }
1306:Veno-Echo.cpp **** 
1307:Veno-Echo.cpp ****         }
1308:Veno-Echo.cpp **** 
1309:Veno-Echo.cpp ****         float widthTarget{};
1310:Veno-Echo.cpp **** 
1311:Veno-Echo.cpp ****         if(width_pickup)
1312:Veno-Echo.cpp ****         {
1313:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1314:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1315:Veno-Echo.cpp ****         }
1316:Veno-Echo.cpp **** 
1317:Veno-Echo.cpp ****         else
1318:Veno-Echo.cpp ****         {        
1319:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1320:Veno-Echo.cpp ****         }
1321:Veno-Echo.cpp ****             
1322:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1323:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1324:Veno-Echo.cpp ****     }
1325:Veno-Echo.cpp **** 
1326:Veno-Echo.cpp ****     else    //alternate controls
1327:Veno-Echo.cpp ****     {
1328:Veno-Echo.cpp ****         static float ModDepth_new{};
1329:Veno-Echo.cpp **** 
1330:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1331:Veno-Echo.cpp ****         {
1332:Veno-Echo.cpp ****             lastShift = shift;
1333:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1334:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1335:Veno-Echo.cpp ****         }
1336:Veno-Echo.cpp **** 
1337:Veno-Echo.cpp ****         else    //not a recent shift change
1338:Veno-Echo.cpp ****         {
1339:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1340:Veno-Echo.cpp ****             {
1341:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1342:Veno-Echo.cpp ****                 {
1343:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1344:Veno-Echo.cpp ****                 }
1345:Veno-Echo.cpp ****             }
1346:Veno-Echo.cpp ****         }
1347:Veno-Echo.cpp **** 
1348:Veno-Echo.cpp ****         if(ModDepth_pickup)
1349:Veno-Echo.cpp ****         {
1350:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1351:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1352:Veno-Echo.cpp ****         }
1353:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 62


1354:Veno-Echo.cpp **** }
1355:Veno-Echo.cpp **** 
1356:Veno-Echo.cpp **** void Update_crossfeedback()
1357:Veno-Echo.cpp **** {
1358:Veno-Echo.cpp ****     static bool lastShift{};
1359:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1360:Veno-Echo.cpp ****     static bool modRate_pickup{};
1361:Veno-Echo.cpp **** 
1362:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1363:Veno-Echo.cpp **** 
1364:Veno-Echo.cpp ****     //get pot values:
1365:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1366:Veno-Echo.cpp **** 
1367:Veno-Echo.cpp ****     if (!shift) //default controls
1368:Veno-Echo.cpp ****     {   
1369:Veno-Echo.cpp ****         static float crossfeedback_new{};
1370:Veno-Echo.cpp ****         //update pickup
1371:Veno-Echo.cpp ****         if (shift != lastShift)
1372:Veno-Echo.cpp ****         {
1373:Veno-Echo.cpp ****             lastShift = shift;
1374:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1375:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1376:Veno-Echo.cpp ****         }
1377:Veno-Echo.cpp **** 
1378:Veno-Echo.cpp ****         else
1379:Veno-Echo.cpp ****         {
1380:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1381:Veno-Echo.cpp ****             {
1382:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1383:Veno-Echo.cpp ****                 {
1384:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1385:Veno-Echo.cpp ****                 }
1386:Veno-Echo.cpp ****             }
1387:Veno-Echo.cpp ****         }
1388:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1389:Veno-Echo.cpp **** 
1390:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1391:Veno-Echo.cpp ****         {
1392:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1393:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1394:Veno-Echo.cpp ****         }
1395:Veno-Echo.cpp **** 
1396:Veno-Echo.cpp ****         else
1397:Veno-Echo.cpp ****         {
1398:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1399:Veno-Echo.cpp ****         }
1400:Veno-Echo.cpp **** 
1401:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1402:Veno-Echo.cpp ****     }
1403:Veno-Echo.cpp ****     else    //alternate controls
1404:Veno-Echo.cpp ****     {
1405:Veno-Echo.cpp ****         static float modRate_new{};
1406:Veno-Echo.cpp **** 
1407:Veno-Echo.cpp ****         if (shift != lastShift)
1408:Veno-Echo.cpp ****         {
1409:Veno-Echo.cpp ****             lastShift = shift;
1410:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 63


1411:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1412:Veno-Echo.cpp ****         }
1413:Veno-Echo.cpp **** 
1414:Veno-Echo.cpp ****         else
1415:Veno-Echo.cpp ****         {
1416:Veno-Echo.cpp ****             if(!modRate_pickup)
1417:Veno-Echo.cpp ****             {
1418:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1419:Veno-Echo.cpp ****                 {
1420:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1421:Veno-Echo.cpp ****                 }
1422:Veno-Echo.cpp ****             }
1423:Veno-Echo.cpp ****         }
1424:Veno-Echo.cpp **** 
1425:Veno-Echo.cpp ****         if(modRate_pickup)
1426:Veno-Echo.cpp ****         {
1427:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1428:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1429:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1430:Veno-Echo.cpp ****         }
1431:Veno-Echo.cpp ****     }
1432:Veno-Echo.cpp **** }
1433:Veno-Echo.cpp **** 
1434:Veno-Echo.cpp **** void Update_filterXfade()
1435:Veno-Echo.cpp **** {
1436:Veno-Echo.cpp ****     static bool lastShift{};
1437:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1438:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1439:Veno-Echo.cpp **** 
1440:Veno-Echo.cpp ****     static float filterXfade_last{};
1441:Veno-Echo.cpp **** 
1442:Veno-Echo.cpp ****     //get pot values:
1443:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1444:Veno-Echo.cpp **** 
1445:Veno-Echo.cpp ****     if (!shift) //default controls
1446:Veno-Echo.cpp ****     {   
1447:Veno-Echo.cpp ****         static float filterXfade_new{};
1448:Veno-Echo.cpp ****         //update pickup
1449:Veno-Echo.cpp ****         if (shift != lastShift)
1450:Veno-Echo.cpp ****         {
1451:Veno-Echo.cpp ****             lastShift = shift;
1452:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1453:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1454:Veno-Echo.cpp ****         }
1455:Veno-Echo.cpp **** 
1456:Veno-Echo.cpp ****         else
1457:Veno-Echo.cpp ****         {
1458:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1459:Veno-Echo.cpp ****             {
1460:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1461:Veno-Echo.cpp ****                 {
1462:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1463:Veno-Echo.cpp ****                 }
1464:Veno-Echo.cpp ****             }
1465:Veno-Echo.cpp ****         }
1466:Veno-Echo.cpp **** 
1467:Veno-Echo.cpp ****         float filterXfadeTarget{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 64


1468:Veno-Echo.cpp **** 
1469:Veno-Echo.cpp ****         if(filterXfade_pickup)
1470:Veno-Echo.cpp ****         {
1471:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1472:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1473:Veno-Echo.cpp ****         }
1474:Veno-Echo.cpp **** 
1475:Veno-Echo.cpp ****         else
1476:Veno-Echo.cpp ****         {
1477:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1478:Veno-Echo.cpp ****         }
1479:Veno-Echo.cpp **** 
1480:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1481:Veno-Echo.cpp ****     }
1482:Veno-Echo.cpp ****     else    //alternate controls
1483:Veno-Echo.cpp ****     {
1484:Veno-Echo.cpp **** 
1485:Veno-Echo.cpp ****         static float PostFilters_new{};
1486:Veno-Echo.cpp **** 
1487:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1488:Veno-Echo.cpp ****         {
1489:Veno-Echo.cpp ****             lastShift = shift;
1490:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1491:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1492:Veno-Echo.cpp ****         }
1493:Veno-Echo.cpp **** 
1494:Veno-Echo.cpp ****         else    //not a recent shift change
1495:Veno-Echo.cpp ****         {
1496:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1497:Veno-Echo.cpp ****             {
1498:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1499:Veno-Echo.cpp ****                 {
1500:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1501:Veno-Echo.cpp ****                 }
1502:Veno-Echo.cpp ****             }
1503:Veno-Echo.cpp ****         }
1504:Veno-Echo.cpp ****         
1505:Veno-Echo.cpp ****         if(PostFilters_pickup)
1506:Veno-Echo.cpp ****         {
1507:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1508:Veno-Echo.cpp ****             {
1509:Veno-Echo.cpp ****                 PostFilters = false;
1510:Veno-Echo.cpp ****             }
1511:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1512:Veno-Echo.cpp ****             {
1513:Veno-Echo.cpp ****                 PostFilters = true;
1514:Veno-Echo.cpp ****             }
1515:Veno-Echo.cpp ****             else
1516:Veno-Echo.cpp ****             {
1517:Veno-Echo.cpp ****               //do nothing
1518:Veno-Echo.cpp ****             }
1519:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1520:Veno-Echo.cpp ****         }  
1521:Veno-Echo.cpp ****     }
1522:Veno-Echo.cpp **** }
1523:Veno-Echo.cpp **** 
1524:Veno-Echo.cpp **** void GetModCV()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 65


1525:Veno-Echo.cpp **** {
1526:Veno-Echo.cpp ****     //get modulation CV input
1527:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1528:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1529:Veno-Echo.cpp **** }
1530:Veno-Echo.cpp **** 
1531:Veno-Echo.cpp **** void Update_Mod()
1532:Veno-Echo.cpp **** {    
1533:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1534:Veno-Echo.cpp ****     static float modulation_CV{};
1535:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1536:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1537:Veno-Echo.cpp ****     //calculate InternalMod
1538:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1539:Veno-Echo.cpp ****     //apply modulation to delay lines
1540:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1541:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1542:Veno-Echo.cpp **** }
1543:Veno-Echo.cpp **** 
1544:Veno-Echo.cpp **** void UpdateClock()
1545:Veno-Echo.cpp **** {
1546:Veno-Echo.cpp ****     static int divCounter{};
1547:Veno-Echo.cpp ****     ClockIn.Debounce();
1548:Veno-Echo.cpp **** 
1549:Veno-Echo.cpp ****     //if clock in pulse received
1550:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1551:Veno-Echo.cpp ****     {   
1552:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1553:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1554:Veno-Echo.cpp ****         if(divCounter == 0)
1555:Veno-Echo.cpp ****         {
1556:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1557:Veno-Echo.cpp ****             {
1558:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1559:Veno-Echo.cpp ****             }
1560:Veno-Echo.cpp ****         }
1561:Veno-Echo.cpp ****     }
1562:Veno-Echo.cpp ****     
1563:Veno-Echo.cpp **** }
1564:Veno-Echo.cpp **** 
1565:Veno-Echo.cpp **** void Update_Buttons()
1566:Veno-Echo.cpp **** {  
1567:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1568:Veno-Echo.cpp ****     static uint32_t resetTime{};
1569:Veno-Echo.cpp ****     static int buttonstate{};
1570:Veno-Echo.cpp **** 
1571:Veno-Echo.cpp ****     Rev_L_sw.update();
1572:Veno-Echo.cpp ****     Rev_R_sw.update();
1573:Veno-Echo.cpp ****     LPF_sw.update();
1574:Veno-Echo.cpp ****     HPF_sw.update();
1575:Veno-Echo.cpp ****     Tap_Button.update();
1576:Veno-Echo.cpp **** 
1577:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1578:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1579:Veno-Echo.cpp ****     //TapButton.Debounce();
1580:Veno-Echo.cpp ****     Sync.Debounce();
1581:Veno-Echo.cpp ****     ClockIn.Debounce();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 66


1582:Veno-Echo.cpp ****     //gate inputs
1583:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1584:Veno-Echo.cpp ****     {
1585:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1586:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1587:Veno-Echo.cpp ****     }
1588:Veno-Echo.cpp **** 
1589:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1590:Veno-Echo.cpp ****     {
1591:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1592:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1593:Veno-Echo.cpp ****     }
1594:Veno-Echo.cpp **** 
1595:Veno-Echo.cpp ****     //buttons
1596:Veno-Echo.cpp **** 
1597:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1598:Veno-Echo.cpp ****     {
1599:Veno-Echo.cpp ****         buttonstate += 1;
1600:Veno-Echo.cpp ****         if (buttonstate == 3)
1601:Veno-Echo.cpp ****         {
1602:Veno-Echo.cpp ****             resetTime = System::GetNow();
1603:Veno-Echo.cpp ****         }
1604:Veno-Echo.cpp ****     }
1605:Veno-Echo.cpp **** 
1606:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1607:Veno-Echo.cpp ****     {
1608:Veno-Echo.cpp ****         buttonstate -= 1;
1609:Veno-Echo.cpp ****     }
1610:Veno-Echo.cpp **** 
1611:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1612:Veno-Echo.cpp ****     {
1613:Veno-Echo.cpp ****         buttonstate += 1;
1614:Veno-Echo.cpp ****         if (buttonstate == 3)
1615:Veno-Echo.cpp ****         {
1616:Veno-Echo.cpp ****             resetTime = System::GetNow();
1617:Veno-Echo.cpp ****         }
1618:Veno-Echo.cpp ****     }
1619:Veno-Echo.cpp **** 
1620:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1621:Veno-Echo.cpp ****     {
1622:Veno-Echo.cpp ****         buttonstate -= 1;
1623:Veno-Echo.cpp ****     }
1624:Veno-Echo.cpp **** 
1625:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1626:Veno-Echo.cpp ****     {
1627:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1628:Veno-Echo.cpp ****         {
1629:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1630:Veno-Echo.cpp ****         }
1631:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1632:Veno-Echo.cpp ****         
1633:Veno-Echo.cpp **** 
1634:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1635:Veno-Echo.cpp ****         buttonstate += 1;
1636:Veno-Echo.cpp ****         
1637:Veno-Echo.cpp ****         if (buttonstate == 3)
1638:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 67


1639:Veno-Echo.cpp ****             resetTime = System::GetNow();
1640:Veno-Echo.cpp ****         }
1641:Veno-Echo.cpp **** 
1642:Veno-Echo.cpp ****     }
1643:Veno-Echo.cpp **** 
1644:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1645:Veno-Echo.cpp ****     {
1646:Veno-Echo.cpp ****         shift = false;
1647:Veno-Echo.cpp ****         buttonstate -= 1;
1648:Veno-Echo.cpp ****         mute = false;
1649:Veno-Echo.cpp ****     }
1650:Veno-Echo.cpp **** 
1651:Veno-Echo.cpp ****     if (Tap_Button.getState())
1652:Veno-Echo.cpp ****     {
1653:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1654:Veno-Echo.cpp ****         {
1655:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1656:Veno-Echo.cpp ****         } 
1657:Veno-Echo.cpp ****     }
1658:Veno-Echo.cpp **** 
1659:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1660:Veno-Echo.cpp ****     {
1661:Veno-Echo.cpp **** 
1662:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1663:Veno-Echo.cpp ****             {
1664:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1665:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1666:Veno-Echo.cpp ****                 ResetAllLEDs();
1667:Veno-Echo.cpp ****                 //don't let reset or shift update
1668:Veno-Echo.cpp ****                 shift = false;
1669:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1670:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1671:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1672:Veno-Echo.cpp ****             }
1673:Veno-Echo.cpp ****     } 
1674:Veno-Echo.cpp **** 
1675:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1676:Veno-Echo.cpp **** 
1677:Veno-Echo.cpp ****     //update syncMode
1678:Veno-Echo.cpp ****     //delayL.SetSync(syncMode);
1679:Veno-Echo.cpp ****     //delayR.SetSync(syncMode);
1680:Veno-Echo.cpp **** }
1681:Veno-Echo.cpp **** 
1682:Veno-Echo.cpp **** void Update_DelayBaseTempo()
1683:Veno-Echo.cpp **** {
1684:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getTapLength());
1685:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getTapLength());
1686:Veno-Echo.cpp **** }
1687:Veno-Echo.cpp **** 
1688:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1689:Veno-Echo.cpp **** {    
1690:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1691:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1692:Veno-Echo.cpp **** }
1693:Veno-Echo.cpp **** 
1694:Veno-Echo.cpp **** void Update_BaseTempoLED()
1695:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 68


1696:Veno-Echo.cpp ****     tempoLED_BASE.update();
1697:Veno-Echo.cpp **** 
1698:Veno-Echo.cpp ****     static int phaseCounter{};
1699:Veno-Echo.cpp **** 
1700:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1701:Veno-Echo.cpp ****     {
1702:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1703:Veno-Echo.cpp ****     }
1704:Veno-Echo.cpp **** 
1705:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1706:Veno-Echo.cpp ****     //update base phase for both delay lines
1707:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1708:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1709:Veno-Echo.cpp **** }
1710:Veno-Echo.cpp **** 
1711:Veno-Echo.cpp **** 
1712:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1713:Veno-Echo.cpp **** {
1714:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1715:Veno-Echo.cpp ****     {
1716:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1717:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1718:Veno-Echo.cpp ****     }
1719:Veno-Echo.cpp ****     else
1720:Veno-Echo.cpp ****     {
1721:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1722:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1723:Veno-Echo.cpp ****     }
1724:Veno-Echo.cpp **** 
1725:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1726:Veno-Echo.cpp ****     {
1727:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1728:Veno-Echo.cpp ****     }
1729:Veno-Echo.cpp ****     else
1730:Veno-Echo.cpp ****     {
1731:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1732:Veno-Echo.cpp ****     }
1733:Veno-Echo.cpp **** 
1734:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1735:Veno-Echo.cpp ****     {
1736:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1737:Veno-Echo.cpp ****     }
1738:Veno-Echo.cpp ****     else
1739:Veno-Echo.cpp ****     {
1740:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1741:Veno-Echo.cpp ****     }
1742:Veno-Echo.cpp **** 
1743:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1744:Veno-Echo.cpp ****     {
1745:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1746:Veno-Echo.cpp ****     }
1747:Veno-Echo.cpp ****     else
1748:Veno-Echo.cpp ****     {
1749:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1750:Veno-Echo.cpp ****     }
1751:Veno-Echo.cpp **** 
1752:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 69


1753:Veno-Echo.cpp ****     {
1754:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1755:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1756:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1757:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1758:Veno-Echo.cpp ****     }
1759:Veno-Echo.cpp ****     else
1760:Veno-Echo.cpp ****     {
1761:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1762:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1763:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1764:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1765:Veno-Echo.cpp ****     }
1766:Veno-Echo.cpp ****     
1767:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1768:Veno-Echo.cpp ****     {
1769:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1770:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1771:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1772:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1773:Veno-Echo.cpp ****     }
1774:Veno-Echo.cpp ****     else
1775:Veno-Echo.cpp ****     {
1776:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1777:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1778:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1779:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1780:Veno-Echo.cpp **** 
1781:Veno-Echo.cpp ****     }
1782:Veno-Echo.cpp **** 
1783:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1784:Veno-Echo.cpp ****     {
1785:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1786:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1787:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1788:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1789:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1790:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1791:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1792:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1793:Veno-Echo.cpp ****     }
1794:Veno-Echo.cpp **** 
1795:Veno-Echo.cpp ****     else
1796:Veno-Echo.cpp ****     {
1797:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1798:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1799:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1800:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1801:Veno-Echo.cpp ****     }
1802:Veno-Echo.cpp **** 
1803:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1804:Veno-Echo.cpp ****     {
1805:Veno-Echo.cpp ****         PostFilters = false;
1806:Veno-Echo.cpp ****     }
1807:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1808:Veno-Echo.cpp ****     {
1809:Veno-Echo.cpp ****         PostFilters = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 70


1810:Veno-Echo.cpp ****     }
1811:Veno-Echo.cpp ****     else
1812:Veno-Echo.cpp ****     {
1813:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1814:Veno-Echo.cpp ****     }
1815:Veno-Echo.cpp **** 
1816:Veno-Echo.cpp **** }
1817:Veno-Echo.cpp **** 
1818:Veno-Echo.cpp **** void TurnOnAllLEDs()
1819:Veno-Echo.cpp **** {
1820:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1821:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1822:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1823:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1824:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1825:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1826:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1827:Veno-Echo.cpp **** }
1828:Veno-Echo.cpp **** 
1829:Veno-Echo.cpp **** void ResetAllLEDs()
1830:Veno-Echo.cpp **** {
1831:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1832:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1833:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1834:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1835:Veno-Echo.cpp ****     {
1836:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1837:Veno-Echo.cpp ****     }
1838:Veno-Echo.cpp ****     else
1839:Veno-Echo.cpp ****     {
1840:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1841:Veno-Echo.cpp ****     }
1842:Veno-Echo.cpp **** 
1843:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1844:Veno-Echo.cpp ****     {
1845:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1846:Veno-Echo.cpp ****     }
1847:Veno-Echo.cpp ****     else
1848:Veno-Echo.cpp ****     {
1849:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1850:Veno-Echo.cpp ****     }
1851:Veno-Echo.cpp ****     
1852:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1853:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1854:Veno-Echo.cpp **** }
1855:Veno-Echo.cpp **** 
1856:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1857:Veno-Echo.cpp **** {
1858:Veno-Echo.cpp ****     float returnval{};
1859:Veno-Echo.cpp ****     if (input > limit)
1860:Veno-Echo.cpp ****         returnval = limit;
1861:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1862:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1863:Veno-Echo.cpp ****     else
1864:Veno-Echo.cpp ****         returnval = input;
1865:Veno-Echo.cpp **** 
1866:Veno-Echo.cpp ****     return returnval;   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 71


1867:Veno-Echo.cpp **** }
1868:Veno-Echo.cpp **** 
1869:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1143              		.loc 20 1869 7 view .LVU239
 1144              	.LBB904:
1870:Veno-Echo.cpp **** {
1871:Veno-Echo.cpp ****     float output{};
 1145              		.loc 20 1871 5 view .LVU240
1872:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1146              		.loc 20 1872 5 view .LVU241
 1147              	.LBE904:
 1148              	.LBE903:
 834:Veno-Echo.cpp ****         }
 1149              		.loc 20 834 36 is_stmt 0 view .LVU242
 1150 0042 6B49     		ldr	r1, .L75+28
 1151              	.LBB908:
 1152              	.LBB905:
 1153              		.loc 20 1872 39 view .LVU243
 1154 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1155              		.loc 20 1872 49 view .LVU244
 1156 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1157              	.LBE905:
 1158              	.LBE908:
 834:Veno-Echo.cpp ****         }
 1159              		.loc 20 834 36 view .LVU245
 1160 004c 694A     		ldr	r2, .L75+32
 1161              	.LBB909:
 1162              	.LBB906:
 1163              		.loc 20 1872 39 view .LVU246
 1164 004e 91ED007A 		vldr.32	s14, [r1]
 1165              		.loc 20 1872 12 view .LVU247
 1166 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1167 0056 D2ED007A 		vldr.32	s15, [r2]
 1168              		.loc 20 1872 39 view .LVU248
 1169 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1170              		.loc 20 1872 49 view .LVU249
 1171 005e 37EE657A 		vsub.f32	s14, s14, s11
 1172              		.loc 20 1872 12 view .LVU250
 1173 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1174              	.LVL43:
1873:Veno-Echo.cpp **** 
1874:Veno-Echo.cpp ****     if(output < 0.0f)
 1175              		.loc 20 1874 5 is_stmt 1 view .LVU251
 1176 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1177 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1178 006e 00F1AA80 		bmi	.L73
1875:Veno-Echo.cpp ****     {
1876:Veno-Echo.cpp ****         output = 0.0f;
1877:Veno-Echo.cpp ****     }
1878:Veno-Echo.cpp **** 
1879:Veno-Echo.cpp ****     if(output > 1.0f)
 1179              		.loc 20 1879 5 view .LVU252
1880:Veno-Echo.cpp ****     {
1881:Veno-Echo.cpp ****         output = 1.0f;
 1180              		.loc 20 1881 16 is_stmt 0 view .LVU253
 1181 0072 F4EE667A 		vcmp.f32	s15, s13
 1182 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 72


 1183 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1184              	.LVL44:
 1185              	.L50:
 1186              		.loc 20 1881 16 view .LVU254
 1187              	.LBE906:
 1188              	.LBE909:
 837:Veno-Echo.cpp ****         {
 1189              		.loc 20 837 9 is_stmt 1 view .LVU255
 1190 007e 93B9     		cbnz	r3, .L42
 839:Veno-Echo.cpp ****             {
 1191              		.loc 20 839 13 view .LVU256
 839:Veno-Echo.cpp ****             {
 1192              		.loc 20 839 35 is_stmt 0 view .LVU257
 1193 0080 5D4B     		ldr	r3, .L75+36
 1194 0082 B0EE670A 		vmov.f32	s0, s15
 1195              	.LVL45:
 839:Veno-Echo.cpp ****             {
 1196              		.loc 20 839 35 view .LVU258
 1197 0086 5D48     		ldr	r0, .L75+40
 1198 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1199              	.LBE921:
 1200              	.LBE967:
 878:Veno-Echo.cpp **** 
 1201              		.loc 20 878 1 view .LVU259
 1202 008a BDE81040 		pop	{r4, lr}
 1203              		.cfi_remember_state
 1204              		.cfi_restore 14
 1205              		.cfi_restore 4
 1206              		.cfi_def_cfa_offset 0
 1207              	.LBB968:
 1208              	.LBB922:
 839:Veno-Echo.cpp ****             {
 1209              		.loc 20 839 35 view .LVU260
 1210 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1211              	.LVL46:
 1212              	.L43:
 1213              		.cfi_restore_state
 839:Veno-Echo.cpp ****             {
 1214              		.loc 20 839 35 view .LVU261
 1215              	.LBE922:
 1216              	.LBB923:
 848:Veno-Echo.cpp **** 
 1217              		.loc 20 848 9 is_stmt 1 view .LVU262
 850:Veno-Echo.cpp ****         {
 1218              		.loc 20 850 9 view .LVU263
 1219 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1220 0094 002B     		cmp	r3, #0
 1221 0096 3CD1     		bne	.L53
 852:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1222              		.loc 20 852 13 view .LVU264
 852:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1223              		.loc 20 852 23 is_stmt 0 view .LVU265
 1224 0098 0124     		movs	r4, #1
 853:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1225              		.loc 20 853 34 view .LVU266
 1226 009a 5948     		ldr	r0, .L75+44
 854:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 73


 1227              		.loc 20 854 31 view .LVU267
 1228 009c 5949     		ldr	r1, .L75+48
 852:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1229              		.loc 20 852 23 view .LVU268
 1230 009e 1470     		strb	r4, [r2]
 853:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1231              		.loc 20 853 13 is_stmt 1 view .LVU269
 853:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1232              		.loc 20 853 34 is_stmt 0 view .LVU270
 1233 00a0 0370     		strb	r3, [r0]
 854:Veno-Echo.cpp ****         }
 1234              		.loc 20 854 13 is_stmt 1 view .LVU271
 854:Veno-Echo.cpp ****         }
 1235              		.loc 20 854 31 is_stmt 0 view .LVU272
 1236 00a2 81ED000A 		vstr.32	s0, [r1]
 1237              	.L42:
 854:Veno-Echo.cpp ****         }
 1238              		.loc 20 854 31 view .LVU273
 1239              	.LBE923:
 1240              	.LBE968:
 878:Veno-Echo.cpp **** 
 1241              		.loc 20 878 1 view .LVU274
 1242 00a6 10BD     		pop	{r4, pc}
 1243              	.L44:
 1244              	.LBB969:
 1245              	.LBB962:
 815:Veno-Echo.cpp ****             {
 1246              		.loc 20 815 13 is_stmt 1 view .LVU275
 815:Veno-Echo.cpp ****             {
 1247              		.loc 20 815 16 is_stmt 0 view .LVU276
 1248 00a8 4F4A     		ldr	r2, .L75+20
 815:Veno-Echo.cpp ****             {
 1249              		.loc 20 815 13 view .LVU277
 1250 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1251 00ac 79B9     		cbnz	r1, .L46
 817:Veno-Echo.cpp ****                 {
 1252              		.loc 20 817 17 is_stmt 1 view .LVU278
 1253              	.LVL47:
 1254              	.LBB910:
 1255              	.LBI910:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1256              		.loc 21 75 3 view .LVU279
 1257              	.LBB911:
 1258              		.loc 21 76 5 view .LVU280
 1259              		.loc 21 76 5 is_stmt 0 view .LVU281
 1260              	.LBE911:
 1261              	.LBE910:
 817:Veno-Echo.cpp ****                 {
 1262              		.loc 20 817 23 view .LVU282
 1263 00ae 4F49     		ldr	r1, .L75+24
 817:Veno-Echo.cpp ****                 {
 1264              		.loc 20 817 17 view .LVU283
 1265 00b0 9FED557A 		vldr.32	s14, .L75+52
 817:Veno-Echo.cpp ****                 {
 1266              		.loc 20 817 23 view .LVU284
 1267 00b4 D1ED007A 		vldr.32	s15, [r1]
 1268 00b8 70EE677A 		vsub.f32	s15, s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 74


 1269              	.LBB913:
 1270              	.LBB912:
 1271              		.loc 21 76 31 view .LVU285
 1272 00bc F0EEE77A 		vabs.f32	s15, s15
 1273              	.LBE912:
 1274              	.LBE913:
 817:Veno-Echo.cpp ****                 {
 1275              		.loc 20 817 17 view .LVU286
 1276 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1277 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 00c8 BBDD     		ble	.L45
 819:Veno-Echo.cpp ****                 }
 1279              		.loc 20 819 21 is_stmt 1 view .LVU287
 819:Veno-Echo.cpp ****                 }
 1280              		.loc 20 819 39 is_stmt 0 view .LVU288
 1281 00ca 0121     		movs	r1, #1
 1282 00cc 1170     		strb	r1, [r2]
 1283              	.L46:
 824:Veno-Echo.cpp **** 
 1284              		.loc 20 824 9 is_stmt 1 view .LVU289
 1285              	.LVL48:
 826:Veno-Echo.cpp ****         {
 1286              		.loc 20 826 9 view .LVU290
 828:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1287              		.loc 20 828 13 view .LVU291
 1288              	.LBB914:
 1289              	.LBI914:
1869:Veno-Echo.cpp **** {
 1290              		.loc 20 1869 7 view .LVU292
 1291              	.LBB915:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1292              		.loc 20 1871 5 view .LVU293
1872:Veno-Echo.cpp **** 
 1293              		.loc 20 1872 5 view .LVU294
 1294              	.LBE915:
 1295              	.LBE914:
 828:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1296              		.loc 20 828 36 is_stmt 0 view .LVU295
 1297 00ce 484A     		ldr	r2, .L75+28
 1298              	.LBB918:
 1299              	.LBB916:
1872:Veno-Echo.cpp **** 
 1300              		.loc 20 1872 39 view .LVU296
 1301 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
1872:Veno-Echo.cpp **** 
 1302              		.loc 20 1872 49 view .LVU297
 1303 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
1872:Veno-Echo.cpp **** 
 1304              		.loc 20 1872 39 view .LVU298
 1305 00d8 D2ED007A 		vldr.32	s15, [r2]
1872:Veno-Echo.cpp **** 
 1306              		.loc 20 1872 12 view .LVU299
 1307 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
1872:Veno-Echo.cpp **** 
 1308              		.loc 20 1872 39 view .LVU300
 1309 00e0 77EE677A 		vsub.f32	s15, s14, s15
1872:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 75


 1310              		.loc 20 1872 49 view .LVU301
 1311 00e4 77EEC67A 		vsub.f32	s15, s15, s12
1872:Veno-Echo.cpp **** 
 1312              		.loc 20 1872 12 view .LVU302
 1313 00e8 B0EE406A 		vmov.f32	s12, s0
 1314 00ec A7EEA66A 		vfma.f32	s12, s15, s13
1874:Veno-Echo.cpp ****     {
 1315              		.loc 20 1874 5 view .LVU303
 1316 00f0 B5EEC06A 		vcmpe.f32	s12, #0
1872:Veno-Echo.cpp **** 
 1317              		.loc 20 1872 12 view .LVU304
 1318 00f4 F0EE467A 		vmov.f32	s15, s12
 1319              	.LVL49:
1874:Veno-Echo.cpp ****     {
 1320              		.loc 20 1874 5 is_stmt 1 view .LVU305
 1321 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1322 00fc 66D4     		bmi	.L74
1879:Veno-Echo.cpp ****     {
 1323              		.loc 20 1879 5 view .LVU306
 1324              		.loc 20 1881 16 is_stmt 0 view .LVU307
 1325 00fe F4EE477A 		vcmp.f32	s15, s14
 1326 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1327 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1328              	.L48:
 1329              	.LVL50:
1882:Veno-Echo.cpp ****     }
1883:Veno-Echo.cpp **** 
1884:Veno-Echo.cpp ****     return output;
 1330              		.loc 20 1884 5 is_stmt 1 view .LVU308
 1331              		.loc 20 1884 5 is_stmt 0 view .LVU309
 1332              	.LBE916:
 1333              	.LBE918:
 829:Veno-Echo.cpp ****         }
 1334              		.loc 20 829 13 is_stmt 1 view .LVU310
 829:Veno-Echo.cpp ****         }
 1335              		.loc 20 829 29 is_stmt 0 view .LVU311
 1336 010a 3A4A     		ldr	r2, .L75+32
 1337 010c 82ED000A 		vstr.32	s0, [r2]
 1338 0110 B5E7     		b	.L50
 1339              	.LVL51:
 1340              	.L53:
 829:Veno-Echo.cpp ****         }
 1341              		.loc 20 829 29 view .LVU312
 1342              	.LBE962:
 1343              	.LBB963:
 859:Veno-Echo.cpp ****             {
 1344              		.loc 20 859 13 is_stmt 1 view .LVU313
 859:Veno-Echo.cpp ****             {
 1345              		.loc 20 859 16 is_stmt 0 view .LVU314
 1346 0112 3B4B     		ldr	r3, .L75+44
 859:Veno-Echo.cpp ****             {
 1347              		.loc 20 859 13 view .LVU315
 1348 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1349 0116 7AB9     		cbnz	r2, .L54
 861:Veno-Echo.cpp ****                 {
 1350              		.loc 20 861 17 is_stmt 1 view .LVU316
 1351              	.LVL52:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 76


 1352              	.LBB924:
 1353              	.LBI924:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1354              		.loc 21 75 3 view .LVU317
 1355              	.LBB925:
 1356              		.loc 21 76 5 view .LVU318
 1357              		.loc 21 76 5 is_stmt 0 view .LVU319
 1358              	.LBE925:
 1359              	.LBE924:
 861:Veno-Echo.cpp ****                 {
 1360              		.loc 20 861 23 view .LVU320
 1361 0118 3A4A     		ldr	r2, .L75+48
 861:Veno-Echo.cpp ****                 {
 1362              		.loc 20 861 17 view .LVU321
 1363 011a 9FED3B7A 		vldr.32	s14, .L75+52
 861:Veno-Echo.cpp ****                 {
 1364              		.loc 20 861 23 view .LVU322
 1365 011e D2ED007A 		vldr.32	s15, [r2]
 1366 0122 70EE677A 		vsub.f32	s15, s0, s15
 1367              	.LBB927:
 1368              	.LBB926:
 1369              		.loc 21 76 31 view .LVU323
 1370 0126 F0EEE77A 		vabs.f32	s15, s15
 1371              	.LBE926:
 1372              	.LBE927:
 861:Veno-Echo.cpp ****                 {
 1373              		.loc 20 861 17 view .LVU324
 1374 012a F4EEC77A 		vcmpe.f32	s15, s14
 1375 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376 0132 B8DD     		ble	.L42
 863:Veno-Echo.cpp ****                 }
 1377              		.loc 20 863 21 is_stmt 1 view .LVU325
 863:Veno-Echo.cpp ****                 }
 1378              		.loc 20 863 42 is_stmt 0 view .LVU326
 1379 0134 0122     		movs	r2, #1
 1380 0136 1A70     		strb	r2, [r3]
 1381              	.L54:
 868:Veno-Echo.cpp ****         {
 1382              		.loc 20 868 9 is_stmt 1 view .LVU327
 1383              	.LBB928:
 1384              	.LBB929:
 870:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1385              		.loc 20 870 13 view .LVU328
 870:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1386              		.loc 20 870 38 is_stmt 0 view .LVU329
 1387 0138 0120     		movs	r0, #1
 1388 013a 9FED341A 		vldr.32	s2, .L75+56
 1389 013e DFED340A 		vldr.32	s1, .L75+60
 1390 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1391              	.LVL53:
 1392              	.LBB930:
 1393              	.LBB931:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1394              		.loc 20 70 28 view .LVU330
 1395 0146 334B     		ldr	r3, .L75+64
 1396              	.LVL54:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 77


 1397              		.loc 20 70 28 view .LVU331
 1398              	.LBE931:
 1399              	.LBE930:
 871:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1400              		.loc 20 871 13 is_stmt 1 view .LVU332
 1401              	.LBB945:
 1402              	.LBI930:
  68:Veno-Echo.cpp ****     {
 1403              		.loc 20 68 10 view .LVU333
 1404              	.LBB943:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 9 view .LVU334
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1406              		.loc 20 70 53 is_stmt 0 view .LVU335
 1407 0148 DFED2F6A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1408              		.loc 20 70 28 view .LVU336
 1409 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1410              	.LVL55:
 1411              	.LBB932:
 1412              	.LBI932:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1413              		.loc 21 75 3 is_stmt 1 view .LVU337
 1414              	.LBB933:
 1415              		.loc 21 76 5 view .LVU338
 1416              		.loc 21 76 5 is_stmt 0 view .LVU339
 1417              	.LBE933:
 1418              	.LBE932:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1419              		.loc 20 70 15 view .LVU340
 1420 0150 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1421              		.loc 20 70 53 view .LVU341
 1422 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1423              	.LBB935:
 1424              	.LBB934:
 1425              		.loc 21 76 31 view .LVU342
 1426 0158 B0EEC77A 		vabs.f32	s14, s14
 1427              	.LBE934:
 1428              	.LBE935:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1429              		.loc 20 70 9 view .LVU343
 1430 015c B4EEE77A 		vcmpe.f32	s14, s15
 1431 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1432 0164 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1433              		.loc 20 74 29 view .LVU344
 1434 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1435              	.LBB936:
 1436              	.LBB937:
 1437              		.loc 19 72 9 view .LVU345
 1438 016a 2B4C     		ldr	r4, .L75+68
 1439              	.LBE937:
 1440              	.LBE936:
 1441              	.LBE943:
 1442              	.LBE945:
 871:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 78


 1443              		.loc 20 871 37 view .LVU346
 1444 016c 1968     		ldr	r1, [r3]
 1445              	.LBB946:
 1446              	.LBB944:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1447              		.loc 20 73 13 is_stmt 1 view .LVU347
 1448              	.LBB940:
 1449              	.LBB938:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1450              		.loc 19 71 9 is_stmt 0 view .LVU348
 1451 016e 0020     		movs	r0, #0
 1452              	.LBE938:
 1453              	.LBE940:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1454              		.loc 20 73 27 view .LVU349
 1455 0170 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1456              		.loc 20 74 13 is_stmt 1 view .LVU350
 1457              	.LVL56:
 1458              	.LBB941:
 1459              	.LBI936:
  69:delayline_reverse.h ****     {
 1460              		.loc 19 69 17 view .LVU351
  69:delayline_reverse.h ****     {
 1461              		.loc 19 69 17 is_stmt 0 view .LVU352
 1462              	.LBE941:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1463              		.loc 20 74 29 view .LVU353
 1464 0174 17EE902A 		vmov	r2, s15	@ int
 1465              	.LBB942:
 1466              	.LBB939:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1467              		.loc 19 71 9 view .LVU354
 1468 0178 0860     		str	r0, [r1]	@ float
 1469              		.loc 19 72 9 view .LVU355
 1470 017a A242     		cmp	r2, r4
 1471 017c 28BF     		it	cs
 1472 017e 2246     		movcs	r2, r4
 1473 0180 0A61     		str	r2, [r1, #16]
 1474              	.LVL57:
 1475              	.L62:
 1476              		.loc 19 72 9 view .LVU356
 1477              	.LBE939:
 1478              	.LBE942:
 1479              	.LBE944:
 1480              	.LBE946:
 872:Veno-Echo.cpp ****             //save setting:
 1481              		.loc 20 872 13 is_stmt 1 view .LVU357
 1482              	.LBB947:
 1483              	.LBI947:
  68:Veno-Echo.cpp ****     {
 1484              		.loc 20 68 10 view .LVU358
 1485              	.LBB948:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 9 view .LVU359
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1487              		.loc 20 70 28 is_stmt 0 view .LVU360
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 79


 1488 0182 264B     		ldr	r3, .L75+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1489              		.loc 20 70 53 view .LVU361
 1490 0184 DFED206A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1491              		.loc 20 70 28 view .LVU362
 1492 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1493              	.LVL58:
 1494              	.LBB949:
 1495              	.LBI949:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1496              		.loc 21 75 3 is_stmt 1 view .LVU363
 1497              	.LBB950:
 1498              		.loc 21 76 5 view .LVU364
 1499              		.loc 21 76 5 is_stmt 0 view .LVU365
 1500              	.LBE950:
 1501              	.LBE949:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1502              		.loc 20 70 15 view .LVU366
 1503 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1504              		.loc 20 70 53 view .LVU367
 1505 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1506              	.LBB952:
 1507              	.LBB951:
 1508              		.loc 21 76 31 view .LVU368
 1509 0194 B0EEC77A 		vabs.f32	s14, s14
 1510              	.LBE951:
 1511              	.LBE952:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1512              		.loc 20 70 9 view .LVU369
 1513 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1514 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1515 01a0 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1516              		.loc 20 74 29 view .LVU370
 1517 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1518              	.LBB953:
 1519              	.LBB954:
 1520              		.loc 19 72 9 view .LVU371
 1521 01a6 1C4C     		ldr	r4, .L75+68
 1522              	.LBE954:
 1523              	.LBE953:
 1524              	.LBE948:
 1525              	.LBE947:
 872:Veno-Echo.cpp ****             //save setting:
 1526              		.loc 20 872 37 view .LVU372
 1527 01a8 1968     		ldr	r1, [r3]
 1528              	.LBB961:
 1529              	.LBB960:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1530              		.loc 20 73 13 is_stmt 1 view .LVU373
 1531              	.LBB957:
 1532              	.LBB955:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1533              		.loc 19 71 9 is_stmt 0 view .LVU374
 1534 01aa 0020     		movs	r0, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 80


 1535              	.LBE955:
 1536              	.LBE957:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1537              		.loc 20 73 27 view .LVU375
 1538 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1539              		.loc 20 74 13 is_stmt 1 view .LVU376
 1540              	.LVL59:
 1541              	.LBB958:
 1542              	.LBI953:
  69:delayline_reverse.h ****     {
 1543              		.loc 19 69 17 view .LVU377
  69:delayline_reverse.h ****     {
 1544              		.loc 19 69 17 is_stmt 0 view .LVU378
 1545              	.LBE958:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1546              		.loc 20 74 29 view .LVU379
 1547 01b0 17EE902A 		vmov	r2, s15	@ int
 1548              	.LBB959:
 1549              	.LBB956:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1550              		.loc 19 71 9 view .LVU380
 1551 01b4 0860     		str	r0, [r1]	@ float
 1552              		.loc 19 72 9 view .LVU381
 1553 01b6 A242     		cmp	r2, r4
 1554 01b8 28BF     		it	cs
 1555 01ba 2246     		movcs	r2, r4
 1556 01bc 0A61     		str	r2, [r1, #16]
 1557              	.LVL60:
 1558              	.L56:
 1559              		.loc 19 72 9 view .LVU382
 1560              	.LBE956:
 1561              	.LBE959:
 1562              	.LBE960:
 1563              	.LBE961:
 874:Veno-Echo.cpp ****         }
 1564              		.loc 20 874 13 is_stmt 1 view .LVU383
 874:Veno-Echo.cpp ****         }
 1565              		.loc 20 874 35 is_stmt 0 view .LVU384
 1566 01be 184B     		ldr	r3, .L75+76
 1567 01c0 83ED000A 		vstr.32	s0, [r3]
 1568              	.LBE929:
 1569              	.LBE928:
 1570              	.LBE963:
 1571              	.LBE969:
 878:Veno-Echo.cpp **** 
 1572              		.loc 20 878 1 view .LVU385
 1573 01c4 10BD     		pop	{r4, pc}
 1574              	.LVL61:
 1575              	.L73:
 1576              	.LBB970:
 1577              	.LBB964:
 1578              	.LBB919:
 1579              	.LBB907:
1876:Veno-Echo.cpp ****     }
 1580              		.loc 20 1876 16 view .LVU386
 1581 01c6 DFED177A 		vldr.32	s15, .L75+80
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 81


 1582              	.LVL62:
1876:Veno-Echo.cpp ****     }
 1583              		.loc 20 1876 16 view .LVU387
 1584 01ca 58E7     		b	.L50
 1585              	.LVL63:
 1586              	.L74:
1876:Veno-Echo.cpp ****     }
 1587              		.loc 20 1876 16 view .LVU388
 1588              	.LBE907:
 1589              	.LBE919:
 1590              	.LBB920:
 1591              	.LBB917:
 1592 01cc DFED157A 		vldr.32	s15, .L75+80
 1593 01d0 9BE7     		b	.L48
 1594              	.L76:
 1595 01d2 00BF     		.align	2
 1596              	.L75:
 1597 01d4 18000000 		.word	.LANCHOR4+24
 1598 01d8 00000000 		.word	.LANCHOR6
 1599 01dc ABAAAA2A 		.word	715827883
 1600 01e0 00000000 		.word	.LANCHOR7
 1601 01e4 00000000 		.word	.LANCHOR8
 1602 01e8 00000000 		.word	.LANCHOR9
 1603 01ec 00000000 		.word	.LANCHOR10
 1604 01f0 00000000 		.word	.LANCHOR5
 1605 01f4 00000000 		.word	.LANCHOR11
 1606 01f8 00000000 		.word	.LANCHOR12
 1607 01fc 00000000 		.word	.LANCHOR0
 1608 0200 00000000 		.word	.LANCHOR13
 1609 0204 00000000 		.word	.LANCHOR14
 1610 0208 0AD7A33B 		.word	1000593162
 1611 020c 0050C346 		.word	1187205120
 1612 0210 00606A48 		.word	1214930944
 1613 0214 00000000 		.word	.LANCHOR2
 1614 0218 BF270900 		.word	599999
 1615 021c 00000000 		.word	.LANCHOR3
 1616 0220 00000000 		.word	.LANCHOR15
 1617 0224 00000000 		.word	0
 1618              	.LBE917:
 1619              	.LBE920:
 1620              	.LBE964:
 1621              	.LBE970:
 1622              		.cfi_endproc
 1623              	.LFE4313:
 1625              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1626              		.align	1
 1627              		.p2align 2,,3
 1628              		.global	_Z20Update_DelayTimeR_CVv
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
 1632              		.fpu fpv5-d16
 1634              	_Z20Update_DelayTimeR_CVv:
 1635              	.LFB4314:
 881:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1636              		.loc 20 881 1 is_stmt 1 view -0
 1637              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 82


 1638              		@ args = 0, pretend = 0, frame = 0
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
 882:Veno-Echo.cpp **** }
 1640              		.loc 20 882 5 view .LVU390
 881:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1641              		.loc 20 881 1 is_stmt 0 view .LVU391
 1642 0000 08B5     		push	{r3, lr}
 1643              		.cfi_def_cfa_offset 8
 1644              		.cfi_offset 3, -8
 1645              		.cfi_offset 14, -4
 882:Veno-Echo.cpp **** }
 1646              		.loc 20 882 36 view .LVU392
 1647 0002 0121     		movs	r1, #1
 1648 0004 0348     		ldr	r0, .L79
 1649 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1650              	.LVL64:
 882:Veno-Echo.cpp **** }
 1651              		.loc 20 882 19 view .LVU393
 1652 000a 034B     		ldr	r3, .L79+4
 1653 000c 83ED000A 		vstr.32	s0, [r3]
 883:Veno-Echo.cpp **** 
 1654              		.loc 20 883 1 view .LVU394
 1655 0010 08BD     		pop	{r3, pc}
 1656              	.L80:
 1657 0012 00BF     		.align	2
 1658              	.L79:
 1659 0014 18000000 		.word	.LANCHOR4+24
 1660 0018 00000000 		.word	.LANCHOR16
 1661              		.cfi_endproc
 1662              	.LFE4314:
 1664              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1665              		.align	1
 1666              		.p2align 2,,3
 1667              		.global	_Z17Update_DelayTimeRv
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1671              		.fpu fpv5-d16
 1673              	_Z17Update_DelayTimeRv:
 1674              	.LFB4315:
 886:Veno-Echo.cpp ****     static bool lastShift{};
 1675              		.loc 20 886 1 is_stmt 1 view -0
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 0
 1678              		@ frame_needed = 0, uses_anonymous_args = 0
 887:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1679              		.loc 20 887 5 view .LVU396
 888:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1680              		.loc 20 888 5 view .LVU397
 889:Veno-Echo.cpp ****     
 1681              		.loc 20 889 5 view .LVU398
 891:Veno-Echo.cpp **** 
 1682              		.loc 20 891 5 view .LVU399
 894:Veno-Echo.cpp **** 
 1683              		.loc 20 894 5 view .LVU400
 886:Veno-Echo.cpp ****     static bool lastShift{};
 1684              		.loc 20 886 1 is_stmt 0 view .LVU401
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 83


 1685 0000 10B5     		push	{r4, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 4, -8
 1688              		.cfi_offset 14, -4
 894:Veno-Echo.cpp **** 
 1689              		.loc 20 894 44 view .LVU402
 1690 0002 0622     		movs	r2, #6
 1691 0004 0721     		movs	r1, #7
 1692 0006 6548     		ldr	r0, .L111
 886:Veno-Echo.cpp ****     static bool lastShift{};
 1693              		.loc 20 886 1 view .LVU403
 1694 0008 2DED028B 		vpush.64	{d8}
 1695              		.cfi_def_cfa_offset 16
 1696              		.cfi_offset 80, -16
 1697              		.cfi_offset 81, -12
 894:Veno-Echo.cpp **** 
 1698              		.loc 20 894 44 view .LVU404
 1699 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1700              	.LVL65:
 899:Veno-Echo.cpp **** 
 1701              		.loc 20 899 26 view .LVU405
 1702 0010 6349     		ldr	r1, .L111+4
 899:Veno-Echo.cpp **** 
 1703              		.loc 20 899 31 view .LVU406
 1704 0012 644B     		ldr	r3, .L111+8
 1705              	.LVL66:
 898:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1706              		.loc 20 898 5 is_stmt 1 view .LVU407
 899:Veno-Echo.cpp **** 
 1707              		.loc 20 899 5 view .LVU408
 899:Veno-Echo.cpp **** 
 1708              		.loc 20 899 26 is_stmt 0 view .LVU409
 1709 0014 0A68     		ldr	r2, [r1]
 1710              	.LBB971:
 901:Veno-Echo.cpp ****     {
 1711              		.loc 20 901 9 view .LVU410
 1712 0016 6448     		ldr	r0, .L111+12
 1713              	.LBE971:
 899:Veno-Echo.cpp **** 
 1714              		.loc 20 899 26 view .LVU411
 1715 0018 0132     		adds	r2, r2, #1
 1716              	.LBB1012:
 901:Veno-Echo.cpp ****     {
 1717              		.loc 20 901 5 view .LVU412
 1718 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1719              	.LBE1012:
 899:Veno-Echo.cpp **** 
 1720              		.loc 20 899 31 view .LVU413
 1721 001c 83FB0243 		smull	r4, r3, r3, r2
 1722 0020 D417     		asrs	r4, r2, #31
 1723 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1724 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1725 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1726              	.LBB1013:
 1727              	.LBB972:
 905:Veno-Echo.cpp ****         {
 1728              		.loc 20 905 19 view .LVU414
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 84


 1729 002e 5F4A     		ldr	r2, .L111+16
 1730              	.LBE972:
 1731              	.LBE1013:
 899:Veno-Echo.cpp **** 
 1732              		.loc 20 899 14 view .LVU415
 1733 0030 0B60     		str	r3, [r1]
 901:Veno-Echo.cpp ****     {
 1734              		.loc 20 901 5 is_stmt 1 view .LVU416
 1735              	.LBB1014:
 1736 0032 90BB     		cbnz	r0, .L82
 1737              	.LBB991:
 903:Veno-Echo.cpp ****         //udpate pickup
 1738              		.loc 20 903 9 view .LVU417
 905:Veno-Echo.cpp ****         {
 1739              		.loc 20 905 9 view .LVU418
 1740 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1741 0036 0029     		cmp	r1, #0
 1742 0038 3CD0     		beq	.L83
 907:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1743              		.loc 20 907 13 view .LVU419
 908:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1744              		.loc 20 908 31 is_stmt 0 view .LVU420
 1745 003a 5D4C     		ldr	r4, .L111+20
 909:Veno-Echo.cpp ****         } 
 1746              		.loc 20 909 28 view .LVU421
 1747 003c 5D49     		ldr	r1, .L111+24
 907:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1748              		.loc 20 907 23 view .LVU422
 1749 003e 1070     		strb	r0, [r2]
 908:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1750              		.loc 20 908 13 is_stmt 1 view .LVU423
 908:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1751              		.loc 20 908 31 is_stmt 0 view .LVU424
 1752 0040 2070     		strb	r0, [r4]
 909:Veno-Echo.cpp ****         } 
 1753              		.loc 20 909 13 is_stmt 1 view .LVU425
 909:Veno-Echo.cpp ****         } 
 1754              		.loc 20 909 28 is_stmt 0 view .LVU426
 1755 0042 81ED000A 		vstr.32	s0, [r1]
 1756              	.L84:
 922:Veno-Echo.cpp **** 
 1757              		.loc 20 922 9 is_stmt 1 view .LVU427
 1758              	.LVL67:
 924:Veno-Echo.cpp ****         {
 1759              		.loc 20 924 9 view .LVU428
 932:Veno-Echo.cpp ****         }
 1760              		.loc 20 932 13 view .LVU429
 1761              	.LBB973:
 1762              	.LBI973:
1869:Veno-Echo.cpp **** {
 1763              		.loc 20 1869 7 view .LVU430
 1764              	.LBB974:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1765              		.loc 20 1871 5 view .LVU431
1872:Veno-Echo.cpp **** 
 1766              		.loc 20 1872 5 view .LVU432
 1767              	.LBE974:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 85


 1768              	.LBE973:
 932:Veno-Echo.cpp ****         }
 1769              		.loc 20 932 36 is_stmt 0 view .LVU433
 1770 0046 5C49     		ldr	r1, .L111+28
 1771              	.LBB978:
 1772              	.LBB975:
1872:Veno-Echo.cpp **** 
 1773              		.loc 20 1872 39 view .LVU434
 1774 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
1872:Veno-Echo.cpp **** 
 1775              		.loc 20 1872 49 view .LVU435
 1776 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1777              	.LBE975:
 1778              	.LBE978:
 932:Veno-Echo.cpp ****         }
 1779              		.loc 20 932 36 view .LVU436
 1780 0050 5A4A     		ldr	r2, .L111+32
 1781              	.LBB979:
 1782              	.LBB976:
1872:Veno-Echo.cpp **** 
 1783              		.loc 20 1872 39 view .LVU437
 1784 0052 91ED007A 		vldr.32	s14, [r1]
1872:Veno-Echo.cpp **** 
 1785              		.loc 20 1872 12 view .LVU438
 1786 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1787 005a D2ED007A 		vldr.32	s15, [r2]
1872:Veno-Echo.cpp **** 
 1788              		.loc 20 1872 39 view .LVU439
 1789 005e 36EEC77A 		vsub.f32	s14, s13, s14
1872:Veno-Echo.cpp **** 
 1790              		.loc 20 1872 49 view .LVU440
 1791 0062 37EE657A 		vsub.f32	s14, s14, s11
1872:Veno-Echo.cpp **** 
 1792              		.loc 20 1872 12 view .LVU441
 1793 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1794              	.LVL68:
1874:Veno-Echo.cpp ****     {
 1795              		.loc 20 1874 5 is_stmt 1 view .LVU442
 1796 006a F5EEC07A 		vcmpe.f32	s15, #0
 1797 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1798 0072 00F18580 		bmi	.L109
1879:Veno-Echo.cpp ****     {
 1799              		.loc 20 1879 5 view .LVU443
1881:Veno-Echo.cpp ****     }
 1800              		.loc 20 1881 16 is_stmt 0 view .LVU444
 1801 0076 F4EE667A 		vcmp.f32	s15, s13
 1802 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1803 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1804              	.LVL69:
 1805              	.L89:
1881:Veno-Echo.cpp ****     }
 1806              		.loc 20 1881 16 view .LVU445
 1807              	.LBE976:
 1808              	.LBE979:
 935:Veno-Echo.cpp ****         {
 1809              		.loc 20 935 9 is_stmt 1 view .LVU446
 1810 0082 A3B9     		cbnz	r3, .L81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 86


 937:Veno-Echo.cpp ****             {
 1811              		.loc 20 937 13 view .LVU447
 937:Veno-Echo.cpp ****             {
 1812              		.loc 20 937 35 is_stmt 0 view .LVU448
 1813 0084 4E4B     		ldr	r3, .L111+36
 1814 0086 B0EE670A 		vmov.f32	s0, s15
 1815              	.LVL70:
 937:Veno-Echo.cpp ****             {
 1816              		.loc 20 937 35 view .LVU449
 1817 008a 4E48     		ldr	r0, .L111+40
 1818 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1819              	.LBE991:
 1820              	.LBE1014:
 977:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1821              		.loc 20 977 1 view .LVU450
 1822 008e BDEC028B 		vldm	sp!, {d8}
 1823              		.cfi_remember_state
 1824              		.cfi_restore 80
 1825              		.cfi_restore 81
 1826              		.cfi_def_cfa_offset 8
 1827 0092 BDE81040 		pop	{r4, lr}
 1828              		.cfi_restore 14
 1829              		.cfi_restore 4
 1830              		.cfi_def_cfa_offset 0
 1831              	.LBB1015:
 1832              	.LBB992:
 937:Veno-Echo.cpp ****             {
 1833              		.loc 20 937 35 view .LVU451
 1834 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1835              	.LVL71:
 1836              	.L82:
 1837              		.cfi_restore_state
 937:Veno-Echo.cpp ****             {
 1838              		.loc 20 937 35 view .LVU452
 1839              	.LBE992:
 1840              	.LBB993:
 947:Veno-Echo.cpp **** 
 1841              		.loc 20 947 9 is_stmt 1 view .LVU453
 949:Veno-Echo.cpp ****         {
 1842              		.loc 20 949 9 view .LVU454
 1843 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1844 009c 002B     		cmp	r3, #0
 1845 009e 3ED1     		bne	.L92
 951:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1846              		.loc 20 951 13 view .LVU455
 951:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1847              		.loc 20 951 23 is_stmt 0 view .LVU456
 1848 00a0 0124     		movs	r4, #1
 952:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1849              		.loc 20 952 29 view .LVU457
 1850 00a2 4948     		ldr	r0, .L111+44
 953:Veno-Echo.cpp ****         }
 1851              		.loc 20 953 26 view .LVU458
 1852 00a4 4949     		ldr	r1, .L111+48
 951:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1853              		.loc 20 951 23 view .LVU459
 1854 00a6 1470     		strb	r4, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 87


 952:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1855              		.loc 20 952 13 is_stmt 1 view .LVU460
 952:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1856              		.loc 20 952 29 is_stmt 0 view .LVU461
 1857 00a8 0370     		strb	r3, [r0]
 953:Veno-Echo.cpp ****         }
 1858              		.loc 20 953 13 is_stmt 1 view .LVU462
 953:Veno-Echo.cpp ****         }
 1859              		.loc 20 953 26 is_stmt 0 view .LVU463
 1860 00aa 81ED000A 		vstr.32	s0, [r1]
 1861              	.L81:
 953:Veno-Echo.cpp ****         }
 1862              		.loc 20 953 26 view .LVU464
 1863              	.LBE993:
 1864              	.LBE1015:
 977:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1865              		.loc 20 977 1 view .LVU465
 1866 00ae BDEC028B 		vldm	sp!, {d8}
 1867              		.cfi_remember_state
 1868              		.cfi_restore 80
 1869              		.cfi_restore 81
 1870              		.cfi_def_cfa_offset 8
 1871 00b2 10BD     		pop	{r4, pc}
 1872              	.L83:
 1873              		.cfi_restore_state
 1874              	.LBB1016:
 1875              	.LBB1008:
 913:Veno-Echo.cpp ****             {
 1876              		.loc 20 913 13 is_stmt 1 view .LVU466
 913:Veno-Echo.cpp ****             {
 1877              		.loc 20 913 16 is_stmt 0 view .LVU467
 1878 00b4 3E4A     		ldr	r2, .L111+20
 913:Veno-Echo.cpp ****             {
 1879              		.loc 20 913 13 view .LVU468
 1880 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1881 00b8 79B9     		cbnz	r1, .L85
 915:Veno-Echo.cpp ****                 {
 1882              		.loc 20 915 17 is_stmt 1 view .LVU469
 1883              	.LVL72:
 1884              	.LBB980:
 1885              	.LBI980:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1886              		.loc 21 75 3 view .LVU470
 1887              	.LBB981:
 1888              		.loc 21 76 5 view .LVU471
 1889              		.loc 21 76 5 is_stmt 0 view .LVU472
 1890              	.LBE981:
 1891              	.LBE980:
 915:Veno-Echo.cpp ****                 {
 1892              		.loc 20 915 23 view .LVU473
 1893 00ba 3E49     		ldr	r1, .L111+24
 915:Veno-Echo.cpp ****                 {
 1894              		.loc 20 915 17 view .LVU474
 1895 00bc 9FED447A 		vldr.32	s14, .L111+52
 915:Veno-Echo.cpp ****                 {
 1896              		.loc 20 915 23 view .LVU475
 1897 00c0 D1ED007A 		vldr.32	s15, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 88


 1898 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1899              	.LBB983:
 1900              	.LBB982:
 1901              		.loc 21 76 31 view .LVU476
 1902 00c8 F0EEE77A 		vabs.f32	s15, s15
 1903              	.LBE982:
 1904              	.LBE983:
 915:Veno-Echo.cpp ****                 {
 1905              		.loc 20 915 17 view .LVU477
 1906 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1907 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1908 00d4 B7DD     		ble	.L84
 917:Veno-Echo.cpp ****                 }
 1909              		.loc 20 917 21 is_stmt 1 view .LVU478
 917:Veno-Echo.cpp ****                 }
 1910              		.loc 20 917 39 is_stmt 0 view .LVU479
 1911 00d6 0121     		movs	r1, #1
 1912 00d8 1170     		strb	r1, [r2]
 1913              	.L85:
 922:Veno-Echo.cpp **** 
 1914              		.loc 20 922 9 is_stmt 1 view .LVU480
 1915              	.LVL73:
 924:Veno-Echo.cpp ****         {
 1916              		.loc 20 924 9 view .LVU481
 926:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1917              		.loc 20 926 13 view .LVU482
 1918              	.LBB984:
 1919              	.LBI984:
1869:Veno-Echo.cpp **** {
 1920              		.loc 20 1869 7 view .LVU483
 1921              	.LBB985:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1922              		.loc 20 1871 5 view .LVU484
1872:Veno-Echo.cpp **** 
 1923              		.loc 20 1872 5 view .LVU485
 1924              	.LBE985:
 1925              	.LBE984:
 926:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1926              		.loc 20 926 36 is_stmt 0 view .LVU486
 1927 00da 374A     		ldr	r2, .L111+28
 1928              	.LBB988:
 1929              	.LBB986:
1872:Veno-Echo.cpp **** 
 1930              		.loc 20 1872 39 view .LVU487
 1931 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
1872:Veno-Echo.cpp **** 
 1932              		.loc 20 1872 49 view .LVU488
 1933 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
1872:Veno-Echo.cpp **** 
 1934              		.loc 20 1872 39 view .LVU489
 1935 00e4 D2ED007A 		vldr.32	s15, [r2]
1872:Veno-Echo.cpp **** 
 1936              		.loc 20 1872 12 view .LVU490
 1937 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
1872:Veno-Echo.cpp **** 
 1938              		.loc 20 1872 39 view .LVU491
 1939 00ec 77EE677A 		vsub.f32	s15, s14, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 89


1872:Veno-Echo.cpp **** 
 1940              		.loc 20 1872 49 view .LVU492
 1941 00f0 77EEC67A 		vsub.f32	s15, s15, s12
1872:Veno-Echo.cpp **** 
 1942              		.loc 20 1872 12 view .LVU493
 1943 00f4 B0EE406A 		vmov.f32	s12, s0
 1944 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
1874:Veno-Echo.cpp ****     {
 1945              		.loc 20 1874 5 view .LVU494
 1946 00fc B5EEC06A 		vcmpe.f32	s12, #0
1872:Veno-Echo.cpp **** 
 1947              		.loc 20 1872 12 view .LVU495
 1948 0100 F0EE467A 		vmov.f32	s15, s12
 1949              	.LVL74:
1874:Veno-Echo.cpp ****     {
 1950              		.loc 20 1874 5 is_stmt 1 view .LVU496
 1951 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1952 0108 3DD4     		bmi	.L110
1879:Veno-Echo.cpp ****     {
 1953              		.loc 20 1879 5 view .LVU497
1881:Veno-Echo.cpp ****     }
 1954              		.loc 20 1881 16 is_stmt 0 view .LVU498
 1955 010a F4EE477A 		vcmp.f32	s15, s14
 1956 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1957 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1958              	.L87:
 1959              	.LVL75:
 1960              		.loc 20 1884 5 is_stmt 1 view .LVU499
 1961              		.loc 20 1884 5 is_stmt 0 view .LVU500
 1962              	.LBE986:
 1963              	.LBE988:
 927:Veno-Echo.cpp ****         }
 1964              		.loc 20 927 13 is_stmt 1 view .LVU501
 927:Veno-Echo.cpp ****         }
 1965              		.loc 20 927 29 is_stmt 0 view .LVU502
 1966 0116 294A     		ldr	r2, .L111+32
 1967 0118 82ED000A 		vstr.32	s0, [r2]
 1968 011c B1E7     		b	.L89
 1969              	.LVL76:
 1970              	.L92:
 927:Veno-Echo.cpp ****         }
 1971              		.loc 20 927 29 view .LVU503
 1972              	.LBE1008:
 1973              	.LBB1009:
 958:Veno-Echo.cpp ****             {
 1974              		.loc 20 958 13 is_stmt 1 view .LVU504
 958:Veno-Echo.cpp ****             {
 1975              		.loc 20 958 16 is_stmt 0 view .LVU505
 1976 011e 2A4B     		ldr	r3, .L111+44
 958:Veno-Echo.cpp ****             {
 1977              		.loc 20 958 13 view .LVU506
 1978 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1979 0122 7AB9     		cbnz	r2, .L93
 960:Veno-Echo.cpp ****                 {
 1980              		.loc 20 960 17 is_stmt 1 view .LVU507
 1981              	.LVL77:
 1982              	.LBB994:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 90


 1983              	.LBI994:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1984              		.loc 21 75 3 view .LVU508
 1985              	.LBB995:
 1986              		.loc 21 76 5 view .LVU509
 1987              		.loc 21 76 5 is_stmt 0 view .LVU510
 1988              	.LBE995:
 1989              	.LBE994:
 960:Veno-Echo.cpp ****                 {
 1990              		.loc 20 960 23 view .LVU511
 1991 0124 294A     		ldr	r2, .L111+48
 960:Veno-Echo.cpp ****                 {
 1992              		.loc 20 960 17 view .LVU512
 1993 0126 9FED2A7A 		vldr.32	s14, .L111+52
 960:Veno-Echo.cpp ****                 {
 1994              		.loc 20 960 23 view .LVU513
 1995 012a D2ED007A 		vldr.32	s15, [r2]
 1996 012e 70EE677A 		vsub.f32	s15, s0, s15
 1997              	.LBB997:
 1998              	.LBB996:
 1999              		.loc 21 76 31 view .LVU514
 2000 0132 F0EEE77A 		vabs.f32	s15, s15
 2001              	.LBE996:
 2002              	.LBE997:
 960:Veno-Echo.cpp ****                 {
 2003              		.loc 20 960 17 view .LVU515
 2004 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2005 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2006 013e B6DD     		ble	.L81
 962:Veno-Echo.cpp ****                 }
 2007              		.loc 20 962 21 is_stmt 1 view .LVU516
 962:Veno-Echo.cpp ****                 }
 2008              		.loc 20 962 37 is_stmt 0 view .LVU517
 2009 0140 0122     		movs	r2, #1
 2010 0142 1A70     		strb	r2, [r3]
 2011              	.L93:
 967:Veno-Echo.cpp ****         {
 2012              		.loc 20 967 9 is_stmt 1 view .LVU518
 2013              	.LBB998:
 2014              	.LBB999:
 969:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2015              		.loc 20 969 13 view .LVU519
 2016              	.LVL78:
 970:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2017              		.loc 20 970 13 view .LVU520
 970:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2018              		.loc 20 970 61 is_stmt 0 view .LVU521
 2019 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2020 0148 0020     		movs	r0, #0
 2021 014a 9FED221A 		vldr.32	s2, .L111+56
 2022 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2023              	.LVL79:
 2024              	.LBB1000:
 2025              	.LBI1000:
 2026              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 91


   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 92


  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 93


 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 94


 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 95


 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 96


 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 97


 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 98


 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 99


 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 100


 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 101


 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 102


 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 103


 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 104


 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 105


 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 106


 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 107


 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 108


 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 109


1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 110


1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 111


1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 112


1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 113


1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 114


1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 115


1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 116


1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 117


1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 118


1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 119


1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 120


1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 121


1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2027              		.loc 22 1756 3 is_stmt 1 view .LVU522
 2028              	.LBB1001:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2029              		.loc 22 1757 5 view .LVU523
 2030              		.loc 22 1757 28 is_stmt 0 view .LVU524
 2031 0152 B8FE400A 		vrinta.f32	s0, s0
 2032              	.LVL80:
 2033              		.loc 22 1757 28 view .LVU525
 2034              	.LBE1001:
 2035              	.LBE1000:
 971:Veno-Echo.cpp ****             //save setting:
 2036              		.loc 20 971 13 is_stmt 1 view .LVU526
 2037              	.LBB1002:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 122


 2038              	.LBI1002:
1885:Veno-Echo.cpp **** }
1886:Veno-Echo.cpp **** 
1887:Veno-Echo.cpp **** //checks pickup state of primary controls
1888:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
1889:Veno-Echo.cpp **** {
1890:Veno-Echo.cpp ****     bool retval{};
1891:Veno-Echo.cpp ****     
1892:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
1893:Veno-Echo.cpp ****     {
1894:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1895:Veno-Echo.cpp ****         {
1896:Veno-Echo.cpp ****             retval = false;
1897:Veno-Echo.cpp ****         }
1898:Veno-Echo.cpp ****         else
1899:Veno-Echo.cpp ****         {
1900:Veno-Echo.cpp ****             retval = true;
1901:Veno-Echo.cpp ****         }
1902:Veno-Echo.cpp ****     }
1903:Veno-Echo.cpp **** 
1904:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
1905:Veno-Echo.cpp ****     {
1906:Veno-Echo.cpp ****     if(!lastState) //if not picked up
1907:Veno-Echo.cpp ****     {
1908:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1909:Veno-Echo.cpp ****         {
1910:Veno-Echo.cpp ****             retval = true;
1911:Veno-Echo.cpp ****         }
1912:Veno-Echo.cpp **** 
1913:Veno-Echo.cpp ****         else
1914:Veno-Echo.cpp ****         {
1915:Veno-Echo.cpp ****             retval = false;
1916:Veno-Echo.cpp ****         }
1917:Veno-Echo.cpp **** 
1918:Veno-Echo.cpp ****     }
1919:Veno-Echo.cpp ****     else    //previous state is picked up
1920:Veno-Echo.cpp ****     {
1921:Veno-Echo.cpp ****         retval = true;  //always return true
1922:Veno-Echo.cpp ****     }
1923:Veno-Echo.cpp **** 
1924:Veno-Echo.cpp ****     }
1925:Veno-Echo.cpp ****     return retval;
1926:Veno-Echo.cpp **** 
1927:Veno-Echo.cpp **** }
1928:Veno-Echo.cpp **** 
1929:Veno-Echo.cpp **** //Checks pickup state of secondary controls
1930:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
1931:Veno-Echo.cpp **** {
1932:Veno-Echo.cpp ****     pickupState retval{};
1933:Veno-Echo.cpp **** 
1934:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
1935:Veno-Echo.cpp ****     {
1936:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
1937:Veno-Echo.cpp ****         {
1938:Veno-Echo.cpp ****             retval = BELOW;
1939:Veno-Echo.cpp ****         }
1940:Veno-Echo.cpp ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 123


1941:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
1942:Veno-Echo.cpp ****         {
1943:Veno-Echo.cpp ****             retval = ABOVE;
1944:Veno-Echo.cpp ****         }
1945:Veno-Echo.cpp **** 
1946:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
1947:Veno-Echo.cpp ****         {
1948:Veno-Echo.cpp ****             retval = PICKEDUP;
1949:Veno-Echo.cpp ****         }
1950:Veno-Echo.cpp ****     }
1951:Veno-Echo.cpp **** 
1952:Veno-Echo.cpp ****     else    //not a recent shift change
1953:Veno-Echo.cpp ****     {
1954:Veno-Echo.cpp ****         switch(lastState)
1955:Veno-Echo.cpp ****         {
1956:Veno-Echo.cpp ****             case BELOW:
1957:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
1958:Veno-Echo.cpp ****                 retval = PICKEDUP;
1959:Veno-Echo.cpp ****             else
1960:Veno-Echo.cpp ****                 retval = lastState;
1961:Veno-Echo.cpp ****             break;
1962:Veno-Echo.cpp **** 
1963:Veno-Echo.cpp ****             case ABOVE:
1964:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
1965:Veno-Echo.cpp ****                 retval = PICKEDUP;
1966:Veno-Echo.cpp ****             else
1967:Veno-Echo.cpp ****                 retval = lastState;
1968:Veno-Echo.cpp ****             break;
1969:Veno-Echo.cpp ****             case PICKEDUP:
1970:Veno-Echo.cpp ****                 retval = lastState;
1971:Veno-Echo.cpp ****             break;
1972:Veno-Echo.cpp ****         }
1973:Veno-Echo.cpp ****     }
1974:Veno-Echo.cpp ****     
1975:Veno-Echo.cpp ****     return retval;
1976:Veno-Echo.cpp **** }
1977:Veno-Echo.cpp **** 
1978:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2039              		.loc 20 1978 8 view .LVU527
 2040              	.LBB1003:
1979:Veno-Echo.cpp **** {
1980:Veno-Echo.cpp **** double retVal{};
 2041              		.loc 20 1980 1 view .LVU528
1981:Veno-Echo.cpp ****     switch(ratio)
 2042              		.loc 20 1981 5 view .LVU529
 2043              	.LBE1003:
 2044              	.LBE1002:
 970:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2045              		.loc 20 970 130 is_stmt 0 view .LVU530
 2046 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2047 015a 17EE903A 		vmov	r3, s15	@ int
 2048 015e 013B     		subs	r3, r3, #1
 2049 0160 DBB2     		uxtb	r3, r3
 2050 0162 022B     		cmp	r3, #2
 2051 0164 12D9     		bls	.L97
 2052 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2053              	.L98:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 124


 2054              	.LVL81:
 2055              	.LBB1005:
 2056              	.LBB1004:
1982:Veno-Echo.cpp ****     {
1983:Veno-Echo.cpp ****         case QUARTER:
1984:Veno-Echo.cpp ****         retVal = 1.0;
1985:Veno-Echo.cpp ****         break;
1986:Veno-Echo.cpp **** 
1987:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1988:Veno-Echo.cpp ****         retVal = 3.0/2.0;
1989:Veno-Echo.cpp ****         break;
1990:Veno-Echo.cpp **** 
1991:Veno-Echo.cpp ****         case EIGHT:
1992:Veno-Echo.cpp ****         retVal = 2.0;
1993:Veno-Echo.cpp ****         break;
1994:Veno-Echo.cpp **** 
1995:Veno-Echo.cpp ****         case TWELVE:
1996:Veno-Echo.cpp ****         retVal = 3.0;
1997:Veno-Echo.cpp ****         break;
1998:Veno-Echo.cpp **** 
1999:Veno-Echo.cpp ****         default:
2000:Veno-Echo.cpp ****         retVal = 1.0;
2001:Veno-Echo.cpp ****         break;
2002:Veno-Echo.cpp ****     }
2003:Veno-Echo.cpp **** 
2004:Veno-Echo.cpp **** return retVal;
 2057              		.loc 20 2004 1 is_stmt 1 view .LVU531
 2058              		.loc 20 2004 1 is_stmt 0 view .LVU532
 2059              	.LBE1004:
 2060              	.LBE1005:
 971:Veno-Echo.cpp ****             //save setting:
 2061              		.loc 20 971 34 view .LVU533
 2062 016a B0EE480A 		vmov.f32	s0, s16
 2063              	.LVL82:
 971:Veno-Echo.cpp ****             //save setting:
 2064              		.loc 20 971 34 view .LVU534
 2065 016e 1A48     		ldr	r0, .L111+60
 2066 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2067              	.LVL83:
 973:Veno-Echo.cpp ****         }
 2068              		.loc 20 973 13 is_stmt 1 view .LVU535
 973:Veno-Echo.cpp ****         }
 2069              		.loc 20 973 13 is_stmt 0 view .LVU536
 2070              	.LBE999:
 2071              	.LBE998:
 2072              	.LBE1009:
 2073              	.LBE1016:
1980:Veno-Echo.cpp ****     switch(ratio)
 2074              		.loc 20 1980 1 is_stmt 1 view .LVU537
1981:Veno-Echo.cpp ****     {
 2075              		.loc 20 1981 5 view .LVU538
 2076              		.loc 20 2004 1 view .LVU539
 2077              	.LBB1017:
 2078              	.LBB1010:
 2079              	.LBB1007:
 2080              	.LBB1006:
 973:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 125


 2081              		.loc 20 973 34 is_stmt 0 view .LVU540
 2082 0174 194B     		ldr	r3, .L111+64
 2083 0176 83ED018A 		vstr.32	s16, [r3, #4]
 2084              	.LBE1006:
 2085              	.LBE1007:
 2086              	.LBE1010:
 2087              	.LBE1017:
 977:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2088              		.loc 20 977 1 view .LVU541
 2089 017a BDEC028B 		vldm	sp!, {d8}
 2090              		.cfi_remember_state
 2091              		.cfi_restore 80
 2092              		.cfi_restore 81
 2093              		.cfi_def_cfa_offset 8
 2094 017e 10BD     		pop	{r4, pc}
 2095              	.LVL84:
 2096              	.L109:
 2097              		.cfi_restore_state
 2098              	.LBB1018:
 2099              	.LBB1011:
 2100              	.LBB989:
 2101              	.LBB977:
1876:Veno-Echo.cpp ****     }
 2102              		.loc 20 1876 16 view .LVU542
 2103 0180 DFED147A 		vldr.32	s15, .L111+56
 2104              	.LVL85:
1876:Veno-Echo.cpp ****     }
 2105              		.loc 20 1876 16 view .LVU543
 2106 0184 7DE7     		b	.L89
 2107              	.LVL86:
 2108              	.L110:
1876:Veno-Echo.cpp ****     }
 2109              		.loc 20 1876 16 view .LVU544
 2110              	.LBE977:
 2111              	.LBE989:
 2112              	.LBB990:
 2113              	.LBB987:
 2114 0186 DFED137A 		vldr.32	s15, .L111+56
 2115 018a C4E7     		b	.L87
 2116              	.LVL87:
 2117              	.L97:
1876:Veno-Echo.cpp ****     }
 2118              		.loc 20 1876 16 view .LVU545
 2119 018c 144A     		ldr	r2, .L111+68
 2120 018e 02EBC303 		add	r3, r2, r3, lsl #3
 2121 0192 93ED008B 		vldr.64	d8, [r3]
 2122 0196 B7EEC88B 		vcvt.f32.f64	s16, d8
 2123 019a E6E7     		b	.L98
 2124              	.L112:
 2125              		.align	2
 2126              	.L111:
 2127 019c 18000000 		.word	.LANCHOR4+24
 2128 01a0 00000000 		.word	.LANCHOR17
 2129 01a4 ABAAAA2A 		.word	715827883
 2130 01a8 00000000 		.word	.LANCHOR7
 2131 01ac 00000000 		.word	.LANCHOR18
 2132 01b0 00000000 		.word	.LANCHOR19
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 126


 2133 01b4 00000000 		.word	.LANCHOR20
 2134 01b8 00000000 		.word	.LANCHOR16
 2135 01bc 00000000 		.word	.LANCHOR21
 2136 01c0 00000000 		.word	.LANCHOR12
 2137 01c4 00000000 		.word	.LANCHOR1
 2138 01c8 00000000 		.word	.LANCHOR22
 2139 01cc 00000000 		.word	.LANCHOR23
 2140 01d0 0AD7A33B 		.word	1000593162
 2141 01d4 00000000 		.word	0
 2142 01d8 00000000 		.word	.LANCHOR25
 2143 01dc 00000000 		.word	.LANCHOR15
 2144 01e0 00000000 		.word	.LANCHOR24
 2145              	.LBE987:
 2146              	.LBE990:
 2147              	.LBE1011:
 2148              	.LBE1018:
 2149              		.cfi_endproc
 2150              	.LFE4315:
 2152              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2153              		.align	1
 2154              		.p2align 2,,3
 2155              		.global	_Z19Update_feedbackL_CVv
 2156              		.syntax unified
 2157              		.thumb
 2158              		.thumb_func
 2159              		.fpu fpv5-d16
 2161              	_Z19Update_feedbackL_CVv:
 2162              	.LFB4316:
 979:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2163              		.loc 20 979 1 is_stmt 1 view -0
 2164              		.cfi_startproc
 2165              		@ args = 0, pretend = 0, frame = 0
 2166              		@ frame_needed = 0, uses_anonymous_args = 0
 980:Veno-Echo.cpp **** }
 2167              		.loc 20 980 5 view .LVU547
 979:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2168              		.loc 20 979 1 is_stmt 0 view .LVU548
 2169 0000 08B5     		push	{r3, lr}
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 3, -8
 2172              		.cfi_offset 14, -4
 980:Veno-Echo.cpp **** }
 2173              		.loc 20 980 35 view .LVU549
 2174 0002 0221     		movs	r1, #2
 2175 0004 0348     		ldr	r0, .L115
 2176 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2177              	.LVL88:
 980:Veno-Echo.cpp **** }
 2178              		.loc 20 980 18 view .LVU550
 2179 000a 034B     		ldr	r3, .L115+4
 2180 000c 83ED000A 		vstr.32	s0, [r3]
 981:Veno-Echo.cpp **** void Update_feedbackL()
 2181              		.loc 20 981 1 view .LVU551
 2182 0010 08BD     		pop	{r3, pc}
 2183              	.L116:
 2184 0012 00BF     		.align	2
 2185              	.L115:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 127


 2186 0014 18000000 		.word	.LANCHOR4+24
 2187 0018 00000000 		.word	.LANCHOR26
 2188              		.cfi_endproc
 2189              	.LFE4316:
 2191              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2192              		.align	1
 2193              		.p2align 2,,3
 2194              		.global	_Z16Update_feedbackLv
 2195              		.syntax unified
 2196              		.thumb
 2197              		.thumb_func
 2198              		.fpu fpv5-d16
 2200              	_Z16Update_feedbackLv:
 2201              	.LFB4317:
 983:Veno-Echo.cpp ****     static bool lastShift{};
 2202              		.loc 20 983 1 is_stmt 1 view -0
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 0
 2205              		@ frame_needed = 0, uses_anonymous_args = 0
 984:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2206              		.loc 20 984 5 view .LVU553
 985:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2207              		.loc 20 985 5 view .LVU554
 986:Veno-Echo.cpp **** 
 2208              		.loc 20 986 5 view .LVU555
 988:Veno-Echo.cpp **** 
 2209              		.loc 20 988 5 view .LVU556
 992:Veno-Echo.cpp **** 
 2210              		.loc 20 992 5 view .LVU557
 992:Veno-Echo.cpp **** 
 2211              		.loc 20 992 43 is_stmt 0 view .LVU558
 2212 0000 0122     		movs	r2, #1
 2213 0002 0721     		movs	r1, #7
 2214 0004 6248     		ldr	r0, .L145
 983:Veno-Echo.cpp ****     static bool lastShift{};
 2215              		.loc 20 983 1 view .LVU559
 2216 0006 10B5     		push	{r4, lr}
 2217              		.cfi_def_cfa_offset 8
 2218              		.cfi_offset 4, -8
 2219              		.cfi_offset 14, -4
 2220 0008 2DED028B 		vpush.64	{d8}
 2221              		.cfi_def_cfa_offset 16
 2222              		.cfi_offset 80, -16
 2223              		.cfi_offset 81, -12
 992:Veno-Echo.cpp **** 
 2224              		.loc 20 992 43 view .LVU560
 2225 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2226              	.LVL89:
 2227              	.LBB1019:
 994:Veno-Echo.cpp ****     {   
 2228              		.loc 20 994 9 view .LVU561
 2229 0010 604B     		ldr	r3, .L145+4
 2230              	.LVL90:
 994:Veno-Echo.cpp ****     {   
 2231              		.loc 20 994 9 view .LVU562
 2232              	.LBE1019:
 994:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 128


 2233              		.loc 20 994 5 is_stmt 1 view .LVU563
 2234              	.LBB1055:
 2235              	.LBB1020:
 998:Veno-Echo.cpp ****         {
 2236              		.loc 20 998 19 is_stmt 0 view .LVU564
 2237 0012 614A     		ldr	r2, .L145+8
 2238              	.LBE1020:
 994:Veno-Echo.cpp ****     {   
 2239              		.loc 20 994 5 view .LVU565
 2240 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2241 0016 002B     		cmp	r3, #0
 2242 0018 3DD1     		bne	.L118
 2243              	.LBB1043:
 996:Veno-Echo.cpp ****         //update pickup
 2244              		.loc 20 996 9 is_stmt 1 view .LVU566
 998:Veno-Echo.cpp ****         {
 2245              		.loc 20 998 9 view .LVU567
 2246 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2247 001c 0029     		cmp	r1, #0
 2248 001e 47D0     		beq	.L119
1000:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2249              		.loc 20 1000 13 view .LVU568
1001:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2250              		.loc 20 1001 30 is_stmt 0 view .LVU569
 2251 0020 5E48     		ldr	r0, .L145+12
1002:Veno-Echo.cpp ****         } 
 2252              		.loc 20 1002 27 view .LVU570
 2253 0022 5F49     		ldr	r1, .L145+16
1000:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2254              		.loc 20 1000 23 view .LVU571
 2255 0024 1370     		strb	r3, [r2]
1001:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2256              		.loc 20 1001 13 is_stmt 1 view .LVU572
1001:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2257              		.loc 20 1001 30 is_stmt 0 view .LVU573
 2258 0026 0370     		strb	r3, [r0]
1002:Veno-Echo.cpp ****         } 
 2259              		.loc 20 1002 13 is_stmt 1 view .LVU574
1002:Veno-Echo.cpp ****         } 
 2260              		.loc 20 1002 27 is_stmt 0 view .LVU575
 2261 0028 81ED000A 		vstr.32	s0, [r1]
 2262              	.L120:
1015:Veno-Echo.cpp **** 
 2263              		.loc 20 1015 9 is_stmt 1 view .LVU576
 2264              	.LVL91:
1017:Veno-Echo.cpp ****         {
 2265              		.loc 20 1017 9 view .LVU577
1025:Veno-Echo.cpp ****         }
 2266              		.loc 20 1025 13 view .LVU578
 2267              	.LBB1021:
 2268              	.LBI1021:
1869:Veno-Echo.cpp **** {
 2269              		.loc 20 1869 7 view .LVU579
 2270              	.LBB1022:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2271              		.loc 20 1871 5 view .LVU580
1872:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 129


 2272              		.loc 20 1872 5 view .LVU581
 2273              	.LBE1022:
 2274              	.LBE1021:
1025:Veno-Echo.cpp ****         }
 2275              		.loc 20 1025 41 is_stmt 0 view .LVU582
 2276 002c 5D4A     		ldr	r2, .L145+20
 2277              	.LBB1026:
 2278              	.LBB1023:
1872:Veno-Echo.cpp **** 
 2279              		.loc 20 1872 39 view .LVU583
 2280 002e F7EE006A 		vmov.f32	s13, #1.0e+0
1872:Veno-Echo.cpp **** 
 2281              		.loc 20 1872 49 view .LVU584
 2282 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2283              	.LBE1023:
 2284              	.LBE1026:
1025:Veno-Echo.cpp ****         }
 2285              		.loc 20 1025 41 view .LVU585
 2286 0036 5C4B     		ldr	r3, .L145+24
 2287              	.LBB1027:
 2288              	.LBB1024:
1872:Veno-Echo.cpp **** 
 2289              		.loc 20 1872 39 view .LVU586
 2290 0038 92ED007A 		vldr.32	s14, [r2]
1872:Veno-Echo.cpp **** 
 2291              		.loc 20 1872 12 view .LVU587
 2292 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2293 0040 D3ED007A 		vldr.32	s15, [r3]
1872:Veno-Echo.cpp **** 
 2294              		.loc 20 1872 39 view .LVU588
 2295 0044 36EEC77A 		vsub.f32	s14, s13, s14
1872:Veno-Echo.cpp **** 
 2296              		.loc 20 1872 49 view .LVU589
 2297 0048 37EE657A 		vsub.f32	s14, s14, s11
1872:Veno-Echo.cpp **** 
 2298              		.loc 20 1872 12 view .LVU590
 2299 004c E7EE067A 		vfma.f32	s15, s14, s12
 2300              	.LVL92:
1874:Veno-Echo.cpp ****     {
 2301              		.loc 20 1874 5 is_stmt 1 view .LVU591
 2302 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2303 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2304 0058 00F19380 		bmi	.L143
1879:Veno-Echo.cpp ****     {
 2305              		.loc 20 1879 5 view .LVU592
1881:Veno-Echo.cpp ****     }
 2306              		.loc 20 1881 16 is_stmt 0 view .LVU593
 2307 005c F4EE667A 		vcmp.f32	s15, s13
 2308 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2309 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2310              	.LVL93:
 2311              	.L125:
1881:Veno-Echo.cpp ****     }
 2312              		.loc 20 1881 16 view .LVU594
 2313              	.LBE1024:
 2314              	.LBE1027:
1028:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 130


 2315              		.loc 20 1028 9 is_stmt 1 view .LVU595
1028:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2316              		.loc 20 1028 37 is_stmt 0 view .LVU596
 2317 0068 B0EE670A 		vmov.f32	s0, s15
 2318              	.LVL94:
1028:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2319              		.loc 20 1028 37 view .LVU597
 2320 006c 0020     		movs	r0, #0
 2321 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2322 0072 DFED4E0A 		vldr.32	s1, .L145+28
 2323 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2324              	.LVL95:
1029:Veno-Echo.cpp ****     }
 2325              		.loc 20 1029 9 is_stmt 1 view .LVU598
 2326              	.LBB1028:
 2327              	.LBI1028:
 2328              		.file 23 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 131


  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 132


  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2329              		.loc 23 135 13 view .LVU599
 2330              	.LBB1029:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2331              		.loc 23 137 5 view .LVU600
 2332              		.loc 23 137 9 is_stmt 0 view .LVU601
 2333 007a 4D4B     		ldr	r3, .L145+32
 2334 007c 9FED4D7A 		vldr.32	s14, .L145+36
 2335 0080 D3ED007A 		vldr.32	s15, [r3]
 2336              		.loc 23 137 24 view .LVU602
 2337 0084 30EE670A 		vsub.f32	s0, s0, s15
 2338              	.LVL96:
 2339              		.loc 23 137 24 view .LVU603
 2340              	.LBE1029:
 2341              	.LBE1028:
 2342              	.LBE1043:
 2343              	.LBE1055:
1064:Veno-Echo.cpp **** 
 2344              		.loc 20 1064 1 view .LVU604
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 133


 2345 0088 BDEC028B 		vldm	sp!, {d8}
 2346              		.cfi_remember_state
 2347              		.cfi_restore 80
 2348              		.cfi_restore 81
 2349              		.cfi_def_cfa_offset 8
 2350              	.LBB1056:
 2351              	.LBB1044:
 2352              	.LBB1031:
 2353              	.LBB1030:
 2354              		.loc 23 137 9 view .LVU605
 2355 008c E0EE077A 		vfma.f32	s15, s0, s14
 2356 0090 C3ED007A 		vstr.32	s15, [r3]
 2357              	.LBE1030:
 2358              	.LBE1031:
 2359              	.LBE1044:
 2360              	.LBE1056:
1064:Veno-Echo.cpp **** 
 2361              		.loc 20 1064 1 view .LVU606
 2362 0094 10BD     		pop	{r4, pc}
 2363              	.LVL97:
 2364              	.L118:
 2365              		.cfi_restore_state
 2366              	.LBB1057:
 2367              	.LBB1045:
1033:Veno-Echo.cpp **** 
 2368              		.loc 20 1033 9 is_stmt 1 view .LVU607
1035:Veno-Echo.cpp ****         {
 2369              		.loc 20 1035 9 view .LVU608
 2370 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2371 0098 002B     		cmp	r3, #0
 2372 009a 3ED1     		bne	.L128
1037:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2373              		.loc 20 1037 13 view .LVU609
1037:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2374              		.loc 20 1037 23 is_stmt 0 view .LVU610
 2375 009c 0124     		movs	r4, #1
1038:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2376              		.loc 20 1038 29 view .LVU611
 2377 009e 4648     		ldr	r0, .L145+40
1039:Veno-Echo.cpp ****         }
 2378              		.loc 20 1039 26 view .LVU612
 2379 00a0 4649     		ldr	r1, .L145+44
1037:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2380              		.loc 20 1037 23 view .LVU613
 2381 00a2 1470     		strb	r4, [r2]
1038:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2382              		.loc 20 1038 13 is_stmt 1 view .LVU614
1038:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2383              		.loc 20 1038 29 is_stmt 0 view .LVU615
 2384 00a4 0370     		strb	r3, [r0]
1039:Veno-Echo.cpp ****         }
 2385              		.loc 20 1039 13 is_stmt 1 view .LVU616
1039:Veno-Echo.cpp ****         }
 2386              		.loc 20 1039 26 is_stmt 0 view .LVU617
 2387 00a6 81ED000A 		vstr.32	s0, [r1]
 2388              	.L117:
1039:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 134


 2389              		.loc 20 1039 26 view .LVU618
 2390              	.LBE1045:
 2391              	.LBE1057:
1064:Veno-Echo.cpp **** 
 2392              		.loc 20 1064 1 view .LVU619
 2393 00aa BDEC028B 		vldm	sp!, {d8}
 2394              		.cfi_remember_state
 2395              		.cfi_restore 80
 2396              		.cfi_restore 81
 2397              		.cfi_def_cfa_offset 8
 2398 00ae 10BD     		pop	{r4, pc}
 2399              	.L119:
 2400              		.cfi_restore_state
 2401              	.LBB1058:
 2402              	.LBB1052:
1006:Veno-Echo.cpp ****             {
 2403              		.loc 20 1006 13 is_stmt 1 view .LVU620
1006:Veno-Echo.cpp ****             {
 2404              		.loc 20 1006 16 is_stmt 0 view .LVU621
 2405 00b0 3A4B     		ldr	r3, .L145+12
1006:Veno-Echo.cpp ****             {
 2406              		.loc 20 1006 13 view .LVU622
 2407 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2408 00b4 7AB9     		cbnz	r2, .L121
1008:Veno-Echo.cpp ****                 {
 2409              		.loc 20 1008 17 is_stmt 1 view .LVU623
 2410              	.LVL98:
 2411              	.LBB1032:
 2412              	.LBI1032:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2413              		.loc 21 75 3 view .LVU624
 2414              	.LBB1033:
 2415              		.loc 21 76 5 view .LVU625
 2416              		.loc 21 76 5 is_stmt 0 view .LVU626
 2417              	.LBE1033:
 2418              	.LBE1032:
1008:Veno-Echo.cpp ****                 {
 2419              		.loc 20 1008 23 view .LVU627
 2420 00b6 3A4A     		ldr	r2, .L145+16
1008:Veno-Echo.cpp ****                 {
 2421              		.loc 20 1008 17 view .LVU628
 2422 00b8 9FED417A 		vldr.32	s14, .L145+48
1008:Veno-Echo.cpp ****                 {
 2423              		.loc 20 1008 23 view .LVU629
 2424 00bc D2ED007A 		vldr.32	s15, [r2]
 2425 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2426              	.LBB1035:
 2427              	.LBB1034:
 2428              		.loc 21 76 31 view .LVU630
 2429 00c4 F0EEE77A 		vabs.f32	s15, s15
 2430              	.LBE1034:
 2431              	.LBE1035:
1008:Veno-Echo.cpp ****                 {
 2432              		.loc 20 1008 17 view .LVU631
 2433 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2434 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2435 00d0 ACDD     		ble	.L120
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 135


1010:Veno-Echo.cpp ****                 }
 2436              		.loc 20 1010 21 is_stmt 1 view .LVU632
1010:Veno-Echo.cpp ****                 }
 2437              		.loc 20 1010 38 is_stmt 0 view .LVU633
 2438 00d2 0122     		movs	r2, #1
 2439 00d4 1A70     		strb	r2, [r3]
 2440              	.L121:
1015:Veno-Echo.cpp **** 
 2441              		.loc 20 1015 9 is_stmt 1 view .LVU634
 2442              	.LVL99:
1017:Veno-Echo.cpp ****         {
 2443              		.loc 20 1017 9 view .LVU635
1019:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2444              		.loc 20 1019 13 view .LVU636
 2445              	.LBB1036:
 2446              	.LBI1036:
1869:Veno-Echo.cpp **** {
 2447              		.loc 20 1869 7 view .LVU637
 2448              	.LBB1037:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2449              		.loc 20 1871 5 view .LVU638
1872:Veno-Echo.cpp **** 
 2450              		.loc 20 1872 5 view .LVU639
 2451              	.LBE1037:
 2452              	.LBE1036:
1019:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2453              		.loc 20 1019 41 is_stmt 0 view .LVU640
 2454 00d6 334B     		ldr	r3, .L145+20
 2455              	.LBB1040:
 2456              	.LBB1038:
1872:Veno-Echo.cpp **** 
 2457              		.loc 20 1872 39 view .LVU641
 2458 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
1872:Veno-Echo.cpp **** 
 2459              		.loc 20 1872 49 view .LVU642
 2460 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
1872:Veno-Echo.cpp **** 
 2461              		.loc 20 1872 39 view .LVU643
 2462 00e0 D3ED007A 		vldr.32	s15, [r3]
1872:Veno-Echo.cpp **** 
 2463              		.loc 20 1872 12 view .LVU644
 2464 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
1872:Veno-Echo.cpp **** 
 2465              		.loc 20 1872 39 view .LVU645
 2466 00e8 77EE677A 		vsub.f32	s15, s14, s15
1872:Veno-Echo.cpp **** 
 2467              		.loc 20 1872 49 view .LVU646
 2468 00ec 77EEC67A 		vsub.f32	s15, s15, s12
1872:Veno-Echo.cpp **** 
 2469              		.loc 20 1872 12 view .LVU647
 2470 00f0 B0EE406A 		vmov.f32	s12, s0
 2471 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
1874:Veno-Echo.cpp ****     {
 2472              		.loc 20 1874 5 view .LVU648
 2473 00f8 B5EEC06A 		vcmpe.f32	s12, #0
1872:Veno-Echo.cpp **** 
 2474              		.loc 20 1872 12 view .LVU649
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 136


 2475 00fc F0EE467A 		vmov.f32	s15, s12
 2476              	.LVL100:
1874:Veno-Echo.cpp ****     {
 2477              		.loc 20 1874 5 is_stmt 1 view .LVU650
 2478 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2479 0104 40D4     		bmi	.L144
1879:Veno-Echo.cpp ****     {
 2480              		.loc 20 1879 5 view .LVU651
1881:Veno-Echo.cpp ****     }
 2481              		.loc 20 1881 16 is_stmt 0 view .LVU652
 2482 0106 F4EE477A 		vcmp.f32	s15, s14
 2483 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2484 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2485              	.L123:
 2486              	.LVL101:
1884:Veno-Echo.cpp **** }
 2487              		.loc 20 1884 5 is_stmt 1 view .LVU653
1884:Veno-Echo.cpp **** }
 2488              		.loc 20 1884 5 is_stmt 0 view .LVU654
 2489              	.LBE1038:
 2490              	.LBE1040:
1020:Veno-Echo.cpp ****         }
 2491              		.loc 20 1020 13 is_stmt 1 view .LVU655
1020:Veno-Echo.cpp ****         }
 2492              		.loc 20 1020 28 is_stmt 0 view .LVU656
 2493 0112 254B     		ldr	r3, .L145+24
 2494 0114 83ED000A 		vstr.32	s0, [r3]
 2495 0118 A6E7     		b	.L125
 2496              	.LVL102:
 2497              	.L128:
1020:Veno-Echo.cpp ****         }
 2498              		.loc 20 1020 28 view .LVU657
 2499              	.LBE1052:
 2500              	.LBB1053:
1044:Veno-Echo.cpp ****             {
 2501              		.loc 20 1044 13 is_stmt 1 view .LVU658
1044:Veno-Echo.cpp ****             {
 2502              		.loc 20 1044 16 is_stmt 0 view .LVU659
 2503 011a 274B     		ldr	r3, .L145+40
1044:Veno-Echo.cpp ****             {
 2504              		.loc 20 1044 13 view .LVU660
 2505 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2506 011e 7AB9     		cbnz	r2, .L130
1046:Veno-Echo.cpp ****                 {
 2507              		.loc 20 1046 17 is_stmt 1 view .LVU661
 2508              	.LVL103:
 2509              	.LBB1046:
 2510              	.LBI1046:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2511              		.loc 21 75 3 view .LVU662
 2512              	.LBB1047:
 2513              		.loc 21 76 5 view .LVU663
 2514              		.loc 21 76 5 is_stmt 0 view .LVU664
 2515              	.LBE1047:
 2516              	.LBE1046:
1046:Veno-Echo.cpp ****                 {
 2517              		.loc 20 1046 23 view .LVU665
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 137


 2518 0120 264A     		ldr	r2, .L145+44
1046:Veno-Echo.cpp ****                 {
 2519              		.loc 20 1046 17 view .LVU666
 2520 0122 9FED277A 		vldr.32	s14, .L145+48
1046:Veno-Echo.cpp ****                 {
 2521              		.loc 20 1046 23 view .LVU667
 2522 0126 D2ED007A 		vldr.32	s15, [r2]
 2523 012a 70EE677A 		vsub.f32	s15, s0, s15
 2524              	.LBB1049:
 2525              	.LBB1048:
 2526              		.loc 21 76 31 view .LVU668
 2527 012e F0EEE77A 		vabs.f32	s15, s15
 2528              	.LBE1048:
 2529              	.LBE1049:
1046:Veno-Echo.cpp ****                 {
 2530              		.loc 20 1046 17 view .LVU669
 2531 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2532 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2533 013a B6DD     		ble	.L117
1048:Veno-Echo.cpp ****                 }
 2534              		.loc 20 1048 21 is_stmt 1 view .LVU670
1048:Veno-Echo.cpp ****                 }
 2535              		.loc 20 1048 37 is_stmt 0 view .LVU671
 2536 013c 0122     		movs	r2, #1
 2537 013e 1A70     		strb	r2, [r3]
 2538              	.L130:
1053:Veno-Echo.cpp ****         {
 2539              		.loc 20 1053 9 is_stmt 1 view .LVU672
 2540              	.LBB1050:
 2541              	.LBB1051:
1055:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2542              		.loc 20 1055 13 view .LVU673
 2543              	.LVL104:
1056:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2544              		.loc 20 1056 13 view .LVU674
1056:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2545              		.loc 20 1056 29 is_stmt 0 view .LVU675
 2546 0140 9FED201A 		vldr.32	s2, .L145+52
 2547 0144 0120     		movs	r0, #1
 2548 0146 DFED200A 		vldr.32	s1, .L145+56
 2549 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2550              	.LVL105:
1056:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2551              		.loc 20 1056 29 view .LVU676
 2552 014e B0EE408A 		vmov.f32	s16, s0
 2553              	.LVL106:
1057:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2554              		.loc 20 1057 13 is_stmt 1 view .LVU677
1057:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2555              		.loc 20 1057 26 is_stmt 0 view .LVU678
 2556 0152 1E48     		ldr	r0, .L145+60
 2557 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2558              	.LVL107:
1058:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2559              		.loc 20 1058 13 is_stmt 1 view .LVU679
1058:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2560              		.loc 20 1058 26 is_stmt 0 view .LVU680
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 138


 2561 0158 1D48     		ldr	r0, .L145+64
 2562 015a B0EE480A 		vmov.f32	s0, s16
 2563 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2564              	.LVL108:
1059:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2565              		.loc 20 1059 13 is_stmt 1 view .LVU681
1059:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2566              		.loc 20 1059 31 is_stmt 0 view .LVU682
 2567 0162 B0EE480A 		vmov.f32	s0, s16
 2568 0166 1B48     		ldr	r0, .L145+68
 2569 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2570              	.LVL109:
1060:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2571              		.loc 20 1060 13 is_stmt 1 view .LVU683
1060:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2572              		.loc 20 1060 31 is_stmt 0 view .LVU684
 2573 016c B0EE480A 		vmov.f32	s0, s16
 2574 0170 1948     		ldr	r0, .L145+72
 2575 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2576              	.LVL110:
1061:Veno-Echo.cpp ****         }
 2577              		.loc 20 1061 13 is_stmt 1 view .LVU685
1061:Veno-Echo.cpp ****         }
 2578              		.loc 20 1061 35 is_stmt 0 view .LVU686
 2579 0176 194B     		ldr	r3, .L145+76
 2580 0178 83ED048A 		vstr.32	s16, [r3, #16]
 2581              	.LBE1051:
 2582              	.LBE1050:
 2583              	.LBE1053:
 2584              	.LBE1058:
1064:Veno-Echo.cpp **** 
 2585              		.loc 20 1064 1 view .LVU687
 2586 017c BDEC028B 		vldm	sp!, {d8}
 2587              		.cfi_remember_state
 2588              		.cfi_restore 80
 2589              		.cfi_restore 81
 2590              		.cfi_def_cfa_offset 8
 2591              	.LVL111:
1064:Veno-Echo.cpp **** 
 2592              		.loc 20 1064 1 view .LVU688
 2593 0180 10BD     		pop	{r4, pc}
 2594              	.LVL112:
 2595              	.L143:
 2596              		.cfi_restore_state
 2597              	.LBB1059:
 2598              	.LBB1054:
 2599              	.LBB1041:
 2600              	.LBB1025:
1876:Veno-Echo.cpp ****     }
 2601              		.loc 20 1876 16 view .LVU689
 2602 0182 DFED0A7A 		vldr.32	s15, .L145+28
 2603              	.LVL113:
1876:Veno-Echo.cpp ****     }
 2604              		.loc 20 1876 16 view .LVU690
 2605 0186 6FE7     		b	.L125
 2606              	.LVL114:
 2607              	.L144:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 139


1876:Veno-Echo.cpp ****     }
 2608              		.loc 20 1876 16 view .LVU691
 2609              	.LBE1025:
 2610              	.LBE1041:
 2611              	.LBB1042:
 2612              	.LBB1039:
 2613 0188 DFED087A 		vldr.32	s15, .L145+28
 2614 018c C1E7     		b	.L123
 2615              	.L146:
 2616 018e 00BF     		.align	2
 2617              	.L145:
 2618 0190 18000000 		.word	.LANCHOR4+24
 2619 0194 00000000 		.word	.LANCHOR7
 2620 0198 00000000 		.word	.LANCHOR27
 2621 019c 00000000 		.word	.LANCHOR28
 2622 01a0 00000000 		.word	.LANCHOR29
 2623 01a4 00000000 		.word	.LANCHOR26
 2624 01a8 00000000 		.word	.LANCHOR30
 2625 01ac 00000000 		.word	0
 2626 01b0 00000000 		.word	.LANCHOR31
 2627 01b4 6F12033D 		.word	1023611503
 2628 01b8 00000000 		.word	.LANCHOR32
 2629 01bc 00000000 		.word	.LANCHOR33
 2630 01c0 0AD7A33B 		.word	1000593162
 2631 01c4 00004844 		.word	1145569280
 2632 01c8 0000C842 		.word	1120403456
 2633 01cc 00000000 		.word	.LANCHOR34
 2634 01d0 00000000 		.word	.LANCHOR35
 2635 01d4 00000000 		.word	.LANCHOR36
 2636 01d8 00000000 		.word	.LANCHOR37
 2637 01dc 00000000 		.word	.LANCHOR15
 2638              	.LBE1039:
 2639              	.LBE1042:
 2640              	.LBE1054:
 2641              	.LBE1059:
 2642              		.cfi_endproc
 2643              	.LFE4317:
 2645              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2646              		.align	1
 2647              		.p2align 2,,3
 2648              		.global	_Z19Update_feedbackR_CVv
 2649              		.syntax unified
 2650              		.thumb
 2651              		.thumb_func
 2652              		.fpu fpv5-d16
 2654              	_Z19Update_feedbackR_CVv:
 2655              	.LFB4318:
1067:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2656              		.loc 20 1067 1 is_stmt 1 view -0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 0
 2659              		@ frame_needed = 0, uses_anonymous_args = 0
1068:Veno-Echo.cpp **** }
 2660              		.loc 20 1068 5 view .LVU693
1067:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2661              		.loc 20 1067 1 is_stmt 0 view .LVU694
 2662 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 140


 2663              		.cfi_def_cfa_offset 8
 2664              		.cfi_offset 3, -8
 2665              		.cfi_offset 14, -4
1068:Veno-Echo.cpp **** }
 2666              		.loc 20 1068 35 view .LVU695
 2667 0002 0321     		movs	r1, #3
 2668 0004 0348     		ldr	r0, .L149
 2669 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2670              	.LVL115:
1068:Veno-Echo.cpp **** }
 2671              		.loc 20 1068 18 view .LVU696
 2672 000a 034B     		ldr	r3, .L149+4
 2673 000c 83ED000A 		vstr.32	s0, [r3]
1069:Veno-Echo.cpp **** 
 2674              		.loc 20 1069 1 view .LVU697
 2675 0010 08BD     		pop	{r3, pc}
 2676              	.L150:
 2677 0012 00BF     		.align	2
 2678              	.L149:
 2679 0014 18000000 		.word	.LANCHOR4+24
 2680 0018 00000000 		.word	.LANCHOR38
 2681              		.cfi_endproc
 2682              	.LFE4318:
 2684              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2685              		.align	1
 2686              		.p2align 2,,3
 2687              		.global	_Z16Update_feedbackRv
 2688              		.syntax unified
 2689              		.thumb
 2690              		.thumb_func
 2691              		.fpu fpv5-d16
 2693              	_Z16Update_feedbackRv:
 2694              	.LFB4319:
1072:Veno-Echo.cpp ****     static bool lastShift{};
 2695              		.loc 20 1072 1 is_stmt 1 view -0
 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 0
 2698              		@ frame_needed = 0, uses_anonymous_args = 0
1073:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2699              		.loc 20 1073 5 view .LVU699
1074:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2700              		.loc 20 1074 5 view .LVU700
1075:Veno-Echo.cpp **** 
 2701              		.loc 20 1075 5 view .LVU701
1077:Veno-Echo.cpp **** 
 2702              		.loc 20 1077 5 view .LVU702
1080:Veno-Echo.cpp **** 
 2703              		.loc 20 1080 5 view .LVU703
1080:Veno-Echo.cpp **** 
 2704              		.loc 20 1080 43 is_stmt 0 view .LVU704
 2705 0000 0422     		movs	r2, #4
 2706 0002 0721     		movs	r1, #7
 2707 0004 6548     		ldr	r0, .L181
1072:Veno-Echo.cpp ****     static bool lastShift{};
 2708              		.loc 20 1072 1 view .LVU705
 2709 0006 10B5     		push	{r4, lr}
 2710              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 141


 2711              		.cfi_offset 4, -8
 2712              		.cfi_offset 14, -4
 2713 0008 2DED028B 		vpush.64	{d8}
 2714              		.cfi_def_cfa_offset 16
 2715              		.cfi_offset 80, -16
 2716              		.cfi_offset 81, -12
1080:Veno-Echo.cpp **** 
 2717              		.loc 20 1080 43 view .LVU706
 2718 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2719              	.LVL116:
 2720              	.LBB1060:
1082:Veno-Echo.cpp ****     {   
 2721              		.loc 20 1082 9 view .LVU707
 2722 0010 634B     		ldr	r3, .L181+4
 2723              	.LVL117:
1082:Veno-Echo.cpp ****     {   
 2724              		.loc 20 1082 9 view .LVU708
 2725              	.LBE1060:
1082:Veno-Echo.cpp ****     {   
 2726              		.loc 20 1082 5 is_stmt 1 view .LVU709
 2727              	.LBB1094:
 2728              	.LBB1061:
1086:Veno-Echo.cpp ****         {
 2729              		.loc 20 1086 19 is_stmt 0 view .LVU710
 2730 0012 644A     		ldr	r2, .L181+8
 2731              	.LBE1061:
1082:Veno-Echo.cpp ****     {   
 2732              		.loc 20 1082 5 view .LVU711
 2733 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2734 0016 002B     		cmp	r3, #0
 2735 0018 3FD1     		bne	.L152
 2736              	.LBB1082:
1084:Veno-Echo.cpp ****         //update pickup
 2737              		.loc 20 1084 9 is_stmt 1 view .LVU712
1086:Veno-Echo.cpp ****         {
 2738              		.loc 20 1086 9 view .LVU713
 2739 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2740 001c 0029     		cmp	r1, #0
 2741 001e 49D0     		beq	.L153
1088:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2742              		.loc 20 1088 13 view .LVU714
1089:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2743              		.loc 20 1089 30 is_stmt 0 view .LVU715
 2744 0020 614C     		ldr	r4, .L181+12
1090:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2745              		.loc 20 1090 28 view .LVU716
 2746 0022 6248     		ldr	r0, .L181+16
1091:Veno-Echo.cpp ****         } 
 2747              		.loc 20 1091 27 view .LVU717
 2748 0024 6249     		ldr	r1, .L181+20
1088:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2749              		.loc 20 1088 23 view .LVU718
 2750 0026 1370     		strb	r3, [r2]
1089:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2751              		.loc 20 1089 13 is_stmt 1 view .LVU719
1089:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2752              		.loc 20 1089 30 is_stmt 0 view .LVU720
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 142


 2753 0028 2370     		strb	r3, [r4]
1090:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2754              		.loc 20 1090 13 is_stmt 1 view .LVU721
1090:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2755              		.loc 20 1090 28 is_stmt 0 view .LVU722
 2756 002a 80ED000A 		vstr.32	s0, [r0]
1091:Veno-Echo.cpp ****         } 
 2757              		.loc 20 1091 13 is_stmt 1 view .LVU723
1091:Veno-Echo.cpp ****         } 
 2758              		.loc 20 1091 27 is_stmt 0 view .LVU724
 2759 002e 81ED000A 		vstr.32	s0, [r1]
 2760              	.LVL118:
 2761              	.L154:
1104:Veno-Echo.cpp ****         
 2762              		.loc 20 1104 9 is_stmt 1 view .LVU725
1106:Veno-Echo.cpp ****         {
 2763              		.loc 20 1106 9 view .LVU726
1114:Veno-Echo.cpp ****         }
 2764              		.loc 20 1114 13 view .LVU727
 2765              	.LBB1062:
 2766              	.LBI1062:
1869:Veno-Echo.cpp **** {
 2767              		.loc 20 1869 7 view .LVU728
 2768              	.LBB1063:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2769              		.loc 20 1871 5 view .LVU729
1872:Veno-Echo.cpp **** 
 2770              		.loc 20 1872 5 view .LVU730
 2771              	.LBE1063:
 2772              	.LBE1062:
1114:Veno-Echo.cpp ****         }
 2773              		.loc 20 1114 41 is_stmt 0 view .LVU731
 2774 0032 604B     		ldr	r3, .L181+24
 2775              	.LBB1066:
 2776              	.LBB1064:
1872:Veno-Echo.cpp **** 
 2777              		.loc 20 1872 39 view .LVU732
 2778 0034 B7EE007A 		vmov.f32	s14, #1.0e+0
1872:Veno-Echo.cpp **** 
 2779              		.loc 20 1872 49 view .LVU733
 2780 0038 B6EE006A 		vmov.f32	s12, #5.0e-1
1872:Veno-Echo.cpp **** 
 2781              		.loc 20 1872 39 view .LVU734
 2782 003c D3ED007A 		vldr.32	s15, [r3]
1872:Veno-Echo.cpp **** 
 2783              		.loc 20 1872 12 view .LVU735
 2784 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
1872:Veno-Echo.cpp **** 
 2785              		.loc 20 1872 39 view .LVU736
 2786 0044 77EE677A 		vsub.f32	s15, s14, s15
1872:Veno-Echo.cpp **** 
 2787              		.loc 20 1872 49 view .LVU737
 2788 0048 77EEC67A 		vsub.f32	s15, s15, s12
1872:Veno-Echo.cpp **** 
 2789              		.loc 20 1872 12 view .LVU738
 2790 004c A7EEA60A 		vfma.f32	s0, s15, s13
1874:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 143


 2791              		.loc 20 1874 5 view .LVU739
 2792 0050 B5EEC00A 		vcmpe.f32	s0, #0
1872:Veno-Echo.cpp **** 
 2793              		.loc 20 1872 12 view .LVU740
 2794 0054 F0EE407A 		vmov.f32	s15, s0
 2795              	.LVL119:
1874:Veno-Echo.cpp ****     {
 2796              		.loc 20 1874 5 is_stmt 1 view .LVU741
 2797 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2798 005c 00F19380 		bmi	.L179
1879:Veno-Echo.cpp ****     {
 2799              		.loc 20 1879 5 view .LVU742
1881:Veno-Echo.cpp ****     }
 2800              		.loc 20 1881 16 is_stmt 0 view .LVU743
 2801 0060 F4EE477A 		vcmp.f32	s15, s14
 2802 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2803 0068 77FE277A 		vselgt.f32	s15, s14, s15
 2804              	.LVL120:
 2805              	.L160:
1881:Veno-Echo.cpp ****     }
 2806              		.loc 20 1881 16 view .LVU744
 2807              	.LBE1064:
 2808              	.LBE1066:
1117:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2809              		.loc 20 1117 9 is_stmt 1 view .LVU745
1117:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2810              		.loc 20 1117 37 is_stmt 0 view .LVU746
 2811 006c B0EE670A 		vmov.f32	s0, s15
 2812 0070 0020     		movs	r0, #0
 2813 0072 B7EE041A 		vmov.f32	s2, #1.25e+0
 2814 0076 DFED500A 		vldr.32	s1, .L181+28
 2815 007a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2816              	.LVL121:
1118:Veno-Echo.cpp ****     }
 2817              		.loc 20 1118 9 is_stmt 1 view .LVU747
 2818              	.LBB1067:
 2819              	.LBI1067:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2820              		.loc 23 135 13 view .LVU748
 2821              	.LBB1068:
 2822              		.loc 23 137 5 view .LVU749
 2823              		.loc 23 137 9 is_stmt 0 view .LVU750
 2824 007e 4F4B     		ldr	r3, .L181+32
 2825 0080 9FED4F7A 		vldr.32	s14, .L181+36
 2826 0084 D3ED007A 		vldr.32	s15, [r3]
 2827              		.loc 23 137 24 view .LVU751
 2828 0088 30EE670A 		vsub.f32	s0, s0, s15
 2829              	.LVL122:
 2830              		.loc 23 137 24 view .LVU752
 2831              	.LBE1068:
 2832              	.LBE1067:
 2833              	.LBE1082:
 2834              	.LBE1094:
1154:Veno-Echo.cpp **** 
 2835              		.loc 20 1154 1 view .LVU753
 2836 008c BDEC028B 		vldm	sp!, {d8}
 2837              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 144


 2838              		.cfi_restore 80
 2839              		.cfi_restore 81
 2840              		.cfi_def_cfa_offset 8
 2841              	.LBB1095:
 2842              	.LBB1083:
 2843              	.LBB1070:
 2844              	.LBB1069:
 2845              		.loc 23 137 9 view .LVU754
 2846 0090 E0EE077A 		vfma.f32	s15, s0, s14
 2847 0094 C3ED007A 		vstr.32	s15, [r3]
 2848              	.LBE1069:
 2849              	.LBE1070:
 2850              	.LBE1083:
 2851              	.LBE1095:
1154:Veno-Echo.cpp **** 
 2852              		.loc 20 1154 1 view .LVU755
 2853 0098 10BD     		pop	{r4, pc}
 2854              	.LVL123:
 2855              	.L152:
 2856              		.cfi_restore_state
 2857              	.LBB1096:
 2858              	.LBB1084:
1123:Veno-Echo.cpp **** 
 2859              		.loc 20 1123 9 is_stmt 1 view .LVU756
1125:Veno-Echo.cpp ****         {
 2860              		.loc 20 1125 10 view .LVU757
 2861 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2862 009c 002B     		cmp	r3, #0
 2863 009e 3ED1     		bne	.L163
1127:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2864              		.loc 20 1127 13 view .LVU758
1127:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2865              		.loc 20 1127 23 is_stmt 0 view .LVU759
 2866 00a0 0124     		movs	r4, #1
1128:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2867              		.loc 20 1128 29 view .LVU760
 2868 00a2 4848     		ldr	r0, .L181+40
1129:Veno-Echo.cpp ****         }
 2869              		.loc 20 1129 26 view .LVU761
 2870 00a4 4849     		ldr	r1, .L181+44
1127:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2871              		.loc 20 1127 23 view .LVU762
 2872 00a6 1470     		strb	r4, [r2]
1128:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2873              		.loc 20 1128 13 is_stmt 1 view .LVU763
1128:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2874              		.loc 20 1128 29 is_stmt 0 view .LVU764
 2875 00a8 0370     		strb	r3, [r0]
1129:Veno-Echo.cpp ****         }
 2876              		.loc 20 1129 13 is_stmt 1 view .LVU765
1129:Veno-Echo.cpp ****         }
 2877              		.loc 20 1129 26 is_stmt 0 view .LVU766
 2878 00aa 81ED000A 		vstr.32	s0, [r1]
 2879              	.L151:
1129:Veno-Echo.cpp ****         }
 2880              		.loc 20 1129 26 view .LVU767
 2881              	.LBE1084:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 145


 2882              	.LBE1096:
1154:Veno-Echo.cpp **** 
 2883              		.loc 20 1154 1 view .LVU768
 2884 00ae BDEC028B 		vldm	sp!, {d8}
 2885              		.cfi_remember_state
 2886              		.cfi_restore 80
 2887              		.cfi_restore 81
 2888              		.cfi_def_cfa_offset 8
 2889 00b2 10BD     		pop	{r4, pc}
 2890              	.L153:
 2891              		.cfi_restore_state
 2892              	.LBB1097:
 2893              	.LBB1091:
1095:Veno-Echo.cpp ****             {
 2894              		.loc 20 1095 13 is_stmt 1 view .LVU769
1095:Veno-Echo.cpp ****             {
 2895              		.loc 20 1095 16 is_stmt 0 view .LVU770
 2896 00b4 3C4B     		ldr	r3, .L181+12
1095:Veno-Echo.cpp ****             {
 2897              		.loc 20 1095 13 view .LVU771
 2898 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2899 00b8 7AB9     		cbnz	r2, .L155
1097:Veno-Echo.cpp ****                 {
 2900              		.loc 20 1097 17 is_stmt 1 view .LVU772
 2901              	.LVL124:
 2902              	.LBB1071:
 2903              	.LBI1071:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2904              		.loc 21 75 3 view .LVU773
 2905              	.LBB1072:
 2906              		.loc 21 76 5 view .LVU774
 2907              		.loc 21 76 5 is_stmt 0 view .LVU775
 2908              	.LBE1072:
 2909              	.LBE1071:
1097:Veno-Echo.cpp ****                 {
 2910              		.loc 20 1097 23 view .LVU776
 2911 00ba 3D4A     		ldr	r2, .L181+20
1097:Veno-Echo.cpp ****                 {
 2912              		.loc 20 1097 17 view .LVU777
 2913 00bc 9FED437A 		vldr.32	s14, .L181+48
1097:Veno-Echo.cpp ****                 {
 2914              		.loc 20 1097 23 view .LVU778
 2915 00c0 D2ED007A 		vldr.32	s15, [r2]
 2916 00c4 70EE677A 		vsub.f32	s15, s0, s15
 2917              	.LBB1074:
 2918              	.LBB1073:
 2919              		.loc 21 76 31 view .LVU779
 2920 00c8 F0EEE77A 		vabs.f32	s15, s15
 2921              	.LBE1073:
 2922              	.LBE1074:
1097:Veno-Echo.cpp ****                 {
 2923              		.loc 20 1097 17 view .LVU780
 2924 00cc F4EEC77A 		vcmpe.f32	s15, s14
 2925 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2926 00d4 5DDD     		ble	.L175
1099:Veno-Echo.cpp ****                 }
 2927              		.loc 20 1099 21 is_stmt 1 view .LVU781
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 146


1099:Veno-Echo.cpp ****                 }
 2928              		.loc 20 1099 38 is_stmt 0 view .LVU782
 2929 00d6 0122     		movs	r2, #1
 2930 00d8 1A70     		strb	r2, [r3]
 2931              	.L155:
1104:Veno-Echo.cpp ****         
 2932              		.loc 20 1104 9 is_stmt 1 view .LVU783
 2933              	.LVL125:
1106:Veno-Echo.cpp ****         {
 2934              		.loc 20 1106 9 view .LVU784
1108:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2935              		.loc 20 1108 13 view .LVU785
 2936              	.LBB1075:
 2937              	.LBI1075:
1869:Veno-Echo.cpp **** {
 2938              		.loc 20 1869 7 view .LVU786
 2939              	.LBB1076:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2940              		.loc 20 1871 5 view .LVU787
1872:Veno-Echo.cpp **** 
 2941              		.loc 20 1872 5 view .LVU788
 2942              	.LBE1076:
 2943              	.LBE1075:
1108:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2944              		.loc 20 1108 41 is_stmt 0 view .LVU789
 2945 00da 364B     		ldr	r3, .L181+24
 2946              	.LBB1079:
 2947              	.LBB1077:
1872:Veno-Echo.cpp **** 
 2948              		.loc 20 1872 39 view .LVU790
 2949 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
1872:Veno-Echo.cpp **** 
 2950              		.loc 20 1872 49 view .LVU791
 2951 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
1872:Veno-Echo.cpp **** 
 2952              		.loc 20 1872 39 view .LVU792
 2953 00e4 D3ED007A 		vldr.32	s15, [r3]
1872:Veno-Echo.cpp **** 
 2954              		.loc 20 1872 12 view .LVU793
 2955 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
1872:Veno-Echo.cpp **** 
 2956              		.loc 20 1872 39 view .LVU794
 2957 00ec 77EE677A 		vsub.f32	s15, s14, s15
1872:Veno-Echo.cpp **** 
 2958              		.loc 20 1872 49 view .LVU795
 2959 00f0 77EEC67A 		vsub.f32	s15, s15, s12
1872:Veno-Echo.cpp **** 
 2960              		.loc 20 1872 12 view .LVU796
 2961 00f4 B0EE406A 		vmov.f32	s12, s0
 2962 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
1874:Veno-Echo.cpp ****     {
 2963              		.loc 20 1874 5 view .LVU797
 2964 00fc B5EEC06A 		vcmpe.f32	s12, #0
1872:Veno-Echo.cpp **** 
 2965              		.loc 20 1872 12 view .LVU798
 2966 0100 F0EE467A 		vmov.f32	s15, s12
 2967              	.LVL126:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 147


1874:Veno-Echo.cpp ****     {
 2968              		.loc 20 1874 5 is_stmt 1 view .LVU799
 2969 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2970 0108 40D4     		bmi	.L180
1879:Veno-Echo.cpp ****     {
 2971              		.loc 20 1879 5 view .LVU800
1881:Veno-Echo.cpp ****     }
 2972              		.loc 20 1881 16 is_stmt 0 view .LVU801
 2973 010a F4EE477A 		vcmp.f32	s15, s14
 2974 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2975 0112 77FE277A 		vselgt.f32	s15, s14, s15
 2976              	.L158:
 2977              	.LVL127:
1884:Veno-Echo.cpp **** }
 2978              		.loc 20 1884 5 is_stmt 1 view .LVU802
1884:Veno-Echo.cpp **** }
 2979              		.loc 20 1884 5 is_stmt 0 view .LVU803
 2980              	.LBE1077:
 2981              	.LBE1079:
1109:Veno-Echo.cpp ****         }
 2982              		.loc 20 1109 13 is_stmt 1 view .LVU804
1109:Veno-Echo.cpp ****         }
 2983              		.loc 20 1109 28 is_stmt 0 view .LVU805
 2984 0116 254B     		ldr	r3, .L181+16
 2985 0118 83ED000A 		vstr.32	s0, [r3]
 2986 011c A6E7     		b	.L160
 2987              	.LVL128:
 2988              	.L163:
1109:Veno-Echo.cpp ****         }
 2989              		.loc 20 1109 28 view .LVU806
 2990              	.LBE1091:
 2991              	.LBB1092:
1134:Veno-Echo.cpp ****             {
 2992              		.loc 20 1134 13 is_stmt 1 view .LVU807
1134:Veno-Echo.cpp ****             {
 2993              		.loc 20 1134 16 is_stmt 0 view .LVU808
 2994 011e 294B     		ldr	r3, .L181+40
1134:Veno-Echo.cpp ****             {
 2995              		.loc 20 1134 13 view .LVU809
 2996 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2997 0122 7AB9     		cbnz	r2, .L165
1136:Veno-Echo.cpp ****                 {
 2998              		.loc 20 1136 17 is_stmt 1 view .LVU810
 2999              	.LVL129:
 3000              	.LBB1085:
 3001              	.LBI1085:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3002              		.loc 21 75 3 view .LVU811
 3003              	.LBB1086:
 3004              		.loc 21 76 5 view .LVU812
 3005              		.loc 21 76 5 is_stmt 0 view .LVU813
 3006              	.LBE1086:
 3007              	.LBE1085:
1136:Veno-Echo.cpp ****                 {
 3008              		.loc 20 1136 23 view .LVU814
 3009 0124 284A     		ldr	r2, .L181+44
1136:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 148


 3010              		.loc 20 1136 17 view .LVU815
 3011 0126 9FED297A 		vldr.32	s14, .L181+48
1136:Veno-Echo.cpp ****                 {
 3012              		.loc 20 1136 23 view .LVU816
 3013 012a D2ED007A 		vldr.32	s15, [r2]
 3014 012e 70EE677A 		vsub.f32	s15, s0, s15
 3015              	.LBB1088:
 3016              	.LBB1087:
 3017              		.loc 21 76 31 view .LVU817
 3018 0132 F0EEE77A 		vabs.f32	s15, s15
 3019              	.LBE1087:
 3020              	.LBE1088:
1136:Veno-Echo.cpp ****                 {
 3021              		.loc 20 1136 17 view .LVU818
 3022 0136 F4EEC77A 		vcmpe.f32	s15, s14
 3023 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3024 013e B6DD     		ble	.L151
1138:Veno-Echo.cpp ****                 }
 3025              		.loc 20 1138 21 is_stmt 1 view .LVU819
1138:Veno-Echo.cpp ****                 }
 3026              		.loc 20 1138 37 is_stmt 0 view .LVU820
 3027 0140 0122     		movs	r2, #1
 3028 0142 1A70     		strb	r2, [r3]
 3029              	.L165:
1143:Veno-Echo.cpp ****         {
 3030              		.loc 20 1143 9 is_stmt 1 view .LVU821
 3031              	.LBB1089:
 3032              	.LBB1090:
1145:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3033              		.loc 20 1145 13 view .LVU822
 3034              	.LVL130:
1146:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3035              		.loc 20 1146 13 view .LVU823
1146:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3036              		.loc 20 1146 29 is_stmt 0 view .LVU824
 3037 0144 9FED221A 		vldr.32	s2, .L181+52
 3038 0148 0120     		movs	r0, #1
 3039 014a DFED220A 		vldr.32	s1, .L181+56
 3040 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3041              	.LVL131:
1146:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3042              		.loc 20 1146 29 view .LVU825
 3043 0152 B0EE408A 		vmov.f32	s16, s0
 3044              	.LVL132:
1147:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3045              		.loc 20 1147 13 is_stmt 1 view .LVU826
1147:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3046              		.loc 20 1147 26 is_stmt 0 view .LVU827
 3047 0156 2048     		ldr	r0, .L181+60
 3048 0158 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3049              	.LVL133:
1148:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3050              		.loc 20 1148 13 is_stmt 1 view .LVU828
1148:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3051              		.loc 20 1148 26 is_stmt 0 view .LVU829
 3052 015c 1F48     		ldr	r0, .L181+64
 3053 015e B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 149


 3054 0162 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3055              	.LVL134:
1149:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3056              		.loc 20 1149 13 is_stmt 1 view .LVU830
1149:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3057              		.loc 20 1149 31 is_stmt 0 view .LVU831
 3058 0166 B0EE480A 		vmov.f32	s0, s16
 3059 016a 1D48     		ldr	r0, .L181+68
 3060 016c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3061              	.LVL135:
1150:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3062              		.loc 20 1150 13 is_stmt 1 view .LVU832
1150:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3063              		.loc 20 1150 31 is_stmt 0 view .LVU833
 3064 0170 B0EE480A 		vmov.f32	s0, s16
 3065 0174 1B48     		ldr	r0, .L181+72
 3066 0176 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3067              	.LVL136:
1151:Veno-Echo.cpp ****         }
 3068              		.loc 20 1151 13 is_stmt 1 view .LVU834
1151:Veno-Echo.cpp ****         }
 3069              		.loc 20 1151 35 is_stmt 0 view .LVU835
 3070 017a 1B4B     		ldr	r3, .L181+76
 3071 017c 83ED058A 		vstr.32	s16, [r3, #20]
 3072              	.LBE1090:
 3073              	.LBE1089:
 3074              	.LBE1092:
 3075              	.LBE1097:
1154:Veno-Echo.cpp **** 
 3076              		.loc 20 1154 1 view .LVU836
 3077 0180 BDEC028B 		vldm	sp!, {d8}
 3078              		.cfi_remember_state
 3079              		.cfi_restore 80
 3080              		.cfi_restore 81
 3081              		.cfi_def_cfa_offset 8
 3082              	.LVL137:
1154:Veno-Echo.cpp **** 
 3083              		.loc 20 1154 1 view .LVU837
 3084 0184 10BD     		pop	{r4, pc}
 3085              	.LVL138:
 3086              	.L179:
 3087              		.cfi_restore_state
 3088              	.LBB1098:
 3089              	.LBB1093:
 3090              	.LBB1080:
 3091              	.LBB1065:
1876:Veno-Echo.cpp ****     }
 3092              		.loc 20 1876 16 view .LVU838
 3093 0186 DFED0C7A 		vldr.32	s15, .L181+28
 3094 018a 6FE7     		b	.L160
 3095              	.LVL139:
 3096              	.L180:
1876:Veno-Echo.cpp ****     }
 3097              		.loc 20 1876 16 view .LVU839
 3098              	.LBE1065:
 3099              	.LBE1080:
 3100              	.LBB1081:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 150


 3101              	.LBB1078:
 3102 018c DFED0A7A 		vldr.32	s15, .L181+28
 3103 0190 C1E7     		b	.L158
 3104              	.LVL140:
 3105              	.L175:
1876:Veno-Echo.cpp ****     }
 3106              		.loc 20 1876 16 view .LVU840
 3107 0192 064B     		ldr	r3, .L181+16
 3108 0194 93ED000A 		vldr.32	s0, [r3]
 3109              	.LVL141:
1876:Veno-Echo.cpp ****     }
 3110              		.loc 20 1876 16 view .LVU841
 3111 0198 4BE7     		b	.L154
 3112              	.L182:
 3113 019a 00BF     		.align	2
 3114              	.L181:
 3115 019c 18000000 		.word	.LANCHOR4+24
 3116 01a0 00000000 		.word	.LANCHOR7
 3117 01a4 00000000 		.word	.LANCHOR39
 3118 01a8 00000000 		.word	.LANCHOR40
 3119 01ac 00000000 		.word	.LANCHOR41
 3120 01b0 00000000 		.word	.LANCHOR42
 3121 01b4 00000000 		.word	.LANCHOR38
 3122 01b8 00000000 		.word	0
 3123 01bc 00000000 		.word	.LANCHOR43
 3124 01c0 6F12033D 		.word	1023611503
 3125 01c4 00000000 		.word	.LANCHOR44
 3126 01c8 00000000 		.word	.LANCHOR45
 3127 01cc 0AD7A33B 		.word	1000593162
 3128 01d0 00803B46 		.word	1178304512
 3129 01d4 0080BB44 		.word	1153138688
 3130 01d8 00000000 		.word	.LANCHOR46
 3131 01dc 00000000 		.word	.LANCHOR47
 3132 01e0 00000000 		.word	.LANCHOR48
 3133 01e4 00000000 		.word	.LANCHOR49
 3134 01e8 00000000 		.word	.LANCHOR15
 3135              	.LBE1078:
 3136              	.LBE1081:
 3137              	.LBE1093:
 3138              	.LBE1098:
 3139              		.cfi_endproc
 3140              	.LFE4319:
 3142              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3143              		.align	1
 3144              		.p2align 2,,3
 3145              		.global	_Z16Update_drywet_CVv
 3146              		.syntax unified
 3147              		.thumb
 3148              		.thumb_func
 3149              		.fpu fpv5-d16
 3151              	_Z16Update_drywet_CVv:
 3152              	.LFB4320:
1157:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3153              		.loc 20 1157 1 is_stmt 1 view -0
 3154              		.cfi_startproc
 3155              		@ args = 0, pretend = 0, frame = 0
 3156              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 151


1158:Veno-Echo.cpp **** }
 3157              		.loc 20 1158 5 view .LVU843
1157:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3158              		.loc 20 1157 1 is_stmt 0 view .LVU844
 3159 0000 08B5     		push	{r3, lr}
 3160              		.cfi_def_cfa_offset 8
 3161              		.cfi_offset 3, -8
 3162              		.cfi_offset 14, -4
1158:Veno-Echo.cpp **** }
 3163              		.loc 20 1158 32 view .LVU845
 3164 0002 0421     		movs	r1, #4
 3165 0004 0348     		ldr	r0, .L185
 3166 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3167              	.LVL142:
1158:Veno-Echo.cpp **** }
 3168              		.loc 20 1158 15 view .LVU846
 3169 000a 034B     		ldr	r3, .L185+4
 3170 000c 83ED000A 		vstr.32	s0, [r3]
1159:Veno-Echo.cpp **** 
 3171              		.loc 20 1159 1 view .LVU847
 3172 0010 08BD     		pop	{r3, pc}
 3173              	.L186:
 3174 0012 00BF     		.align	2
 3175              	.L185:
 3176 0014 18000000 		.word	.LANCHOR4+24
 3177 0018 00000000 		.word	.LANCHOR50
 3178              		.cfi_endproc
 3179              	.LFE4320:
 3181              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3182              		.align	1
 3183              		.p2align 2,,3
 3184              		.global	_Z13Update_drywetv
 3185              		.syntax unified
 3186              		.thumb
 3187              		.thumb_func
 3188              		.fpu fpv5-d16
 3190              	_Z13Update_drywetv:
 3191              	.LFB4321:
1162:Veno-Echo.cpp ****     static bool lastShift{};
 3192              		.loc 20 1162 1 is_stmt 1 view -0
 3193              		.cfi_startproc
 3194              		@ args = 0, pretend = 0, frame = 0
 3195              		@ frame_needed = 0, uses_anonymous_args = 0
1163:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3196              		.loc 20 1163 5 view .LVU849
1164:Veno-Echo.cpp ****     static bool Res_pickup{};
 3197              		.loc 20 1164 5 view .LVU850
1165:Veno-Echo.cpp **** 
 3198              		.loc 20 1165 5 view .LVU851
1167:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3199              		.loc 20 1167 5 view .LVU852
1172:Veno-Echo.cpp **** 
 3200              		.loc 20 1172 5 view .LVU853
1172:Veno-Echo.cpp **** 
 3201              		.loc 20 1172 40 is_stmt 0 view .LVU854
 3202 0000 0522     		movs	r2, #5
 3203 0002 0721     		movs	r1, #7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 152


 3204 0004 8048     		ldr	r0, .L220+24
1162:Veno-Echo.cpp ****     static bool lastShift{};
 3205              		.loc 20 1162 1 view .LVU855
 3206 0006 10B5     		push	{r4, lr}
 3207              		.cfi_def_cfa_offset 8
 3208              		.cfi_offset 4, -8
 3209              		.cfi_offset 14, -4
 3210 0008 2DED028B 		vpush.64	{d8}
 3211              		.cfi_def_cfa_offset 16
 3212              		.cfi_offset 80, -16
 3213              		.cfi_offset 81, -12
1172:Veno-Echo.cpp **** 
 3214              		.loc 20 1172 40 view .LVU856
 3215 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3216              	.LVL143:
 3217              	.LBB1099:
1174:Veno-Echo.cpp ****     {   
 3218              		.loc 20 1174 9 view .LVU857
 3219 0010 7E4B     		ldr	r3, .L220+28
 3220              	.LVL144:
1174:Veno-Echo.cpp ****     {   
 3221              		.loc 20 1174 9 view .LVU858
 3222              	.LBE1099:
1174:Veno-Echo.cpp ****     {   
 3223              		.loc 20 1174 5 is_stmt 1 view .LVU859
 3224              	.LBB1133:
 3225              	.LBB1100:
1179:Veno-Echo.cpp ****         {
 3226              		.loc 20 1179 19 is_stmt 0 view .LVU860
 3227 0012 7F4A     		ldr	r2, .L220+32
 3228              	.LBE1100:
1174:Veno-Echo.cpp ****     {   
 3229              		.loc 20 1174 5 view .LVU861
 3230 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3231 0016 B3BB     		cbnz	r3, .L188
 3232              	.LBB1121:
1177:Veno-Echo.cpp **** 
 3233              		.loc 20 1177 9 is_stmt 1 view .LVU862
1179:Veno-Echo.cpp ****         {
 3234              		.loc 20 1179 9 view .LVU863
 3235 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3236 001a 0029     		cmp	r1, #0
 3237 001c 40D0     		beq	.L189
1181:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3238              		.loc 20 1181 13 view .LVU864
1183:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3239              		.loc 20 1183 27 is_stmt 0 view .LVU865
 3240 001e 7D48     		ldr	r0, .L220+36
1184:Veno-Echo.cpp ****         } 
 3241              		.loc 20 1184 24 view .LVU866
 3242 0020 7D49     		ldr	r1, .L220+40
1181:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3243              		.loc 20 1181 23 view .LVU867
 3244 0022 1370     		strb	r3, [r2]
1183:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3245              		.loc 20 1183 13 is_stmt 1 view .LVU868
1183:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 153


 3246              		.loc 20 1183 27 is_stmt 0 view .LVU869
 3247 0024 0370     		strb	r3, [r0]
1184:Veno-Echo.cpp ****         } 
 3248              		.loc 20 1184 13 is_stmt 1 view .LVU870
1184:Veno-Echo.cpp ****         } 
 3249              		.loc 20 1184 24 is_stmt 0 view .LVU871
 3250 0026 81ED000A 		vstr.32	s0, [r1]
 3251              	.L190:
1200:Veno-Echo.cpp **** 
 3252              		.loc 20 1200 9 is_stmt 1 view .LVU872
 3253              	.LVL145:
1202:Veno-Echo.cpp ****         {
 3254              		.loc 20 1202 9 view .LVU873
1210:Veno-Echo.cpp ****         }
 3255              		.loc 20 1210 13 view .LVU874
 3256              	.LBB1101:
 3257              	.LBI1101:
1869:Veno-Echo.cpp **** {
 3258              		.loc 20 1869 7 view .LVU875
 3259              	.LBB1102:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3260              		.loc 20 1871 5 view .LVU876
1872:Veno-Echo.cpp **** 
 3261              		.loc 20 1872 5 view .LVU877
 3262              	.LBE1102:
 3263              	.LBE1101:
1210:Veno-Echo.cpp ****         }
 3264              		.loc 20 1210 37 is_stmt 0 view .LVU878
 3265 002a 7C4A     		ldr	r2, .L220+44
 3266              	.LBB1105:
 3267              	.LBB1103:
1872:Veno-Echo.cpp **** 
 3268              		.loc 20 1872 39 view .LVU879
 3269 002c F7EE006A 		vmov.f32	s13, #1.0e+0
1872:Veno-Echo.cpp **** 
 3270              		.loc 20 1872 49 view .LVU880
 3271 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3272              	.LBE1103:
 3273              	.LBE1105:
1210:Veno-Echo.cpp ****         }
 3274              		.loc 20 1210 37 view .LVU881
 3275 0034 7A4B     		ldr	r3, .L220+48
 3276              	.LBB1106:
 3277              	.LBB1104:
1872:Veno-Echo.cpp **** 
 3278              		.loc 20 1872 39 view .LVU882
 3279 0036 92ED007A 		vldr.32	s14, [r2]
1872:Veno-Echo.cpp **** 
 3280              		.loc 20 1872 12 view .LVU883
 3281 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3282 003e D3ED007A 		vldr.32	s15, [r3]
1872:Veno-Echo.cpp **** 
 3283              		.loc 20 1872 39 view .LVU884
 3284 0042 36EEC77A 		vsub.f32	s14, s13, s14
1872:Veno-Echo.cpp **** 
 3285              		.loc 20 1872 49 view .LVU885
 3286 0046 37EE657A 		vsub.f32	s14, s14, s11
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 154


1872:Veno-Echo.cpp **** 
 3287              		.loc 20 1872 12 view .LVU886
 3288 004a E7EE067A 		vfma.f32	s15, s14, s12
 3289              	.LVL146:
1874:Veno-Echo.cpp ****     {
 3290              		.loc 20 1874 5 is_stmt 1 view .LVU887
 3291 004e F5EEC07A 		vcmpe.f32	s15, #0
 3292 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3293 0056 00F1BA80 		bmi	.L207
1879:Veno-Echo.cpp ****     {
 3294              		.loc 20 1879 5 view .LVU888
 3295 005a F4EEE67A 		vcmpe.f32	s15, s13
 3296 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3297 0062 40F3BF80 		ble	.L213
 3298              	.LVL147:
 3299              	.L198:
1879:Veno-Echo.cpp ****     {
 3300              		.loc 20 1879 5 is_stmt 0 view .LVU889
 3301              	.LBE1104:
 3302              	.LBE1106:
1217:Veno-Echo.cpp ****         }
 3303              		.loc 20 1217 26 view .LVU890
 3304 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3305              	.LVL148:
 3306              	.L197:
1229:Veno-Echo.cpp ****     }
 3307              		.loc 20 1229 9 is_stmt 1 view .LVU891
 3308              	.LBB1107:
 3309              	.LBI1107:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3310              		.loc 23 135 13 view .LVU892
 3311              	.LBB1108:
 3312              		.loc 23 137 5 view .LVU893
 3313              		.loc 23 137 9 is_stmt 0 view .LVU894
 3314 006a 6E4B     		ldr	r3, .L220+52
 3315 006c 9FED6E7A 		vldr.32	s14, .L220+56
 3316 0070 D3ED007A 		vldr.32	s15, [r3]
 3317              		.loc 23 137 24 view .LVU895
 3318 0074 30EE670A 		vsub.f32	s0, s0, s15
 3319              	.LVL149:
 3320              		.loc 23 137 24 view .LVU896
 3321              	.LBE1108:
 3322              	.LBE1107:
 3323              	.LBE1121:
 3324              	.LBE1133:
1268:Veno-Echo.cpp **** 
 3325              		.loc 20 1268 1 view .LVU897
 3326 0078 BDEC028B 		vldm	sp!, {d8}
 3327              		.cfi_remember_state
 3328              		.cfi_restore 80
 3329              		.cfi_restore 81
 3330              		.cfi_def_cfa_offset 8
 3331              	.LBB1134:
 3332              	.LBB1122:
 3333              	.LBB1110:
 3334              	.LBB1109:
 3335              		.loc 23 137 9 view .LVU898
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 155


 3336 007c E0EE077A 		vfma.f32	s15, s0, s14
 3337 0080 C3ED007A 		vstr.32	s15, [r3]
 3338              	.LBE1109:
 3339              	.LBE1110:
 3340              	.LBE1122:
 3341              	.LBE1134:
1268:Veno-Echo.cpp **** 
 3342              		.loc 20 1268 1 view .LVU899
 3343 0084 10BD     		pop	{r4, pc}
 3344              	.LVL150:
 3345              	.L188:
 3346              		.cfi_restore_state
 3347              	.LBB1135:
 3348              	.LBB1123:
1233:Veno-Echo.cpp **** 
 3349              		.loc 20 1233 9 is_stmt 1 view .LVU900
1235:Veno-Echo.cpp ****         {
 3350              		.loc 20 1235 9 view .LVU901
 3351 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3352 0088 002B     		cmp	r3, #0
 3353 008a 58D1     		bne	.L202
1237:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3354              		.loc 20 1237 13 view .LVU902
1237:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3355              		.loc 20 1237 23 is_stmt 0 view .LVU903
 3356 008c 0124     		movs	r4, #1
1238:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3357              		.loc 20 1238 24 view .LVU904
 3358 008e 6748     		ldr	r0, .L220+60
1239:Veno-Echo.cpp ****         }
 3359              		.loc 20 1239 21 view .LVU905
 3360 0090 6749     		ldr	r1, .L220+64
1237:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3361              		.loc 20 1237 23 view .LVU906
 3362 0092 1470     		strb	r4, [r2]
1238:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3363              		.loc 20 1238 13 is_stmt 1 view .LVU907
1238:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3364              		.loc 20 1238 24 is_stmt 0 view .LVU908
 3365 0094 0370     		strb	r3, [r0]
1239:Veno-Echo.cpp ****         }
 3366              		.loc 20 1239 13 is_stmt 1 view .LVU909
1239:Veno-Echo.cpp ****         }
 3367              		.loc 20 1239 21 is_stmt 0 view .LVU910
 3368 0096 81ED000A 		vstr.32	s0, [r1]
 3369              	.L187:
1239:Veno-Echo.cpp ****         }
 3370              		.loc 20 1239 21 view .LVU911
 3371              	.LBE1123:
 3372              	.LBE1135:
1268:Veno-Echo.cpp **** 
 3373              		.loc 20 1268 1 view .LVU912
 3374 009a BDEC028B 		vldm	sp!, {d8}
 3375              		.cfi_remember_state
 3376              		.cfi_restore 80
 3377              		.cfi_restore 81
 3378              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 156


 3379 009e 10BD     		pop	{r4, pc}
 3380              	.L189:
 3381              		.cfi_restore_state
 3382              	.LBB1136:
 3383              	.LBB1130:
1189:Veno-Echo.cpp ****             {
 3384              		.loc 20 1189 13 is_stmt 1 view .LVU913
1189:Veno-Echo.cpp ****             {
 3385              		.loc 20 1189 16 is_stmt 0 view .LVU914
 3386 00a0 5C4B     		ldr	r3, .L220+36
1189:Veno-Echo.cpp ****             {
 3387              		.loc 20 1189 13 view .LVU915
 3388 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3389 00a4 7AB9     		cbnz	r2, .L191
1192:Veno-Echo.cpp ****                 {
 3390              		.loc 20 1192 17 is_stmt 1 view .LVU916
 3391              	.LVL151:
 3392              	.LBB1111:
 3393              	.LBI1111:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3394              		.loc 21 75 3 view .LVU917
 3395              	.LBB1112:
 3396              		.loc 21 76 5 view .LVU918
 3397              		.loc 21 76 5 is_stmt 0 view .LVU919
 3398              	.LBE1112:
 3399              	.LBE1111:
1192:Veno-Echo.cpp ****                 {
 3400              		.loc 20 1192 23 view .LVU920
 3401 00a6 5C4A     		ldr	r2, .L220+40
1192:Veno-Echo.cpp ****                 {
 3402              		.loc 20 1192 17 view .LVU921
 3403 00a8 9FED627A 		vldr.32	s14, .L220+68
1192:Veno-Echo.cpp ****                 {
 3404              		.loc 20 1192 23 view .LVU922
 3405 00ac D2ED007A 		vldr.32	s15, [r2]
 3406 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3407              	.LBB1114:
 3408              	.LBB1113:
 3409              		.loc 21 76 31 view .LVU923
 3410 00b4 F0EEE77A 		vabs.f32	s15, s15
 3411              	.LBE1113:
 3412              	.LBE1114:
1192:Veno-Echo.cpp ****                 {
 3413              		.loc 20 1192 17 view .LVU924
 3414 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3415 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3416 00c0 B3DD     		ble	.L190
1194:Veno-Echo.cpp ****                 }
 3417              		.loc 20 1194 21 is_stmt 1 view .LVU925
1194:Veno-Echo.cpp ****                 }
 3418              		.loc 20 1194 35 is_stmt 0 view .LVU926
 3419 00c2 0122     		movs	r2, #1
 3420 00c4 1A70     		strb	r2, [r3]
 3421              	.L191:
1200:Veno-Echo.cpp **** 
 3422              		.loc 20 1200 9 is_stmt 1 view .LVU927
 3423              	.LVL152:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 157


1202:Veno-Echo.cpp ****         {
 3424              		.loc 20 1202 9 view .LVU928
1204:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3425              		.loc 20 1204 13 view .LVU929
 3426              	.LBB1115:
 3427              	.LBI1115:
1869:Veno-Echo.cpp **** {
 3428              		.loc 20 1869 7 view .LVU930
 3429              	.LBB1116:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3430              		.loc 20 1871 5 view .LVU931
1872:Veno-Echo.cpp **** 
 3431              		.loc 20 1872 5 view .LVU932
 3432              	.LBE1116:
 3433              	.LBE1115:
1204:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3434              		.loc 20 1204 37 is_stmt 0 view .LVU933
 3435 00c6 554B     		ldr	r3, .L220+44
 3436              	.LBB1119:
 3437              	.LBB1117:
1872:Veno-Echo.cpp **** 
 3438              		.loc 20 1872 39 view .LVU934
 3439 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
1872:Veno-Echo.cpp **** 
 3440              		.loc 20 1872 49 view .LVU935
 3441 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
1872:Veno-Echo.cpp **** 
 3442              		.loc 20 1872 39 view .LVU936
 3443 00d0 D3ED007A 		vldr.32	s15, [r3]
1872:Veno-Echo.cpp **** 
 3444              		.loc 20 1872 12 view .LVU937
 3445 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
1872:Veno-Echo.cpp **** 
 3446              		.loc 20 1872 39 view .LVU938
 3447 00d8 77EE677A 		vsub.f32	s15, s14, s15
1872:Veno-Echo.cpp **** 
 3448              		.loc 20 1872 49 view .LVU939
 3449 00dc 77EEC67A 		vsub.f32	s15, s15, s12
1872:Veno-Echo.cpp **** 
 3450              		.loc 20 1872 12 view .LVU940
 3451 00e0 B0EE406A 		vmov.f32	s12, s0
 3452 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
1874:Veno-Echo.cpp ****     {
 3453              		.loc 20 1874 5 view .LVU941
 3454 00e8 B5EEC06A 		vcmpe.f32	s12, #0
1872:Veno-Echo.cpp **** 
 3455              		.loc 20 1872 12 view .LVU942
 3456 00ec F0EE467A 		vmov.f32	s15, s12
 3457              	.LVL153:
1874:Veno-Echo.cpp ****     {
 3458              		.loc 20 1874 5 is_stmt 1 view .LVU943
 3459 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3460 00f4 6ED4     		bmi	.L218
1879:Veno-Echo.cpp ****     {
 3461              		.loc 20 1879 5 view .LVU944
 3462 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3463 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 158


 3464 00fe 6EDD     		ble	.L219
1881:Veno-Echo.cpp ****     }
 3465              		.loc 20 1881 16 is_stmt 0 view .LVU945
 3466 0100 F0EE477A 		vmov.f32	s15, s14
 3467 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3468              	.LVL154:
 3469              	.L193:
1884:Veno-Echo.cpp **** }
 3470              		.loc 20 1884 5 is_stmt 1 view .LVU946
1884:Veno-Echo.cpp **** }
 3471              		.loc 20 1884 5 is_stmt 0 view .LVU947
 3472              	.LBE1117:
 3473              	.LBE1119:
1205:Veno-Echo.cpp ****         }
 3474              		.loc 20 1205 13 is_stmt 1 view .LVU948
1205:Veno-Echo.cpp ****         }
 3475              		.loc 20 1205 25 is_stmt 0 view .LVU949
 3476 0108 454B     		ldr	r3, .L220+48
 3477 010a 83ED000A 		vstr.32	s0, [r3]
 3478              	.LVL155:
 3479              	.L194:
1213:Veno-Echo.cpp **** 
 3480              		.loc 20 1213 9 is_stmt 1 view .LVU950
1215:Veno-Echo.cpp ****         {
 3481              		.loc 20 1215 9 view .LVU951
 3482 010e 9FED385B 		vldr.64	d5, .L220
 3483 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3484 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3485 011a A4DA     		bge	.L198
1219:Veno-Echo.cpp ****         {
 3486              		.loc 20 1219 14 view .LVU952
 3487 011c 9FED365B 		vldr.64	d5, .L220+8
 3488 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3489 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3490 0128 51D9     		bls	.L207
1225:Veno-Echo.cpp ****         }
 3491              		.loc 20 1225 13 view .LVU953
1225:Veno-Echo.cpp ****         }
 3492              		.loc 20 1225 33 is_stmt 0 view .LVU954
 3493 012a B0EE670A 		vmov.f32	s0, s15
 3494              	.LVL156:
1225:Veno-Echo.cpp ****         }
 3495              		.loc 20 1225 33 view .LVU955
 3496 012e 0020     		movs	r0, #0
 3497 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3498 0134 DFED400A 		vldr.32	s1, .L220+72
 3499 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3500              	.LVL157:
1225:Veno-Echo.cpp ****         }
 3501              		.loc 20 1225 33 view .LVU956
 3502 013c 95E7     		b	.L197
 3503              	.LVL158:
 3504              	.L202:
1225:Veno-Echo.cpp ****         }
 3505              		.loc 20 1225 33 view .LVU957
 3506              	.LBE1130:
 3507              	.LBB1131:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 159


1244:Veno-Echo.cpp ****             {
 3508              		.loc 20 1244 13 is_stmt 1 view .LVU958
1244:Veno-Echo.cpp ****             {
 3509              		.loc 20 1244 16 is_stmt 0 view .LVU959
 3510 013e 3B4B     		ldr	r3, .L220+60
1244:Veno-Echo.cpp ****             {
 3511              		.loc 20 1244 13 view .LVU960
 3512 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3513 0142 7AB9     		cbnz	r2, .L204
1246:Veno-Echo.cpp ****                 {
 3514              		.loc 20 1246 17 is_stmt 1 view .LVU961
 3515              	.LVL159:
 3516              	.LBB1124:
 3517              	.LBI1124:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3518              		.loc 21 75 3 view .LVU962
 3519              	.LBB1125:
 3520              		.loc 21 76 5 view .LVU963
 3521              		.loc 21 76 5 is_stmt 0 view .LVU964
 3522              	.LBE1125:
 3523              	.LBE1124:
1246:Veno-Echo.cpp ****                 {
 3524              		.loc 20 1246 23 view .LVU965
 3525 0144 3A4A     		ldr	r2, .L220+64
1246:Veno-Echo.cpp ****                 {
 3526              		.loc 20 1246 17 view .LVU966
 3527 0146 9FED3B7A 		vldr.32	s14, .L220+68
1246:Veno-Echo.cpp ****                 {
 3528              		.loc 20 1246 23 view .LVU967
 3529 014a D2ED007A 		vldr.32	s15, [r2]
 3530 014e 70EE677A 		vsub.f32	s15, s0, s15
 3531              	.LBB1127:
 3532              	.LBB1126:
 3533              		.loc 21 76 31 view .LVU968
 3534 0152 F0EEE77A 		vabs.f32	s15, s15
 3535              	.LBE1126:
 3536              	.LBE1127:
1246:Veno-Echo.cpp ****                 {
 3537              		.loc 20 1246 17 view .LVU969
 3538 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3539 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3540 015e 9CDD     		ble	.L187
1248:Veno-Echo.cpp ****                 }
 3541              		.loc 20 1248 21 is_stmt 1 view .LVU970
1248:Veno-Echo.cpp ****                 }
 3542              		.loc 20 1248 32 is_stmt 0 view .LVU971
 3543 0160 0122     		movs	r2, #1
 3544 0162 1A70     		strb	r2, [r3]
 3545              	.L204:
1253:Veno-Echo.cpp ****         {
 3546              		.loc 20 1253 9 is_stmt 1 view .LVU972
 3547              	.LBB1128:
 3548              	.LBB1129:
1255:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3549              		.loc 20 1255 13 view .LVU973
 3550              	.LVL160:
1256:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 160


 3551              		.loc 20 1256 13 view .LVU974
1256:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3552              		.loc 20 1256 24 is_stmt 0 view .LVU975
 3553 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3554 0168 DFED330A 		vldr.32	s1, .L220+72
 3555 016c 0020     		movs	r0, #0
 3556 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3557              	.LVL161:
1256:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3558              		.loc 20 1256 24 view .LVU976
 3559 0172 B0EE408A 		vmov.f32	s16, s0
 3560              	.LVL162:
1257:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3561              		.loc 20 1257 13 is_stmt 1 view .LVU977
1257:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3562              		.loc 20 1257 25 is_stmt 0 view .LVU978
 3563 0176 3148     		ldr	r0, .L220+76
 3564 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3565              	.LVL163:
1258:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3566              		.loc 20 1258 13 is_stmt 1 view .LVU979
1258:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3567              		.loc 20 1258 25 is_stmt 0 view .LVU980
 3568 017c 3048     		ldr	r0, .L220+80
 3569 017e B0EE480A 		vmov.f32	s0, s16
 3570 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3571              	.LVL164:
1259:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3572              		.loc 20 1259 13 is_stmt 1 view .LVU981
1259:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3573              		.loc 20 1259 25 is_stmt 0 view .LVU982
 3574 0186 B0EE480A 		vmov.f32	s0, s16
 3575 018a 2E48     		ldr	r0, .L220+84
 3576 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3577              	.LVL165:
1260:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3578              		.loc 20 1260 13 is_stmt 1 view .LVU983
1260:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3579              		.loc 20 1260 25 is_stmt 0 view .LVU984
 3580 0190 B0EE480A 		vmov.f32	s0, s16
 3581 0194 2C48     		ldr	r0, .L220+88
 3582 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3583              	.LVL166:
1261:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3584              		.loc 20 1261 13 is_stmt 1 view .LVU985
1261:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3585              		.loc 20 1261 30 is_stmt 0 view .LVU986
 3586 019a B0EE480A 		vmov.f32	s0, s16
 3587 019e 2B48     		ldr	r0, .L220+92
 3588 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3589              	.LVL167:
1262:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3590              		.loc 20 1262 13 is_stmt 1 view .LVU987
1262:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3591              		.loc 20 1262 30 is_stmt 0 view .LVU988
 3592 01a4 B0EE480A 		vmov.f32	s0, s16
 3593 01a8 2948     		ldr	r0, .L220+96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 161


 3594 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3595              	.LVL168:
1263:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3596              		.loc 20 1263 13 is_stmt 1 view .LVU989
1263:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3597              		.loc 20 1263 30 is_stmt 0 view .LVU990
 3598 01ae B0EE480A 		vmov.f32	s0, s16
 3599 01b2 2848     		ldr	r0, .L220+100
 3600 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3601              	.LVL169:
1264:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3602              		.loc 20 1264 13 is_stmt 1 view .LVU991
1264:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3603              		.loc 20 1264 30 is_stmt 0 view .LVU992
 3604 01b8 B0EE480A 		vmov.f32	s0, s16
 3605 01bc 2648     		ldr	r0, .L220+104
 3606 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3607              	.LVL170:
1265:Veno-Echo.cpp ****         }
 3608              		.loc 20 1265 13 is_stmt 1 view .LVU993
1265:Veno-Echo.cpp ****         }
 3609              		.loc 20 1265 35 is_stmt 0 view .LVU994
 3610 01c2 264B     		ldr	r3, .L220+108
 3611 01c4 83ED068A 		vstr.32	s16, [r3, #24]
 3612              	.LBE1129:
 3613              	.LBE1128:
 3614              	.LBE1131:
 3615              	.LBE1136:
1268:Veno-Echo.cpp **** 
 3616              		.loc 20 1268 1 view .LVU995
 3617 01c8 BDEC028B 		vldm	sp!, {d8}
 3618              		.cfi_remember_state
 3619              		.cfi_restore 80
 3620              		.cfi_restore 81
 3621              		.cfi_def_cfa_offset 8
 3622              	.LVL171:
1268:Veno-Echo.cpp **** 
 3623              		.loc 20 1268 1 view .LVU996
 3624 01cc 10BD     		pop	{r4, pc}
 3625              	.LVL172:
 3626              	.L207:
 3627              		.cfi_restore_state
 3628              	.LBB1137:
 3629              	.LBB1132:
1221:Veno-Echo.cpp ****         }
 3630              		.loc 20 1221 26 view .LVU997
 3631 01ce 9FED1A0A 		vldr.32	s0, .L220+72
 3632              	.LVL173:
1221:Veno-Echo.cpp ****         }
 3633              		.loc 20 1221 26 view .LVU998
 3634 01d2 4AE7     		b	.L197
 3635              	.LVL174:
 3636              	.L218:
 3637              	.LBB1120:
 3638              	.LBB1118:
1221:Veno-Echo.cpp ****         }
 3639              		.loc 20 1221 26 view .LVU999
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 162


 3640 01d4 9FED0A6B 		vldr.64	d6, .L220+16
 3641              	.LVL175:
1876:Veno-Echo.cpp ****     }
 3642              		.loc 20 1876 16 view .LVU1000
 3643 01d8 DFED177A 		vldr.32	s15, .L220+72
 3644              	.LVL176:
1876:Veno-Echo.cpp ****     }
 3645              		.loc 20 1876 16 view .LVU1001
 3646 01dc 94E7     		b	.L193
 3647              	.LVL177:
 3648              	.L219:
1876:Veno-Echo.cpp ****     }
 3649              		.loc 20 1876 16 view .LVU1002
 3650 01de B7EEE76A 		vcvt.f64.f32	d6, s15
 3651              	.LVL178:
1876:Veno-Echo.cpp ****     }
 3652              		.loc 20 1876 16 view .LVU1003
 3653 01e2 91E7     		b	.L193
 3654              	.LVL179:
 3655              	.L213:
1876:Veno-Echo.cpp ****     }
 3656              		.loc 20 1876 16 view .LVU1004
 3657 01e4 B7EEE76A 		vcvt.f64.f32	d6, s15
 3658 01e8 91E7     		b	.L194
 3659              	.L221:
 3660 01ea 00BFAFF3 		.align	3
 3660      0080
 3661              	.L220:
 3662 01f0 5C8FC2F5 		.word	4123168604
 3663 01f4 285CEF3F 		.word	1072651304
 3664 01f8 7B14AE47 		.word	1202590843
 3665 01fc E17A943F 		.word	1066695393
 3666 0200 00000000 		.word	0
 3667 0204 00000000 		.word	0
 3668 0208 18000000 		.word	.LANCHOR4+24
 3669 020c 00000000 		.word	.LANCHOR7
 3670 0210 00000000 		.word	.LANCHOR51
 3671 0214 00000000 		.word	.LANCHOR52
 3672 0218 00000000 		.word	.LANCHOR53
 3673 021c 00000000 		.word	.LANCHOR50
 3674 0220 00000000 		.word	.LANCHOR54
 3675 0224 00000000 		.word	.LANCHOR55
 3676 0228 6F12833C 		.word	1015222895
 3677 022c 00000000 		.word	.LANCHOR56
 3678 0230 00000000 		.word	.LANCHOR57
 3679 0234 0AD7A33B 		.word	1000593162
 3680 0238 00000000 		.word	0
 3681 023c 00000000 		.word	.LANCHOR46
 3682 0240 00000000 		.word	.LANCHOR47
 3683 0244 00000000 		.word	.LANCHOR34
 3684 0248 00000000 		.word	.LANCHOR35
 3685 024c 00000000 		.word	.LANCHOR48
 3686 0250 00000000 		.word	.LANCHOR49
 3687 0254 00000000 		.word	.LANCHOR36
 3688 0258 00000000 		.word	.LANCHOR37
 3689 025c 00000000 		.word	.LANCHOR15
 3690              	.LBE1118:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 163


 3691              	.LBE1120:
 3692              	.LBE1132:
 3693              	.LBE1137:
 3694              		.cfi_endproc
 3695              	.LFE4321:
 3697              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3698              		.align	1
 3699              		.p2align 2,,3
 3700              		.global	_Z15Update_width_CVv
 3701              		.syntax unified
 3702              		.thumb
 3703              		.thumb_func
 3704              		.fpu fpv5-d16
 3706              	_Z15Update_width_CVv:
 3707              	.LFB4322:
1271:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3708              		.loc 20 1271 1 is_stmt 1 view -0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 0
 3711              		@ frame_needed = 0, uses_anonymous_args = 0
1272:Veno-Echo.cpp **** }
 3712              		.loc 20 1272 5 view .LVU1006
1271:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3713              		.loc 20 1271 1 is_stmt 0 view .LVU1007
 3714 0000 08B5     		push	{r3, lr}
 3715              		.cfi_def_cfa_offset 8
 3716              		.cfi_offset 3, -8
 3717              		.cfi_offset 14, -4
1272:Veno-Echo.cpp **** }
 3718              		.loc 20 1272 30 view .LVU1008
 3719 0002 0521     		movs	r1, #5
 3720 0004 0348     		ldr	r0, .L224
 3721 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3722              	.LVL180:
1272:Veno-Echo.cpp **** }
 3723              		.loc 20 1272 13 view .LVU1009
 3724 000a 034B     		ldr	r3, .L224+4
 3725 000c 83ED000A 		vstr.32	s0, [r3]
1273:Veno-Echo.cpp **** 
 3726              		.loc 20 1273 1 view .LVU1010
 3727 0010 08BD     		pop	{r3, pc}
 3728              	.L225:
 3729 0012 00BF     		.align	2
 3730              	.L224:
 3731 0014 18000000 		.word	.LANCHOR4+24
 3732 0018 00000000 		.word	.LANCHOR58
 3733              		.cfi_endproc
 3734              	.LFE4322:
 3736              		.section	.text._Z12Update_widthv,"ax",%progbits
 3737              		.align	1
 3738              		.p2align 2,,3
 3739              		.global	_Z12Update_widthv
 3740              		.syntax unified
 3741              		.thumb
 3742              		.thumb_func
 3743              		.fpu fpv5-d16
 3745              	_Z12Update_widthv:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 164


 3746              	.LFB4323:
1276:Veno-Echo.cpp ****     static bool lastShift{};
 3747              		.loc 20 1276 1 is_stmt 1 view -0
 3748              		.cfi_startproc
 3749              		@ args = 0, pretend = 0, frame = 0
 3750              		@ frame_needed = 0, uses_anonymous_args = 0
1277:Veno-Echo.cpp ****     static bool width_pickup{};
 3751              		.loc 20 1277 5 view .LVU1012
1278:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3752              		.loc 20 1278 5 view .LVU1013
1279:Veno-Echo.cpp **** 
 3753              		.loc 20 1279 5 view .LVU1014
1281:Veno-Echo.cpp **** 
 3754              		.loc 20 1281 5 view .LVU1015
1284:Veno-Echo.cpp **** 
 3755              		.loc 20 1284 5 view .LVU1016
1284:Veno-Echo.cpp **** 
 3756              		.loc 20 1284 39 is_stmt 0 view .LVU1017
 3757 0000 0722     		movs	r2, #7
 3758 0002 5F48     		ldr	r0, .L255
 3759 0004 1146     		mov	r1, r2
1276:Veno-Echo.cpp ****     static bool lastShift{};
 3760              		.loc 20 1276 1 view .LVU1018
 3761 0006 10B5     		push	{r4, lr}
 3762              		.cfi_def_cfa_offset 8
 3763              		.cfi_offset 4, -8
 3764              		.cfi_offset 14, -4
 3765 0008 2DED028B 		vpush.64	{d8}
 3766              		.cfi_def_cfa_offset 16
 3767              		.cfi_offset 80, -16
 3768              		.cfi_offset 81, -12
1284:Veno-Echo.cpp **** 
 3769              		.loc 20 1284 39 view .LVU1019
 3770 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3771              	.LVL181:
 3772              	.LBB1138:
1286:Veno-Echo.cpp ****     {   
 3773              		.loc 20 1286 9 view .LVU1020
 3774 0010 5C4B     		ldr	r3, .L255+4
 3775              	.LBE1138:
1284:Veno-Echo.cpp **** 
 3776              		.loc 20 1284 39 view .LVU1021
 3777 0012 B0EE408A 		vmov.f32	s16, s0
 3778              	.LVL182:
1286:Veno-Echo.cpp ****     {   
 3779              		.loc 20 1286 5 is_stmt 1 view .LVU1022
 3780              	.LBB1178:
 3781              	.LBB1139:
1290:Veno-Echo.cpp ****         {
 3782              		.loc 20 1290 19 is_stmt 0 view .LVU1023
 3783 0016 5C4A     		ldr	r2, .L255+8
 3784              	.LBE1139:
1286:Veno-Echo.cpp ****     {   
 3785              		.loc 20 1286 5 view .LVU1024
 3786 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3787 001a 002B     		cmp	r3, #0
 3788 001c 3ED1     		bne	.L227
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 165


 3789              	.LBB1168:
1288:Veno-Echo.cpp ****         //update pickup
 3790              		.loc 20 1288 9 is_stmt 1 view .LVU1025
1290:Veno-Echo.cpp ****         {
 3791              		.loc 20 1290 9 view .LVU1026
 3792 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3793 0020 0029     		cmp	r1, #0
 3794 0022 48D0     		beq	.L228
1292:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3795              		.loc 20 1292 13 view .LVU1027
1293:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3796              		.loc 20 1293 26 is_stmt 0 view .LVU1028
 3797 0024 5948     		ldr	r0, .L255+12
1294:Veno-Echo.cpp ****         }
 3798              		.loc 20 1294 23 view .LVU1029
 3799 0026 5A49     		ldr	r1, .L255+16
1292:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3800              		.loc 20 1292 23 view .LVU1030
 3801 0028 1370     		strb	r3, [r2]
1293:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3802              		.loc 20 1293 13 is_stmt 1 view .LVU1031
1293:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3803              		.loc 20 1293 26 is_stmt 0 view .LVU1032
 3804 002a 0370     		strb	r3, [r0]
1294:Veno-Echo.cpp ****         }
 3805              		.loc 20 1294 13 is_stmt 1 view .LVU1033
1294:Veno-Echo.cpp ****         }
 3806              		.loc 20 1294 23 is_stmt 0 view .LVU1034
 3807 002c 81ED000A 		vstr.32	s0, [r1]
 3808              	.L229:
1309:Veno-Echo.cpp **** 
 3809              		.loc 20 1309 9 is_stmt 1 view .LVU1035
 3810              	.LVL183:
1311:Veno-Echo.cpp ****         {
 3811              		.loc 20 1311 9 view .LVU1036
1319:Veno-Echo.cpp ****         }
 3812              		.loc 20 1319 13 view .LVU1037
 3813              	.LBB1140:
 3814              	.LBI1140:
1869:Veno-Echo.cpp **** {
 3815              		.loc 20 1869 7 view .LVU1038
 3816              	.LBB1141:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3817              		.loc 20 1871 5 view .LVU1039
1872:Veno-Echo.cpp **** 
 3818              		.loc 20 1872 5 view .LVU1040
 3819              	.LBE1141:
 3820              	.LBE1140:
1319:Veno-Echo.cpp ****         }
 3821              		.loc 20 1319 32 is_stmt 0 view .LVU1041
 3822 0030 584A     		ldr	r2, .L255+20
 3823              	.LBB1145:
 3824              	.LBB1142:
1872:Veno-Echo.cpp **** 
 3825              		.loc 20 1872 39 view .LVU1042
 3826 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
1872:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 166


 3827              		.loc 20 1872 49 view .LVU1043
 3828 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 3829              	.LBE1142:
 3830              	.LBE1145:
1319:Veno-Echo.cpp ****         }
 3831              		.loc 20 1319 32 view .LVU1044
 3832 003a 574B     		ldr	r3, .L255+24
 3833              	.LBB1146:
 3834              	.LBB1143:
1872:Veno-Echo.cpp **** 
 3835              		.loc 20 1872 39 view .LVU1045
 3836 003c D2ED007A 		vldr.32	s15, [r2]
1872:Veno-Echo.cpp **** 
 3837              		.loc 20 1872 12 view .LVU1046
 3838 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 3839 0044 93ED000A 		vldr.32	s0, [r3]
 3840              	.LVL184:
1872:Veno-Echo.cpp **** 
 3841              		.loc 20 1872 39 view .LVU1047
 3842 0048 77EE677A 		vsub.f32	s15, s14, s15
1872:Veno-Echo.cpp **** 
 3843              		.loc 20 1872 49 view .LVU1048
 3844 004c 77EEC67A 		vsub.f32	s15, s15, s12
1872:Veno-Echo.cpp **** 
 3845              		.loc 20 1872 12 view .LVU1049
 3846 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 3847              	.LVL185:
1874:Veno-Echo.cpp ****     {
 3848              		.loc 20 1874 5 is_stmt 1 view .LVU1050
 3849 0054 B5EEC00A 		vcmpe.f32	s0, #0
 3850 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3851 005c 00F18A80 		bmi	.L253
1879:Veno-Echo.cpp ****     {
 3852              		.loc 20 1879 5 view .LVU1051
1881:Veno-Echo.cpp ****     }
 3853              		.loc 20 1881 16 is_stmt 0 view .LVU1052
 3854 0060 B4EE470A 		vcmp.f32	s0, s14
 3855 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3856 0068 37FE000A 		vselgt.f32	s0, s14, s0
 3857              	.LVL186:
 3858              	.L235:
1884:Veno-Echo.cpp **** }
 3859              		.loc 20 1884 5 is_stmt 1 view .LVU1053
1884:Veno-Echo.cpp **** }
 3860              		.loc 20 1884 5 is_stmt 0 view .LVU1054
 3861              	.LBE1143:
 3862              	.LBE1146:
1319:Veno-Echo.cpp ****         }
 3863              		.loc 20 1319 32 view .LVU1055
 3864 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 3865 0070 0020     		movs	r0, #0
 3866 0072 9FED4A1A 		vldr.32	s2, .L255+28
 3867 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3868              	.LVL187:
 3869              	.L234:
1322:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 3870              		.loc 20 1322 13 is_stmt 1 view .LVU1056
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 167


 3871              	.LBB1147:
 3872              	.LBI1147:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3873              		.loc 23 135 13 view .LVU1057
 3874              	.LBB1148:
 3875              		.loc 23 137 5 view .LVU1058
 3876              		.loc 23 137 9 is_stmt 0 view .LVU1059
 3877 007a 494B     		ldr	r3, .L255+32
 3878 007c 9FED497A 		vldr.32	s14, .L255+36
 3879 0080 D3ED007A 		vldr.32	s15, [r3]
 3880              	.LBE1148:
 3881              	.LBE1147:
 3882              	.LBB1151:
 3883              	.LBB1152:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 3884              		.loc 10 60 42 view .LVU1060
 3885 0084 484A     		ldr	r2, .L255+40
 3886              	.LBE1152:
 3887              	.LBE1151:
 3888              	.LBB1154:
 3889              	.LBB1149:
 3890              		.loc 23 137 24 view .LVU1061
 3891 0086 30EE670A 		vsub.f32	s0, s0, s15
 3892              	.LVL188:
 3893              		.loc 23 137 24 view .LVU1062
 3894              	.LBE1149:
 3895              	.LBE1154:
 3896              	.LBE1168:
 3897              	.LBE1178:
1354:Veno-Echo.cpp **** 
 3898              		.loc 20 1354 1 view .LVU1063
 3899 008a BDEC028B 		vldm	sp!, {d8}
 3900              		.cfi_remember_state
 3901              		.cfi_restore 80
 3902              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 168


 3903              		.cfi_def_cfa_offset 8
 3904              	.LVL189:
 3905              	.LBB1179:
 3906              	.LBB1169:
 3907              	.LBB1155:
 3908              	.LBB1150:
 3909              		.loc 23 137 9 view .LVU1064
 3910 008e E0EE077A 		vfma.f32	s15, s0, s14
 3911 0092 C3ED007A 		vstr.32	s15, [r3]
 3912              	.LVL190:
 3913              		.loc 23 137 9 view .LVU1065
 3914              	.LBE1150:
 3915              	.LBE1155:
1323:Veno-Echo.cpp ****     }
 3916              		.loc 20 1323 13 is_stmt 1 view .LVU1066
 3917              	.LBB1156:
 3918              	.LBI1151:
 3919              		.loc 10 60 17 view .LVU1067
 3920              	.LBB1153:
 3921              		.loc 10 60 37 view .LVU1068
 3922              		.loc 10 60 42 is_stmt 0 view .LVU1069
 3923 0096 C2ED007A 		vstr.32	s15, [r2]
 3924              	.LBE1153:
 3925              	.LBE1156:
 3926              	.LBE1169:
 3927              	.LBE1179:
1354:Veno-Echo.cpp **** 
 3928              		.loc 20 1354 1 view .LVU1070
 3929 009a 10BD     		pop	{r4, pc}
 3930              	.LVL191:
 3931              	.L227:
 3932              		.cfi_restore_state
 3933              	.LBB1180:
 3934              	.LBB1170:
1328:Veno-Echo.cpp **** 
 3935              		.loc 20 1328 9 is_stmt 1 view .LVU1071
1330:Veno-Echo.cpp ****         {
 3936              		.loc 20 1330 9 view .LVU1072
 3937 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3938 009e 002B     		cmp	r3, #0
 3939 00a0 43D1     		bne	.L238
1332:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3940              		.loc 20 1332 13 view .LVU1073
1332:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3941              		.loc 20 1332 23 is_stmt 0 view .LVU1074
 3942 00a2 0124     		movs	r4, #1
1333:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3943              		.loc 20 1333 29 view .LVU1075
 3944 00a4 4148     		ldr	r0, .L255+44
1334:Veno-Echo.cpp ****         }
 3945              		.loc 20 1334 26 view .LVU1076
 3946 00a6 4249     		ldr	r1, .L255+48
1332:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3947              		.loc 20 1332 23 view .LVU1077
 3948 00a8 1470     		strb	r4, [r2]
1333:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3949              		.loc 20 1333 13 is_stmt 1 view .LVU1078
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 169


1333:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3950              		.loc 20 1333 29 is_stmt 0 view .LVU1079
 3951 00aa 0370     		strb	r3, [r0]
1334:Veno-Echo.cpp ****         }
 3952              		.loc 20 1334 13 is_stmt 1 view .LVU1080
1334:Veno-Echo.cpp ****         }
 3953              		.loc 20 1334 26 is_stmt 0 view .LVU1081
 3954 00ac 81ED000A 		vstr.32	s0, [r1]
 3955              	.L226:
1334:Veno-Echo.cpp ****         }
 3956              		.loc 20 1334 26 view .LVU1082
 3957              	.LBE1170:
 3958              	.LBE1180:
1354:Veno-Echo.cpp **** 
 3959              		.loc 20 1354 1 view .LVU1083
 3960 00b0 BDEC028B 		vldm	sp!, {d8}
 3961              		.cfi_remember_state
 3962              		.cfi_restore 80
 3963              		.cfi_restore 81
 3964              		.cfi_def_cfa_offset 8
 3965 00b4 10BD     		pop	{r4, pc}
 3966              	.L228:
 3967              		.cfi_restore_state
 3968              	.LBB1181:
 3969              	.LBB1175:
1299:Veno-Echo.cpp ****             {
 3970              		.loc 20 1299 13 is_stmt 1 view .LVU1084
1299:Veno-Echo.cpp ****             {
 3971              		.loc 20 1299 16 is_stmt 0 view .LVU1085
 3972 00b6 354B     		ldr	r3, .L255+12
1299:Veno-Echo.cpp ****             {
 3973              		.loc 20 1299 13 view .LVU1086
 3974 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3975 00ba 7AB9     		cbnz	r2, .L230
1301:Veno-Echo.cpp ****                 {
 3976              		.loc 20 1301 17 is_stmt 1 view .LVU1087
 3977              	.LVL192:
 3978              	.LBB1157:
 3979              	.LBI1157:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3980              		.loc 21 75 3 view .LVU1088
 3981              	.LBB1158:
 3982              		.loc 21 76 5 view .LVU1089
 3983              		.loc 21 76 5 is_stmt 0 view .LVU1090
 3984              	.LBE1158:
 3985              	.LBE1157:
1301:Veno-Echo.cpp ****                 {
 3986              		.loc 20 1301 23 view .LVU1091
 3987 00bc 344A     		ldr	r2, .L255+16
1301:Veno-Echo.cpp ****                 {
 3988              		.loc 20 1301 17 view .LVU1092
 3989 00be 9FED3D7A 		vldr.32	s14, .L255+52
1301:Veno-Echo.cpp ****                 {
 3990              		.loc 20 1301 23 view .LVU1093
 3991 00c2 D2ED007A 		vldr.32	s15, [r2]
 3992 00c6 70EE677A 		vsub.f32	s15, s0, s15
 3993              	.LBB1160:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 170


 3994              	.LBB1159:
 3995              		.loc 21 76 31 view .LVU1094
 3996 00ca F0EEE77A 		vabs.f32	s15, s15
 3997              	.LBE1159:
 3998              	.LBE1160:
1301:Veno-Echo.cpp ****                 {
 3999              		.loc 20 1301 17 view .LVU1095
 4000 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4001 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4002 00d6 ABDD     		ble	.L229
1303:Veno-Echo.cpp ****                 }
 4003              		.loc 20 1303 21 is_stmt 1 view .LVU1096
1303:Veno-Echo.cpp ****                 }
 4004              		.loc 20 1303 34 is_stmt 0 view .LVU1097
 4005 00d8 0122     		movs	r2, #1
 4006 00da 1A70     		strb	r2, [r3]
 4007              	.L230:
1309:Veno-Echo.cpp **** 
 4008              		.loc 20 1309 9 is_stmt 1 view .LVU1098
 4009              	.LVL193:
1311:Veno-Echo.cpp ****         {
 4010              		.loc 20 1311 9 view .LVU1099
1313:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4011              		.loc 20 1313 13 view .LVU1100
 4012              	.LBB1161:
 4013              	.LBI1161:
1869:Veno-Echo.cpp **** {
 4014              		.loc 20 1869 7 view .LVU1101
 4015              	.LBB1162:
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4016              		.loc 20 1871 5 view .LVU1102
1872:Veno-Echo.cpp **** 
 4017              		.loc 20 1872 5 view .LVU1103
 4018              	.LBE1162:
 4019              	.LBE1161:
1313:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4020              		.loc 20 1313 32 is_stmt 0 view .LVU1104
 4021 00dc 2D4B     		ldr	r3, .L255+20
 4022              	.LBB1165:
 4023              	.LBB1163:
1872:Veno-Echo.cpp **** 
 4024              		.loc 20 1872 39 view .LVU1105
 4025 00de B7EE007A 		vmov.f32	s14, #1.0e+0
1872:Veno-Echo.cpp **** 
 4026              		.loc 20 1872 49 view .LVU1106
 4027 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
1872:Veno-Echo.cpp **** 
 4028              		.loc 20 1872 39 view .LVU1107
 4029 00e6 D3ED007A 		vldr.32	s15, [r3]
1872:Veno-Echo.cpp **** 
 4030              		.loc 20 1872 12 view .LVU1108
 4031 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4032 00ee B0EE480A 		vmov.f32	s0, s16
 4033              	.LVL194:
1872:Veno-Echo.cpp **** 
 4034              		.loc 20 1872 39 view .LVU1109
 4035 00f2 77EE677A 		vsub.f32	s15, s14, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 171


1872:Veno-Echo.cpp **** 
 4036              		.loc 20 1872 49 view .LVU1110
 4037 00f6 77EEC67A 		vsub.f32	s15, s15, s12
1872:Veno-Echo.cpp **** 
 4038              		.loc 20 1872 12 view .LVU1111
 4039 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4040              	.LVL195:
1874:Veno-Echo.cpp ****     {
 4041              		.loc 20 1874 5 is_stmt 1 view .LVU1112
 4042 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4043 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4044 0106 38D4     		bmi	.L254
1879:Veno-Echo.cpp ****     {
 4045              		.loc 20 1879 5 view .LVU1113
1881:Veno-Echo.cpp ****     }
 4046              		.loc 20 1881 16 is_stmt 0 view .LVU1114
 4047 0108 B4EE470A 		vcmp.f32	s0, s14
 4048 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4049 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4050              	.LVL196:
 4051              	.L232:
1884:Veno-Echo.cpp **** }
 4052              		.loc 20 1884 5 is_stmt 1 view .LVU1115
1884:Veno-Echo.cpp **** }
 4053              		.loc 20 1884 5 is_stmt 0 view .LVU1116
 4054              	.LBE1163:
 4055              	.LBE1165:
1313:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4056              		.loc 20 1313 32 view .LVU1117
 4057 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4058 0118 0020     		movs	r0, #0
 4059 011a 9FED201A 		vldr.32	s2, .L255+28
 4060 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4061              	.LVL197:
1314:Veno-Echo.cpp ****         }
 4062              		.loc 20 1314 24 view .LVU1118
 4063 0122 1D4B     		ldr	r3, .L255+24
 4064              	.LVL198:
1314:Veno-Echo.cpp ****         }
 4065              		.loc 20 1314 13 is_stmt 1 view .LVU1119
1314:Veno-Echo.cpp ****         }
 4066              		.loc 20 1314 24 is_stmt 0 view .LVU1120
 4067 0124 83ED008A 		vstr.32	s16, [r3]
 4068 0128 A7E7     		b	.L234
 4069              	.LVL199:
 4070              	.L238:
1314:Veno-Echo.cpp ****         }
 4071              		.loc 20 1314 24 view .LVU1121
 4072              	.LBE1175:
 4073              	.LBB1176:
1339:Veno-Echo.cpp ****             {
 4074              		.loc 20 1339 13 is_stmt 1 view .LVU1122
1339:Veno-Echo.cpp ****             {
 4075              		.loc 20 1339 16 is_stmt 0 view .LVU1123
 4076 012a 204B     		ldr	r3, .L255+44
1339:Veno-Echo.cpp ****             {
 4077              		.loc 20 1339 13 view .LVU1124
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 172


 4078 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4079 012e 7AB9     		cbnz	r2, .L240
1341:Veno-Echo.cpp ****                 {
 4080              		.loc 20 1341 17 is_stmt 1 view .LVU1125
 4081              	.LVL200:
 4082              	.LBB1171:
 4083              	.LBI1171:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4084              		.loc 21 75 3 view .LVU1126
 4085              	.LBB1172:
 4086              		.loc 21 76 5 view .LVU1127
 4087              		.loc 21 76 5 is_stmt 0 view .LVU1128
 4088              	.LBE1172:
 4089              	.LBE1171:
1341:Veno-Echo.cpp ****                 {
 4090              		.loc 20 1341 23 view .LVU1129
 4091 0130 1F4A     		ldr	r2, .L255+48
1341:Veno-Echo.cpp ****                 {
 4092              		.loc 20 1341 17 view .LVU1130
 4093 0132 9FED207A 		vldr.32	s14, .L255+52
1341:Veno-Echo.cpp ****                 {
 4094              		.loc 20 1341 23 view .LVU1131
 4095 0136 D2ED007A 		vldr.32	s15, [r2]
 4096 013a 70EE677A 		vsub.f32	s15, s0, s15
 4097              	.LBB1174:
 4098              	.LBB1173:
 4099              		.loc 21 76 31 view .LVU1132
 4100 013e F0EEE77A 		vabs.f32	s15, s15
 4101              	.LBE1173:
 4102              	.LBE1174:
1341:Veno-Echo.cpp ****                 {
 4103              		.loc 20 1341 17 view .LVU1133
 4104 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4105 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4106 014a B1DD     		ble	.L226
1343:Veno-Echo.cpp ****                 }
 4107              		.loc 20 1343 21 is_stmt 1 view .LVU1134
1343:Veno-Echo.cpp ****                 }
 4108              		.loc 20 1343 37 is_stmt 0 view .LVU1135
 4109 014c 0122     		movs	r2, #1
 4110 014e 1A70     		strb	r2, [r3]
 4111              	.L240:
1348:Veno-Echo.cpp ****         {
 4112              		.loc 20 1348 9 is_stmt 1 view .LVU1136
1350:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4113              		.loc 20 1350 13 view .LVU1137
1350:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4114              		.loc 20 1350 29 is_stmt 0 view .LVU1138
 4115 0150 B0EE480A 		vmov.f32	s0, s16
 4116              	.LVL201:
1350:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4117              		.loc 20 1350 29 view .LVU1139
 4118 0154 0020     		movs	r0, #0
 4119 0156 9FED181A 		vldr.32	s2, .L255+56
 4120 015a DFED100A 		vldr.32	s1, .L255+28
 4121 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4122              	.LVL202:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 173


1350:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4123              		.loc 20 1350 22 view .LVU1140
 4124 0162 164A     		ldr	r2, .L255+60
1351:Veno-Echo.cpp ****         }
 4125              		.loc 20 1351 34 view .LVU1141
 4126 0164 164B     		ldr	r3, .L255+64
1350:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4127              		.loc 20 1350 22 view .LVU1142
 4128 0166 82ED000A 		vstr.32	s0, [r2]
1351:Veno-Echo.cpp ****         }
 4129              		.loc 20 1351 13 is_stmt 1 view .LVU1143
1351:Veno-Echo.cpp ****         }
 4130              		.loc 20 1351 34 is_stmt 0 view .LVU1144
 4131 016a 83ED020A 		vstr.32	s0, [r3, #8]
 4132              	.LBE1176:
 4133              	.LBE1181:
1354:Veno-Echo.cpp **** 
 4134              		.loc 20 1354 1 view .LVU1145
 4135 016e BDEC028B 		vldm	sp!, {d8}
 4136              		.cfi_remember_state
 4137              		.cfi_restore 80
 4138              		.cfi_restore 81
 4139              		.cfi_def_cfa_offset 8
 4140              	.LVL203:
1354:Veno-Echo.cpp **** 
 4141              		.loc 20 1354 1 view .LVU1146
 4142 0172 10BD     		pop	{r4, pc}
 4143              	.LVL204:
 4144              	.L253:
 4145              		.cfi_restore_state
 4146              	.LBB1182:
 4147              	.LBB1177:
 4148              	.LBB1166:
 4149              	.LBB1144:
1876:Veno-Echo.cpp ****     }
 4150              		.loc 20 1876 16 view .LVU1147
 4151 0174 9FED090A 		vldr.32	s0, .L255+28
 4152              	.LVL205:
1876:Veno-Echo.cpp ****     }
 4153              		.loc 20 1876 16 view .LVU1148
 4154 0178 78E7     		b	.L235
 4155              	.LVL206:
 4156              	.L254:
1876:Veno-Echo.cpp ****     }
 4157              		.loc 20 1876 16 view .LVU1149
 4158              	.LBE1144:
 4159              	.LBE1166:
 4160              	.LBB1167:
 4161              	.LBB1164:
 4162 017a 9FED080A 		vldr.32	s0, .L255+28
 4163              	.LVL207:
1876:Veno-Echo.cpp ****     }
 4164              		.loc 20 1876 16 view .LVU1150
 4165 017e C9E7     		b	.L232
 4166              	.L256:
 4167              		.align	2
 4168              	.L255:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 174


 4169 0180 18000000 		.word	.LANCHOR4+24
 4170 0184 00000000 		.word	.LANCHOR7
 4171 0188 00000000 		.word	.LANCHOR59
 4172 018c 00000000 		.word	.LANCHOR60
 4173 0190 00000000 		.word	.LANCHOR61
 4174 0194 00000000 		.word	.LANCHOR58
 4175 0198 00000000 		.word	.LANCHOR62
 4176 019c 00000000 		.word	0
 4177 01a0 00000000 		.word	.LANCHOR63
 4178 01a4 6F12033D 		.word	1023611503
 4179 01a8 00000000 		.word	.LANCHOR64
 4180 01ac 00000000 		.word	.LANCHOR65
 4181 01b0 00000000 		.word	.LANCHOR66
 4182 01b4 0AD7A33B 		.word	1000593162
 4183 01b8 0000FA43 		.word	1140457472
 4184 01bc 00000000 		.word	.LANCHOR67
 4185 01c0 00000000 		.word	.LANCHOR15
 4186              	.LBE1164:
 4187              	.LBE1167:
 4188              	.LBE1177:
 4189              	.LBE1182:
 4190              		.cfi_endproc
 4191              	.LFE4323:
 4193              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4194              		.align	1
 4195              		.p2align 2,,3
 4196              		.global	_Z20Update_crossfeedbackv
 4197              		.syntax unified
 4198              		.thumb
 4199              		.thumb_func
 4200              		.fpu fpv5-d16
 4202              	_Z20Update_crossfeedbackv:
 4203              	.LFB4324:
1357:Veno-Echo.cpp ****     static bool lastShift{};
 4204              		.loc 20 1357 1 is_stmt 1 view -0
 4205              		.cfi_startproc
 4206              		@ args = 0, pretend = 0, frame = 0
 4207              		@ frame_needed = 0, uses_anonymous_args = 0
1358:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4208              		.loc 20 1358 5 view .LVU1152
1359:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4209              		.loc 20 1359 5 view .LVU1153
1360:Veno-Echo.cpp **** 
 4210              		.loc 20 1360 5 view .LVU1154
1362:Veno-Echo.cpp **** 
 4211              		.loc 20 1362 5 view .LVU1155
1365:Veno-Echo.cpp **** 
 4212              		.loc 20 1365 5 view .LVU1156
1365:Veno-Echo.cpp **** 
 4213              		.loc 20 1365 47 is_stmt 0 view .LVU1157
 4214 0000 0022     		movs	r2, #0
 4215 0002 0721     		movs	r1, #7
 4216 0004 4148     		ldr	r0, .L272
1357:Veno-Echo.cpp ****     static bool lastShift{};
 4217              		.loc 20 1357 1 view .LVU1158
 4218 0006 10B5     		push	{r4, lr}
 4219              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 175


 4220              		.cfi_offset 4, -8
 4221              		.cfi_offset 14, -4
 4222 0008 2DED028B 		vpush.64	{d8}
 4223              		.cfi_def_cfa_offset 16
 4224              		.cfi_offset 80, -16
 4225              		.cfi_offset 81, -12
1365:Veno-Echo.cpp **** 
 4226              		.loc 20 1365 47 view .LVU1159
 4227 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4228              	.LVL208:
 4229              	.LBB1183:
1367:Veno-Echo.cpp ****     {   
 4230              		.loc 20 1367 9 view .LVU1160
 4231 0010 3F4B     		ldr	r3, .L272+4
 4232              	.LBE1183:
1365:Veno-Echo.cpp **** 
 4233              		.loc 20 1365 47 view .LVU1161
 4234 0012 B0EE408A 		vmov.f32	s16, s0
 4235              	.LVL209:
1367:Veno-Echo.cpp ****     {   
 4236              		.loc 20 1367 5 is_stmt 1 view .LVU1162
 4237              	.LBB1212:
 4238              	.LBB1184:
1371:Veno-Echo.cpp ****         {
 4239              		.loc 20 1371 19 is_stmt 0 view .LVU1163
 4240 0016 3F4A     		ldr	r2, .L272+8
 4241              	.LBE1184:
1367:Veno-Echo.cpp ****     {   
 4242              		.loc 20 1367 5 view .LVU1164
 4243 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4244 001a FBB9     		cbnz	r3, .L258
 4245              	.LBB1193:
1369:Veno-Echo.cpp ****         //update pickup
 4246              		.loc 20 1369 9 is_stmt 1 view .LVU1165
1371:Veno-Echo.cpp ****         {
 4247              		.loc 20 1371 9 view .LVU1166
 4248 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4249 001e 49B3     		cbz	r1, .L259
1373:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4250              		.loc 20 1373 13 view .LVU1167
1374:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4251              		.loc 20 1374 34 is_stmt 0 view .LVU1168
 4252 0020 3D48     		ldr	r0, .L272+12
1375:Veno-Echo.cpp ****         }
 4253              		.loc 20 1375 31 view .LVU1169
 4254 0022 3E49     		ldr	r1, .L272+16
1373:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4255              		.loc 20 1373 23 view .LVU1170
 4256 0024 1370     		strb	r3, [r2]
1374:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4257              		.loc 20 1374 13 is_stmt 1 view .LVU1171
1374:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4258              		.loc 20 1374 34 is_stmt 0 view .LVU1172
 4259 0026 0370     		strb	r3, [r0]
1375:Veno-Echo.cpp ****         }
 4260              		.loc 20 1375 13 is_stmt 1 view .LVU1173
1375:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 176


 4261              		.loc 20 1375 31 is_stmt 0 view .LVU1174
 4262 0028 81ED000A 		vstr.32	s0, [r1]
 4263              	.L260:
1388:Veno-Echo.cpp **** 
 4264              		.loc 20 1388 9 is_stmt 1 view .LVU1175
 4265              	.LVL210:
1390:Veno-Echo.cpp ****         {
 4266              		.loc 20 1390 9 view .LVU1176
1398:Veno-Echo.cpp ****         }
 4267              		.loc 20 1398 13 view .LVU1177
1398:Veno-Echo.cpp ****         }
 4268              		.loc 20 1398 40 is_stmt 0 view .LVU1178
 4269 002c 3C4B     		ldr	r3, .L272+20
 4270 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4271 0032 0020     		movs	r0, #0
 4272 0034 DFED3B0A 		vldr.32	s1, .L272+24
 4273 0038 93ED000A 		vldr.32	s0, [r3]
 4274              	.LVL211:
1398:Veno-Echo.cpp ****         }
 4275              		.loc 20 1398 40 view .LVU1179
 4276 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4277              	.LVL212:
 4278              	.L268:
1401:Veno-Echo.cpp ****     }
 4279              		.loc 20 1401 9 is_stmt 1 view .LVU1180
 4280              	.LBB1185:
 4281              	.LBI1185:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4282              		.loc 23 135 13 view .LVU1181
 4283              	.LBB1186:
 4284              		.loc 23 137 5 view .LVU1182
 4285              		.loc 23 137 9 is_stmt 0 view .LVU1183
 4286 0040 394B     		ldr	r3, .L272+28
 4287 0042 9FED3A7A 		vldr.32	s14, .L272+32
 4288 0046 D3ED007A 		vldr.32	s15, [r3]
 4289              		.loc 23 137 24 view .LVU1184
 4290 004a 30EE670A 		vsub.f32	s0, s0, s15
 4291              	.LVL213:
 4292              		.loc 23 137 24 view .LVU1185
 4293              	.LBE1186:
 4294              	.LBE1185:
 4295              	.LBE1193:
 4296              	.LBE1212:
1432:Veno-Echo.cpp **** 
 4297              		.loc 20 1432 1 view .LVU1186
 4298 004e BDEC028B 		vldm	sp!, {d8}
 4299              		.cfi_remember_state
 4300              		.cfi_restore 80
 4301              		.cfi_restore 81
 4302              		.cfi_def_cfa_offset 8
 4303              	.LVL214:
 4304              	.LBB1213:
 4305              	.LBB1194:
 4306              	.LBB1188:
 4307              	.LBB1187:
 4308              		.loc 23 137 9 view .LVU1187
 4309 0052 E0EE077A 		vfma.f32	s15, s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 177


 4310 0056 C3ED007A 		vstr.32	s15, [r3]
 4311              	.LBE1187:
 4312              	.LBE1188:
 4313              	.LBE1194:
 4314              	.LBE1213:
1432:Veno-Echo.cpp **** 
 4315              		.loc 20 1432 1 view .LVU1188
 4316 005a 10BD     		pop	{r4, pc}
 4317              	.LVL215:
 4318              	.L258:
 4319              		.cfi_restore_state
 4320              	.LBB1214:
 4321              	.LBB1195:
1405:Veno-Echo.cpp **** 
 4322              		.loc 20 1405 9 is_stmt 1 view .LVU1189
1407:Veno-Echo.cpp ****         {
 4323              		.loc 20 1407 9 view .LVU1190
 4324 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4325 005e 4BBB     		cbnz	r3, .L264
1409:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4326              		.loc 20 1409 13 view .LVU1191
1409:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4327              		.loc 20 1409 23 is_stmt 0 view .LVU1192
 4328 0060 0124     		movs	r4, #1
1410:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4329              		.loc 20 1410 28 view .LVU1193
 4330 0062 3348     		ldr	r0, .L272+36
1411:Veno-Echo.cpp ****         }
 4331              		.loc 20 1411 25 view .LVU1194
 4332 0064 3349     		ldr	r1, .L272+40
1409:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4333              		.loc 20 1409 23 view .LVU1195
 4334 0066 1470     		strb	r4, [r2]
1410:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4335              		.loc 20 1410 13 is_stmt 1 view .LVU1196
1410:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4336              		.loc 20 1410 28 is_stmt 0 view .LVU1197
 4337 0068 0370     		strb	r3, [r0]
1411:Veno-Echo.cpp ****         }
 4338              		.loc 20 1411 13 is_stmt 1 view .LVU1198
1411:Veno-Echo.cpp ****         }
 4339              		.loc 20 1411 25 is_stmt 0 view .LVU1199
 4340 006a 81ED000A 		vstr.32	s0, [r1]
 4341              	.L257:
1411:Veno-Echo.cpp ****         }
 4342              		.loc 20 1411 25 view .LVU1200
 4343              	.LBE1195:
 4344              	.LBE1214:
1432:Veno-Echo.cpp **** 
 4345              		.loc 20 1432 1 view .LVU1201
 4346 006e BDEC028B 		vldm	sp!, {d8}
 4347              		.cfi_remember_state
 4348              		.cfi_restore 80
 4349              		.cfi_restore 81
 4350              		.cfi_def_cfa_offset 8
 4351 0072 10BD     		pop	{r4, pc}
 4352              	.L259:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 178


 4353              		.cfi_restore_state
 4354              	.LBB1215:
 4355              	.LBB1210:
1380:Veno-Echo.cpp ****             {
 4356              		.loc 20 1380 13 is_stmt 1 view .LVU1202
1380:Veno-Echo.cpp ****             {
 4357              		.loc 20 1380 16 is_stmt 0 view .LVU1203
 4358 0074 284B     		ldr	r3, .L272+12
1380:Veno-Echo.cpp ****             {
 4359              		.loc 20 1380 13 view .LVU1204
 4360 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4361 0078 7AB9     		cbnz	r2, .L261
1382:Veno-Echo.cpp ****                 {
 4362              		.loc 20 1382 17 is_stmt 1 view .LVU1205
 4363              	.LVL216:
 4364              	.LBB1189:
 4365              	.LBI1189:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4366              		.loc 21 75 3 view .LVU1206
 4367              	.LBB1190:
 4368              		.loc 21 76 5 view .LVU1207
 4369              		.loc 21 76 5 is_stmt 0 view .LVU1208
 4370              	.LBE1190:
 4371              	.LBE1189:
1382:Veno-Echo.cpp ****                 {
 4372              		.loc 20 1382 23 view .LVU1209
 4373 007a 284A     		ldr	r2, .L272+16
1382:Veno-Echo.cpp ****                 {
 4374              		.loc 20 1382 17 view .LVU1210
 4375 007c 9FED2E7A 		vldr.32	s14, .L272+44
1382:Veno-Echo.cpp ****                 {
 4376              		.loc 20 1382 23 view .LVU1211
 4377 0080 D2ED007A 		vldr.32	s15, [r2]
 4378 0084 70EE677A 		vsub.f32	s15, s0, s15
 4379              	.LBB1192:
 4380              	.LBB1191:
 4381              		.loc 21 76 31 view .LVU1212
 4382 0088 F0EEE77A 		vabs.f32	s15, s15
 4383              	.LBE1191:
 4384              	.LBE1192:
1382:Veno-Echo.cpp ****                 {
 4385              		.loc 20 1382 17 view .LVU1213
 4386 008c F4EEC77A 		vcmpe.f32	s15, s14
 4387 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4388 0094 CADD     		ble	.L260
1384:Veno-Echo.cpp ****                 }
 4389              		.loc 20 1384 21 is_stmt 1 view .LVU1214
1384:Veno-Echo.cpp ****                 }
 4390              		.loc 20 1384 42 is_stmt 0 view .LVU1215
 4391 0096 0122     		movs	r2, #1
 4392 0098 1A70     		strb	r2, [r3]
 4393              	.L261:
1388:Veno-Echo.cpp **** 
 4394              		.loc 20 1388 9 is_stmt 1 view .LVU1216
 4395              	.LVL217:
1390:Veno-Echo.cpp ****         {
 4396              		.loc 20 1390 9 view .LVU1217
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 179


1392:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4397              		.loc 20 1392 13 view .LVU1218
1392:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4398              		.loc 20 1392 40 is_stmt 0 view .LVU1219
 4399 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4400 009e 0020     		movs	r0, #0
 4401 00a0 B0EE480A 		vmov.f32	s0, s16
 4402              	.LVL218:
1392:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4403              		.loc 20 1392 40 view .LVU1220
 4404 00a4 DFED1F0A 		vldr.32	s1, .L272+24
 4405 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4406              	.LVL219:
1393:Veno-Echo.cpp ****         }
 4407              		.loc 20 1393 32 view .LVU1221
 4408 00ac 1C4B     		ldr	r3, .L272+20
 4409              	.LVL220:
1393:Veno-Echo.cpp ****         }
 4410              		.loc 20 1393 13 is_stmt 1 view .LVU1222
1393:Veno-Echo.cpp ****         }
 4411              		.loc 20 1393 32 is_stmt 0 view .LVU1223
 4412 00ae 83ED008A 		vstr.32	s16, [r3]
 4413 00b2 C5E7     		b	.L268
 4414              	.LVL221:
 4415              	.L264:
1393:Veno-Echo.cpp ****         }
 4416              		.loc 20 1393 32 view .LVU1224
 4417              	.LBE1210:
 4418              	.LBB1211:
1416:Veno-Echo.cpp ****             {
 4419              		.loc 20 1416 13 is_stmt 1 view .LVU1225
1416:Veno-Echo.cpp ****             {
 4420              		.loc 20 1416 16 is_stmt 0 view .LVU1226
 4421 00b4 1E4B     		ldr	r3, .L272+36
1416:Veno-Echo.cpp ****             {
 4422              		.loc 20 1416 13 view .LVU1227
 4423 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4424 00b8 7AB9     		cbnz	r2, .L266
1418:Veno-Echo.cpp ****                 {
 4425              		.loc 20 1418 17 is_stmt 1 view .LVU1228
 4426              	.LVL222:
 4427              	.LBB1196:
 4428              	.LBI1196:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4429              		.loc 21 75 3 view .LVU1229
 4430              	.LBB1197:
 4431              		.loc 21 76 5 view .LVU1230
 4432              		.loc 21 76 5 is_stmt 0 view .LVU1231
 4433              	.LBE1197:
 4434              	.LBE1196:
1418:Veno-Echo.cpp ****                 {
 4435              		.loc 20 1418 23 view .LVU1232
 4436 00ba 1E4A     		ldr	r2, .L272+40
1418:Veno-Echo.cpp ****                 {
 4437              		.loc 20 1418 17 view .LVU1233
 4438 00bc 9FED1E7A 		vldr.32	s14, .L272+44
1418:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 180


 4439              		.loc 20 1418 23 view .LVU1234
 4440 00c0 D2ED007A 		vldr.32	s15, [r2]
 4441 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4442              	.LBB1199:
 4443              	.LBB1198:
 4444              		.loc 21 76 31 view .LVU1235
 4445 00c8 F0EEE77A 		vabs.f32	s15, s15
 4446              	.LBE1198:
 4447              	.LBE1199:
1418:Veno-Echo.cpp ****                 {
 4448              		.loc 20 1418 17 view .LVU1236
 4449 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4450 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4451 00d4 CBDD     		ble	.L257
1420:Veno-Echo.cpp ****                 }
 4452              		.loc 20 1420 21 is_stmt 1 view .LVU1237
1420:Veno-Echo.cpp ****                 }
 4453              		.loc 20 1420 36 is_stmt 0 view .LVU1238
 4454 00d6 0122     		movs	r2, #1
 4455 00d8 1A70     		strb	r2, [r3]
 4456              	.L266:
1425:Veno-Echo.cpp ****         {
 4457              		.loc 20 1425 9 is_stmt 1 view .LVU1239
 4458              	.LBB1200:
 4459              	.LBB1201:
1427:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4460              		.loc 20 1427 13 view .LVU1240
 4461              	.LBB1202:
 4462              	.LBB1203:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 181


  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4463              		.loc 8 60 20 is_stmt 0 view .LVU1241
 4464 00da 184C     		ldr	r4, .L272+48
 4465              	.LBE1203:
 4466              	.LBE1202:
1427:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4467              		.loc 20 1427 32 view .LVU1242
 4468 00dc B0EE480A 		vmov.f32	s0, s16
 4469              	.LVL223:
1427:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4470              		.loc 20 1427 32 view .LVU1243
 4471 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4472 00e4 0020     		movs	r0, #0
 4473 00e6 DFED160A 		vldr.32	s1, .L272+52
 4474 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4475              	.LVL224:
 4476              	.LBB1207:
 4477              	.LBB1204:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4478              		.loc 8 61 34 view .LVU1244
 4479 00ee 2046     		mov	r0, r4
 4480              	.LBE1204:
 4481              	.LBE1207:
1427:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4482              		.loc 20 1427 32 view .LVU1245
 4483 00f0 B0EE408A 		vmov.f32	s16, s0
 4484              	.LVL225:
1428:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4485              		.loc 20 1428 13 is_stmt 1 view .LVU1246
 4486              	.LBB1208:
 4487              	.LBI1202:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4488              		.loc 8 58 17 view .LVU1247
 4489              	.LBB1205:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4490              		.loc 8 60 9 view .LVU1248
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4491              		.loc 8 60 20 is_stmt 0 view .LVU1249
 4492 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4493              		.loc 8 61 9 is_stmt 1 view .LVU1250
 4494              		.loc 8 61 34 is_stmt 0 view .LVU1251
 4495 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 182


 4496              	.LVL226:
 4497              		.loc 8 61 34 view .LVU1252
 4498              	.LBE1205:
 4499              	.LBE1208:
1429:Veno-Echo.cpp ****         }
 4500              		.loc 20 1429 33 view .LVU1253
 4501 00fc 114B     		ldr	r3, .L272+56
 4502              	.LBB1209:
 4503              	.LBB1206:
 4504              		.loc 8 61 20 view .LVU1254
 4505 00fe 84ED060A 		vstr.32	s0, [r4, #24]
 4506              	.LVL227:
 4507              		.loc 8 61 20 view .LVU1255
 4508              	.LBE1206:
 4509              	.LBE1209:
1429:Veno-Echo.cpp ****         }
 4510              		.loc 20 1429 13 is_stmt 1 view .LVU1256
1429:Veno-Echo.cpp ****         }
 4511              		.loc 20 1429 33 is_stmt 0 view .LVU1257
 4512 0102 83ED038A 		vstr.32	s16, [r3, #12]
 4513              	.LBE1201:
 4514              	.LBE1200:
 4515              	.LBE1211:
 4516              	.LBE1215:
1432:Veno-Echo.cpp **** 
 4517              		.loc 20 1432 1 view .LVU1258
 4518 0106 BDEC028B 		vldm	sp!, {d8}
 4519              		.cfi_restore 80
 4520              		.cfi_restore 81
 4521              		.cfi_def_cfa_offset 8
 4522              	.LVL228:
1432:Veno-Echo.cpp **** 
 4523              		.loc 20 1432 1 view .LVU1259
 4524 010a 10BD     		pop	{r4, pc}
 4525              	.L273:
 4526              		.align	2
 4527              	.L272:
 4528 010c 18000000 		.word	.LANCHOR4+24
 4529 0110 00000000 		.word	.LANCHOR7
 4530 0114 00000000 		.word	.LANCHOR68
 4531 0118 00000000 		.word	.LANCHOR69
 4532 011c 00000000 		.word	.LANCHOR70
 4533 0120 00000000 		.word	.LANCHOR74
 4534 0124 00000000 		.word	0
 4535 0128 00000000 		.word	.LANCHOR71
 4536 012c 6F12033D 		.word	1023611503
 4537 0130 00000000 		.word	.LANCHOR72
 4538 0134 00000000 		.word	.LANCHOR73
 4539 0138 0AD7A33B 		.word	1000593162
 4540 013c 00000000 		.word	.LANCHOR75
 4541 0140 CDCCCC3D 		.word	1036831949
 4542 0144 00000000 		.word	.LANCHOR15
 4543              		.cfi_endproc
 4544              	.LFE4324:
 4546              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4547              		.align	1
 4548              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 183


 4549              		.global	_Z18Update_filterXfadev
 4550              		.syntax unified
 4551              		.thumb
 4552              		.thumb_func
 4553              		.fpu fpv5-d16
 4555              	_Z18Update_filterXfadev:
 4556              	.LFB4325:
1435:Veno-Echo.cpp ****     static bool lastShift{};
 4557              		.loc 20 1435 1 is_stmt 1 view -0
 4558              		.cfi_startproc
 4559              		@ args = 0, pretend = 0, frame = 0
 4560              		@ frame_needed = 0, uses_anonymous_args = 0
1436:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4561              		.loc 20 1436 5 view .LVU1261
1437:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4562              		.loc 20 1437 5 view .LVU1262
1438:Veno-Echo.cpp **** 
 4563              		.loc 20 1438 5 view .LVU1263
1440:Veno-Echo.cpp **** 
 4564              		.loc 20 1440 5 view .LVU1264
1443:Veno-Echo.cpp **** 
 4565              		.loc 20 1443 5 view .LVU1265
1443:Veno-Echo.cpp **** 
 4566              		.loc 20 1443 45 is_stmt 0 view .LVU1266
 4567 0000 0322     		movs	r2, #3
 4568 0002 0721     		movs	r1, #7
 4569 0004 4248     		ldr	r0, .L296
1435:Veno-Echo.cpp ****     static bool lastShift{};
 4570              		.loc 20 1435 1 view .LVU1267
 4571 0006 10B5     		push	{r4, lr}
 4572              		.cfi_def_cfa_offset 8
 4573              		.cfi_offset 4, -8
 4574              		.cfi_offset 14, -4
 4575 0008 2DED028B 		vpush.64	{d8}
 4576              		.cfi_def_cfa_offset 16
 4577              		.cfi_offset 80, -16
 4578              		.cfi_offset 81, -12
1443:Veno-Echo.cpp **** 
 4579              		.loc 20 1443 45 view .LVU1268
 4580 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4581              	.LVL229:
 4582              	.LBB1216:
1445:Veno-Echo.cpp ****     {   
 4583              		.loc 20 1445 9 view .LVU1269
 4584 0010 404B     		ldr	r3, .L296+4
 4585              	.LBE1216:
1443:Veno-Echo.cpp **** 
 4586              		.loc 20 1443 45 view .LVU1270
 4587 0012 B0EE408A 		vmov.f32	s16, s0
 4588              	.LVL230:
1445:Veno-Echo.cpp ****     {   
 4589              		.loc 20 1445 5 is_stmt 1 view .LVU1271
 4590              	.LBB1236:
 4591              	.LBB1217:
1449:Veno-Echo.cpp ****         {
 4592              		.loc 20 1449 19 is_stmt 0 view .LVU1272
 4593 0016 404A     		ldr	r2, .L296+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 184


 4594              	.LBE1217:
1445:Veno-Echo.cpp ****     {   
 4595              		.loc 20 1445 5 view .LVU1273
 4596 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4597 001a FBB9     		cbnz	r3, .L275
 4598              	.LBB1226:
1447:Veno-Echo.cpp ****         //update pickup
 4599              		.loc 20 1447 9 is_stmt 1 view .LVU1274
1449:Veno-Echo.cpp ****         {
 4600              		.loc 20 1449 9 view .LVU1275
 4601 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4602 001e 49B3     		cbz	r1, .L276
1451:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4603              		.loc 20 1451 13 view .LVU1276
1452:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4604              		.loc 20 1452 32 is_stmt 0 view .LVU1277
 4605 0020 3E48     		ldr	r0, .L296+12
1453:Veno-Echo.cpp ****         }
 4606              		.loc 20 1453 29 view .LVU1278
 4607 0022 3F49     		ldr	r1, .L296+16
1451:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4608              		.loc 20 1451 23 view .LVU1279
 4609 0024 1370     		strb	r3, [r2]
1452:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4610              		.loc 20 1452 13 is_stmt 1 view .LVU1280
1452:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4611              		.loc 20 1452 32 is_stmt 0 view .LVU1281
 4612 0026 0370     		strb	r3, [r0]
1453:Veno-Echo.cpp ****         }
 4613              		.loc 20 1453 13 is_stmt 1 view .LVU1282
1453:Veno-Echo.cpp ****         }
 4614              		.loc 20 1453 29 is_stmt 0 view .LVU1283
 4615 0028 81ED000A 		vstr.32	s0, [r1]
 4616              	.L277:
1467:Veno-Echo.cpp **** 
 4617              		.loc 20 1467 9 is_stmt 1 view .LVU1284
 4618              	.LVL231:
1469:Veno-Echo.cpp ****         {
 4619              		.loc 20 1469 9 view .LVU1285
1477:Veno-Echo.cpp ****         }
 4620              		.loc 20 1477 13 view .LVU1286
1477:Veno-Echo.cpp ****         }
 4621              		.loc 20 1477 38 is_stmt 0 view .LVU1287
 4622 002c 3D4B     		ldr	r3, .L296+20
 4623 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4624 0032 0120     		movs	r0, #1
 4625 0034 DFED3C0A 		vldr.32	s1, .L296+24
 4626 0038 93ED000A 		vldr.32	s0, [r3]
 4627              	.LVL232:
1477:Veno-Echo.cpp ****         }
 4628              		.loc 20 1477 38 view .LVU1288
 4629 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4630              	.LVL233:
 4631              	.L287:
1480:Veno-Echo.cpp ****     }
 4632              		.loc 20 1480 9 is_stmt 1 view .LVU1289
 4633              	.LBB1218:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 185


 4634              	.LBI1218:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4635              		.loc 23 135 13 view .LVU1290
 4636              	.LBB1219:
 4637              		.loc 23 137 5 view .LVU1291
 4638              		.loc 23 137 9 is_stmt 0 view .LVU1292
 4639 0040 3A4B     		ldr	r3, .L296+28
 4640 0042 9FED3B7A 		vldr.32	s14, .L296+32
 4641 0046 D3ED007A 		vldr.32	s15, [r3]
 4642              		.loc 23 137 24 view .LVU1293
 4643 004a 30EE670A 		vsub.f32	s0, s0, s15
 4644              	.LVL234:
 4645              		.loc 23 137 24 view .LVU1294
 4646              	.LBE1219:
 4647              	.LBE1218:
 4648              	.LBE1226:
 4649              	.LBE1236:
1522:Veno-Echo.cpp **** 
 4650              		.loc 20 1522 1 view .LVU1295
 4651 004e BDEC028B 		vldm	sp!, {d8}
 4652              		.cfi_remember_state
 4653              		.cfi_restore 80
 4654              		.cfi_restore 81
 4655              		.cfi_def_cfa_offset 8
 4656              	.LVL235:
 4657              	.LBB1237:
 4658              	.LBB1227:
 4659              	.LBB1221:
 4660              	.LBB1220:
 4661              		.loc 23 137 9 view .LVU1296
 4662 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4663 0056 C3ED007A 		vstr.32	s15, [r3]
 4664              	.LBE1220:
 4665              	.LBE1221:
 4666              	.LBE1227:
 4667              	.LBE1237:
1522:Veno-Echo.cpp **** 
 4668              		.loc 20 1522 1 view .LVU1297
 4669 005a 10BD     		pop	{r4, pc}
 4670              	.LVL236:
 4671              	.L275:
 4672              		.cfi_restore_state
 4673              	.LBB1238:
 4674              	.LBB1228:
1485:Veno-Echo.cpp **** 
 4675              		.loc 20 1485 9 is_stmt 1 view .LVU1298
1487:Veno-Echo.cpp ****         {
 4676              		.loc 20 1487 9 view .LVU1299
 4677 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4678 005e 4BBB     		cbnz	r3, .L281
1489:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4679              		.loc 20 1489 13 view .LVU1300
1489:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4680              		.loc 20 1489 23 is_stmt 0 view .LVU1301
 4681 0060 0124     		movs	r4, #1
1490:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4682              		.loc 20 1490 32 view .LVU1302
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 186


 4683 0062 3448     		ldr	r0, .L296+36
1491:Veno-Echo.cpp ****         }
 4684              		.loc 20 1491 29 view .LVU1303
 4685 0064 3449     		ldr	r1, .L296+40
1489:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4686              		.loc 20 1489 23 view .LVU1304
 4687 0066 1470     		strb	r4, [r2]
1490:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4688              		.loc 20 1490 13 is_stmt 1 view .LVU1305
1490:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4689              		.loc 20 1490 32 is_stmt 0 view .LVU1306
 4690 0068 0370     		strb	r3, [r0]
1491:Veno-Echo.cpp ****         }
 4691              		.loc 20 1491 13 is_stmt 1 view .LVU1307
1491:Veno-Echo.cpp ****         }
 4692              		.loc 20 1491 29 is_stmt 0 view .LVU1308
 4693 006a 81ED000A 		vstr.32	s0, [r1]
 4694              	.L274:
1491:Veno-Echo.cpp ****         }
 4695              		.loc 20 1491 29 view .LVU1309
 4696              	.LBE1228:
 4697              	.LBE1238:
1522:Veno-Echo.cpp **** 
 4698              		.loc 20 1522 1 view .LVU1310
 4699 006e BDEC028B 		vldm	sp!, {d8}
 4700              		.cfi_remember_state
 4701              		.cfi_restore 80
 4702              		.cfi_restore 81
 4703              		.cfi_def_cfa_offset 8
 4704 0072 10BD     		pop	{r4, pc}
 4705              	.L276:
 4706              		.cfi_restore_state
 4707              	.LBB1239:
 4708              	.LBB1233:
1458:Veno-Echo.cpp ****             {
 4709              		.loc 20 1458 13 is_stmt 1 view .LVU1311
1458:Veno-Echo.cpp ****             {
 4710              		.loc 20 1458 16 is_stmt 0 view .LVU1312
 4711 0074 294B     		ldr	r3, .L296+12
1458:Veno-Echo.cpp ****             {
 4712              		.loc 20 1458 13 view .LVU1313
 4713 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4714 0078 7AB9     		cbnz	r2, .L278
1460:Veno-Echo.cpp ****                 {
 4715              		.loc 20 1460 17 is_stmt 1 view .LVU1314
 4716              	.LVL237:
 4717              	.LBB1222:
 4718              	.LBI1222:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4719              		.loc 21 75 3 view .LVU1315
 4720              	.LBB1223:
 4721              		.loc 21 76 5 view .LVU1316
 4722              		.loc 21 76 5 is_stmt 0 view .LVU1317
 4723              	.LBE1223:
 4724              	.LBE1222:
1460:Veno-Echo.cpp ****                 {
 4725              		.loc 20 1460 23 view .LVU1318
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 187


 4726 007a 294A     		ldr	r2, .L296+16
1460:Veno-Echo.cpp ****                 {
 4727              		.loc 20 1460 17 view .LVU1319
 4728 007c 9FED2F7A 		vldr.32	s14, .L296+44
1460:Veno-Echo.cpp ****                 {
 4729              		.loc 20 1460 23 view .LVU1320
 4730 0080 D2ED007A 		vldr.32	s15, [r2]
 4731 0084 70EE677A 		vsub.f32	s15, s0, s15
 4732              	.LBB1225:
 4733              	.LBB1224:
 4734              		.loc 21 76 31 view .LVU1321
 4735 0088 F0EEE77A 		vabs.f32	s15, s15
 4736              	.LBE1224:
 4737              	.LBE1225:
1460:Veno-Echo.cpp ****                 {
 4738              		.loc 20 1460 17 view .LVU1322
 4739 008c F4EEC77A 		vcmpe.f32	s15, s14
 4740 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4741 0094 CADD     		ble	.L277
1462:Veno-Echo.cpp ****                 }
 4742              		.loc 20 1462 21 is_stmt 1 view .LVU1323
1462:Veno-Echo.cpp ****                 }
 4743              		.loc 20 1462 40 is_stmt 0 view .LVU1324
 4744 0096 0122     		movs	r2, #1
 4745 0098 1A70     		strb	r2, [r3]
 4746              	.L278:
1467:Veno-Echo.cpp **** 
 4747              		.loc 20 1467 9 is_stmt 1 view .LVU1325
 4748              	.LVL238:
1469:Veno-Echo.cpp ****         {
 4749              		.loc 20 1469 9 view .LVU1326
1471:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4750              		.loc 20 1471 13 view .LVU1327
1471:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4751              		.loc 20 1471 38 is_stmt 0 view .LVU1328
 4752 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4753 009e 0120     		movs	r0, #1
 4754 00a0 B0EE480A 		vmov.f32	s0, s16
 4755              	.LVL239:
1471:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4756              		.loc 20 1471 38 view .LVU1329
 4757 00a4 DFED200A 		vldr.32	s1, .L296+24
 4758 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4759              	.LVL240:
1472:Veno-Echo.cpp ****         }
 4760              		.loc 20 1472 30 view .LVU1330
 4761 00ac 1D4B     		ldr	r3, .L296+20
 4762              	.LVL241:
1472:Veno-Echo.cpp ****         }
 4763              		.loc 20 1472 13 is_stmt 1 view .LVU1331
1472:Veno-Echo.cpp ****         }
 4764              		.loc 20 1472 30 is_stmt 0 view .LVU1332
 4765 00ae 83ED008A 		vstr.32	s16, [r3]
 4766 00b2 C5E7     		b	.L287
 4767              	.LVL242:
 4768              	.L281:
1472:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 188


 4769              		.loc 20 1472 30 view .LVU1333
 4770              	.LBE1233:
 4771              	.LBB1234:
1496:Veno-Echo.cpp ****             {
 4772              		.loc 20 1496 13 is_stmt 1 view .LVU1334
1496:Veno-Echo.cpp ****             {
 4773              		.loc 20 1496 16 is_stmt 0 view .LVU1335
 4774 00b4 1F4B     		ldr	r3, .L296+36
1496:Veno-Echo.cpp ****             {
 4775              		.loc 20 1496 13 view .LVU1336
 4776 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4777 00b8 7AB9     		cbnz	r2, .L283
1498:Veno-Echo.cpp ****                 {
 4778              		.loc 20 1498 17 is_stmt 1 view .LVU1337
 4779              	.LVL243:
 4780              	.LBB1229:
 4781              	.LBI1229:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4782              		.loc 21 75 3 view .LVU1338
 4783              	.LBB1230:
 4784              		.loc 21 76 5 view .LVU1339
 4785              		.loc 21 76 5 is_stmt 0 view .LVU1340
 4786              	.LBE1230:
 4787              	.LBE1229:
1498:Veno-Echo.cpp ****                 {
 4788              		.loc 20 1498 23 view .LVU1341
 4789 00ba 1F4A     		ldr	r2, .L296+40
1498:Veno-Echo.cpp ****                 {
 4790              		.loc 20 1498 17 view .LVU1342
 4791 00bc 9FED1F7A 		vldr.32	s14, .L296+44
1498:Veno-Echo.cpp ****                 {
 4792              		.loc 20 1498 23 view .LVU1343
 4793 00c0 D2ED007A 		vldr.32	s15, [r2]
 4794 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4795              	.LBB1232:
 4796              	.LBB1231:
 4797              		.loc 21 76 31 view .LVU1344
 4798 00c8 F0EEE77A 		vabs.f32	s15, s15
 4799              	.LBE1231:
 4800              	.LBE1232:
1498:Veno-Echo.cpp ****                 {
 4801              		.loc 20 1498 17 view .LVU1345
 4802 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4803 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4804 00d4 CBDD     		ble	.L274
1500:Veno-Echo.cpp ****                 }
 4805              		.loc 20 1500 21 is_stmt 1 view .LVU1346
1500:Veno-Echo.cpp ****                 }
 4806              		.loc 20 1500 40 is_stmt 0 view .LVU1347
 4807 00d6 0122     		movs	r2, #1
 4808 00d8 1A70     		strb	r2, [r3]
 4809              	.L283:
1505:Veno-Echo.cpp ****         {
 4810              		.loc 20 1505 9 is_stmt 1 view .LVU1348
1507:Veno-Echo.cpp ****             {
 4811              		.loc 20 1507 13 view .LVU1349
 4812 00da DFED197A 		vldr.32	s15, .L296+48
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 189


 4813 00de B4EEE78A 		vcmpe.f32	s16, s15
 4814 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4815 00e6 08D5     		bpl	.L295
1509:Veno-Echo.cpp ****             }
 4816              		.loc 20 1509 17 view .LVU1350
1509:Veno-Echo.cpp ****             }
 4817              		.loc 20 1509 29 is_stmt 0 view .LVU1351
 4818 00e8 164B     		ldr	r3, .L296+52
 4819 00ea 0022     		movs	r2, #0
 4820 00ec 1A70     		strb	r2, [r3]
 4821              	.L285:
1519:Veno-Echo.cpp ****         }  
 4822              		.loc 20 1519 13 is_stmt 1 view .LVU1352
1519:Veno-Echo.cpp ****         }  
 4823              		.loc 20 1519 39 is_stmt 0 view .LVU1353
 4824 00ee 164B     		ldr	r3, .L296+56
 4825 00f0 83ED078A 		vstr.32	s16, [r3, #28]
 4826              	.LBE1234:
 4827              	.LBE1239:
1522:Veno-Echo.cpp **** 
 4828              		.loc 20 1522 1 view .LVU1354
 4829 00f4 BDEC028B 		vldm	sp!, {d8}
 4830              		.cfi_remember_state
 4831              		.cfi_restore 80
 4832              		.cfi_restore 81
 4833              		.cfi_def_cfa_offset 8
 4834 00f8 10BD     		pop	{r4, pc}
 4835              	.L295:
 4836              		.cfi_restore_state
 4837              	.LBB1240:
 4838              	.LBB1235:
1511:Veno-Echo.cpp ****             {
 4839              		.loc 20 1511 18 is_stmt 1 view .LVU1355
 4840 00fa DFED147A 		vldr.32	s15, .L296+60
 4841 00fe B4EEE78A 		vcmpe.f32	s16, s15
 4842 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4843 0106 F2DD     		ble	.L285
1513:Veno-Echo.cpp ****             }
 4844              		.loc 20 1513 17 view .LVU1356
1513:Veno-Echo.cpp ****             }
 4845              		.loc 20 1513 29 is_stmt 0 view .LVU1357
 4846 0108 0E4B     		ldr	r3, .L296+52
 4847 010a 0122     		movs	r2, #1
 4848 010c 1A70     		strb	r2, [r3]
 4849 010e EEE7     		b	.L285
 4850              	.L297:
 4851              		.align	2
 4852              	.L296:
 4853 0110 18000000 		.word	.LANCHOR4+24
 4854 0114 00000000 		.word	.LANCHOR7
 4855 0118 00000000 		.word	.LANCHOR76
 4856 011c 00000000 		.word	.LANCHOR77
 4857 0120 00000000 		.word	.LANCHOR78
 4858 0124 00000000 		.word	.LANCHOR83
 4859 0128 00000000 		.word	0
 4860 012c 00000000 		.word	.LANCHOR79
 4861 0130 6F12033D 		.word	1023611503
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 190


 4862 0134 00000000 		.word	.LANCHOR80
 4863 0138 00000000 		.word	.LANCHOR81
 4864 013c 0AD7A33B 		.word	1000593162
 4865 0140 6666E63E 		.word	1055286886
 4866 0144 00000000 		.word	.LANCHOR82
 4867 0148 00000000 		.word	.LANCHOR15
 4868 014c CDCC0C3F 		.word	1057803469
 4869              	.LBE1235:
 4870              	.LBE1240:
 4871              		.cfi_endproc
 4872              	.LFE4325:
 4874              		.section	.text._Z8GetModCVv,"ax",%progbits
 4875              		.align	1
 4876              		.p2align 2,,3
 4877              		.global	_Z8GetModCVv
 4878              		.syntax unified
 4879              		.thumb
 4880              		.thumb_func
 4881              		.fpu fpv5-d16
 4883              	_Z8GetModCVv:
 4884              	.LFB4326:
1525:Veno-Echo.cpp ****     //get modulation CV input
 4885              		.loc 20 1525 1 is_stmt 1 view -0
 4886              		.cfi_startproc
 4887              		@ args = 0, pretend = 0, frame = 0
 4888              		@ frame_needed = 0, uses_anonymous_args = 0
1527:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4889              		.loc 20 1527 5 view .LVU1359
1525:Veno-Echo.cpp ****     //get modulation CV input
 4890              		.loc 20 1525 1 is_stmt 0 view .LVU1360
 4891 0000 08B5     		push	{r3, lr}
 4892              		.cfi_def_cfa_offset 8
 4893              		.cfi_offset 3, -8
 4894              		.cfi_offset 14, -4
1527:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4895              		.loc 20 1527 30 view .LVU1361
 4896 0002 0621     		movs	r1, #6
 4897 0004 0648     		ldr	r0, .L300
 4898 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4899              	.LVL244:
 4900 000a 0020     		movs	r0, #0
 4901 000c 9FED051A 		vldr.32	s2, .L300+4
 4902 0010 DFED050A 		vldr.32	s1, .L300+8
 4903 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4904              	.LVL245:
1527:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4905              		.loc 20 1527 23 view .LVU1362
 4906 0018 044B     		ldr	r3, .L300+12
 4907 001a 83ED000A 		vstr.32	s0, [r3]
1529:Veno-Echo.cpp **** 
 4908              		.loc 20 1529 1 view .LVU1363
 4909 001e 08BD     		pop	{r3, pc}
 4910              	.L301:
 4911              		.align	2
 4912              	.L300:
 4913 0020 18000000 		.word	.LANCHOR4+24
 4914 0024 00004843 		.word	1128792064
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 191


 4915 0028 000048C3 		.word	3276275712
 4916 002c 00000000 		.word	.LANCHOR84
 4917              		.cfi_endproc
 4918              	.LFE4326:
 4920              		.section	.text._Z10Update_Modv,"ax",%progbits
 4921              		.align	1
 4922              		.p2align 2,,3
 4923              		.global	_Z10Update_Modv
 4924              		.syntax unified
 4925              		.thumb
 4926              		.thumb_func
 4927              		.fpu fpv5-d16
 4929              	_Z10Update_Modv:
 4930              	.LFB4327:
1532:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4931              		.loc 20 1532 1 is_stmt 1 view -0
 4932              		.cfi_startproc
 4933              		@ args = 0, pretend = 0, frame = 0
 4934              		@ frame_needed = 0, uses_anonymous_args = 0
1533:Veno-Echo.cpp ****     static float modulation_CV{};
 4935              		.loc 20 1533 5 view .LVU1365
1534:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 4936              		.loc 20 1534 5 view .LVU1366
1535:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4937              		.loc 20 1535 5 view .LVU1367
 4938              	.LVL246:
 4939              	.LBB1241:
 4940              	.LBI1241:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4941              		.loc 23 135 13 view .LVU1368
 4942              	.LBB1242:
 4943              		.loc 23 137 5 view .LVU1369
 4944              	.LBE1242:
 4945              	.LBE1241:
1532:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4946              		.loc 20 1532 1 is_stmt 0 view .LVU1370
 4947 0000 38B5     		push	{r3, r4, r5, lr}
 4948              		.cfi_def_cfa_offset 16
 4949              		.cfi_offset 3, -16
 4950              		.cfi_offset 4, -12
 4951              		.cfi_offset 5, -8
 4952              		.cfi_offset 14, -4
1535:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4953              		.loc 20 1535 13 view .LVU1371
 4954 0002 154A     		ldr	r2, .L304
 4955              	.LBB1249:
 4956              	.LBB1243:
 4957              		.loc 23 137 9 view .LVU1372
 4958 0004 154C     		ldr	r4, .L304+4
 4959              	.LBE1243:
 4960              	.LBE1249:
 4961              	.LBB1250:
 4962              	.LBB1251:
 4963 0006 164D     		ldr	r5, .L304+8
 4964              	.LBE1251:
 4965              	.LBE1250:
1536:Veno-Echo.cpp ****     //calculate InternalMod
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 192


 4966              		.loc 20 1536 13 view .LVU1373
 4967 0008 164B     		ldr	r3, .L304+12
 4968              	.LBB1257:
 4969              	.LBB1244:
 4970              		.loc 23 137 9 view .LVU1374
 4971 000a 94ED007A 		vldr.32	s14, [r4]
 4972              	.LBE1244:
 4973              	.LBE1257:
 4974              	.LBB1258:
 4975              	.LBB1252:
 4976 000e D5ED007A 		vldr.32	s15, [r5]
 4977              	.LBE1252:
 4978              	.LBE1258:
 4979              	.LBB1259:
 4980              	.LBB1245:
 4981              		.loc 23 137 24 view .LVU1375
 4982 0012 92ED006A 		vldr.32	s12, [r2]
 4983              	.LBE1245:
 4984              	.LBE1259:
 4985              	.LBB1260:
 4986              	.LBB1253:
 4987 0016 D3ED006A 		vldr.32	s13, [r3]
 4988              	.LBE1253:
 4989              	.LBE1260:
 4990              	.LBB1261:
 4991              	.LBB1246:
 4992 001a 36EE476A 		vsub.f32	s12, s12, s14
 4993              		.loc 23 137 9 view .LVU1376
 4994 001e DFED125A 		vldr.32	s11, .L304+16
 4995              	.LBE1246:
 4996              	.LBE1261:
 4997              	.LBB1262:
 4998              	.LBB1254:
 4999              		.loc 23 137 24 view .LVU1377
 5000 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5001              	.LBE1254:
 5002              	.LBE1262:
1538:Veno-Echo.cpp ****     //apply modulation to delay lines
 5003              		.loc 20 1538 34 view .LVU1378
 5004 0026 1148     		ldr	r0, .L304+20
 5005              	.LBB1263:
 5006              	.LBB1247:
 5007              		.loc 23 137 9 view .LVU1379
 5008 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5009              	.LBE1247:
 5010              	.LBE1263:
 5011              	.LBB1264:
 5012              	.LBB1255:
 5013 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5014              	.LBE1255:
 5015              	.LBE1264:
 5016              	.LBB1265:
 5017              	.LBB1248:
 5018 0030 84ED007A 		vstr.32	s14, [r4]
 5019              	.LVL247:
 5020              		.loc 23 137 9 view .LVU1380
 5021              	.LBE1248:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 193


 5022              	.LBE1265:
1536:Veno-Echo.cpp ****     //calculate InternalMod
 5023              		.loc 20 1536 5 is_stmt 1 view .LVU1381
 5024              	.LBB1266:
 5025              	.LBI1250:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5026              		.loc 23 135 13 view .LVU1382
 5027              	.LBB1256:
 5028              		.loc 23 137 5 view .LVU1383
 5029              		.loc 23 137 9 is_stmt 0 view .LVU1384
 5030 0034 C5ED007A 		vstr.32	s15, [r5]
 5031              	.LVL248:
 5032              		.loc 23 137 9 view .LVU1385
 5033              	.LBE1256:
 5034              	.LBE1266:
1538:Veno-Echo.cpp ****     //apply modulation to delay lines
 5035              		.loc 20 1538 5 is_stmt 1 view .LVU1386
1538:Veno-Echo.cpp ****     //apply modulation to delay lines
 5036              		.loc 20 1538 34 is_stmt 0 view .LVU1387
 5037 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5038              	.LVL249:
1540:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5039              		.loc 20 1540 5 is_stmt 1 view .LVU1388
1540:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5040              		.loc 20 1540 40 is_stmt 0 view .LVU1389
 5041 003c 95ED007A 		vldr.32	s14, [r5]
 5042 0040 D4ED007A 		vldr.32	s15, [r4]
 5043              	.LBB1267:
 5044              	.LBB1268:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5045              		.loc 17 69 43 view .LVU1390
 5046 0044 0A4A     		ldr	r2, .L304+24
 5047              	.LBE1268:
 5048              	.LBE1267:
1540:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5049              		.loc 20 1540 40 view .LVU1391
 5050 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5051              	.LBB1271:
 5052              	.LBI1267:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 194


 5053              		.loc 17 69 6 is_stmt 1 view .LVU1392
 5054              	.LVL250:
 5055              	.LBB1269:
 5056              		.loc 17 69 38 view .LVU1393
 5057              	.LBE1269:
 5058              	.LBE1271:
 5059              	.LBB1272:
 5060              	.LBB1273:
 5061              		.loc 17 69 43 is_stmt 0 view .LVU1394
 5062 004a 0A4B     		ldr	r3, .L304+28
 5063              	.LBE1273:
 5064              	.LBE1272:
 5065              	.LBB1275:
 5066              	.LBB1270:
 5067 004c C2ED3E7A 		vstr.32	s15, [r2, #248]
 5068              	.LBE1270:
 5069              	.LBE1275:
1541:Veno-Echo.cpp **** }
 5070              		.loc 20 1541 5 is_stmt 1 view .LVU1395
 5071              	.LVL251:
 5072              	.LBB1276:
 5073              	.LBI1272:
 5074              		.loc 17 69 6 view .LVU1396
 5075              	.LBB1274:
 5076              		.loc 17 69 38 view .LVU1397
 5077              		.loc 17 69 43 is_stmt 0 view .LVU1398
 5078 0050 C3ED3E7A 		vstr.32	s15, [r3, #248]
 5079              	.LBE1274:
 5080              	.LBE1276:
1542:Veno-Echo.cpp **** 
 5081              		.loc 20 1542 1 view .LVU1399
 5082 0054 38BD     		pop	{r3, r4, r5, pc}
 5083              	.L305:
 5084 0056 00BF     		.align	2
 5085              	.L304:
 5086 0058 00000000 		.word	.LANCHOR84
 5087 005c 00000000 		.word	.LANCHOR85
 5088 0060 00000000 		.word	.LANCHOR86
 5089 0064 00000000 		.word	.LANCHOR67
 5090 0068 0AD7233C 		.word	1008981770
 5091 006c 00000000 		.word	.LANCHOR75
 5092 0070 00000000 		.word	.LANCHOR0
 5093 0074 00000000 		.word	.LANCHOR1
 5094              		.cfi_endproc
 5095              	.LFE4327:
 5097              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5098              		.align	1
 5099              		.p2align 2,,3
 5100              		.global	_Z11UpdateClockv
 5101              		.syntax unified
 5102              		.thumb
 5103              		.thumb_func
 5104              		.fpu fpv5-d16
 5106              	_Z11UpdateClockv:
 5107              	.LFB4328:
1545:Veno-Echo.cpp ****     static int divCounter{};
 5108              		.loc 20 1545 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 195


 5109              		.cfi_startproc
 5110              		@ args = 0, pretend = 0, frame = 0
 5111              		@ frame_needed = 0, uses_anonymous_args = 0
1546:Veno-Echo.cpp ****     ClockIn.Debounce();
 5112              		.loc 20 1546 5 view .LVU1401
1547:Veno-Echo.cpp **** 
 5113              		.loc 20 1547 5 view .LVU1402
1545:Veno-Echo.cpp ****     static int divCounter{};
 5114              		.loc 20 1545 1 is_stmt 0 view .LVU1403
 5115 0000 10B5     		push	{r4, lr}
 5116              		.cfi_def_cfa_offset 8
 5117              		.cfi_offset 4, -8
 5118              		.cfi_offset 14, -4
1547:Veno-Echo.cpp **** 
 5119              		.loc 20 1547 21 view .LVU1404
 5120 0002 0A4C     		ldr	r4, .L315
 5121 0004 2046     		mov	r0, r4
 5122 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5123              	.LVL252:
1550:Veno-Echo.cpp ****     {   
 5124              		.loc 20 1550 5 is_stmt 1 view .LVU1405
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 5125              		.loc 1 69 38 view .LVU1406
1550:Veno-Echo.cpp ****     {   
 5126              		.loc 20 1550 5 is_stmt 0 view .LVU1407
 5127 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 5128 000c 7F2B     		cmp	r3, #127
 5129 000e 00D0     		beq	.L314
 5130              	.L306:
1563:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 196


 5131              		.loc 20 1563 1 view .LVU1408
 5132 0010 10BD     		pop	{r4, pc}
 5133              	.L314:
1552:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5134              		.loc 20 1552 9 is_stmt 1 view .LVU1409
1554:Veno-Echo.cpp ****         {
 5135              		.loc 20 1554 9 view .LVU1410
1556:Veno-Echo.cpp ****             {
 5136              		.loc 20 1556 13 view .LVU1411
1556:Veno-Echo.cpp ****             {
 5137              		.loc 20 1556 29 is_stmt 0 view .LVU1412
 5138 0012 0748     		ldr	r0, .L315+4
 5139 0014 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 5140              	.LVL253:
1556:Veno-Echo.cpp ****             {
 5141              		.loc 20 1556 13 view .LVU1413
 5142 0018 0028     		cmp	r0, #0
 5143 001a F9D0     		beq	.L306
 5144              	.LBB1281:
 5145              	.LBI1281:
1544:Veno-Echo.cpp **** {
 5146              		.loc 20 1544 6 is_stmt 1 view .LVU1414
 5147              	.LBB1282:
1558:Veno-Echo.cpp ****             }
 5148              		.loc 20 1558 17 view .LVU1415
1558:Veno-Echo.cpp ****             }
 5149              		.loc 20 1558 39 is_stmt 0 view .LVU1416
 5150 001c 0448     		ldr	r0, .L315+4
 5151 001e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5152              	.LVL254:
 5153 0022 0448     		ldr	r0, .L315+8
 5154              	.LBE1282:
 5155              	.LBE1281:
1563:Veno-Echo.cpp **** 
 5156              		.loc 20 1563 1 view .LVU1417
 5157 0024 BDE81040 		pop	{r4, lr}
 5158              		.cfi_restore 14
 5159              		.cfi_restore 4
 5160              		.cfi_def_cfa_offset 0
 5161              	.LBB1284:
 5162              	.LBB1283:
1558:Veno-Echo.cpp ****             }
 5163              		.loc 20 1558 39 view .LVU1418
 5164 0028 FFF7FEBF 		b	_ZN8TempoLED8setTempoEf
 5165              	.LVL255:
 5166              	.L316:
 5167              		.align	2
 5168              	.L315:
 5169 002c 00000000 		.word	.LANCHOR87
 5170 0030 00000000 		.word	.LANCHOR25
 5171 0034 00000000 		.word	.LANCHOR88
 5172              	.LBE1283:
 5173              	.LBE1284:
 5174              		.cfi_endproc
 5175              	.LFE4328:
 5177              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5178              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 197


 5179              		.p2align 2,,3
 5180              		.global	_Z21Update_DelayBaseTempov
 5181              		.syntax unified
 5182              		.thumb
 5183              		.thumb_func
 5184              		.fpu fpv5-d16
 5186              	_Z21Update_DelayBaseTempov:
 5187              	.LFB4330:
1683:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getTapLength());
 5188              		.loc 20 1683 1 is_stmt 1 view -0
 5189              		.cfi_startproc
 5190              		@ args = 0, pretend = 0, frame = 0
 5191              		@ frame_needed = 0, uses_anonymous_args = 0
1684:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getTapLength());
 5192              		.loc 20 1684 5 view .LVU1420
1683:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getTapLength());
 5193              		.loc 20 1683 1 is_stmt 0 view .LVU1421
 5194 0000 08B5     		push	{r3, lr}
 5195              		.cfi_def_cfa_offset 8
 5196              		.cfi_offset 3, -8
 5197              		.cfi_offset 14, -4
1684:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getTapLength());
 5198              		.loc 20 1684 47 view .LVU1422
 5199 0002 0648     		ldr	r0, .L319
 5200 0004 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5201              	.LVL256:
 5202              	.LBB1285:
 5203              	.LBI1285:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const double& tempo){baseTempo_ = tempo;}
 5204              		.loc 17 71 6 is_stmt 1 view .LVU1423
 5205              	.LBB1286:
 5206              		.loc 17 71 40 view .LVU1424
 5207              		.loc 17 71 51 is_stmt 0 view .LVU1425
 5208 0008 054B     		ldr	r3, .L319+4
 5209              	.LBE1286:
 5210              	.LBE1285:
1685:Veno-Echo.cpp **** }
 5211              		.loc 20 1685 47 view .LVU1426
 5212 000a 0448     		ldr	r0, .L319
 5213              	.LBB1288:
 5214              	.LBB1287:
 5215              		.loc 17 71 51 view .LVU1427
 5216 000c 83ED480B 		vstr.64	d0, [r3, #288]
 5217              	.LBE1287:
 5218              	.LBE1288:
1685:Veno-Echo.cpp **** }
 5219              		.loc 20 1685 5 is_stmt 1 view .LVU1428
1685:Veno-Echo.cpp **** }
 5220              		.loc 20 1685 47 is_stmt 0 view .LVU1429
 5221 0010 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5222              	.LVL257:
 5223              	.LBB1289:
 5224              	.LBI1289:
 5225              		.loc 17 71 6 is_stmt 1 view .LVU1430
 5226              	.LBB1290:
 5227              		.loc 17 71 40 view .LVU1431
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 198


 5228              		.loc 17 71 51 is_stmt 0 view .LVU1432
 5229 0014 034B     		ldr	r3, .L319+8
 5230 0016 83ED480B 		vstr.64	d0, [r3, #288]
 5231              	.LBE1290:
 5232              	.LBE1289:
1686:Veno-Echo.cpp **** 
 5233              		.loc 20 1686 1 view .LVU1433
 5234 001a 08BD     		pop	{r3, pc}
 5235              	.L320:
 5236              		.align	2
 5237              	.L319:
 5238 001c 00000000 		.word	.LANCHOR25
 5239 0020 00000000 		.word	.LANCHOR0
 5240 0024 00000000 		.word	.LANCHOR1
 5241              		.cfi_endproc
 5242              	.LFE4330:
 5244              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5245              		.align	1
 5246              		.p2align 2,,3
 5247              		.global	_Z21Update_DelayTempoLEDsv
 5248              		.syntax unified
 5249              		.thumb
 5250              		.thumb_func
 5251              		.fpu fpv5-d16
 5253              	_Z21Update_DelayTempoLEDsv:
 5254              	.LFB4331:
1689:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5255              		.loc 20 1689 1 is_stmt 1 view -0
 5256              		.cfi_startproc
 5257              		@ args = 0, pretend = 0, frame = 0
 5258              		@ frame_needed = 0, uses_anonymous_args = 0
1690:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5259              		.loc 20 1690 5 view .LVU1435
1689:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5260              		.loc 20 1689 1 is_stmt 0 view .LVU1436
 5261 0000 10B5     		push	{r4, lr}
 5262              		.cfi_def_cfa_offset 8
 5263              		.cfi_offset 4, -8
 5264              		.cfi_offset 14, -4
1690:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5265              		.loc 20 1690 26 view .LVU1437
 5266 0002 054C     		ldr	r4, .L323
 5267 0004 0548     		ldr	r0, .L323+4
 5268 0006 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5269 0008 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5270              	.LVL258:
1691:Veno-Echo.cpp **** }
 5271              		.loc 20 1691 5 is_stmt 1 view .LVU1438
1691:Veno-Echo.cpp **** }
 5272              		.loc 20 1691 26 is_stmt 0 view .LVU1439
 5273 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5274 000e 0448     		ldr	r0, .L323+8
1692:Veno-Echo.cpp **** 
 5275              		.loc 20 1692 1 view .LVU1440
 5276 0010 BDE81040 		pop	{r4, lr}
 5277              		.cfi_restore 14
 5278              		.cfi_restore 4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 199


 5279              		.cfi_def_cfa_offset 0
1691:Veno-Echo.cpp **** }
 5280              		.loc 20 1691 26 view .LVU1441
 5281 0014 FFF7FEBF 		b	_ZN10DelayMulti14updateTempoLEDEb
 5282              	.LVL259:
 5283              	.L324:
 5284              		.align	2
 5285              	.L323:
 5286 0018 00000000 		.word	.LANCHOR12
 5287 001c 00000000 		.word	.LANCHOR0
 5288 0020 00000000 		.word	.LANCHOR1
 5289              		.cfi_endproc
 5290              	.LFE4331:
 5292              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5293              		.align	1
 5294              		.p2align 2,,3
 5295              		.global	_Z19Update_BaseTempoLEDv
 5296              		.syntax unified
 5297              		.thumb
 5298              		.thumb_func
 5299              		.fpu fpv5-d16
 5301              	_Z19Update_BaseTempoLEDv:
 5302              	.LFB4332:
1695:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5303              		.loc 20 1695 1 is_stmt 1 view -0
 5304              		.cfi_startproc
 5305              		@ args = 0, pretend = 0, frame = 0
 5306              		@ frame_needed = 0, uses_anonymous_args = 0
1696:Veno-Echo.cpp **** 
 5307              		.loc 20 1696 5 view .LVU1443
1696:Veno-Echo.cpp **** 
 5308              		.loc 20 1696 25 is_stmt 0 view .LVU1444
 5309 0000 1648     		ldr	r0, .L329
1695:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5310              		.loc 20 1695 1 view .LVU1445
 5311 0002 08B5     		push	{r3, lr}
 5312              		.cfi_def_cfa_offset 8
 5313              		.cfi_offset 3, -8
 5314              		.cfi_offset 14, -4
1696:Veno-Echo.cpp **** 
 5315              		.loc 20 1696 25 view .LVU1446
 5316 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5317              	.LVL260:
1698:Veno-Echo.cpp **** 
 5318              		.loc 20 1698 5 is_stmt 1 view .LVU1447
1700:Veno-Echo.cpp ****     {
 5319              		.loc 20 1700 5 view .LVU1448
1700:Veno-Echo.cpp ****     {
 5320              		.loc 20 1700 27 is_stmt 0 view .LVU1449
 5321 0008 1448     		ldr	r0, .L329
 5322 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5323              	.LVL261:
1700:Veno-Echo.cpp ****     {
 5324              		.loc 20 1700 5 view .LVU1450
 5325 000e B8B9     		cbnz	r0, .L326
 5326 0010 134B     		ldr	r3, .L329+4
 5327 0012 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 200


 5328              	.L327:
1705:Veno-Echo.cpp ****     //update base phase for both delay lines
 5329              		.loc 20 1705 5 is_stmt 1 view .LVU1451
 5330              	.LVL262:
 5331              	.LBB1291:
 5332              	.LBI1291:
  71:LEDs.h        **** 
 5333              		.loc 14 71 7 view .LVU1452
 5334              	.LBB1292:
  71:LEDs.h        **** 
 5335              		.loc 14 71 20 view .LVU1453
  71:LEDs.h        **** 
 5336              		.loc 14 71 20 is_stmt 0 view .LVU1454
 5337              	.LBE1292:
 5338              	.LBE1291:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 201


  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5339              		.loc 15 92 31 is_stmt 1 view .LVU1455
 5340              	.LBB1294:
 5341              	.LBB1293:
  71:LEDs.h        **** 
 5342              		.loc 14 71 41 is_stmt 0 view .LVU1456
 5343 0014 114A     		ldr	r2, .L329
 5344              	.LBE1293:
 5345              	.LBE1294:
1705:Veno-Echo.cpp ****     //update base phase for both delay lines
 5346              		.loc 20 1705 50 view .LVU1457
 5347 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1705:Veno-Echo.cpp ****     //update base phase for both delay lines
 5348              		.loc 20 1705 73 view .LVU1458
 5349 001a 07EE903A 		vmov	s15, r3	@ int
1705:Veno-Echo.cpp ****     //update base phase for both delay lines
 5350              		.loc 20 1705 55 view .LVU1459
 5351 001e DFED116A 		vldr.32	s13, .L329+8
1705:Veno-Echo.cpp ****     //update base phase for both delay lines
 5352              		.loc 20 1705 50 view .LVU1460
 5353 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1705:Veno-Echo.cpp ****     //update base phase for both delay lines
 5354              		.loc 20 1705 73 view .LVU1461
 5355 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 202


 5356              	.LBB1295:
 5357              	.LBB1296:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5358              		.loc 17 72 54 view .LVU1462
 5359 002a 0F4A     		ldr	r2, .L329+12
 5360              	.LBE1296:
 5361              	.LBE1295:
1705:Veno-Echo.cpp ****     //update base phase for both delay lines
 5362              		.loc 20 1705 50 view .LVU1463
 5363 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5364              	.LBB1298:
 5365              	.LBB1299:
 5366              		.loc 17 72 54 view .LVU1464
 5367 0030 0E4B     		ldr	r3, .L329+16
 5368              	.LBE1299:
 5369              	.LBE1298:
1705:Veno-Echo.cpp ****     //update base phase for both delay lines
 5370              		.loc 20 1705 55 view .LVU1465
 5371 0032 A7EEA67A 		vfma.f32	s14, s15, s13
 5372              	.LVL263:
1707:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5373              		.loc 20 1707 5 is_stmt 1 view .LVU1466
 5374              	.LBB1301:
 5375              	.LBI1295:
 5376              		.loc 17 72 6 view .LVU1467
 5377              	.LBB1297:
 5378              		.loc 17 72 43 view .LVU1468
 5379              		.loc 17 72 54 is_stmt 0 view .LVU1469
 5380 0036 82ED477A 		vstr.32	s14, [r2, #284]
 5381              	.LBE1297:
 5382              	.LBE1301:
1708:Veno-Echo.cpp **** }
 5383              		.loc 20 1708 5 is_stmt 1 view .LVU1470
 5384              	.LVL264:
 5385              	.LBB1302:
 5386              	.LBI1298:
 5387              		.loc 17 72 6 view .LVU1471
 5388              	.LBB1300:
 5389              		.loc 17 72 43 view .LVU1472
 5390              		.loc 17 72 54 is_stmt 0 view .LVU1473
 5391 003a 83ED477A 		vstr.32	s14, [r3, #284]
 5392              	.LVL265:
 5393              		.loc 17 72 54 view .LVU1474
 5394              	.LBE1300:
 5395              	.LBE1302:
1709:Veno-Echo.cpp **** 
 5396              		.loc 20 1709 1 view .LVU1475
 5397 003e 08BD     		pop	{r3, pc}
 5398              	.LVL266:
 5399              	.L326:
1702:Veno-Echo.cpp ****     }
 5400              		.loc 20 1702 9 is_stmt 1 view .LVU1476
1702:Veno-Echo.cpp ****     }
 5401              		.loc 20 1702 38 is_stmt 0 view .LVU1477
 5402 0040 0749     		ldr	r1, .L329+4
1702:Veno-Echo.cpp ****     }
 5403              		.loc 20 1702 43 view .LVU1478
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 203


 5404 0042 0B4B     		ldr	r3, .L329+20
1702:Veno-Echo.cpp ****     }
 5405              		.loc 20 1702 38 view .LVU1479
 5406 0044 0A68     		ldr	r2, [r1]
 5407 0046 0132     		adds	r2, r2, #1
1702:Veno-Echo.cpp ****     }
 5408              		.loc 20 1702 43 view .LVU1480
 5409 0048 83FB0203 		smull	r0, r3, r3, r2
 5410 004c A3EBE273 		sub	r3, r3, r2, asr #31
 5411 0050 03EB4303 		add	r3, r3, r3, lsl #1
 5412 0054 A2EB4303 		sub	r3, r2, r3, lsl #1
1702:Veno-Echo.cpp ****     }
 5413              		.loc 20 1702 22 view .LVU1481
 5414 0058 0B60     		str	r3, [r1]
 5415 005a DBE7     		b	.L327
 5416              	.L330:
 5417              		.align	2
 5418              	.L329:
 5419 005c 00000000 		.word	.LANCHOR88
 5420 0060 00000000 		.word	.LANCHOR89
 5421 0064 920A863F 		.word	1065749138
 5422 0068 00000000 		.word	.LANCHOR0
 5423 006c 00000000 		.word	.LANCHOR1
 5424 0070 ABAAAA2A 		.word	715827883
 5425              		.cfi_endproc
 5426              	.LFE4332:
 5428              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5429              		.align	1
 5430              		.p2align 2,,3
 5431              		.global	_Z13ApplySettingsRK8Settings
 5432              		.syntax unified
 5433              		.thumb
 5434              		.thumb_func
 5435              		.fpu fpv5-d16
 5437              	_Z13ApplySettingsRK8Settings:
 5438              	.LVL267:
 5439              	.LFB4333:
1713:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5440              		.loc 20 1713 1 is_stmt 1 view -0
 5441              		.cfi_startproc
 5442              		@ args = 0, pretend = 0, frame = 0
 5443              		@ frame_needed = 0, uses_anonymous_args = 0
1714:Veno-Echo.cpp ****     {
 5444              		.loc 20 1714 5 view .LVU1483
 5445 0000 9FEDCF7A 		vldr.32	s14, .L399
1714:Veno-Echo.cpp ****     {
 5446              		.loc 20 1714 17 is_stmt 0 view .LVU1484
 5447 0004 D0ED007A 		vldr.32	s15, [r0]
1714:Veno-Echo.cpp ****     {
 5448              		.loc 20 1714 5 view .LVU1485
 5449 0008 F4EEC77A 		vcmpe.f32	s15, s14
1713:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5450              		.loc 20 1713 1 view .LVU1486
 5451 000c 38B5     		push	{r3, r4, r5, lr}
 5452              		.cfi_def_cfa_offset 16
 5453              		.cfi_offset 3, -16
 5454              		.cfi_offset 4, -12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 204


 5455              		.cfi_offset 5, -8
 5456              		.cfi_offset 14, -4
1714:Veno-Echo.cpp ****     {
 5457              		.loc 20 1714 5 view .LVU1487
 5458 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1713:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5459              		.loc 20 1713 1 view .LVU1488
 5460 0012 0446     		mov	r4, r0
 5461              	.LBB1303:
 5462              	.LBB1304:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5463              		.loc 20 70 28 view .LVU1489
 5464 0014 CB4B     		ldr	r3, .L399+4
 5465              	.LBE1304:
 5466              	.LBE1303:
1714:Veno-Echo.cpp ****     {
 5467              		.loc 20 1714 5 view .LVU1490
 5468 0016 C0F2FD80 		blt	.L332
1714:Veno-Echo.cpp ****     {
 5469              		.loc 20 1714 43 discriminator 1 view .LVU1491
 5470 001a 9FEDCB7A 		vldr.32	s14, .L399+8
 5471 001e F4EEC77A 		vcmpe.f32	s15, s14
 5472 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5473 0026 00F2F580 		bhi	.L332
1716:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5474              		.loc 20 1716 9 is_stmt 1 view .LVU1492
 5475              	.LVL268:
 5476              	.LBB1318:
 5477              	.LBI1303:
  68:Veno-Echo.cpp ****     {
 5478              		.loc 20 68 10 view .LVU1493
 5479              	.LBB1316:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5480              		.loc 20 70 9 view .LVU1494
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5481              		.loc 20 70 28 is_stmt 0 view .LVU1495
 5482 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5483              	.LVL269:
 5484              	.LBB1305:
 5485              	.LBI1305:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5486              		.loc 21 75 3 is_stmt 1 view .LVU1496
 5487              	.LBB1306:
 5488              		.loc 21 76 5 view .LVU1497
 5489              		.loc 21 76 5 is_stmt 0 view .LVU1498
 5490              	.LBE1306:
 5491              	.LBE1305:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5492              		.loc 20 70 53 view .LVU1499
 5493 002e 9FEDC76A 		vldr.32	s12, .L399+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5494              		.loc 20 70 15 view .LVU1500
 5495 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5496              		.loc 20 70 53 view .LVU1501
 5497 0036 27EE067A 		vmul.f32	s14, s14, s12
 5498              	.LBB1308:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 205


 5499              	.LBB1307:
 5500              		.loc 21 76 31 view .LVU1502
 5501 003a F0EEE66A 		vabs.f32	s13, s13
 5502              	.LBE1307:
 5503              	.LBE1308:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5504              		.loc 20 70 9 view .LVU1503
 5505 003e F4EEC76A 		vcmpe.f32	s13, s14
 5506 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5507 0046 0FDD     		ble	.L335
  74:Veno-Echo.cpp ****             //del -> Reset();
 5508              		.loc 20 74 29 view .LVU1504
 5509 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5510              	.LBB1309:
 5511              	.LBB1310:
 5512              		.loc 19 72 9 view .LVU1505
 5513 004c C04D     		ldr	r5, .L399+16
 5514              	.LBE1310:
 5515              	.LBE1309:
 5516              	.LBE1316:
 5517              	.LBE1318:
1716:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5518              		.loc 20 1716 33 view .LVU1506
 5519 004e 1968     		ldr	r1, [r3]
 5520              	.LBB1319:
 5521              	.LBB1317:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5522              		.loc 20 73 13 is_stmt 1 view .LVU1507
 5523              	.LBB1313:
 5524              	.LBB1311:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5525              		.loc 19 71 9 is_stmt 0 view .LVU1508
 5526 0050 0020     		movs	r0, #0
 5527              	.LVL270:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5528              		.loc 19 71 9 view .LVU1509
 5529              	.LBE1311:
 5530              	.LBE1313:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5531              		.loc 20 73 27 view .LVU1510
 5532 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5533              		.loc 20 74 13 is_stmt 1 view .LVU1511
 5534              	.LVL271:
 5535              	.LBB1314:
 5536              	.LBI1309:
  69:delayline_reverse.h ****     {
 5537              		.loc 19 69 17 view .LVU1512
  69:delayline_reverse.h ****     {
 5538              		.loc 19 69 17 is_stmt 0 view .LVU1513
 5539              	.LBE1314:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5540              		.loc 20 74 29 view .LVU1514
 5541 0056 17EE102A 		vmov	r2, s14	@ int
 5542              	.LBB1315:
 5543              	.LBB1312:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 206


 5544              		.loc 19 71 9 view .LVU1515
 5545 005a 0860     		str	r0, [r1]	@ float
 5546 005c D4ED007A 		vldr.32	s15, [r4]
 5547              	.LVL272:
 5548              		.loc 19 72 9 view .LVU1516
 5549 0060 AA42     		cmp	r2, r5
 5550 0062 28BF     		it	cs
 5551 0064 2A46     		movcs	r2, r5
 5552 0066 0A61     		str	r2, [r1, #16]
 5553              	.LVL273:
 5554              	.L335:
 5555              		.loc 19 72 9 view .LVU1517
 5556              	.LBE1312:
 5557              	.LBE1315:
 5558              	.LBE1317:
 5559              	.LBE1319:
1717:Veno-Echo.cpp ****     }
 5560              		.loc 20 1717 9 is_stmt 1 view .LVU1518
 5561              	.LBB1320:
 5562              	.LBI1320:
  68:Veno-Echo.cpp ****     {
 5563              		.loc 20 68 10 view .LVU1519
 5564              	.LBB1321:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5565              		.loc 20 70 9 view .LVU1520
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5566              		.loc 20 70 28 is_stmt 0 view .LVU1521
 5567 0068 BA4B     		ldr	r3, .L399+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5568              		.loc 20 70 53 view .LVU1522
 5569 006a 9FEDB86A 		vldr.32	s12, .L399+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5570              		.loc 20 70 28 view .LVU1523
 5571 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5572              	.LVL274:
 5573              	.LBB1322:
 5574              	.LBI1322:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5575              		.loc 21 75 3 is_stmt 1 view .LVU1524
 5576              	.LBB1323:
 5577              		.loc 21 76 5 view .LVU1525
 5578              		.loc 21 76 5 is_stmt 0 view .LVU1526
 5579              	.LBE1323:
 5580              	.LBE1322:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5581              		.loc 20 70 15 view .LVU1527
 5582 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5583              		.loc 20 70 53 view .LVU1528
 5584 0076 27EE067A 		vmul.f32	s14, s14, s12
 5585              	.LBB1325:
 5586              	.LBB1324:
 5587              		.loc 21 76 31 view .LVU1529
 5588 007a F0EEE66A 		vabs.f32	s13, s13
 5589              	.LBE1324:
 5590              	.LBE1325:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 207


 5591              		.loc 20 70 9 view .LVU1530
 5592 007e F4EEC76A 		vcmpe.f32	s13, s14
 5593 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5594 0086 00F34B81 		bgt	.L395
 5595              	.LVL275:
 5596              	.L338:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5597              		.loc 20 70 9 view .LVU1531
 5598              	.LBE1321:
 5599              	.LBE1320:
1725:Veno-Echo.cpp ****     {
 5600              		.loc 20 1725 5 is_stmt 1 view .LVU1532
 5601 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1725:Veno-Echo.cpp ****     {
 5602              		.loc 20 1725 17 is_stmt 0 view .LVU1533
 5603 008e 94ED010A 		vldr.32	s0, [r4, #4]
1725:Veno-Echo.cpp ****     {
 5604              		.loc 20 1725 5 view .LVU1534
 5605 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5606 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5607 009a 06DB     		blt	.L343
1725:Veno-Echo.cpp ****     {
 5608              		.loc 20 1725 35 discriminator 1 view .LVU1535
 5609 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5610 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5611 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5612 00a8 01D9     		bls	.L393
 5613              	.L343:
1731:Veno-Echo.cpp ****     }
 5614              		.loc 20 1731 9 is_stmt 1 view .LVU1536
1731:Veno-Echo.cpp ****     }
 5615              		.loc 20 1731 30 is_stmt 0 view .LVU1537
 5616 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5617              	.L393:
 5618 00ae AA48     		ldr	r0, .L399+24
 5619 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5620              	.LVL276:
1734:Veno-Echo.cpp ****     {
 5621              		.loc 20 1734 5 is_stmt 1 view .LVU1538
1734:Veno-Echo.cpp ****     {
 5622              		.loc 20 1734 17 is_stmt 0 view .LVU1539
 5623 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1734:Veno-Echo.cpp ****     {
 5624              		.loc 20 1734 5 view .LVU1540
 5625 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5626 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5627 00c0 C0F22B81 		blt	.L390
1734:Veno-Echo.cpp ****     {
 5628              		.loc 20 1734 42 discriminator 1 view .LVU1541
 5629 00c4 DFEDA56A 		vldr.32	s13, .L399+28
1740:Veno-Echo.cpp ****     }
 5630              		.loc 20 1740 18 discriminator 1 view .LVU1542
 5631 00c8 9FEDA57A 		vldr.32	s14, .L399+32
 5632 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5633 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5634 00d4 88BF     		it	hi
 5635 00d6 F0EE477A 		vmovhi.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 208


 5636              	.L347:
1743:Veno-Echo.cpp ****     {
 5637              		.loc 20 1743 17 view .LVU1543
 5638 00da 94ED030A 		vldr.32	s0, [r4, #12]
1743:Veno-Echo.cpp ****     {
 5639              		.loc 20 1743 5 view .LVU1544
 5640 00de 9FEDA17A 		vldr.32	s14, .L399+36
 5641 00e2 A14B     		ldr	r3, .L399+40
 5642 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 5643              	.LBB1336:
 5644              	.LBB1337:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5645              		.loc 8 60 20 view .LVU1545
 5646 00e8 A04D     		ldr	r5, .L399+44
 5647 00ea C3ED007A 		vstr.32	s15, [r3]
 5648              	.LBE1337:
 5649              	.LBE1336:
1743:Veno-Echo.cpp ****     {
 5650              		.loc 20 1743 5 is_stmt 1 view .LVU1546
 5651 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5652 00f2 06DB     		blt	.L350
1743:Veno-Echo.cpp ****     {
 5653              		.loc 20 1743 40 is_stmt 0 discriminator 1 view .LVU1547
 5654 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 5655 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 5656 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5657 0100 01D9     		bls	.L394
 5658              	.L350:
1749:Veno-Echo.cpp ****     }
 5659              		.loc 20 1749 9 is_stmt 1 view .LVU1548
 5660              	.LVL277:
 5661              	.LBB1338:
 5662              	.LBI1338:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 5663              		.loc 8 58 17 view .LVU1549
 5664              	.LBB1339:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5665              		.loc 8 60 9 view .LVU1550
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5666              		.loc 8 60 20 is_stmt 0 view .LVU1551
 5667 0102 9FED9B0A 		vldr.32	s0, .L399+48
 5668              	.LVL278:
 5669              	.L394:
 5670              		.loc 8 61 34 view .LVU1552
 5671 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5672              		.loc 8 60 20 view .LVU1553
 5673 0108 85ED020A 		vstr.32	s0, [r5, #8]
 5674              		.loc 8 61 9 is_stmt 1 view .LVU1554
 5675              		.loc 8 61 34 is_stmt 0 view .LVU1555
 5676 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 5677              	.LVL279:
 5678              	.LBE1339:
 5679              	.LBE1338:
1752:Veno-Echo.cpp ****     {
 5680              		.loc 20 1752 5 view .LVU1556
 5681 0110 DFED987A 		vldr.32	s15, .L399+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 209


 5682              	.LBB1341:
 5683              	.LBB1340:
 5684              		.loc 8 61 20 view .LVU1557
 5685 0114 85ED060A 		vstr.32	s0, [r5, #24]
 5686              	.LBE1340:
 5687              	.LBE1341:
1752:Veno-Echo.cpp ****     {
 5688              		.loc 20 1752 5 is_stmt 1 view .LVU1558
1752:Veno-Echo.cpp ****     {
 5689              		.loc 20 1752 17 is_stmt 0 view .LVU1559
 5690 0118 94ED050A 		vldr.32	s0, [r4, #20]
1752:Veno-Echo.cpp ****     {
 5691              		.loc 20 1752 5 view .LVU1560
 5692 011c B4EEE70A 		vcmpe.f32	s0, s15
 5693 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5694 0124 07DB     		blt	.L354
1752:Veno-Echo.cpp ****     {
 5695              		.loc 20 1752 40 discriminator 1 view .LVU1561
 5696 0126 DFED947A 		vldr.32	s15, .L399+56
 5697 012a B4EEE70A 		vcmpe.f32	s0, s15
 5698 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5699 0132 40F2DF80 		bls	.L396
 5700              	.L354:
1761:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5701              		.loc 20 1761 9 is_stmt 1 view .LVU1562
1761:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5702              		.loc 20 1761 22 is_stmt 0 view .LVU1563
 5703 0136 9FED900A 		vldr.32	s0, .L399+56
 5704 013a 9048     		ldr	r0, .L399+60
 5705 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5706              	.LVL280:
1762:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5707              		.loc 20 1762 9 is_stmt 1 view .LVU1564
1762:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5708              		.loc 20 1762 22 is_stmt 0 view .LVU1565
 5709 0140 9FED8D0A 		vldr.32	s0, .L399+56
 5710 0144 8E48     		ldr	r0, .L399+64
 5711 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5712              	.LVL281:
1763:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5713              		.loc 20 1763 9 is_stmt 1 view .LVU1566
1763:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5714              		.loc 20 1763 27 is_stmt 0 view .LVU1567
 5715 014a 9FED8B0A 		vldr.32	s0, .L399+56
 5716 014e 8D48     		ldr	r0, .L399+68
 5717 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5718              	.LVL282:
1764:Veno-Echo.cpp ****     }
 5719              		.loc 20 1764 9 is_stmt 1 view .LVU1568
1764:Veno-Echo.cpp ****     }
 5720              		.loc 20 1764 27 is_stmt 0 view .LVU1569
 5721 0154 9FED880A 		vldr.32	s0, .L399+56
 5722 0158 8B48     		ldr	r0, .L399+72
 5723 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5724              	.LVL283:
 5725              	.L357:
1767:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 210


 5726              		.loc 20 1767 5 is_stmt 1 view .LVU1570
1767:Veno-Echo.cpp ****     {
 5727              		.loc 20 1767 17 is_stmt 0 view .LVU1571
 5728 015e 94ED040A 		vldr.32	s0, [r4, #16]
1767:Veno-Echo.cpp ****     {
 5729              		.loc 20 1767 5 view .LVU1572
 5730 0162 DFED8A7A 		vldr.32	s15, .L399+76
 5731 0166 B4EEE70A 		vcmpe.f32	s0, s15
 5732 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5733 016e 07DB     		blt	.L358
1767:Veno-Echo.cpp ****     {
 5734              		.loc 20 1767 40 discriminator 1 view .LVU1573
 5735 0170 DFED877A 		vldr.32	s15, .L399+80
 5736 0174 B4EEE70A 		vcmpe.f32	s0, s15
 5737 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5738 017c 40F2A780 		bls	.L397
 5739              	.L358:
1776:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5740              		.loc 20 1776 9 is_stmt 1 view .LVU1574
1776:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5741              		.loc 20 1776 22 is_stmt 0 view .LVU1575
 5742 0180 9FED840A 		vldr.32	s0, .L399+84
 5743 0184 8448     		ldr	r0, .L399+88
 5744 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5745              	.LVL284:
1777:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5746              		.loc 20 1777 9 is_stmt 1 view .LVU1576
1777:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5747              		.loc 20 1777 22 is_stmt 0 view .LVU1577
 5748 018a 9FED820A 		vldr.32	s0, .L399+84
 5749 018e 8348     		ldr	r0, .L399+92
 5750 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5751              	.LVL285:
1778:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5752              		.loc 20 1778 9 is_stmt 1 view .LVU1578
1778:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5753              		.loc 20 1778 27 is_stmt 0 view .LVU1579
 5754 0194 9FED7F0A 		vldr.32	s0, .L399+84
 5755 0198 8148     		ldr	r0, .L399+96
 5756 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5757              	.LVL286:
1779:Veno-Echo.cpp **** 
 5758              		.loc 20 1779 9 is_stmt 1 view .LVU1580
1779:Veno-Echo.cpp **** 
 5759              		.loc 20 1779 27 is_stmt 0 view .LVU1581
 5760 019e 9FED7D0A 		vldr.32	s0, .L399+84
 5761 01a2 8048     		ldr	r0, .L399+100
 5762 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5763              	.LVL287:
 5764              	.L361:
1783:Veno-Echo.cpp ****     {
 5765              		.loc 20 1783 5 is_stmt 1 view .LVU1582
1783:Veno-Echo.cpp ****     {
 5766              		.loc 20 1783 17 is_stmt 0 view .LVU1583
 5767 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1783:Veno-Echo.cpp ****     {
 5768              		.loc 20 1783 5 view .LVU1584
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 211


 5769 01ac B5EEC00A 		vcmpe.f32	s0, #0
 5770 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5771 01b4 06DB     		blt	.L362
1783:Veno-Echo.cpp ****     {
 5772              		.loc 20 1783 38 discriminator 1 view .LVU1585
 5773 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 5774 01ba B4EEE70A 		vcmpe.f32	s0, s15
 5775 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5776 01c2 5DD9     		bls	.L398
 5777              	.L362:
1797:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5778              		.loc 20 1797 9 is_stmt 1 view .LVU1586
1797:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5779              		.loc 20 1797 26 is_stmt 0 view .LVU1587
 5780 01c4 9FED660A 		vldr.32	s0, .L399+32
 5781 01c8 6E48     		ldr	r0, .L399+68
 5782 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5783              	.LVL288:
1798:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5784              		.loc 20 1798 9 is_stmt 1 view .LVU1588
1798:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5785              		.loc 20 1798 26 is_stmt 0 view .LVU1589
 5786 01ce 9FED640A 		vldr.32	s0, .L399+32
 5787 01d2 7348     		ldr	r0, .L399+96
 5788 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5789              	.LVL289:
1799:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5790              		.loc 20 1799 9 is_stmt 1 view .LVU1590
1799:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5791              		.loc 20 1799 26 is_stmt 0 view .LVU1591
 5792 01d8 9FED610A 		vldr.32	s0, .L399+32
 5793 01dc 6A48     		ldr	r0, .L399+72
 5794 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5795              	.LVL290:
1800:Veno-Echo.cpp ****     }
 5796              		.loc 20 1800 9 is_stmt 1 view .LVU1592
1800:Veno-Echo.cpp ****     }
 5797              		.loc 20 1800 26 is_stmt 0 view .LVU1593
 5798 01e2 9FED5F0A 		vldr.32	s0, .L399+32
 5799 01e6 6F48     		ldr	r0, .L399+100
 5800 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5801              	.LVL291:
 5802              	.L365:
1803:Veno-Echo.cpp ****     {
 5803              		.loc 20 1803 5 is_stmt 1 view .LVU1594
1803:Veno-Echo.cpp ****     {
 5804              		.loc 20 1803 16 is_stmt 0 view .LVU1595
 5805 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1803:Veno-Echo.cpp ****     {
 5806              		.loc 20 1803 5 view .LVU1596
 5807 01f0 9FED6D7A 		vldr.32	s14, .L399+104
1809:Veno-Echo.cpp ****     }
 5808              		.loc 20 1809 21 view .LVU1597
 5809 01f4 6D4B     		ldr	r3, .L399+108
1803:Veno-Echo.cpp ****     {
 5810              		.loc 20 1803 5 view .LVU1598
 5811 01f6 F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 212


 5812 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5813 01fe 3CD4     		bmi	.L369
1807:Veno-Echo.cpp ****     {
 5814              		.loc 20 1807 14 is_stmt 1 view .LVU1599
 5815 0200 9FED6B7A 		vldr.32	s14, .L399+112
 5816 0204 F4EEC77A 		vcmpe.f32	s15, s14
 5817 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5818 020c 35DD     		ble	.L369
1809:Veno-Echo.cpp ****     }
 5819              		.loc 20 1809 9 view .LVU1600
1809:Veno-Echo.cpp ****     }
 5820              		.loc 20 1809 21 is_stmt 0 view .LVU1601
 5821 020e 0122     		movs	r2, #1
 5822 0210 1A70     		strb	r2, [r3]
1816:Veno-Echo.cpp **** 
 5823              		.loc 20 1816 1 view .LVU1602
 5824 0212 38BD     		pop	{r3, r4, r5, pc}
 5825              	.LVL292:
 5826              	.L332:
1721:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5827              		.loc 20 1721 9 is_stmt 1 view .LVU1603
 5828              	.LBB1342:
 5829              	.LBI1342:
  68:Veno-Echo.cpp ****     {
 5830              		.loc 20 68 10 view .LVU1604
 5831              	.LBB1343:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5832              		.loc 20 70 9 view .LVU1605
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5833              		.loc 20 70 28 is_stmt 0 view .LVU1606
 5834 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 5835              	.LVL293:
 5836              	.LBB1344:
 5837              	.LBI1344:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5838              		.loc 21 75 3 is_stmt 1 view .LVU1607
 5839              	.LBB1345:
 5840              		.loc 21 76 5 view .LVU1608
 5841              		.loc 21 76 5 is_stmt 0 view .LVU1609
 5842              	.LBE1345:
 5843              	.LBE1344:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5844              		.loc 20 70 15 view .LVU1610
 5845 0218 DFED666A 		vldr.32	s13, .L399+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5846              		.loc 20 70 53 view .LVU1611
 5847 021c 9FED4B6A 		vldr.32	s12, .L399+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5848              		.loc 20 70 15 view .LVU1612
 5849 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5850              		.loc 20 70 53 view .LVU1613
 5851 0224 67EE867A 		vmul.f32	s15, s15, s12
 5852              	.LBB1347:
 5853              	.LBB1346:
 5854              		.loc 21 76 31 view .LVU1614
 5855 0228 B0EEC77A 		vabs.f32	s14, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 213


 5856              	.LBE1346:
 5857              	.LBE1347:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5858              		.loc 20 70 9 view .LVU1615
 5859 022c B4EEE77A 		vcmpe.f32	s14, s15
 5860 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5861 0234 06DD     		ble	.L339
 5862              	.LBE1343:
 5863              	.LBE1342:
1721:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5864              		.loc 20 1721 33 view .LVU1616
 5865 0236 1A68     		ldr	r2, [r3]
 5866              	.LBB1353:
 5867              	.LBB1352:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5868              		.loc 20 73 13 is_stmt 1 view .LVU1617
 5869              	.LBB1348:
 5870              	.LBB1349:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5871              		.loc 19 71 9 is_stmt 0 view .LVU1618
 5872 0238 0021     		movs	r1, #0
 5873              		.loc 19 72 9 view .LVU1619
 5874 023a 5F48     		ldr	r0, .L399+120
 5875              	.LVL294:
 5876              		.loc 19 72 9 view .LVU1620
 5877              	.LBE1349:
 5878              	.LBE1348:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5879              		.loc 20 73 27 view .LVU1621
 5880 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5881              		.loc 20 74 13 is_stmt 1 view .LVU1622
 5882              	.LVL295:
 5883              	.LBB1351:
 5884              	.LBI1348:
  69:delayline_reverse.h ****     {
 5885              		.loc 19 69 17 view .LVU1623
 5886              	.LBB1350:
 5887              		.loc 19 72 9 is_stmt 0 view .LVU1624
 5888 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5889              		.loc 19 71 9 view .LVU1625
 5890 0242 1160     		str	r1, [r2]	@ float
 5891              	.LVL296:
 5892              	.L339:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5893              		.loc 19 71 9 view .LVU1626
 5894              	.LBE1350:
 5895              	.LBE1351:
 5896              	.LBE1352:
 5897              	.LBE1353:
1722:Veno-Echo.cpp ****     }
 5898              		.loc 20 1722 9 is_stmt 1 view .LVU1627
 5899              	.LBB1354:
 5900              	.LBI1354:
  68:Veno-Echo.cpp ****     {
 5901              		.loc 20 68 10 view .LVU1628
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 214


 5902              	.LBB1355:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5903              		.loc 20 70 9 view .LVU1629
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5904              		.loc 20 70 28 is_stmt 0 view .LVU1630
 5905 0244 434B     		ldr	r3, .L399+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5906              		.loc 20 70 15 view .LVU1631
 5907 0246 DFED5B6A 		vldr.32	s13, .L399+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5908              		.loc 20 70 28 view .LVU1632
 5909 024a D3ED017A 		vldr.32	s15, [r3, #4]
 5910              	.LVL297:
 5911              	.LBB1356:
 5912              	.LBI1356:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5913              		.loc 21 75 3 is_stmt 1 view .LVU1633
 5914              	.LBB1357:
 5915              		.loc 21 76 5 view .LVU1634
 5916              		.loc 21 76 5 is_stmt 0 view .LVU1635
 5917              	.LBE1357:
 5918              	.LBE1356:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5919              		.loc 20 70 53 view .LVU1636
 5920 024e 9FED3F6A 		vldr.32	s12, .L399+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5921              		.loc 20 70 15 view .LVU1637
 5922 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5923              		.loc 20 70 53 view .LVU1638
 5924 0256 67EE867A 		vmul.f32	s15, s15, s12
 5925              	.LBB1359:
 5926              	.LBB1358:
 5927              		.loc 21 76 31 view .LVU1639
 5928 025a B0EEC77A 		vabs.f32	s14, s14
 5929              	.LBE1358:
 5930              	.LBE1359:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5931              		.loc 20 70 9 view .LVU1640
 5932 025e B4EEE77A 		vcmpe.f32	s14, s15
 5933 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5934 0266 7FF710AF 		ble	.L338
 5935              	.LBE1355:
 5936              	.LBE1354:
1722:Veno-Echo.cpp ****     }
 5937              		.loc 20 1722 33 view .LVU1641
 5938 026a 1A68     		ldr	r2, [r3]
 5939              	.LBB1365:
 5940              	.LBB1364:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5941              		.loc 20 73 13 is_stmt 1 view .LVU1642
 5942              	.LBB1360:
 5943              	.LBB1361:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5944              		.loc 19 71 9 is_stmt 0 view .LVU1643
 5945 026c 0021     		movs	r1, #0
 5946              		.loc 19 72 9 view .LVU1644
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 215


 5947 026e 5248     		ldr	r0, .L399+120
 5948              	.LBE1361:
 5949              	.LBE1360:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5950              		.loc 20 73 27 view .LVU1645
 5951 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5952              		.loc 20 74 13 is_stmt 1 view .LVU1646
 5953              	.LVL298:
 5954              	.LBB1363:
 5955              	.LBI1360:
  69:delayline_reverse.h ****     {
 5956              		.loc 19 69 17 view .LVU1647
 5957              	.LBB1362:
 5958              		.loc 19 72 9 is_stmt 0 view .LVU1648
 5959 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5960              		.loc 19 71 9 view .LVU1649
 5961 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 5962              		.loc 19 73 5 view .LVU1650
 5963 0278 07E7     		b	.L338
 5964              	.LVL299:
 5965              	.L369:
 5966              		.loc 19 73 5 view .LVU1651
 5967              	.LBE1362:
 5968              	.LBE1363:
 5969              	.LBE1364:
 5970              	.LBE1365:
1805:Veno-Echo.cpp ****     }
 5971              		.loc 20 1805 9 is_stmt 1 view .LVU1652
1805:Veno-Echo.cpp ****     }
 5972              		.loc 20 1805 21 is_stmt 0 view .LVU1653
 5973 027a 0022     		movs	r2, #0
 5974 027c 1A70     		strb	r2, [r3]
1816:Veno-Echo.cpp **** 
 5975              		.loc 20 1816 1 view .LVU1654
 5976 027e 38BD     		pop	{r3, r4, r5, pc}
 5977              	.LVL300:
 5978              	.L398:
1785:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5979              		.loc 20 1785 9 is_stmt 1 view .LVU1655
1785:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5980              		.loc 20 1785 21 is_stmt 0 view .LVU1656
 5981 0280 3E48     		ldr	r0, .L399+60
 5982 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5983              	.LVL301:
1786:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5984              		.loc 20 1786 9 is_stmt 1 view .LVU1657
1786:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5985              		.loc 20 1786 21 is_stmt 0 view .LVU1658
 5986 0286 94ED060A 		vldr.32	s0, [r4, #24]
 5987 028a 4348     		ldr	r0, .L399+88
 5988 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5989              	.LVL302:
1787:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5990              		.loc 20 1787 9 is_stmt 1 view .LVU1659
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 216


1787:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5991              		.loc 20 1787 21 is_stmt 0 view .LVU1660
 5992 0290 94ED060A 		vldr.32	s0, [r4, #24]
 5993 0294 3A48     		ldr	r0, .L399+64
 5994 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5995              	.LVL303:
1788:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5996              		.loc 20 1788 9 is_stmt 1 view .LVU1661
1788:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5997              		.loc 20 1788 21 is_stmt 0 view .LVU1662
 5998 029a 94ED060A 		vldr.32	s0, [r4, #24]
 5999 029e 3F48     		ldr	r0, .L399+92
 6000 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6001              	.LVL304:
1789:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6002              		.loc 20 1789 9 is_stmt 1 view .LVU1663
1789:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6003              		.loc 20 1789 26 is_stmt 0 view .LVU1664
 6004 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 6005 02a8 3648     		ldr	r0, .L399+68
 6006 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6007              	.LVL305:
1790:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6008              		.loc 20 1790 9 is_stmt 1 view .LVU1665
1790:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6009              		.loc 20 1790 26 is_stmt 0 view .LVU1666
 6010 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 6011 02b2 3B48     		ldr	r0, .L399+96
 6012 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6013              	.LVL306:
1791:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6014              		.loc 20 1791 9 is_stmt 1 view .LVU1667
1791:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6015              		.loc 20 1791 26 is_stmt 0 view .LVU1668
 6016 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 6017 02bc 3248     		ldr	r0, .L399+72
 6018 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6019              	.LVL307:
1792:Veno-Echo.cpp ****     }
 6020              		.loc 20 1792 9 is_stmt 1 view .LVU1669
1792:Veno-Echo.cpp ****     }
 6021              		.loc 20 1792 26 is_stmt 0 view .LVU1670
 6022 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 6023 02c6 3748     		ldr	r0, .L399+100
 6024 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6025              	.LVL308:
 6026 02cc 8EE7     		b	.L365
 6027              	.L397:
1769:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6028              		.loc 20 1769 9 is_stmt 1 view .LVU1671
1769:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6029              		.loc 20 1769 22 is_stmt 0 view .LVU1672
 6030 02ce 3248     		ldr	r0, .L399+88
 6031 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6032              	.LVL309:
1770:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6033              		.loc 20 1770 9 is_stmt 1 view .LVU1673
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 217


1770:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6034              		.loc 20 1770 22 is_stmt 0 view .LVU1674
 6035 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 6036 02d8 3048     		ldr	r0, .L399+92
 6037 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6038              	.LVL310:
1771:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6039              		.loc 20 1771 9 is_stmt 1 view .LVU1675
1771:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6040              		.loc 20 1771 27 is_stmt 0 view .LVU1676
 6041 02de 94ED040A 		vldr.32	s0, [r4, #16]
 6042 02e2 2F48     		ldr	r0, .L399+96
 6043 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6044              	.LVL311:
1772:Veno-Echo.cpp ****     }
 6045              		.loc 20 1772 9 is_stmt 1 view .LVU1677
1772:Veno-Echo.cpp ****     }
 6046              		.loc 20 1772 27 is_stmt 0 view .LVU1678
 6047 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 6048 02ec 2D48     		ldr	r0, .L399+100
 6049 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6050              	.LVL312:
 6051 02f2 59E7     		b	.L361
 6052              	.L396:
1754:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6053              		.loc 20 1754 9 is_stmt 1 view .LVU1679
1754:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6054              		.loc 20 1754 22 is_stmt 0 view .LVU1680
 6055 02f4 2148     		ldr	r0, .L399+60
 6056 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6057              	.LVL313:
1755:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6058              		.loc 20 1755 9 is_stmt 1 view .LVU1681
1755:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6059              		.loc 20 1755 22 is_stmt 0 view .LVU1682
 6060 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 6061 02fe 2048     		ldr	r0, .L399+64
 6062 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6063              	.LVL314:
1756:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6064              		.loc 20 1756 9 is_stmt 1 view .LVU1683
1756:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6065              		.loc 20 1756 27 is_stmt 0 view .LVU1684
 6066 0304 94ED050A 		vldr.32	s0, [r4, #20]
 6067 0308 1E48     		ldr	r0, .L399+68
 6068 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6069              	.LVL315:
1757:Veno-Echo.cpp ****     }
 6070              		.loc 20 1757 9 is_stmt 1 view .LVU1685
1757:Veno-Echo.cpp ****     }
 6071              		.loc 20 1757 27 is_stmt 0 view .LVU1686
 6072 030e 94ED050A 		vldr.32	s0, [r4, #20]
 6073 0312 1D48     		ldr	r0, .L399+72
 6074 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6075              	.LVL316:
 6076 0318 21E7     		b	.L357
 6077              	.L390:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 218


1740:Veno-Echo.cpp ****     }
 6078              		.loc 20 1740 18 view .LVU1687
 6079 031a DFED117A 		vldr.32	s15, .L399+32
 6080 031e DCE6     		b	.L347
 6081              	.LVL317:
 6082              	.L395:
 6083              	.LBB1366:
 6084              	.LBB1334:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6085              		.loc 20 74 29 view .LVU1688
 6086 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 6087              	.LBB1326:
 6088              	.LBB1327:
  72:delayline_reverse.h ****     }
 6089              		.loc 19 72 9 view .LVU1689
 6090 0324 0A4D     		ldr	r5, .L399+16
 6091              	.LBE1327:
 6092              	.LBE1326:
 6093              	.LBE1334:
 6094              	.LBE1366:
1717:Veno-Echo.cpp ****     }
 6095              		.loc 20 1717 33 view .LVU1690
 6096 0326 1968     		ldr	r1, [r3]
 6097              	.LBB1367:
 6098              	.LBB1335:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6099              		.loc 20 73 13 is_stmt 1 view .LVU1691
 6100              	.LBB1331:
 6101              	.LBB1328:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6102              		.loc 19 71 9 is_stmt 0 view .LVU1692
 6103 0328 0020     		movs	r0, #0
 6104              	.LBE1328:
 6105              	.LBE1331:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6106              		.loc 20 73 27 view .LVU1693
 6107 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6108              		.loc 20 74 29 view .LVU1694
 6109 032e 17EE102A 		vmov	r2, s14	@ int
 6110              	.LBB1332:
 6111              	.LBB1329:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6112              		.loc 19 71 9 view .LVU1695
 6113 0332 0860     		str	r0, [r1]	@ float
 6114              	.LVL318:
  72:delayline_reverse.h ****     }
 6115              		.loc 19 72 9 view .LVU1696
 6116 0334 AA42     		cmp	r2, r5
 6117 0336 28BF     		it	cs
 6118 0338 2A46     		movcs	r2, r5
 6119              	.LBE1329:
 6120              	.LBE1332:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6121              		.loc 20 74 13 is_stmt 1 view .LVU1697
 6122              	.LVL319:
 6123              	.LBB1333:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 219


 6124              	.LBI1326:
  69:delayline_reverse.h ****     {
 6125              		.loc 19 69 17 view .LVU1698
 6126              	.LBB1330:
  72:delayline_reverse.h ****     }
 6127              		.loc 19 72 9 is_stmt 0 view .LVU1699
 6128 033a 0A61     		str	r2, [r1, #16]
 6129              		.loc 19 73 5 view .LVU1700
 6130 033c A5E6     		b	.L338
 6131              	.L400:
 6132 033e 00BF     		.align	2
 6133              	.L399:
 6134 0340 0050C346 		.word	1187205120
 6135 0344 00000000 		.word	.LANCHOR2
 6136 0348 00606A48 		.word	1214930944
 6137 034c 0AD7A33B 		.word	1000593162
 6138 0350 BF270900 		.word	599999
 6139 0354 00000000 		.word	.LANCHOR3
 6140 0358 00000000 		.word	.LANCHOR25
 6141 035c 0000FA43 		.word	1140457472
 6142 0360 00000000 		.word	0
 6143 0364 CDCCCC3D 		.word	1036831949
 6144 0368 00000000 		.word	.LANCHOR67
 6145 036c 00000000 		.word	.LANCHOR75
 6146 0370 9A99A140 		.word	1084332442
 6147 0374 0080BB44 		.word	1153138688
 6148 0378 00803B46 		.word	1178304512
 6149 037c 00000000 		.word	.LANCHOR46
 6150 0380 00000000 		.word	.LANCHOR47
 6151 0384 00000000 		.word	.LANCHOR48
 6152 0388 00000000 		.word	.LANCHOR49
 6153 038c 0000C842 		.word	1120403456
 6154 0390 00004844 		.word	1145569280
 6155 0394 00004843 		.word	1128792064
 6156 0398 00000000 		.word	.LANCHOR34
 6157 039c 00000000 		.word	.LANCHOR35
 6158 03a0 00000000 		.word	.LANCHOR36
 6159 03a4 00000000 		.word	.LANCHOR37
 6160 03a8 6666E63E 		.word	1055286886
 6161 03ac 00000000 		.word	.LANCHOR82
 6162 03b0 CDCC0C3F 		.word	1057803469
 6163 03b4 00650148 		.word	1208050944
 6164 03b8 94050200 		.word	132500
 6165              	.LBE1330:
 6166              	.LBE1333:
 6167              	.LBE1335:
 6168              	.LBE1367:
 6169              		.cfi_endproc
 6170              	.LFE4333:
 6172              		.section	.text.startup.main,"ax",%progbits
 6173              		.align	1
 6174              		.p2align 2,,3
 6175              		.global	main
 6176              		.syntax unified
 6177              		.thumb
 6178              		.thumb_func
 6179              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 220


 6181              	main:
 6182              	.LFB4311:
 613:Veno-Echo.cpp ****     // initialize hardware.
 6183              		.loc 20 613 1 is_stmt 1 view -0
 6184              		.cfi_startproc
 6185              		@ Volatile: function does not return.
 6186              		@ args = 0, pretend = 0, frame = 240
 6187              		@ frame_needed = 0, uses_anonymous_args = 0
 615:Veno-Echo.cpp ****     hw.Init();
 6188              		.loc 20 615 5 view .LVU1702
 613:Veno-Echo.cpp ****     // initialize hardware.
 6189              		.loc 20 613 1 is_stmt 0 view .LVU1703
 6190 0000 80B5     		push	{r7, lr}
 6191              		.cfi_def_cfa_offset 8
 6192              		.cfi_offset 7, -8
 6193              		.cfi_offset 14, -4
 615:Veno-Echo.cpp ****     hw.Init();
 6194              		.loc 20 615 17 view .LVU1704
 6195 0002 D048     		ldr	r0, .L404
 613:Veno-Echo.cpp ****     // initialize hardware.
 6196              		.loc 20 613 1 view .LVU1705
 6197 0004 BEB0     		sub	sp, sp, #248
 6198              		.cfi_def_cfa_offset 256
 615:Veno-Echo.cpp ****     hw.Init();
 6199              		.loc 20 615 17 view .LVU1706
 6200 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6201              	.LVL320:
 616:Veno-Echo.cpp ****     
 6202              		.loc 20 616 5 is_stmt 1 view .LVU1707
 616:Veno-Echo.cpp ****     
 6203              		.loc 20 616 12 is_stmt 0 view .LVU1708
 6204 000a 0021     		movs	r1, #0
 6205 000c CD48     		ldr	r0, .L404
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6206              		.loc 20 620 16 view .LVU1709
 6207 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 616:Veno-Echo.cpp ****     
 6208              		.loc 20 616 12 view .LVU1710
 6209 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6210              	.LVL321:
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6211              		.loc 20 620 5 is_stmt 1 view .LVU1711
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6212              		.loc 20 620 16 is_stmt 0 view .LVU1712
 6213 0016 1D20     		movs	r0, #29
 6214 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6215              	.LVL322:
 6216 001c 0346     		mov	r3, r0	@ movhi
 6217 001e 0620     		movs	r0, #6
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6218              		.loc 20 627 22 view .LVU1713
 6219 0020 0227     		movs	r7, #2
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6220              		.loc 20 620 16 view .LVU1714
 6221 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6222 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6223              	.LVL323:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 221


 6224 002a 0346     		mov	r3, r0	@ movhi
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6225              		.loc 20 620 80 view .LVU1715
 6226 002c C548     		ldr	r0, .L404
 6227              	.LBB1368:
 6228              	.LBB1369:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6229              		.loc 10 64 50 view .LVU1716
 6230 002e 0126     		movs	r6, #1
 6231              	.LBE1369:
 6232              	.LBE1368:
 6233              	.LBB1372:
 6234              	.LBB1373:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6235              		.loc 7 58 57 view .LVU1717
 6236 0030 F7EE008A 		vmov.f32	s17, #1.0e+0
 6237              	.LBE1373:
 6238              	.LBE1372:
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6239              		.loc 20 620 16 view .LVU1718
 6240 0034 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6241              		.loc 20 620 80 view .LVU1719
 6242 0038 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6243              	.LVL324:
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6244              		.loc 20 620 16 view .LVU1720
 6245 003c 039A     		ldr	r2, [sp, #12]
 6246 003e 80EE080A 		vdiv.f32	s0, s0, s16
 6247 0042 0299     		ldr	r1, [sp, #8]
 6248 0044 0123     		movs	r3, #1
 6249 0046 C048     		ldr	r0, .L404+4
 6250              	.LBB1376:
 6251              	.LBB1377:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6252              		.loc 7 54 63 view .LVU1721
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 222


 6253 0048 4FF07C55 		mov	r5, #1056964608
 6254              	.LBE1377:
 6255              	.LBE1376:
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6256              		.loc 20 620 16 view .LVU1722
 6257 004c FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6258              	.LVL325:
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6259              		.loc 20 621 5 is_stmt 1 view .LVU1723
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6260              		.loc 20 621 16 is_stmt 0 view .LVU1724
 6261 0050 1E20     		movs	r0, #30
 6262 0052 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6263              	.LVL326:
 6264 0056 0346     		mov	r3, r0	@ movhi
 6265 0058 0720     		movs	r0, #7
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6266              		.loc 20 634 20 view .LVU1725
 6267 005a DFF85483 		ldr	r8, .L404+108
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6268              		.loc 20 621 16 view .LVU1726
 6269 005e ADF81030 		strh	r3, [sp, #16]	@ movhi
 6270 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6271              	.LVL327:
 6272 0066 0346     		mov	r3, r0	@ movhi
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6273              		.loc 20 621 80 view .LVU1727
 6274 0068 B648     		ldr	r0, .L404
 6275              	.LBB1380:
 6276              	.LBB1381:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6277              		.loc 7 54 63 view .LVU1728
 6278 006a B84C     		ldr	r4, .L404+8
 6279              	.LBE1381:
 6280              	.LBE1380:
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6281              		.loc 20 621 16 view .LVU1729
 6282 006c ADF81430 		strh	r3, [sp, #20]	@ movhi
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6283              		.loc 20 621 80 view .LVU1730
 6284 0070 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6285              	.LVL328:
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6286              		.loc 20 621 16 view .LVU1731
 6287 0074 059A     		ldr	r2, [sp, #20]
 6288 0076 80EE080A 		vdiv.f32	s0, s0, s16
 6289 007a 0499     		ldr	r1, [sp, #16]
 6290 007c 0123     		movs	r3, #1
 6291 007e B448     		ldr	r0, .L404+12
 6292 0080 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6293              	.LVL329:
 622:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6294              		.loc 20 622 5 is_stmt 1 view .LVU1732
 622:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6295              		.loc 20 622 18 is_stmt 0 view .LVU1733
 6296 0084 0A20     		movs	r0, #10
 6297 0086 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 223


 6298              	.LVL330:
 6299 008a 0346     		mov	r3, r0	@ movhi
 6300 008c 3846     		mov	r0, r7
 6301 008e ADF81830 		strh	r3, [sp, #24]	@ movhi
 6302 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6303              	.LVL331:
 6304 0096 0346     		mov	r3, r0	@ movhi
 622:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6305              		.loc 20 622 85 view .LVU1734
 6306 0098 AA48     		ldr	r0, .L404
 622:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6307              		.loc 20 622 18 view .LVU1735
 6308 009a ADF81C30 		strh	r3, [sp, #28]	@ movhi
 622:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6309              		.loc 20 622 85 view .LVU1736
 6310 009e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6311              	.LVL332:
 622:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6312              		.loc 20 622 18 view .LVU1737
 6313 00a2 079A     		ldr	r2, [sp, #28]
 6314 00a4 80EE080A 		vdiv.f32	s0, s0, s16
 6315 00a8 0699     		ldr	r1, [sp, #24]
 6316 00aa 0023     		movs	r3, #0
 6317 00ac A948     		ldr	r0, .L404+16
 6318 00ae FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6319              	.LVL333:
 623:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6320              		.loc 20 623 5 is_stmt 1 view .LVU1738
 623:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6321              		.loc 20 623 18 is_stmt 0 view .LVU1739
 6322 00b2 0B20     		movs	r0, #11
 6323 00b4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6324              	.LVL334:
 6325 00b8 0346     		mov	r3, r0	@ movhi
 6326 00ba 0320     		movs	r0, #3
 6327 00bc ADF82030 		strh	r3, [sp, #32]	@ movhi
 6328 00c0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6329              	.LVL335:
 6330 00c4 0346     		mov	r3, r0	@ movhi
 623:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6331              		.loc 20 623 85 view .LVU1740
 6332 00c6 9F48     		ldr	r0, .L404
 623:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6333              		.loc 20 623 18 view .LVU1741
 6334 00c8 ADF82430 		strh	r3, [sp, #36]	@ movhi
 623:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6335              		.loc 20 623 85 view .LVU1742
 6336 00cc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6337              	.LVL336:
 623:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6338              		.loc 20 623 18 view .LVU1743
 6339 00d0 099A     		ldr	r2, [sp, #36]
 6340 00d2 80EE080A 		vdiv.f32	s0, s0, s16
 6341 00d6 0899     		ldr	r1, [sp, #32]
 6342 00d8 0023     		movs	r3, #0
 6343 00da 9F48     		ldr	r0, .L404+20
 6344 00dc FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 224


 6345              	.LVL337:
 624:Veno-Echo.cpp **** 
 6346              		.loc 20 624 5 is_stmt 1 view .LVU1744
 624:Veno-Echo.cpp **** 
 6347              		.loc 20 624 20 is_stmt 0 view .LVU1745
 6348 00e0 1820     		movs	r0, #24
 6349 00e2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6350              	.LVL338:
 6351 00e6 0346     		mov	r3, r0	@ movhi
 6352 00e8 0420     		movs	r0, #4
 6353 00ea ADF82830 		strh	r3, [sp, #40]	@ movhi
 6354 00ee FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6355              	.LVL339:
 6356 00f2 0346     		mov	r3, r0	@ movhi
 624:Veno-Echo.cpp **** 
 6357              		.loc 20 624 93 view .LVU1746
 6358 00f4 9348     		ldr	r0, .L404
 624:Veno-Echo.cpp **** 
 6359              		.loc 20 624 20 view .LVU1747
 6360 00f6 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 624:Veno-Echo.cpp **** 
 6361              		.loc 20 624 93 view .LVU1748
 6362 00fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6363              	.LVL340:
 624:Veno-Echo.cpp **** 
 6364              		.loc 20 624 20 view .LVU1749
 6365 00fe 3B46     		mov	r3, r7
 6366 0100 80EE080A 		vdiv.f32	s0, s0, s16
 6367 0104 0B9A     		ldr	r2, [sp, #44]
 6368 0106 0A99     		ldr	r1, [sp, #40]
 6369 0108 9448     		ldr	r0, .L404+24
 6370 010a FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6371              	.LVL341:
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6372              		.loc 20 627 5 is_stmt 1 view .LVU1750
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6373              		.loc 20 627 22 is_stmt 0 view .LVU1751
 6374 010e 0020     		movs	r0, #0
 6375 0110 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6376              	.LVL342:
 6377 0114 0346     		mov	r3, r0	@ movhi
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6378              		.loc 20 627 55 view .LVU1752
 6379 0116 8B48     		ldr	r0, .L404
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6380              		.loc 20 627 22 view .LVU1753
 6381 0118 ADF83030 		strh	r3, [sp, #48]	@ movhi
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6382              		.loc 20 627 55 view .LVU1754
 6383 011c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6384              	.LVL343:
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6385              		.loc 20 627 22 view .LVU1755
 6386 0120 0123     		movs	r3, #1
 6387 0122 80EE080A 		vdiv.f32	s0, s0, s16
 6388 0126 0C99     		ldr	r1, [sp, #48]
 6389 0128 1A46     		mov	r2, r3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 225


 6390 012a 8D48     		ldr	r0, .L404+28
 6391 012c 0097     		str	r7, [sp]
 6392 012e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6393              	.LVL344:
 628:Veno-Echo.cpp **** 
 6394              		.loc 20 628 5 is_stmt 1 view .LVU1756
 628:Veno-Echo.cpp **** 
 6395              		.loc 20 628 22 is_stmt 0 view .LVU1757
 6396 0132 0120     		movs	r0, #1
 6397 0134 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6398              	.LVL345:
 6399 0138 0346     		mov	r3, r0	@ movhi
 628:Veno-Echo.cpp **** 
 6400              		.loc 20 628 55 view .LVU1758
 6401 013a 8248     		ldr	r0, .L404
 628:Veno-Echo.cpp **** 
 6402              		.loc 20 628 22 view .LVU1759
 6403 013c ADF83430 		strh	r3, [sp, #52]	@ movhi
 628:Veno-Echo.cpp **** 
 6404              		.loc 20 628 55 view .LVU1760
 6405 0140 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6406              	.LVL346:
 628:Veno-Echo.cpp **** 
 6407              		.loc 20 628 22 view .LVU1761
 6408 0144 3246     		mov	r2, r6
 6409 0146 80EE080A 		vdiv.f32	s0, s0, s16
 6410 014a 0D99     		ldr	r1, [sp, #52]
 6411 014c 3346     		mov	r3, r6
 6412 014e 8548     		ldr	r0, .L404+32
 6413 0150 0097     		str	r7, [sp]
 6414 0152 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6415              	.LVL347:
 631:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6416              		.loc 20 631 5 is_stmt 1 view .LVU1762
 631:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6417              		.loc 20 631 14 is_stmt 0 view .LVU1763
 6418 0156 1720     		movs	r0, #23
 6419 0158 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6420              	.LVL348:
 6421 015c 0346     		mov	r3, r0	@ movhi
 631:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6422              		.loc 20 631 48 view .LVU1764
 6423 015e 7948     		ldr	r0, .L404
 631:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6424              		.loc 20 631 14 view .LVU1765
 6425 0160 ADF83830 		strh	r3, [sp, #56]	@ movhi
 631:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6426              		.loc 20 631 48 view .LVU1766
 6427 0164 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6428              	.LVL349:
 631:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6429              		.loc 20 631 14 view .LVU1767
 6430 0168 0E99     		ldr	r1, [sp, #56]
 6431 016a 80EE080A 		vdiv.f32	s0, s0, s16
 6432 016e 7E48     		ldr	r0, .L404+36
 6433 0170 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6434              	.LVL350:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 226


 632:Veno-Echo.cpp ****     
 6435              		.loc 20 632 5 is_stmt 1 view .LVU1768
 632:Veno-Echo.cpp ****     
 6436              		.loc 20 632 17 is_stmt 0 view .LVU1769
 6437 0174 0520     		movs	r0, #5
 6438 0176 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6439              	.LVL351:
 6440 017a 0346     		mov	r3, r0	@ movhi
 6441 017c 7148     		ldr	r0, .L404
 6442 017e ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6443 0182 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6444              	.LVL352:
 6445 0186 0F99     		ldr	r1, [sp, #60]
 6446 0188 7848     		ldr	r0, .L404+40
 6447 018a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6448              	.LVL353:
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6449              		.loc 20 634 5 is_stmt 1 view .LVU1770
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6450              		.loc 20 634 20 is_stmt 0 view .LVU1771
 6451 018e 6D48     		ldr	r0, .L404
 6452 0190 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6453              	.LVL354:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6454              		.loc 20 640 20 view .LVU1772
 6455 0194 764F     		ldr	r7, .L404+44
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6456              		.loc 20 634 20 view .LVU1773
 6457 0196 4046     		mov	r0, r8
 671:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6458              		.loc 20 671 17 view .LVU1774
 6459 0198 9FED768A 		vldr.32	s16, .L404+48
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6460              		.loc 20 634 20 view .LVU1775
 6461 019c FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6462              	.LVL355:
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6463              		.loc 20 635 5 is_stmt 1 view .LVU1776
 6464              	.LBB1384:
 6465              	.LBI1376:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6466              		.loc 7 54 17 view .LVU1777
 6467              	.LBB1378:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6468              		.loc 7 54 48 view .LVU1778
 6469              	.LBE1378:
 6470              	.LBE1384:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6471              		.loc 20 640 20 is_stmt 0 view .LVU1779
 6472 01a0 6848     		ldr	r0, .L404
 6473              	.LBB1385:
 6474              	.LBB1374:
 6475              		.loc 7 58 57 view .LVU1780
 6476 01a2 C8ED008A 		vstr.32	s17, [r8]
 6477              	.LBE1374:
 6478              	.LBE1385:
 6479              	.LBB1386:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 227


 6480              	.LBB1379:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6481              		.loc 7 54 63 view .LVU1781
 6482 01a6 C8F80850 		str	r5, [r8, #8]	@ float
 6483              	.LVL356:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6484              		.loc 7 54 63 view .LVU1782
 6485              	.LBE1379:
 6486              	.LBE1386:
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6487              		.loc 20 636 5 is_stmt 1 view .LVU1783
 6488              	.LBB1387:
 6489              	.LBI1380:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6490              		.loc 7 54 17 view .LVU1784
 6491              	.LBB1382:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6492              		.loc 7 54 48 view .LVU1785
 6493              	.LBE1382:
 6494              	.LBE1387:
 6495              	.LBB1388:
 6496              	.LBB1389:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6497              		.loc 7 54 63 is_stmt 0 view .LVU1786
 6498 01aa C8F81450 		str	r5, [r8, #20]	@ float
 6499              	.LBE1389:
 6500              	.LBE1388:
 6501              	.LBB1391:
 6502              	.LBB1383:
 6503 01ae C8F80C40 		str	r4, [r8, #12]	@ float
 6504              	.LVL357:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6505              		.loc 7 54 63 view .LVU1787
 6506              	.LBE1383:
 6507              	.LBE1391:
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6508              		.loc 20 637 5 is_stmt 1 view .LVU1788
 6509              	.LBB1392:
 6510              	.LBI1388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6511              		.loc 7 54 17 view .LVU1789
 6512              	.LBB1390:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6513              		.loc 7 54 48 view .LVU1790
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6514              		.loc 7 54 48 is_stmt 0 view .LVU1791
 6515              	.LBE1390:
 6516              	.LBE1392:
 638:Veno-Echo.cpp **** 
 6517              		.loc 20 638 5 is_stmt 1 view .LVU1792
 6518              	.LBB1393:
 6519              	.LBI1372:
 6520              		.loc 7 58 17 view .LVU1793
 6521              	.LBB1375:
 6522              		.loc 7 58 52 view .LVU1794
 6523              		.loc 7 58 52 is_stmt 0 view .LVU1795
 6524              	.LBE1375:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 228


 6525              	.LBE1393:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6526              		.loc 20 640 5 is_stmt 1 view .LVU1796
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6527              		.loc 20 640 20 is_stmt 0 view .LVU1797
 6528 01b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6529              	.LVL358:
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6530              		.loc 20 646 17 view .LVU1798
 6531 01b6 DFF8FC81 		ldr	r8, .L404+112
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6532              		.loc 20 640 20 view .LVU1799
 6533 01ba 3846     		mov	r0, r7
 6534 01bc FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6535              	.LVL359:
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6536              		.loc 20 641 5 is_stmt 1 view .LVU1800
 6537              	.LBB1394:
 6538              	.LBI1394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6539              		.loc 7 54 17 view .LVU1801
 6540              	.LBB1395:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6541              		.loc 7 54 48 view .LVU1802
 6542              	.LBE1395:
 6543              	.LBE1394:
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6544              		.loc 20 646 17 is_stmt 0 view .LVU1803
 6545 01c0 6048     		ldr	r0, .L404
 6546              	.LBB1397:
 6547              	.LBB1398:
 6548              		.loc 7 58 57 view .LVU1804
 6549 01c2 C7ED008A 		vstr.32	s17, [r7]
 6550              	.LBE1398:
 6551              	.LBE1397:
 6552              	.LBB1400:
 6553              	.LBB1396:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6554              		.loc 7 54 63 view .LVU1805
 6555 01c6 BD60     		str	r5, [r7, #8]	@ float
 6556              	.LVL360:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6557              		.loc 7 54 63 view .LVU1806
 6558              	.LBE1396:
 6559              	.LBE1400:
 642:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6560              		.loc 20 642 5 is_stmt 1 view .LVU1807
 6561              	.LBB1401:
 6562              	.LBI1401:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6563              		.loc 7 54 17 view .LVU1808
 6564              	.LBB1402:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6565              		.loc 7 54 48 view .LVU1809
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6566              		.loc 7 54 63 is_stmt 0 view .LVU1810
 6567 01c8 FC60     		str	r4, [r7, #12]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 229


 6568              	.LVL361:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6569              		.loc 7 54 63 view .LVU1811
 6570              	.LBE1402:
 6571              	.LBE1401:
 643:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6572              		.loc 20 643 5 is_stmt 1 view .LVU1812
 6573              	.LBB1403:
 6574              	.LBI1403:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6575              		.loc 7 54 17 view .LVU1813
 6576              	.LBB1404:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6577              		.loc 7 54 48 view .LVU1814
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6578              		.loc 7 54 63 is_stmt 0 view .LVU1815
 6579 01ca 7D61     		str	r5, [r7, #20]	@ float
 6580              	.LVL362:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6581              		.loc 7 54 63 view .LVU1816
 6582              	.LBE1404:
 6583              	.LBE1403:
 644:Veno-Echo.cpp **** 
 6584              		.loc 20 644 5 is_stmt 1 view .LVU1817
 6585              	.LBB1405:
 6586              	.LBI1397:
 6587              		.loc 7 58 17 view .LVU1818
 6588              	.LBB1399:
 6589              		.loc 7 58 52 view .LVU1819
 6590              		.loc 7 58 52 is_stmt 0 view .LVU1820
 6591              	.LBE1399:
 6592              	.LBE1405:
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6593              		.loc 20 646 5 is_stmt 1 view .LVU1821
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6594              		.loc 20 646 17 is_stmt 0 view .LVU1822
 6595 01cc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6596              	.LVL363:
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6597              		.loc 20 652 17 view .LVU1823
 6598 01d0 694F     		ldr	r7, .L404+52
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6599              		.loc 20 646 17 view .LVU1824
 6600 01d2 4046     		mov	r0, r8
 6601 01d4 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6602              	.LVL364:
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6603              		.loc 20 647 5 is_stmt 1 view .LVU1825
 6604              	.LBB1406:
 6605              	.LBI1406:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6606              		.loc 7 54 17 view .LVU1826
 6607              	.LBB1407:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6608              		.loc 7 54 48 view .LVU1827
 6609              	.LBE1407:
 6610              	.LBE1406:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 230


 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6611              		.loc 20 652 17 is_stmt 0 view .LVU1828
 6612 01d8 5A48     		ldr	r0, .L404
 6613              	.LBB1409:
 6614              	.LBB1410:
 6615              		.loc 7 58 57 view .LVU1829
 6616 01da C8ED008A 		vstr.32	s17, [r8]
 6617              	.LBE1410:
 6618              	.LBE1409:
 6619              	.LBB1412:
 6620              	.LBB1408:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6621              		.loc 7 54 63 view .LVU1830
 6622 01de C8F80840 		str	r4, [r8, #8]	@ float
 6623              	.LVL365:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6624              		.loc 7 54 63 view .LVU1831
 6625              	.LBE1408:
 6626              	.LBE1412:
 648:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6627              		.loc 20 648 5 is_stmt 1 view .LVU1832
 6628              	.LBB1413:
 6629              	.LBI1413:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6630              		.loc 7 54 17 view .LVU1833
 6631              	.LBB1414:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6632              		.loc 7 54 48 view .LVU1834
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6633              		.loc 7 54 63 is_stmt 0 view .LVU1835
 6634 01e2 C8F80C40 		str	r4, [r8, #12]	@ float
 6635              	.LVL366:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6636              		.loc 7 54 63 view .LVU1836
 6637              	.LBE1414:
 6638              	.LBE1413:
 649:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 6639              		.loc 20 649 5 is_stmt 1 view .LVU1837
 6640              	.LBB1415:
 6641              	.LBI1415:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6642              		.loc 7 54 17 view .LVU1838
 6643              	.LBB1416:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6644              		.loc 7 54 48 view .LVU1839
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6645              		.loc 7 54 63 is_stmt 0 view .LVU1840
 6646 01e6 C8F81440 		str	r4, [r8, #20]	@ float
 6647              	.LVL367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6648              		.loc 7 54 63 view .LVU1841
 6649              	.LBE1416:
 6650              	.LBE1415:
 650:Veno-Echo.cpp **** 
 6651              		.loc 20 650 5 is_stmt 1 view .LVU1842
 6652              	.LBB1417:
 6653              	.LBI1409:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 231


 6654              		.loc 7 58 17 view .LVU1843
 6655              	.LBB1411:
 6656              		.loc 7 58 52 view .LVU1844
 6657              		.loc 7 58 52 is_stmt 0 view .LVU1845
 6658              	.LBE1411:
 6659              	.LBE1417:
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6660              		.loc 20 652 5 is_stmt 1 view .LVU1846
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6661              		.loc 20 652 17 is_stmt 0 view .LVU1847
 6662 01ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6663              	.LVL368:
 6664 01ee 3846     		mov	r0, r7
 6665 01f0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6666              	.LVL369:
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6667              		.loc 20 653 5 is_stmt 1 view .LVU1848
 6668              	.LBB1418:
 6669              	.LBI1418:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6670              		.loc 7 54 17 view .LVU1849
 6671              	.LBB1419:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6672              		.loc 7 54 48 view .LVU1850
 6673              	.LBE1419:
 6674              	.LBE1418:
 6675              	.LBB1421:
 6676              	.LBB1422:
 6677              	.LBB1423:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6678              		.loc 10 45 16 is_stmt 0 view .LVU1851
 6679 01f4 6149     		ldr	r1, .L404+56
 6680              	.LBE1423:
 6681              	.LBE1422:
 6682              	.LBE1421:
 6683              	.LBB1428:
 6684              	.LBB1429:
 6685              	.LBB1430:
 6686 01f6 624A     		ldr	r2, .L404+60
 6687              	.LBE1430:
 6688              	.LBE1429:
 6689              	.LBE1428:
 6690              	.LBB1435:
 6691              	.LBB1436:
 6692              	.LBB1437:
 6693 01f8 624B     		ldr	r3, .L404+64
 6694              	.LBE1437:
 6695              	.LBE1436:
 6696              	.LBE1435:
 6697              	.LBB1442:
 6698              	.LBB1426:
 6699              	.LBB1424:
 6700 01fa 0D60     		str	r5, [r1]	@ float
 6701              	.LBE1424:
 6702              	.LBE1426:
 6703              	.LBE1442:
 6704              	.LBB1443:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 232


 6705              	.LBB1433:
 6706              	.LBB1431:
 6707 01fc 1560     		str	r5, [r2]	@ float
 6708              	.LBE1431:
 6709              	.LBE1433:
 6710              	.LBE1443:
 6711              	.LBB1444:
 6712              	.LBB1440:
 6713              	.LBB1438:
 6714 01fe 1D60     		str	r5, [r3]	@ float
 6715              	.LBE1438:
 6716              	.LBE1440:
 6717              	.LBE1444:
 6718              	.LBB1445:
 6719              	.LBB1370:
 6720              		.loc 10 64 50 view .LVU1852
 6721 0200 0E71     		strb	r6, [r1, #4]
 6722              	.LBE1370:
 6723              	.LBE1445:
 6724              	.LBB1446:
 6725              	.LBB1447:
 6726 0202 1671     		strb	r6, [r2, #4]
 6727              	.LBE1447:
 6728              	.LBE1446:
 6729              	.LBB1449:
 6730              	.LBB1450:
 6731 0204 1E71     		strb	r6, [r3, #4]
 6732              	.LBE1450:
 6733              	.LBE1449:
 667:Veno-Echo.cpp **** 
 6734              		.loc 20 667 15 view .LVU1853
 6735 0206 4F48     		ldr	r0, .L404
 6736              	.LBB1452:
 6737              	.LBB1453:
 6738              		.loc 7 58 57 view .LVU1854
 6739 0208 C7ED008A 		vstr.32	s17, [r7]
 6740              	.LBE1453:
 6741              	.LBE1452:
 6742              	.LBB1455:
 6743              	.LBB1420:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6744              		.loc 7 54 63 view .LVU1855
 6745 020c BC60     		str	r4, [r7, #8]	@ float
 6746              	.LVL370:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6747              		.loc 7 54 63 view .LVU1856
 6748              	.LBE1420:
 6749              	.LBE1455:
 654:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6750              		.loc 20 654 5 is_stmt 1 view .LVU1857
 6751              	.LBB1456:
 6752              	.LBI1456:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6753              		.loc 7 54 17 view .LVU1858
 6754              	.LBB1457:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6755              		.loc 7 54 48 view .LVU1859
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 233


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6756              		.loc 7 54 63 is_stmt 0 view .LVU1860
 6757 020e FC60     		str	r4, [r7, #12]	@ float
 6758              	.LVL371:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6759              		.loc 7 54 63 view .LVU1861
 6760              	.LBE1457:
 6761              	.LBE1456:
 655:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 6762              		.loc 20 655 5 is_stmt 1 view .LVU1862
 6763              	.LBB1458:
 6764              	.LBI1458:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6765              		.loc 7 54 17 view .LVU1863
 6766              	.LBB1459:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6767              		.loc 7 54 48 view .LVU1864
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6768              		.loc 7 54 63 is_stmt 0 view .LVU1865
 6769 0210 7C61     		str	r4, [r7, #20]	@ float
 6770              	.LVL372:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6771              		.loc 7 54 63 view .LVU1866
 6772              	.LBE1459:
 6773              	.LBE1458:
 656:Veno-Echo.cpp **** 
 6774              		.loc 20 656 5 is_stmt 1 view .LVU1867
 6775              	.LBB1460:
 6776              	.LBI1452:
 6777              		.loc 7 58 17 view .LVU1868
 6778              	.LBB1454:
 6779              		.loc 7 58 52 view .LVU1869
 6780              		.loc 7 58 52 is_stmt 0 view .LVU1870
 6781              	.LBE1454:
 6782              	.LBE1460:
 659:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 6783              		.loc 20 659 5 is_stmt 1 view .LVU1871
 6784              	.LBB1461:
 6785              	.LBI1421:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6786              		.loc 10 51 17 view .LVU1872
 6787              	.LBE1461:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6788              		.loc 10 51 26 view .LVU1873
 6789              	.LBB1462:
 6790              	.LBB1427:
 6791              	.LBI1422:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6792              		.loc 10 43 17 view .LVU1874
 6793              	.LBB1425:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6794              		.loc 10 45 9 view .LVU1875
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6795              		.loc 10 46 9 view .LVU1876
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6796              		.loc 10 46 9 is_stmt 0 view .LVU1877
 6797              	.LBE1425:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 234


 6798              	.LBE1427:
 6799              	.LBE1462:
 660:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 6800              		.loc 20 660 5 is_stmt 1 view .LVU1878
 6801              	.LBB1463:
 6802              	.LBI1368:
 6803              		.loc 10 64 17 view .LVU1879
 6804              	.LBB1371:
 6805              		.loc 10 64 43 view .LVU1880
 6806              		.loc 10 64 43 is_stmt 0 view .LVU1881
 6807              	.LBE1371:
 6808              	.LBE1463:
 661:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 6809              		.loc 20 661 5 is_stmt 1 view .LVU1882
 6810              	.LBB1464:
 6811              	.LBI1428:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6812              		.loc 10 51 17 view .LVU1883
 6813              	.LBE1464:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6814              		.loc 10 51 26 view .LVU1884
 6815              	.LBB1465:
 6816              	.LBB1434:
 6817              	.LBI1429:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6818              		.loc 10 43 17 view .LVU1885
 6819              	.LBB1432:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6820              		.loc 10 45 9 view .LVU1886
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6821              		.loc 10 46 9 view .LVU1887
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6822              		.loc 10 46 9 is_stmt 0 view .LVU1888
 6823              	.LBE1432:
 6824              	.LBE1434:
 6825              	.LBE1465:
 662:Veno-Echo.cpp **** 
 6826              		.loc 20 662 5 is_stmt 1 view .LVU1889
 6827              	.LBB1466:
 6828              	.LBI1446:
 6829              		.loc 10 64 17 view .LVU1890
 6830              	.LBB1448:
 6831              		.loc 10 64 43 view .LVU1891
 6832              		.loc 10 64 43 is_stmt 0 view .LVU1892
 6833              	.LBE1448:
 6834              	.LBE1466:
 664:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 6835              		.loc 20 664 5 is_stmt 1 view .LVU1893
 6836              	.LBB1467:
 6837              	.LBI1435:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6838              		.loc 10 51 17 view .LVU1894
 6839              	.LBE1467:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6840              		.loc 10 51 26 view .LVU1895
 6841              	.LBB1468:
 6842              	.LBB1441:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 235


 6843              	.LBI1436:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6844              		.loc 10 43 17 view .LVU1896
 6845              	.LBB1439:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6846              		.loc 10 45 9 view .LVU1897
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6847              		.loc 10 46 9 view .LVU1898
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6848              		.loc 10 46 9 is_stmt 0 view .LVU1899
 6849              	.LBE1439:
 6850              	.LBE1441:
 6851              	.LBE1468:
 665:Veno-Echo.cpp **** 
 6852              		.loc 20 665 5 is_stmt 1 view .LVU1900
 6853              	.LBB1469:
 6854              	.LBI1449:
 6855              		.loc 10 64 17 view .LVU1901
 6856              	.LBB1451:
 6857              		.loc 10 64 43 view .LVU1902
 6858              		.loc 10 64 43 is_stmt 0 view .LVU1903
 6859              	.LBE1451:
 6860              	.LBE1469:
 667:Veno-Echo.cpp **** 
 6861              		.loc 20 667 5 is_stmt 1 view .LVU1904
 667:Veno-Echo.cpp **** 
 6862              		.loc 20 667 15 is_stmt 0 view .LVU1905
 6863 0212 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6864              	.LVL373:
 6865 0216 FFF7FEFF 		bl	_Z10InitDelaysf
 6866              	.LVL374:
 670:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6867              		.loc 20 670 5 is_stmt 1 view .LVU1906
 670:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6868              		.loc 20 670 15 is_stmt 0 view .LVU1907
 6869 021a 4A48     		ldr	r0, .L404
 6870 021c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6871              	.LVL375:
 6872 0220 5948     		ldr	r0, .L404+68
 6873 0222 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6874              	.LVL376:
 671:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6875              		.loc 20 671 5 is_stmt 1 view .LVU1908
 671:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6876              		.loc 20 671 17 is_stmt 0 view .LVU1909
 6877 0226 B0EE480A 		vmov.f32	s0, s16
 6878 022a 5748     		ldr	r0, .L404+68
 6879 022c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6880              	.LVL377:
 672:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6881              		.loc 20 672 5 is_stmt 1 view .LVU1910
 672:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6882              		.loc 20 672 18 is_stmt 0 view .LVU1911
 6883 0230 9FED560A 		vldr.32	s0, .L404+72
 6884 0234 5448     		ldr	r0, .L404+68
 6885 0236 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6886              	.LVL378:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 236


 673:Veno-Echo.cpp **** 
 6887              		.loc 20 673 5 is_stmt 1 view .LVU1912
 673:Veno-Echo.cpp **** 
 6888              		.loc 20 673 19 is_stmt 0 view .LVU1913
 6889 023a 9FED550A 		vldr.32	s0, .L404+76
 6890 023e 5248     		ldr	r0, .L404+68
 6891 0240 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6892              	.LVL379:
 675:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6893              		.loc 20 675 5 is_stmt 1 view .LVU1914
 675:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6894              		.loc 20 675 15 is_stmt 0 view .LVU1915
 6895 0244 3F48     		ldr	r0, .L404
 6896 0246 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6897              	.LVL380:
 6898 024a 5248     		ldr	r0, .L404+80
 6899 024c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6900              	.LVL381:
 676:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6901              		.loc 20 676 5 is_stmt 1 view .LVU1916
 676:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6902              		.loc 20 676 17 is_stmt 0 view .LVU1917
 6903 0250 B0EE480A 		vmov.f32	s0, s16
 6904 0254 4F48     		ldr	r0, .L404+80
 6905 0256 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6906              	.LVL382:
 677:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6907              		.loc 20 677 5 is_stmt 1 view .LVU1918
 677:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6908              		.loc 20 677 18 is_stmt 0 view .LVU1919
 6909 025a 9FED4C0A 		vldr.32	s0, .L404+72
 6910 025e 4D48     		ldr	r0, .L404+80
 6911 0260 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6912              	.LVL383:
 678:Veno-Echo.cpp **** 
 6913              		.loc 20 678 5 is_stmt 1 view .LVU1920
 678:Veno-Echo.cpp **** 
 6914              		.loc 20 678 19 is_stmt 0 view .LVU1921
 6915 0264 9FED4A0A 		vldr.32	s0, .L404+76
 6916 0268 4A48     		ldr	r0, .L404+80
 6917 026a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6918              	.LVL384:
 681:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6919              		.loc 20 681 5 is_stmt 1 view .LVU1922
 681:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6920              		.loc 20 681 15 is_stmt 0 view .LVU1923
 6921 026e 3548     		ldr	r0, .L404
 6922 0270 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6923              	.LVL385:
 6924 0274 4848     		ldr	r0, .L404+84
 6925 0276 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6926              	.LVL386:
 682:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6927              		.loc 20 682 5 is_stmt 1 view .LVU1924
 682:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6928              		.loc 20 682 17 is_stmt 0 view .LVU1925
 6929 027a B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 237


 6930 027e 4648     		ldr	r0, .L404+84
 6931 0280 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6932              	.LVL387:
 683:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6933              		.loc 20 683 5 is_stmt 1 view .LVU1926
 683:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6934              		.loc 20 683 18 is_stmt 0 view .LVU1927
 6935 0284 9FED450A 		vldr.32	s0, .L404+88
 6936 0288 4348     		ldr	r0, .L404+84
 6937 028a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6938              	.LVL388:
 684:Veno-Echo.cpp **** 
 6939              		.loc 20 684 5 is_stmt 1 view .LVU1928
 684:Veno-Echo.cpp **** 
 6940              		.loc 20 684 19 is_stmt 0 view .LVU1929
 6941 028e 9FED400A 		vldr.32	s0, .L404+76
 6942 0292 4148     		ldr	r0, .L404+84
 6943 0294 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6944              	.LVL389:
 686:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6945              		.loc 20 686 5 is_stmt 1 view .LVU1930
 686:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6946              		.loc 20 686 15 is_stmt 0 view .LVU1931
 6947 0298 2A48     		ldr	r0, .L404
 6948 029a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6949              	.LVL390:
 6950 029e 4048     		ldr	r0, .L404+92
 6951 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6952              	.LVL391:
 687:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6953              		.loc 20 687 5 is_stmt 1 view .LVU1932
 687:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6954              		.loc 20 687 17 is_stmt 0 view .LVU1933
 6955 02a4 B0EE480A 		vmov.f32	s0, s16
 6956 02a8 3D48     		ldr	r0, .L404+92
 6957 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6958              	.LVL392:
 688:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6959              		.loc 20 688 5 is_stmt 1 view .LVU1934
 688:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6960              		.loc 20 688 18 is_stmt 0 view .LVU1935
 6961 02ae 9FED3B0A 		vldr.32	s0, .L404+88
 6962 02b2 3B48     		ldr	r0, .L404+92
 6963 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6964              	.LVL393:
 689:Veno-Echo.cpp **** 
 6965              		.loc 20 689 5 is_stmt 1 view .LVU1936
 689:Veno-Echo.cpp **** 
 6966              		.loc 20 689 19 is_stmt 0 view .LVU1937
 6967 02b8 9FED350A 		vldr.32	s0, .L404+76
 6968 02bc 3848     		ldr	r0, .L404+92
 6969 02be FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6970              	.LVL394:
 692:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6971              		.loc 20 692 5 is_stmt 1 view .LVU1938
 692:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6972              		.loc 20 692 20 is_stmt 0 view .LVU1939
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 238


 6973 02c2 2048     		ldr	r0, .L404
 6974 02c4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6975              	.LVL395:
 6976 02c8 3648     		ldr	r0, .L404+96
 6977 02ca FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6978              	.LVL396:
 693:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6979              		.loc 20 693 5 is_stmt 1 view .LVU1940
 693:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6980              		.loc 20 693 22 is_stmt 0 view .LVU1941
 6981 02ce B0EE480A 		vmov.f32	s0, s16
 6982 02d2 3448     		ldr	r0, .L404+96
 6983 02d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6984              	.LVL397:
 694:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6985              		.loc 20 694 5 is_stmt 1 view .LVU1942
 694:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6986              		.loc 20 694 23 is_stmt 0 view .LVU1943
 6987 02d8 9FED2C0A 		vldr.32	s0, .L404+72
 6988 02dc 3148     		ldr	r0, .L404+96
 6989 02de FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6990              	.LVL398:
 695:Veno-Echo.cpp **** 
 6991              		.loc 20 695 5 is_stmt 1 view .LVU1944
 695:Veno-Echo.cpp **** 
 6992              		.loc 20 695 24 is_stmt 0 view .LVU1945
 6993 02e2 9FED2B0A 		vldr.32	s0, .L404+76
 6994 02e6 2F48     		ldr	r0, .L404+96
 6995 02e8 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6996              	.LVL399:
 697:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6997              		.loc 20 697 5 is_stmt 1 view .LVU1946
 697:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6998              		.loc 20 697 20 is_stmt 0 view .LVU1947
 6999 02ec 1548     		ldr	r0, .L404
 7000 02ee FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7001              	.LVL400:
 7002 02f2 2D48     		ldr	r0, .L404+100
 7003 02f4 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7004              	.LVL401:
 698:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7005              		.loc 20 698 5 is_stmt 1 view .LVU1948
 698:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7006              		.loc 20 698 22 is_stmt 0 view .LVU1949
 7007 02f8 B0EE480A 		vmov.f32	s0, s16
 7008 02fc 2A48     		ldr	r0, .L404+100
 7009 02fe FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7010              	.LVL402:
 699:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7011              		.loc 20 699 5 is_stmt 1 view .LVU1950
 699:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7012              		.loc 20 699 23 is_stmt 0 view .LVU1951
 7013 0302 9FED220A 		vldr.32	s0, .L404+72
 7014 0306 2848     		ldr	r0, .L404+100
 7015 0308 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7016              	.LVL403:
 700:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 239


 7017              		.loc 20 700 5 is_stmt 1 view .LVU1952
 700:Veno-Echo.cpp **** 
 7018              		.loc 20 700 24 is_stmt 0 view .LVU1953
 7019 030c 9FED200A 		vldr.32	s0, .L404+76
 7020 0310 2548     		ldr	r0, .L404+100
 7021 0312 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7022              	.LVL404:
 703:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7023              		.loc 20 703 5 is_stmt 1 view .LVU1954
 703:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7024              		.loc 20 703 20 is_stmt 0 view .LVU1955
 7025 0316 0B48     		ldr	r0, .L404
 7026 0318 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7027              	.LVL405:
 7028 031c 2348     		ldr	r0, .L404+104
 7029 031e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7030              	.LVL406:
 704:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7031              		.loc 20 704 5 is_stmt 1 view .LVU1956
 704:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7032              		.loc 20 704 22 is_stmt 0 view .LVU1957
 7033 0322 B0EE480A 		vmov.f32	s0, s16
 7034 0326 2148     		ldr	r0, .L404+104
 7035 0328 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7036              	.LVL407:
 705:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7037              		.loc 20 705 5 is_stmt 1 view .LVU1958
 705:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7038              		.loc 20 705 23 is_stmt 0 view .LVU1959
 7039 032c 9FED1B0A 		vldr.32	s0, .L404+88
 7040 0330 1E48     		ldr	r0, .L404+104
 7041 0332 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7042              	.LVL408:
 706:Veno-Echo.cpp **** 
 7043              		.loc 20 706 5 is_stmt 1 view .LVU1960
 706:Veno-Echo.cpp **** 
 7044              		.loc 20 706 24 is_stmt 0 view .LVU1961
 7045 0336 9FED160A 		vldr.32	s0, .L404+76
 7046 033a 1C48     		ldr	r0, .L404+104
 7047 033c FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7048              	.LVL409:
 7049 0340 3AE0     		b	.L405
 7050              	.L406:
 7051 0342 00BF     		.align	2
 7052              	.L404:
 7053 0344 00000000 		.word	.LANCHOR4
 7054 0348 00000000 		.word	.LANCHOR90
 7055 034c 0AD7233C 		.word	1008981770
 7056 0350 00000000 		.word	.LANCHOR91
 7057 0354 00000000 		.word	.LANCHOR92
 7058 0358 00000000 		.word	.LANCHOR93
 7059 035c 00000000 		.word	.LANCHOR94
 7060 0360 00000000 		.word	.LANCHOR95
 7061 0364 00000000 		.word	.LANCHOR96
 7062 0368 00000000 		.word	.LANCHOR97
 7063 036c 00000000 		.word	.LANCHOR87
 7064 0370 00000000 		.word	.LANCHOR99
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 240


 7065 0374 00000000 		.word	0
 7066 0378 00000000 		.word	.LANCHOR101
 7067 037c 00000000 		.word	.LANCHOR102
 7068 0380 00000000 		.word	.LANCHOR103
 7069 0384 00000000 		.word	.LANCHOR64
 7070 0388 00000000 		.word	.LANCHOR46
 7071 038c 00803B46 		.word	1178304512
 7072 0390 3333333F 		.word	1060320051
 7073 0394 00000000 		.word	.LANCHOR47
 7074 0398 00000000 		.word	.LANCHOR34
 7075 039c 00004843 		.word	1128792064
 7076 03a0 00000000 		.word	.LANCHOR35
 7077 03a4 00000000 		.word	.LANCHOR48
 7078 03a8 00000000 		.word	.LANCHOR49
 7079 03ac 00000000 		.word	.LANCHOR36
 7080 03b0 00000000 		.word	.LANCHOR98
 7081 03b4 00000000 		.word	.LANCHOR100
 7082              	.L405:
 708:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7083              		.loc 20 708 5 is_stmt 1 view .LVU1962
 708:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7084              		.loc 20 708 20 is_stmt 0 view .LVU1963
 7085 03b8 7948     		ldr	r0, .L407
 7086 03ba FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7087              	.LVL410:
 7088 03be 7948     		ldr	r0, .L407+4
 7089 03c0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7090              	.LVL411:
 709:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7091              		.loc 20 709 5 is_stmt 1 view .LVU1964
 709:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7092              		.loc 20 709 22 is_stmt 0 view .LVU1965
 7093 03c4 B0EE480A 		vmov.f32	s0, s16
 7094 03c8 7648     		ldr	r0, .L407+4
 7095 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7096              	.LVL412:
 710:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7097              		.loc 20 710 5 is_stmt 1 view .LVU1966
 710:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7098              		.loc 20 710 23 is_stmt 0 view .LVU1967
 7099 03ce 9FED760A 		vldr.32	s0, .L407+8
 7100 03d2 7448     		ldr	r0, .L407+4
 7101 03d4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7102              	.LVL413:
 711:Veno-Echo.cpp **** 
 7103              		.loc 20 711 5 is_stmt 1 view .LVU1968
 711:Veno-Echo.cpp **** 
 7104              		.loc 20 711 24 is_stmt 0 view .LVU1969
 7105 03d8 9FED740A 		vldr.32	s0, .L407+12
 7106 03dc 7148     		ldr	r0, .L407+4
 7107 03de FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7108              	.LVL414:
 713:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7109              		.loc 20 713 5 is_stmt 1 view .LVU1970
 713:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7110              		.loc 20 713 21 is_stmt 0 view .LVU1971
 7111 03e2 6F48     		ldr	r0, .L407
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 241


 7112 03e4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7113              	.LVL415:
 7114 03e8 7148     		ldr	r0, .L407+16
 7115 03ea FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7116              	.LVL416:
 714:Veno-Echo.cpp **** 
 7117              		.loc 20 714 5 is_stmt 1 view .LVU1972
 714:Veno-Echo.cpp **** 
 7118              		.loc 20 714 21 is_stmt 0 view .LVU1973
 7119 03ee 6C48     		ldr	r0, .L407
 7120 03f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7121              	.LVL417:
 7122 03f4 6F48     		ldr	r0, .L407+20
 7123 03f6 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7124              	.LVL418:
 717:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7125              		.loc 20 717 5 is_stmt 1 view .LVU1974
 717:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7126              		.loc 20 717 13 is_stmt 0 view .LVU1975
 7127 03fa 6948     		ldr	r0, .L407
 7128 03fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7129              	.LVL419:
 7130 0400 F0EE407A 		vmov.f32	s15, s0
 7131              	.LVL420:
 7132              	.LBB1470:
 7133              	.LBI1470:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7134              		.loc 8 42 10 is_stmt 1 view .LVU1976
 7135              	.LBB1471:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7136              		.loc 8 44 9 view .LVU1977
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7137              		.loc 8 44 20 is_stmt 0 view .LVU1978
 7138 0404 6C4C     		ldr	r4, .L407+24
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7139              		.loc 8 46 20 view .LVU1979
 7140 0406 9FED6D0A 		vldr.32	s0, .L407+28
 7141              	.LVL421:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7142              		.loc 8 45 27 view .LVU1980
 7143 040a 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7144              		.loc 8 49 34 view .LVU1981
 7145 040e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7146              		.loc 8 47 20 view .LVU1982
 7147 0410 6560     		str	r5, [r4, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7148              		.loc 8 44 20 view .LVU1983
 7149 0412 C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7150              		.loc 8 45 9 is_stmt 1 view .LVU1984
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7151              		.loc 8 48 20 is_stmt 0 view .LVU1985
 7152 0416 84ED058A 		vstr.32	s16, [r4, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7153              		.loc 8 46 20 view .LVU1986
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 242


 7154 041a 84ED020A 		vstr.32	s0, [r4, #8]
 7155              	.LBE1471:
 7156              	.LBE1470:
 734:Veno-Echo.cpp **** 
 7157              		.loc 20 734 17 view .LVU1987
 7158 041e 684D     		ldr	r5, .L407+32
 7159              	.LBB1475:
 7160              	.LBB1472:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7161              		.loc 8 45 20 view .LVU1988
 7162 0420 84ED047A 		vstr.32	s14, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7163              		.loc 8 46 9 is_stmt 1 view .LVU1989
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7164              		.loc 8 47 9 view .LVU1990
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7165              		.loc 8 48 9 view .LVU1991
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7166              		.loc 8 49 9 view .LVU1992
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7167              		.loc 8 49 34 is_stmt 0 view .LVU1993
 7168 0424 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7169              	.LVL422:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7170              		.loc 8 52 20 view .LVU1994
 7171 0428 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7172              		.loc 8 49 34 view .LVU1995
 7173 042c F0EE407A 		vmov.f32	s15, s0
 7174              	.LBE1472:
 7175              	.LBE1475:
 7176              	.LBB1476:
 7177              	.LBB1477:
 7178              		.loc 8 61 34 view .LVU1996
 7179 0430 2046     		mov	r0, r4
 7180              	.LBE1477:
 7181              	.LBE1476:
 7182              	.LBB1481:
 7183              	.LBB1482:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7184              		.loc 8 72 19 view .LVU1997
 7185 0432 2670     		strb	r6, [r4]
 7186              	.LBE1482:
 7187              	.LBE1481:
 7188              	.LBB1484:
 7189              	.LBB1473:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 243


 7190              		.loc 8 52 20 view .LVU1998
 7191 0434 A384     		strh	r3, [r4, #36]	@ movhi
 7192              	.LBE1473:
 7193              	.LBE1484:
 7194              	.LBB1485:
 7195              	.LBB1478:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7196              		.loc 8 61 34 view .LVU1999
 7197 0436 B0EE680A 		vmov.f32	s0, s17
 7198              	.LBE1478:
 7199              	.LBE1485:
 7200              	.LBB1486:
 7201              	.LBB1474:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7202              		.loc 8 49 20 view .LVU2000
 7203 043a C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7204              		.loc 8 50 9 is_stmt 1 view .LVU2001
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7205              		.loc 8 51 9 view .LVU2002
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7206              		.loc 8 52 9 view .LVU2003
 7207              	.LVL423:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7208              		.loc 8 52 9 is_stmt 0 view .LVU2004
 7209              	.LBE1474:
 7210              	.LBE1486:
 718:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7211              		.loc 20 718 5 is_stmt 1 view .LVU2005
 7212              	.LBB1487:
 7213              	.LBI1481:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7214              		.loc 8 70 17 view .LVU2006
 7215              	.LBB1483:
 7216              		.loc 8 72 9 view .LVU2007
 7217              		.loc 8 72 9 is_stmt 0 view .LVU2008
 7218              	.LBE1483:
 7219              	.LBE1487:
 719:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7220              		.loc 20 719 5 is_stmt 1 view .LVU2009
 7221              	.LBB1488:
 7222              	.LBI1476:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7223              		.loc 8 58 17 view .LVU2010
 7224              	.LBB1479:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7225              		.loc 8 60 9 view .LVU2011
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7226              		.loc 8 61 9 view .LVU2012
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7227              		.loc 8 60 20 is_stmt 0 view .LVU2013
 7228 043e C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7229              		.loc 8 61 34 view .LVU2014
 7230 0442 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7231              	.LVL424:
 7232 0446 F0EE407A 		vmov.f32	s15, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 244


 7233              	.LBE1479:
 7234              	.LBE1488:
 722:Veno-Echo.cpp **** 
 7235              		.loc 20 722 19 view .LVU2015
 7236 044a 41F27072 		movw	r2, #6000
 7237 044e 5021     		movs	r1, #80
 7238 0450 B7EE040A 		vmov.f32	s0, #1.25e+0
 7239 0454 5B48     		ldr	r0, .L407+36
 7240              	.LBB1489:
 7241              	.LBB1490:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7242              		.loc 8 67 46 view .LVU2016
 7243 0456 C4ED018A 		vstr.32	s17, [r4, #4]
 7244              	.LBE1490:
 7245              	.LBE1489:
 7246              	.LBB1492:
 7247              	.LBB1480:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7248              		.loc 8 61 20 view .LVU2017
 7249 045a C4ED067A 		vstr.32	s15, [r4, #24]
 7250              	.LVL425:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7251              		.loc 8 61 20 view .LVU2018
 7252              	.LBE1480:
 7253              	.LBE1492:
 720:Veno-Echo.cpp **** 
 7254              		.loc 20 720 5 is_stmt 1 view .LVU2019
 7255              	.LBB1493:
 7256              	.LBI1489:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7257              		.loc 8 67 17 view .LVU2020
 7258              	.LBB1491:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7259              		.loc 8 67 41 view .LVU2021
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7260              		.loc 8 67 41 is_stmt 0 view .LVU2022
 7261              	.LBE1491:
 7262              	.LBE1493:
 722:Veno-Echo.cpp **** 
 7263              		.loc 20 722 5 is_stmt 1 view .LVU2023
 722:Veno-Echo.cpp **** 
 7264              		.loc 20 722 19 is_stmt 0 view .LVU2024
 7265 045e FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 7266              	.LVL426:
 726:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7267              		.loc 20 726 5 is_stmt 1 view .LVU2025
 726:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7268              		.loc 20 726 23 is_stmt 0 view .LVU2026
 7269 0462 1820     		movs	r0, #24
 734:Veno-Echo.cpp **** 
 7270              		.loc 20 734 17 view .LVU2027
 7271 0464 584C     		ldr	r4, .L407+40
 726:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7272              		.loc 20 726 23 view .LVU2028
 7273 0466 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7274              	.LVL427:
 7275 046a 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 245


 7276 046c 4C48     		ldr	r0, .L407
 7277 046e ADF84030 		strh	r3, [sp, #64]	@ movhi
 7278 0472 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7279              	.LVL428:
 7280 0476 1099     		ldr	r1, [sp, #64]
 7281 0478 5448     		ldr	r0, .L407+44
 7282 047a FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7283              	.LVL429:
 727:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7284              		.loc 20 727 5 is_stmt 1 view .LVU2029
 727:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7285              		.loc 20 727 27 is_stmt 0 view .LVU2030
 7286 047e 5148     		ldr	r0, .L407+36
 7287 0480 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7288              	.LVL430:
 7289 0484 5148     		ldr	r0, .L407+44
 7290 0486 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7291              	.LVL431:
 728:Veno-Echo.cpp **** 
 7292              		.loc 20 728 5 is_stmt 1 view .LVU2031
 728:Veno-Echo.cpp **** 
 7293              		.loc 20 728 29 is_stmt 0 view .LVU2032
 7294 048a 5048     		ldr	r0, .L407+44
 7295 048c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7296              	.LVL432:
 733:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7297              		.loc 20 733 5 is_stmt 1 view .LVU2033
 733:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7298              		.loc 20 733 18 is_stmt 0 view .LVU2034
 7299 0490 4B48     		ldr	r0, .L407+32
 7300 0492 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7301              	.LVL433:
 734:Veno-Echo.cpp **** 
 7302              		.loc 20 734 5 is_stmt 1 view .LVU2035
 734:Veno-Echo.cpp **** 
 7303              		.loc 20 734 17 is_stmt 0 view .LVU2036
 7304 0496 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7305 0498 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7306 049a 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7307 049e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 739:Veno-Echo.cpp **** 
 7308              		.loc 20 739 5 is_stmt 1 view .LVU2037
 741:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7309              		.loc 20 741 5 view .LVU2038
 741:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7310              		.loc 20 741 28 is_stmt 0 view .LVU2039
 7311 04a2 0F20     		movs	r0, #15
 7312 04a4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7313              	.LVL434:
 7314 04a8 0346     		mov	r3, r0	@ movhi
 7315 04aa 1CA8     		add	r0, sp, #112
 7316 04ac ADF84430 		strh	r3, [sp, #68]	@ movhi
 7317 04b0 1199     		ldr	r1, [sp, #68]
 7318 04b2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7319              	.LVL435:
 742:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7320              		.loc 20 742 5 is_stmt 1 view .LVU2040
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 246


 742:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7321              		.loc 20 742 28 is_stmt 0 view .LVU2041
 7322 04b6 1020     		movs	r0, #16
 7323 04b8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7324              	.LVL436:
 7325 04bc 0346     		mov	r3, r0	@ movhi
 7326 04be 0DF18100 		add	r0, sp, #129
 7327 04c2 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7328 04c6 1299     		ldr	r1, [sp, #72]
 7329 04c8 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7330              	.LVL437:
 743:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7331              		.loc 20 743 5 is_stmt 1 view .LVU2042
 743:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7332              		.loc 20 743 28 is_stmt 0 view .LVU2043
 7333 04cc 1120     		movs	r0, #17
 7334 04ce FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7335              	.LVL438:
 7336 04d2 0346     		mov	r3, r0	@ movhi
 7337 04d4 0DF19200 		add	r0, sp, #146
 7338 04d8 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7339 04dc 1399     		ldr	r1, [sp, #76]
 7340 04de FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7341              	.LVL439:
 744:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7342              		.loc 20 744 5 is_stmt 1 view .LVU2044
 744:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7343              		.loc 20 744 28 is_stmt 0 view .LVU2045
 7344 04e2 1220     		movs	r0, #18
 7345 04e4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7346              	.LVL440:
 7347 04e8 0346     		mov	r3, r0	@ movhi
 7348 04ea 0DF1A300 		add	r0, sp, #163
 7349 04ee ADF85030 		strh	r3, [sp, #80]	@ movhi
 7350 04f2 1499     		ldr	r1, [sp, #80]
 7351 04f4 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7352              	.LVL441:
 745:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7353              		.loc 20 745 5 is_stmt 1 view .LVU2046
 745:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7354              		.loc 20 745 28 is_stmt 0 view .LVU2047
 7355 04f8 1320     		movs	r0, #19
 7356 04fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7357              	.LVL442:
 7358 04fe 0346     		mov	r3, r0	@ movhi
 7359 0500 2DA8     		add	r0, sp, #180
 7360 0502 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7361 0506 1599     		ldr	r1, [sp, #84]
 7362 0508 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7363              	.LVL443:
 746:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7364              		.loc 20 746 5 is_stmt 1 view .LVU2048
 746:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7365              		.loc 20 746 28 is_stmt 0 view .LVU2049
 7366 050c 1420     		movs	r0, #20
 7367 050e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7368              	.LVL444:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 247


 7369 0512 0346     		mov	r3, r0	@ movhi
 7370 0514 0DF1C500 		add	r0, sp, #197
 7371 0518 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7372 051c 1699     		ldr	r1, [sp, #88]
 7373 051e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7374              	.LVL445:
 748:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7375              		.loc 20 748 5 is_stmt 1 view .LVU2050
 748:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7376              		.loc 20 748 28 is_stmt 0 view .LVU2051
 7377 0522 1620     		movs	r0, #22
 7378 0524 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7379              	.LVL446:
 7380 0528 0346     		mov	r3, r0	@ movhi
 7381 052a 0DF1D600 		add	r0, sp, #214
 7382 052e ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7383 0532 1799     		ldr	r1, [sp, #92]
 7384 0534 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7385              	.LVL447:
 749:Veno-Echo.cpp **** 
 7386              		.loc 20 749 5 is_stmt 1 view .LVU2052
 749:Veno-Echo.cpp **** 
 7387              		.loc 20 749 25 is_stmt 0 view .LVU2053
 7388 0538 1920     		movs	r0, #25
 7389 053a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7390              	.LVL448:
 7391 053e 0346     		mov	r3, r0	@ movhi
 7392 0540 0E20     		movs	r0, #14
 7393 0542 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7394 0546 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7395              	.LVL449:
 7396 054a 0346     		mov	r3, r0	@ movhi
 7397 054c 0D20     		movs	r0, #13
 7398 054e ADF86430 		strh	r3, [sp, #100]	@ movhi
 7399 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7400              	.LVL450:
 7401 0556 0346     		mov	r3, r0	@ movhi
 7402 0558 0C20     		movs	r0, #12
 7403 055a ADF86830 		strh	r3, [sp, #104]	@ movhi
 7404 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7405              	.LVL451:
 7406 0562 BDF86810 		ldrh	r1, [sp, #104]
 7407 0566 0822     		movs	r2, #8
 7408 0568 199B     		ldr	r3, [sp, #100]
 7409 056a ADF80400 		strh	r0, [sp, #4]	@ movhi
 7410 056e 0DF1E700 		add	r0, sp, #231
 7411 0572 ADF80010 		strh	r1, [sp]	@ movhi
 7412 0576 1899     		ldr	r1, [sp, #96]
 7413 0578 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7414              	.LVL452:
 752:Veno-Echo.cpp ****     hw.adc.Start();
 7415              		.loc 20 752 5 is_stmt 1 view .LVU2054
 752:Veno-Echo.cpp ****     hw.adc.Start();
 7416              		.loc 20 752 16 is_stmt 0 view .LVU2055
 7417 057c 1CA9     		add	r1, sp, #112
 7418 057e 0623     		movs	r3, #6
 7419 0580 0822     		movs	r2, #8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 248


 7420 0582 1348     		ldr	r0, .L407+48
 7421 0584 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7422              	.LVL453:
 753:Veno-Echo.cpp **** 
 7423              		.loc 20 753 5 is_stmt 1 view .LVU2056
 753:Veno-Echo.cpp **** 
 7424              		.loc 20 753 17 is_stmt 0 view .LVU2057
 7425 0588 1148     		ldr	r0, .L407+48
 7426 058a FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7427              	.LVL454:
 756:Veno-Echo.cpp ****     // start audio callback
 7428              		.loc 20 756 5 is_stmt 1 view .LVU2058
 756:Veno-Echo.cpp ****     // start audio callback
 7429              		.loc 20 756 25 is_stmt 0 view .LVU2059
 7430 058e 3146     		mov	r1, r6
 7431 0590 0348     		ldr	r0, .L407
 7432 0592 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7433              	.LVL455:
 758:Veno-Echo.cpp **** 
 7434              		.loc 20 758 5 is_stmt 1 view .LVU2060
 758:Veno-Echo.cpp **** 
 7435              		.loc 20 758 18 is_stmt 0 view .LVU2061
 7436 0596 0F49     		ldr	r1, .L407+52
 7437 0598 0148     		ldr	r0, .L407
 7438 059a FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7439              	.LVL456:
 7440              	.L402:
 762:Veno-Echo.cpp ****      {
 7441              		.loc 20 762 6 is_stmt 1 discriminator 1 view .LVU2062
 762:Veno-Echo.cpp ****      {
 7442              		.loc 20 762 6 discriminator 1 view .LVU2063
 762:Veno-Echo.cpp ****      {
 7443              		.loc 20 762 6 discriminator 1 view .LVU2064
 762:Veno-Echo.cpp ****      {
 7444              		.loc 20 762 6 discriminator 1 view .LVU2065
 7445 059e FEE7     		b	.L402
 7446              	.L408:
 7447              		.align	2
 7448              	.L407:
 7449 05a0 00000000 		.word	.LANCHOR4
 7450 05a4 00000000 		.word	.LANCHOR37
 7451 05a8 00004843 		.word	1128792064
 7452 05ac 3333333F 		.word	1060320051
 7453 05b0 00000000 		.word	.LANCHOR104
 7454 05b4 00000000 		.word	.LANCHOR105
 7455 05b8 00000000 		.word	.LANCHOR75
 7456 05bc 0000C842 		.word	1120403456
 7457 05c0 00000000 		.word	.LANCHOR106
 7458 05c4 00000000 		.word	.LANCHOR25
 7459 05c8 00000000 		.word	.LANCHOR15
 7460 05cc 00000000 		.word	.LANCHOR88
 7461 05d0 18000000 		.word	.LANCHOR4+24
 7462 05d4 00000000 		.word	_ZL13AudioCallbackPfS_j
 7463              		.cfi_endproc
 7464              	.LFE4311:
 7466              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 7467              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 249


 7468              		.p2align 2,,3
 7469              		.global	_Z13TurnOnAllLEDsv
 7470              		.syntax unified
 7471              		.thumb
 7472              		.thumb_func
 7473              		.fpu fpv5-d16
 7475              	_Z13TurnOnAllLEDsv:
 7476              	.LFB4334:
1819:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7477              		.loc 20 1819 1 view -0
 7478              		.cfi_startproc
 7479              		@ args = 0, pretend = 0, frame = 0
 7480              		@ frame_needed = 0, uses_anonymous_args = 0
1820:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7481              		.loc 20 1820 5 view .LVU2067
1819:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7482              		.loc 20 1819 1 is_stmt 0 view .LVU2068
 7483 0000 08B5     		push	{r3, lr}
 7484              		.cfi_def_cfa_offset 8
 7485              		.cfi_offset 3, -8
 7486              		.cfi_offset 14, -4
1820:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7487              		.loc 20 1820 26 view .LVU2069
 7488 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 7489 0006 1148     		ldr	r0, .L411
 7490 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7491              	.LVL457:
1821:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7492              		.loc 20 1821 5 is_stmt 1 view .LVU2070
1821:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7493              		.loc 20 1821 28 is_stmt 0 view .LVU2071
 7494 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 7495 0010 0F48     		ldr	r0, .L411+4
 7496 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7497              	.LVL458:
1822:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7498              		.loc 20 1822 5 is_stmt 1 view .LVU2072
1822:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7499              		.loc 20 1822 28 is_stmt 0 view .LVU2073
 7500 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 7501 001a 0E48     		ldr	r0, .L411+8
 7502 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7503              	.LVL459:
1823:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7504              		.loc 20 1823 5 is_stmt 1 view .LVU2074
1823:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7505              		.loc 20 1823 21 is_stmt 0 view .LVU2075
 7506 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 7507 0024 0C48     		ldr	r0, .L411+12
 7508 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7509              	.LVL460:
1824:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7510              		.loc 20 1824 5 is_stmt 1 view .LVU2076
1824:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7511              		.loc 20 1824 21 is_stmt 0 view .LVU2077
 7512 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 7513 002e 0B48     		ldr	r0, .L411+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 250


 7514 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7515              	.LVL461:
1825:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7516              		.loc 20 1825 5 is_stmt 1 view .LVU2078
1825:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7517              		.loc 20 1825 19 is_stmt 0 view .LVU2079
 7518 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 7519 0038 0948     		ldr	r0, .L411+20
 7520 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7521              	.LVL462:
1826:Veno-Echo.cpp **** }
 7522              		.loc 20 1826 5 is_stmt 1 view .LVU2080
1826:Veno-Echo.cpp **** }
 7523              		.loc 20 1826 19 is_stmt 0 view .LVU2081
 7524 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 7525 0042 0848     		ldr	r0, .L411+24
1827:Veno-Echo.cpp **** 
 7526              		.loc 20 1827 1 view .LVU2082
 7527 0044 BDE80840 		pop	{r3, lr}
 7528              		.cfi_restore 14
 7529              		.cfi_restore 3
 7530              		.cfi_def_cfa_offset 0
1826:Veno-Echo.cpp **** }
 7531              		.loc 20 1826 19 view .LVU2083
 7532 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7533              	.LVL463:
 7534              	.L412:
 7535              		.align	2
 7536              	.L411:
 7537 004c 00000000 		.word	.LANCHOR88
 7538 0050 04000000 		.word	.LANCHOR0+4
 7539 0054 04000000 		.word	.LANCHOR1+4
 7540 0058 00000000 		.word	.LANCHOR92
 7541 005c 00000000 		.word	.LANCHOR93
 7542 0060 00000000 		.word	.LANCHOR90
 7543 0064 00000000 		.word	.LANCHOR91
 7544              		.cfi_endproc
 7545              	.LFE4334:
 7547              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 7548              		.align	1
 7549              		.p2align 2,,3
 7550              		.global	_Z12ResetAllLEDsv
 7551              		.syntax unified
 7552              		.thumb
 7553              		.thumb_func
 7554              		.fpu fpv5-d16
 7556              	_Z12ResetAllLEDsv:
 7557              	.LFB4335:
1830:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7558              		.loc 20 1830 1 is_stmt 1 view -0
 7559              		.cfi_startproc
 7560              		@ args = 0, pretend = 0, frame = 0
 7561              		@ frame_needed = 0, uses_anonymous_args = 0
1831:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7562              		.loc 20 1831 5 view .LVU2085
1830:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7563              		.loc 20 1830 1 is_stmt 0 view .LVU2086
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 251


 7564 0000 08B5     		push	{r3, lr}
 7565              		.cfi_def_cfa_offset 8
 7566              		.cfi_offset 3, -8
 7567              		.cfi_offset 14, -4
1831:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7568              		.loc 20 1831 26 view .LVU2087
 7569 0002 9FED1E0A 		vldr.32	s0, .L420
 7570 0006 1E48     		ldr	r0, .L420+4
 7571 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7572              	.LVL464:
1832:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7573              		.loc 20 1832 5 is_stmt 1 view .LVU2088
1832:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7574              		.loc 20 1832 28 is_stmt 0 view .LVU2089
 7575 000c 9FED1B0A 		vldr.32	s0, .L420
 7576 0010 1C48     		ldr	r0, .L420+8
 7577 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7578              	.LVL465:
1833:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7579              		.loc 20 1833 5 is_stmt 1 view .LVU2090
1833:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7580              		.loc 20 1833 28 is_stmt 0 view .LVU2091
 7581 0016 1C48     		ldr	r0, .L420+12
 7582 0018 9FED180A 		vldr.32	s0, .L420
 7583 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7584              	.LVL466:
1834:Veno-Echo.cpp ****     {
 7585              		.loc 20 1834 5 is_stmt 1 view .LVU2092
1834:Veno-Echo.cpp ****     {
 7586              		.loc 20 1834 26 is_stmt 0 view .LVU2093
 7587 0020 1A48     		ldr	r0, .L420+16
 7588 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7589              	.LVL467:
1834:Veno-Echo.cpp ****     {
 7590              		.loc 20 1834 5 view .LVU2094
 7591 0026 C8B9     		cbnz	r0, .L414
1836:Veno-Echo.cpp ****     }
 7592              		.loc 20 1836 9 is_stmt 1 view .LVU2095
1836:Veno-Echo.cpp ****     }
 7593              		.loc 20 1836 25 is_stmt 0 view .LVU2096
 7594 0028 1848     		ldr	r0, .L420+16
 7595 002a 9FED140A 		vldr.32	s0, .L420
 7596 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7597              	.LVL468:
1843:Veno-Echo.cpp ****     {
 7598              		.loc 20 1843 5 is_stmt 1 view .LVU2097
1843:Veno-Echo.cpp ****     {
 7599              		.loc 20 1843 26 is_stmt 0 view .LVU2098
 7600 0032 1748     		ldr	r0, .L420+20
 7601 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7602              	.LVL469:
1843:Veno-Echo.cpp ****     {
 7603              		.loc 20 1843 5 view .LVU2099
 7604 0038 D0B9     		cbnz	r0, .L416
 7605              	.L419:
1845:Veno-Echo.cpp ****     }
 7606              		.loc 20 1845 9 is_stmt 1 view .LVU2100
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 252


1845:Veno-Echo.cpp ****     }
 7607              		.loc 20 1845 25 is_stmt 0 view .LVU2101
 7608 003a 9FED100A 		vldr.32	s0, .L420
 7609 003e 1448     		ldr	r0, .L420+20
 7610 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7611              	.LVL470:
 7612              	.L417:
1852:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7613              		.loc 20 1852 5 is_stmt 1 view .LVU2102
1852:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7614              		.loc 20 1852 19 is_stmt 0 view .LVU2103
 7615 0044 9FED0D0A 		vldr.32	s0, .L420
 7616 0048 1248     		ldr	r0, .L420+24
 7617 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7618              	.LVL471:
1853:Veno-Echo.cpp **** }
 7619              		.loc 20 1853 5 is_stmt 1 view .LVU2104
1853:Veno-Echo.cpp **** }
 7620              		.loc 20 1853 19 is_stmt 0 view .LVU2105
 7621 004e 9FED0B0A 		vldr.32	s0, .L420
 7622 0052 1148     		ldr	r0, .L420+28
1854:Veno-Echo.cpp **** 
 7623              		.loc 20 1854 1 view .LVU2106
 7624 0054 BDE80840 		pop	{r3, lr}
 7625              		.cfi_remember_state
 7626              		.cfi_restore 14
 7627              		.cfi_restore 3
 7628              		.cfi_def_cfa_offset 0
1853:Veno-Echo.cpp **** }
 7629              		.loc 20 1853 19 view .LVU2107
 7630 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7631              	.LVL472:
 7632              	.L414:
 7633              		.cfi_restore_state
1840:Veno-Echo.cpp ****     }
 7634              		.loc 20 1840 8 is_stmt 1 view .LVU2108
1840:Veno-Echo.cpp ****     }
 7635              		.loc 20 1840 24 is_stmt 0 view .LVU2109
 7636 005c 0B48     		ldr	r0, .L420+16
 7637 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 7638 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7639              	.LVL473:
1843:Veno-Echo.cpp ****     {
 7640              		.loc 20 1843 5 is_stmt 1 view .LVU2110
1843:Veno-Echo.cpp ****     {
 7641              		.loc 20 1843 26 is_stmt 0 view .LVU2111
 7642 0066 0A48     		ldr	r0, .L420+20
 7643 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7644              	.LVL474:
1843:Veno-Echo.cpp ****     {
 7645              		.loc 20 1843 5 view .LVU2112
 7646 006c 0028     		cmp	r0, #0
 7647 006e E4D0     		beq	.L419
 7648              	.L416:
1849:Veno-Echo.cpp ****     }
 7649              		.loc 20 1849 9 is_stmt 1 view .LVU2113
1849:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 253


 7650              		.loc 20 1849 25 is_stmt 0 view .LVU2114
 7651 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 7652 0074 0648     		ldr	r0, .L420+20
 7653 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7654              	.LVL475:
 7655 007a E3E7     		b	.L417
 7656              	.L421:
 7657              		.align	2
 7658              	.L420:
 7659 007c 00000000 		.word	0
 7660 0080 00000000 		.word	.LANCHOR88
 7661 0084 04000000 		.word	.LANCHOR0+4
 7662 0088 04000000 		.word	.LANCHOR1+4
 7663 008c 00000000 		.word	.LANCHOR92
 7664 0090 00000000 		.word	.LANCHOR93
 7665 0094 00000000 		.word	.LANCHOR90
 7666 0098 00000000 		.word	.LANCHOR91
 7667              		.cfi_endproc
 7668              	.LFE4335:
 7670              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 7671              		.align	1
 7672              		.p2align 2,,3
 7673              		.global	_Z14Update_Buttonsv
 7674              		.syntax unified
 7675              		.thumb
 7676              		.thumb_func
 7677              		.fpu fpv5-d16
 7679              	_Z14Update_Buttonsv:
 7680              	.LFB4329:
1566:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7681              		.loc 20 1566 1 is_stmt 1 view -0
 7682              		.cfi_startproc
 7683              		@ args = 0, pretend = 0, frame = 0
 7684              		@ frame_needed = 0, uses_anonymous_args = 0
1567:Veno-Echo.cpp ****     static uint32_t resetTime{};
 7685              		.loc 20 1567 5 view .LVU2116
1568:Veno-Echo.cpp ****     static int buttonstate{};
 7686              		.loc 20 1568 5 view .LVU2117
1569:Veno-Echo.cpp **** 
 7687              		.loc 20 1569 5 view .LVU2118
1571:Veno-Echo.cpp ****     Rev_R_sw.update();
 7688              		.loc 20 1571 5 view .LVU2119
1566:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7689              		.loc 20 1566 1 is_stmt 0 view .LVU2120
 7690 0000 70B5     		push	{r4, r5, r6, lr}
 7691              		.cfi_def_cfa_offset 16
 7692              		.cfi_offset 4, -16
 7693              		.cfi_offset 5, -12
 7694              		.cfi_offset 6, -8
 7695              		.cfi_offset 14, -4
1571:Veno-Echo.cpp ****     Rev_R_sw.update();
 7696              		.loc 20 1571 20 view .LVU2121
 7697 0002 6348     		ldr	r0, .L465
 7698 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7699              	.LVL476:
1572:Veno-Echo.cpp ****     LPF_sw.update();
 7700              		.loc 20 1572 5 is_stmt 1 view .LVU2122
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 254


1572:Veno-Echo.cpp ****     LPF_sw.update();
 7701              		.loc 20 1572 20 is_stmt 0 view .LVU2123
 7702 0008 6248     		ldr	r0, .L465+4
 7703 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7704              	.LVL477:
1573:Veno-Echo.cpp ****     HPF_sw.update();
 7705              		.loc 20 1573 5 is_stmt 1 view .LVU2124
1573:Veno-Echo.cpp ****     HPF_sw.update();
 7706              		.loc 20 1573 18 is_stmt 0 view .LVU2125
 7707 000e 6248     		ldr	r0, .L465+8
 7708 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7709              	.LVL478:
1574:Veno-Echo.cpp ****     Tap_Button.update();
 7710              		.loc 20 1574 5 is_stmt 1 view .LVU2126
1577:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7711              		.loc 20 1577 26 is_stmt 0 view .LVU2127
 7712 0014 614C     		ldr	r4, .L465+12
1574:Veno-Echo.cpp ****     Tap_Button.update();
 7713              		.loc 20 1574 18 view .LVU2128
 7714 0016 6248     		ldr	r0, .L465+16
 7715 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7716              	.LVL479:
1575:Veno-Echo.cpp **** 
 7717              		.loc 20 1575 5 is_stmt 1 view .LVU2129
1575:Veno-Echo.cpp **** 
 7718              		.loc 20 1575 22 is_stmt 0 view .LVU2130
 7719 001c 6148     		ldr	r0, .L465+20
 7720 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7721              	.LVL480:
1577:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7722              		.loc 20 1577 5 is_stmt 1 view .LVU2131
1577:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7723              		.loc 20 1577 26 is_stmt 0 view .LVU2132
 7724 0022 2046     		mov	r0, r4
 7725 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7726              	.LVL481:
1578:Veno-Echo.cpp ****     //TapButton.Debounce();
 7727              		.loc 20 1578 5 is_stmt 1 view .LVU2133
1578:Veno-Echo.cpp ****     //TapButton.Debounce();
 7728              		.loc 20 1578 26 is_stmt 0 view .LVU2134
 7729 0028 5F48     		ldr	r0, .L465+24
 7730 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7731              	.LVL482:
1580:Veno-Echo.cpp ****     ClockIn.Debounce();
 7732              		.loc 20 1580 5 is_stmt 1 view .LVU2135
1580:Veno-Echo.cpp ****     ClockIn.Debounce();
 7733              		.loc 20 1580 18 is_stmt 0 view .LVU2136
 7734 002e 5F48     		ldr	r0, .L465+28
 7735 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7736              	.LVL483:
1581:Veno-Echo.cpp ****     //gate inputs
 7737              		.loc 20 1581 5 is_stmt 1 view .LVU2137
1581:Veno-Echo.cpp ****     //gate inputs
 7738              		.loc 20 1581 21 is_stmt 0 view .LVU2138
 7739 0034 5E48     		ldr	r0, .L465+32
 7740 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7741              	.LVL484:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 255


1583:Veno-Echo.cpp ****     {
 7742              		.loc 20 1583 5 is_stmt 1 view .LVU2139
 7743              		.loc 1 69 38 view .LVU2140
1583:Veno-Echo.cpp ****     {
 7744              		.loc 20 1583 5 is_stmt 0 view .LVU2141
 7745 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 7746 003c 7F2B     		cmp	r3, #127
 7747 003e 00F09280 		beq	.L457
 7748              	.L423:
1589:Veno-Echo.cpp ****     {
 7749              		.loc 20 1589 5 is_stmt 1 view .LVU2142
 7750              	.LVL485:
 7751              		.loc 1 69 38 view .LVU2143
1589:Veno-Echo.cpp ****     {
 7752              		.loc 20 1589 32 is_stmt 0 view .LVU2144
 7753 0042 594B     		ldr	r3, .L465+24
1589:Veno-Echo.cpp ****     {
 7754              		.loc 20 1589 5 view .LVU2145
 7755 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7756 0046 7F2B     		cmp	r3, #127
 7757 0048 00F08980 		beq	.L458
 7758              	.L424:
1597:Veno-Echo.cpp ****     {
 7759              		.loc 20 1597 5 is_stmt 1 view .LVU2146
1597:Veno-Echo.cpp ****     {
 7760              		.loc 20 1597 28 is_stmt 0 view .LVU2147
 7761 004c 5048     		ldr	r0, .L465
1599:Veno-Echo.cpp ****         if (buttonstate == 3)
 7762              		.loc 20 1599 21 view .LVU2148
 7763 004e 594C     		ldr	r4, .L465+36
1597:Veno-Echo.cpp ****     {
 7764              		.loc 20 1597 28 view .LVU2149
 7765 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7766              	.LVL486:
1597:Veno-Echo.cpp ****     {
 7767              		.loc 20 1597 5 view .LVU2150
 7768 0054 28B1     		cbz	r0, .L426
1599:Veno-Echo.cpp ****         if (buttonstate == 3)
 7769              		.loc 20 1599 9 is_stmt 1 view .LVU2151
1599:Veno-Echo.cpp ****         if (buttonstate == 3)
 7770              		.loc 20 1599 21 is_stmt 0 view .LVU2152
 7771 0056 2368     		ldr	r3, [r4]
 7772 0058 0133     		adds	r3, r3, #1
1600:Veno-Echo.cpp ****         {
 7773              		.loc 20 1600 9 view .LVU2153
 7774 005a 032B     		cmp	r3, #3
1599:Veno-Echo.cpp ****         if (buttonstate == 3)
 7775              		.loc 20 1599 21 view .LVU2154
 7776 005c 2360     		str	r3, [r4]
1600:Veno-Echo.cpp ****         {
 7777              		.loc 20 1600 9 is_stmt 1 view .LVU2155
 7778 005e 00F08680 		beq	.L459
 7779              	.L426:
1606:Veno-Echo.cpp ****     {
 7780              		.loc 20 1606 5 view .LVU2156
1606:Veno-Echo.cpp ****     {
 7781              		.loc 20 1606 29 is_stmt 0 view .LVU2157
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 256


 7782 0062 4B48     		ldr	r0, .L465
 7783 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7784              	.LVL487:
1606:Veno-Echo.cpp ****     {
 7785              		.loc 20 1606 5 view .LVU2158
 7786 0068 10B1     		cbz	r0, .L428
1608:Veno-Echo.cpp ****     }
 7787              		.loc 20 1608 9 is_stmt 1 view .LVU2159
1608:Veno-Echo.cpp ****     }
 7788              		.loc 20 1608 21 is_stmt 0 view .LVU2160
 7789 006a 2368     		ldr	r3, [r4]
 7790 006c 013B     		subs	r3, r3, #1
 7791 006e 2360     		str	r3, [r4]
 7792              	.L428:
1611:Veno-Echo.cpp ****     {
 7793              		.loc 20 1611 5 is_stmt 1 view .LVU2161
1611:Veno-Echo.cpp ****     {
 7794              		.loc 20 1611 28 is_stmt 0 view .LVU2162
 7795 0070 4848     		ldr	r0, .L465+4
 7796 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7797              	.LVL488:
1611:Veno-Echo.cpp ****     {
 7798              		.loc 20 1611 5 view .LVU2163
 7799 0076 20B1     		cbz	r0, .L430
1613:Veno-Echo.cpp ****         if (buttonstate == 3)
 7800              		.loc 20 1613 9 is_stmt 1 view .LVU2164
1613:Veno-Echo.cpp ****         if (buttonstate == 3)
 7801              		.loc 20 1613 21 is_stmt 0 view .LVU2165
 7802 0078 2368     		ldr	r3, [r4]
 7803 007a 0133     		adds	r3, r3, #1
1614:Veno-Echo.cpp ****         {
 7804              		.loc 20 1614 9 view .LVU2166
 7805 007c 032B     		cmp	r3, #3
1613:Veno-Echo.cpp ****         if (buttonstate == 3)
 7806              		.loc 20 1613 21 view .LVU2167
 7807 007e 2360     		str	r3, [r4]
1614:Veno-Echo.cpp ****         {
 7808              		.loc 20 1614 9 is_stmt 1 view .LVU2168
 7809 0080 7AD0     		beq	.L460
 7810              	.L430:
1620:Veno-Echo.cpp ****     {
 7811              		.loc 20 1620 5 view .LVU2169
1620:Veno-Echo.cpp ****     {
 7812              		.loc 20 1620 29 is_stmt 0 view .LVU2170
 7813 0082 4448     		ldr	r0, .L465+4
 7814 0084 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7815              	.LVL489:
1620:Veno-Echo.cpp ****     {
 7816              		.loc 20 1620 5 view .LVU2171
 7817 0088 10B1     		cbz	r0, .L432
1622:Veno-Echo.cpp ****     }
 7818              		.loc 20 1622 9 is_stmt 1 view .LVU2172
1622:Veno-Echo.cpp ****     }
 7819              		.loc 20 1622 21 is_stmt 0 view .LVU2173
 7820 008a 2368     		ldr	r3, [r4]
 7821 008c 013B     		subs	r3, r3, #1
 7822 008e 2360     		str	r3, [r4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 257


 7823              	.L432:
1625:Veno-Echo.cpp ****     {
 7824              		.loc 20 1625 5 is_stmt 1 view .LVU2174
1625:Veno-Echo.cpp ****     {
 7825              		.loc 20 1625 30 is_stmt 0 view .LVU2175
 7826 0090 4448     		ldr	r0, .L465+20
 7827 0092 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7828              	.LVL490:
1625:Veno-Echo.cpp ****     {
 7829              		.loc 20 1625 5 view .LVU2176
 7830 0096 0028     		cmp	r0, #0
 7831 0098 4CD1     		bne	.L461
 7832              	.L434:
1644:Veno-Echo.cpp ****     {
 7833              		.loc 20 1644 5 is_stmt 1 view .LVU2177
1644:Veno-Echo.cpp ****     {
 7834              		.loc 20 1644 31 is_stmt 0 view .LVU2178
 7835 009a 4248     		ldr	r0, .L465+20
 7836 009c FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7837              	.LVL491:
1644:Veno-Echo.cpp ****     {
 7838              		.loc 20 1644 5 view .LVU2179
 7839 00a0 38B1     		cbz	r0, .L437
1646:Veno-Echo.cpp ****         buttonstate -= 1;
 7840              		.loc 20 1646 9 is_stmt 1 view .LVU2180
1647:Veno-Echo.cpp ****         mute = false;
 7841              		.loc 20 1647 21 is_stmt 0 view .LVU2181
 7842 00a2 2368     		ldr	r3, [r4]
1646:Veno-Echo.cpp ****         buttonstate -= 1;
 7843              		.loc 20 1646 15 view .LVU2182
 7844 00a4 0022     		movs	r2, #0
 7845 00a6 4448     		ldr	r0, .L465+40
1647:Veno-Echo.cpp ****         mute = false;
 7846              		.loc 20 1647 21 view .LVU2183
 7847 00a8 013B     		subs	r3, r3, #1
1648:Veno-Echo.cpp ****     }
 7848              		.loc 20 1648 14 view .LVU2184
 7849 00aa 4449     		ldr	r1, .L465+44
1646:Veno-Echo.cpp ****         buttonstate -= 1;
 7850              		.loc 20 1646 15 view .LVU2185
 7851 00ac 0270     		strb	r2, [r0]
1647:Veno-Echo.cpp ****         mute = false;
 7852              		.loc 20 1647 9 is_stmt 1 view .LVU2186
1647:Veno-Echo.cpp ****         mute = false;
 7853              		.loc 20 1647 21 is_stmt 0 view .LVU2187
 7854 00ae 2360     		str	r3, [r4]
1648:Veno-Echo.cpp ****     }
 7855              		.loc 20 1648 9 is_stmt 1 view .LVU2188
1648:Veno-Echo.cpp ****     }
 7856              		.loc 20 1648 14 is_stmt 0 view .LVU2189
 7857 00b0 0A70     		strb	r2, [r1]
 7858              	.L437:
1651:Veno-Echo.cpp ****     {
 7859              		.loc 20 1651 5 is_stmt 1 view .LVU2190
1651:Veno-Echo.cpp ****     {
 7860              		.loc 20 1651 28 is_stmt 0 view .LVU2191
 7861 00b2 3C48     		ldr	r0, .L465+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 258


 7862 00b4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7863              	.LVL492:
1651:Veno-Echo.cpp ****     {
 7864              		.loc 20 1651 5 view .LVU2192
 7865 00b8 60B9     		cbnz	r0, .L462
 7866              	.L439:
1659:Veno-Echo.cpp ****     {
 7867              		.loc 20 1659 5 is_stmt 1 view .LVU2193
 7868 00ba 2368     		ldr	r3, [r4]
 7869 00bc 032B     		cmp	r3, #3
 7870 00be 16D0     		beq	.L463
 7871              	.L442:
1675:Veno-Echo.cpp **** 
 7872              		.loc 20 1675 5 view .LVU2194
 7873              	.LBB1494:
 7874              	.LBI1494:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 7875              		.loc 1 75 17 view .LVU2195
 7876              	.LVL493:
 7877              	.LBB1495:
 7878              		.loc 1 75 35 view .LVU2196
 7879              	.LBE1495:
 7880              	.LBE1494:
1675:Veno-Echo.cpp **** 
 7881              		.loc 20 1675 31 is_stmt 0 view .LVU2197
 7882 00c0 3A4B     		ldr	r3, .L465+28
1675:Veno-Echo.cpp **** 
 7883              		.loc 20 1675 14 view .LVU2198
 7884 00c2 3F4A     		ldr	r2, .L465+48
 7885              	.LBB1497:
 7886              	.LBB1496:
 7887              		.loc 1 75 52 view .LVU2199
 7888 00c4 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7889 00c6 A3F1FF03 		sub	r3, #255
 7890 00ca B3FA83F3 		clz	r3, r3
 7891 00ce 5B09     		lsrs	r3, r3, #5
 7892 00d0 1370     		strb	r3, [r2]
 7893              	.LBE1496:
 7894              	.LBE1497:
1680:Veno-Echo.cpp **** 
 7895              		.loc 20 1680 1 view .LVU2200
 7896 00d2 70BD     		pop	{r4, r5, r6, pc}
 7897              	.LVL494:
 7898              	.L462:
1653:Veno-Echo.cpp ****         {
 7899              		.loc 20 1653 9 is_stmt 1 view .LVU2201
1653:Veno-Echo.cpp ****         {
 7900              		.loc 20 1653 29 is_stmt 0 view .LVU2202
 7901 00d4 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7902              	.LVL495:
1653:Veno-Echo.cpp ****         {
 7903              		.loc 20 1653 32 view .LVU2203
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 259


 7904 00d8 3A4B     		ldr	r3, .L465+52
 7905 00da 1B68     		ldr	r3, [r3]
 7906 00dc C01A     		subs	r0, r0, r3
1653:Veno-Echo.cpp ****         {
 7907              		.loc 20 1653 9 view .LVU2204
 7908 00de 3228     		cmp	r0, #50
 7909 00e0 EBD9     		bls	.L439
1655:Veno-Echo.cpp ****         } 
 7910              		.loc 20 1655 13 is_stmt 1 view .LVU2205
1655:Veno-Echo.cpp ****         } 
 7911              		.loc 20 1655 19 is_stmt 0 view .LVU2206
 7912 00e2 354B     		ldr	r3, .L465+40
 7913 00e4 0122     		movs	r2, #1
 7914 00e6 1A70     		strb	r2, [r3]
1659:Veno-Echo.cpp ****     {
 7915              		.loc 20 1659 5 is_stmt 1 view .LVU2207
 7916 00e8 2368     		ldr	r3, [r4]
 7917 00ea 032B     		cmp	r3, #3
 7918 00ec E8D1     		bne	.L442
 7919              	.L463:
1662:Veno-Echo.cpp ****             {
 7920              		.loc 20 1662 13 view .LVU2208
1662:Veno-Echo.cpp ****             {
 7921              		.loc 20 1662 36 is_stmt 0 view .LVU2209
 7922 00ee 364E     		ldr	r6, .L465+56
1662:Veno-Echo.cpp ****             {
 7923              		.loc 20 1662 33 view .LVU2210
 7924 00f0 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7925              	.LVL496:
1662:Veno-Echo.cpp ****             {
 7926              		.loc 20 1662 13 view .LVU2211
 7927 00f4 40F6B833 		movw	r3, #3000
1662:Veno-Echo.cpp ****             {
 7928              		.loc 20 1662 36 view .LVU2212
 7929 00f8 3268     		ldr	r2, [r6]
 7930 00fa 801A     		subs	r0, r0, r2
1662:Veno-Echo.cpp ****             {
 7931              		.loc 20 1662 13 view .LVU2213
 7932 00fc 9842     		cmp	r0, r3
 7933 00fe DFD9     		bls	.L442
1664:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7934              		.loc 20 1664 17 is_stmt 1 view .LVU2214
1664:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7935              		.loc 20 1664 32 is_stmt 0 view .LVU2215
 7936 0100 2348     		ldr	r0, .L465
 7937 0102 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7938              	.LVL497:
1665:Veno-Echo.cpp ****                 ResetAllLEDs();
 7939              		.loc 20 1665 17 is_stmt 1 view .LVU2216
1665:Veno-Echo.cpp ****                 ResetAllLEDs();
 7940              		.loc 20 1665 32 is_stmt 0 view .LVU2217
 7941 0106 2348     		ldr	r0, .L465+4
 7942 0108 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7943              	.LVL498:
1666:Veno-Echo.cpp ****                 //don't let reset or shift update
 7944              		.loc 20 1666 17 is_stmt 1 view .LVU2218
1670:Veno-Echo.cpp ****                 resetTime = System::GetNow();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 260


 7945              		.loc 20 1670 29 is_stmt 0 view .LVU2219
 7946 010c 2F4D     		ldr	r5, .L465+60
1666:Veno-Echo.cpp ****                 //don't let reset or shift update
 7947              		.loc 20 1666 29 view .LVU2220
 7948 010e FFF7FEFF 		bl	_Z12ResetAllLEDsv
 7949              	.LVL499:
1668:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7950              		.loc 20 1668 17 is_stmt 1 view .LVU2221
1668:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7951              		.loc 20 1668 23 is_stmt 0 view .LVU2222
 7952 0112 294B     		ldr	r3, .L465+40
 7953 0114 0022     		movs	r2, #0
1669:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7954              		.loc 20 1669 30 view .LVU2223
 7955 0116 2D48     		ldr	r0, .L465+60
1670:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7956              		.loc 20 1670 29 view .LVU2224
 7957 0118 2D4C     		ldr	r4, .L465+64
1668:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7958              		.loc 20 1668 23 view .LVU2225
 7959 011a 1A70     		strb	r2, [r3]
1669:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7960              		.loc 20 1669 17 is_stmt 1 view .LVU2226
1669:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7961              		.loc 20 1669 30 is_stmt 0 view .LVU2227
 7962 011c FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7963              	.LVL500:
1670:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7964              		.loc 20 1670 17 is_stmt 1 view .LVU2228
1670:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7965              		.loc 20 1670 29 is_stmt 0 view .LVU2229
 7966 0120 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7967 0122 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7968 0124 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7969 0128 84E80F00 		stm	r4, {r0, r1, r2, r3}
1671:Veno-Echo.cpp ****             }
 7970              		.loc 20 1671 17 is_stmt 1 view .LVU2230
1671:Veno-Echo.cpp ****             }
 7971              		.loc 20 1671 43 is_stmt 0 view .LVU2231
 7972 012c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7973              	.LVL501:
1671:Veno-Echo.cpp ****             }
 7974              		.loc 20 1671 27 view .LVU2232
 7975 0130 3060     		str	r0, [r6]
 7976 0132 C5E7     		b	.L442
 7977              	.L461:
1627:Veno-Echo.cpp ****         {
 7978              		.loc 20 1627 9 is_stmt 1 view .LVU2233
1627:Veno-Echo.cpp ****         {
 7979              		.loc 20 1627 25 is_stmt 0 view .LVU2234
 7980 0134 2748     		ldr	r0, .L465+68
 7981 0136 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 7982              	.LVL502:
1627:Veno-Echo.cpp ****         {
 7983              		.loc 20 1627 9 view .LVU2235
 7984 013a 10BB     		cbnz	r0, .L464
 7985              	.L435:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 261


1631:Veno-Echo.cpp ****         
 7986              		.loc 20 1631 9 is_stmt 1 view .LVU2236
1631:Veno-Echo.cpp ****         
 7987              		.loc 20 1631 33 is_stmt 0 view .LVU2237
 7988 013c 2648     		ldr	r0, .L465+72
 7989 013e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7990              	.LVL503:
1634:Veno-Echo.cpp ****         buttonstate += 1;
 7991              		.loc 20 1634 9 is_stmt 1 view .LVU2238
1634:Veno-Echo.cpp ****         buttonstate += 1;
 7992              		.loc 20 1634 35 is_stmt 0 view .LVU2239
 7993 0142 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7994              	.LVL504:
1635:Veno-Echo.cpp ****         
 7995              		.loc 20 1635 21 view .LVU2240
 7996 0146 2368     		ldr	r3, [r4]
1634:Veno-Echo.cpp ****         buttonstate += 1;
 7997              		.loc 20 1634 19 view .LVU2241
 7998 0148 1E4A     		ldr	r2, .L465+52
1635:Veno-Echo.cpp ****         
 7999              		.loc 20 1635 21 view .LVU2242
 8000 014a 0133     		adds	r3, r3, #1
1634:Veno-Echo.cpp ****         buttonstate += 1;
 8001              		.loc 20 1634 19 view .LVU2243
 8002 014c 1060     		str	r0, [r2]
1635:Veno-Echo.cpp ****         
 8003              		.loc 20 1635 9 is_stmt 1 view .LVU2244
1637:Veno-Echo.cpp ****         {
 8004              		.loc 20 1637 9 is_stmt 0 view .LVU2245
 8005 014e 032B     		cmp	r3, #3
1635:Veno-Echo.cpp ****         
 8006              		.loc 20 1635 21 view .LVU2246
 8007 0150 2360     		str	r3, [r4]
1637:Veno-Echo.cpp ****         {
 8008              		.loc 20 1637 9 is_stmt 1 view .LVU2247
 8009 0152 A2D1     		bne	.L434
1639:Veno-Echo.cpp ****         }
 8010              		.loc 20 1639 13 view .LVU2248
1639:Veno-Echo.cpp ****         }
 8011              		.loc 20 1639 39 is_stmt 0 view .LVU2249
 8012 0154 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8013              	.LVL505:
1639:Veno-Echo.cpp ****         }
 8014              		.loc 20 1639 23 view .LVU2250
 8015 0158 1B4B     		ldr	r3, .L465+56
 8016 015a 1860     		str	r0, [r3]
 8017 015c 9DE7     		b	.L434
 8018              	.L458:
1591:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8019              		.loc 20 1591 9 is_stmt 1 view .LVU2251
1591:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8020              		.loc 20 1591 24 is_stmt 0 view .LVU2252
 8021 015e 0D48     		ldr	r0, .L465+4
 8022 0160 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8023              	.LVL506:
 8024 0164 72E7     		b	.L424
 8025              	.LVL507:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 262


 8026              	.L457:
1585:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8027              		.loc 20 1585 9 is_stmt 1 view .LVU2253
1585:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8028              		.loc 20 1585 24 is_stmt 0 view .LVU2254
 8029 0166 0A48     		ldr	r0, .L465
 8030 0168 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8031              	.LVL508:
 8032 016c 69E7     		b	.L423
 8033              	.LVL509:
 8034              	.L459:
1602:Veno-Echo.cpp ****         }
 8035              		.loc 20 1602 13 is_stmt 1 view .LVU2255
1602:Veno-Echo.cpp ****         }
 8036              		.loc 20 1602 39 is_stmt 0 view .LVU2256
 8037 016e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8038              	.LVL510:
1602:Veno-Echo.cpp ****         }
 8039              		.loc 20 1602 23 view .LVU2257
 8040 0172 154B     		ldr	r3, .L465+56
 8041 0174 1860     		str	r0, [r3]
 8042 0176 74E7     		b	.L426
 8043              	.L460:
1616:Veno-Echo.cpp ****         }
 8044              		.loc 20 1616 13 is_stmt 1 view .LVU2258
1616:Veno-Echo.cpp ****         }
 8045              		.loc 20 1616 39 is_stmt 0 view .LVU2259
 8046 0178 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8047              	.LVL511:
1616:Veno-Echo.cpp ****         }
 8048              		.loc 20 1616 23 view .LVU2260
 8049 017c 124B     		ldr	r3, .L465+56
 8050 017e 1860     		str	r0, [r3]
 8051 0180 7FE7     		b	.L430
 8052              	.L464:
1629:Veno-Echo.cpp ****         }
 8053              		.loc 20 1629 13 is_stmt 1 view .LVU2261
1629:Veno-Echo.cpp ****         }
 8054              		.loc 20 1629 35 is_stmt 0 view .LVU2262
 8055 0182 1448     		ldr	r0, .L465+68
 8056 0184 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8057              	.LVL512:
 8058 0188 1348     		ldr	r0, .L465+72
 8059 018a FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8060              	.LVL513:
 8061 018e D5E7     		b	.L435
 8062              	.L466:
 8063              		.align	2
 8064              	.L465:
 8065 0190 00000000 		.word	.LANCHOR92
 8066 0194 00000000 		.word	.LANCHOR93
 8067 0198 00000000 		.word	.LANCHOR90
 8068 019c 00000000 		.word	.LANCHOR95
 8069 01a0 00000000 		.word	.LANCHOR91
 8070 01a4 00000000 		.word	.LANCHOR94
 8071 01a8 00000000 		.word	.LANCHOR96
 8072 01ac 00000000 		.word	.LANCHOR97
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 263


 8073 01b0 00000000 		.word	.LANCHOR87
 8074 01b4 00000000 		.word	.LANCHOR107
 8075 01b8 00000000 		.word	.LANCHOR7
 8076 01bc 00000000 		.word	.LANCHOR110
 8077 01c0 00000000 		.word	.LANCHOR12
 8078 01c4 00000000 		.word	.LANCHOR109
 8079 01c8 00000000 		.word	.LANCHOR108
 8080 01cc 00000000 		.word	.LANCHOR106
 8081 01d0 00000000 		.word	.LANCHOR15
 8082 01d4 00000000 		.word	.LANCHOR25
 8083 01d8 00000000 		.word	.LANCHOR88
 8084              		.cfi_endproc
 8085              	.LFE4329:
 8087              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 8088              		.align	1
 8089              		.p2align 2,,3
 8090              		.syntax unified
 8091              		.thumb
 8092              		.thumb_func
 8093              		.fpu fpv5-d16
 8095              	_ZL13AudioCallbackPfS_j:
 8096              	.LVL514:
 8097              	.LFB4309:
 239:Veno-Echo.cpp **** 
 8098              		.loc 20 239 1 is_stmt 1 view -0
 8099              		.cfi_startproc
 8100              		@ args = 0, pretend = 0, frame = 72
 8101              		@ frame_needed = 0, uses_anonymous_args = 0
 250:Veno-Echo.cpp **** 
 8102              		.loc 20 250 1 view .LVU2264
 268:Veno-Echo.cpp **** 
 8103              		.loc 20 268 1 view .LVU2265
 268:Veno-Echo.cpp **** 
 8104              		.loc 20 268 9 is_stmt 0 view .LVU2266
 8105 0000 DFF894C0 		ldr	ip, .L584+8
 268:Veno-Echo.cpp **** 
 8106              		.loc 20 268 20 view .LVU2267
 8107 0004 DCF80030 		ldr	r3, [ip]
 239:Veno-Echo.cpp **** 
 8108              		.loc 20 239 1 view .LVU2268
 8109 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8110              		.cfi_def_cfa_offset 36
 8111              		.cfi_offset 4, -36
 8112              		.cfi_offset 5, -32
 8113              		.cfi_offset 6, -28
 8114              		.cfi_offset 7, -24
 8115              		.cfi_offset 8, -20
 8116              		.cfi_offset 9, -16
 8117              		.cfi_offset 10, -12
 8118              		.cfi_offset 11, -8
 8119              		.cfi_offset 14, -4
 268:Veno-Echo.cpp **** 
 8120              		.loc 20 268 20 view .LVU2269
 8121 000c 0133     		adds	r3, r3, #1
 268:Veno-Echo.cpp **** 
 8122              		.loc 20 268 25 view .LVU2270
 8123 000e 204C     		ldr	r4, .L584
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 264


 239:Veno-Echo.cpp **** 
 8124              		.loc 20 239 1 view .LVU2271
 8125 0010 0646     		mov	r6, r0
 8126 0012 1546     		mov	r5, r2
 268:Veno-Echo.cpp **** 
 8127              		.loc 20 268 25 view .LVU2272
 8128 0014 84FB0302 		smull	r0, r2, r4, r3
 8129              	.LVL515:
 268:Veno-Echo.cpp **** 
 8130              		.loc 20 268 25 view .LVU2273
 8131 0018 DC17     		asrs	r4, r3, #31
 239:Veno-Echo.cpp **** 
 8132              		.loc 20 239 1 view .LVU2274
 8133 001a 0F46     		mov	r7, r1
 8134              	.LBB1587:
 8135              	.LBB1588:
 8136              	.LBB1589:
 8137              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 265


  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 266


  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 267


 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 268


 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 269


 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 270


 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 271


 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 8138              		.loc 24 419 24 view .LVU2275
 8139 001c 1D49     		ldr	r1, .L584+4
 8140              	.LVL516:
 8141              		.loc 24 419 24 view .LVU2276
 8142              	.LBE1589:
 8143              	.LBE1588:
 8144              	.LBE1587:
 268:Veno-Echo.cpp **** 
 8145              		.loc 20 268 25 view .LVU2277
 8146 001e 1A44     		add	r2, r2, r3
 8147 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 8148 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 8149 0028 1B1B     		subs	r3, r3, r4
 239:Veno-Echo.cpp **** 
 8150              		.loc 20 239 1 view .LVU2278
 8151 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 8152              		.cfi_def_cfa_offset 92
 8153              		.cfi_offset 80, -92
 8154              		.cfi_offset 81, -88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 272


 8155              		.cfi_offset 82, -84
 8156              		.cfi_offset 83, -80
 8157              		.cfi_offset 84, -76
 8158              		.cfi_offset 85, -72
 8159              		.cfi_offset 86, -68
 8160              		.cfi_offset 87, -64
 8161              		.cfi_offset 88, -60
 8162              		.cfi_offset 89, -56
 8163              		.cfi_offset 90, -52
 8164              		.cfi_offset 91, -48
 8165              		.cfi_offset 92, -44
 8166              		.cfi_offset 93, -40
 268:Veno-Echo.cpp **** 
 8167              		.loc 20 268 9 view .LVU2279
 8168 002e CCF80030 		str	r3, [ip]
 270:Veno-Echo.cpp **** {
 8169              		.loc 20 270 1 is_stmt 1 view .LVU2280
 8170              	.LVL517:
 8171              	.LBB1594:
 8172              	.LBI1587:
 8173              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 273


  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 8174              		.loc 25 87 5 view .LVU2281
 8175              	.LBE1594:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 8176              		.loc 25 88 7 view .LVU2282
 8177              	.LBB1595:
 8178              	.LBB1592:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 274


 8179              	.LBI1588:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8180              		.loc 24 413 7 view .LVU2283
 8181              	.LBB1590:
 8182              		.loc 24 419 24 is_stmt 0 view .LVU2284
 8183 0032 BFF35B8F 		dmb	ish
 8184 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 8185              	.LBE1590:
 8186              	.LBE1592:
 8187              	.LBE1595:
 239:Veno-Echo.cpp **** 
 8188              		.loc 20 239 1 view .LVU2285
 8189 0038 93B0     		sub	sp, sp, #76
 8190              		.cfi_def_cfa_offset 168
 8191              	.LBB1596:
 8192              	.LBB1593:
 8193              	.LBB1591:
 8194              		.loc 24 419 24 view .LVU2286
 8195 003a BFF35B8F 		dmb	ish
 8196              	.LBE1591:
 8197              	.LBE1593:
 8198              	.LBE1596:
 270:Veno-Echo.cpp **** {
 8199              		.loc 20 270 1 view .LVU2287
 8200 003e B3B9     		cbnz	r3, .L468
 283:Veno-Echo.cpp ****         {
 8201              		.loc 20 283 9 is_stmt 1 view .LVU2288
 8202 0040 DCF80030 		ldr	r3, [ip]
 8203 0044 0E2B     		cmp	r3, #14
 8204 0046 12D8     		bhi	.L468
 8205 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 8206              	.L470:
 8207 004c 2606     		.2byte	(.L484-.L470)/2
 8208 004e 1D06     		.2byte	(.L483-.L470)/2
 8209 0050 1906     		.2byte	(.L482-.L470)/2
 8210 0052 1006     		.2byte	(.L481-.L470)/2
 8211 0054 0C06     		.2byte	(.L480-.L470)/2
 8212 0056 0306     		.2byte	(.L479-.L470)/2
 8213 0058 FF05     		.2byte	(.L478-.L470)/2
 8214 005a F605     		.2byte	(.L477-.L470)/2
 8215 005c F205     		.2byte	(.L476-.L470)/2
 8216 005e E905     		.2byte	(.L475-.L470)/2
 8217 0060 E505     		.2byte	(.L474-.L470)/2
 8218 0062 DC05     		.2byte	(.L473-.L470)/2
 8219 0064 D805     		.2byte	(.L472-.L470)/2
 8220 0066 0F00     		.2byte	(.L471-.L470)/2
 8221 0068 D405     		.2byte	(.L469-.L470)/2
 8222              		.p2align 1
 8223              	.L471:
 340:Veno-Echo.cpp ****                 Update_crossfeedback();
 8224              		.loc 20 340 13 view .LVU2289
 341:Veno-Echo.cpp ****             break;
 8225              		.loc 20 341 17 view .LVU2290
 341:Veno-Echo.cpp ****             break;
 8226              		.loc 20 341 37 is_stmt 0 view .LVU2291
 8227 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 8228              	.LVL518:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 275


 342:Veno-Echo.cpp **** 
 8229              		.loc 20 342 13 is_stmt 1 view .LVU2292
 8230              	.L468:
 8231              	.LBB1597:
 350:Veno-Echo.cpp ****     {   
 8232              		.loc 20 350 25 discriminator 1 view .LVU2293
 8233 006e 002D     		cmp	r5, #0
 8234 0070 00F0A885 		beq	.L467
 350:Veno-Echo.cpp ****     {   
 8235              		.loc 20 350 25 is_stmt 0 view .LVU2294
 8236 0074 0023     		movs	r3, #0
 8237 0076 013D     		subs	r5, r5, #1
 8238              	.LVL519:
 350:Veno-Echo.cpp ****     {   
 8239              		.loc 20 350 25 view .LVU2295
 8240 0078 DFF82080 		ldr	r8, .L584+12
 8241 007c B346     		mov	fp, r6
 8242 007e 0293     		str	r3, [sp, #8]
 8243 0080 25F00103 		bic	r3, r5, #1
 8244 0084 DFF81890 		ldr	r9, .L584+16
 8245 0088 0097     		str	r7, [sp]
 8246 008a 0593     		str	r3, [sp, #20]
 8247 008c 8FE0     		b	.L540
 8248              	.L585:
 8249 008e 00BF     		.align	2
 8250              	.L584:
 8251 0090 89888888 		.word	-2004318071
 8252 0094 00000000 		.word	.LANCHOR112
 8253 0098 00000000 		.word	.LANCHOR111
 8254 009c 00000000 		.word	.LANCHOR127
 8255 00a0 00000000 		.word	.LANCHOR128
 8256              	.LVL520:
 8257              	.L583:
 8258              	.LBB1598:
 8259              	.LBB1599:
 8260              	.LBB1600:
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8261              		.loc 20 1861 10 is_stmt 1 view .LVU2296
 8262 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1862:Veno-Echo.cpp ****     else
 8263              		.loc 20 1862 19 is_stmt 0 view .LVU2297
 8264 00a8 B4EE678A 		vcmp.f32	s16, s15
 8265 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8266 00b0 48BF     		it	mi
 8267 00b2 B0EE678A 		vmovmi.f32	s16, s15
 8268              	.LVL521:
 8269              	.L522:
1866:Veno-Echo.cpp **** }
 8270              		.loc 20 1866 5 is_stmt 1 view .LVU2298
1866:Veno-Echo.cpp **** }
 8271              		.loc 20 1866 5 is_stmt 0 view .LVU2299
 8272              	.LBE1600:
 8273              	.LBE1599:
 491:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8274              		.loc 20 491 9 is_stmt 1 view .LVU2300
 491:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8275              		.loc 20 491 42 is_stmt 0 view .LVU2301
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 276


 8276 00b6 D848     		ldr	r0, .L586
 8277 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8278              	.LVL522:
 491:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8279              		.loc 20 491 21 view .LVU2302
 8280 00bc 11A9     		add	r1, sp, #68
 8281 00be D748     		ldr	r0, .L586+4
 491:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8282              		.loc 20 491 42 view .LVU2303
 8283 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 491:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8284              		.loc 20 491 21 view .LVU2304
 8285 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8286              	.LVL523:
 492:Veno-Echo.cpp **** 
 8287              		.loc 20 492 9 is_stmt 1 view .LVU2305
 492:Veno-Echo.cpp **** 
 8288              		.loc 20 492 42 is_stmt 0 view .LVU2306
 8289 00c8 D548     		ldr	r0, .L586+8
 8290 00ca B0EE480A 		vmov.f32	s0, s16
 8291 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8292              	.LVL524:
 492:Veno-Echo.cpp **** 
 8293              		.loc 20 492 21 view .LVU2307
 8294 00d2 11A9     		add	r1, sp, #68
 8295 00d4 D348     		ldr	r0, .L586+12
 492:Veno-Echo.cpp **** 
 8296              		.loc 20 492 42 view .LVU2308
 8297 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 492:Veno-Echo.cpp **** 
 8298              		.loc 20 492 21 view .LVU2309
 8299 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8300              	.LVL525:
 495:Veno-Echo.cpp ****         float mixR;
 8301              		.loc 20 495 9 is_stmt 1 view .LVU2310
 496:Veno-Echo.cpp **** 
 8302              		.loc 20 496 9 view .LVU2311
 498:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8303              		.loc 20 498 9 view .LVU2312
 498:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8304              		.loc 20 498 53 is_stmt 0 view .LVU2313
 8305 00de 09AA     		add	r2, sp, #36
 8306 00e0 08A9     		add	r1, sp, #32
 8307 00e2 D148     		ldr	r0, .L586+16
 8308 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8309              	.LVL526:
 499:Veno-Echo.cpp **** 
 8310              		.loc 20 499 53 view .LVU2314
 8311 00e8 08AA     		add	r2, sp, #32
 8312 00ea 09A9     		add	r1, sp, #36
 8313 00ec CE48     		ldr	r0, .L586+16
 498:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8314              		.loc 20 498 81 view .LVU2315
 8315 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 499:Veno-Echo.cpp **** 
 8316              		.loc 20 499 9 is_stmt 1 view .LVU2316
 499:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 277


 8317              		.loc 20 499 53 is_stmt 0 view .LVU2317
 8318 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8319              	.LVL527:
 8320              	.LBB1602:
 8321              	.LBB1603:
1859:Veno-Echo.cpp ****         returnval = limit;
 8322              		.loc 20 1859 5 view .LVU2318
 8323 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8324              	.LBE1603:
 8325              	.LBE1602:
 502:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8326              		.loc 20 502 38 view .LVU2319
 8327 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 502:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8328              		.loc 20 502 9 is_stmt 1 view .LVU2320
 8329              	.LVL528:
 8330              	.LBB1606:
 8331              	.LBI1602:
1856:Veno-Echo.cpp **** {
 8332              		.loc 20 1856 7 view .LVU2321
 8333              	.LBB1604:
1858:Veno-Echo.cpp ****     if (input > limit)
 8334              		.loc 20 1858 5 view .LVU2322
1859:Veno-Echo.cpp ****         returnval = limit;
 8335              		.loc 20 1859 5 view .LVU2323
 8336 00fe F4EEC77A 		vcmpe.f32	s15, s14
 8337 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8338 0106 00F30285 		bgt	.L552
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8339              		.loc 20 1861 10 view .LVU2324
 8340 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
1862:Veno-Echo.cpp ****     else
 8341              		.loc 20 1862 19 is_stmt 0 view .LVU2325
 8342 010e F4EE477A 		vcmp.f32	s15, s14
 8343 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8344 0116 48BF     		it	mi
 8345 0118 F0EE477A 		vmovmi.f32	s15, s14
 8346              	.LVL529:
 8347              	.L524:
1866:Veno-Echo.cpp **** }
 8348              		.loc 20 1866 5 is_stmt 1 view .LVU2326
1866:Veno-Echo.cpp **** }
 8349              		.loc 20 1866 5 is_stmt 0 view .LVU2327
 8350              	.LBE1604:
 8351              	.LBE1606:
 8352              	.LBB1607:
 8353              	.LBB1608:
1859:Veno-Echo.cpp ****         returnval = limit;
 8354              		.loc 20 1859 5 view .LVU2328
 8355 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 8356              	.LBE1608:
 8357              	.LBE1607:
 502:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8358              		.loc 20 502 27 view .LVU2329
 8359 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 503:Veno-Echo.cpp **** 
 8360              		.loc 20 503 9 is_stmt 1 view .LVU2330
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 278


 8361              	.LVL530:
 8362              	.LBB1612:
 8363              	.LBI1607:
1856:Veno-Echo.cpp **** {
 8364              		.loc 20 1856 7 view .LVU2331
 8365              	.LBB1609:
1858:Veno-Echo.cpp ****     if (input > limit)
 8366              		.loc 20 1858 5 view .LVU2332
1859:Veno-Echo.cpp ****         returnval = limit;
 8367              		.loc 20 1859 5 view .LVU2333
 8368 0124 B4EEC70A 		vcmpe.f32	s0, s14
 8369 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8370 012c 00F35784 		bgt	.L553
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8371              		.loc 20 1861 10 view .LVU2334
 8372 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8373              	.LBE1609:
 8374              	.LBE1612:
 8375              	.LBB1613:
 505:Veno-Echo.cpp **** {
 8376              		.loc 20 505 1 is_stmt 0 view .LVU2335
 8377 0134 BD4B     		ldr	r3, .L586+20
 8378 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8379              	.LBE1613:
 8380              	.LBB1635:
 8381              	.LBB1610:
1862:Veno-Echo.cpp ****     else
 8382              		.loc 20 1862 19 view .LVU2336
 8383 0138 B4EE470A 		vcmp.f32	s0, s14
 8384 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8385 0140 48BF     		it	mi
 8386 0142 B0EE470A 		vmovmi.f32	s0, s14
 8387              	.LVL531:
1866:Veno-Echo.cpp **** }
 8388              		.loc 20 1866 5 is_stmt 1 view .LVU2337
1866:Veno-Echo.cpp **** }
 8389              		.loc 20 1866 5 is_stmt 0 view .LVU2338
 8390              	.LBE1610:
 8391              	.LBE1635:
 503:Veno-Echo.cpp **** 
 8392              		.loc 20 503 27 view .LVU2339
 8393 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 505:Veno-Echo.cpp **** {
 8394              		.loc 20 505 1 is_stmt 1 view .LVU2340
 8395              	.LBB1636:
 8396 014a 002B     		cmp	r3, #0
 8397 014c 40F05084 		bne	.L580
 8398              	.LVL532:
 8399              	.L528:
 505:Veno-Echo.cpp **** {
 8400              		.loc 20 505 1 is_stmt 0 view .LVU2341
 8401              	.LBE1636:
 546:Veno-Echo.cpp ****         {
 8402              		.loc 20 546 9 is_stmt 1 view .LVU2342
 546:Veno-Echo.cpp ****         {
 8403              		.loc 20 546 19 is_stmt 0 view .LVU2343
 8404 0150 B74B     		ldr	r3, .L586+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 279


 546:Veno-Echo.cpp ****         {
 8405              		.loc 20 546 9 view .LVU2344
 8406 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
 546:Veno-Echo.cpp ****         {
 8407              		.loc 20 546 19 view .LVU2345
 8408 0156 93ED007A 		vldr.32	s14, [r3]
 546:Veno-Echo.cpp ****         {
 8409              		.loc 20 546 9 view .LVU2346
 8410 015a B4EEE67A 		vcmpe.f32	s14, s13
 8411 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8412 0162 40F12A84 		bpl	.L574
 548:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8413              		.loc 20 548 13 is_stmt 1 view .LVU2347
 548:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8414              		.loc 20 548 34 is_stmt 0 view .LVU2348
 8415 0166 37EE077A 		vadd.f32	s14, s14, s14
 548:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8416              		.loc 20 548 18 view .LVU2349
 8417 016a 9BED006A 		vldr.32	s12, [fp]
 549:Veno-Echo.cpp ****         }
 8418              		.loc 20 549 18 view .LVU2350
 8419 016e DBED016A 		vldr.32	s13, [fp, #4]
 548:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8420              		.loc 20 548 18 view .LVU2351
 8421 0172 A7EE276A 		vfma.f32	s12, s14, s15
 549:Veno-Echo.cpp ****         }
 8422              		.loc 20 549 18 view .LVU2352
 8423 0176 E7EE006A 		vfma.f32	s13, s14, s0
 548:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8424              		.loc 20 548 18 view .LVU2353
 8425 017a F0EE467A 		vmov.f32	s15, s12
 8426              	.LVL533:
 549:Veno-Echo.cpp ****         }
 8427              		.loc 20 549 13 is_stmt 1 view .LVU2354
 549:Veno-Echo.cpp ****         }
 8428              		.loc 20 549 18 is_stmt 0 view .LVU2355
 8429 017e B0EE660A 		vmov.f32	s0, s13
 8430              	.LVL534:
 8431              	.L534:
 563:Veno-Echo.cpp ****         {
 8432              		.loc 20 563 9 is_stmt 1 view .LVU2356
 8433 0182 AC4B     		ldr	r3, .L586+28
 8434 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8435 0186 002B     		cmp	r3, #0
 8436 0188 00F01084 		beq	.L537
 565:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8437              		.loc 20 565 13 view .LVU2357
 565:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8438              		.loc 20 565 20 is_stmt 0 view .LVU2358
 8439 018c 0023     		movs	r3, #0
 8440 018e 009A     		ldr	r2, [sp]
 8441 0190 1360     		str	r3, [r2]	@ float
 566:Veno-Echo.cpp ****         }
 8442              		.loc 20 566 13 is_stmt 1 view .LVU2359
 566:Veno-Echo.cpp ****         }
 8443              		.loc 20 566 22 is_stmt 0 view .LVU2360
 8444 0192 5360     		str	r3, [r2, #4]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 280


 8445              	.L538:
 8446              	.LBE1598:
 350:Veno-Echo.cpp ****     {   
 8447              		.loc 20 350 5 is_stmt 1 discriminator 2 view .LVU2361
 8448 0194 009B     		ldr	r3, [sp]
 8449 0196 0BF1080B 		add	fp, fp, #8
 350:Veno-Echo.cpp ****     {   
 8450              		.loc 20 350 35 is_stmt 0 discriminator 2 view .LVU2362
 8451 019a 029A     		ldr	r2, [sp, #8]
 350:Veno-Echo.cpp ****     {   
 8452              		.loc 20 350 25 discriminator 2 view .LVU2363
 8453 019c 0599     		ldr	r1, [sp, #20]
 8454 019e 0833     		adds	r3, r3, #8
 8455 01a0 8A42     		cmp	r2, r1
 8456 01a2 0093     		str	r3, [sp]
 350:Veno-Echo.cpp ****     {   
 8457              		.loc 20 350 35 discriminator 2 view .LVU2364
 8458 01a4 02F10203 		add	r3, r2, #2
 8459              	.LVL535:
 350:Veno-Echo.cpp ****     {   
 8460              		.loc 20 350 25 is_stmt 1 discriminator 2 view .LVU2365
 8461 01a8 00F00C85 		beq	.L467
 8462 01ac 0293     		str	r3, [sp, #8]
 8463              	.LVL536:
 8464              	.L540:
 8465              	.LBB1972:
 352:Veno-Echo.cpp ****         Update_Mod();
 8466              		.loc 20 352 9 view .LVU2366
 352:Veno-Echo.cpp ****         Update_Mod();
 8467              		.loc 20 352 20 is_stmt 0 view .LVU2367
 8468 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 8469              	.LVL537:
 353:Veno-Echo.cpp **** 
 8470              		.loc 20 353 9 is_stmt 1 view .LVU2368
 8471              	.LBB1637:
 8472              	.LBB1638:
 8473              	.LBB1639:
 8474              	.LBB1640:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 281


  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 282


 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 8475              		.loc 19 174 71 is_stmt 0 view .LVU2369
 8476 01b2 DFF808A3 		ldr	r10, .L586+164
 8477              	.LBE1640:
 8478              	.LBE1639:
 8479              	.LBE1638:
 8480              	.LBE1637:
 353:Veno-Echo.cpp **** 
 8481              		.loc 20 353 19 view .LVU2370
 8482 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 8483              	.LVL538:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8484              		.loc 20 356 9 is_stmt 1 view .LVU2371
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8485              		.loc 20 356 51 is_stmt 0 view .LVU2372
 8486 01ba 9F48     		ldr	r0, .L586+32
 8487 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8488              	.LVL539:
 8489 01c0 0146     		mov	r1, r0
 8490 01c2 9E48     		ldr	r0, .L586+36
 8491              	.LBB1692:
 8492              	.LBB1675:
 8493              	.LBB1658:
 8494              	.LBB1641:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8495              		.loc 19 175 77 view .LVU2373
 8496 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 8497              	.LBE1641:
 8498              	.LBE1658:
 8499              	.LBE1675:
 8500              	.LBE1692:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8501              		.loc 20 356 51 view .LVU2374
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 283


 8502 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8503              	.LVL540:
 357:Veno-Echo.cpp ****         
 8504              		.loc 20 357 51 view .LVU2375
 8505 01cc 9C48     		ldr	r0, .L586+40
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8506              		.loc 20 356 51 view .LVU2376
 8507 01ce F0EE40BA 		vmov.f32	s23, s0
 8508              	.LVL541:
 357:Veno-Echo.cpp ****         
 8509              		.loc 20 357 9 is_stmt 1 view .LVU2377
 357:Veno-Echo.cpp ****         
 8510              		.loc 20 357 51 is_stmt 0 view .LVU2378
 8511 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8512              	.LVL542:
 357:Veno-Echo.cpp ****         
 8513              		.loc 20 357 51 view .LVU2379
 8514 01d6 0146     		mov	r1, r0
 8515 01d8 9A48     		ldr	r0, .L586+44
 8516 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8517              	.LVL543:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8518              		.loc 20 359 44 view .LVU2380
 8519 01de 9A48     		ldr	r0, .L586+48
 357:Veno-Echo.cpp ****         
 8520              		.loc 20 357 51 view .LVU2381
 8521 01e0 B0EE409A 		vmov.f32	s18, s0
 8522              	.LVL544:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8523              		.loc 20 359 9 is_stmt 1 view .LVU2382
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8524              		.loc 20 359 44 is_stmt 0 view .LVU2383
 8525 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8526              	.LVL545:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8527              		.loc 20 359 44 view .LVU2384
 8528 01e8 0146     		mov	r1, r0
 8529 01ea 9848     		ldr	r0, .L586+52
 8530 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8531              	.LVL546:
 360:Veno-Echo.cpp **** 
 8532              		.loc 20 360 44 view .LVU2385
 8533 01f0 9748     		ldr	r0, .L586+56
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8534              		.loc 20 359 44 view .LVU2386
 8535 01f2 B0EE408A 		vmov.f32	s16, s0
 8536              	.LVL547:
 360:Veno-Echo.cpp **** 
 8537              		.loc 20 360 9 is_stmt 1 view .LVU2387
 360:Veno-Echo.cpp **** 
 8538              		.loc 20 360 44 is_stmt 0 view .LVU2388
 8539 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8540              	.LVL548:
 360:Veno-Echo.cpp **** 
 8541              		.loc 20 360 44 view .LVU2389
 8542 01fa 0146     		mov	r1, r0
 8543 01fc 9548     		ldr	r0, .L586+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 284


 8544 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8545              	.LVL549:
 8546              	.LBB1693:
 8547              	.LBB1694:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8548              		.loc 10 60 42 view .LVU2390
 8549 0202 9548     		ldr	r0, .L586+64
 8550              	.LBE1694:
 8551              	.LBE1693:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8552              		.loc 20 383 49 view .LVU2391
 8553 0204 954B     		ldr	r3, .L586+68
 360:Veno-Echo.cpp **** 
 8554              		.loc 20 360 44 view .LVU2392
 8555 0206 F0EE407A 		vmov.f32	s15, s0
 8556              	.LVL550:
 363:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 8557              		.loc 20 363 9 is_stmt 1 view .LVU2393
 8558              	.LBB1696:
 8559              	.LBI1693:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8560              		.loc 10 60 17 view .LVU2394
 8561              	.LBB1695:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8562              		.loc 10 60 37 view .LVU2395
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8563              		.loc 10 60 42 is_stmt 0 view .LVU2396
 8564 020a C0ED00BA 		vstr.32	s23, [r0]
 8565              	.LVL551:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8566              		.loc 10 60 42 view .LVU2397
 8567              	.LBE1695:
 8568              	.LBE1696:
 364:Veno-Echo.cpp ****         
 8569              		.loc 20 364 9 is_stmt 1 view .LVU2398
 8570              	.LBB1697:
 8571              	.LBI1697:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8572              		.loc 10 60 17 view .LVU2399
 8573              	.LBB1698:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8574              		.loc 10 60 37 view .LVU2400
 8575              	.LBE1698:
 8576              	.LBE1697:
 8577              	.LBB1701:
 8578              	.LBB1676:
 8579              	.LBB1659:
 8580              	.LBB1642:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8581              		.loc 19 174 82 is_stmt 0 view .LVU2401
 8582 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 8583              	.LBE1642:
 8584              	.LBE1659:
 8585              	.LBE1676:
 8586              	.LBE1701:
 8587              	.LBB1702:
 8588              	.LBB1699:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 285


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8589              		.loc 10 60 42 view .LVU2402
 8590 0212 9348     		ldr	r0, .L586+72
 8591              	.LBE1699:
 8592              	.LBE1702:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8593              		.loc 20 383 49 view .LVU2403
 8594 0214 1D68     		ldr	r5, [r3]
 8595              	.LBB1703:
 8596              	.LBB1700:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8597              		.loc 10 60 42 view .LVU2404
 8598 0216 80ED009A 		vstr.32	s18, [r0]
 8599              	.LVL552:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8600              		.loc 10 60 42 view .LVU2405
 8601              	.LBE1700:
 8602              	.LBE1703:
 366:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 8603              		.loc 20 366 9 is_stmt 1 view .LVU2406
 8604              	.LBB1704:
 8605              	.LBI1704:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8606              		.loc 10 60 17 view .LVU2407
 8607              	.LBB1705:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8608              		.loc 10 60 37 view .LVU2408
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8609              		.loc 10 60 42 is_stmt 0 view .LVU2409
 8610 021a 9248     		ldr	r0, .L586+76
 8611              	.LBE1705:
 8612              	.LBE1704:
 8613              	.LBB1707:
 8614              	.LBB1677:
 8615              	.LBB1660:
 8616              	.LBB1643:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8617              		.loc 19 174 71 view .LVU2410
 8618 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8619              		.loc 19 174 46 view .LVU2411
 8620 0220 9FED91AA 		vldr.32	s20, .L586+80
 8621              	.LBE1643:
 8622              	.LBE1660:
 8623              	.LBE1677:
 8624              	.LBE1707:
 8625              	.LBB1708:
 8626              	.LBB1706:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8627              		.loc 10 60 42 view .LVU2412
 8628 0224 80ED008A 		vstr.32	s16, [r0]
 8629              	.LVL553:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8630              		.loc 10 60 42 view .LVU2413
 8631              	.LBE1706:
 8632              	.LBE1708:
 367:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 286


 8633              		.loc 20 367 9 is_stmt 1 view .LVU2414
 8634              	.LBB1709:
 8635              	.LBI1709:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8636              		.loc 10 60 17 view .LVU2415
 8637              	.LBB1710:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8638              		.loc 10 60 37 view .LVU2416
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8639              		.loc 10 60 42 is_stmt 0 view .LVU2417
 8640 0228 9048     		ldr	r0, .L586+84
 8641              	.LBE1710:
 8642              	.LBE1709:
 8643              	.LBB1712:
 8644              	.LBB1678:
 8645              	.LBB1661:
 8646              	.LBB1644:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8647              		.loc 19 174 71 view .LVU2418
 8648 022a 93ED00BA 		vldr.32	s22, [r3]
 8649              	.LBE1644:
 8650              	.LBE1661:
 8651              	.LBE1678:
 8652              	.LBE1712:
 8653              	.LBB1713:
 8654              	.LBB1711:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8655              		.loc 10 60 42 view .LVU2419
 8656 022e 80ED008A 		vstr.32	s16, [r0]
 8657              	.LVL554:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8658              		.loc 10 60 42 view .LVU2420
 8659              	.LBE1711:
 8660              	.LBE1713:
 368:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 8661              		.loc 20 368 9 is_stmt 1 view .LVU2421
 8662              	.LBB1714:
 8663              	.LBI1714:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8664              		.loc 10 60 17 view .LVU2422
 8665              	.LBB1715:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8666              		.loc 10 60 37 view .LVU2423
 8667              	.LBE1715:
 8668              	.LBE1714:
 8669              	.LBB1718:
 8670              	.LBB1719:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8671              		.loc 10 60 42 is_stmt 0 view .LVU2424
 8672 0232 8F48     		ldr	r0, .L586+88
 8673              	.LBE1719:
 8674              	.LBE1718:
 8675              	.LBB1722:
 8676              	.LBB1679:
 8677              	.LBB1662:
 8678              	.LBB1645:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 287


 8679              		.loc 19 174 46 view .LVU2425
 8680 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 8681              	.LVL555:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8682              		.loc 19 174 71 view .LVU2426
 8683 0238 0493     		str	r3, [sp, #16]
 8684              		.loc 19 175 77 view .LVU2427
 8685 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 8686              	.LBE1645:
 8687              	.LBE1662:
 8688              	.LBE1679:
 8689              	.LBE1722:
 8690              	.LBB1723:
 8691              	.LBB1720:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8692              		.loc 10 60 42 view .LVU2428
 8693 023e 80ED008A 		vstr.32	s16, [r0]
 8694              	.LBE1720:
 8695              	.LBE1723:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8696              		.loc 20 376 27 view .LVU2429
 8697 0242 8C4B     		ldr	r3, .L586+92
 8698              	.LBB1724:
 8699              	.LBB1725:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8700              		.loc 10 60 42 view .LVU2430
 8701 0244 8C48     		ldr	r0, .L586+96
 8702              	.LBE1725:
 8703              	.LBE1724:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8704              		.loc 20 376 27 view .LVU2431
 8705 0246 1B68     		ldr	r3, [r3]	@ float
 8706              	.LBB1728:
 8707              	.LBB1726:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8708              		.loc 10 60 42 view .LVU2432
 8709 0248 80ED008A 		vstr.32	s16, [r0]
 8710              	.LBE1726:
 8711              	.LBE1728:
 8712              	.LBB1729:
 8713              	.LBB1716:
 8714 024c 8B48     		ldr	r0, .L586+100
 8715              	.LBE1716:
 8716              	.LBE1729:
 8717              	.LBB1730:
 8718              	.LBB1680:
 8719              	.LBB1663:
 8720              	.LBB1646:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8721              		.loc 19 174 103 view .LVU2433
 8722 024e DFED8C9A 		vldr.32	s19, .L586+104
 8723              	.LBE1646:
 8724              	.LBE1663:
 8725              	.LBE1680:
 8726              	.LBE1730:
 8727              	.LBB1731:
 8728              	.LBB1717:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 288


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8729              		.loc 10 60 42 view .LVU2434
 8730 0252 C0ED007A 		vstr.32	s15, [r0]
 8731              	.LVL556:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8732              		.loc 10 60 42 view .LVU2435
 8733              	.LBE1717:
 8734              	.LBE1731:
 369:Veno-Echo.cpp **** 
 8735              		.loc 20 369 9 is_stmt 1 view .LVU2436
 8736              	.LBB1732:
 8737              	.LBI1732:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8738              		.loc 10 60 17 view .LVU2437
 8739              	.LBB1733:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8740              		.loc 10 60 37 view .LVU2438
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8741              		.loc 10 60 42 is_stmt 0 view .LVU2439
 8742 0256 8B48     		ldr	r0, .L586+108
 8743              	.LBE1733:
 8744              	.LBE1732:
 8745              	.LBB1735:
 8746              	.LBB1681:
 8747              	.LBB1664:
 8748              	.LBB1647:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8749              		.loc 19 174 98 view .LVU2440
 8750 0258 9FED8B9A 		vldr.32	s18, .L586+112
 8751              	.LVL557:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8752              		.loc 19 174 98 view .LVU2441
 8753              	.LBE1647:
 8754              	.LBE1664:
 8755              	.LBE1681:
 8756              	.LBE1735:
 8757              	.LBB1736:
 8758              	.LBB1734:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8759              		.loc 10 60 42 view .LVU2442
 8760 025c C0ED007A 		vstr.32	s15, [r0]
 8761              	.LVL558:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8762              		.loc 10 60 42 view .LVU2443
 8763              	.LBE1734:
 8764              	.LBE1736:
 371:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 8765              		.loc 20 371 9 is_stmt 1 view .LVU2444
 8766              	.LBB1737:
 8767              	.LBI1718:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8768              		.loc 10 60 17 view .LVU2445
 8769              	.LBB1721:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8770              		.loc 10 60 37 view .LVU2446
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8771              		.loc 10 60 37 is_stmt 0 view .LVU2447
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 289


 8772              	.LBE1721:
 8773              	.LBE1737:
 372:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 8774              		.loc 20 372 9 is_stmt 1 view .LVU2448
 8775              	.LBB1738:
 8776              	.LBI1724:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8777              		.loc 10 60 17 view .LVU2449
 8778              	.LBB1727:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8779              		.loc 10 60 37 view .LVU2450
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8780              		.loc 10 60 37 is_stmt 0 view .LVU2451
 8781              	.LBE1727:
 8782              	.LBE1738:
 373:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 8783              		.loc 20 373 9 is_stmt 1 view .LVU2452
 8784              	.LBB1739:
 8785              	.LBI1739:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8786              		.loc 10 60 17 view .LVU2453
 8787              	.LBB1740:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8788              		.loc 10 60 37 view .LVU2454
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8789              		.loc 10 60 42 is_stmt 0 view .LVU2455
 8790 0260 8A48     		ldr	r0, .L586+116
 8791              	.LBE1740:
 8792              	.LBE1739:
 8793              	.LBB1742:
 8794              	.LBB1682:
 8795              	.LBB1665:
 8796              	.LBB1648:
 162:delayline_reverse.h **** 
 8797              		.loc 19 162 23 view .LVU2456
 8798 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 8799              	.LBE1648:
 8800              	.LBE1665:
 8801              	.LBE1682:
 8802              	.LBE1742:
 8803              	.LBB1743:
 8804              	.LBB1741:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8805              		.loc 10 60 42 view .LVU2457
 8806 0266 C0ED007A 		vstr.32	s15, [r0]
 8807              	.LVL559:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8808              		.loc 10 60 42 view .LVU2458
 8809              	.LBE1741:
 8810              	.LBE1743:
 374:Veno-Echo.cpp **** 
 8811              		.loc 20 374 9 is_stmt 1 view .LVU2459
 8812              	.LBB1744:
 8813              	.LBI1744:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8814              		.loc 10 60 17 view .LVU2460
 8815              	.LBB1745:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 290


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8816              		.loc 10 60 37 view .LVU2461
 8817              	.LBE1745:
 8818              	.LBE1744:
 8819              	.LBB1748:
 8820              	.LBB1683:
 8821              	.LBB1666:
 8822              	.LBB1649:
 162:delayline_reverse.h **** 
 8823              		.loc 19 162 11 is_stmt 0 view .LVU2462
 8824 026a 05EB8702 		add	r2, r5, r7, lsl #2
 8825              	.LBE1649:
 8826              	.LBE1666:
 8827              	.LBE1683:
 8828              	.LBE1748:
 8829              	.LBB1749:
 8830              	.LBB1746:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8831              		.loc 10 60 42 view .LVU2463
 8832 026e 8848     		ldr	r0, .L586+120
 8833              	.LBE1746:
 8834              	.LBE1749:
 8835              	.LBB1750:
 8836              	.LBB1684:
 8837              	.LBB1667:
 8838              	.LBB1650:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8839              		.loc 19 161 11 view .LVU2464
 8840 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 8841              		.loc 19 162 11 view .LVU2465
 8842 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 8843              	.LBE1650:
 8844              	.LBE1667:
 8845              	.LBE1684:
 8846              	.LBE1750:
 8847              	.LBB1751:
 8848              	.LBB1752:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8849              		.loc 10 60 42 view .LVU2466
 8850 0278 864A     		ldr	r2, .L586+124
 8851              	.LBE1752:
 8852              	.LBE1751:
 8853              	.LBB1754:
 8854              	.LBB1747:
 8855 027a C0ED007A 		vstr.32	s15, [r0]
 8856              	.LVL560:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8857              		.loc 10 60 42 view .LVU2467
 8858              	.LBE1747:
 8859              	.LBE1754:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8860              		.loc 20 376 9 is_stmt 1 view .LVU2468
 8861              	.LBB1755:
 8862              	.LBI1751:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8863              		.loc 10 60 17 view .LVU2469
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 291


 8864              	.LBB1753:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8865              		.loc 10 60 37 view .LVU2470
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8866              		.loc 10 60 42 is_stmt 0 view .LVU2471
 8867 027e 1360     		str	r3, [r2]	@ float
 8868              	.LVL561:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8869              		.loc 10 60 42 view .LVU2472
 8870              	.LBE1753:
 8871              	.LBE1755:
 377:Veno-Echo.cpp **** 
 8872              		.loc 20 377 9 is_stmt 1 view .LVU2473
 8873              	.LBB1756:
 8874              	.LBI1756:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8875              		.loc 10 60 17 view .LVU2474
 8876              	.LBB1757:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8877              		.loc 10 60 37 view .LVU2475
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8878              		.loc 10 60 42 is_stmt 0 view .LVU2476
 8879 0280 854A     		ldr	r2, .L586+128
 8880              	.LBE1757:
 8881              	.LBE1756:
 8882              	.LBB1759:
 8883              	.LBB1685:
 8884              	.LBB1668:
 8885              	.LBB1651:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8886              		.loc 19 161 11 view .LVU2477
 8887 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 8888              	.LBE1651:
 8889              	.LBE1668:
 8890              	.LBE1685:
 8891              	.LBE1759:
 8892              	.LBB1760:
 8893              	.LBB1758:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8894              		.loc 10 60 42 view .LVU2478
 8895 0286 1360     		str	r3, [r2]	@ float
 8896              	.LVL562:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8897              		.loc 10 60 42 view .LVU2479
 8898              	.LBE1758:
 8899              	.LBE1760:
 379:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 8900              		.loc 20 379 9 is_stmt 1 view .LVU2480
 8901              	.LBB1761:
 8902              	.LBI1761:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8903              		.loc 10 60 17 view .LVU2481
 8904              	.LBB1762:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8905              		.loc 10 60 37 view .LVU2482
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8906              		.loc 10 60 42 is_stmt 0 view .LVU2483
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 292


 8907 0288 844A     		ldr	r2, .L586+132
 8908 028a 1360     		str	r3, [r2]	@ float
 8909              	.LVL563:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8910              		.loc 10 60 42 view .LVU2484
 8911              	.LBE1762:
 8912              	.LBE1761:
 380:Veno-Echo.cpp **** 
 8913              		.loc 20 380 9 is_stmt 1 view .LVU2485
 8914              	.LBB1763:
 8915              	.LBI1763:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8916              		.loc 10 60 17 view .LVU2486
 8917              	.LBB1764:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8918              		.loc 10 60 37 view .LVU2487
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8919              		.loc 10 60 42 is_stmt 0 view .LVU2488
 8920 028c 844A     		ldr	r2, .L586+136
 8921 028e 1360     		str	r3, [r2]	@ float
 8922              	.LVL564:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8923              		.loc 10 60 42 view .LVU2489
 8924              	.LBE1764:
 8925              	.LBE1763:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8926              		.loc 20 383 9 is_stmt 1 view .LVU2490
 8927              	.LBB1765:
 8928              	.LBI1637:
  79:Veno-Echo.cpp ****     {
 8929              		.loc 20 79 11 view .LVU2491
 8930              	.LBB1686:
  82:Veno-Echo.cpp ****         return read;
 8931              		.loc 20 82 9 view .LVU2492
 8932              	.LBB1669:
 8933              	.LBI1639:
 159:delayline_reverse.h ****     {
 8934              		.loc 19 159 20 view .LVU2493
 8935              	.LBB1652:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8936              		.loc 19 174 46 is_stmt 0 view .LVU2494
 8937 0290 FFF7FEFF 		bl	sinf
 8938              	.LVL565:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8939              		.loc 19 174 46 view .LVU2495
 8940 0294 F0EE40BA 		vmov.f32	s23, s0
 8941              	.LVL566:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8942              		.loc 19 174 103 view .LVU2496
 8943 0298 2BEE290A 		vmul.f32	s0, s22, s19
 8944 029c FFF7FEFF 		bl	sinf
 8945              	.LVL567:
 8946 02a0 B0EE408A 		vmov.f32	s16, s0
 8947              	.LVL568:
 8948              		.loc 19 175 46 view .LVU2497
 8949 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 8950 02a8 FFF7FEFF 		bl	sinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 293


 8951              	.LVL569:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8952              		.loc 19 174 98 view .LVU2498
 8953 02ac 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8954              		.loc 19 174 82 view .LVU2499
 8955 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 8956              	.LVL570:
 8957              		.loc 19 175 46 view .LVU2500
 8958 02b4 F0EE40BA 		vmov.f32	s23, s0
 8959              		.loc 19 175 112 view .LVU2501
 8960 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 8961 02bc FFF7FEFF 		bl	sinf
 8962              	.LVL571:
 8963              		.loc 19 175 107 view .LVU2502
 8964 02c0 60EE097A 		vmul.f32	s15, s0, s18
 8965              	.LBE1652:
 8966              	.LBE1669:
 8967              	.LBE1686:
 8968              	.LBE1765:
 384:Veno-Echo.cpp **** 
 8969              		.loc 20 384 49 view .LVU2503
 8970 02c4 774B     		ldr	r3, .L586+140
 8971              	.LBB1766:
 8972              	.LBB1687:
 8973              	.LBB1670:
 8974              	.LBB1653:
 8975              		.loc 19 175 91 view .LVU2504
 8976 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 8977              	.LVL572:
 8978              		.loc 19 175 91 view .LVU2505
 8979              	.LBE1653:
 8980              	.LBE1670:
 8981              	.LBE1687:
 8982              	.LBE1766:
 384:Veno-Echo.cpp **** 
 8983              		.loc 20 384 49 view .LVU2506
 8984 02ca 1C68     		ldr	r4, [r3]
 8985              	.LBB1767:
 8986              	.LBB1688:
 8987              	.LBB1671:
 8988              	.LBB1654:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8989              		.loc 19 174 9 view .LVU2507
 8990 02cc 38EE088A 		vadd.f32	s16, s16, s16
 8991              	.LVL573:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8992              		.loc 19 174 9 view .LVU2508
 8993              	.LBE1654:
 8994              	.LBE1671:
 8995              	.LBE1688:
 8996              	.LBE1767:
 8997              	.LBB1768:
 8998              	.LBB1769:
 8999              	.LBB1770:
 9000              	.LBB1771:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 294


 9001              		.loc 19 174 71 view .LVU2509
 9002 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 9003              		.loc 19 162 11 view .LVU2510
 9004 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9005              		.loc 19 174 71 view .LVU2511
 9006 02d8 91ED00CA 		vldr.32	s24, [r1]
 9007              	.LBE1771:
 9008              	.LBE1770:
 9009              	.LBE1769:
 9010              	.LBE1768:
 9011              	.LBB1802:
 9012              	.LBB1689:
 9013              	.LBB1672:
 9014              	.LBB1655:
 9015              		.loc 19 175 9 view .LVU2512
 9016 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 9017              	.LVL574:
 9018              		.loc 19 175 9 view .LVU2513
 9019              	.LBE1655:
 9020              	.LBE1672:
 9021              	.LBE1689:
 9022              	.LBE1802:
 9023              	.LBB1803:
 9024              	.LBB1792:
 9025              	.LBB1782:
 9026              	.LBB1772:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9027              		.loc 19 161 11 view .LVU2514
 9028 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9029              		.loc 19 162 11 view .LVU2515
 9030 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 9031              		.loc 19 175 77 view .LVU2516
 9032 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9033              		.loc 19 174 46 view .LVU2517
 9034 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9035              		.loc 19 161 11 view .LVU2518
 9036 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 9037              	.LBE1772:
 9038              	.LBE1782:
 9039              	.LBE1792:
 9040              	.LBE1803:
 9041              	.LBB1804:
 9042              	.LBB1690:
 9043              	.LBB1673:
 9044              	.LBB1656:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9045              		.loc 19 177 44 view .LVU2519
 9046 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 9047              	.LVL575:
 9048              		.loc 19 177 44 view .LVU2520
 9049              	.LBE1656:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 295


 9050              	.LBE1673:
 9051              	.LBE1690:
 9052              	.LBE1804:
 9053              	.LBB1805:
 9054              	.LBB1793:
 9055              	.LBB1783:
 9056              	.LBB1773:
 162:delayline_reverse.h **** 
 9057              		.loc 19 162 11 view .LVU2521
 9058 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9059              		.loc 19 174 71 view .LVU2522
 9060 02fc 0391     		str	r1, [sp, #12]
 9061              	.LBE1773:
 9062              	.LBE1783:
 9063              	.LBE1793:
 9064              	.LBE1805:
 9065              	.LBB1806:
 9066              	.LBB1691:
 9067              	.LBB1674:
 9068              	.LBB1657:
 9069              		.loc 19 177 54 view .LVU2523
 9070 02fe EDEE887A 		vfma.f32	s15, s27, s16
 9071              	.LVL576:
 9072              		.loc 19 177 54 view .LVU2524
 9073              	.LBE1657:
 9074              	.LBE1674:
  83:Veno-Echo.cpp ****     }
 9075              		.loc 20 83 9 is_stmt 1 view .LVU2525
  83:Veno-Echo.cpp ****     }
 9076              		.loc 20 83 9 is_stmt 0 view .LVU2526
 9077              	.LBE1691:
 9078              	.LBE1806:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9079              		.loc 20 383 50 view .LVU2527
 9080 0302 CDED067A 		vstr.32	s15, [sp, #24]
 384:Veno-Echo.cpp **** 
 9081              		.loc 20 384 9 is_stmt 1 view .LVU2528
 9082              	.LVL577:
 9083              	.LBB1807:
 9084              	.LBI1768:
  79:Veno-Echo.cpp ****     {
 9085              		.loc 20 79 11 view .LVU2529
 9086              	.LBB1794:
  82:Veno-Echo.cpp ****         return read;
 9087              		.loc 20 82 9 view .LVU2530
 9088              	.LBB1784:
 9089              	.LBI1770:
 159:delayline_reverse.h ****     {
 9090              		.loc 19 159 20 view .LVU2531
 9091              	.LBB1774:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9092              		.loc 19 174 46 is_stmt 0 view .LVU2532
 9093 0306 FFF7FEFF 		bl	sinf
 9094              	.LVL578:
 9095 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 296


 9096              		.loc 19 174 103 view .LVU2533
 9097 030e 2CEE290A 		vmul.f32	s0, s24, s19
 9098 0312 FFF7FEFF 		bl	sinf
 9099              	.LVL579:
 9100 0316 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 9101              		.loc 19 175 46 view .LVU2534
 9102 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 9103 031e FFF7FEFF 		bl	sinf
 9104              	.LVL580:
 9105 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9106              		.loc 19 175 112 view .LVU2535
 9107 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9108              		.loc 19 174 98 view .LVU2536
 9109 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9110              		.loc 19 175 46 view .LVU2537
 9111 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9112              		.loc 19 175 112 view .LVU2538
 9113 0332 FFF7FEFF 		bl	sinf
 9114              	.LVL581:
 9115              	.LBE1774:
 9116              	.LBE1784:
 9117              	.LBE1794:
 9118              	.LBE1807:
 9119              	.LBB1808:
 9120              	.LBB1809:
 9121              	.LBB1810:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9122              		.loc 19 98 38 view .LVU2539
 9123 0336 5C48     		ldr	r0, .L586+144
 9124              	.LBE1810:
 9125              	.LBE1809:
 9126              	.LBE1808:
 9127              	.LBB1833:
 9128              	.LBB1795:
 9129              	.LBB1785:
 9130              	.LBB1775:
 175:delayline_reverse.h **** 
 9131              		.loc 19 175 107 view .LVU2540
 9132 0338 60EE097A 		vmul.f32	s15, s0, s18
 9133              	.LBE1775:
 9134              	.LBE1785:
 9135              	.LBE1795:
 9136              	.LBE1833:
 9137              	.LBB1834:
 9138              	.LBB1822:
 9139              	.LBB1811:
  92:delayline_reverse.h ****         
 9140              		.loc 19 92 57 view .LVU2541
 9141 033c 5B4B     		ldr	r3, .L586+148
 9142              	.LBE1811:
 9143              	.LBE1822:
 9144              	.LBE1834:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 297


 9145              	.LBB1835:
 9146              	.LBB1796:
 9147              	.LBB1786:
 9148              	.LBB1776:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9149              		.loc 19 174 82 view .LVU2542
 9150 033e ABEEA88A 		vfma.f32	s16, s23, s17
 9151              	.LVL582:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9152              		.loc 19 174 82 view .LVU2543
 9153              	.LBE1776:
 9154              	.LBE1786:
 9155              	.LBE1796:
 9156              	.LBE1835:
 9157              	.LBB1836:
 9158              	.LBB1823:
 9159              	.LBB1812:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9160              		.loc 19 98 38 view .LVU2544
 9161 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9162              		.loc 19 90 15 view .LVU2545
 9163 0344 D5F804E0 		ldr	lr, [r5, #4]
 9164              	.LBE1812:
 9165              	.LBE1823:
 9166              	.LBE1836:
 9167              	.LBB1837:
 9168              	.LBB1797:
 9169              	.LBB1787:
 9170              	.LBB1777:
 175:delayline_reverse.h **** 
 9171              		.loc 19 175 91 view .LVU2546
 9172 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 9173              	.LVL583:
 175:delayline_reverse.h **** 
 9174              		.loc 19 175 91 view .LVU2547
 9175              	.LBE1777:
 9176              	.LBE1787:
 9177              	.LBE1797:
 9178              	.LBE1837:
 9179              	.LBB1838:
 9180              	.LBB1824:
 9181              	.LBB1813:
  99:delayline_reverse.h ****  
 9182              		.loc 19 99 38 view .LVU2548
 9183 034c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9184              		.loc 19 98 50 view .LVU2549
 9185 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9186              		.loc 19 92 57 view .LVU2550
 9187 0352 DFF86CC1 		ldr	ip, .L586+168
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9188              		.loc 19 90 9 view .LVU2551
 9189 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9190              		.loc 19 98 50 view .LVU2552
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 298


 9191 035a 890C     		lsrs	r1, r1, #18
 9192              	.LBE1813:
 9193              	.LBE1824:
 9194              	.LBE1838:
 9195              	.LBB1839:
 9196              	.LBB1798:
 9197              	.LBB1788:
 9198              	.LBB1778:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9199              		.loc 19 174 9 view .LVU2553
 9200 035c 38EE088A 		vadd.f32	s16, s16, s16
 9201              	.LVL584:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9202              		.loc 19 174 9 view .LVU2554
 9203              	.LBE1778:
 9204              	.LBE1788:
 9205              	.LBE1798:
 9206              	.LBE1839:
 9207              	.LBB1840:
 9208              	.LBB1825:
 9209              	.LBB1814:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9210              		.loc 19 98 50 view .LVU2555
 9211 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9212              		.loc 19 92 45 view .LVU2556
 9213 0364 524E     		ldr	r6, .L586+152
 9214              	.LBE1814:
 9215              	.LBE1825:
 9216              	.LBE1840:
 9217              	.LBB1841:
 9218              	.LBB1799:
 9219              	.LBB1789:
 9220              	.LBB1779:
 175:delayline_reverse.h **** 
 9221              		.loc 19 175 9 view .LVU2557
 9222 0366 37EEA70A 		vadd.f32	s0, s15, s15
 9223              	.LVL585:
 175:delayline_reverse.h **** 
 9224              		.loc 19 175 9 view .LVU2558
 9225              	.LBE1779:
 9226              	.LBE1789:
 9227              	.LBE1799:
 9228              	.LBE1841:
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9229              		.loc 20 387 26 view .LVU2559
 9230 036a DBED007A 		vldr.32	s15, [fp]
 9231              	.LBB1842:
 9232              	.LBB1826:
 9233              	.LBB1815:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9234              		.loc 19 98 50 view .LVU2560
 9235 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9236              		.loc 19 92 45 view .LVU2561
 9237 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 299


 9238              		.loc 19 99 50 view .LVU2562
 9239 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 9240              		.loc 19 92 57 view .LVU2563
 9241 0376 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9242              		.loc 19 98 9 view .LVU2564
 9243 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9244              		.loc 19 99 50 view .LVU2565
 9245 037c 4FEA9E4E 		lsr	lr, lr, #18
 9246              	.LBE1815:
 9247              	.LBE1826:
 9248              	.LBE1842:
 9249              	.LBB1843:
 9250              	.LBB1800:
 9251              	.LBB1790:
 9252              	.LBB1780:
 9253              		.loc 19 177 44 view .LVU2566
 9254 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 9255              	.LVL586:
 9256              		.loc 19 177 44 view .LVU2567
 9257              	.LBE1780:
 9258              	.LBE1790:
 9259              	.LBE1800:
 9260              	.LBE1843:
 9261              	.LBB1844:
 9262              	.LBB1827:
 9263              	.LBB1816:
  92:delayline_reverse.h ****         
 9264              		.loc 19 92 57 view .LVU2568
 9265 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9266              		.loc 19 99 50 view .LVU2569
 9267 0386 0CFB1E00 		mls	r0, ip, lr, r0
 9268              	.LBE1816:
 9269              	.LBE1827:
 9270              	.LBE1844:
 9271              	.LBB1845:
 9272              	.LBB1801:
 9273              	.LBB1791:
 9274              	.LBB1781:
 9275              		.loc 19 177 54 view .LVU2570
 9276 038a ACEE880A 		vfma.f32	s0, s25, s16
 9277              	.LVL587:
 9278              		.loc 19 177 54 view .LVU2571
 9279              	.LBE1781:
 9280              	.LBE1791:
  83:Veno-Echo.cpp ****     }
 9281              		.loc 20 83 9 is_stmt 1 view .LVU2572
  83:Veno-Echo.cpp ****     }
 9282              		.loc 20 83 9 is_stmt 0 view .LVU2573
 9283              	.LBE1801:
 9284              	.LBE1845:
 9285              	.LBB1846:
 9286              	.LBB1828:
 9287              	.LBB1817:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 300


  92:delayline_reverse.h ****         
 9288              		.loc 19 92 57 view .LVU2574
 9289 038e 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 9290              		.loc 19 95 43 view .LVU2575
 9291 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9292              		.loc 19 90 9 view .LVU2576
 9293 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9294              		.loc 19 95 43 view .LVU2577
 9295 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9296              		.loc 19 101 36 view .LVU2578
 9297 039c DFF824A1 		ldr	r10, .L586+172
  95:delayline_reverse.h **** 
 9298              		.loc 19 95 43 view .LVU2579
 9299 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9300              		.loc 19 101 36 view .LVU2580
 9301 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9302              		.loc 19 101 45 view .LVU2581
 9303 03a6 07F1FF3A 		add	r10, r7, #-1
 9304              	.LBE1817:
 9305              	.LBE1828:
 9306              	.LBE1846:
 384:Veno-Echo.cpp **** 
 9307              		.loc 20 384 50 view .LVU2582
 9308 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9309              		.loc 20 387 9 is_stmt 1 view .LVU2583
 9310              	.LVL588:
 9311              	.LBB1847:
 9312              	.LBI1808:
  92:Veno-Echo.cpp ****     {
 9313              		.loc 20 92 10 view .LVU2584
  92:Veno-Echo.cpp ****     {
 9314              		.loc 20 92 10 is_stmt 0 view .LVU2585
 9315              	.LBE1847:
 9316              	.LBE1972:
 9317              	.LBE1597:
  94:Veno-Echo.cpp ****     }
 9318              		.loc 20 94 9 is_stmt 1 view .LVU2586
 9319              	.LBB1984:
 9320              	.LBB1973:
 9321              	.LBB1848:
 9322              	.LBB1829:
 9323              	.LBI1809:
  88:delayline_reverse.h ****     {
 9324              		.loc 19 88 17 view .LVU2587
 9325              	.LBB1818:
  99:delayline_reverse.h ****  
 9326              		.loc 19 99 9 is_stmt 0 view .LVU2588
 9327 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9328              		.loc 19 95 54 view .LVU2589
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 301


 9329 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9330              		.loc 19 101 45 view .LVU2590
 9331 03b6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 9332              		.loc 19 95 54 view .LVU2591
 9333 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 9334              		.loc 19 92 9 view .LVU2592
 9335 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9336              		.loc 19 101 9 view .LVU2593
 9337 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9338              		.loc 19 95 9 view .LVU2594
 9339 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9340              		.loc 19 101 9 view .LVU2595
 9341 03c4 40F2CF82 		bls	.L486
 103:delayline_reverse.h ****             {
 9342              		.loc 19 103 17 view .LVU2596
 9343 03c8 3A49     		ldr	r1, .L586+156
 103:delayline_reverse.h ****             {
 9344              		.loc 19 103 13 view .LVU2597
 9345 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9346              		.loc 19 103 17 view .LVU2598
 9347 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9348              		.loc 19 103 13 view .LVU2599
 9349 03ce 0028     		cmp	r0, #0
 9350 03d0 40F0CF82 		bne	.L577
 107:delayline_reverse.h ****                 {
 9351              		.loc 19 107 21 view .LVU2600
 9352 03d4 3848     		ldr	r0, .L586+160
 105:delayline_reverse.h ****                 
 9353              		.loc 19 105 17 view .LVU2601
 9354 03d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9355              		.loc 19 110 45 view .LVU2602
 9356 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9357              		.loc 19 107 17 view .LVU2603
 9358 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9359              		.loc 19 107 21 view .LVU2604
 9360 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9361              		.loc 19 105 17 view .LVU2605
 9362 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9363              		.loc 19 107 17 view .LVU2606
 9364 03e0 002E     		cmp	r6, #0
 9365 03e2 40F0EB83 		bne	.L488
 110:delayline_reverse.h ****                 }
 9366              		.loc 19 110 21 view .LVU2607
 9367 03e6 EB60     		str	r3, [r5, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 302


 9368              	.L489:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9369              		.loc 19 130 45 view .LVU2608
 9370 03e8 07EE90EA 		vmov	s15, lr	@ int
 9371              	.LVL589:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9372              		.loc 19 130 45 view .LVU2609
 9373 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 9374 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 9375 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9376              		.loc 19 130 37 view .LVU2610
 9377 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9378              		.loc 19 131 17 view .LVU2611
 9379 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 9380 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9381 0404 40F39183 		ble	.L578
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9382              		.loc 19 133 21 view .LVU2612
 9383 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9384              		.loc 19 134 21 view .LVU2613
 9385 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9386              		.loc 19 133 21 view .LVU2614
 9387 040c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 9388              		.loc 19 135 21 view .LVU2615
 9389 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9390              		.loc 19 134 21 view .LVU2616
 9391 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9392              		.loc 19 135 21 view .LVU2617
 9393 0414 0370     		strb	r3, [r0]
 9394 0416 57E0     		b	.L587
 9395              	.L588:
 9396              		.align	2
 9397              	.L586:
 9398 0418 00000000 		.word	.LANCHOR104
 9399 041c 00000000 		.word	.LANCHOR0
 9400 0420 00000000 		.word	.LANCHOR105
 9401 0424 00000000 		.word	.LANCHOR1
 9402 0428 00000000 		.word	.LANCHOR64
 9403 042c 00000000 		.word	.LANCHOR82
 9404 0430 00000000 		.word	.LANCHOR55
 9405 0434 00000000 		.word	.LANCHOR110
 9406 0438 00000000 		.word	.LANCHOR92
 9407 043c 00000000 		.word	.LANCHOR98
 9408 0440 00000000 		.word	.LANCHOR93
 9409 0444 00000000 		.word	.LANCHOR99
 9410 0448 00000000 		.word	.LANCHOR91
 9411 044c 00000000 		.word	.LANCHOR101
 9412 0450 00000000 		.word	.LANCHOR90
 9413 0454 00000000 		.word	.LANCHOR100
 9414 0458 00000000 		.word	.LANCHOR102
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 303


 9415 045c 00000000 		.word	.LANCHOR2
 9416 0460 00000000 		.word	.LANCHOR103
 9417 0464 00000000 		.word	.LANCHOR113
 9418 0468 DB0FC93F 		.word	1070141403
 9419 046c 00000000 		.word	.LANCHOR114
 9420 0470 00000000 		.word	.LANCHOR117
 9421 0474 00000000 		.word	.LANCHOR79
 9422 0478 00000000 		.word	.LANCHOR118
 9423 047c 00000000 		.word	.LANCHOR115
 9424 0480 E4CB9640 		.word	1083624420
 9425 0484 00000000 		.word	.LANCHOR116
 9426 0488 0000803D 		.word	1031798784
 9427 048c 00000000 		.word	.LANCHOR119
 9428 0490 00000000 		.word	.LANCHOR120
 9429 0494 00000000 		.word	.LANCHOR121
 9430 0498 00000000 		.word	.LANCHOR122
 9431 049c 00000000 		.word	.LANCHOR123
 9432 04a0 00000000 		.word	.LANCHOR124
 9433 04a4 00000000 		.word	.LANCHOR3
 9434 04a8 BF270900 		.word	599999
 9435 04ac 851DD96F 		.word	1876499845
 9436 04b0 C1270900 		.word	600001
 9437 04b4 249F2400 		.word	2400036
 9438 04b8 1C9F2400 		.word	2400028
 9439 04bc 209F2400 		.word	2400032
 9440 04c0 C0270900 		.word	600000
 9441 04c4 189F2400 		.word	2400024
 9442              	.L587:
 9443              	.LVL590:
 9444              	.L492:
 135:delayline_reverse.h ****                 }
 9445              		.loc 19 135 21 view .LVU2618
 9446              	.LBE1818:
 9447              	.LBE1829:
 9448              	.LBE1848:
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9449              		.loc 20 388 9 is_stmt 1 view .LVU2619
 9450              	.LBB1849:
 9451              	.LBB1850:
 9452              	.LBB1851:
  95:delayline_reverse.h **** 
 9453              		.loc 19 95 45 is_stmt 0 view .LVU2620
 9454 04c8 2169     		ldr	r1, [r4, #16]
 9455 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 9456              		.loc 19 95 43 view .LVU2621
 9457 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9458              		.loc 19 90 15 view .LVU2622
 9459 04d0 6568     		ldr	r5, [r4, #4]
 9460 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 9461              		.loc 19 95 43 view .LVU2623
 9462 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 9463              		.loc 19 92 45 view .LVU2624
 9464 04d8 B14F     		ldr	r7, .L589
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 304


  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9465              		.loc 19 90 9 view .LVU2625
 9466 04da 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9467              		.loc 19 98 38 view .LVU2626
 9468 04de B14B     		ldr	r3, .L589+4
  95:delayline_reverse.h **** 
 9469              		.loc 19 95 43 view .LVU2627
 9470 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 9471              		.loc 19 92 45 view .LVU2628
 9472 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 9473              		.loc 19 101 45 view .LVU2629
 9474 04e4 01F1FF3C 		add	ip, r1, #-1
 9475              	.LBE1851:
 9476              	.LBE1850:
 9477              	.LBE1849:
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9478              		.loc 20 388 26 view .LVU2630
 9479 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 9480              	.LVL591:
 9481              	.LBB1860:
 9482              	.LBI1849:
  92:Veno-Echo.cpp ****     {
 9483              		.loc 20 92 10 is_stmt 1 view .LVU2631
  92:Veno-Echo.cpp ****     {
 9484              		.loc 20 92 10 is_stmt 0 view .LVU2632
 9485              	.LBE1860:
 9486              	.LBE1973:
 9487              	.LBE1984:
  94:Veno-Echo.cpp ****     }
 9488              		.loc 20 94 9 is_stmt 1 view .LVU2633
 9489              	.LBB1985:
 9490              	.LBB1974:
 9491              	.LBB1861:
 9492              	.LBB1856:
 9493              	.LBI1850:
  88:delayline_reverse.h ****     {
 9494              		.loc 19 88 17 view .LVU2634
 9495              	.LBB1852:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9496              		.loc 19 98 38 is_stmt 0 view .LVU2635
 9497 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 9498 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 9499              		.loc 19 99 38 view .LVU2636
 9500 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 9501              		.loc 19 92 57 view .LVU2637
 9502 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 9503              		.loc 19 95 54 view .LVU2638
 9504 04fa B2FBF1F0 		udiv	r0, r2, r1
 9505 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 9506              		.loc 19 101 36 view .LVU2639
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 305


 9507 0502 A949     		ldr	r1, .L589+8
  92:delayline_reverse.h ****         
 9508              		.loc 19 92 57 view .LVU2640
 9509 0504 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 9510              		.loc 19 101 36 view .LVU2641
 9511 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 9512              		.loc 19 92 57 view .LVU2642
 9513 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9514              		.loc 19 90 9 view .LVU2643
 9515 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 9516              		.loc 19 101 36 view .LVU2644
 9517 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9518              		.loc 19 92 57 view .LVU2645
 9519 0514 A3FB0762 		umull	r6, r2, r3, r7
 9520 0518 DFF8C8E2 		ldr	lr, .L589+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9521              		.loc 19 98 50 view .LVU2646
 9522 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 9523              		.loc 19 99 50 view .LVU2647
 9524 0520 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 9525              		.loc 19 101 45 view .LVU2648
 9526 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 9527              		.loc 19 92 57 view .LVU2649
 9528 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 9529              		.loc 19 95 9 view .LVU2650
 9530 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9531              		.loc 19 98 50 view .LVU2651
 9532 052a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 9533              		.loc 19 101 45 view .LVU2652
 9534 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 9535              		.loc 19 99 50 view .LVU2653
 9536 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 9537              		.loc 19 92 57 view .LVU2654
 9538 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9539              		.loc 19 98 50 view .LVU2655
 9540 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 9541              		.loc 19 101 9 view .LVU2656
 9542 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 9543              		.loc 19 99 50 view .LVU2657
 9544 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 306


 9545              		.loc 19 98 9 view .LVU2658
 9546 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 9547              		.loc 19 99 9 view .LVU2659
 9548 0544 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 9549              		.loc 19 101 9 view .LVU2660
 9550 0546 40F2EB81 		bls	.L496
 103:delayline_reverse.h ****             {
 9551              		.loc 19 103 17 view .LVU2661
 9552 054a 9849     		ldr	r1, .L589+12
 103:delayline_reverse.h ****             {
 9553              		.loc 19 103 13 view .LVU2662
 9554 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9555              		.loc 19 103 17 view .LVU2663
 9556 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 9557              		.loc 19 103 13 view .LVU2664
 9558 0550 0028     		cmp	r0, #0
 9559 0552 40F0EB81 		bne	.L579
 107:delayline_reverse.h ****                 {
 9560              		.loc 19 107 21 view .LVU2665
 9561 0556 9648     		ldr	r0, .L589+16
 105:delayline_reverse.h ****                 
 9562              		.loc 19 105 17 view .LVU2666
 9563 0558 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9564              		.loc 19 110 45 view .LVU2667
 9565 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 9566              		.loc 19 107 17 view .LVU2668
 9567 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9568              		.loc 19 107 21 view .LVU2669
 9569 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 9570              		.loc 19 105 17 view .LVU2670
 9571 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 9572              		.loc 19 107 17 view .LVU2671
 9573 0562 002D     		cmp	r5, #0
 9574 0564 40F02C83 		bne	.L498
 110:delayline_reverse.h ****                 }
 9575              		.loc 19 110 21 view .LVU2672
 9576 0568 E260     		str	r2, [r4, #12]
 9577              	.L499:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9578              		.loc 19 130 45 view .LVU2673
 9579 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9580              	.LVL592:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9581              		.loc 19 130 45 view .LVU2674
 9582 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9583              		.loc 19 130 37 view .LVU2675
 9584 0572 039A     		ldr	r2, [sp, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 307


 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9585              		.loc 19 130 45 view .LVU2676
 9586 0574 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9587              		.loc 19 130 37 view .LVU2677
 9588 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9589              		.loc 19 130 45 view .LVU2678
 9590 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9591              		.loc 19 130 37 view .LVU2679
 9592 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 9593              		.loc 19 131 17 view .LVU2680
 9594 0584 F4EEC77A 		vcmpe.f32	s15, s14
 9595 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9596 058c 40F31F83 		ble	.L581
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9597              		.loc 19 133 21 view .LVU2681
 9598 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9599              		.loc 19 134 21 view .LVU2682
 9600 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9601              		.loc 19 133 21 view .LVU2683
 9602 0594 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 9603              		.loc 19 135 21 view .LVU2684
 9604 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9605              		.loc 19 134 21 view .LVU2685
 9606 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 9607              		.loc 19 135 21 view .LVU2686
 9608 059c 0270     		strb	r2, [r0]
 9609              	.LVL593:
 9610              	.L502:
 135:delayline_reverse.h ****                 }
 9611              		.loc 19 135 21 view .LVU2687
 9612              	.LBE1852:
 9613              	.LBE1856:
 9614              	.LBE1861:
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9615              		.loc 20 393 9 is_stmt 1 view .LVU2688
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9616              		.loc 20 393 56 is_stmt 0 view .LVU2689
 9617 059e 06AA     		add	r2, sp, #24
 9618 05a0 5946     		mov	r1, fp
 9619 05a2 8448     		ldr	r0, .L589+20
 9620 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9621              	.LVL594:
 394:Veno-Echo.cpp **** 
 9622              		.loc 20 394 56 view .LVU2690
 9623 05a8 18EE101A 		vmov	r1, s16	@ int
 9624 05ac 07AA     		add	r2, sp, #28
 9625 05ae 8248     		ldr	r0, .L589+24
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 308


 9626              		.loc 20 393 56 view .LVU2691
 9627 05b0 F0EE408A 		vmov.f32	s17, s0
 9628              	.LVL595:
 394:Veno-Echo.cpp **** 
 9629              		.loc 20 394 9 is_stmt 1 view .LVU2692
 394:Veno-Echo.cpp **** 
 9630              		.loc 20 394 56 is_stmt 0 view .LVU2693
 9631 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9632              	.LVL596:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9633              		.loc 20 397 46 view .LVU2694
 9634 05b8 8048     		ldr	r0, .L589+28
 394:Veno-Echo.cpp **** 
 9635              		.loc 20 394 56 view .LVU2695
 9636 05ba B0EE408A 		vmov.f32	s16, s0
 9637              	.LVL597:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9638              		.loc 20 397 9 is_stmt 1 view .LVU2696
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9639              		.loc 20 397 46 is_stmt 0 view .LVU2697
 9640 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 9641              	.LVL598:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9642              		.loc 20 397 46 view .LVU2698
 9643 05c2 0346     		mov	r3, r0
 398:Veno-Echo.cpp **** 
 9644              		.loc 20 398 46 view .LVU2699
 9645 05c4 7E48     		ldr	r0, .L589+32
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9646              		.loc 20 397 45 view .LVU2700
 9647 05c6 1B68     		ldr	r3, [r3]	@ float
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9648              		.loc 20 397 47 view .LVU2701
 9649 05c8 0893     		str	r3, [sp, #32]	@ float
 398:Veno-Echo.cpp **** 
 9650              		.loc 20 398 9 is_stmt 1 view .LVU2702
 398:Veno-Echo.cpp **** 
 9651              		.loc 20 398 46 is_stmt 0 view .LVU2703
 9652 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 9653              	.LVL599:
 398:Veno-Echo.cpp **** 
 9654              		.loc 20 398 45 view .LVU2704
 9655 05ce 0368     		ldr	r3, [r0]	@ float
 398:Veno-Echo.cpp **** 
 9656              		.loc 20 398 47 view .LVU2705
 9657 05d0 0993     		str	r3, [sp, #36]	@ float
 401:Veno-Echo.cpp **** 
 9658              		.loc 20 401 9 is_stmt 1 view .LVU2706
 401:Veno-Echo.cpp **** 
 9659              		.loc 20 401 28 is_stmt 0 view .LVU2707
 9660 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 9661              	.LVL600:
 404:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9662              		.loc 20 404 9 is_stmt 1 view .LVU2708
 9663              	.LBB1862:
 9664              	.LBB1863:
1859:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 309


 9665              		.loc 20 1859 5 is_stmt 0 view .LVU2709
 9666 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 9667              	.LBE1863:
 9668              	.LBE1862:
 404:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9669              		.loc 20 404 34 view .LVU2710
 9670 05da DDED087A 		vldr.32	s15, [sp, #32]
 9671              	.LVL601:
 9672              	.LBB1866:
 9673              	.LBI1862:
1856:Veno-Echo.cpp **** {
 9674              		.loc 20 1856 7 is_stmt 1 view .LVU2711
 9675              	.LBB1864:
1858:Veno-Echo.cpp ****     if (input > limit)
 9676              		.loc 20 1858 5 view .LVU2712
1859:Veno-Echo.cpp ****         returnval = limit;
 9677              		.loc 20 1859 5 view .LVU2713
 9678 05de F4EEC77A 		vcmpe.f32	s15, s14
 9679 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9680 05e6 00F39881 		bgt	.L543
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9681              		.loc 20 1861 10 view .LVU2714
 9682 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
1862:Veno-Echo.cpp ****     else
 9683              		.loc 20 1862 19 is_stmt 0 view .LVU2715
 9684 05ee F4EE477A 		vcmp.f32	s15, s14
 9685 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9686 05f6 48BF     		it	mi
 9687 05f8 F0EE477A 		vmovmi.f32	s15, s14
 9688              	.LVL602:
 9689              	.L506:
1866:Veno-Echo.cpp **** }
 9690              		.loc 20 1866 5 is_stmt 1 view .LVU2716
1866:Veno-Echo.cpp **** }
 9691              		.loc 20 1866 5 is_stmt 0 view .LVU2717
 9692              	.LBE1864:
 9693              	.LBE1866:
 9694              	.LBB1867:
 9695              	.LBB1868:
1859:Veno-Echo.cpp ****         returnval = limit;
 9696              		.loc 20 1859 5 view .LVU2718
 9697 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 9698              	.LBE1868:
 9699              	.LBE1867:
 405:Veno-Echo.cpp **** 
 9700              		.loc 20 405 34 view .LVU2719
 9701 0600 9DED090A 		vldr.32	s0, [sp, #36]
 404:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9702              		.loc 20 404 23 view .LVU2720
 9703 0604 CDED087A 		vstr.32	s15, [sp, #32]
 405:Veno-Echo.cpp **** 
 9704              		.loc 20 405 9 is_stmt 1 view .LVU2721
 9705              	.LVL603:
 9706              	.LBB1872:
 9707              	.LBI1867:
1856:Veno-Echo.cpp **** {
 9708              		.loc 20 1856 7 view .LVU2722
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 310


 9709              	.LBB1869:
1858:Veno-Echo.cpp ****     if (input > limit)
 9710              		.loc 20 1858 5 view .LVU2723
1859:Veno-Echo.cpp ****         returnval = limit;
 9711              		.loc 20 1859 5 view .LVU2724
 9712 0608 B4EEC70A 		vcmpe.f32	s0, s14
 9713 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9714 0610 00F3EA80 		bgt	.L544
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9715              		.loc 20 1861 10 view .LVU2725
 9716 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 9717              	.LBE1869:
 9718              	.LBE1872:
 9719              	.LBB1873:
 407:Veno-Echo.cpp **** {
 9720              		.loc 20 407 1 is_stmt 0 view .LVU2726
 9721 0618 6A4B     		ldr	r3, .L589+36
 9722 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9723              	.LBE1873:
 9724              	.LBB1895:
 9725              	.LBB1870:
1862:Veno-Echo.cpp ****     else
 9726              		.loc 20 1862 19 view .LVU2727
 9727 061c B4EE470A 		vcmp.f32	s0, s14
 9728 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9729 0624 48BF     		it	mi
 9730 0626 B0EE470A 		vmovmi.f32	s0, s14
 9731              	.LVL604:
1866:Veno-Echo.cpp **** }
 9732              		.loc 20 1866 5 is_stmt 1 view .LVU2728
1866:Veno-Echo.cpp **** }
 9733              		.loc 20 1866 5 is_stmt 0 view .LVU2729
 9734              	.LBE1870:
 9735              	.LBE1895:
 405:Veno-Echo.cpp **** 
 9736              		.loc 20 405 23 view .LVU2730
 9737 062a 8DED090A 		vstr.32	s0, [sp, #36]
 407:Veno-Echo.cpp **** {
 9738              		.loc 20 407 1 is_stmt 1 view .LVU2731
 9739              	.LBB1896:
 9740 062e 002B     		cmp	r3, #0
 9741 0630 00F0E380 		beq	.L582
 9742              	.L510:
 9743              	.LBE1896:
 451:Veno-Echo.cpp ****         static float RNegFB{};
 9744              		.loc 20 451 9 view .LVU2732
 452:Veno-Echo.cpp **** 
 9745              		.loc 20 452 9 view .LVU2733
 455:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9746              		.loc 20 455 9 view .LVU2734
 455:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9747              		.loc 20 455 22 is_stmt 0 view .LVU2735
 9748 0634 644B     		ldr	r3, .L589+40
 9749              	.LBB1897:
 9750              	.LBB1898:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 311


  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9751              		.loc 12 57 16 view .LVU2736
 9752 0636 D8ED042A 		vldr.32	s5, [r8, #16]
 9753              	.LBE1898:
 9754              	.LBE1897:
 455:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9755              		.loc 20 455 22 view .LVU2737
 9756 063a D3ED004A 		vldr.32	s9, [r3]
 9757 063e 634B     		ldr	r3, .L589+44
 9758              	.LBB1910:
 9759              	.LBB1899:
 9760              		.loc 12 57 37 view .LVU2738
 9761 0640 98ED006A 		vldr.32	s12, [r8]
 9762              	.LBE1899:
 9763              	.LBE1910:
 455:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9764              		.loc 20 455 22 view .LVU2739
 9765 0644 93ED007A 		vldr.32	s14, [r3]
 458:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9766              		.loc 20 458 22 view .LVU2740
 9767 0648 614B     		ldr	r3, .L589+48
 455:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9768              		.loc 20 455 9 view .LVU2741
 9769 064a F4EEC74A 		vcmpe.f32	s9, s14
 9770              	.LBB1911:
 9771              	.LBB1912:
 9772              		.loc 12 57 16 view .LVU2742
 9773 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9774              		.loc 12 65 20 view .LVU2743
 9775 0652 99ED054A 		vldr.32	s8, [r9, #20]
 9776              		.loc 12 65 53 view .LVU2744
 9777 0656 99ED032A 		vldr.32	s4, [r9, #12]
 9778              	.LBE1912:
 9779              	.LBE1911:
 455:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9780              		.loc 20 455 9 view .LVU2745
 9781 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9782              	.LBB1921:
 9783              	.LBB1900:
 9784              		.loc 12 65 20 view .LVU2746
 9785 065e 98ED053A 		vldr.32	s6, [r8, #20]
 9786              		.loc 12 65 53 view .LVU2747
 9787 0662 98ED031A 		vldr.32	s2, [r8, #12]
 9788              	.LBE1900:
 9789              	.LBE1921:
 474:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9790              		.loc 20 474 13 view .LVU2748
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 312


 9791 0666 DFED5B1A 		vldr.32	s3, .L589+52
 9792 066a 58BF     		it	pl
 9793 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
 458:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9794              		.loc 20 458 9 is_stmt 1 view .LVU2749
 458:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9795              		.loc 20 458 22 is_stmt 0 view .LVU2750
 9796 0670 93ED007A 		vldr.32	s14, [r3]
 9797 0674 584B     		ldr	r3, .L589+56
 9798 0676 D3ED006A 		vldr.32	s13, [r3]
 461:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9799              		.loc 20 461 15 view .LVU2751
 9800 067a 67EEA44A 		vmul.f32	s9, s15, s9
 9801              	.LBB1922:
 9802              	.LBB1913:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9803              		.loc 12 57 37 view .LVU2752
 9804 067e D9ED007A 		vldr.32	s15, [r9]
 9805              	.LBE1913:
 9806              	.LBE1922:
 458:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9807              		.loc 20 458 9 view .LVU2753
 9808 0682 B4EEE67A 		vcmpe.f32	s14, s13
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9809              		.loc 20 465 36 view .LVU2754
 9810 0686 554B     		ldr	r3, .L589+60
 458:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9811              		.loc 20 458 9 view .LVU2755
 9812 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9813 068c 58BF     		it	pl
 9814 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 461:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9815              		.loc 20 461 9 is_stmt 1 view .LVU2756
 9816              	.LVL605:
 462:Veno-Echo.cpp **** 
 9817              		.loc 20 462 9 view .LVU2757
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9818              		.loc 20 465 36 is_stmt 0 view .LVU2758
 9819 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 462:Veno-Echo.cpp **** 
 9820              		.loc 20 462 15 view .LVU2759
 9821 0696 20EE070A 		vmul.f32	s0, s0, s14
 9822              	.LVL606:
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9823              		.loc 20 465 9 is_stmt 1 view .LVU2760
 9824              	.LBB1923:
 9825              	.LBB1901:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9826              		.loc 12 57 33 is_stmt 0 view .LVU2761
 9827 069a 36EEE25A 		vsub.f32	s10, s13, s5
 9828              	.LBE1901:
 9829              	.LBE1923:
 9830              	.LBB1924:
 9831              	.LBB1914:
 9832 069e 76EEE35A 		vsub.f32	s11, s13, s7
 9833              	.LBE1914:
 9834              	.LBE1924:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 313


 9835              	.LBB1925:
 9836              	.LBB1902:
 9837              		.loc 12 65 45 view .LVU2762
 9838 06a2 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9839              		.loc 12 57 37 view .LVU2763
 9840 06a6 25EE065A 		vmul.f32	s10, s10, s12
 9841              	.LBE1902:
 9842              	.LBE1925:
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9843              		.loc 20 465 36 view .LVU2764
 9844 06aa 93ED006A 		vldr.32	s12, [r3]
 9845              	.LBB1926:
 9846              	.LBB1915:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9847              		.loc 12 57 37 view .LVU2765
 9848 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 9849              		.loc 12 65 45 view .LVU2766
 9850 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 9851              	.LBE1915:
 9852              	.LBE1926:
 9853              	.LBB1927:
 9854              	.LBB1903:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9855              		.loc 12 57 28 view .LVU2767
 9856 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
 9857              	.LBE1903:
 9858              	.LBE1927:
 9859              	.LBB1928:
 9860              	.LBB1916:
 9861 06ba E0EE235A 		vfma.f32	s11, s0, s7
 9862              		.loc 12 65 53 view .LVU2768
 9863 06be 67EE827A 		vmul.f32	s15, s15, s4
 9864              	.LBE1916:
 9865              	.LBE1928:
 9866              	.LBB1929:
 9867              	.LBB1904:
 9868 06c2 27EE017A 		vmul.f32	s14, s14, s2
 9869              	.LBE1904:
 9870              	.LBE1929:
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9871              		.loc 20 465 36 view .LVU2769
 9872 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 9873              	.LBB1930:
 9874              	.LBB1905:
  58:envFollow.h   **** 
 9875              		.loc 12 58 30 view .LVU2770
 9876 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9877              		.loc 12 57 13 view .LVU2771
 9878 06ce 88ED005A 		vstr.32	s10, [r8]
 9879              	.LBE1905:
 9880              	.LBE1930:
 9881              	.LBB1931:
 9882              	.LBB1917:
  58:envFollow.h   **** 
 9883              		.loc 12 58 30 view .LVU2772
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 314


 9884 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9885              		.loc 12 57 13 view .LVU2773
 9886 06d6 C9ED005A 		vstr.32	s11, [r9]
 9887              	.LBE1917:
 9888              	.LBE1931:
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9889              		.loc 20 465 89 view .LVU2774
 9890 06da 66EE005A 		vmul.f32	s11, s12, s0
 9891              	.LBB1932:
 9892              	.LBB1906:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9893              		.loc 12 61 27 view .LVU2775
 9894 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9895              		.loc 12 58 21 view .LVU2776
 9896 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 9897              	.LBE1906:
 9898              	.LBE1932:
 9899              	.LBB1933:
 9900              	.LBB1918:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9901              		.loc 12 61 27 view .LVU2777
 9902 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9903              		.loc 12 58 21 view .LVU2778
 9904 06ea C9ED022A 		vstr.32	s5, [r9, #8]
 9905              	.LBE1918:
 9906              	.LBE1933:
 466:Veno-Echo.cpp **** 
 9907              		.loc 20 466 89 view .LVU2779
 9908 06ee 26EE246A 		vmul.f32	s12, s12, s9
 9909              	.LBB1934:
 9910              	.LBB1907:
 9911              		.loc 12 65 40 view .LVU2780
 9912 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9913              		.loc 12 61 20 view .LVU2781
 9914 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 9915              	.LBE1907:
 9916              	.LBE1934:
 9917              	.LBB1935:
 9918              	.LBB1919:
 9919              		.loc 12 65 40 view .LVU2782
 9920 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9921              		.loc 12 61 20 view .LVU2783
 9922 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 9923              	.LBE1919:
 9924              	.LBE1935:
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9925              		.loc 20 465 15 view .LVU2784
 9926 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 9927              	.LVL607:
 466:Veno-Echo.cpp **** 
 9928              		.loc 20 466 9 is_stmt 1 view .LVU2785
 466:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 315


 9929              		.loc 20 466 15 is_stmt 0 view .LVU2786
 9930 0706 A6EE806A 		vfma.f32	s12, s13, s0
 9931              	.LVL608:
 470:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9932              		.loc 20 470 9 is_stmt 1 view .LVU2787
 9933              	.LBB1936:
 9934              	.LBI1897:
  54:envFollow.h   ****     {
 9935              		.loc 12 54 11 view .LVU2788
 9936              	.LBB1908:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9937              		.loc 12 57 9 view .LVU2789
  58:envFollow.h   **** 
 9938              		.loc 12 58 9 view .LVU2790
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9939              		.loc 12 61 9 view .LVU2791
 9940              		.loc 12 65 9 view .LVU2792
 9941              	.LBE1908:
 9942              	.LBE1936:
 474:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9943              		.loc 20 474 13 is_stmt 0 view .LVU2793
 9944 070a B4EEE17A 		vcmpe.f32	s14, s3
 9945              	.LBB1937:
 9946              	.LBB1909:
 9947              		.loc 12 65 17 view .LVU2794
 9948 070e 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9949              		.loc 12 67 9 is_stmt 1 view .LVU2795
 9950              	.LVL609:
 9951              		.loc 12 67 9 is_stmt 0 view .LVU2796
 9952              	.LBE1909:
 9953              	.LBE1937:
 471:Veno-Echo.cpp **** 
 9954              		.loc 20 471 9 is_stmt 1 view .LVU2797
 9955              	.LBB1938:
 9956              	.LBI1911:
  54:envFollow.h   ****     {
 9957              		.loc 12 54 11 view .LVU2798
 9958              	.LBB1920:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9959              		.loc 12 57 9 view .LVU2799
  58:envFollow.h   **** 
 9960              		.loc 12 58 9 view .LVU2800
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9961              		.loc 12 61 9 view .LVU2801
  65:envFollow.h   **** 
 9962              		.loc 12 65 9 view .LVU2802
  65:envFollow.h   **** 
 9963              		.loc 12 65 17 is_stmt 0 view .LVU2803
 9964 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 9965              		.loc 12 67 9 is_stmt 1 view .LVU2804
 9966              	.LVL610:
 9967              		.loc 12 67 9 is_stmt 0 view .LVU2805
 9968              	.LBE1920:
 9969              	.LBE1938:
 474:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 316


 9970              		.loc 20 474 13 is_stmt 1 view .LVU2806
 9971 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9972 071a 3DDB     		blt	.L572
 475:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9973              		.loc 20 475 17 view .LVU2807
 475:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9974              		.loc 20 475 32 is_stmt 0 view .LVU2808
 9975 071c 37EE617A 		vsub.f32	s14, s14, s3
 9976              	.LVL611:
 475:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9977              		.loc 20 475 47 view .LVU2809
 9978 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 9979 0724 27EE267A 		vmul.f32	s14, s14, s13
 9980              	.L516:
 479:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9981              		.loc 20 479 13 view .LVU2810
 9982 0728 DFED2A6A 		vldr.32	s13, .L589+52
 9983 072c 274B     		ldr	r3, .L589+44
 9984 072e F4EEE67A 		vcmpe.f32	s15, s13
 9985 0732 83ED007A 		vstr.32	s14, [r3]
 479:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9986              		.loc 20 479 13 is_stmt 1 view .LVU2811
 9987 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9988 073a 2ADB     		blt	.L573
 480:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9989              		.loc 20 480 17 view .LVU2812
 480:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9990              		.loc 20 480 32 is_stmt 0 view .LVU2813
 9991 073c 77EEE67A 		vsub.f32	s15, s15, s13
 9992              	.LVL612:
 480:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9993              		.loc 20 480 47 view .LVU2814
 9994 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 9995 0744 67EE877A 		vmul.f32	s15, s15, s14
 9996              	.L518:
 9997 0748 234B     		ldr	r3, .L589+56
 484:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9998              		.loc 20 484 15 view .LVU2815
 9999 074a 38EEA50A 		vadd.f32	s0, s17, s11
 10000              	.LVL613:
 485:Veno-Echo.cpp ****  
 10001              		.loc 20 485 15 view .LVU2816
 10002 074e 38EE068A 		vadd.f32	s16, s16, s12
 10003              	.LVL614:
 485:Veno-Echo.cpp ****  
 10004              		.loc 20 485 15 view .LVU2817
 10005 0752 C3ED007A 		vstr.32	s15, [r3]
 484:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10006              		.loc 20 484 9 is_stmt 1 view .LVU2818
 10007              	.LVL615:
 485:Veno-Echo.cpp ****  
 10008              		.loc 20 485 9 view .LVU2819
 488:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 10009              		.loc 20 488 9 view .LVU2820
 10010              	.LBB1939:
 10011              	.LBI1939:
1856:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 317


 10012              		.loc 20 1856 7 view .LVU2821
 10013              	.LBB1940:
1858:Veno-Echo.cpp ****     if (input > limit)
 10014              		.loc 20 1858 5 view .LVU2822
1859:Veno-Echo.cpp ****         returnval = limit;
 10015              		.loc 20 1859 5 view .LVU2823
 10016 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 10017 075a B4EEE70A 		vcmpe.f32	s0, s15
 10018 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10019 0762 13DC     		bgt	.L550
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10020              		.loc 20 1861 10 view .LVU2824
 10021 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
1862:Veno-Echo.cpp ****     else
 10022              		.loc 20 1862 19 is_stmt 0 view .LVU2825
 10023 0768 B4EE670A 		vcmp.f32	s0, s15
 10024 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10025 0770 48BF     		it	mi
 10026 0772 B0EE670A 		vmovmi.f32	s0, s15
 10027              	.LVL616:
 10028              	.L520:
1866:Veno-Echo.cpp **** }
 10029              		.loc 20 1866 5 is_stmt 1 view .LVU2826
1866:Veno-Echo.cpp **** }
 10030              		.loc 20 1866 5 is_stmt 0 view .LVU2827
 10031              	.LBE1940:
 10032              	.LBE1939:
 489:Veno-Echo.cpp **** 
 10033              		.loc 20 489 9 is_stmt 1 view .LVU2828
 10034              	.LBB1942:
 10035              	.LBI1599:
1856:Veno-Echo.cpp **** {
 10036              		.loc 20 1856 7 view .LVU2829
 10037              	.LBB1601:
1858:Veno-Echo.cpp ****     if (input > limit)
 10038              		.loc 20 1858 5 view .LVU2830
1859:Veno-Echo.cpp ****         returnval = limit;
 10039              		.loc 20 1859 5 view .LVU2831
 10040 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 10041 077a B4EEE78A 		vcmpe.f32	s16, s15
 10042 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10043 0782 7FF78FAC 		ble	.L583
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10044              		.loc 20 1860 19 is_stmt 0 view .LVU2832
 10045 0786 B0EE678A 		vmov.f32	s16, s15
 10046              	.LVL617:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10047              		.loc 20 1860 19 view .LVU2833
 10048 078a 94E4     		b	.L522
 10049              	.LVL618:
 10050              	.L550:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10051              		.loc 20 1860 19 view .LVU2834
 10052              	.LBE1601:
 10053              	.LBE1942:
 10054              	.LBB1943:
 10055              	.LBB1941:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 318


 10056 078c B0EE670A 		vmov.f32	s0, s15
 10057              	.LVL619:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10058              		.loc 20 1860 19 view .LVU2835
 10059 0790 F1E7     		b	.L520
 10060              	.LVL620:
 10061              	.L573:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10062              		.loc 20 1860 19 view .LVU2836
 10063              	.LBE1941:
 10064              	.LBE1943:
 481:Veno-Echo.cpp **** 
 10065              		.loc 20 481 25 view .LVU2837
 10066 0792 DFED137A 		vldr.32	s15, .L589+64
 10067              	.LVL621:
 481:Veno-Echo.cpp **** 
 10068              		.loc 20 481 25 view .LVU2838
 10069 0796 D7E7     		b	.L518
 10070              	.LVL622:
 10071              	.L572:
 477:Veno-Echo.cpp ****             
 10072              		.loc 20 477 25 view .LVU2839
 10073 0798 9FED117A 		vldr.32	s14, .L589+64
 10074              	.LVL623:
 477:Veno-Echo.cpp ****             
 10075              		.loc 20 477 25 view .LVU2840
 10076 079c C4E7     		b	.L516
 10077              	.L590:
 10078 079e 00BF     		.align	2
 10079              	.L589:
 10080 07a0 C1270900 		.word	600001
 10081 07a4 BF270900 		.word	599999
 10082 07a8 189F2400 		.word	2400024
 10083 07ac 249F2400 		.word	2400036
 10084 07b0 1C9F2400 		.word	2400028
 10085 07b4 00000000 		.word	.LANCHOR102
 10086 07b8 00000000 		.word	.LANCHOR103
 10087 07bc 00000000 		.word	.LANCHOR0
 10088 07c0 00000000 		.word	.LANCHOR1
 10089 07c4 00000000 		.word	.LANCHOR82
 10090 07c8 00000000 		.word	.LANCHOR31
 10091 07cc 00000000 		.word	.LANCHOR125
 10092 07d0 00000000 		.word	.LANCHOR43
 10093 07d4 CDCCCC3E 		.word	1053609165
 10094 07d8 00000000 		.word	.LANCHOR126
 10095 07dc 00000000 		.word	.LANCHOR71
 10096 07e0 00000000 		.word	0
 10097 07e4 C0270900 		.word	600000
 10098              	.LVL624:
 10099              	.L544:
 10100              	.LBB1944:
 407:Veno-Echo.cpp **** {
 10101              		.loc 20 407 1 view .LVU2841
 10102 07e8 D64B     		ldr	r3, .L591
 10103              	.LBE1944:
 10104              	.LBB1945:
 10105              	.LBB1871:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 319


1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10106              		.loc 20 1860 19 view .LVU2842
 10107 07ea B0EE470A 		vmov.f32	s0, s14
 10108              	.LVL625:
1866:Veno-Echo.cpp **** }
 10109              		.loc 20 1866 5 is_stmt 1 view .LVU2843
1866:Veno-Echo.cpp **** }
 10110              		.loc 20 1866 5 is_stmt 0 view .LVU2844
 10111              	.LBE1871:
 10112              	.LBE1945:
 10113              	.LBB1946:
 407:Veno-Echo.cpp **** {
 10114              		.loc 20 407 1 view .LVU2845
 10115 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10116              	.LBE1946:
 405:Veno-Echo.cpp **** 
 10117              		.loc 20 405 23 view .LVU2846
 10118 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 407:Veno-Echo.cpp **** {
 10119              		.loc 20 407 1 is_stmt 1 view .LVU2847
 10120              	.LBB1947:
 10121 07f4 002B     		cmp	r3, #0
 10122 07f6 7FF41DAF 		bne	.L510
 10123              	.L582:
 10124              	.LBB1874:
 413:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10125              		.loc 20 413 9 view .LVU2848
 413:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10126              		.loc 20 413 22 is_stmt 0 view .LVU2849
 10127 07fa 9FEDD39A 		vldr.32	s18, .L591+4
 10128 07fe D34D     		ldr	r5, .L591+8
 10129 0800 27EE890A 		vmul.f32	s0, s15, s18
 414:Veno-Echo.cpp **** 
 10130              		.loc 20 414 22 view .LVU2850
 10131 0804 D24C     		ldr	r4, .L591+12
 413:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10132              		.loc 20 413 22 view .LVU2851
 10133 0806 2846     		mov	r0, r5
 10134 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10135              	.LVL626:
 414:Veno-Echo.cpp **** 
 10136              		.loc 20 414 9 is_stmt 1 view .LVU2852
 414:Veno-Echo.cpp **** 
 10137              		.loc 20 414 22 is_stmt 0 view .LVU2853
 10138 080c 9DED090A 		vldr.32	s0, [sp, #36]
 10139 0810 2046     		mov	r0, r4
 10140 0812 20EE090A 		vmul.f32	s0, s0, s18
 10141 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10142              	.LVL627:
 417:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10143              		.loc 20 417 9 is_stmt 1 view .LVU2854
 417:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10144              		.loc 20 417 9 is_stmt 0 view .LVU2855
 10145              	.LBE1874:
 10146              	.LBE1947:
 10147              	.LBE1974:
 10148              	.LBE1985:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 320


  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10149              		.loc 9 52 26 is_stmt 1 view .LVU2856
 10150              	.LBB1986:
 10151              	.LBB1975:
 10152              	.LBB1948:
 10153              	.LBB1889:
 417:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10154              		.loc 20 417 40 is_stmt 0 view .LVU2857
 10155 081a F2EE046A 		vmov.f32	s13, #1.0e+1
 10156 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 421:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10157              		.loc 20 421 49 view .LVU2858
 10158 0822 0CAA     		add	r2, sp, #48
 418:Veno-Echo.cpp ****         
 10159              		.loc 20 418 40 view .LVU2859
 10160 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 421:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10161              		.loc 20 421 49 view .LVU2860
 10162 0828 08A9     		add	r1, sp, #32
 417:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10163              		.loc 20 417 40 view .LVU2861
 10164 082a 27EE267A 		vmul.f32	s14, s14, s13
 421:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10165              		.loc 20 421 49 view .LVU2862
 10166 082e C948     		ldr	r0, .L591+16
 418:Veno-Echo.cpp ****         
 10167              		.loc 20 418 40 view .LVU2863
 10168 0830 67EEA67A 		vmul.f32	s15, s15, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 321


 417:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10169              		.loc 20 417 47 view .LVU2864
 10170 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
 418:Veno-Echo.cpp ****         
 10171              		.loc 20 418 9 is_stmt 1 view .LVU2865
 10172              	.LVL628:
 418:Veno-Echo.cpp ****         
 10173              		.loc 20 418 9 is_stmt 0 view .LVU2866
 10174              	.LBE1889:
 10175              	.LBE1948:
 10176              	.LBE1975:
 10177              	.LBE1986:
 10178              		.loc 9 52 26 is_stmt 1 view .LVU2867
 10179              	.LBB1987:
 10180              	.LBB1976:
 10181              	.LBB1949:
 10182              	.LBB1890:
 418:Veno-Echo.cpp ****         
 10183              		.loc 20 418 47 is_stmt 0 view .LVU2868
 10184 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 421:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10185              		.loc 20 421 9 is_stmt 1 view .LVU2869
 421:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10186              		.loc 20 421 49 is_stmt 0 view .LVU2870
 10187 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10188              	.LVL629:
 422:Veno-Echo.cpp **** 
 10189              		.loc 20 422 49 view .LVU2871
 10190 0840 0DAA     		add	r2, sp, #52
 10191 0842 09A9     		add	r1, sp, #36
 10192 0844 C448     		ldr	r0, .L591+20
 421:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10193              		.loc 20 421 78 view .LVU2872
 10194 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 422:Veno-Echo.cpp **** 
 10195              		.loc 20 422 9 is_stmt 1 view .LVU2873
 422:Veno-Echo.cpp **** 
 10196              		.loc 20 422 49 is_stmt 0 view .LVU2874
 10197 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10198              	.LVL630:
 10199              	.LBB1875:
 10200              	.LBB1876:
1859:Veno-Echo.cpp ****         returnval = limit;
 10201              		.loc 20 1859 5 view .LVU2875
 10202 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 10203              	.LBE1876:
 10204              	.LBE1875:
 425:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10205              		.loc 20 425 36 view .LVU2876
 10206 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 422:Veno-Echo.cpp **** 
 10207              		.loc 20 422 49 view .LVU2877
 10208 0856 F0EE407A 		vmov.f32	s15, s0
 425:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10209              		.loc 20 425 9 is_stmt 1 view .LVU2878
 10210              	.LVL631:
 10211              	.LBB1880:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 322


 10212              	.LBI1875:
1856:Veno-Echo.cpp **** {
 10213              		.loc 20 1856 7 view .LVU2879
 10214              	.LBB1877:
1858:Veno-Echo.cpp ****     if (input > limit)
 10215              		.loc 20 1858 5 view .LVU2880
1859:Veno-Echo.cpp ****         returnval = limit;
 10216              		.loc 20 1859 5 view .LVU2881
 10217 085a B4EEE67A 		vcmpe.f32	s14, s13
 10218 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10219 0862 00F3A681 		bgt	.L545
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10220              		.loc 20 1861 10 view .LVU2882
 10221 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10222 086a B4EEE67A 		vcmpe.f32	s14, s13
 10223 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10224 0872 00F1B581 		bmi	.L546
 10225 0876 27EE090A 		vmul.f32	s0, s14, s18
 10226              	.LVL632:
 10227              	.L511:
1866:Veno-Echo.cpp **** }
 10228              		.loc 20 1866 5 view .LVU2883
1866:Veno-Echo.cpp **** }
 10229              		.loc 20 1866 5 is_stmt 0 view .LVU2884
 10230              	.LBE1877:
 10231              	.LBE1880:
 10232              	.LBB1881:
 10233              	.LBB1882:
1859:Veno-Echo.cpp ****         returnval = limit;
 10234              		.loc 20 1859 5 view .LVU2885
 10235 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 10236              	.LBE1882:
 10237              	.LBE1881:
 425:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10238              		.loc 20 425 25 view .LVU2886
 10239 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 426:Veno-Echo.cpp **** 
 10240              		.loc 20 426 9 is_stmt 1 view .LVU2887
 10241              	.LVL633:
 10242              	.LBB1885:
 10243              	.LBI1881:
1856:Veno-Echo.cpp **** {
 10244              		.loc 20 1856 7 view .LVU2888
 10245              	.LBB1883:
1858:Veno-Echo.cpp ****     if (input > limit)
 10246              		.loc 20 1858 5 view .LVU2889
1859:Veno-Echo.cpp ****         returnval = limit;
 10247              		.loc 20 1859 5 view .LVU2890
 10248 0882 F4EEE67A 		vcmpe.f32	s15, s13
 10249 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10250 088a 00F38F81 		bgt	.L547
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10251              		.loc 20 1861 10 view .LVU2891
 10252 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
1862:Veno-Echo.cpp ****     else
 10253              		.loc 20 1862 19 is_stmt 0 view .LVU2892
 10254 0892 F4EE477A 		vcmp.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 323


 10255 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10256 089a 48BF     		it	mi
 10257 089c F0EE477A 		vmovmi.f32	s15, s14
 10258              	.LVL634:
 10259              	.L512:
1866:Veno-Echo.cpp **** }
 10260              		.loc 20 1866 5 is_stmt 1 view .LVU2893
1866:Veno-Echo.cpp **** }
 10261              		.loc 20 1866 5 is_stmt 0 view .LVU2894
 10262              	.LBE1883:
 10263              	.LBE1885:
 429:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10264              		.loc 20 429 22 view .LVU2895
 10265 08a0 AE4D     		ldr	r5, .L591+24
 430:Veno-Echo.cpp **** 
 10266              		.loc 20 430 22 view .LVU2896
 10267 08a2 AF4C     		ldr	r4, .L591+28
 429:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10268              		.loc 20 429 22 view .LVU2897
 10269 08a4 2846     		mov	r0, r5
 426:Veno-Echo.cpp **** 
 10270              		.loc 20 426 25 view .LVU2898
 10271 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 429:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10272              		.loc 20 429 9 is_stmt 1 view .LVU2899
 429:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10273              		.loc 20 429 22 is_stmt 0 view .LVU2900
 10274 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10275              	.LVL635:
 430:Veno-Echo.cpp **** 
 10276              		.loc 20 430 9 is_stmt 1 view .LVU2901
 430:Veno-Echo.cpp **** 
 10277              		.loc 20 430 22 is_stmt 0 view .LVU2902
 10278 08ae DFEDA67A 		vldr.32	s15, .L591+4
 10279 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 10280 08b6 2046     		mov	r0, r4
 10281 08b8 20EE270A 		vmul.f32	s0, s0, s15
 10282 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10283              	.LVL636:
 432:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10284              		.loc 20 432 9 is_stmt 1 view .LVU2903
 432:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10285              		.loc 20 432 9 is_stmt 0 view .LVU2904
 10286              	.LBE1890:
 10287              	.LBE1949:
 10288              	.LBE1976:
 10289              	.LBE1987:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10290              		.loc 9 56 27 is_stmt 1 view .LVU2905
 10291              	.LBB1988:
 10292              	.LBB1977:
 10293              	.LBB1950:
 10294              	.LBB1891:
 432:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 324


 10295              		.loc 20 432 41 is_stmt 0 view .LVU2906
 10296 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 10297 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
 435:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10298              		.loc 20 435 45 view .LVU2907
 10299 08c8 0EA9     		add	r1, sp, #56
 433:Veno-Echo.cpp **** 
 10300              		.loc 20 433 41 view .LVU2908
 10301 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 435:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10302              		.loc 20 435 45 view .LVU2909
 10303 08ce 10AA     		add	r2, sp, #64
 432:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10304              		.loc 20 432 41 view .LVU2910
 10305 08d0 27EE267A 		vmul.f32	s14, s14, s13
 435:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10306              		.loc 20 435 45 view .LVU2911
 10307 08d4 A348     		ldr	r0, .L591+32
 433:Veno-Echo.cpp **** 
 10308              		.loc 20 433 41 view .LVU2912
 10309 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 432:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10310              		.loc 20 432 48 view .LVU2913
 10311 08da 8DED107A 		vstr.32	s14, [sp, #64]
 433:Veno-Echo.cpp **** 
 10312              		.loc 20 433 9 is_stmt 1 view .LVU2914
 10313              	.LVL637:
 433:Veno-Echo.cpp **** 
 10314              		.loc 20 433 9 is_stmt 0 view .LVU2915
 10315              	.LBE1891:
 10316              	.LBE1950:
 10317              	.LBE1977:
 10318              	.LBE1988:
 10319              		.loc 9 56 27 is_stmt 1 view .LVU2916
 10320              	.LBB1989:
 10321              	.LBB1978:
 10322              	.LBB1951:
 10323              	.LBB1892:
 433:Veno-Echo.cpp **** 
 10324              		.loc 20 433 48 is_stmt 0 view .LVU2917
 10325 08de CDED117A 		vstr.32	s15, [sp, #68]
 435:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10326              		.loc 20 435 9 is_stmt 1 view .LVU2918
 435:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10327              		.loc 20 435 45 is_stmt 0 view .LVU2919
 10328 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10329              	.LVL638:
 436:Veno-Echo.cpp **** 
 10330              		.loc 20 436 45 view .LVU2920
 10331 08e6 0FA9     		add	r1, sp, #60
 10332 08e8 11AA     		add	r2, sp, #68
 10333 08ea 9F48     		ldr	r0, .L591+36
 435:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10334              		.loc 20 435 25 view .LVU2921
 10335 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 436:Veno-Echo.cpp **** 
 10336              		.loc 20 436 9 is_stmt 1 view .LVU2922
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 325


 436:Veno-Echo.cpp **** 
 10337              		.loc 20 436 45 is_stmt 0 view .LVU2923
 10338 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10339              	.LVL639:
 440:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10340              		.loc 20 440 44 view .LVU2924
 10341 08f4 0EAA     		add	r2, sp, #56
 10342 08f6 08A9     		add	r1, sp, #32
 10343 08f8 9C48     		ldr	r0, .L591+40
 436:Veno-Echo.cpp **** 
 10344              		.loc 20 436 25 view .LVU2925
 10345 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 440:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10346              		.loc 20 440 9 is_stmt 1 view .LVU2926
 440:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10347              		.loc 20 440 44 is_stmt 0 view .LVU2927
 10348 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10349              	.LVL640:
 441:Veno-Echo.cpp **** 
 10350              		.loc 20 441 44 view .LVU2928
 10351 0902 0FAA     		add	r2, sp, #60
 10352 0904 09A9     		add	r1, sp, #36
 10353 0906 9A48     		ldr	r0, .L591+44
 440:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10354              		.loc 20 440 23 view .LVU2929
 10355 0908 8DED080A 		vstr.32	s0, [sp, #32]
 441:Veno-Echo.cpp **** 
 10356              		.loc 20 441 9 is_stmt 1 view .LVU2930
 441:Veno-Echo.cpp **** 
 10357              		.loc 20 441 44 is_stmt 0 view .LVU2931
 10358 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10359              	.LVL641:
 10360 0910 DDED087A 		vldr.32	s15, [sp, #32]
 441:Veno-Echo.cpp **** 
 10361              		.loc 20 441 23 view .LVU2932
 10362 0914 8DED090A 		vstr.32	s0, [sp, #36]
 10363              	.LBE1892:
 10364 0918 8CE6     		b	.L510
 10365              	.LVL642:
 10366              	.L543:
 441:Veno-Echo.cpp **** 
 10367              		.loc 20 441 23 view .LVU2933
 10368              	.LBE1951:
 10369              	.LBB1952:
 10370              	.LBB1865:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10371              		.loc 20 1860 19 view .LVU2934
 10372 091a F0EE477A 		vmov.f32	s15, s14
 10373              	.LVL643:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10374              		.loc 20 1860 19 view .LVU2935
 10375 091e 6DE6     		b	.L506
 10376              	.LVL644:
 10377              	.L496:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10378              		.loc 20 1860 19 view .LVU2936
 10379              	.LBE1865:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 326


 10380              	.LBE1952:
 10381              	.LBB1953:
 10382              	.LBB1857:
 10383              	.LBB1853:
 126:delayline_reverse.h ****         {
 10384              		.loc 19 126 12 view .LVU2937
 10385 0920 944B     		ldr	r3, .L591+48
 126:delayline_reverse.h ****         {
 10386              		.loc 19 126 9 view .LVU2938
 10387 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10388              		.loc 19 126 12 view .LVU2939
 10389 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10390              		.loc 19 126 9 view .LVU2940
 10391 0926 002A     		cmp	r2, #0
 10392 0928 3FF439AE 		beq	.L502
 10393              	.L579:
 126:delayline_reverse.h ****         {
 10394              		.loc 19 126 9 view .LVU2941
 10395 092c 924A     		ldr	r2, .L591+52
 10396 092e A018     		adds	r0, r4, r2
 10397 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10398              		.loc 19 128 13 view .LVU2942
 10399 0932 002A     		cmp	r2, #0
 10400 0934 3FF419AE 		beq	.L499
 10401              	.L500:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10402              		.loc 19 141 45 view .LVU2943
 10403 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10404              	.LVL645:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10405              		.loc 19 141 45 view .LVU2944
 10406 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10407              		.loc 19 141 37 view .LVU2945
 10408 0940 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10409              		.loc 19 142 17 view .LVU2946
 10410 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10411              		.loc 19 141 45 view .LVU2947
 10412 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10413              		.loc 19 141 37 view .LVU2948
 10414 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10415              		.loc 19 141 45 view .LVU2949
 10416 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10417              		.loc 19 141 37 view .LVU2950
 10418 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10419              		.loc 19 142 17 view .LVU2951
 10420 0954 F5EEC07A 		vcmpe.f32	s15, #0
 10421 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 327


 10422 095c 00F13A81 		bmi	.L505
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10423              		.loc 19 141 17 view .LVU2952
 10424 0960 C1ED007A 		vstr.32	s15, [r1]
 10425 0964 1BE6     		b	.L502
 10426              	.LVL646:
 10427              	.L486:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10428              		.loc 19 141 17 view .LVU2953
 10429              	.LBE1853:
 10430              	.LBE1857:
 10431              	.LBE1953:
 10432              	.LBB1954:
 10433              	.LBB1830:
 10434              	.LBB1819:
 126:delayline_reverse.h ****         {
 10435              		.loc 19 126 12 view .LVU2954
 10436 0966 834A     		ldr	r2, .L591+48
 126:delayline_reverse.h ****         {
 10437              		.loc 19 126 9 view .LVU2955
 10438 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10439              		.loc 19 126 12 view .LVU2956
 10440 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 10441              		.loc 19 126 9 view .LVU2957
 10442 096c 002B     		cmp	r3, #0
 10443 096e 3FF4ABAD 		beq	.L492
 10444              	.L577:
 126:delayline_reverse.h ****         {
 10445              		.loc 19 126 9 view .LVU2958
 10446 0972 814B     		ldr	r3, .L591+52
 10447 0974 E818     		adds	r0, r5, r3
 10448 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10449              		.loc 19 128 13 view .LVU2959
 10450 0978 002B     		cmp	r3, #0
 10451 097a 3FF435AD 		beq	.L489
 10452              	.L490:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10453              		.loc 19 141 45 view .LVU2960
 10454 097e 07EE90EA 		vmov	s15, lr	@ int
 10455              	.LVL647:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10456              		.loc 19 141 45 view .LVU2961
 10457 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 10458              		.loc 19 142 17 view .LVU2962
 10459 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10460              		.loc 19 141 45 view .LVU2963
 10461 0988 B8EE677A 		vcvt.f32.u32	s14, s15
 10462 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10463              		.loc 19 141 37 view .LVU2964
 10464 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 328


 10465              		.loc 19 142 17 view .LVU2965
 10466 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 10467 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10468 099c 40F1C580 		bpl	.L578
 145:delayline_reverse.h ****                     playinghead_ = false;
 10469              		.loc 19 145 21 view .LVU2966
 10470 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10471              		.loc 19 144 21 view .LVU2967
 10472 09a2 049D     		ldr	r5, [sp, #16]
 10473              	.LVL648:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10474              		.loc 19 144 21 view .LVU2968
 10475 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10476              		.loc 19 145 21 view .LVU2969
 10477 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 10478              		.loc 19 146 21 view .LVU2970
 10479 09a8 0170     		strb	r1, [r0]
 10480 09aa 8DE5     		b	.L492
 10481              	.LVL649:
 10482              	.L537:
 146:delayline_reverse.h ****                 }
 10483              		.loc 19 146 21 view .LVU2971
 10484              	.LBE1819:
 10485              	.LBE1830:
 10486              	.LBE1954:
 570:Veno-Echo.cpp ****             out[i+1] = mixR;
 10487              		.loc 20 570 13 is_stmt 1 view .LVU2972
 570:Veno-Echo.cpp ****             out[i+1] = mixR;
 10488              		.loc 20 570 20 is_stmt 0 view .LVU2973
 10489 09ac 009B     		ldr	r3, [sp]
 10490 09ae C3ED007A 		vstr.32	s15, [r3]
 571:Veno-Echo.cpp ****         }
 10491              		.loc 20 571 13 is_stmt 1 view .LVU2974
 571:Veno-Echo.cpp ****         }
 10492              		.loc 20 571 22 is_stmt 0 view .LVU2975
 10493 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 10494 09b6 FFF7EDBB 		b	.L538
 10495              	.LVL650:
 10496              	.L574:
 551:Veno-Echo.cpp ****         {
 10497              		.loc 20 551 14 is_stmt 1 view .LVU2976
 10498 09ba 40F3AC80 		ble	.L575
 553:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10499              		.loc 20 553 13 view .LVU2977
 553:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10500              		.loc 20 553 24 is_stmt 0 view .LVU2978
 10501 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 553:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10502              		.loc 20 553 18 view .LVU2979
 10503 09c2 DBED005A 		vldr.32	s11, [fp]
 554:Veno-Echo.cpp ****         }
 10504              		.loc 20 554 18 view .LVU2980
 10505 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 553:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 329


 10506              		.loc 20 553 24 view .LVU2981
 10507 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 553:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10508              		.loc 20 553 33 view .LVU2982
 10509 09ce 37EE077A 		vadd.f32	s14, s14, s14
 553:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10510              		.loc 20 553 18 view .LVU2983
 10511 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 10512              	.LVL651:
 554:Veno-Echo.cpp ****         }
 10513              		.loc 20 554 13 is_stmt 1 view .LVU2984
 554:Veno-Echo.cpp ****         }
 10514              		.loc 20 554 18 is_stmt 0 view .LVU2985
 10515 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 10516              	.LVL652:
 554:Veno-Echo.cpp ****         }
 10517              		.loc 20 554 18 view .LVU2986
 10518 09da FFF7D2BB 		b	.L534
 10519              	.LVL653:
 10520              	.L553:
 10521              	.LBB1955:
 505:Veno-Echo.cpp **** {
 10522              		.loc 20 505 1 view .LVU2987
 10523 09de 594B     		ldr	r3, .L591
 10524              	.LBE1955:
 10525              	.LBB1956:
 10526              	.LBB1611:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10527              		.loc 20 1860 19 view .LVU2988
 10528 09e0 B0EE470A 		vmov.f32	s0, s14
 10529              	.LVL654:
1866:Veno-Echo.cpp **** }
 10530              		.loc 20 1866 5 is_stmt 1 view .LVU2989
1866:Veno-Echo.cpp **** }
 10531              		.loc 20 1866 5 is_stmt 0 view .LVU2990
 10532              	.LBE1611:
 10533              	.LBE1956:
 10534              	.LBB1957:
 505:Veno-Echo.cpp **** {
 10535              		.loc 20 505 1 view .LVU2991
 10536 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10537              	.LBE1957:
 503:Veno-Echo.cpp **** 
 10538              		.loc 20 503 27 view .LVU2992
 10539 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 505:Veno-Echo.cpp **** {
 10540              		.loc 20 505 1 is_stmt 1 view .LVU2993
 10541              	.LBB1958:
 10542 09ea 002B     		cmp	r3, #0
 10543 09ec 3FF4B0AB 		beq	.L528
 10544              	.L580:
 10545              	.LBB1614:
 511:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10546              		.loc 20 511 9 view .LVU2994
 511:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10547              		.loc 20 511 27 is_stmt 0 view .LVU2995
 10548 09f0 9FED558A 		vldr.32	s16, .L591+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 330


 10549              	.LVL655:
 511:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10550              		.loc 20 511 27 view .LVU2996
 10551 09f4 614D     		ldr	r5, .L591+56
 10552 09f6 27EE880A 		vmul.f32	s0, s15, s16
 512:Veno-Echo.cpp **** 
 10553              		.loc 20 512 27 view .LVU2997
 10554 09fa 614C     		ldr	r4, .L591+60
 511:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10555              		.loc 20 511 27 view .LVU2998
 10556 09fc 2846     		mov	r0, r5
 10557 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10558              	.LVL656:
 512:Veno-Echo.cpp **** 
 10559              		.loc 20 512 9 is_stmt 1 view .LVU2999
 512:Veno-Echo.cpp **** 
 10560              		.loc 20 512 27 is_stmt 0 view .LVU3000
 10561 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 10562 0a06 2046     		mov	r0, r4
 10563 0a08 20EE080A 		vmul.f32	s0, s0, s16
 10564 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10565              	.LVL657:
 515:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10566              		.loc 20 515 9 is_stmt 1 view .LVU3001
 515:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10567              		.loc 20 515 9 is_stmt 0 view .LVU3002
 10568              	.LBE1614:
 10569              	.LBE1958:
 10570              	.LBE1978:
 10571              	.LBE1989:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10572              		.loc 9 52 26 is_stmt 1 view .LVU3003
 10573              	.LBB1990:
 10574              	.LBB1979:
 10575              	.LBB1959:
 10576              	.LBB1629:
 515:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10577              		.loc 20 515 50 is_stmt 0 view .LVU3004
 10578 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 10579 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 519:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10580              		.loc 20 519 59 view .LVU3005
 10581 0a18 0AA9     		add	r1, sp, #40
 516:Veno-Echo.cpp ****         
 10582              		.loc 20 516 50 view .LVU3006
 10583 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
 519:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10584              		.loc 20 519 59 view .LVU3007
 10585 0a1e 0CAA     		add	r2, sp, #48
 515:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10586              		.loc 20 515 50 view .LVU3008
 10587 0a20 27EE267A 		vmul.f32	s14, s14, s13
 519:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10588              		.loc 20 519 59 view .LVU3009
 10589 0a24 5748     		ldr	r0, .L591+64
 516:Veno-Echo.cpp ****         
 10590              		.loc 20 516 50 view .LVU3010
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 331


 10591 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 515:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10592              		.loc 20 515 57 view .LVU3011
 10593 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
 516:Veno-Echo.cpp ****         
 10594              		.loc 20 516 9 is_stmt 1 view .LVU3012
 10595              	.LVL658:
 516:Veno-Echo.cpp ****         
 10596              		.loc 20 516 9 is_stmt 0 view .LVU3013
 10597              	.LBE1629:
 10598              	.LBE1959:
 10599              	.LBE1979:
 10600              	.LBE1990:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10601              		.loc 9 52 26 is_stmt 1 view .LVU3014
 10602              	.LBB1991:
 10603              	.LBB1980:
 10604              	.LBB1960:
 10605              	.LBB1630:
 516:Veno-Echo.cpp ****         
 10606              		.loc 20 516 57 is_stmt 0 view .LVU3015
 10607 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 519:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10608              		.loc 20 519 9 is_stmt 1 view .LVU3016
 519:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10609              		.loc 20 519 59 is_stmt 0 view .LVU3017
 10610 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10611              	.LVL659:
 520:Veno-Echo.cpp **** 
 10612              		.loc 20 520 59 view .LVU3018
 10613 0a36 0BA9     		add	r1, sp, #44
 10614 0a38 0DAA     		add	r2, sp, #52
 10615 0a3a 5348     		ldr	r0, .L591+68
 519:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10616              		.loc 20 519 97 view .LVU3019
 10617 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 520:Veno-Echo.cpp **** 
 10618              		.loc 20 520 9 is_stmt 1 view .LVU3020
 520:Veno-Echo.cpp **** 
 10619              		.loc 20 520 59 is_stmt 0 view .LVU3021
 10620 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10621              	.LVL660:
 10622              	.LBB1615:
 10623              	.LBB1616:
1859:Veno-Echo.cpp ****         returnval = limit;
 10624              		.loc 20 1859 5 view .LVU3022
 10625 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 10626              	.LBE1616:
 10627              	.LBE1615:
 523:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10628              		.loc 20 523 41 view .LVU3023
 10629 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
 520:Veno-Echo.cpp **** 
 10630              		.loc 20 520 59 view .LVU3024
 10631 0a4c F0EE407A 		vmov.f32	s15, s0
 523:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10632              		.loc 20 523 9 is_stmt 1 view .LVU3025
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 332


 10633              	.LVL661:
 10634              	.LBB1620:
 10635              	.LBI1615:
1856:Veno-Echo.cpp **** {
 10636              		.loc 20 1856 7 view .LVU3026
 10637              	.LBB1617:
1858:Veno-Echo.cpp ****     if (input > limit)
 10638              		.loc 20 1858 5 view .LVU3027
1859:Veno-Echo.cpp ****         returnval = limit;
 10639              		.loc 20 1859 5 view .LVU3028
 10640 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 10641 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10642 0a58 6EDC     		bgt	.L554
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10643              		.loc 20 1861 10 view .LVU3029
 10644 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 10645 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 10646 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10647 0a66 00F1C080 		bmi	.L555
 10648 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 10649              	.LVL662:
 10650              	.L529:
1866:Veno-Echo.cpp **** }
 10651              		.loc 20 1866 5 view .LVU3030
1866:Veno-Echo.cpp **** }
 10652              		.loc 20 1866 5 is_stmt 0 view .LVU3031
 10653              	.LBE1617:
 10654              	.LBE1620:
 10655              	.LBB1621:
 10656              	.LBB1622:
1859:Veno-Echo.cpp ****         returnval = limit;
 10657              		.loc 20 1859 5 view .LVU3032
 10658 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 10659              	.LBE1622:
 10660              	.LBE1621:
 523:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10661              		.loc 20 523 30 view .LVU3033
 10662 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
 524:Veno-Echo.cpp **** 
 10663              		.loc 20 524 9 is_stmt 1 view .LVU3034
 10664              	.LVL663:
 10665              	.LBB1625:
 10666              	.LBI1621:
1856:Veno-Echo.cpp **** {
 10667              		.loc 20 1856 7 view .LVU3035
 10668              	.LBB1623:
1858:Veno-Echo.cpp ****     if (input > limit)
 10669              		.loc 20 1858 5 view .LVU3036
1859:Veno-Echo.cpp ****         returnval = limit;
 10670              		.loc 20 1859 5 view .LVU3037
 10671 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 10672 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10673 0a7e 58DC     		bgt	.L556
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10674              		.loc 20 1861 10 view .LVU3038
 10675 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
1862:Veno-Echo.cpp ****     else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 333


 10676              		.loc 20 1862 19 is_stmt 0 view .LVU3039
 10677 0a84 F4EE477A 		vcmp.f32	s15, s14
 10678 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10679 0a8c 48BF     		it	mi
 10680 0a8e F0EE477A 		vmovmi.f32	s15, s14
 10681              	.LVL664:
 10682              	.L530:
1866:Veno-Echo.cpp **** }
 10683              		.loc 20 1866 5 is_stmt 1 view .LVU3040
1866:Veno-Echo.cpp **** }
 10684              		.loc 20 1866 5 is_stmt 0 view .LVU3041
 10685              	.LBE1623:
 10686              	.LBE1625:
 527:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10687              		.loc 20 527 27 view .LVU3042
 10688 0a92 3E4D     		ldr	r5, .L591+72
 528:Veno-Echo.cpp **** 
 10689              		.loc 20 528 27 view .LVU3043
 10690 0a94 3E4C     		ldr	r4, .L591+76
 527:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10691              		.loc 20 527 27 view .LVU3044
 10692 0a96 2846     		mov	r0, r5
 524:Veno-Echo.cpp **** 
 10693              		.loc 20 524 30 view .LVU3045
 10694 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 527:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10695              		.loc 20 527 9 is_stmt 1 view .LVU3046
 527:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10696              		.loc 20 527 27 is_stmt 0 view .LVU3047
 10697 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10698              	.LVL665:
 528:Veno-Echo.cpp **** 
 10699              		.loc 20 528 9 is_stmt 1 view .LVU3048
 528:Veno-Echo.cpp **** 
 10700              		.loc 20 528 27 is_stmt 0 view .LVU3049
 10701 0aa0 DFED297A 		vldr.32	s15, .L591+4
 10702 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 10703 0aa8 2046     		mov	r0, r4
 10704 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 10705 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10706              	.LVL666:
 530:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10707              		.loc 20 530 9 is_stmt 1 view .LVU3050
 530:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10708              		.loc 20 530 9 is_stmt 0 view .LVU3051
 10709              	.LBE1630:
 10710              	.LBE1960:
 10711              	.LBE1980:
 10712              	.LBE1991:
 10713              		.loc 9 56 27 is_stmt 1 view .LVU3052
 10714              	.LBB1992:
 10715              	.LBB1981:
 10716              	.LBB1961:
 10717              	.LBB1631:
 530:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10718              		.loc 20 530 51 is_stmt 0 view .LVU3053
 10719 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 334


 10720 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 533:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10721              		.loc 20 533 55 view .LVU3054
 10722 0aba 0EA9     		add	r1, sp, #56
 531:Veno-Echo.cpp **** 
 10723              		.loc 20 531 51 view .LVU3055
 10724 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 533:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10725              		.loc 20 533 55 view .LVU3056
 10726 0ac0 10AA     		add	r2, sp, #64
 530:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10727              		.loc 20 530 51 view .LVU3057
 10728 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 533:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10729              		.loc 20 533 55 view .LVU3058
 10730 0ac6 3348     		ldr	r0, .L591+80
 531:Veno-Echo.cpp **** 
 10731              		.loc 20 531 51 view .LVU3059
 10732 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 530:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10733              		.loc 20 530 58 view .LVU3060
 10734 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 531:Veno-Echo.cpp **** 
 10735              		.loc 20 531 9 is_stmt 1 view .LVU3061
 10736              	.LVL667:
 531:Veno-Echo.cpp **** 
 10737              		.loc 20 531 9 is_stmt 0 view .LVU3062
 10738              	.LBE1631:
 10739              	.LBE1961:
 10740              	.LBE1981:
 10741              	.LBE1992:
 10742              		.loc 9 56 27 is_stmt 1 view .LVU3063
 10743              	.LBB1993:
 10744              	.LBB1982:
 10745              	.LBB1962:
 10746              	.LBB1632:
 531:Veno-Echo.cpp **** 
 10747              		.loc 20 531 58 is_stmt 0 view .LVU3064
 10748 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 533:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10749              		.loc 20 533 9 is_stmt 1 view .LVU3065
 533:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10750              		.loc 20 533 55 is_stmt 0 view .LVU3066
 10751 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10752              	.LVL668:
 534:Veno-Echo.cpp **** 
 10753              		.loc 20 534 55 view .LVU3067
 10754 0ad8 0FA9     		add	r1, sp, #60
 10755 0ada 11AA     		add	r2, sp, #68
 10756 0adc 2E48     		ldr	r0, .L591+84
 533:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10757              		.loc 20 533 30 view .LVU3068
 10758 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 534:Veno-Echo.cpp **** 
 10759              		.loc 20 534 9 is_stmt 1 view .LVU3069
 534:Veno-Echo.cpp **** 
 10760              		.loc 20 534 55 is_stmt 0 view .LVU3070
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 335


 10761 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10762              	.LVL669:
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10763              		.loc 20 537 53 view .LVU3071
 10764 0ae6 0EAA     		add	r2, sp, #56
 10765 0ae8 0AA9     		add	r1, sp, #40
 10766 0aea 2C48     		ldr	r0, .L591+88
 534:Veno-Echo.cpp **** 
 10767              		.loc 20 534 30 view .LVU3072
 10768 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10769              		.loc 20 537 9 is_stmt 1 view .LVU3073
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10770              		.loc 20 537 53 is_stmt 0 view .LVU3074
 10771 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10772              	.LVL670:
 538:Veno-Echo.cpp **** 
 10773              		.loc 20 538 53 view .LVU3075
 10774 0af4 0FAA     		add	r2, sp, #60
 10775 0af6 0BA9     		add	r1, sp, #44
 10776 0af8 2948     		ldr	r0, .L591+92
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10777              		.loc 20 537 27 view .LVU3076
 10778 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 538:Veno-Echo.cpp **** 
 10779              		.loc 20 538 9 is_stmt 1 view .LVU3077
 538:Veno-Echo.cpp **** 
 10780              		.loc 20 538 53 is_stmt 0 view .LVU3078
 10781 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10782              	.LVL671:
 10783 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 538:Veno-Echo.cpp **** 
 10784              		.loc 20 538 27 view .LVU3079
 10785 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 10786              	.LBE1632:
 10787 0b0a FFF721BB 		b	.L528
 10788              	.LVL672:
 10789              	.L552:
 538:Veno-Echo.cpp **** 
 10790              		.loc 20 538 27 view .LVU3080
 10791              	.LBE1962:
 10792              	.LBB1963:
 10793              	.LBB1605:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10794              		.loc 20 1860 19 view .LVU3081
 10795 0b0e F0EE477A 		vmov.f32	s15, s14
 10796              	.LVL673:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10797              		.loc 20 1860 19 view .LVU3082
 10798 0b12 FFF703BB 		b	.L524
 10799              	.LVL674:
 10800              	.L575:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10801              		.loc 20 1860 19 view .LVU3083
 10802              	.LBE1605:
 10803              	.LBE1963:
 558:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 336


 10804              		.loc 20 558 13 is_stmt 1 view .LVU3084
 558:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10805              		.loc 20 558 18 is_stmt 0 view .LVU3085
 10806 0b16 DBED006A 		vldr.32	s13, [fp]
 559:Veno-Echo.cpp ****         }
 10807              		.loc 20 559 18 view .LVU3086
 10808 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 558:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10809              		.loc 20 558 18 view .LVU3087
 10810 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 10811              	.LVL675:
 559:Veno-Echo.cpp ****         }
 10812              		.loc 20 559 13 is_stmt 1 view .LVU3088
 559:Veno-Echo.cpp ****         }
 10813              		.loc 20 559 18 is_stmt 0 view .LVU3089
 10814 0b22 30EE070A 		vadd.f32	s0, s0, s14
 10815              	.LVL676:
 559:Veno-Echo.cpp ****         }
 10816              		.loc 20 559 18 view .LVU3090
 10817 0b26 FFF72CBB 		b	.L534
 10818              	.LVL677:
 10819              	.L578:
 10820              	.LBB1964:
 10821              	.LBB1831:
 10822              	.LBB1820:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10823              		.loc 19 141 17 view .LVU3091
 10824 0b2a 049B     		ldr	r3, [sp, #16]
 10825 0b2c 83ED00BA 		vstr.32	s22, [r3]
 10826 0b30 CAE4     		b	.L492
 10827              	.LVL678:
 10828              	.L556:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10829              		.loc 19 141 17 view .LVU3092
 10830              	.LBE1820:
 10831              	.LBE1831:
 10832              	.LBE1964:
 10833              	.LBB1965:
 10834              	.LBB1633:
 10835              	.LBB1626:
 10836              	.LBB1624:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10837              		.loc 20 1860 19 view .LVU3093
 10838 0b32 F0EE667A 		vmov.f32	s15, s13
 10839              	.LVL679:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10840              		.loc 20 1860 19 view .LVU3094
 10841 0b36 ACE7     		b	.L530
 10842              	.LVL680:
 10843              	.L554:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10844              		.loc 20 1860 19 view .LVU3095
 10845              	.LBE1624:
 10846              	.LBE1626:
 10847              	.LBB1627:
 10848              	.LBB1618:
 10849 0b38 B0EE667A 		vmov.f32	s14, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 337


 10850              	.LVL681:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10851              		.loc 20 1860 19 view .LVU3096
 10852 0b3c 9FED190A 		vldr.32	s0, .L591+96
 10853 0b40 95E7     		b	.L529
 10854              	.L592:
 10855 0b42 00BF     		.align	2
 10856              	.L591:
 10857 0b44 00000000 		.word	.LANCHOR82
 10858 0b48 CDCCCC3D 		.word	1036831949
 10859 0b4c 00000000 		.word	.LANCHOR46
 10860 0b50 00000000 		.word	.LANCHOR47
 10861 0b54 00000000 		.word	.LANCHOR115
 10862 0b58 00000000 		.word	.LANCHOR116
 10863 0b5c 00000000 		.word	.LANCHOR34
 10864 0b60 00000000 		.word	.LANCHOR35
 10865 0b64 00000000 		.word	.LANCHOR113
 10866 0b68 00000000 		.word	.LANCHOR114
 10867 0b6c 00000000 		.word	.LANCHOR121
 10868 0b70 00000000 		.word	.LANCHOR122
 10869 0b74 249F2400 		.word	2400036
 10870 0b78 1C9F2400 		.word	2400028
 10871 0b7c 00000000 		.word	.LANCHOR48
 10872 0b80 00000000 		.word	.LANCHOR49
 10873 0b84 00000000 		.word	.LANCHOR119
 10874 0b88 00000000 		.word	.LANCHOR120
 10875 0b8c 00000000 		.word	.LANCHOR36
 10876 0b90 00000000 		.word	.LANCHOR37
 10877 0b94 00000000 		.word	.LANCHOR117
 10878 0b98 00000000 		.word	.LANCHOR118
 10879 0b9c 00000000 		.word	.LANCHOR123
 10880 0ba0 00000000 		.word	.LANCHOR124
 10881 0ba4 CDCC4C3E 		.word	1045220557
 10882 0ba8 CDCC4CBE 		.word	3192704205
 10883              	.LVL682:
 10884              	.L547:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10885              		.loc 20 1860 19 view .LVU3097
 10886              	.LBE1618:
 10887              	.LBE1627:
 10888              	.LBE1633:
 10889              	.LBE1965:
 10890              	.LBB1966:
 10891              	.LBB1893:
 10892              	.LBB1886:
 10893              	.LBB1884:
 10894 0bac F0EE667A 		vmov.f32	s15, s13
 10895              	.LVL683:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10896              		.loc 20 1860 19 view .LVU3098
 10897 0bb0 76E6     		b	.L512
 10898              	.LVL684:
 10899              	.L545:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10900              		.loc 20 1860 19 view .LVU3099
 10901              	.LBE1884:
 10902              	.LBE1886:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 338


 10903              	.LBB1887:
 10904              	.LBB1878:
 10905 0bb2 B0EE667A 		vmov.f32	s14, s13
 10906              	.LVL685:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10907              		.loc 20 1860 19 view .LVU3100
 10908 0bb6 1FED050A 		vldr.32	s0, .L591+96
 10909 0bba 5EE6     		b	.L511
 10910              	.LVL686:
 10911              	.L488:
1860:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10912              		.loc 20 1860 19 view .LVU3101
 10913              	.LBE1878:
 10914              	.LBE1887:
 10915              	.LBE1893:
 10916              	.LBE1966:
 10917              	.LBB1967:
 10918              	.LBB1832:
 10919              	.LBB1821:
 116:delayline_reverse.h ****                 }
 10920              		.loc 19 116 21 view .LVU3102
 10921 0bbc AB60     		str	r3, [r5, #8]
 10922 0bbe DEE6     		b	.L490
 10923              	.LVL687:
 10924              	.L498:
 116:delayline_reverse.h ****                 }
 10925              		.loc 19 116 21 view .LVU3103
 10926              	.LBE1821:
 10927              	.LBE1832:
 10928              	.LBE1967:
 10929              	.LBB1968:
 10930              	.LBB1858:
 10931              	.LBB1854:
 10932 0bc0 A260     		str	r2, [r4, #8]
 10933 0bc2 B9E6     		b	.L500
 10934              	.LVL688:
 10935              	.L467:
 116:delayline_reverse.h ****                 }
 10936              		.loc 19 116 21 view .LVU3104
 10937              	.LBE1854:
 10938              	.LBE1858:
 10939              	.LBE1968:
 10940              	.LBE1982:
 10941              	.LBE1993:
 579:Veno-Echo.cpp **** 
 10942              		.loc 20 579 1 view .LVU3105
 10943 0bc4 13B0     		add	sp, sp, #76
 10944              		.cfi_remember_state
 10945              		.cfi_def_cfa_offset 92
 10946              		@ sp needed
 10947 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 10948              		.cfi_restore 92
 10949              		.cfi_restore 93
 10950              		.cfi_restore 90
 10951              		.cfi_restore 91
 10952              		.cfi_restore 88
 10953              		.cfi_restore 89
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 339


 10954              		.cfi_restore 86
 10955              		.cfi_restore 87
 10956              		.cfi_restore 84
 10957              		.cfi_restore 85
 10958              		.cfi_restore 82
 10959              		.cfi_restore 83
 10960              		.cfi_restore 80
 10961              		.cfi_restore 81
 10962              		.cfi_def_cfa_offset 36
 10963 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10964              	.LVL689:
 10965              	.L581:
 10966              		.cfi_restore_state
 10967              	.LBB1994:
 10968              	.LBB1983:
 10969              	.LBB1969:
 10970              	.LBB1859:
 10971              	.LBB1855:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10972              		.loc 19 130 17 view .LVU3106
 10973 0bce C2ED007A 		vstr.32	s15, [r2]
 10974 0bd2 E4E4     		b	.L502
 10975              	.L505:
 145:delayline_reverse.h ****                     playinghead_ = false;
 10976              		.loc 19 145 21 view .LVU3107
 10977 0bd4 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10978              		.loc 19 144 21 view .LVU3108
 10979 0bd6 039C     		ldr	r4, [sp, #12]
 10980              	.LVL690:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10981              		.loc 19 144 21 view .LVU3109
 10982 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10983              		.loc 19 145 21 view .LVU3110
 10984 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 10985              		.loc 19 146 21 view .LVU3111
 10986 0bdc 0170     		strb	r1, [r0]
 10987 0bde DEE4     		b	.L502
 10988              	.LVL691:
 10989              	.L546:
 146:delayline_reverse.h ****                 }
 10990              		.loc 19 146 21 view .LVU3112
 10991              	.LBE1855:
 10992              	.LBE1859:
 10993              	.LBE1969:
 10994              	.LBB1970:
 10995              	.LBB1894:
 10996              	.LBB1888:
 10997              	.LBB1879:
1862:Veno-Echo.cpp ****     else
 10998              		.loc 20 1862 19 view .LVU3113
 10999 0be0 B0EE667A 		vmov.f32	s14, s13
 11000              	.LVL692:
1862:Veno-Echo.cpp ****     else
 11001              		.loc 20 1862 19 view .LVU3114
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 340


 11002 0be4 1FED100A 		vldr.32	s0, .L591+100
 11003 0be8 47E6     		b	.L511
 11004              	.LVL693:
 11005              	.L555:
1862:Veno-Echo.cpp ****     else
 11006              		.loc 20 1862 19 view .LVU3115
 11007              	.LBE1879:
 11008              	.LBE1888:
 11009              	.LBE1894:
 11010              	.LBE1970:
 11011              	.LBB1971:
 11012              	.LBB1634:
 11013              	.LBB1628:
 11014              	.LBB1619:
 11015 0bea B0EE667A 		vmov.f32	s14, s13
 11016              	.LVL694:
1862:Veno-Echo.cpp ****     else
 11017              		.loc 20 1862 19 view .LVU3116
 11018 0bee 1FED120A 		vldr.32	s0, .L591+100
 11019 0bf2 3CE7     		b	.L529
 11020              	.LVL695:
 11021              	.L469:
1862:Veno-Echo.cpp ****     else
 11022              		.loc 20 1862 19 view .LVU3117
 11023              	.LBE1619:
 11024              	.LBE1628:
 11025              	.LBE1634:
 11026              	.LBE1971:
 11027              	.LBE1983:
 11028              	.LBE1994:
 344:Veno-Echo.cpp ****                 Update_filterXfade();
 11029              		.loc 20 344 13 is_stmt 1 view .LVU3118
 345:Veno-Echo.cpp ****             break;
 11030              		.loc 20 345 17 view .LVU3119
 345:Veno-Echo.cpp ****             break;
 11031              		.loc 20 345 35 is_stmt 0 view .LVU3120
 11032 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11033              	.LVL696:
 346:Veno-Echo.cpp ****         }
 11034              		.loc 20 346 13 is_stmt 1 view .LVU3121
 11035 0bf8 FFF739BA 		b	.L468
 11036              	.L472:
 336:Veno-Echo.cpp ****                 Update_width();
 11037              		.loc 20 336 13 view .LVU3122
 337:Veno-Echo.cpp ****             break;
 11038              		.loc 20 337 17 view .LVU3123
 337:Veno-Echo.cpp ****             break;
 11039              		.loc 20 337 29 is_stmt 0 view .LVU3124
 11040 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 11041              	.LVL697:
 338:Veno-Echo.cpp **** 
 11042              		.loc 20 338 13 is_stmt 1 view .LVU3125
 11043 0c00 FFF735BA 		b	.L468
 11044              	.L473:
 332:Veno-Echo.cpp ****                 Update_width_CV();
 11045              		.loc 20 332 13 view .LVU3126
 333:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 341


 11046              		.loc 20 333 17 view .LVU3127
 11047              	.LBB1995:
 11048              	.LBI1995:
1270:Veno-Echo.cpp **** {
 11049              		.loc 20 1270 6 view .LVU3128
 11050              	.LBB1996:
1272:Veno-Echo.cpp **** }
 11051              		.loc 20 1272 5 view .LVU3129
1272:Veno-Echo.cpp **** }
 11052              		.loc 20 1272 30 is_stmt 0 view .LVU3130
 11053 0c04 0521     		movs	r1, #5
 11054 0c06 2948     		ldr	r0, .L593
 11055 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11056              	.LVL698:
1272:Veno-Echo.cpp **** }
 11057              		.loc 20 1272 13 view .LVU3131
 11058 0c0c 284B     		ldr	r3, .L593+4
 11059 0c0e 83ED000A 		vstr.32	s0, [r3]
1273:Veno-Echo.cpp **** 
 11060              		.loc 20 1273 1 view .LVU3132
 11061 0c12 FFF72CBA 		b	.L468
 11062              	.L474:
 11063              	.LBE1996:
 11064              	.LBE1995:
 328:Veno-Echo.cpp ****                 Update_drywet();
 11065              		.loc 20 328 13 is_stmt 1 view .LVU3133
 329:Veno-Echo.cpp ****             break;
 11066              		.loc 20 329 17 view .LVU3134
 329:Veno-Echo.cpp ****             break;
 11067              		.loc 20 329 30 is_stmt 0 view .LVU3135
 11068 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 11069              	.LVL699:
 330:Veno-Echo.cpp **** 
 11070              		.loc 20 330 13 is_stmt 1 view .LVU3136
 11071 0c1a FFF728BA 		b	.L468
 11072              	.L475:
 324:Veno-Echo.cpp ****                 Update_drywet_CV();
 11073              		.loc 20 324 13 view .LVU3137
 325:Veno-Echo.cpp ****             break;
 11074              		.loc 20 325 17 view .LVU3138
 11075              	.LBB1997:
 11076              	.LBI1997:
1156:Veno-Echo.cpp **** {
 11077              		.loc 20 1156 6 view .LVU3139
 11078              	.LBB1998:
1158:Veno-Echo.cpp **** }
 11079              		.loc 20 1158 5 view .LVU3140
1158:Veno-Echo.cpp **** }
 11080              		.loc 20 1158 32 is_stmt 0 view .LVU3141
 11081 0c1e 0421     		movs	r1, #4
 11082 0c20 2248     		ldr	r0, .L593
 11083 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11084              	.LVL700:
1158:Veno-Echo.cpp **** }
 11085              		.loc 20 1158 15 view .LVU3142
 11086 0c26 234B     		ldr	r3, .L593+8
 11087 0c28 83ED000A 		vstr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 342


1159:Veno-Echo.cpp **** 
 11088              		.loc 20 1159 1 view .LVU3143
 11089 0c2c FFF71FBA 		b	.L468
 11090              	.L476:
 11091              	.LBE1998:
 11092              	.LBE1997:
 320:Veno-Echo.cpp ****                 Update_feedbackR();
 11093              		.loc 20 320 13 is_stmt 1 view .LVU3144
 321:Veno-Echo.cpp ****             break;
 11094              		.loc 20 321 17 view .LVU3145
 321:Veno-Echo.cpp ****             break;
 11095              		.loc 20 321 33 is_stmt 0 view .LVU3146
 11096 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 11097              	.LVL701:
 322:Veno-Echo.cpp **** 
 11098              		.loc 20 322 13 is_stmt 1 view .LVU3147
 11099 0c34 FFF71BBA 		b	.L468
 11100              	.L477:
 316:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 11101              		.loc 20 316 13 view .LVU3148
 317:Veno-Echo.cpp ****             break;
 11102              		.loc 20 317 17 view .LVU3149
 11103              	.LBB1999:
 11104              	.LBI1999:
1066:Veno-Echo.cpp **** {
 11105              		.loc 20 1066 6 view .LVU3150
 11106              	.LBB2000:
1068:Veno-Echo.cpp **** }
 11107              		.loc 20 1068 5 view .LVU3151
1068:Veno-Echo.cpp **** }
 11108              		.loc 20 1068 35 is_stmt 0 view .LVU3152
 11109 0c38 0321     		movs	r1, #3
 11110 0c3a 1C48     		ldr	r0, .L593
 11111 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11112              	.LVL702:
1068:Veno-Echo.cpp **** }
 11113              		.loc 20 1068 18 view .LVU3153
 11114 0c40 1D4B     		ldr	r3, .L593+12
 11115 0c42 83ED000A 		vstr.32	s0, [r3]
1069:Veno-Echo.cpp **** 
 11116              		.loc 20 1069 1 view .LVU3154
 11117 0c46 FFF712BA 		b	.L468
 11118              	.L478:
 11119              	.LBE2000:
 11120              	.LBE1999:
 312:Veno-Echo.cpp ****                 Update_feedbackL();
 11121              		.loc 20 312 13 is_stmt 1 view .LVU3155
 313:Veno-Echo.cpp ****             break;
 11122              		.loc 20 313 17 view .LVU3156
 313:Veno-Echo.cpp ****             break;
 11123              		.loc 20 313 33 is_stmt 0 view .LVU3157
 11124 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 11125              	.LVL703:
 314:Veno-Echo.cpp **** 
 11126              		.loc 20 314 13 is_stmt 1 view .LVU3158
 11127 0c4e FFF70EBA 		b	.L468
 11128              	.L479:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 343


 308:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 11129              		.loc 20 308 13 view .LVU3159
 309:Veno-Echo.cpp ****             break;
 11130              		.loc 20 309 17 view .LVU3160
 11131              	.LBB2001:
 11132              	.LBI2001:
 978:Veno-Echo.cpp **** {
 11133              		.loc 20 978 6 view .LVU3161
 11134              	.LBB2002:
 980:Veno-Echo.cpp **** }
 11135              		.loc 20 980 5 view .LVU3162
 980:Veno-Echo.cpp **** }
 11136              		.loc 20 980 35 is_stmt 0 view .LVU3163
 11137 0c52 0221     		movs	r1, #2
 11138 0c54 1548     		ldr	r0, .L593
 11139 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11140              	.LVL704:
 980:Veno-Echo.cpp **** }
 11141              		.loc 20 980 18 view .LVU3164
 11142 0c5a 184B     		ldr	r3, .L593+16
 11143 0c5c 83ED000A 		vstr.32	s0, [r3]
 981:Veno-Echo.cpp **** void Update_feedbackL()
 11144              		.loc 20 981 1 view .LVU3165
 11145 0c60 FFF705BA 		b	.L468
 11146              	.L480:
 11147              	.LBE2002:
 11148              	.LBE2001:
 304:Veno-Echo.cpp ****                 Update_DelayTimeR();
 11149              		.loc 20 304 13 is_stmt 1 view .LVU3166
 305:Veno-Echo.cpp ****             break;
 11150              		.loc 20 305 17 view .LVU3167
 305:Veno-Echo.cpp ****             break;
 11151              		.loc 20 305 34 is_stmt 0 view .LVU3168
 11152 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11153              	.LVL705:
 306:Veno-Echo.cpp **** 
 11154              		.loc 20 306 13 is_stmt 1 view .LVU3169
 11155 0c68 FFF701BA 		b	.L468
 11156              	.L481:
 300:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11157              		.loc 20 300 13 view .LVU3170
 301:Veno-Echo.cpp ****             break;
 11158              		.loc 20 301 17 view .LVU3171
 11159              	.LBB2003:
 11160              	.LBI2003:
 880:Veno-Echo.cpp **** {
 11161              		.loc 20 880 6 view .LVU3172
 11162              	.LBB2004:
 882:Veno-Echo.cpp **** }
 11163              		.loc 20 882 5 view .LVU3173
 882:Veno-Echo.cpp **** }
 11164              		.loc 20 882 36 is_stmt 0 view .LVU3174
 11165 0c6c 0121     		movs	r1, #1
 11166 0c6e 0F48     		ldr	r0, .L593
 11167 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11168              	.LVL706:
 882:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 344


 11169              		.loc 20 882 19 view .LVU3175
 11170 0c74 124B     		ldr	r3, .L593+20
 11171 0c76 83ED000A 		vstr.32	s0, [r3]
 883:Veno-Echo.cpp **** 
 11172              		.loc 20 883 1 view .LVU3176
 11173 0c7a FFF7F8B9 		b	.L468
 11174              	.L482:
 11175              	.LBE2004:
 11176              	.LBE2003:
 296:Veno-Echo.cpp ****                 Update_DelayTimeL();
 11177              		.loc 20 296 13 is_stmt 1 view .LVU3177
 297:Veno-Echo.cpp ****             break;
 11178              		.loc 20 297 17 view .LVU3178
 297:Veno-Echo.cpp ****             break;
 11179              		.loc 20 297 34 is_stmt 0 view .LVU3179
 11180 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11181              	.LVL707:
 298:Veno-Echo.cpp **** 
 11182              		.loc 20 298 13 is_stmt 1 view .LVU3180
 11183 0c82 FFF7F4B9 		b	.L468
 11184              	.L483:
 292:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 11185              		.loc 20 292 13 view .LVU3181
 293:Veno-Echo.cpp ****             break;
 11186              		.loc 20 293 17 view .LVU3182
 11187              	.LBB2005:
 11188              	.LBI2005:
 782:Veno-Echo.cpp **** {
 11189              		.loc 20 782 6 view .LVU3183
 11190              	.LBB2006:
 784:Veno-Echo.cpp **** }
 11191              		.loc 20 784 5 view .LVU3184
 784:Veno-Echo.cpp **** }
 11192              		.loc 20 784 36 is_stmt 0 view .LVU3185
 11193 0c86 0021     		movs	r1, #0
 11194 0c88 0848     		ldr	r0, .L593
 11195 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11196              	.LVL708:
 784:Veno-Echo.cpp **** }
 11197              		.loc 20 784 19 view .LVU3186
 11198 0c8e 0D4B     		ldr	r3, .L593+24
 11199 0c90 83ED000A 		vstr.32	s0, [r3]
 785:Veno-Echo.cpp **** 
 11200              		.loc 20 785 1 view .LVU3187
 11201 0c94 FFF7EBB9 		b	.L468
 11202              	.L484:
 11203              	.LBE2006:
 11204              	.LBE2005:
 285:Veno-Echo.cpp ****                 Update_Buttons();
 11205              		.loc 20 285 13 is_stmt 1 view .LVU3188
 286:Veno-Echo.cpp ****                 GetModCV();
 11206              		.loc 20 286 17 view .LVU3189
 286:Veno-Echo.cpp ****                 GetModCV();
 11207              		.loc 20 286 31 is_stmt 0 view .LVU3190
 11208 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11209              	.LVL709:
 287:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 345


 11210              		.loc 20 287 17 is_stmt 1 view .LVU3191
 287:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11211              		.loc 20 287 25 is_stmt 0 view .LVU3192
 11212 0c9c FFF7FEFF 		bl	_Z8GetModCVv
 11213              	.LVL710:
 288:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11214              		.loc 20 288 17 is_stmt 1 view .LVU3193
 288:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11215              		.loc 20 288 38 is_stmt 0 view .LVU3194
 11216 0ca0 FFF7FEFF 		bl	_Z21Update_DelayBaseTempov
 11217              	.LVL711:
 289:Veno-Echo.cpp ****             break;
 11218              		.loc 20 289 17 is_stmt 1 view .LVU3195
 289:Veno-Echo.cpp ****             break;
 11219              		.loc 20 289 38 is_stmt 0 view .LVU3196
 11220 0ca4 FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11221              	.LVL712:
 290:Veno-Echo.cpp **** 
 11222              		.loc 20 290 13 is_stmt 1 view .LVU3197
 11223 0ca8 FFF7E1B9 		b	.L468
 11224              	.L594:
 11225              		.align	2
 11226              	.L593:
 11227 0cac 18000000 		.word	.LANCHOR4+24
 11228 0cb0 00000000 		.word	.LANCHOR58
 11229 0cb4 00000000 		.word	.LANCHOR50
 11230 0cb8 00000000 		.word	.LANCHOR38
 11231 0cbc 00000000 		.word	.LANCHOR26
 11232 0cc0 00000000 		.word	.LANCHOR16
 11233 0cc4 00000000 		.word	.LANCHOR5
 11234              		.cfi_endproc
 11235              	.LFE4309:
 11237              		.section	.text._Z9HardLimitff,"ax",%progbits
 11238              		.align	1
 11239              		.p2align 2,,3
 11240              		.global	_Z9HardLimitff
 11241              		.syntax unified
 11242              		.thumb
 11243              		.thumb_func
 11244              		.fpu fpv5-d16
 11246              	_Z9HardLimitff:
 11247              	.LVL713:
 11248              	.LFB4336:
1857:Veno-Echo.cpp ****     float returnval{};
 11249              		.loc 20 1857 1 view -0
 11250              		.cfi_startproc
 11251              		@ args = 0, pretend = 0, frame = 0
 11252              		@ frame_needed = 0, uses_anonymous_args = 0
 11253              		@ link register save eliminated.
1858:Veno-Echo.cpp ****     if (input > limit)
 11254              		.loc 20 1858 5 view .LVU3199
1859:Veno-Echo.cpp ****         returnval = limit;
 11255              		.loc 20 1859 5 view .LVU3200
 11256 0000 B4EEE00A 		vcmpe.f32	s0, s1
 11257 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11258 0008 07DC     		bgt	.L596
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 346


 11259              		.loc 20 1861 10 view .LVU3201
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11260              		.loc 20 1861 28 is_stmt 0 view .LVU3202
 11261 000a F1EE600A 		vneg.f32	s1, s1
 11262              	.LVL714:
1861:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11263              		.loc 20 1861 10 view .LVU3203
 11264 000e F4EEC00A 		vcmpe.f32	s1, s0
 11265 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1864:Veno-Echo.cpp **** 
 11266              		.loc 20 1864 19 view .LVU3204
 11267 0016 70FE800A 		vselgt.f32	s1, s1, s0
 11268              	.L596:
 11269              	.LVL715:
1866:Veno-Echo.cpp **** }
 11270              		.loc 20 1866 5 is_stmt 1 view .LVU3205
1867:Veno-Echo.cpp **** 
 11271              		.loc 20 1867 1 is_stmt 0 view .LVU3206
 11272 001a B0EE600A 		vmov.f32	s0, s1
 11273              	.LVL716:
1867:Veno-Echo.cpp **** 
 11274              		.loc 20 1867 1 view .LVU3207
 11275 001e 7047     		bx	lr
 11276              		.cfi_endproc
 11277              	.LFE4336:
 11279              		.section	.text._Z10PotCVComboff,"ax",%progbits
 11280              		.align	1
 11281              		.p2align 2,,3
 11282              		.global	_Z10PotCVComboff
 11283              		.syntax unified
 11284              		.thumb
 11285              		.thumb_func
 11286              		.fpu fpv5-d16
 11288              	_Z10PotCVComboff:
 11289              	.LVL717:
 11290              	.LFB4337:
1870:Veno-Echo.cpp ****     float output{};
 11291              		.loc 20 1870 1 is_stmt 1 view -0
 11292              		.cfi_startproc
 11293              		@ args = 0, pretend = 0, frame = 0
 11294              		@ frame_needed = 0, uses_anonymous_args = 0
 11295              		@ link register save eliminated.
1871:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11296              		.loc 20 1871 5 view .LVU3209
1872:Veno-Echo.cpp **** 
 11297              		.loc 20 1872 5 view .LVU3210
1872:Veno-Echo.cpp **** 
 11298              		.loc 20 1872 39 is_stmt 0 view .LVU3211
 11299 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1872:Veno-Echo.cpp **** 
 11300              		.loc 20 1872 49 view .LVU3212
 11301 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1872:Veno-Echo.cpp **** 
 11302              		.loc 20 1872 12 view .LVU3213
 11303 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1872:Veno-Echo.cpp **** 
 11304              		.loc 20 1872 39 view .LVU3214
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 347


 11305 000c 77EEE00A 		vsub.f32	s1, s15, s1
 11306              	.LVL718:
1872:Veno-Echo.cpp **** 
 11307              		.loc 20 1872 49 view .LVU3215
 11308 0010 70EEE60A 		vsub.f32	s1, s1, s13
1872:Veno-Echo.cpp **** 
 11309              		.loc 20 1872 12 view .LVU3216
 11310 0014 A0EE870A 		vfma.f32	s0, s1, s14
 11311              	.LVL719:
1874:Veno-Echo.cpp ****     {
 11312              		.loc 20 1874 5 is_stmt 1 view .LVU3217
 11313 0018 B5EEC00A 		vcmpe.f32	s0, #0
 11314 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11315 0020 06D4     		bmi	.L602
1879:Veno-Echo.cpp ****     {
 11316              		.loc 20 1879 5 view .LVU3218
1881:Veno-Echo.cpp ****     }
 11317              		.loc 20 1881 16 is_stmt 0 view .LVU3219
 11318 0022 B4EE670A 		vcmp.f32	s0, s15
 11319 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11320 002a 37FE800A 		vselgt.f32	s0, s15, s0
 11321              	.LVL720:
1881:Veno-Echo.cpp ****     }
 11322              		.loc 20 1881 16 view .LVU3220
 11323 002e 7047     		bx	lr
 11324              	.LVL721:
 11325              	.L602:
1876:Veno-Echo.cpp ****     }
 11326              		.loc 20 1876 16 view .LVU3221
 11327 0030 9FED010A 		vldr.32	s0, .L604
 11328              	.LVL722:
1884:Veno-Echo.cpp **** }
 11329              		.loc 20 1884 5 is_stmt 1 view .LVU3222
1885:Veno-Echo.cpp **** 
 11330              		.loc 20 1885 1 is_stmt 0 view .LVU3223
 11331 0034 7047     		bx	lr
 11332              	.L605:
 11333 0036 00BF     		.align	2
 11334              	.L604:
 11335 0038 00000000 		.word	0
 11336              		.cfi_endproc
 11337              	.LFE4337:
 11339              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 11340              		.align	1
 11341              		.p2align 2,,3
 11342              		.global	_Z16checkPickupStateffbb
 11343              		.syntax unified
 11344              		.thumb
 11345              		.thumb_func
 11346              		.fpu fpv5-d16
 11348              	_Z16checkPickupStateffbb:
 11349              	.LVL723:
 11350              	.LFB4338:
1889:Veno-Echo.cpp ****     bool retval{};
 11351              		.loc 20 1889 1 is_stmt 1 view -0
 11352              		.cfi_startproc
 11353              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 348


 11354              		@ frame_needed = 0, uses_anonymous_args = 0
 11355              		@ link register save eliminated.
1890:Veno-Echo.cpp ****     
 11356              		.loc 20 1890 5 view .LVU3225
1892:Veno-Echo.cpp ****     {
 11357              		.loc 20 1892 5 view .LVU3226
 11358 0000 69B1     		cbz	r1, .L607
1894:Veno-Echo.cpp ****         {
 11359              		.loc 20 1894 9 view .LVU3227
 11360              	.LVL724:
 11361              	.LBB2007:
 11362              	.LBI2007:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11363              		.loc 21 75 3 view .LVU3228
 11364              	.LBB2008:
 11365              		.loc 21 76 5 view .LVU3229
 11366              		.loc 21 76 5 is_stmt 0 view .LVU3230
 11367              	.LBE2008:
 11368              	.LBE2007:
1894:Veno-Echo.cpp ****         {
 11369              		.loc 20 1894 15 view .LVU3231
 11370 0002 70EE600A 		vsub.f32	s1, s0, s1
 11371              	.LVL725:
1894:Veno-Echo.cpp ****         {
 11372              		.loc 20 1894 9 view .LVU3232
 11373 0006 DFED0D7A 		vldr.32	s15, .L610
 11374              	.LBB2010:
 11375              	.LBB2009:
 11376              		.loc 21 76 31 view .LVU3233
 11377 000a B0EEE00A 		vabs.f32	s0, s1
 11378              	.LVL726:
 11379              		.loc 21 76 31 view .LVU3234
 11380              	.LBE2009:
 11381              	.LBE2010:
1894:Veno-Echo.cpp ****         {
 11382              		.loc 20 1894 9 view .LVU3235
 11383 000e B4EEE70A 		vcmpe.f32	s0, s15
 11384 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11385 0016 D4BF     		ite	le
 11386 0018 0120     		movle	r0, #1
 11387              	.LVL727:
1894:Veno-Echo.cpp ****         {
 11388              		.loc 20 1894 9 view .LVU3236
 11389 001a 0020     		movgt	r0, #0
 11390 001c 7047     		bx	lr
 11391              	.LVL728:
 11392              	.L607:
1906:Veno-Echo.cpp ****     {
 11393              		.loc 20 1906 5 is_stmt 1 view .LVU3237
 11394 001e 60B9     		cbnz	r0, .L608
1908:Veno-Echo.cpp ****         {
 11395              		.loc 20 1908 9 view .LVU3238
 11396              	.LVL729:
 11397              	.LBB2011:
 11398              	.LBI2011:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11399              		.loc 21 75 3 view .LVU3239
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 349


 11400              	.LBB2012:
 11401              		.loc 21 76 5 view .LVU3240
 11402              		.loc 21 76 5 is_stmt 0 view .LVU3241
 11403              	.LBE2012:
 11404              	.LBE2011:
1908:Veno-Echo.cpp ****         {
 11405              		.loc 20 1908 15 view .LVU3242
 11406 0020 30EE600A 		vsub.f32	s0, s0, s1
 11407              	.LVL730:
1908:Veno-Echo.cpp ****         {
 11408              		.loc 20 1908 9 view .LVU3243
 11409 0024 DFED057A 		vldr.32	s15, .L610
 11410              	.LBB2014:
 11411              	.LBB2013:
 11412              		.loc 21 76 31 view .LVU3244
 11413 0028 B0EEC00A 		vabs.f32	s0, s0
 11414              	.LBE2013:
 11415              	.LBE2014:
1908:Veno-Echo.cpp ****         {
 11416              		.loc 20 1908 9 view .LVU3245
 11417 002c B4EEE70A 		vcmpe.f32	s0, s15
 11418 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11419 0034 CCBF     		ite	gt
 11420 0036 0120     		movgt	r0, #1
 11421              	.LVL731:
1908:Veno-Echo.cpp ****         {
 11422              		.loc 20 1908 9 view .LVU3246
 11423 0038 0020     		movle	r0, #0
 11424              	.L608:
 11425              	.LVL732:
1925:Veno-Echo.cpp **** 
 11426              		.loc 20 1925 5 is_stmt 1 view .LVU3247
1927:Veno-Echo.cpp **** 
 11427              		.loc 20 1927 1 is_stmt 0 view .LVU3248
 11428 003a 7047     		bx	lr
 11429              	.L611:
 11430              		.align	2
 11431              	.L610:
 11432 003c 0AD7A33B 		.word	1000593162
 11433              		.cfi_endproc
 11434              	.LFE4338:
 11436              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 11437              		.align	1
 11438              		.p2align 2,,3
 11439              		.global	_Z20checkPickupState_altff11pickupStateb
 11440              		.syntax unified
 11441              		.thumb
 11442              		.thumb_func
 11443              		.fpu fpv5-d16
 11445              	_Z20checkPickupState_altff11pickupStateb:
 11446              	.LVL733:
 11447              	.LFB4339:
1931:Veno-Echo.cpp ****     pickupState retval{};
 11448              		.loc 20 1931 1 is_stmt 1 view -0
 11449              		.cfi_startproc
 11450              		@ args = 0, pretend = 0, frame = 0
 11451              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 350


 11452              		@ link register save eliminated.
1932:Veno-Echo.cpp **** 
 11453              		.loc 20 1932 5 view .LVU3250
1934:Veno-Echo.cpp ****     {
 11454              		.loc 20 1934 5 view .LVU3251
 11455 0000 A1B1     		cbz	r1, .L613
1936:Veno-Echo.cpp ****         {
 11456              		.loc 20 1936 9 view .LVU3252
1936:Veno-Echo.cpp ****         {
 11457              		.loc 20 1936 31 is_stmt 0 view .LVU3253
 11458 0002 DFED1A7A 		vldr.32	s15, .L630
 11459 0006 30EEE77A 		vsub.f32	s14, s1, s15
1936:Veno-Echo.cpp ****         {
 11460              		.loc 20 1936 9 view .LVU3254
 11461 000a B4EEC07A 		vcmpe.f32	s14, s0
 11462 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11463 0012 01DD     		ble	.L628
 11464 0014 0020     		movs	r0, #0
 11465              	.LVL734:
1936:Veno-Echo.cpp ****         {
 11466              		.loc 20 1936 9 view .LVU3255
 11467 0016 7047     		bx	lr
 11468              	.LVL735:
 11469              	.L628:
1941:Veno-Echo.cpp ****         {
 11470              		.loc 20 1941 14 is_stmt 1 view .LVU3256
1941:Veno-Echo.cpp ****         {
 11471              		.loc 20 1941 36 is_stmt 0 view .LVU3257
 11472 0018 70EEA70A 		vadd.f32	s1, s1, s15
 11473              	.LVL736:
1941:Veno-Echo.cpp ****         {
 11474              		.loc 20 1941 14 view .LVU3258
 11475 001c F4EEC00A 		vcmpe.f32	s1, s0
 11476 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1948:Veno-Echo.cpp ****         }
 11477              		.loc 20 1948 20 view .LVU3259
 11478 0024 4CBF     		ite	mi
 11479 0026 0120     		movmi	r0, #1
 11480              	.LVL737:
1948:Veno-Echo.cpp ****         }
 11481              		.loc 20 1948 20 view .LVU3260
 11482 0028 0220     		movpl	r0, #2
 11483 002a 7047     		bx	lr
 11484              	.LVL738:
 11485              	.L613:
1954:Veno-Echo.cpp ****         {
 11486              		.loc 20 1954 9 is_stmt 1 view .LVU3261
 11487 002c 0128     		cmp	r0, #1
 11488 002e 04D0     		beq	.L616
 11489 0030 0228     		cmp	r0, #2
 11490 0032 01D0     		beq	.L614
 11491 0034 68B1     		cbz	r0, .L629
 11492 0036 0846     		mov	r0, r1
 11493              	.LVL739:
 11494              	.L614:
1975:Veno-Echo.cpp **** }
 11495              		.loc 20 1975 5 view .LVU3262
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 351


1976:Veno-Echo.cpp **** 
 11496              		.loc 20 1976 1 is_stmt 0 view .LVU3263
 11497 0038 7047     		bx	lr
 11498              	.LVL740:
 11499              	.L616:
1963:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 11500              		.loc 20 1963 13 is_stmt 1 view .LVU3264
1964:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11501              		.loc 20 1964 13 view .LVU3265
1964:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11502              		.loc 20 1964 35 is_stmt 0 view .LVU3266
 11503 003a DFED0C7A 		vldr.32	s15, .L630
 11504 003e 70EEA70A 		vadd.f32	s1, s1, s15
 11505              	.LVL741:
1964:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11506              		.loc 20 1964 13 view .LVU3267
 11507 0042 F4EEC00A 		vcmpe.f32	s1, s0
 11508 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11509 004a CCBF     		ite	gt
 11510 004c 0220     		movgt	r0, #2
 11511              	.LVL742:
1964:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11512              		.loc 20 1964 13 view .LVU3268
 11513 004e 0120     		movle	r0, #1
 11514 0050 7047     		bx	lr
 11515              	.LVL743:
 11516              	.L629:
1956:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 11517              		.loc 20 1956 13 is_stmt 1 view .LVU3269
1957:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11518              		.loc 20 1957 13 view .LVU3270
1957:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11519              		.loc 20 1957 35 is_stmt 0 view .LVU3271
 11520 0052 DFED067A 		vldr.32	s15, .L630
 11521 0056 70EEE70A 		vsub.f32	s1, s1, s15
 11522              	.LVL744:
1957:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11523              		.loc 20 1957 13 view .LVU3272
 11524 005a F4EEC00A 		vcmpe.f32	s1, s0
 11525 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11526 0062 4CBF     		ite	mi
 11527 0064 0220     		movmi	r0, #2
 11528              	.LVL745:
1957:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11529              		.loc 20 1957 13 view .LVU3273
 11530 0066 0020     		movpl	r0, #0
 11531 0068 7047     		bx	lr
 11532              	.L631:
 11533 006a 00BF     		.align	2
 11534              	.L630:
 11535 006c 0AD7A33B 		.word	1000593162
 11536              		.cfi_endproc
 11537              	.LFE4339:
 11539              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 11540              		.align	1
 11541              		.p2align 2,,3
 11542              		.global	_Z11GetTapRatio9TapRatios
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 352


 11543              		.syntax unified
 11544              		.thumb
 11545              		.thumb_func
 11546              		.fpu fpv5-d16
 11548              	_Z11GetTapRatio9TapRatios:
 11549              	.LVL746:
 11550              	.LFB4340:
1979:Veno-Echo.cpp **** double retVal{};
 11551              		.loc 20 1979 1 is_stmt 1 view -0
 11552              		.cfi_startproc
 11553              		@ args = 0, pretend = 0, frame = 0
 11554              		@ frame_needed = 0, uses_anonymous_args = 0
 11555              		@ link register save eliminated.
1980:Veno-Echo.cpp ****     switch(ratio)
 11556              		.loc 20 1980 1 view .LVU3275
1981:Veno-Echo.cpp ****     {
 11557              		.loc 20 1981 5 view .LVU3276
 11558 0000 0138     		subs	r0, r0, #1
 11559              	.LVL747:
1981:Veno-Echo.cpp ****     {
 11560              		.loc 20 1981 5 is_stmt 0 view .LVU3277
 11561 0002 C0B2     		uxtb	r0, r0
 11562 0004 0228     		cmp	r0, #2
 11563 0006 05D8     		bhi	.L634
 11564 0008 044B     		ldr	r3, .L635
 11565 000a 03EBC000 		add	r0, r3, r0, lsl #3
 11566 000e 90ED000B 		vldr.64	d0, [r0]
 11567 0012 7047     		bx	lr
 11568              	.L634:
1979:Veno-Echo.cpp **** double retVal{};
 11569              		.loc 20 1979 1 view .LVU3278
 11570 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 11571              	.LVL748:
 11572              		.loc 20 2004 1 is_stmt 1 view .LVU3279
2005:Veno-Echo.cpp **** }
 11573              		.loc 20 2005 1 is_stmt 0 view .LVU3280
 11574 0018 7047     		bx	lr
 11575              	.L636:
 11576 001a 00BF     		.align	2
 11577              	.L635:
 11578 001c 00000000 		.word	.LANCHOR24
 11579              		.cfi_endproc
 11580              	.LFE4340:
 11582              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 11583              		.align	1
 11584              		.p2align 2,,3
 11585              		.syntax unified
 11586              		.thumb
 11587              		.thumb_func
 11588              		.fpu fpv5-d16
 11590              	_GLOBAL__sub_I_delMemsL:
 11591              	.LFB4919:
 11592              		.loc 20 2005 1 is_stmt 1 view -0
 11593              		.cfi_startproc
 11594              		@ args = 0, pretend = 0, frame = 0
 11595              		@ frame_needed = 0, uses_anonymous_args = 0
 11596              	.LBB2171:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 353


 11597              	.LBI2171:
 11598              		.loc 20 2005 1 view .LVU3282
 11599              	.LVL749:
 11600              	.LBB2172:
 11601              	.LBB2173:
 11602              	.LBI2173:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 11603              		.loc 2 21 5 view .LVU3283
 11604              	.LBB2174:
 11605              	.LBB2175:
 11606              	.LBI2175:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11607              		.loc 6 36 5 view .LVU3284
 11608              	.LBE2175:
 11609              	.LBE2174:
 11610              	.LBE2173:
 11611              	.LBE2172:
 11612              	.LBE2171:
 11613              		.loc 20 2005 1 is_stmt 0 view .LVU3285
 11614 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 11615              		.cfi_def_cfa_offset 32
 11616              		.cfi_offset 3, -32
 11617              		.cfi_offset 4, -28
 11618              		.cfi_offset 5, -24
 11619              		.cfi_offset 6, -20
 11620              		.cfi_offset 7, -16
 11621              		.cfi_offset 8, -12
 11622              		.cfi_offset 9, -8
 11623              		.cfi_offset 14, -4
 11624              	.LBB2297:
 11625              	.LBB2293:
 11626              	.LBB2190:
 11627              	.LBB2188:
 11628              	.LBB2180:
 11629              	.LBB2176:
 11630              	.LBB2177:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11631              		.loc 6 36 35 view .LVU3286
 11632 0004 9848     		ldr	r0, .L639
 11633 0006 0026     		movs	r6, #0
 11634              	.LBE2177:
 11635              	.LBE2176:
 11636              	.LBE2180:
 11637              	.LBE2188:
 11638              	.LBE2190:
 11639              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 354


  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 11640              		.loc 26 33 18 view .LVU3287
 11641 0008 984C     		ldr	r4, .L639+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11642              		.loc 20 40 12 view .LVU3288
 11643 000a 994D     		ldr	r5, .L639+8
 11644              		.loc 26 33 18 view .LVU3289
 11645 000c 2246     		mov	r2, r4
 11646 000e 9949     		ldr	r1, .L639+12
 11647              	.LBB2191:
 11648              	.LBB2189:
 11649              	.LBB2181:
 11650              	.LBB2179:
 11651              	.LBB2178:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11652              		.loc 6 36 35 view .LVU3290
 11653 0010 4661     		str	r6, [r0, #20]
 11654              	.LVL750:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11655              		.loc 6 36 35 view .LVU3291
 11656              	.LBE2178:
 11657              	.LBE2179:
 11658              	.LBE2181:
 11659              	.LBB2182:
 11660              	.LBI2182:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11661              		.loc 5 84 5 is_stmt 1 view .LVU3292
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11662              		.loc 5 84 5 is_stmt 0 view .LVU3293
 11663              	.LBE2182:
 11664              	.LBB2183:
 11665              	.LBI2183:
 11666              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 355


   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 356


  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 11667              		.loc 27 83 5 is_stmt 1 view .LVU3294
 11668              	.LBB2184:
 11669              	.LBB2185:
 11670              		.loc 27 83 33 is_stmt 0 view .LVU3295
 11671 0012 0662     		str	r6, [r0, #32]
 11672              	.LVL751:
 11673              		.loc 27 83 33 view .LVU3296
 11674              	.LBE2185:
 11675              	.LBE2184:
 11676              	.LBE2183:
 11677              	.LBB2186:
 11678              	.LBI2186:
  40:../libdaisy/src/hid/usb.h **** 
 11679              		.loc 4 40 5 is_stmt 1 view .LVU3297
  40:../libdaisy/src/hid/usb.h **** 
 11680              		.loc 4 40 5 is_stmt 0 view .LVU3298
 11681              	.LBE2186:
 11682              	.LBB2187:
 11683              	.LBI2187:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11684              		.loc 3 56 5 is_stmt 1 view .LVU3299
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11685              		.loc 3 56 5 is_stmt 0 view .LVU3300
 11686              	.LBE2187:
 11687              	.LBE2189:
 11688              	.LBE2191:
 11689              		.loc 26 33 18 view .LVU3301
 11690 0014 FFF7FEFF 		bl	__aeabi_atexit
 11691              	.LVL752:
 11692              	.LBB2192:
 11693              	.LBI2192:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11694              		.loc 9 21 5 is_stmt 1 view .LVU3302
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 357


 11695              		.loc 9 21 5 is_stmt 0 view .LVU3303
 11696              	.LBE2192:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11697              		.loc 20 40 12 view .LVU3304
 11698 0018 2246     		mov	r2, r4
 11699 001a 2946     		mov	r1, r5
 11700 001c 9648     		ldr	r0, .L639+16
 11701 001e FFF7FEFF 		bl	__aeabi_atexit
 11702              	.LVL753:
 11703              	.LBB2193:
 11704              	.LBI2193:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11705              		.loc 9 21 5 is_stmt 1 view .LVU3305
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11706              		.loc 9 21 5 is_stmt 0 view .LVU3306
 11707              	.LBE2193:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 11708              		.loc 20 41 12 view .LVU3307
 11709 0022 2246     		mov	r2, r4
 11710 0024 2946     		mov	r1, r5
 11711 0026 9548     		ldr	r0, .L639+20
 11712 0028 FFF7FEFF 		bl	__aeabi_atexit
 11713              	.LVL754:
 11714              	.LBB2194:
 11715              	.LBI2194:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11716              		.loc 9 21 5 is_stmt 1 view .LVU3308
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11717              		.loc 9 21 5 is_stmt 0 view .LVU3309
 11718              	.LBE2194:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 11719              		.loc 20 42 12 view .LVU3310
 11720 002c 2246     		mov	r2, r4
 11721 002e 2946     		mov	r1, r5
 11722 0030 9348     		ldr	r0, .L639+24
 11723 0032 FFF7FEFF 		bl	__aeabi_atexit
 11724              	.LVL755:
 11725              	.LBB2195:
 11726              	.LBI2195:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11727              		.loc 9 21 5 is_stmt 1 view .LVU3311
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11728              		.loc 9 21 5 is_stmt 0 view .LVU3312
 11729              	.LBE2195:
  43:Veno-Echo.cpp **** 
 11730              		.loc 20 43 12 view .LVU3313
 11731 0036 2246     		mov	r2, r4
 11732 0038 2946     		mov	r1, r5
 11733 003a 9248     		ldr	r0, .L639+28
 11734 003c FFF7FEFF 		bl	__aeabi_atexit
 11735              	.LVL756:
 11736              	.LBB2196:
 11737              	.LBI2196:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11738              		.loc 9 21 5 is_stmt 1 view .LVU3314
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11739              		.loc 9 21 5 is_stmt 0 view .LVU3315
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 358


 11740              	.LBE2196:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 11741              		.loc 20 45 12 view .LVU3316
 11742 0040 2246     		mov	r2, r4
 11743 0042 2946     		mov	r1, r5
 11744 0044 9048     		ldr	r0, .L639+32
 11745 0046 FFF7FEFF 		bl	__aeabi_atexit
 11746              	.LVL757:
 11747              	.LBB2197:
 11748              	.LBI2197:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11749              		.loc 9 21 5 is_stmt 1 view .LVU3317
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11750              		.loc 9 21 5 is_stmt 0 view .LVU3318
 11751              	.LBE2197:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 11752              		.loc 20 46 12 view .LVU3319
 11753 004a 2246     		mov	r2, r4
 11754 004c 2946     		mov	r1, r5
 11755 004e 8F48     		ldr	r0, .L639+36
 11756 0050 FFF7FEFF 		bl	__aeabi_atexit
 11757              	.LVL758:
 11758              	.LBB2198:
 11759              	.LBI2198:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11760              		.loc 9 21 5 is_stmt 1 view .LVU3320
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11761              		.loc 9 21 5 is_stmt 0 view .LVU3321
 11762              	.LBE2198:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 11763              		.loc 20 47 12 view .LVU3322
 11764 0054 2246     		mov	r2, r4
 11765 0056 2946     		mov	r1, r5
 11766 0058 8D48     		ldr	r0, .L639+40
 11767 005a FFF7FEFF 		bl	__aeabi_atexit
 11768              	.LVL759:
 11769              	.LBB2199:
 11770              	.LBI2199:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11771              		.loc 9 21 5 is_stmt 1 view .LVU3323
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11772              		.loc 9 21 5 is_stmt 0 view .LVU3324
 11773              	.LBE2199:
  48:Veno-Echo.cpp **** 
 11774              		.loc 20 48 12 view .LVU3325
 11775 005e 2246     		mov	r2, r4
 11776 0060 2946     		mov	r1, r5
 11777 0062 8C48     		ldr	r0, .L639+44
 11778 0064 FFF7FEFF 		bl	__aeabi_atexit
 11779              	.LVL760:
 11780              	.LBB2200:
 11781              	.LBI2200:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11782              		.loc 8 15 5 is_stmt 1 view .LVU3326
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11783              		.loc 8 15 5 is_stmt 0 view .LVU3327
 11784              	.LBE2200:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 359


  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11785              		.loc 20 50 19 view .LVU3328
 11786 0068 2246     		mov	r2, r4
 11787 006a 8B49     		ldr	r1, .L639+48
 11788              	.LBB2201:
 11789              	.LBB2202:
 11790              	.LBB2203:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11791              		.loc 12 45 13 view .LVU3329
 11792 006c 0025     		movs	r5, #0
 11793              	.LBE2203:
 11794              	.LBE2202:
 11795              	.LBE2201:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11796              		.loc 20 50 19 view .LVU3330
 11797 006e 8B48     		ldr	r0, .L639+52
 11798 0070 FFF7FEFF 		bl	__aeabi_atexit
 11799              	.LVL761:
 11800              	.LBB2208:
 11801              	.LBI2201:
  43:envFollow.h   ****     {
 11802              		.loc 12 43 5 is_stmt 1 view .LVU3331
 11803              	.LBB2206:
 11804              	.LBB2204:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11805              		.loc 12 45 9 view .LVU3332
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11806              		.loc 12 48 11 is_stmt 0 view .LVU3333
 11807 0074 8A4F     		ldr	r7, .L639+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11808              		.loc 12 45 13 view .LVU3334
 11809 0076 8B48     		ldr	r0, .L639+60
 11810              	.LBE2204:
 11811              	.LBE2206:
 11812              	.LBE2208:
  51:Veno-Echo.cpp **** 
 11813              		.loc 20 51 18 view .LVU3335
 11814 0078 2246     		mov	r2, r4
 11815 007a 8B49     		ldr	r1, .L639+64
 11816              	.LBB2209:
 11817              	.LBB2207:
 11818              	.LBB2205:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11819              		.loc 12 45 13 view .LVU3336
 11820 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11821              		.loc 12 46 9 is_stmt 1 view .LVU3337
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11822              		.loc 12 46 20 is_stmt 0 view .LVU3338
 11823 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11824              		.loc 12 47 9 is_stmt 1 view .LVU3339
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11825              		.loc 12 47 17 is_stmt 0 view .LVU3340
 11826 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11827              		.loc 12 48 9 is_stmt 1 view .LVU3341
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 360


  50:envFollow.h   ****     }  
 11828              		.loc 12 50 21 is_stmt 0 view .LVU3342
 11829 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11830              		.loc 12 48 11 view .LVU3343
 11831 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11832              		.loc 12 49 9 is_stmt 1 view .LVU3344
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11833              		.loc 12 49 15 is_stmt 0 view .LVU3345
 11834 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11835              		.loc 12 50 9 is_stmt 1 view .LVU3346
 11836              	.LVL762:
  50:envFollow.h   ****     }  
 11837              		.loc 12 50 9 is_stmt 0 view .LVU3347
 11838              	.LBE2205:
 11839              	.LBE2207:
 11840              	.LBE2209:
  51:Veno-Echo.cpp **** 
 11841              		.loc 20 51 18 view .LVU3348
 11842 0088 FFF7FEFF 		bl	__aeabi_atexit
 11843              	.LVL763:
 11844              	.LBB2210:
 11845              	.LBI2210:
  43:envFollow.h   ****     {
 11846              		.loc 12 43 5 is_stmt 1 view .LVU3349
 11847              	.LBB2211:
 11848              	.LBB2212:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11849              		.loc 12 45 9 view .LVU3350
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11850              		.loc 12 45 13 is_stmt 0 view .LVU3351
 11851 008c 8748     		ldr	r0, .L639+68
 11852              	.LBE2212:
 11853              	.LBE2211:
 11854              	.LBE2210:
  53:Veno-Echo.cpp **** 
 11855              		.loc 20 53 16 view .LVU3352
 11856 008e DFF8E482 		ldr	r8, .L639+268
  51:Veno-Echo.cpp **** 
 11857              		.loc 20 51 27 view .LVU3353
 11858 0092 2246     		mov	r2, r4
 11859 0094 8449     		ldr	r1, .L639+64
 11860              	.LBB2215:
 11861              	.LBB2214:
 11862              	.LBB2213:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11863              		.loc 12 45 13 view .LVU3354
 11864 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11865              		.loc 12 46 9 is_stmt 1 view .LVU3355
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11866              		.loc 12 46 20 is_stmt 0 view .LVU3356
 11867 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11868              		.loc 12 47 9 is_stmt 1 view .LVU3357
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 361


  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11869              		.loc 12 47 17 is_stmt 0 view .LVU3358
 11870 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11871              		.loc 12 48 9 is_stmt 1 view .LVU3359
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11872              		.loc 12 48 11 is_stmt 0 view .LVU3360
 11873 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11874              		.loc 12 49 9 is_stmt 1 view .LVU3361
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11875              		.loc 12 49 15 is_stmt 0 view .LVU3362
 11876 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11877              		.loc 12 50 9 is_stmt 1 view .LVU3363
  50:envFollow.h   ****     }  
 11878              		.loc 12 50 21 is_stmt 0 view .LVU3364
 11879 00a0 8560     		str	r5, [r0, #8]	@ float
 11880              	.LVL764:
  50:envFollow.h   ****     }  
 11881              		.loc 12 50 21 view .LVU3365
 11882              	.LBE2213:
 11883              	.LBE2214:
 11884              	.LBE2215:
  51:Veno-Echo.cpp **** 
 11885              		.loc 20 51 27 view .LVU3366
 11886 00a2 FFF7FEFF 		bl	__aeabi_atexit
 11887              	.LVL765:
 11888              	.LBB2216:
 11889              	.LBI2216:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11890              		.loc 11 14 5 is_stmt 1 view .LVU3367
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11891              		.loc 11 14 5 is_stmt 0 view .LVU3368
 11892              	.LBE2216:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11893              		.loc 20 56 76 view .LVU3369
 11894 00a6 824F     		ldr	r7, .L639+72
  53:Veno-Echo.cpp **** 
 11895              		.loc 20 53 16 view .LVU3370
 11896 00a8 2246     		mov	r2, r4
 11897 00aa 4146     		mov	r1, r8
 11898 00ac 8148     		ldr	r0, .L639+76
 11899 00ae FFF7FEFF 		bl	__aeabi_atexit
 11900              	.LVL766:
 11901              	.LBB2217:
 11902              	.LBI2217:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11903              		.loc 11 14 5 is_stmt 1 view .LVU3371
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11904              		.loc 11 14 5 is_stmt 0 view .LVU3372
 11905              	.LBE2217:
  53:Veno-Echo.cpp **** 
 11906              		.loc 20 53 29 view .LVU3373
 11907 00b2 2246     		mov	r2, r4
 11908 00b4 4146     		mov	r1, r8
 11909 00b6 8048     		ldr	r0, .L639+80
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 362


 11910 00b8 FFF7FEFF 		bl	__aeabi_atexit
 11911              	.LVL767:
 11912              	.LBB2218:
 11913              	.LBI2218:
  48:delayline_multitap.h ****     {
 11914              		.loc 18 48 5 is_stmt 1 view .LVU3374
  48:delayline_multitap.h ****     {
 11915              		.loc 18 48 5 is_stmt 0 view .LVU3375
 11916              	.LBE2218:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11917              		.loc 20 59 80 view .LVU3376
 11918 00bc 7F4D     		ldr	r5, .L639+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11919              		.loc 20 56 76 view .LVU3377
 11920 00be 2246     		mov	r2, r4
 11921 00c0 3946     		mov	r1, r7
 11922 00c2 7F48     		ldr	r0, .L639+88
 11923              	.LBB2219:
 11924              	.LBB2220:
 11925              	.LBB2221:
  53:taptempo.h    ****         clockLength_ = 0;
 11926              		.loc 13 53 19 view .LVU3378
 11927 00c4 4FF00008 		mov	r8, #0
 11928              	.LBE2221:
 11929              	.LBE2220:
 11930              	.LBE2219:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11931              		.loc 20 56 76 view .LVU3379
 11932 00c8 FFF7FEFF 		bl	__aeabi_atexit
 11933              	.LVL768:
 11934              	.LBB2228:
 11935              	.LBI2228:
  48:delayline_multitap.h ****     {
 11936              		.loc 18 48 5 is_stmt 1 view .LVU3380
  48:delayline_multitap.h ****     {
 11937              		.loc 18 48 5 is_stmt 0 view .LVU3381
 11938              	.LBE2228:
  57:Veno-Echo.cpp **** 
 11939              		.loc 20 57 76 view .LVU3382
 11940 00cc 2246     		mov	r2, r4
 11941 00ce 3946     		mov	r1, r7
 11942 00d0 7C48     		ldr	r0, .L639+92
 11943 00d2 FFF7FEFF 		bl	__aeabi_atexit
 11944              	.LVL769:
 11945              	.LBB2229:
 11946              	.LBI2229:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11947              		.loc 19 38 5 is_stmt 1 view .LVU3383
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11948              		.loc 19 38 5 is_stmt 0 view .LVU3384
 11949              	.LBE2229:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11950              		.loc 20 98 12 view .LVU3385
 11951 00d6 7C4F     		ldr	r7, .L639+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11952              		.loc 20 59 80 view .LVU3386
 11953 00d8 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 363


 11954 00da 2946     		mov	r1, r5
 11955 00dc 7B48     		ldr	r0, .L639+100
 11956 00de FFF7FEFF 		bl	__aeabi_atexit
 11957              	.LVL770:
 11958              	.LBB2230:
 11959              	.LBI2230:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11960              		.loc 19 38 5 is_stmt 1 view .LVU3387
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11961              		.loc 19 38 5 is_stmt 0 view .LVU3388
 11962              	.LBE2230:
  60:Veno-Echo.cpp **** 
 11963              		.loc 20 60 80 view .LVU3389
 11964 00e2 2246     		mov	r2, r4
 11965 00e4 2946     		mov	r1, r5
 11966 00e6 7A48     		ldr	r0, .L639+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11967              		.loc 20 102 11 view .LVU3390
 11968 00e8 7A4D     		ldr	r5, .L639+108
  60:Veno-Echo.cpp **** 
 11969              		.loc 20 60 80 view .LVU3391
 11970 00ea FFF7FEFF 		bl	__aeabi_atexit
 11971              	.LVL771:
 11972              	.LBB2231:
 11973              	.LBI2231:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11974              		.loc 17 49 1 is_stmt 1 view .LVU3392
 11975              	.LBB2232:
 11976              	.LBB2233:
 11977              	.LBI2233:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11978              		.loc 14 47 1 view .LVU3393
 11979              	.LBB2234:
 11980              	.LBB2235:
 11981              	.LBI2235:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11982              		.loc 16 24 5 view .LVU3394
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11983              		.loc 16 24 5 is_stmt 0 view .LVU3395
 11984              	.LBE2235:
 11985              	.LBB2236:
 11986              	.LBI2236:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11987              		.loc 15 15 5 is_stmt 1 view .LVU3396
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11988              		.loc 15 15 5 is_stmt 0 view .LVU3397
 11989              	.LBE2236:
 11990              	.LBE2234:
 11991              	.LBE2233:
 11992              	.LBE2232:
 11993              	.LBE2231:
 11994              	.LBE2293:
 11995              	.LBE2297:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11996              		.loc 17 49 14 is_stmt 1 view .LVU3398
  49:DelayMulti.h  **** ~DelayMulti() {}
 11997              		.loc 17 49 14 view .LVU3399
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 364


 11998              	.LBB2298:
 11999              	.LBB2294:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12000              		.loc 20 98 12 is_stmt 0 view .LVU3400
 12001 00ee 2246     		mov	r2, r4
 12002 00f0 3946     		mov	r1, r7
 12003 00f2 7948     		ldr	r0, .L639+112
 12004 00f4 FFF7FEFF 		bl	__aeabi_atexit
 12005              	.LVL772:
 12006              	.LBB2237:
 12007              	.LBI2237:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12008              		.loc 17 49 1 is_stmt 1 view .LVU3401
 12009              	.LBB2238:
 12010              	.LBB2239:
 12011              	.LBI2239:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12012              		.loc 14 47 1 view .LVU3402
 12013              	.LBB2240:
 12014              	.LBB2241:
 12015              	.LBI2241:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12016              		.loc 16 24 5 view .LVU3403
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12017              		.loc 16 24 5 is_stmt 0 view .LVU3404
 12018              	.LBE2241:
 12019              	.LBB2242:
 12020              	.LBI2242:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12021              		.loc 15 15 5 is_stmt 1 view .LVU3405
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12022              		.loc 15 15 5 is_stmt 0 view .LVU3406
 12023              	.LBE2242:
 12024              	.LBE2240:
 12025              	.LBE2239:
 12026              	.LBE2238:
 12027              	.LBE2237:
 12028              	.LBE2294:
 12029              	.LBE2298:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12030              		.loc 17 49 14 is_stmt 1 view .LVU3407
  49:DelayMulti.h  **** ~DelayMulti() {}
 12031              		.loc 17 49 14 view .LVU3408
 12032              	.LBB2299:
 12033              	.LBB2295:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12034              		.loc 20 98 19 is_stmt 0 view .LVU3409
 12035 00f8 2246     		mov	r2, r4
 12036 00fa 3946     		mov	r1, r7
 12037 00fc 7748     		ldr	r0, .L639+116
 12038 00fe FFF7FEFF 		bl	__aeabi_atexit
 12039              	.LVL773:
 12040              	.LBB2243:
 12041              	.LBI2243:
  78:LEDs.h        ****     ~ButtonLED() {}
 12042              		.loc 14 78 5 is_stmt 1 view .LVU3410
 12043              	.LBB2244:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 365


 12044              	.LBB2245:
 12045              	.LBI2245:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12046              		.loc 1 40 5 view .LVU3411
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12047              		.loc 1 40 5 is_stmt 0 view .LVU3412
 12048              	.LBE2245:
 12049              	.LBB2246:
 12050              	.LBI2246:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12051              		.loc 16 24 5 is_stmt 1 view .LVU3413
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12052              		.loc 16 24 5 is_stmt 0 view .LVU3414
 12053              	.LBE2246:
 12054              	.LBE2244:
 12055              	.LBE2243:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12056              		.loc 20 102 11 view .LVU3415
 12057 0102 2246     		mov	r2, r4
 12058 0104 2946     		mov	r1, r5
 12059 0106 7648     		ldr	r0, .L639+120
 12060 0108 FFF7FEFF 		bl	__aeabi_atexit
 12061              	.LVL774:
 12062              	.LBB2247:
 12063              	.LBI2247:
  78:LEDs.h        ****     ~ButtonLED() {}
 12064              		.loc 14 78 5 is_stmt 1 view .LVU3416
 12065              	.LBB2248:
 12066              	.LBB2249:
 12067              	.LBI2249:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12068              		.loc 1 40 5 view .LVU3417
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12069              		.loc 1 40 5 is_stmt 0 view .LVU3418
 12070              	.LBE2249:
 12071              	.LBB2250:
 12072              	.LBI2250:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12073              		.loc 16 24 5 is_stmt 1 view .LVU3419
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12074              		.loc 16 24 5 is_stmt 0 view .LVU3420
 12075              	.LBE2250:
 12076              	.LBE2248:
 12077              	.LBE2247:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12078              		.loc 20 102 18 view .LVU3421
 12079 010c 2246     		mov	r2, r4
 12080 010e 2946     		mov	r1, r5
 12081 0110 7448     		ldr	r0, .L639+124
 12082 0112 FFF7FEFF 		bl	__aeabi_atexit
 12083              	.LVL775:
 12084              	.LBB2251:
 12085              	.LBI2251:
  78:LEDs.h        ****     ~ButtonLED() {}
 12086              		.loc 14 78 5 is_stmt 1 view .LVU3422
 12087              	.LBB2252:
 12088              	.LBB2253:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 366


 12089              	.LBI2253:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12090              		.loc 1 40 5 view .LVU3423
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12091              		.loc 1 40 5 is_stmt 0 view .LVU3424
 12092              	.LBE2253:
 12093              	.LBB2254:
 12094              	.LBI2254:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12095              		.loc 16 24 5 is_stmt 1 view .LVU3425
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12096              		.loc 16 24 5 is_stmt 0 view .LVU3426
 12097              	.LBE2254:
 12098              	.LBE2252:
 12099              	.LBE2251:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12100              		.loc 20 102 25 view .LVU3427
 12101 0116 2246     		mov	r2, r4
 12102 0118 2946     		mov	r1, r5
 12103 011a 7348     		ldr	r0, .L639+128
 12104 011c FFF7FEFF 		bl	__aeabi_atexit
 12105              	.LVL776:
 12106              	.LBB2255:
 12107              	.LBI2255:
  78:LEDs.h        ****     ~ButtonLED() {}
 12108              		.loc 14 78 5 is_stmt 1 view .LVU3428
 12109              	.LBB2256:
 12110              	.LBB2257:
 12111              	.LBI2257:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12112              		.loc 1 40 5 view .LVU3429
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12113              		.loc 1 40 5 is_stmt 0 view .LVU3430
 12114              	.LBE2257:
 12115              	.LBB2258:
 12116              	.LBI2258:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12117              		.loc 16 24 5 is_stmt 1 view .LVU3431
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12118              		.loc 16 24 5 is_stmt 0 view .LVU3432
 12119              	.LBE2258:
 12120              	.LBE2256:
 12121              	.LBE2255:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12122              		.loc 20 102 34 view .LVU3433
 12123 0120 2246     		mov	r2, r4
 12124 0122 2946     		mov	r1, r5
 12125 0124 7148     		ldr	r0, .L639+132
 12126 0126 FFF7FEFF 		bl	__aeabi_atexit
 12127              	.LVL777:
 12128              	.LBB2259:
 12129              	.LBI2259:
  78:LEDs.h        ****     ~ButtonLED() {}
 12130              		.loc 14 78 5 is_stmt 1 view .LVU3434
 12131              	.LBB2260:
 12132              	.LBB2261:
 12133              	.LBI2261:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 367


  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12134              		.loc 1 40 5 view .LVU3435
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12135              		.loc 1 40 5 is_stmt 0 view .LVU3436
 12136              	.LBE2261:
 12137              	.LBB2262:
 12138              	.LBI2262:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12139              		.loc 16 24 5 is_stmt 1 view .LVU3437
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12140              		.loc 16 24 5 is_stmt 0 view .LVU3438
 12141              	.LBE2262:
 12142              	.LBE2260:
 12143              	.LBE2259:
 144:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12144              		.loc 20 144 13 view .LVU3439
 12145 012a 714F     		ldr	r7, .L639+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12146              		.loc 20 102 44 view .LVU3440
 12147 012c 2246     		mov	r2, r4
 12148 012e 2946     		mov	r1, r5
 12149 0130 7048     		ldr	r0, .L639+140
 12150 0132 FFF7FEFF 		bl	__aeabi_atexit
 12151              	.LVL778:
 12152              	.LBB2263:
 12153              	.LBI2263:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12154              		.loc 14 47 1 is_stmt 1 view .LVU3441
 12155              	.LBB2264:
 12156              	.LBB2265:
 12157              	.LBI2265:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12158              		.loc 16 24 5 view .LVU3442
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12159              		.loc 16 24 5 is_stmt 0 view .LVU3443
 12160              	.LBE2265:
 12161              	.LBB2266:
 12162              	.LBI2266:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12163              		.loc 15 15 5 is_stmt 1 view .LVU3444
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12164              		.loc 15 15 5 is_stmt 0 view .LVU3445
 12165              	.LBE2266:
 12166              	.LBE2264:
 12167              	.LBE2263:
 103:Veno-Echo.cpp **** 
 12168              		.loc 20 103 10 view .LVU3446
 12169 0136 2246     		mov	r2, r4
 12170 0138 6F49     		ldr	r1, .L639+144
 12171 013a 7048     		ldr	r0, .L639+148
 12172 013c FFF7FEFF 		bl	__aeabi_atexit
 12173              	.LVL779:
 12174              	.LBB2267:
 12175              	.LBI2267:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12176              		.loc 7 38 5 is_stmt 1 view .LVU3447
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 368


 12177              		.loc 7 38 5 is_stmt 0 view .LVU3448
 12178              	.LBE2267:
 144:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12179              		.loc 20 144 13 view .LVU3449
 12180 0140 2246     		mov	r2, r4
 12181 0142 3946     		mov	r1, r7
 12182 0144 6E48     		ldr	r0, .L639+152
 12183 0146 FFF7FEFF 		bl	__aeabi_atexit
 12184              	.LVL780:
 12185              	.LBB2268:
 12186              	.LBI2268:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12187              		.loc 7 38 5 is_stmt 1 view .LVU3450
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12188              		.loc 7 38 5 is_stmt 0 view .LVU3451
 12189              	.LBE2268:
 145:Veno-Echo.cpp **** 
 12190              		.loc 20 145 13 view .LVU3452
 12191 014a 2246     		mov	r2, r4
 12192 014c 3946     		mov	r1, r7
 12193 014e 6D48     		ldr	r0, .L639+156
 150:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12194              		.loc 20 150 18 view .LVU3453
 12195 0150 6D4D     		ldr	r5, .L639+160
 145:Veno-Echo.cpp **** 
 12196              		.loc 20 145 13 view .LVU3454
 12197 0152 FFF7FEFF 		bl	__aeabi_atexit
 12198              	.LVL781:
 12199              	.LBB2269:
 12200              	.LBI2269:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12201              		.loc 7 38 5 is_stmt 1 view .LVU3455
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12202              		.loc 7 38 5 is_stmt 0 view .LVU3456
 12203              	.LBE2269:
 147:Veno-Echo.cpp **** static Adsr HPF_Env;
 12204              		.loc 20 147 13 view .LVU3457
 12205 0156 2246     		mov	r2, r4
 12206 0158 3946     		mov	r1, r7
 12207 015a 6C48     		ldr	r0, .L639+164
 12208 015c FFF7FEFF 		bl	__aeabi_atexit
 12209              	.LVL782:
 12210              	.LBB2270:
 12211              	.LBI2270:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12212              		.loc 7 38 5 is_stmt 1 view .LVU3458
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12213              		.loc 7 38 5 is_stmt 0 view .LVU3459
 12214              	.LBE2270:
 148:Veno-Echo.cpp **** 
 12215              		.loc 20 148 13 view .LVU3460
 12216 0160 2246     		mov	r2, r4
 12217 0162 3946     		mov	r1, r7
 12218 0164 6A48     		ldr	r0, .L639+168
 12219 0166 FFF7FEFF 		bl	__aeabi_atexit
 12220              	.LVL783:
 12221              	.LBB2271:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 369


 12222              	.LBI2271:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12223              		.loc 10 36 5 is_stmt 1 view .LVU3461
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12224              		.loc 10 36 5 is_stmt 0 view .LVU3462
 12225              	.LBE2271:
 150:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12226              		.loc 20 150 18 view .LVU3463
 12227 016a 2246     		mov	r2, r4
 12228 016c 2946     		mov	r1, r5
 12229 016e 6948     		ldr	r0, .L639+172
 12230 0170 FFF7FEFF 		bl	__aeabi_atexit
 12231              	.LVL784:
 12232              	.LBB2272:
 12233              	.LBI2272:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12234              		.loc 10 36 5 is_stmt 1 view .LVU3464
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12235              		.loc 10 36 5 is_stmt 0 view .LVU3465
 12236              	.LBE2272:
 151:Veno-Echo.cpp **** 
 12237              		.loc 20 151 18 view .LVU3466
 12238 0174 2246     		mov	r2, r4
 12239 0176 2946     		mov	r1, r5
 12240 0178 6748     		ldr	r0, .L639+176
 12241 017a FFF7FEFF 		bl	__aeabi_atexit
 12242              	.LVL785:
 12243              	.LBB2273:
 12244              	.LBI2273:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12245              		.loc 10 36 5 is_stmt 1 view .LVU3467
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12246              		.loc 10 36 5 is_stmt 0 view .LVU3468
 12247              	.LBE2273:
 153:Veno-Echo.cpp **** 
 12248              		.loc 20 153 18 view .LVU3469
 12249 017e 2246     		mov	r2, r4
 12250 0180 2946     		mov	r1, r5
 12251 0182 6648     		ldr	r0, .L639+180
 12252 0184 FFF7FEFF 		bl	__aeabi_atexit
 12253              	.LVL786:
 12254              	.LBB2274:
 12255              	.LBI2274:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12256              		.loc 10 36 5 is_stmt 1 view .LVU3470
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12257              		.loc 10 36 5 is_stmt 0 view .LVU3471
 12258              	.LBE2274:
 156:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 12259              		.loc 20 156 18 view .LVU3472
 12260 0188 2246     		mov	r2, r4
 12261 018a 2946     		mov	r1, r5
 12262 018c 6448     		ldr	r0, .L639+184
 12263 018e FFF7FEFF 		bl	__aeabi_atexit
 12264              	.LVL787:
 12265              	.LBB2275:
 12266              	.LBI2275:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 370


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12267              		.loc 10 36 5 is_stmt 1 view .LVU3473
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12268              		.loc 10 36 5 is_stmt 0 view .LVU3474
 12269              	.LBE2275:
 157:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 12270              		.loc 20 157 18 view .LVU3475
 12271 0192 2246     		mov	r2, r4
 12272 0194 2946     		mov	r1, r5
 12273 0196 6348     		ldr	r0, .L639+188
 12274 0198 FFF7FEFF 		bl	__aeabi_atexit
 12275              	.LVL788:
 12276              	.LBB2276:
 12277              	.LBI2276:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12278              		.loc 10 36 5 is_stmt 1 view .LVU3476
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12279              		.loc 10 36 5 is_stmt 0 view .LVU3477
 12280              	.LBE2276:
 158:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 12281              		.loc 20 158 18 view .LVU3478
 12282 019c 2246     		mov	r2, r4
 12283 019e 2946     		mov	r1, r5
 12284 01a0 6148     		ldr	r0, .L639+192
 12285 01a2 FFF7FEFF 		bl	__aeabi_atexit
 12286              	.LVL789:
 12287              	.LBB2277:
 12288              	.LBI2277:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12289              		.loc 10 36 5 is_stmt 1 view .LVU3479
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12290              		.loc 10 36 5 is_stmt 0 view .LVU3480
 12291              	.LBE2277:
 159:Veno-Echo.cpp **** 
 12292              		.loc 20 159 18 view .LVU3481
 12293 01a6 2246     		mov	r2, r4
 12294 01a8 2946     		mov	r1, r5
 12295 01aa 6048     		ldr	r0, .L639+196
 12296 01ac FFF7FEFF 		bl	__aeabi_atexit
 12297              	.LVL790:
 12298              	.LBB2278:
 12299              	.LBI2278:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12300              		.loc 10 36 5 is_stmt 1 view .LVU3482
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12301              		.loc 10 36 5 is_stmt 0 view .LVU3483
 12302              	.LBE2278:
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 12303              		.loc 20 162 18 view .LVU3484
 12304 01b0 2246     		mov	r2, r4
 12305 01b2 2946     		mov	r1, r5
 12306 01b4 5E48     		ldr	r0, .L639+200
 12307 01b6 FFF7FEFF 		bl	__aeabi_atexit
 12308              	.LVL791:
 12309              	.LBB2279:
 12310              	.LBI2279:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 371


 12311              		.loc 10 36 5 is_stmt 1 view .LVU3485
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12312              		.loc 10 36 5 is_stmt 0 view .LVU3486
 12313              	.LBE2279:
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 12314              		.loc 20 163 18 view .LVU3487
 12315 01ba 2246     		mov	r2, r4
 12316 01bc 2946     		mov	r1, r5
 12317 01be 5D48     		ldr	r0, .L639+204
 12318 01c0 FFF7FEFF 		bl	__aeabi_atexit
 12319              	.LVL792:
 12320              	.LBB2280:
 12321              	.LBI2280:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12322              		.loc 10 36 5 is_stmt 1 view .LVU3488
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12323              		.loc 10 36 5 is_stmt 0 view .LVU3489
 12324              	.LBE2280:
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 12325              		.loc 20 164 18 view .LVU3490
 12326 01c4 2246     		mov	r2, r4
 12327 01c6 2946     		mov	r1, r5
 12328 01c8 5B48     		ldr	r0, .L639+208
 12329 01ca FFF7FEFF 		bl	__aeabi_atexit
 12330              	.LVL793:
 12331              	.LBB2281:
 12332              	.LBI2281:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12333              		.loc 10 36 5 is_stmt 1 view .LVU3491
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12334              		.loc 10 36 5 is_stmt 0 view .LVU3492
 12335              	.LBE2281:
 165:Veno-Echo.cpp **** 
 12336              		.loc 20 165 18 view .LVU3493
 12337 01ce 2246     		mov	r2, r4
 12338 01d0 2946     		mov	r1, r5
 12339 01d2 5A48     		ldr	r0, .L639+212
 12340 01d4 FFF7FEFF 		bl	__aeabi_atexit
 12341              	.LVL794:
 12342              	.LBB2282:
 12343              	.LBI2282:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12344              		.loc 10 36 5 is_stmt 1 view .LVU3494
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12345              		.loc 10 36 5 is_stmt 0 view .LVU3495
 12346              	.LBE2282:
 168:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 12347              		.loc 20 168 18 view .LVU3496
 12348 01d8 2246     		mov	r2, r4
 12349 01da 2946     		mov	r1, r5
 12350 01dc 5848     		ldr	r0, .L639+216
 12351 01de FFF7FEFF 		bl	__aeabi_atexit
 12352              	.LVL795:
 12353              	.LBB2283:
 12354              	.LBI2283:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12355              		.loc 10 36 5 is_stmt 1 view .LVU3497
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 372


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12356              		.loc 10 36 5 is_stmt 0 view .LVU3498
 12357              	.LBE2283:
 169:Veno-Echo.cpp **** 
 12358              		.loc 20 169 18 view .LVU3499
 12359 01e2 2246     		mov	r2, r4
 12360 01e4 2946     		mov	r1, r5
 12361 01e6 5748     		ldr	r0, .L639+220
 12362 01e8 FFF7FEFF 		bl	__aeabi_atexit
 12363              	.LVL796:
 12364              	.LBB2284:
 12365              	.LBI2284:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12366              		.loc 10 36 5 is_stmt 1 view .LVU3500
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12367              		.loc 10 36 5 is_stmt 0 view .LVU3501
 12368              	.LBE2284:
 175:Veno-Echo.cpp **** Switch ReverseGateR;
 12369              		.loc 20 175 8 view .LVU3502
 12370 01ec 564F     		ldr	r7, .L639+224
 171:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 12371              		.loc 20 171 18 view .LVU3503
 12372 01ee 2246     		mov	r2, r4
 12373 01f0 2946     		mov	r1, r5
 12374 01f2 5648     		ldr	r0, .L639+228
 12375 01f4 FFF7FEFF 		bl	__aeabi_atexit
 12376              	.LVL797:
 12377              	.LBB2285:
 12378              	.LBI2285:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12379              		.loc 10 36 5 is_stmt 1 view .LVU3504
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12380              		.loc 10 36 5 is_stmt 0 view .LVU3505
 12381              	.LBE2285:
 172:Veno-Echo.cpp **** 
 12382              		.loc 20 172 18 view .LVU3506
 12383 01f8 2246     		mov	r2, r4
 12384 01fa 2946     		mov	r1, r5
 12385 01fc 5448     		ldr	r0, .L639+232
 12386 01fe FFF7FEFF 		bl	__aeabi_atexit
 12387              	.LVL798:
 12388              	.LBB2286:
 12389              	.LBI2286:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12390              		.loc 1 40 5 is_stmt 1 view .LVU3507
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12391              		.loc 1 40 5 is_stmt 0 view .LVU3508
 12392              	.LBE2286:
 175:Veno-Echo.cpp **** Switch ReverseGateR;
 12393              		.loc 20 175 8 view .LVU3509
 12394 0202 2246     		mov	r2, r4
 12395 0204 3946     		mov	r1, r7
 12396 0206 5348     		ldr	r0, .L639+236
 12397 0208 FFF7FEFF 		bl	__aeabi_atexit
 12398              	.LVL799:
 12399              	.LBB2287:
 12400              	.LBI2287:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 373


  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12401              		.loc 1 40 5 is_stmt 1 view .LVU3510
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12402              		.loc 1 40 5 is_stmt 0 view .LVU3511
 12403              	.LBE2287:
 176:Veno-Echo.cpp **** 
 12404              		.loc 20 176 8 view .LVU3512
 12405 020c 2246     		mov	r2, r4
 12406 020e 3946     		mov	r1, r7
 12407 0210 5148     		ldr	r0, .L639+240
 12408 0212 FFF7FEFF 		bl	__aeabi_atexit
 12409              	.LVL800:
 12410              	.LBB2288:
 12411              	.LBI2288:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12412              		.loc 1 40 5 is_stmt 1 view .LVU3513
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12413              		.loc 1 40 5 is_stmt 0 view .LVU3514
 12414              	.LBE2288:
 179:Veno-Echo.cpp **** Switch ClockIn;
 12415              		.loc 20 179 8 view .LVU3515
 12416 0216 2246     		mov	r2, r4
 12417 0218 3946     		mov	r1, r7
 12418 021a 5048     		ldr	r0, .L639+244
 12419 021c FFF7FEFF 		bl	__aeabi_atexit
 12420              	.LVL801:
 12421              	.LBB2289:
 12422              	.LBI2289:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12423              		.loc 1 40 5 is_stmt 1 view .LVU3516
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12424              		.loc 1 40 5 is_stmt 0 view .LVU3517
 12425              	.LBE2289:
 180:Veno-Echo.cpp **** 
 12426              		.loc 20 180 8 view .LVU3518
 12427 0220 2246     		mov	r2, r4
 12428 0222 3946     		mov	r1, r7
 12429 0224 4E48     		ldr	r0, .L639+248
 12430 0226 FFF7FEFF 		bl	__aeabi_atexit
 12431              	.LVL802:
 12432              	.LBB2290:
 12433              	.LBI2219:
  43:taptempo.h    ****     {
 12434              		.loc 13 43 5 is_stmt 1 view .LVU3519
 12435              	.LBB2225:
 12436              	.LBB2222:
  45:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12437              		.loc 13 45 9 view .LVU3520
  47:taptempo.h    ****         mintap_ = 80;
 12438              		.loc 13 47 17 is_stmt 0 view .LVU3521
 12439 022a 4FF4FA67 		mov	r7, #2000
  45:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12440              		.loc 13 45 18 view .LVU3522
 12441 022e 4D48     		ldr	r0, .L639+252
  48:taptempo.h    ****         lastTapLength_ = 0;
 12442              		.loc 13 48 17 view .LVU3523
 12443 0230 5025     		movs	r5, #80
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 374


  46:taptempo.h    ****         maxtap_ = 2000;
 12444              		.loc 13 46 24 view .LVU3524
 12445 0232 4D49     		ldr	r1, .L639+256
  56:taptempo.h    ****     }
 12446              		.loc 13 56 22 view .LVU3525
 12447 0234 0A23     		movs	r3, #10
  53:taptempo.h    ****         clockLength_ = 0;
 12448              		.loc 13 53 19 view .LVU3526
 12449 0236 DFF84091 		ldr	r9, .L639+272
 12450              	.LBE2222:
 12451              	.LBE2225:
 12452              	.LBE2290:
 183:Veno-Echo.cpp **** 
 12453              		.loc 20 183 10 view .LVU3527
 12454 023a 2246     		mov	r2, r4
 12455              	.LBB2291:
 12456              	.LBB2226:
 12457              	.LBB2223:
  50:taptempo.h    ****         lastTime_ = 0;
 12458              		.loc 13 50 16 view .LVU3528
 12459 023c 0024     		movs	r4, #0
  45:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12460              		.loc 13 45 18 view .LVU3529
 12461 023e 80F82460 		strb	r6, [r0, #36]
  46:taptempo.h    ****         maxtap_ = 2000;
 12462              		.loc 13 46 9 is_stmt 1 view .LVU3530
  52:taptempo.h    ****         tapRatio_ = 1.0f;
 12463              		.loc 13 52 22 is_stmt 0 view .LVU3531
 12464 0242 8660     		str	r6, [r0, #8]
  46:taptempo.h    ****         maxtap_ = 2000;
 12465              		.loc 13 46 24 view .LVU3532
 12466 0244 8162     		str	r1, [r0, #40]	@ float
  47:taptempo.h    ****         mintap_ = 80;
 12467              		.loc 13 47 9 is_stmt 1 view .LVU3533
  56:taptempo.h    ****     }
 12468              		.loc 13 56 22 is_stmt 0 view .LVU3534
 12469 0246 0362     		str	r3, [r0, #32]
 12470              	.LBE2223:
 12471              	.LBE2226:
 12472              	.LBE2291:
 183:Veno-Echo.cpp **** 
 12473              		.loc 20 183 10 view .LVU3535
 12474 0248 4849     		ldr	r1, .L639+260
 12475              	.LBB2292:
 12476              	.LBB2227:
 12477              	.LBB2224:
  48:taptempo.h    ****         lastTapLength_ = 0;
 12478              		.loc 13 48 17 view .LVU3536
 12479 024a C0E90057 		strd	r5, r7, [r0]
  49:taptempo.h    ****         tempo_ = 500.0f;
 12480              		.loc 13 49 9 is_stmt 1 view .LVU3537
  50:taptempo.h    ****         lastTime_ = 0;
 12481              		.loc 13 50 9 view .LVU3538
  50:taptempo.h    ****         lastTime_ = 0;
 12482              		.loc 13 50 16 is_stmt 0 view .LVU3539
 12483 024e 484D     		ldr	r5, .L639+264
  51:taptempo.h    ****         currentTime_ = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 375


 12484              		.loc 13 51 19 view .LVU3540
 12485 0250 C0E90366 		strd	r6, r6, [r0, #12]
  55:taptempo.h    ****         clockThresh_ = 10; //ms change
 12486              		.loc 13 55 26 view .LVU3541
 12487 0254 C0E90666 		strd	r6, r6, [r0, #24]
  53:taptempo.h    ****         clockLength_ = 0;
 12488              		.loc 13 53 19 view .LVU3542
 12489 0258 C0E90E89 		strd	r8, [r0, #56]
  50:taptempo.h    ****         lastTime_ = 0;
 12490              		.loc 13 50 16 view .LVU3543
 12491 025c C0E90C45 		strd	r4, [r0, #48]
  51:taptempo.h    ****         currentTime_ = 0;
 12492              		.loc 13 51 9 is_stmt 1 view .LVU3544
  52:taptempo.h    ****         tapRatio_ = 1.0f;
 12493              		.loc 13 52 9 view .LVU3545
  53:taptempo.h    ****         clockLength_ = 0;
 12494              		.loc 13 53 9 view .LVU3546
  54:taptempo.h    ****         lastClockLength_ = 0;
 12495              		.loc 13 54 9 view .LVU3547
  55:taptempo.h    ****         clockThresh_ = 10; //ms change
 12496              		.loc 13 55 9 view .LVU3548
  56:taptempo.h    ****     }
 12497              		.loc 13 56 9 view .LVU3549
 12498              	.LVL803:
  56:taptempo.h    ****     }
 12499              		.loc 13 56 9 is_stmt 0 view .LVU3550
 12500              	.LBE2224:
 12501              	.LBE2227:
 12502              	.LBE2292:
 12503              	.LBE2295:
 12504              	.LBE2299:
 12505              		.loc 20 2005 1 view .LVU3551
 12506 0260 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 12507              		.cfi_restore 14
 12508              		.cfi_restore 9
 12509              		.cfi_restore 8
 12510              		.cfi_restore 7
 12511              		.cfi_restore 6
 12512              		.cfi_restore 5
 12513              		.cfi_restore 4
 12514              		.cfi_restore 3
 12515              		.cfi_def_cfa_offset 0
 12516              	.LBB2300:
 12517              	.LBB2296:
 183:Veno-Echo.cpp **** 
 12518              		.loc 20 183 10 view .LVU3552
 12519 0264 FFF7FEBF 		b	__aeabi_atexit
 12520              	.LVL804:
 12521              	.L640:
 12522              		.align	2
 12523              	.L639:
 12524 0268 00000000 		.word	.LANCHOR4
 12525 026c 00000000 		.word	__dso_handle
 12526 0270 00000000 		.word	_ZN7daisysp3SvfD1Ev
 12527 0274 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12528 0278 00000000 		.word	.LANCHOR46
 12529 027c 00000000 		.word	.LANCHOR47
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 376


 12530 0280 00000000 		.word	.LANCHOR34
 12531 0284 00000000 		.word	.LANCHOR35
 12532 0288 00000000 		.word	.LANCHOR48
 12533 028c 00000000 		.word	.LANCHOR49
 12534 0290 00000000 		.word	.LANCHOR36
 12535 0294 00000000 		.word	.LANCHOR37
 12536 0298 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 12537 029c 00000000 		.word	.LANCHOR75
 12538 02a0 17B7D138 		.word	953267991
 12539 02a4 00000000 		.word	.LANCHOR127
 12540 02a8 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 12541 02ac 00000000 		.word	.LANCHOR128
 12542 02b0 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 12543 02b4 00000000 		.word	.LANCHOR104
 12544 02b8 00000000 		.word	.LANCHOR105
 12545 02bc 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 12546 02c0 00000000 		.word	delMemsL
 12547 02c4 00000000 		.word	delMemsR
 12548 02c8 00000000 		.word	_ZN10DelayMultiD1Ev
 12549 02cc 00000000 		.word	delMemsL_REV
 12550 02d0 00000000 		.word	delMemsR_REV
 12551 02d4 00000000 		.word	_ZN9ButtonLEDD1Ev
 12552 02d8 00000000 		.word	.LANCHOR0
 12553 02dc 00000000 		.word	.LANCHOR1
 12554 02e0 00000000 		.word	.LANCHOR90
 12555 02e4 00000000 		.word	.LANCHOR91
 12556 02e8 00000000 		.word	.LANCHOR92
 12557 02ec 00000000 		.word	.LANCHOR93
 12558 02f0 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 12559 02f4 00000000 		.word	.LANCHOR94
 12560 02f8 00000000 		.word	_ZN8TempoLEDD1Ev
 12561 02fc 00000000 		.word	.LANCHOR88
 12562 0300 00000000 		.word	.LANCHOR98
 12563 0304 00000000 		.word	.LANCHOR99
 12564 0308 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 12565 030c 00000000 		.word	.LANCHOR100
 12566 0310 00000000 		.word	.LANCHOR101
 12567 0314 00000000 		.word	.LANCHOR102
 12568 0318 00000000 		.word	.LANCHOR103
 12569 031c 00000000 		.word	.LANCHOR64
 12570 0320 00000000 		.word	.LANCHOR115
 12571 0324 00000000 		.word	.LANCHOR116
 12572 0328 00000000 		.word	.LANCHOR113
 12573 032c 00000000 		.word	.LANCHOR114
 12574 0330 00000000 		.word	.LANCHOR119
 12575 0334 00000000 		.word	.LANCHOR120
 12576 0338 00000000 		.word	.LANCHOR117
 12577 033c 00000000 		.word	.LANCHOR118
 12578 0340 00000000 		.word	.LANCHOR121
 12579 0344 00000000 		.word	.LANCHOR122
 12580 0348 00000000 		.word	_ZN5daisy6SwitchD1Ev
 12581 034c 00000000 		.word	.LANCHOR123
 12582 0350 00000000 		.word	.LANCHOR124
 12583 0354 00000000 		.word	.LANCHOR95
 12584 0358 00000000 		.word	.LANCHOR96
 12585 035c 00000000 		.word	.LANCHOR97
 12586 0360 00000000 		.word	.LANCHOR87
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 377


 12587 0364 00000000 		.word	.LANCHOR25
 12588 0368 0000A03F 		.word	1067450368
 12589 036c 00000000 		.word	_ZN8TaptempoD1Ev
 12590 0370 00407F40 		.word	1082081280
 12591 0374 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 12592 0378 0000F03F 		.word	1072693248
 12593              	.LBE2296:
 12594              	.LBE2300:
 12595              		.cfi_endproc
 12596              	.LFE4919:
 12598              		.section	.init_array,"aw",%init_array
 12599              		.align	2
 12600 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 12601              		.global	AltControls
 12602              		.global	BaseTempo
 12603              		.global	ClockIn
 12604              		.global	Sync
 12605              		.global	ReverseGateR
 12606              		.global	ReverseGateL
 12607              		.global	save_flag
 12608              		.global	PostFilters
 12609              		.global	ClockInFlag
 12610              		.global	mute
 12611              		.global	shift
 12612              		.global	syncMode
 12613              		.global	modulation_CV_Raw
 12614              		.global	ModDepth
 12615              		.global	div_R
 12616              		.global	div_L
 12617              		.global	filterXfade
 12618              		.global	width_CV
 12619              		.global	width
 12620              		.global	drywet_CV
 12621              		.global	drywet
 12622              		.global	crossfeedback_CV
 12623              		.global	crossfeedback
 12624              		.global	feedbackR_CV
 12625              		.global	feedbackR
 12626              		.global	feedbackL_CV
 12627              		.global	feedbackL
 12628              		.global	delayTimeR_CV
 12629              		.global	delayTimeL_CV
 12630              		.global	tempoLED_BASE
 12631              		.global	Tap_Button
 12632              		.global	Rev_R_sw
 12633              		.global	Rev_L_sw
 12634              		.global	HPF_sw
 12635              		.global	LPF_sw
 12636              		.global	delaysR_REV
 12637              		.global	delaysL_REV
 12638              		.global	delayR
 12639              		.global	delayL
 12640              		.global	delMemsR_REV
 12641              		.global	delMemsL_REV
 12642              		.global	delMemsR
 12643              		.global	delMemsL
 12644              		.section	.bss.AltControls,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 378


 12645              		.align	2
 12646              		.set	.LANCHOR15,. + 0
 12649              	AltControls:
 12650 0000 00000000 		.space	32
 12650      00000000 
 12650      00000000 
 12650      00000000 
 12650      00000000 
 12651              		.section	.bss.BaseTempo,"aw",%nobits
 12652              		.align	3
 12653              		.set	.LANCHOR25,. + 0
 12656              	BaseTempo:
 12657 0000 00000000 		.space	64
 12657      00000000 
 12657      00000000 
 12657      00000000 
 12657      00000000 
 12658              		.section	.bss.ClockIn,"aw",%nobits
 12659              		.align	2
 12660              		.set	.LANCHOR87,. + 0
 12663              	ClockIn:
 12664 0000 00000000 		.space	16
 12664      00000000 
 12664      00000000 
 12664      00000000 
 12665              		.section	.bss.ClockInFlag,"aw",%nobits
 12668              	ClockInFlag:
 12669 0000 00       		.space	1
 12670              		.section	.bss.HPF_sw,"aw",%nobits
 12671              		.align	2
 12672              		.set	.LANCHOR91,. + 0
 12675              	HPF_sw:
 12676 0000 00000000 		.space	52
 12676      00000000 
 12676      00000000 
 12676      00000000 
 12676      00000000 
 12677              		.section	.bss.LPF_sw,"aw",%nobits
 12678              		.align	2
 12679              		.set	.LANCHOR90,. + 0
 12682              	LPF_sw:
 12683 0000 00000000 		.space	52
 12683      00000000 
 12683      00000000 
 12683      00000000 
 12683      00000000 
 12684              		.section	.bss.ModDepth,"aw",%nobits
 12685              		.align	2
 12686              		.set	.LANCHOR67,. + 0
 12689              	ModDepth:
 12690 0000 00000000 		.space	4
 12691              		.section	.bss.PostFilters,"aw",%nobits
 12692              		.set	.LANCHOR82,. + 0
 12695              	PostFilters:
 12696 0000 00       		.space	1
 12697              		.section	.bss.Rev_L_sw,"aw",%nobits
 12698              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 379


 12699              		.set	.LANCHOR92,. + 0
 12702              	Rev_L_sw:
 12703 0000 00000000 		.space	52
 12703      00000000 
 12703      00000000 
 12703      00000000 
 12703      00000000 
 12704              		.section	.bss.Rev_R_sw,"aw",%nobits
 12705              		.align	2
 12706              		.set	.LANCHOR93,. + 0
 12709              	Rev_R_sw:
 12710 0000 00000000 		.space	52
 12710      00000000 
 12710      00000000 
 12710      00000000 
 12710      00000000 
 12711              		.section	.bss.ReverseGateL,"aw",%nobits
 12712              		.align	2
 12713              		.set	.LANCHOR95,. + 0
 12716              	ReverseGateL:
 12717 0000 00000000 		.space	16
 12717      00000000 
 12717      00000000 
 12717      00000000 
 12718              		.section	.bss.ReverseGateR,"aw",%nobits
 12719              		.align	2
 12720              		.set	.LANCHOR96,. + 0
 12723              	ReverseGateR:
 12724 0000 00000000 		.space	16
 12724      00000000 
 12724      00000000 
 12724      00000000 
 12725              		.section	.bss.Sync,"aw",%nobits
 12726              		.align	2
 12727              		.set	.LANCHOR97,. + 0
 12730              	Sync:
 12731 0000 00000000 		.space	16
 12731      00000000 
 12731      00000000 
 12731      00000000 
 12732              		.section	.bss.Tap_Button,"aw",%nobits
 12733              		.align	2
 12734              		.set	.LANCHOR94,. + 0
 12737              	Tap_Button:
 12738 0000 00000000 		.space	52
 12738      00000000 
 12738      00000000 
 12738      00000000 
 12738      00000000 
 12739              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 12740              		.align	2
 12741              		.set	.LANCHOR98,. + 0
 12744              	_ZL10FwdRevLEnv:
 12745 0000 00000000 		.space	56
 12745      00000000 
 12745      00000000 
 12745      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 380


 12745      00000000 
 12746              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 12747              		.align	2
 12748              		.set	.LANCHOR99,. + 0
 12751              	_ZL10FwdRevREnv:
 12752 0000 00000000 		.space	56
 12752      00000000 
 12752      00000000 
 12752      00000000 
 12752      00000000 
 12753              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 12754              		.align	2
 12755              		.set	.LANCHOR113,. + 0
 12758              	_ZL10HPF_LXfade:
 12759 0000 00000000 		.space	8
 12759      00000000 
 12760              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 12761              		.align	2
 12762              		.set	.LANCHOR36,. + 0
 12765              	_ZL10HPF_L_post:
 12766 0000 00000000 		.space	76
 12766      00000000 
 12766      00000000 
 12766      00000000 
 12766      00000000 
 12767              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 12768              		.align	2
 12769              		.set	.LANCHOR114,. + 0
 12772              	_ZL10HPF_RXfade:
 12773 0000 00000000 		.space	8
 12773      00000000 
 12774              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 12775              		.align	2
 12776              		.set	.LANCHOR37,. + 0
 12779              	_ZL10HPF_R_post:
 12780 0000 00000000 		.space	76
 12780      00000000 
 12780      00000000 
 12780      00000000 
 12780      00000000 
 12781              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 12782              		.align	2
 12783              		.set	.LANCHOR115,. + 0
 12786              	_ZL10LPF_LXfade:
 12787 0000 00000000 		.space	8
 12787      00000000 
 12788              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 12789              		.align	2
 12790              		.set	.LANCHOR48,. + 0
 12793              	_ZL10LPF_L_post:
 12794 0000 00000000 		.space	76
 12794      00000000 
 12794      00000000 
 12794      00000000 
 12794      00000000 
 12795              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 12796              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 381


 12797              		.set	.LANCHOR116,. + 0
 12800              	_ZL10LPF_RXfade:
 12801 0000 00000000 		.space	8
 12801      00000000 
 12802              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 12803              		.align	2
 12804              		.set	.LANCHOR49,. + 0
 12807              	_ZL10LPF_R_post:
 12808 0000 00000000 		.space	76
 12808      00000000 
 12808      00000000 
 12808      00000000 
 12808      00000000 
 12809              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 12810              		.align	2
 12811              		.set	.LANCHOR64,. + 0
 12814              	_ZL10WidthXfade:
 12815 0000 00000000 		.space	8
 12815      00000000 
 12816              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 12817              		.align	2
 12818              		.set	.LANCHOR104,. + 0
 12821              	_ZL11DcBlock_LFB:
 12822 0000 00000000 		.space	12
 12822      00000000 
 12822      00000000 
 12823              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 12824              		.align	2
 12825              		.set	.LANCHOR105,. + 0
 12828              	_ZL11DcBlock_RFB:
 12829 0000 00000000 		.space	12
 12829      00000000 
 12829      00000000 
 12830              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 12831              		.align	2
 12832              		.set	.LANCHOR121,. + 0
 12835              	_ZL11FilterMix_L:
 12836 0000 00000000 		.space	8
 12836      00000000 
 12837              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 12838              		.align	2
 12839              		.set	.LANCHOR122,. + 0
 12842              	_ZL11FilterMix_R:
 12843 0000 00000000 		.space	8
 12843      00000000 
 12844              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 12845              		.align	2
 12846              		.set	.LANCHOR102,. + 0
 12849              	_ZL12FwdRevLXfade:
 12850 0000 00000000 		.space	8
 12850      00000000 
 12851              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 12852              		.align	2
 12853              		.set	.LANCHOR103,. + 0
 12856              	_ZL12FwdRevRXfade:
 12857 0000 00000000 		.space	8
 12857      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 382


 12858              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 12859              		.align	2
 12860              		.set	.LANCHOR117,. + 0
 12863              	_ZL15HPF_LXfade_post:
 12864 0000 00000000 		.space	8
 12864      00000000 
 12865              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 12866              		.align	2
 12867              		.set	.LANCHOR118,. + 0
 12870              	_ZL15HPF_RXfade_post:
 12871 0000 00000000 		.space	8
 12871      00000000 
 12872              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 12873              		.align	2
 12874              		.set	.LANCHOR119,. + 0
 12877              	_ZL15LPF_LXfade_post:
 12878 0000 00000000 		.space	8
 12878      00000000 
 12879              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 12880              		.align	2
 12881              		.set	.LANCHOR120,. + 0
 12884              	_ZL15LPF_RXfade_post:
 12885 0000 00000000 		.space	8
 12885      00000000 
 12886              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 12887              		.align	2
 12888              		.set	.LANCHOR123,. + 0
 12891              	_ZL16FilterMix_L_post:
 12892 0000 00000000 		.space	8
 12892      00000000 
 12893              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 12894              		.align	2
 12895              		.set	.LANCHOR124,. + 0
 12898              	_ZL16FilterMix_R_post:
 12899 0000 00000000 		.space	8
 12899      00000000 
 12900              		.section	.bss._ZL2hw,"aw",%nobits
 12901              		.align	2
 12902              		.set	.LANCHOR4,. + 0
 12905              	_ZL2hw:
 12906 0000 00000000 		.space	60
 12906      00000000 
 12906      00000000 
 12906      00000000 
 12906      00000000 
 12907              		.section	.bss._ZL3lfo,"aw",%nobits
 12908              		.align	2
 12909              		.set	.LANCHOR75,. + 0
 12912              	_ZL3lfo:
 12913 0000 00000000 		.space	40
 12913      00000000 
 12913      00000000 
 12913      00000000 
 12913      00000000 
 12914              		.section	.bss._ZL5HPF_L,"aw",%nobits
 12915              		.align	2
 12916              		.set	.LANCHOR34,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 383


 12919              	_ZL5HPF_L:
 12920 0000 00000000 		.space	76
 12920      00000000 
 12920      00000000 
 12920      00000000 
 12920      00000000 
 12921              		.section	.bss._ZL5HPF_R,"aw",%nobits
 12922              		.align	2
 12923              		.set	.LANCHOR35,. + 0
 12926              	_ZL5HPF_R:
 12927 0000 00000000 		.space	76
 12927      00000000 
 12927      00000000 
 12927      00000000 
 12927      00000000 
 12928              		.section	.bss._ZL5LPF_L,"aw",%nobits
 12929              		.align	2
 12930              		.set	.LANCHOR46,. + 0
 12933              	_ZL5LPF_L:
 12934 0000 00000000 		.space	76
 12934      00000000 
 12934      00000000 
 12934      00000000 
 12934      00000000 
 12935              		.section	.bss._ZL5LPF_R,"aw",%nobits
 12936              		.align	2
 12937              		.set	.LANCHOR47,. + 0
 12940              	_ZL5LPF_R:
 12941 0000 00000000 		.space	76
 12941      00000000 
 12941      00000000 
 12941      00000000 
 12941      00000000 
 12942              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 12943              		.align	2
 12944              		.set	.LANCHOR101,. + 0
 12947              	_ZL7HPF_Env:
 12948 0000 00000000 		.space	56
 12948      00000000 
 12948      00000000 
 12948      00000000 
 12948      00000000 
 12949              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 12950              		.align	2
 12951              		.set	.LANCHOR100,. + 0
 12954              	_ZL7LPF_Env:
 12955 0000 00000000 		.space	56
 12955      00000000 
 12955      00000000 
 12955      00000000 
 12955      00000000 
 12956              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 12957              		.align	2
 12958              		.set	.LANCHOR127,. + 0
 12961              	_ZL7LeftEnv:
 12962 0000 00000000 		.space	24
 12962      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 384


 12962      00000000 
 12962      00000000 
 12962      00000000 
 12963              		.section	.bss._ZL8RightEnv,"aw",%nobits
 12964              		.align	2
 12965              		.set	.LANCHOR128,. + 0
 12968              	_ZL8RightEnv:
 12969 0000 00000000 		.space	24
 12969      00000000 
 12969      00000000 
 12969      00000000 
 12969      00000000 
 12970              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 12971              		.align	2
 12972              		.set	.LANCHOR85,. + 0
 12975              	_ZZ10Update_ModvE13modulation_CV:
 12976 0000 00000000 		.space	4
 12977              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 12978              		.align	2
 12979              		.set	.LANCHOR86,. + 0
 12982              	_ZZ10Update_ModvE17ModDepth_Filtered:
 12983 0000 00000000 		.space	4
 12984              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 12985              		.align	2
 12986              		.set	.LANCHOR62,. + 0
 12989              	_ZZ12Update_widthvE10width_Last:
 12990 0000 00000000 		.space	4
 12991              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 12992              		.align	2
 12993              		.set	.LANCHOR66,. + 0
 12996              	_ZZ12Update_widthvE12ModDepth_new:
 12997 0000 00000000 		.space	4
 12998              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 12999              		.set	.LANCHOR60,. + 0
 13002              	_ZZ12Update_widthvE12width_pickup:
 13003 0000 00       		.space	1
 13004              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 13005              		.set	.LANCHOR65,. + 0
 13008              	_ZZ12Update_widthvE15ModDepth_pickup:
 13009 0000 00       		.space	1
 13010              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 13011              		.set	.LANCHOR59,. + 0
 13014              	_ZZ12Update_widthvE9lastShift:
 13015 0000 00       		.space	1
 13016              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 13017              		.align	2
 13018              		.set	.LANCHOR61,. + 0
 13021              	_ZZ12Update_widthvE9width_new:
 13022 0000 00000000 		.space	4
 13023              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 13024              		.set	.LANCHOR56,. + 0
 13027              	_ZZ13Update_drywetvE10Res_pickup:
 13028 0000 00       		.space	1
 13029              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 13030              		.align	2
 13031              		.set	.LANCHOR53,. + 0
 13034              	_ZZ13Update_drywetvE10drywet_new:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 385


 13035 0000 00000000 		.space	4
 13036              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 13037              		.align	2
 13038              		.set	.LANCHOR54,. + 0
 13041              	_ZZ13Update_drywetvE11drywet_Last:
 13042 0000 00000000 		.space	4
 13043              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 13044              		.set	.LANCHOR52,. + 0
 13047              	_ZZ13Update_drywetvE13drywet_pickup:
 13048 0000 00       		.space	1
 13049              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 13050              		.align	2
 13051              		.set	.LANCHOR57,. + 0
 13054              	_ZZ13Update_drywetvE7Res_new:
 13055 0000 00000000 		.space	4
 13056              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 13057              		.set	.LANCHOR51,. + 0
 13060              	_ZZ13Update_drywetvE9lastShift:
 13061 0000 00       		.space	1
 13062              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 13063              		.align	2
 13064              		.set	.LANCHOR107,. + 0
 13067              	_ZZ14Update_ButtonsvE11buttonstate:
 13068 0000 00000000 		.space	4
 13069              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 13070              		.align	2
 13071              		.set	.LANCHOR108,. + 0
 13074              	_ZZ14Update_ButtonsvE9resetTime:
 13075 0000 00000000 		.space	4
 13076              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 13077              		.align	2
 13078              		.set	.LANCHOR109,. + 0
 13081              	_ZZ14Update_ButtonsvE9shiftTime:
 13082 0000 00000000 		.space	4
 13083              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 13084              		.align	2
 13085              		.set	.LANCHOR33,. + 0
 13088              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 13089 0000 00000000 		.space	4
 13090              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 13091              		.align	2
 13092              		.set	.LANCHOR29,. + 0
 13095              	_ZZ16Update_feedbackLvE13feedbackL_new:
 13096 0000 00000000 		.space	4
 13097              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 13098              		.align	2
 13099              		.set	.LANCHOR30,. + 0
 13102              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 13103 0000 00000000 		.space	4
 13104              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 13105              		.set	.LANCHOR32,. + 0
 13108              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 13109 0000 00       		.space	1
 13110              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 13111              		.set	.LANCHOR28,. + 0
 13114              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 13115 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 386


 13116              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 13117              		.set	.LANCHOR27,. + 0
 13120              	_ZZ16Update_feedbackLvE9lastShift:
 13121 0000 00       		.space	1
 13122              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 13123              		.align	2
 13124              		.set	.LANCHOR45,. + 0
 13127              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 13128 0000 00000000 		.space	4
 13129              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 13130              		.align	2
 13131              		.set	.LANCHOR42,. + 0
 13134              	_ZZ16Update_feedbackRvE13feedbackR_new:
 13135 0000 00000000 		.space	4
 13136              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 13137              		.align	2
 13138              		.set	.LANCHOR41,. + 0
 13141              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 13142 0000 00000000 		.space	4
 13143              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 13144              		.set	.LANCHOR44,. + 0
 13147              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 13148 0000 00       		.space	1
 13149              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 13150              		.set	.LANCHOR40,. + 0
 13153              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 13154 0000 00       		.space	1
 13155              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 13156              		.set	.LANCHOR39,. + 0
 13159              	_ZZ16Update_feedbackRvE9lastShift:
 13160 0000 00       		.space	1
 13161              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 13162              		.align	2
 13163              		.set	.LANCHOR10,. + 0
 13166              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 13167 0000 00000000 		.space	4
 13168              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 13169              		.align	2
 13170              		.set	.LANCHOR11,. + 0
 13173              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 13174 0000 00000000 		.space	4
 13175              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 13176              		.align	2
 13177              		.set	.LANCHOR14,. + 0
 13180              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 13181 0000 00000000 		.space	4
 13182              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 13183              		.set	.LANCHOR9,. + 0
 13186              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 13187 0000 00       		.space	1
 13188              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 13189              		.set	.LANCHOR13,. + 0
 13192              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 13193 0000 00       		.space	1
 13194              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 13195              		.align	2
 13196              		.set	.LANCHOR6,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 387


 13199              	_ZZ17Update_DelayTimeLvE8counterL:
 13200 0000 00000000 		.space	4
 13201              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 13202              		.set	.LANCHOR8,. + 0
 13205              	_ZZ17Update_DelayTimeLvE9lastShift:
 13206 0000 00       		.space	1
 13207              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 13208              		.align	2
 13209              		.set	.LANCHOR23,. + 0
 13212              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 13213 0000 00000000 		.space	4
 13214              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 13215              		.align	2
 13216              		.set	.LANCHOR20,. + 0
 13219              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 13220 0000 00000000 		.space	4
 13221              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 13222              		.align	2
 13223              		.set	.LANCHOR21,. + 0
 13226              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 13227 0000 00000000 		.space	4
 13228              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 13229              		.set	.LANCHOR22,. + 0
 13232              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 13233 0000 00       		.space	1
 13234              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 13235              		.set	.LANCHOR19,. + 0
 13238              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 13239 0000 00       		.space	1
 13240              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 13241              		.align	2
 13242              		.set	.LANCHOR17,. + 0
 13245              	_ZZ17Update_DelayTimeRvE8counterR:
 13246 0000 00000000 		.space	4
 13247              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 13248              		.set	.LANCHOR18,. + 0
 13251              	_ZZ17Update_DelayTimeRvE9lastShift:
 13252 0000 00       		.space	1
 13253              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 13254              		.align	2
 13255              		.set	.LANCHOR81,. + 0
 13258              	_ZZ18Update_filterXfadevE15PostFilters_new:
 13259 0000 00000000 		.space	4
 13260              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 13261              		.align	2
 13262              		.set	.LANCHOR78,. + 0
 13265              	_ZZ18Update_filterXfadevE15filterXfade_new:
 13266 0000 00000000 		.space	4
 13267              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 13268              		.align	2
 13269              		.set	.LANCHOR83,. + 0
 13272              	_ZZ18Update_filterXfadevE16filterXfade_last:
 13273 0000 00000000 		.space	4
 13274              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 13275              		.set	.LANCHOR80,. + 0
 13278              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 13279 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 388


 13280              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 13281              		.set	.LANCHOR77,. + 0
 13284              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 13285 0000 00       		.space	1
 13286              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 13287              		.set	.LANCHOR76,. + 0
 13290              	_ZZ18Update_filterXfadevE9lastShift:
 13291 0000 00       		.space	1
 13292              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 13293              		.align	2
 13294              		.set	.LANCHOR89,. + 0
 13297              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 13298 0000 00000000 		.space	4
 13299              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 13300              		.align	2
 13301              		.set	.LANCHOR73,. + 0
 13304              	_ZZ20Update_crossfeedbackvE11modRate_new:
 13305 0000 00000000 		.space	4
 13306              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 13307              		.set	.LANCHOR72,. + 0
 13310              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 13311 0000 00       		.space	1
 13312              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 13313              		.align	2
 13314              		.set	.LANCHOR70,. + 0
 13317              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 13318 0000 00000000 		.space	4
 13319              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 13320              		.align	2
 13321              		.set	.LANCHOR74,. + 0
 13324              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 13325 0000 00000000 		.space	4
 13326              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 13327              		.set	.LANCHOR69,. + 0
 13330              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 13331 0000 00       		.space	1
 13332              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 13333              		.set	.LANCHOR68,. + 0
 13336              	_ZZ20Update_crossfeedbackvE9lastShift:
 13337 0000 00       		.space	1
 13338              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 13339              		.align	2
 13340              		.set	.LANCHOR125,. + 0
 13343              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 13344 0000 00000000 		.space	4
 13345              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 13346              		.align	2
 13347              		.set	.LANCHOR126,. + 0
 13350              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 13351 0000 00000000 		.space	4
 13352              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 13353              		.align	2
 13354              		.set	.LANCHOR111,. + 0
 13357              	_ZZL13AudioCallbackPfS_jE7Counter:
 13358 0000 00000000 		.space	4
 13359              		.section	.bss.crossfeedback,"aw",%nobits
 13360              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 389


 13361              		.set	.LANCHOR71,. + 0
 13364              	crossfeedback:
 13365 0000 00000000 		.space	4
 13366              		.section	.bss.crossfeedback_CV,"aw",%nobits
 13367              		.align	2
 13370              	crossfeedback_CV:
 13371 0000 00000000 		.space	4
 13372              		.section	.bss.delayL,"aw",%nobits
 13373              		.align	3
 13374              		.set	.LANCHOR0,. + 0
 13377              	delayL:
 13378 0000 00000000 		.space	304
 13378      00000000 
 13378      00000000 
 13378      00000000 
 13378      00000000 
 13379              		.section	.bss.delayR,"aw",%nobits
 13380              		.align	3
 13381              		.set	.LANCHOR1,. + 0
 13384              	delayR:
 13385 0000 00000000 		.space	304
 13385      00000000 
 13385      00000000 
 13385      00000000 
 13385      00000000 
 13386              		.section	.bss.delayTimeL_CV,"aw",%nobits
 13387              		.align	2
 13388              		.set	.LANCHOR5,. + 0
 13391              	delayTimeL_CV:
 13392 0000 00000000 		.space	4
 13393              		.section	.bss.delayTimeR_CV,"aw",%nobits
 13394              		.align	2
 13395              		.set	.LANCHOR16,. + 0
 13398              	delayTimeR_CV:
 13399 0000 00000000 		.space	4
 13400              		.section	.bss.delaysL_REV,"aw",%nobits
 13401              		.align	2
 13402              		.set	.LANCHOR2,. + 0
 13405              	delaysL_REV:
 13406 0000 00000000 		.space	8
 13406      00000000 
 13407              		.section	.bss.delaysR_REV,"aw",%nobits
 13408              		.align	2
 13409              		.set	.LANCHOR3,. + 0
 13412              	delaysR_REV:
 13413 0000 00000000 		.space	8
 13413      00000000 
 13414              		.section	.bss.div_L,"aw",%nobits
 13417              	div_L:
 13418 0000 00       		.space	1
 13419              		.section	.bss.div_R,"aw",%nobits
 13422              	div_R:
 13423 0000 00       		.space	1
 13424              		.section	.bss.drywet_CV,"aw",%nobits
 13425              		.align	2
 13426              		.set	.LANCHOR50,. + 0
 13429              	drywet_CV:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 390


 13430 0000 00000000 		.space	4
 13431              		.section	.bss.feedbackL,"aw",%nobits
 13432              		.align	2
 13433              		.set	.LANCHOR31,. + 0
 13436              	feedbackL:
 13437 0000 00000000 		.space	4
 13438              		.section	.bss.feedbackL_CV,"aw",%nobits
 13439              		.align	2
 13440              		.set	.LANCHOR26,. + 0
 13443              	feedbackL_CV:
 13444 0000 00000000 		.space	4
 13445              		.section	.bss.feedbackR,"aw",%nobits
 13446              		.align	2
 13447              		.set	.LANCHOR43,. + 0
 13450              	feedbackR:
 13451 0000 00000000 		.space	4
 13452              		.section	.bss.feedbackR_CV,"aw",%nobits
 13453              		.align	2
 13454              		.set	.LANCHOR38,. + 0
 13457              	feedbackR_CV:
 13458 0000 00000000 		.space	4
 13459              		.section	.bss.filterXfade,"aw",%nobits
 13460              		.align	2
 13461              		.set	.LANCHOR79,. + 0
 13464              	filterXfade:
 13465 0000 00000000 		.space	4
 13466              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13467              		.align	2
 13468              		.set	.LANCHOR84,. + 0
 13471              	modulation_CV_Raw:
 13472 0000 00000000 		.space	4
 13473              		.section	.bss.mute,"aw",%nobits
 13474              		.set	.LANCHOR110,. + 0
 13477              	mute:
 13478 0000 00       		.space	1
 13479              		.section	.bss.save_flag,"aw",%nobits
 13480              		.align	2
 13481              		.set	.LANCHOR112,. + 0
 13484              	save_flag:
 13485 0000 00       		.space	1
 13486              		.section	.bss.shift,"aw",%nobits
 13487              		.set	.LANCHOR7,. + 0
 13490              	shift:
 13491 0000 00       		.space	1
 13492              		.section	.bss.syncMode,"aw",%nobits
 13493              		.set	.LANCHOR12,. + 0
 13496              	syncMode:
 13497 0000 00       		.space	1
 13498              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13499              		.align	2
 13500              		.set	.LANCHOR88,. + 0
 13503              	tempoLED_BASE:
 13504 0000 00000000 		.space	72
 13504      00000000 
 13504      00000000 
 13504      00000000 
 13504      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 391


 13505              		.section	.bss.width_CV,"aw",%nobits
 13506              		.align	2
 13507              		.set	.LANCHOR58,. + 0
 13510              	width_CV:
 13511 0000 00000000 		.space	4
 13512              		.section	.data.drywet,"aw"
 13513              		.align	2
 13514              		.set	.LANCHOR55,. + 0
 13517              	drywet:
 13518 0000 0000003F 		.word	1056964608
 13519              		.section	.data.width,"aw"
 13520              		.align	2
 13521              		.set	.LANCHOR63,. + 0
 13524              	width:
 13525 0000 0000803F 		.word	1065353216
 13526              		.section	.rodata.CSWTCH.355,"a"
 13527              		.align	3
 13528              		.set	.LANCHOR24,. + 0
 13531              	CSWTCH.355:
 13532 0000 00000000 		.word	0
 13533 0004 0000F83F 		.word	1073217536
 13534 0008 00000000 		.word	0
 13535 000c 00000040 		.word	1073741824
 13536 0010 00000000 		.word	0
 13537 0014 00000840 		.word	1074266112
 13538              		.section	.rodata._ZL18defaultAltControls,"a"
 13539              		.align	2
 13540              		.set	.LANCHOR106,. + 0
 13543              	_ZL18defaultAltControls:
 13544 0000 00650148 		.word	1208050944
 13545 0004 0000803F 		.word	1065353216
 13546 0008 00000000 		.word	0
 13547 000c 9A99A140 		.word	1084332442
 13548 0010 00004843 		.word	1128792064
 13549 0014 00803B46 		.word	1178304512
 13550 0018 00000000 		.word	0
 13551 001c 00000000 		.word	0
 13552              		.section	.sdram_bss,"aw"
 13553              		.align	2
 13556              	delMemsR_REV:
 13557 0000 00000000 		.space	2400040
 13557      00000000 
 13557      00000000 
 13557      00000000 
 13557      00000000 
 13560              	delMemsL_REV:
 13561 249f28 00000000 		.space	2400040
 13561      00000000 
 13561      00000000 
 13561      00000000 
 13561      00000000 
 13564              	delMemsR:
 13565 493e50 00000000 		.space	6912136
 13565      00000000 
 13565      00000000 
 13565      00000000 
 13565      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 392


 13568              	delMemsL:
 13569 b2b6d8 00000000 		.space	6912136
 13569      00000000 
 13569      00000000 
 13569      00000000 
 13569      00000000 
 13570              		.text
 13571              	.Letext0:
 13572              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 13573              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13574              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13575              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13576              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13577              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13578              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13579              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13580              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13581              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13582              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13583              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13584              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13585              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13586              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13587              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13588              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13589              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13590              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13591              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13592              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13593              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13594              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13595              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13596              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13597              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13598              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13599              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 13600              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13601              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13602              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13603              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13604              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13605              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13606              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13607              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13608              		.file 64 "../libdaisy/src/daisy_core.h"
 13609              		.file 65 "../libdaisy/src/per/tim.h"
 13610              		.file 66 "../libdaisy/src/per/sai.h"
 13611              		.file 67 "../libdaisy/src/util/wav_format.h"
 13612              		.file 68 "../libdaisy/src/per/qspi.h"
 13613              		.file 69 "../libdaisy/src/per/gpio.h"
 13614              		.file 70 "../libdaisy/src/dev/sdram.h"
 13615              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13616              		.file 72 "<built-in>"
 13617              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 13618              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 13619              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 13620              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 393


 13621              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 13622              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 13623              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 13624              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 13625              		.file 81 "../libdaisy/src/sys/fatfs.h"
 13626              		.file 82 "../DaisySP/Source/Control/adenv.h"
 13627              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 13628              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 13629              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 13630              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 13631              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 13632              		.file 88 "QSPI_Settings.h"
 13633              		.file 89 "scale.h"
 13634              		.file 90 "constants.h"
 13635              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 394


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13568  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13564  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13560  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13556  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1597   .text._Z17Update_DelayTimeLv:00000000000001d4 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 395


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1626   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1634   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1659   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1665   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:1673   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2127   .text._Z17Update_DelayTimeRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2153   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2161   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2186   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2192   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2200   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2618   .text._Z16Update_feedbackLv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2646   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2654   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2679   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2685   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:2693   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3115   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3143   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3151   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3176   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3182   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3190   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3662   .text._Z13Update_drywetv:00000000000001f0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3698   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3706   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3731   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3737   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:3745   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4169   .text._Z12Update_widthv:0000000000000180 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4194   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4202   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4528   .text._Z20Update_crossfeedbackv:000000000000010c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4547   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4555   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4853   .text._Z18Update_filterXfadev:0000000000000110 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4875   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4883   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4913   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4921   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:4929   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5086   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5098   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5106   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5169   .text._Z11UpdateClockv:000000000000002c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5178   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5186   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5238   .text._Z21Update_DelayBaseTempov:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5245   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5253   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5286   .text._Z21Update_DelayTempoLEDsv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5293   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5301   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5419   .text._Z19Update_BaseTempoLEDv:000000000000005c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5429   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:5437   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:6134   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 396


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:6173   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:6181   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7053   .text.startup.main:0000000000000344 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7085   .text.startup.main:00000000000003b8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7449   .text.startup.main:00000000000005a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:8095   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7467   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7475   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7537   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7548   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7556   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7659   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7671   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:7679   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:8065   .text._Z14Update_Buttonsv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:8088   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:8207   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:8222   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:8251   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:8262   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:9398   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:9454   .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:10080  .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:10102  .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:10857  .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:10894  .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11227  .text._ZL13AudioCallbackPfS_j:0000000000000cac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11238  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11246  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11280  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11288  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11335  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11340  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11348  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11432  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11437  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11445  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11535  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11540  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11548  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11578  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11583  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:11590  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12524  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000268 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12599  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12649  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12656  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12663  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12730  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12723  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12716  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13484  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12695  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12668  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13477  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13490  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13496  .bss.syncMode:0000000000000000 syncMode
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 397


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13471  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12689  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13422  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13417  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13464  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13510  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13524  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13429  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13517  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13370  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13364  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13457  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13450  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13443  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13436  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13398  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13391  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13503  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12737  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12709  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12702  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12675  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12682  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13412  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13405  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13384  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13377  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12645  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12652  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12659  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12669  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12671  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12678  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12685  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12696  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12698  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12705  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12712  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12719  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12726  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12733  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12740  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12744  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12747  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12751  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12754  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12758  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12761  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12765  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12768  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12772  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12775  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12779  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12782  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12786  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12789  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12793  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 398


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12796  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12800  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12803  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12807  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12810  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12814  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12817  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12821  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12824  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12828  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12831  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12835  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12838  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12842  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12845  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12849  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12852  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12856  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12859  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12863  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12866  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12870  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12873  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12877  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12880  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12884  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12887  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12891  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12894  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12898  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12901  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12905  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12908  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12912  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12915  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12919  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12922  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12926  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12929  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12933  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12936  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12940  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12943  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12947  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12950  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12954  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12957  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12961  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12964  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12968  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12971  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12975  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12978  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12982  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12985  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12989  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12992  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 399


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:12996  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13002  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13003  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13008  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13009  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13014  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13015  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13017  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13021  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13027  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13028  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13030  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13034  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13037  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13041  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13047  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13048  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13050  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13054  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13060  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13061  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13063  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13067  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13070  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13074  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13077  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13081  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13084  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13088  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13091  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13095  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13098  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13102  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13108  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13109  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13114  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13115  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13120  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13121  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13123  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13127  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13130  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13134  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13137  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13141  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13147  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13148  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13153  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13154  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13159  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13160  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13162  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13166  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13169  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13173  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13176  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13180  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 400


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13186  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13187  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13192  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13193  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13195  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13199  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13205  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13206  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13208  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13212  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13215  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13219  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13222  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13226  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13232  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13233  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13238  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13239  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13241  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13245  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13251  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13252  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13254  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13258  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13261  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13265  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13268  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13272  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13278  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13279  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13284  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13285  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13290  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13291  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13293  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13297  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13300  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13304  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13310  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13311  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13313  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13317  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13320  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13324  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13330  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13331  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13336  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13337  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13339  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13343  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13346  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13350  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13353  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13357  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13360  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13367  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13373  .bss.delayL:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 401


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13380  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13387  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13394  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13401  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13408  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13418  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13423  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13425  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13432  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13439  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13446  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13453  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13460  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13467  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13478  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13480  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13491  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13497  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13499  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13506  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13513  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13520  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13527  .rodata.CSWTCH.355:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13531  .rodata.CSWTCH.355:0000000000000000 CSWTCH.355
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13539  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13543  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s:13553  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6Switch8DebounceEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccxmtBKs.s 			page 402


_ZN8TempoLED8setTempoEf
_ZN8Taptempo12getTapLengthEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
