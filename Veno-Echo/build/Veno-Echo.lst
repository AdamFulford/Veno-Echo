ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB745:
  61              	.LBI745:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE745:
  66              	.LBB746:
  67              	.LBI746:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE746:
  72              	.LBB747:
  73              	.LBI747:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE747:
  78              	.LBB748:
  79              	.LBI748:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE748:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         bool tapflag_;
  37:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  38:taptempo.h    **** 
  39:taptempo.h    ****     public:
  40:taptempo.h    **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 14


  41:taptempo.h    ****     Taptempo()  //default constructor
  42:taptempo.h    ****     {
  43:taptempo.h    ****         tapflag_ = false;
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
  45:taptempo.h    ****         maxtap_ = 2000;
  46:taptempo.h    ****         mintap_ = 80;
  47:taptempo.h    ****         lastTapLength_ = 0;
  48:taptempo.h    ****         tempo_ = 500.0f;
  49:taptempo.h    ****         lastTime_ = 0;
  50:taptempo.h    ****         currentTime_ = 0;
  51:taptempo.h    ****         tapRatio_ = 1.0f;
  52:taptempo.h    **** 
  53:taptempo.h    ****     }
  54:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 54 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 54 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3953:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 15


  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** 
  29:LEDs.h        **** using namespace daisysp;
  30:LEDs.h        **** using namespace daisy;
  31:LEDs.h        **** 
  32:LEDs.h        **** class TempoLED
  33:LEDs.h        **** {
  34:LEDs.h        **** 
  35:LEDs.h        **** Led led;
  36:LEDs.h        **** Oscillator blink;
  37:LEDs.h        **** 
  38:LEDs.h        **** public:
  39:LEDs.h        **** 
  40:LEDs.h        **** TempoLED(){}
  41:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 41 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB749:
 285              	.LBI749:
 286              		.loc 8 16 5 view .LVU27
 287              		.loc 8 16 5 is_stmt 0 view .LVU28
 288              	.LBE749:
 289              	.LBB750:
 290              	.LBI750:
 291              		.file 15 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 16


  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 292              		.loc 15 25 5 is_stmt 1 view .LVU29
 293              		.loc 15 25 5 is_stmt 0 view .LVU30
 294              	.LBE750:
 295              		.loc 14 41 13 view .LVU31
 296 0000 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE3953:
 300              		.weak	_ZN8TempoLEDD1Ev
 301              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 302 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 303              		.align	1
 304              		.p2align 2,,3
 305              		.weak	_ZN9ButtonLEDD2Ev
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	_ZN9ButtonLEDD2Ev:
 312              	.LVL10:
 313              	.LFB3959:
  42:LEDs.h        **** 
  43:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  44:LEDs.h        **** 
  45:LEDs.h        **** void setTempo(float tempo);
  46:LEDs.h        **** 
  47:LEDs.h        **** void resetPhase();
  48:LEDs.h        **** 
  49:LEDs.h        **** void update();
  50:LEDs.h        **** 
  51:LEDs.h        **** void LED_set(float brightness);
  52:LEDs.h        **** 
  53:LEDs.h        **** bool isEOC();
  54:LEDs.h        **** 
  55:LEDs.h        **** };
  56:LEDs.h        **** 
  57:LEDs.h        **** class ButtonLED    //button with status LED
  58:LEDs.h        **** {
  59:LEDs.h        ****     public:
  60:LEDs.h        ****     ButtonLED() {}
  61:LEDs.h        ****     ~ButtonLED() {}
 314              		.loc 14 61 5 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319              	.LBB751:
 320              	.LBI751:
 321              		.loc 15 25 5 view .LVU33
 322              		.loc 15 25 5 is_stmt 0 view .LVU34
 323              	.LBE751:
 324              	.LBB752:
 325              	.LBI752:
 326              		.loc 1 41 5 is_stmt 1 view .LVU35
 327              		.loc 1 41 5 is_stmt 0 view .LVU36
 328              	.LBE752:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 17


 329              		.loc 14 61 19 view .LVU37
 330 0000 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE3959:
 334              		.weak	_ZN9ButtonLEDD1Ev
 335              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 336 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 337              		.align	1
 338              		.p2align 2,,3
 339              		.weak	_ZN10DelayMultiD2Ev
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-d16
 345              	_ZN10DelayMultiD2Ev:
 346              	.LVL11:
 347              	.LFB3965:
 348              		.file 16 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 18


  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 349              		.loc 16 50 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LBB753:
 355              	.LBI753:
  41:LEDs.h        **** 
 356              		.loc 14 41 1 view .LVU39
 357              	.LBB754:
 358              	.LBI754:
 359              		.loc 8 16 5 view .LVU40
 360              		.loc 8 16 5 is_stmt 0 view .LVU41
 361              	.LBE754:
 362              	.LBB755:
 363              	.LBI755:
 364              		.loc 15 25 5 is_stmt 1 view .LVU42
 365              		.loc 15 25 5 is_stmt 0 view .LVU43
 366              	.LBE755:
 367              	.LBE753:
 368              		.loc 16 50 16 view .LVU44
 369 0000 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE3965:
 373              		.weak	_ZN10DelayMultiD1Ev
 374              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 375 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 376              		.align	1
 377              		.p2align 2,,3
 378              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv5-d16
 384              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 385              	.LVL12:
 386              	.LFB4891:
 387              		.file 17 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 19


   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 388              		.loc 17 52 5 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              		.loc 17 52 27 is_stmt 0 view .LVU46
 394 0000 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE4891:
 398              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 399              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 400 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 401              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 20


 402              		.p2align 2,,3
 403              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv5-d16
 409              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 410              	.LVL13:
 411              	.LFB4894:
 412              		.file 18 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 413              		.loc 18 39 5 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              		.loc 18 39 26 is_stmt 0 view .LVU48
 419 0000 7047     		bx	lr
 420              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 21


 421              	.LFE4894:
 423              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 424              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 425 0002 00BF     		.section	.text._Z16checkPickupStateff11pickupStateb.part.0,"ax",%progbits
 426              		.align	1
 427              		.p2align 2,,3
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv5-d16
 433              	_Z16checkPickupStateff11pickupStateb.part.0:
 434              	.LVL14:
 435              	.LFB4910:
 436              		.file 19 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 22


  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 23


 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV;
 107:Veno-Echo.cpp **** float delayTimeR_CV;
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** bool delayL_flag{true};
 143:Veno-Echo.cpp **** bool delayR_flag{true};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
 157:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 24


 158:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 163:Veno-Echo.cpp **** 
 164:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 169:Veno-Echo.cpp **** 
 170:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** //Gate inputs
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 180:Veno-Echo.cpp **** 
 181:Veno-Echo.cpp **** //Switch TapButton;
 182:Veno-Echo.cpp **** Switch Sync;
 183:Veno-Echo.cpp **** Switch ClockIn;
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** //Tap tempo
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 187:Veno-Echo.cpp **** 
 188:Veno-Echo.cpp **** 
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** Settings AltControls;
 191:Veno-Echo.cpp **** 
 192:Veno-Echo.cpp **** //default alt control values
 193:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 194:Veno-Echo.cpp **** {
 195:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 196:Veno-Echo.cpp ****     1.0f,   //tapRatio
 197:Veno-Echo.cpp ****     0.0f,   //ModDepth
 198:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 199:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 200:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 201:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 202:Veno-Echo.cpp ****     0.0f
 203:Veno-Echo.cpp **** };
 204:Veno-Echo.cpp **** 
 205:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 206:Veno-Echo.cpp **** void Update_DelayTimeL();
 207:Veno-Echo.cpp **** 
 208:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 209:Veno-Echo.cpp **** void Update_DelayTimeR();
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_feedbackL_CV();
 212:Veno-Echo.cpp **** void Update_feedbackL();
 213:Veno-Echo.cpp **** 
 214:Veno-Echo.cpp **** void Update_feedbackR_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 25


 215:Veno-Echo.cpp **** void Update_feedbackR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_drywet_CV();
 218:Veno-Echo.cpp **** void Update_drywet();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_width_CV();
 221:Veno-Echo.cpp **** void Update_width();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_crossfeedback();
 224:Veno-Echo.cpp **** void Update_filterXfade();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_Buttons();
 227:Veno-Echo.cpp **** void Update_BaseTempoLED();
 228:Veno-Echo.cpp **** void Update_Mod();
 229:Veno-Echo.cpp **** void GetModCV();
 230:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 231:Veno-Echo.cpp **** void UpdateClock();
 232:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 233:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 234:Veno-Echo.cpp **** void TurnOnAllLEDs();
 235:Veno-Echo.cpp **** void ResetAllLEDs();
 236:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 237:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 238:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 239:Veno-Echo.cpp **** 
 240:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 241:Veno-Echo.cpp **** {
 242:Veno-Echo.cpp **** 
 243:Veno-Echo.cpp **** /*
 244:Veno-Echo.cpp **** static uint32_t funcLength{};
 245:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 246:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 247:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 248:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 249:Veno-Echo.cpp **** 
 250:Veno-Echo.cpp **** */
 251:Veno-Echo.cpp **** 
 252:Veno-Echo.cpp **** static int Counter{};
 253:Veno-Echo.cpp **** 
 254:Veno-Echo.cpp **** /*
 255:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 256:Veno-Echo.cpp **** 
 257:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 258:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 259:Veno-Echo.cpp ****     {
 260:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 261:Veno-Echo.cpp ****     }
 262:Veno-Echo.cpp **** 
 263:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 264:Veno-Echo.cpp ****     {
 265:Veno-Echo.cpp ****         minFuncLength = funcLength;
 266:Veno-Echo.cpp ****     }
 267:Veno-Echo.cpp **** 
 268:Veno-Echo.cpp **** */
 269:Veno-Echo.cpp **** 
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 271:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 26


 272:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 273:Veno-Echo.cpp **** {
 274:Veno-Echo.cpp ****     /*
 275:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 276:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 277:Veno-Echo.cpp ****         //init timeofCall as current time
 278:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 279:Veno-Echo.cpp **** 
 280:Veno-Echo.cpp ****         //wait for random Dither time
 281:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 282:Veno-Echo.cpp ****         {}
 283:Veno-Echo.cpp ****     */
 284:Veno-Echo.cpp **** 
 285:Veno-Echo.cpp ****         switch (Counter)
 286:Veno-Echo.cpp ****         {
 287:Veno-Echo.cpp ****             case 0:
 288:Veno-Echo.cpp ****                 Update_Buttons();
 289:Veno-Echo.cpp ****                 GetModCV();
 290:Veno-Echo.cpp ****             break;
 291:Veno-Echo.cpp **** 
 292:Veno-Echo.cpp ****             case 1:
 293:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 294:Veno-Echo.cpp ****             break;
 295:Veno-Echo.cpp **** 
 296:Veno-Echo.cpp ****             case 2:
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 298:Veno-Echo.cpp ****             break;
 299:Veno-Echo.cpp **** 
 300:Veno-Echo.cpp ****             case 3:
 301:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 302:Veno-Echo.cpp ****             break;
 303:Veno-Echo.cpp **** 
 304:Veno-Echo.cpp ****             case 4:
 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 306:Veno-Echo.cpp ****             break;
 307:Veno-Echo.cpp **** 
 308:Veno-Echo.cpp ****             case 5:
 309:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 310:Veno-Echo.cpp ****             break;
 311:Veno-Echo.cpp **** 
 312:Veno-Echo.cpp ****             case 6:
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 314:Veno-Echo.cpp ****             break;
 315:Veno-Echo.cpp **** 
 316:Veno-Echo.cpp ****             case 7:
 317:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 318:Veno-Echo.cpp ****             break;
 319:Veno-Echo.cpp **** 
 320:Veno-Echo.cpp ****             case 8:
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 322:Veno-Echo.cpp ****             break;
 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****             case 9:
 325:Veno-Echo.cpp ****                 Update_drywet_CV();
 326:Veno-Echo.cpp ****             break;
 327:Veno-Echo.cpp **** 
 328:Veno-Echo.cpp ****             case 10:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 27


 329:Veno-Echo.cpp ****                 Update_drywet();
 330:Veno-Echo.cpp ****             break;
 331:Veno-Echo.cpp **** 
 332:Veno-Echo.cpp ****             case 11:
 333:Veno-Echo.cpp ****                 Update_width_CV();
 334:Veno-Echo.cpp ****             break;
 335:Veno-Echo.cpp **** 
 336:Veno-Echo.cpp ****             case 12:
 337:Veno-Echo.cpp ****                 Update_width();
 338:Veno-Echo.cpp ****             break;
 339:Veno-Echo.cpp **** 
 340:Veno-Echo.cpp ****             case 13:
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
 342:Veno-Echo.cpp ****             break;
 343:Veno-Echo.cpp **** 
 344:Veno-Echo.cpp ****             case 14:
 345:Veno-Echo.cpp ****                 Update_filterXfade();
 346:Veno-Echo.cpp ****             break;
 347:Veno-Echo.cpp ****         }
 348:Veno-Echo.cpp **** }
 349:Veno-Echo.cpp **** 
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 351:Veno-Echo.cpp ****     {   
 352:Veno-Echo.cpp ****         UpdateClock(); 
 353:Veno-Echo.cpp ****         Update_Mod();
 354:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 357:Veno-Echo.cpp ****         
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 360:Veno-Echo.cpp **** 
 361:Veno-Echo.cpp ****         //set xfade positions      
 362:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 363:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 364:Veno-Echo.cpp ****         
 365:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 366:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 367:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 368:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 369:Veno-Echo.cpp **** 
 370:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 371:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 372:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 373:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 374:Veno-Echo.cpp **** 
 375:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 377:Veno-Echo.cpp **** 
 378:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 379:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 380:Veno-Echo.cpp **** 
 381:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 384:Veno-Echo.cpp **** 
 385:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 28


 386:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 389:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 390:Veno-Echo.cpp **** 
 391:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 392:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 394:Veno-Echo.cpp **** 
 395:Veno-Echo.cpp ****         //Get combined output from all delay heads
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 399:Veno-Echo.cpp ****         Update_BaseTempoLED();
 400:Veno-Echo.cpp **** 
 401:Veno-Echo.cpp ****         //hard limit
 402:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 404:Veno-Echo.cpp **** 
 405:Veno-Echo.cpp **** if(!PostFilters)
 406:Veno-Echo.cpp **** {
 407:Veno-Echo.cpp **** //****************************************************************************************
 408:Veno-Echo.cpp ****         //pre filters
 409:Veno-Echo.cpp ****         //process LPF
 410:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 411:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 413:Veno-Echo.cpp **** 
 414:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 417:Veno-Echo.cpp ****         
 418:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 421:Veno-Echo.cpp **** 
 422:Veno-Echo.cpp ****         //hard limit
 423:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 425:Veno-Echo.cpp **** 
 426:Veno-Echo.cpp ****         //process HPF
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 429:Veno-Echo.cpp **** 
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 432:Veno-Echo.cpp **** 
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 435:Veno-Echo.cpp **** 
 436:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 437:Veno-Echo.cpp **** 
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 440:Veno-Echo.cpp **** 
 441:Veno-Echo.cpp **** //****************************************************************************************
 442:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 29


 443:Veno-Echo.cpp **** 
 444:Veno-Echo.cpp **** else
 445:Veno-Echo.cpp **** {
 446:Veno-Echo.cpp ****     /* code */
 447:Veno-Echo.cpp **** }
 448:Veno-Echo.cpp **** 
 449:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 450:Veno-Echo.cpp ****         static float RNegFB{};
 451:Veno-Echo.cpp **** 
 452:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 455:Veno-Echo.cpp ****         
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 458:Veno-Echo.cpp **** 
 459:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 461:Veno-Echo.cpp **** 
 462:Veno-Echo.cpp ****         //crossfeedback:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 465:Veno-Echo.cpp **** 
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp ****         //get envelopes for feedback signals
 468:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 469:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 470:Veno-Echo.cpp **** 
 471:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 472:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 475:Veno-Echo.cpp ****             else LNegFB = 0.0;
 476:Veno-Echo.cpp ****             
 477:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 480:Veno-Echo.cpp **** 
 481:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 482:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 484:Veno-Echo.cpp ****  
 485:Veno-Echo.cpp ****         //hard limit
 486:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 487:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 488:Veno-Echo.cpp **** 
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 491:Veno-Echo.cpp **** 
 492:Veno-Echo.cpp ****         // floats for wet dry mix
 493:Veno-Echo.cpp ****         float mixL;
 494:Veno-Echo.cpp ****         float mixR;
 495:Veno-Echo.cpp **** 
 496:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 498:Veno-Echo.cpp **** 
 499:Veno-Echo.cpp ****         //hard limit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 30


 500:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 502:Veno-Echo.cpp **** 
 503:Veno-Echo.cpp **** if(PostFilters)
 504:Veno-Echo.cpp **** {
 505:Veno-Echo.cpp ****     //****************************************************************************************
 506:Veno-Echo.cpp ****         //post filters
 507:Veno-Echo.cpp ****         //process LPF
 508:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 511:Veno-Echo.cpp **** 
 512:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 515:Veno-Echo.cpp ****         
 516:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 519:Veno-Echo.cpp **** 
 520:Veno-Echo.cpp ****         //hard limit
 521:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 523:Veno-Echo.cpp **** 
 524:Veno-Echo.cpp ****         //process HPF
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 527:Veno-Echo.cpp **** 
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 530:Veno-Echo.cpp **** 
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 533:Veno-Echo.cpp **** 
 534:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 537:Veno-Echo.cpp **** 
 538:Veno-Echo.cpp ****     //****************************************************************************************
 539:Veno-Echo.cpp **** }
 540:Veno-Echo.cpp **** else
 541:Veno-Echo.cpp **** {
 542:Veno-Echo.cpp ****     /* code */
 543:Veno-Echo.cpp **** }
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 545:Veno-Echo.cpp ****         {
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 548:Veno-Echo.cpp ****         }
 549:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 550:Veno-Echo.cpp ****         {
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 553:Veno-Echo.cpp ****         }
 554:Veno-Echo.cpp ****         else
 555:Veno-Echo.cpp ****         {
 556:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 31


 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 558:Veno-Echo.cpp ****         }
 559:Veno-Echo.cpp **** 
 560:Veno-Echo.cpp ****         //send mixes to outputs
 561:Veno-Echo.cpp ****         if(mute)
 562:Veno-Echo.cpp ****         {
 563:Veno-Echo.cpp ****             out[i] = 0.0f;
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 565:Veno-Echo.cpp ****         }
 566:Veno-Echo.cpp ****         else
 567:Veno-Echo.cpp ****         {
 568:Veno-Echo.cpp ****             out[i] = mixL;
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 570:Veno-Echo.cpp ****         }
 571:Veno-Echo.cpp **** 
 572:Veno-Echo.cpp ****         //write to DAC for debug
 573:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 574:Veno-Echo.cpp **** 
 575:Veno-Echo.cpp ****     }
 576:Veno-Echo.cpp **** 
 577:Veno-Echo.cpp **** }
 578:Veno-Echo.cpp **** 
 579:Veno-Echo.cpp **** void InitDelays(float samplerate)
 580:Veno-Echo.cpp **** {
 581:Veno-Echo.cpp **** 
 582:Veno-Echo.cpp ****     //Init fwd delays
 583:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 584:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 585:Veno-Echo.cpp **** 
 586:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 587:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 589:Veno-Echo.cpp **** 
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 592:Veno-Echo.cpp **** 
 593:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 595:Veno-Echo.cpp **** 
 596:Veno-Echo.cpp ****     //Init rev delays
 597:Veno-Echo.cpp ****     delMemsL_REV.Init();
 598:Veno-Echo.cpp ****     delMemsR_REV.Init();
 599:Veno-Echo.cpp **** 
 600:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 601:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 603:Veno-Echo.cpp **** 
 604:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 605:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 606:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 607:Veno-Echo.cpp **** 
 608:Veno-Echo.cpp **** }
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp **** int main(void)
 611:Veno-Echo.cpp **** {
 612:Veno-Echo.cpp ****     // initialize hardware.
 613:Veno-Echo.cpp ****     hw.Configure();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 32


 614:Veno-Echo.cpp ****     hw.Init();
 615:Veno-Echo.cpp ****     
 616:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 617:Veno-Echo.cpp **** 
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 623:Veno-Echo.cpp **** 
 624:Veno-Echo.cpp ****     //Gates
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 627:Veno-Echo.cpp **** 
 628:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 631:Veno-Echo.cpp ****     
 632:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 637:Veno-Echo.cpp **** 
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 642:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 643:Veno-Echo.cpp **** 
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 648:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 649:Veno-Echo.cpp **** 
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 654:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 655:Veno-Echo.cpp **** 
 656:Veno-Echo.cpp ****     // set params for CrossFade objects
 657:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 658:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 659:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 660:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 661:Veno-Echo.cpp **** 
 662:Veno-Echo.cpp ****     WidthXfade.Init();
 663:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 664:Veno-Echo.cpp **** 
 665:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 666:Veno-Echo.cpp **** 
 667:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 668:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 33


 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 672:Veno-Echo.cpp **** 
 673:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 677:Veno-Echo.cpp **** 
 678:Veno-Echo.cpp ****     //setup L and R High Pass filters
 679:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 683:Veno-Echo.cpp **** 
 684:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 688:Veno-Echo.cpp **** 
 689:Veno-Echo.cpp ****     //post filters
 690:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 694:Veno-Echo.cpp **** 
 695:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 699:Veno-Echo.cpp **** 
 700:Veno-Echo.cpp ****     //setup L and R High Pass filters
 701:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 705:Veno-Echo.cpp **** 
 706:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 710:Veno-Echo.cpp **** 
 711:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 713:Veno-Echo.cpp **** 
 714:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 715:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 717:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 718:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 719:Veno-Echo.cpp **** 
 720:Veno-Echo.cpp **** 
 721:Veno-Echo.cpp ****     //timers: used to limit time between updates to delay time parameters
 722:Veno-Echo.cpp ****     //dsy_tim_init(); //start timer
 723:Veno-Echo.cpp ****     //dsy_tim_start();
 724:Veno-Echo.cpp **** 
 725:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 726:Veno-Echo.cpp **** 
 727:Veno-Echo.cpp ****     //setup tempo indicators
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 34


 728:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 729:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 732:Veno-Echo.cpp **** 
 733:Veno-Echo.cpp ****     //load settings from flash
 734:Veno-Echo.cpp **** 
 735:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 736:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 738:Veno-Echo.cpp **** 
 739:Veno-Echo.cpp ****     //initialize DAC
 740:Veno-Echo.cpp ****     //dsy_dac_init(&hw.dac_handle, DSY_DAC_CHN_BOTH);
 741:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN1, 0);
 742:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN2, 0);
 743:Veno-Echo.cpp **** 
 744:Veno-Echo.cpp ****     //ADC
 745:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 746:Veno-Echo.cpp **** 
 747:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 753:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 754:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 756:Veno-Echo.cpp **** 
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 759:Veno-Echo.cpp ****     hw.adc.Start();
 760:Veno-Echo.cpp **** 
 761:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 762:Veno-Echo.cpp ****     // start audio callback
 763:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 764:Veno-Echo.cpp **** 
 765:Veno-Echo.cpp ****     
 766:Veno-Echo.cpp **** 
 767:Veno-Echo.cpp ****      for(;;)
 768:Veno-Echo.cpp ****      {
 769:Veno-Echo.cpp **** 
 770:Veno-Echo.cpp **** /*
 771:Veno-Echo.cpp ****         if(save_flag)
 772:Veno-Echo.cpp ****         {
 773:Veno-Echo.cpp **** 
 774:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 775:Veno-Echo.cpp ****             {
 776:Veno-Echo.cpp ****                 //reset flag
 777:Veno-Echo.cpp ****                 //System::Delay(1000);
 778:Veno-Echo.cpp ****                 save_flag = false;
 779:Veno-Echo.cpp ****             }
 780:Veno-Echo.cpp ****         }
 781:Veno-Echo.cpp **** 
 782:Veno-Echo.cpp **** */
 783:Veno-Echo.cpp ****      }
 784:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 35


 785:Veno-Echo.cpp **** }
 786:Veno-Echo.cpp **** 
 787:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 788:Veno-Echo.cpp **** {
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 790:Veno-Echo.cpp **** }
 791:Veno-Echo.cpp **** 
 792:Veno-Echo.cpp **** //samples ADC's and updates parameters. 
 793:Veno-Echo.cpp **** //Delay time controls only update if thresholds for delta and time since last change are exceeded.
 794:Veno-Echo.cpp **** void Update_DelayTimeL()
 795:Veno-Echo.cpp **** {
 796:Veno-Echo.cpp ****     static int counterL{};
 797:Veno-Echo.cpp ****     float delayTimeL_Pot{};
 798:Veno-Echo.cpp ****     static float delayTimeL_Pot_Last{};
 799:Veno-Echo.cpp **** 
 800:Veno-Echo.cpp **** 
 801:Veno-Echo.cpp ****     //update pot values
 802:Veno-Echo.cpp ****     delayTimeL_Pot = hw.adc.GetMuxFloat(7,2);
 803:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 804:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 805:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 806:Veno-Echo.cpp **** 
 807:Veno-Echo.cpp **** if (!shift)
 808:Veno-Echo.cpp **** {
 809:Veno-Echo.cpp **** //update last value if shift not held
 810:Veno-Echo.cpp **** delayTimeL_Pot_Last = delayTimeL_Pot;
 811:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 812:Veno-Echo.cpp **** float DelayTimeL{PotCVCombo(delayTimeL_Pot,delayTimeL_CV)};
 813:Veno-Echo.cpp **** 
 814:Veno-Echo.cpp ****     if (!syncMode)
 815:Veno-Echo.cpp ****     {
 816:Veno-Echo.cpp ****         if (counterL == 0)
 817:Veno-Echo.cpp ****         {
 818:Veno-Echo.cpp ****             
 819:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - DelayTimeL,true);
 820:Veno-Echo.cpp ****         }
 821:Veno-Echo.cpp ****     }
 822:Veno-Echo.cpp ****     else    //syncmode
 823:Veno-Echo.cpp ****     {
 824:Veno-Echo.cpp **** 
 825:Veno-Echo.cpp ****         if (counterL == 0)
 826:Veno-Echo.cpp ****         {
 827:Veno-Echo.cpp ****             //float div_L_Input{DelayTimeL};
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 829:Veno-Echo.cpp ****             {
 830:Veno-Echo.cpp ****                 delayL_flag = true;
 831:Veno-Echo.cpp ****             }
 832:Veno-Echo.cpp ****         }
 833:Veno-Echo.cpp ****     }
 834:Veno-Echo.cpp **** }   //not shift mode
 835:Veno-Echo.cpp **** 
 836:Veno-Echo.cpp **** else    //shift mode
 837:Veno-Echo.cpp **** {
 838:Veno-Echo.cpp ****     //check if pot has moved since shift mode turned on
 839:Veno-Echo.cpp ****     if(abs(delayTimeL_Pot_Last - delayTimeL_Pot) > altControlThresh)
 840:Veno-Echo.cpp ****     {
 841:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 36


 842:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 843:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 844:Veno-Echo.cpp ****         //save setting:
 845:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 846:Veno-Echo.cpp ****     }
 847:Veno-Echo.cpp **** }
 848:Veno-Echo.cpp ****     
 849:Veno-Echo.cpp **** }
 850:Veno-Echo.cpp **** 
 851:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 852:Veno-Echo.cpp **** {
 853:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 854:Veno-Echo.cpp **** }
 855:Veno-Echo.cpp **** 
 856:Veno-Echo.cpp **** void Update_DelayTimeR()
 857:Veno-Echo.cpp **** {
 858:Veno-Echo.cpp ****     static int counterR{};
 859:Veno-Echo.cpp ****     float delayTimeR_Pot{};
 860:Veno-Echo.cpp ****     static float delayTimeR_Pot_Last{};
 861:Veno-Echo.cpp **** 
 862:Veno-Echo.cpp ****     //update pot values
 863:Veno-Echo.cpp ****     delayTimeR_Pot = hw.adc.GetMuxFloat(7,6);
 864:Veno-Echo.cpp **** 
 865:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 866:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 867:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);    
 868:Veno-Echo.cpp **** 
 869:Veno-Echo.cpp **** if (!shift)
 870:Veno-Echo.cpp **** {
 871:Veno-Echo.cpp **** //update last value if shift not held
 872:Veno-Echo.cpp **** delayTimeR_Pot_Last = delayTimeR_Pot;
 873:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 874:Veno-Echo.cpp **** float delayTimeR{PotCVCombo(delayTimeR_Pot,delayTimeR_CV)};
 875:Veno-Echo.cpp **** 
 876:Veno-Echo.cpp ****     if (!syncMode)
 877:Veno-Echo.cpp ****     {
 878:Veno-Echo.cpp ****         if (counterR == 0)
 879:Veno-Echo.cpp ****         {
 880:Veno-Echo.cpp **** 
 881:Veno-Echo.cpp ****             delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 882:Veno-Echo.cpp ****         }
 883:Veno-Echo.cpp **** 
 884:Veno-Echo.cpp ****     }
 885:Veno-Echo.cpp ****     else    //syncmode
 886:Veno-Echo.cpp ****     {
 887:Veno-Echo.cpp ****         if (counterR == 0)
 888:Veno-Echo.cpp ****         {
 889:Veno-Echo.cpp ****             //float div_R_Input{1.0f - delayTimeR}; //invert pot range
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 891:Veno-Echo.cpp ****             {
 892:Veno-Echo.cpp ****                 delayR_flag = true;
 893:Veno-Echo.cpp ****             }
 894:Veno-Echo.cpp ****         }
 895:Veno-Echo.cpp ****     }
 896:Veno-Echo.cpp **** }   //not shift mode
 897:Veno-Echo.cpp **** 
 898:Veno-Echo.cpp **** else    //shift mode
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 37


 899:Veno-Echo.cpp **** {
 900:Veno-Echo.cpp ****     //check if pot has moved since shift mode turned on
 901:Veno-Echo.cpp ****     if(abs(delayTimeR_Pot_Last - delayTimeR_Pot) > altControlThresh)
 902:Veno-Echo.cpp ****     {
 903:Veno-Echo.cpp ****         float tapRatioInput{delayTimeR_Pot};
 904:Veno-Echo.cpp ****         TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>(MAX
 905:Veno-Echo.cpp ****         
 906:Veno-Echo.cpp ****         BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 907:Veno-Echo.cpp ****         //save setting:
 908:Veno-Echo.cpp ****         AltControls.tapRatio = GetTapRatio(tapRatio);
 909:Veno-Echo.cpp ****     }
 910:Veno-Echo.cpp **** }
 911:Veno-Echo.cpp ****     
 912:Veno-Echo.cpp **** }
 913:Veno-Echo.cpp **** void Update_feedbackL_CV()
 914:Veno-Echo.cpp **** {
 915:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 916:Veno-Echo.cpp **** }
 917:Veno-Echo.cpp **** void Update_feedbackL()
 918:Veno-Echo.cpp **** {
 919:Veno-Echo.cpp ****     //get pot values:
 920:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 921:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 922:Veno-Echo.cpp ****     static float feedbackL_Pot_Last{};
 923:Veno-Echo.cpp **** 
 924:Veno-Echo.cpp ****     if (!shift) //default controls
 925:Veno-Echo.cpp ****     {   
 926:Veno-Echo.cpp ****         //update last values if shift off
 927:Veno-Echo.cpp ****         feedbackL_Pot_Last = feedbackL_Pot;
 928:Veno-Echo.cpp ****   
 929:Veno-Echo.cpp ****         float feedbackL_Target{scale(PotCVCombo(feedbackL_Pot,feedbackL_CV),0.0,maxFB,LINEAR)};  
 930:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 931:Veno-Echo.cpp ****     }
 932:Veno-Echo.cpp ****     else    //alternate controls
 933:Veno-Echo.cpp ****     {
 934:Veno-Echo.cpp ****         static float HPCutoff{};
 935:Veno-Echo.cpp ****         if (abs(feedbackL_Pot_Last - feedbackL_Pot) > altControlThresh)
 936:Veno-Echo.cpp ****         {
 937:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 938:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 939:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 940:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 941:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 942:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 943:Veno-Echo.cpp ****         }
 944:Veno-Echo.cpp ****     }
 945:Veno-Echo.cpp **** }
 946:Veno-Echo.cpp **** 
 947:Veno-Echo.cpp **** void Update_feedbackR_CV()
 948:Veno-Echo.cpp **** {
 949:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 950:Veno-Echo.cpp **** }
 951:Veno-Echo.cpp **** 
 952:Veno-Echo.cpp **** void Update_feedbackR()
 953:Veno-Echo.cpp **** {
 954:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 955:Veno-Echo.cpp ****     static float feedbackR_Pot_Last{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 38


 956:Veno-Echo.cpp **** 
 957:Veno-Echo.cpp ****     if (!shift) //default controls
 958:Veno-Echo.cpp ****     {   
 959:Veno-Echo.cpp ****         //update last values if shift off
 960:Veno-Echo.cpp ****         feedbackR_Pot_Last = feedbackR_Pot;
 961:Veno-Echo.cpp **** 
 962:Veno-Echo.cpp ****         float feedbackR_Target{scale(PotCVCombo(feedbackR_Pot,feedbackR_CV),0.0,maxFB,LINEAR)};
 963:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 964:Veno-Echo.cpp ****     }
 965:Veno-Echo.cpp ****     else    //alternate controls
 966:Veno-Echo.cpp ****     {
 967:Veno-Echo.cpp ****         static float LPCutoff{};
 968:Veno-Echo.cpp ****         if (abs(feedbackR_Pot_Last - feedbackR_Pot) > altControlThresh)
 969:Veno-Echo.cpp ****         {
 970:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 971:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 972:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 973:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 974:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 975:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 976:Veno-Echo.cpp ****         }
 977:Veno-Echo.cpp ****     }
 978:Veno-Echo.cpp **** }
 979:Veno-Echo.cpp **** 
 980:Veno-Echo.cpp **** void Update_drywet_CV()
 981:Veno-Echo.cpp **** {
 982:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 983:Veno-Echo.cpp **** }
 984:Veno-Echo.cpp **** 
 985:Veno-Echo.cpp **** void Update_drywet()
 986:Veno-Echo.cpp **** {
 987:Veno-Echo.cpp ****     static bool lastShift{};
 988:Veno-Echo.cpp ****     static pickupState drywet_pickup{};
 989:Veno-Echo.cpp ****     static pickupState Res_pickup{};
 990:Veno-Echo.cpp **** 
 991:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
 992:Veno-Echo.cpp ****     static float Res_Last{}; //last res value (unscaled)
 993:Veno-Echo.cpp **** 
 994:Veno-Echo.cpp ****     //get pot values:
 995:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
 996:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
 997:Veno-Echo.cpp **** 
 998:Veno-Echo.cpp ****     if (!shift) //default controls
 999:Veno-Echo.cpp ****     {   
1000:Veno-Echo.cpp **** 
1001:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1002:Veno-Echo.cpp ****         {
1003:Veno-Echo.cpp ****             lastShift = shift;
1004:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1005:Veno-Echo.cpp ****         } 
1006:Veno-Echo.cpp ****         else    //not a default shift change
1007:Veno-Echo.cpp ****         {
1008:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1009:Veno-Echo.cpp ****         }
1010:Veno-Echo.cpp ****         
1011:Veno-Echo.cpp ****         float drywetcombo{};
1012:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 39


1013:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
1014:Veno-Echo.cpp ****         {
1015:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1016:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1017:Veno-Echo.cpp ****         }
1018:Veno-Echo.cpp **** 
1019:Veno-Echo.cpp ****         else
1020:Veno-Echo.cpp ****         {
1021:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last drywet and CV
1022:Veno-Echo.cpp ****         }
1023:Veno-Echo.cpp **** 
1024:Veno-Echo.cpp ****         float drywetTarget{};
1025:Veno-Echo.cpp **** 
1026:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1027:Veno-Echo.cpp ****         {
1028:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1029:Veno-Echo.cpp ****         }
1030:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1031:Veno-Echo.cpp ****         {
1032:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1033:Veno-Echo.cpp ****         }
1034:Veno-Echo.cpp ****         else
1035:Veno-Echo.cpp ****         {
1036:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
1037:Veno-Echo.cpp ****         }
1038:Veno-Echo.cpp **** 
1039:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1040:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1041:Veno-Echo.cpp ****     }
1042:Veno-Echo.cpp ****     else    //alternate controls
1043:Veno-Echo.cpp ****     {
1044:Veno-Echo.cpp **** 
1045:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1046:Veno-Echo.cpp ****         {
1047:Veno-Echo.cpp ****             lastShift = shift;
1048:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
1049:Veno-Echo.cpp ****         }
1050:Veno-Echo.cpp **** 
1051:Veno-Echo.cpp ****         else    //not a recent shift change
1052:Veno-Echo.cpp ****         {
1053:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,false);
1054:Veno-Echo.cpp ****         }
1055:Veno-Echo.cpp **** 
1056:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
1057:Veno-Echo.cpp ****         {
1058:Veno-Echo.cpp ****             float Res{};
1059:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1060:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1061:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1062:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1063:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1064:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1065:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1066:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1067:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1068:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1069:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 40


1070:Veno-Echo.cpp ****         }
1071:Veno-Echo.cpp ****     }
1072:Veno-Echo.cpp **** }
1073:Veno-Echo.cpp **** 
1074:Veno-Echo.cpp **** void Update_width_CV()
1075:Veno-Echo.cpp **** {
1076:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1077:Veno-Echo.cpp **** }
1078:Veno-Echo.cpp **** 
1079:Veno-Echo.cpp **** void Update_width()
1080:Veno-Echo.cpp **** {
1081:Veno-Echo.cpp ****     //get pot values:
1082:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1083:Veno-Echo.cpp **** 
1084:Veno-Echo.cpp ****     static float width_Pot_Last{};
1085:Veno-Echo.cpp **** 
1086:Veno-Echo.cpp ****     if (!shift) //default controls
1087:Veno-Echo.cpp ****     {   
1088:Veno-Echo.cpp ****         //update last values if shift off
1089:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
1090:Veno-Echo.cpp **** 
1091:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
1092:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
1093:Veno-Echo.cpp ****         WidthXfade.SetPos(width);
1094:Veno-Echo.cpp ****     }
1095:Veno-Echo.cpp ****     else    //alternate controls
1096:Veno-Echo.cpp ****     {
1097:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
1098:Veno-Echo.cpp ****         {
1099:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1100:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1101:Veno-Echo.cpp ****         }
1102:Veno-Echo.cpp **** 
1103:Veno-Echo.cpp ****     }
1104:Veno-Echo.cpp **** }
1105:Veno-Echo.cpp **** 
1106:Veno-Echo.cpp **** void Update_crossfeedback()
1107:Veno-Echo.cpp **** {
1108:Veno-Echo.cpp ****     //get pot values:
1109:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1110:Veno-Echo.cpp **** 
1111:Veno-Echo.cpp ****     static float crossfeedback_Pot_Last{};
1112:Veno-Echo.cpp **** 
1113:Veno-Echo.cpp ****     if (!shift) //default controls
1114:Veno-Echo.cpp ****     {   
1115:Veno-Echo.cpp ****         //update last values if shift off
1116:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
1117:Veno-Echo.cpp **** 
1118:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
1119:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1120:Veno-Echo.cpp **** 
1121:Veno-Echo.cpp ****     }
1122:Veno-Echo.cpp ****     else    //alternate controls
1123:Veno-Echo.cpp ****     {
1124:Veno-Echo.cpp ****         static float modRate{};
1125:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
1126:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 41


1127:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
1128:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1129:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1130:Veno-Echo.cpp ****         }
1131:Veno-Echo.cpp ****     }
1132:Veno-Echo.cpp **** }
1133:Veno-Echo.cpp **** 
1134:Veno-Echo.cpp **** void Update_filterXfade()
1135:Veno-Echo.cpp **** {
1136:Veno-Echo.cpp ****     //get pot values:
1137:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1138:Veno-Echo.cpp **** 
1139:Veno-Echo.cpp ****     static float filterXfade_Pot_Last{};
1140:Veno-Echo.cpp **** 
1141:Veno-Echo.cpp ****     if (!shift) //default controls
1142:Veno-Echo.cpp ****     {   
1143:Veno-Echo.cpp ****         //update last values if shift off
1144:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
1145:Veno-Echo.cpp **** 
1146:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
1147:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1148:Veno-Echo.cpp **** 
1149:Veno-Echo.cpp ****     }
1150:Veno-Echo.cpp ****     else    //alternate controls
1151:Veno-Echo.cpp ****     {
1152:Veno-Echo.cpp ****         //static float modRate{};
1153:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
1154:Veno-Echo.cpp ****         {
1155:Veno-Echo.cpp **** 
1156:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1157:Veno-Echo.cpp ****             {
1158:Veno-Echo.cpp ****                 PostFilters = false;
1159:Veno-Echo.cpp ****             }
1160:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1161:Veno-Echo.cpp ****             {
1162:Veno-Echo.cpp ****                 
1163:Veno-Echo.cpp ****                 PostFilters = true;
1164:Veno-Echo.cpp ****             }
1165:Veno-Echo.cpp ****             else
1166:Veno-Echo.cpp ****             {
1167:Veno-Echo.cpp ****               //do nothing
1168:Veno-Echo.cpp ****             }
1169:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1170:Veno-Echo.cpp ****         }
1171:Veno-Echo.cpp ****     }
1172:Veno-Echo.cpp **** }
1173:Veno-Echo.cpp **** 
1174:Veno-Echo.cpp **** void GetModCV()
1175:Veno-Echo.cpp **** {
1176:Veno-Echo.cpp ****     //get modulation CV input
1177:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1178:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1179:Veno-Echo.cpp **** }
1180:Veno-Echo.cpp **** 
1181:Veno-Echo.cpp **** void Update_Mod()
1182:Veno-Echo.cpp **** {    
1183:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 42


1184:Veno-Echo.cpp ****     static float modulation_CV{};
1185:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1186:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1187:Veno-Echo.cpp ****     //calculate InternalMod
1188:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1189:Veno-Echo.cpp ****     //apply modulation to delay lines
1190:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1191:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1192:Veno-Echo.cpp **** }
1193:Veno-Echo.cpp **** 
1194:Veno-Echo.cpp **** void UpdateClock()
1195:Veno-Echo.cpp **** {
1196:Veno-Echo.cpp ****     static int divCounter{};
1197:Veno-Echo.cpp ****     ClockIn.Debounce();
1198:Veno-Echo.cpp **** 
1199:Veno-Echo.cpp ****     //if clock in pulse received
1200:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1201:Veno-Echo.cpp ****     {   
1202:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1203:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1204:Veno-Echo.cpp ****         if(divCounter == 0)
1205:Veno-Echo.cpp ****         {
1206:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
1207:Veno-Echo.cpp ****             {
1208:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1209:Veno-Echo.cpp ****                 if(syncMode)
1210:Veno-Echo.cpp ****                 {
1211:Veno-Echo.cpp ****                     if(div_L <= UNITY)
1212:Veno-Echo.cpp ****                     {
1213:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
1214:Veno-Echo.cpp ****                     }
1215:Veno-Echo.cpp **** 
1216:Veno-Echo.cpp ****                     if(div_R <= UNITY)
1217:Veno-Echo.cpp ****                     {
1218:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
1219:Veno-Echo.cpp ****                     }
1220:Veno-Echo.cpp ****                 }
1221:Veno-Echo.cpp ****             }
1222:Veno-Echo.cpp ****         }
1223:Veno-Echo.cpp ****     }
1224:Veno-Echo.cpp ****     
1225:Veno-Echo.cpp **** }
1226:Veno-Echo.cpp **** 
1227:Veno-Echo.cpp **** void Update_Buttons()
1228:Veno-Echo.cpp **** {  
1229:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1230:Veno-Echo.cpp ****     static uint32_t resetTime{};
1231:Veno-Echo.cpp ****     static int buttonstate{};
1232:Veno-Echo.cpp **** 
1233:Veno-Echo.cpp ****     Rev_L_sw.update();
1234:Veno-Echo.cpp ****     Rev_R_sw.update();
1235:Veno-Echo.cpp ****     LPF_sw.update();
1236:Veno-Echo.cpp ****     HPF_sw.update();
1237:Veno-Echo.cpp ****     Tap_Button.update();
1238:Veno-Echo.cpp **** 
1239:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1240:Veno-Echo.cpp ****     ReverseGateR.Debounce();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 43


1241:Veno-Echo.cpp ****     //TapButton.Debounce();
1242:Veno-Echo.cpp ****     Sync.Debounce();
1243:Veno-Echo.cpp ****     ClockIn.Debounce();
1244:Veno-Echo.cpp ****     //gate inputs
1245:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1246:Veno-Echo.cpp ****     {
1247:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1248:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1249:Veno-Echo.cpp ****     }
1250:Veno-Echo.cpp **** 
1251:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1252:Veno-Echo.cpp ****     {
1253:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1254:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1255:Veno-Echo.cpp ****     }
1256:Veno-Echo.cpp **** 
1257:Veno-Echo.cpp ****     //buttons
1258:Veno-Echo.cpp **** 
1259:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1260:Veno-Echo.cpp ****     {
1261:Veno-Echo.cpp ****         buttonstate += 1;
1262:Veno-Echo.cpp ****         if (buttonstate == 3)
1263:Veno-Echo.cpp ****         {
1264:Veno-Echo.cpp ****             resetTime = System::GetNow();
1265:Veno-Echo.cpp ****         }
1266:Veno-Echo.cpp ****     }
1267:Veno-Echo.cpp **** 
1268:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1269:Veno-Echo.cpp ****     {
1270:Veno-Echo.cpp ****         buttonstate -= 1;
1271:Veno-Echo.cpp ****     }
1272:Veno-Echo.cpp **** 
1273:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1274:Veno-Echo.cpp ****     {
1275:Veno-Echo.cpp ****         buttonstate += 1;
1276:Veno-Echo.cpp ****         if (buttonstate == 3)
1277:Veno-Echo.cpp ****         {
1278:Veno-Echo.cpp ****             resetTime = System::GetNow();
1279:Veno-Echo.cpp ****         }
1280:Veno-Echo.cpp ****     }
1281:Veno-Echo.cpp **** 
1282:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1283:Veno-Echo.cpp ****     {
1284:Veno-Echo.cpp ****         buttonstate -= 1;
1285:Veno-Echo.cpp ****     }
1286:Veno-Echo.cpp **** 
1287:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1288:Veno-Echo.cpp ****     {
1289:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1290:Veno-Echo.cpp ****         {
1291:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1292:Veno-Echo.cpp ****         }
1293:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1294:Veno-Echo.cpp ****         
1295:Veno-Echo.cpp ****         if(syncMode)
1296:Veno-Echo.cpp ****         {
1297:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 44


1298:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1299:Veno-Echo.cpp ****         }
1300:Veno-Echo.cpp **** 
1301:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1302:Veno-Echo.cpp ****         buttonstate += 1;
1303:Veno-Echo.cpp ****         
1304:Veno-Echo.cpp ****         if (buttonstate == 3)
1305:Veno-Echo.cpp ****         {
1306:Veno-Echo.cpp ****             resetTime = System::GetNow();
1307:Veno-Echo.cpp ****         }
1308:Veno-Echo.cpp **** 
1309:Veno-Echo.cpp ****     }
1310:Veno-Echo.cpp **** 
1311:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1312:Veno-Echo.cpp ****     {
1313:Veno-Echo.cpp ****         shift = false;
1314:Veno-Echo.cpp ****         buttonstate -= 1;
1315:Veno-Echo.cpp ****         mute = false;
1316:Veno-Echo.cpp ****     }
1317:Veno-Echo.cpp **** 
1318:Veno-Echo.cpp ****     if (Tap_Button.getState())
1319:Veno-Echo.cpp ****     {
1320:Veno-Echo.cpp ****         //if ( (System::GetNow() - shiftTime) > shiftWait)
1321:Veno-Echo.cpp ****         //{
1322:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1323:Veno-Echo.cpp ****         //} 
1324:Veno-Echo.cpp ****     }
1325:Veno-Echo.cpp **** 
1326:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1327:Veno-Echo.cpp ****     {
1328:Veno-Echo.cpp ****         /*
1329:Veno-Echo.cpp ****             if(!save_flag)
1330:Veno-Echo.cpp ****             {
1331:Veno-Echo.cpp ****                 save_flag = true; 
1332:Veno-Echo.cpp ****             }
1333:Veno-Echo.cpp ****         */
1334:Veno-Echo.cpp **** 
1335:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1336:Veno-Echo.cpp ****             {
1337:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1338:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1339:Veno-Echo.cpp ****                 ResetAllLEDs();
1340:Veno-Echo.cpp ****                 //don't let reset or shift update
1341:Veno-Echo.cpp ****                 shift = false;
1342:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1343:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1344:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1345:Veno-Echo.cpp ****             }
1346:Veno-Echo.cpp ****     } 
1347:Veno-Echo.cpp **** 
1348:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1349:Veno-Echo.cpp **** 
1350:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
1351:Veno-Echo.cpp ****     {
1352:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1353:Veno-Echo.cpp ****         //delayL.tempoled.resetPhase();
1354:Veno-Echo.cpp ****         //delayR.tempoled.resetPhase();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 45


1355:Veno-Echo.cpp ****         delayL_flag = true;
1356:Veno-Echo.cpp ****         delayR_flag = true;
1357:Veno-Echo.cpp ****     }
1358:Veno-Echo.cpp **** 
1359:Veno-Echo.cpp **** }
1360:Veno-Echo.cpp **** 
1361:Veno-Echo.cpp **** void Update_BaseTempoLED()
1362:Veno-Echo.cpp **** {
1363:Veno-Echo.cpp ****     tempoLED_BASE.update();
1364:Veno-Echo.cpp **** 
1365:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
1366:Veno-Echo.cpp ****     {
1367:Veno-Echo.cpp ****         if(delayL_flag) //if left delay time change flag set
1368:Veno-Echo.cpp ****         {
1369:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1370:Veno-Echo.cpp ****             delayL_flag = false;
1371:Veno-Echo.cpp ****         }
1372:Veno-Echo.cpp **** 
1373:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
1374:Veno-Echo.cpp ****         {
1375:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1376:Veno-Echo.cpp ****             delayR_flag = false;
1377:Veno-Echo.cpp ****         }
1378:Veno-Echo.cpp **** 
1379:Veno-Echo.cpp ****     }
1380:Veno-Echo.cpp **** }
1381:Veno-Echo.cpp **** 
1382:Veno-Echo.cpp **** //input a float (range 0 to 1) and address of TempoDivs to update
1383:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div)
1384:Veno-Echo.cpp **** {
1385:Veno-Echo.cpp **** 
1386:Veno-Echo.cpp ****     float retVal{};
1387:Veno-Echo.cpp **** 
1388:Veno-Echo.cpp ****     if (input < 0.0909f)
1389:Veno-Echo.cpp ****     {
1390:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
1391:Veno-Echo.cpp ****         *div = DIV6;
1392:Veno-Echo.cpp ****     }
1393:Veno-Echo.cpp **** 
1394:Veno-Echo.cpp ****     else if (input < 0.1818f)
1395:Veno-Echo.cpp ****     {
1396:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
1397:Veno-Echo.cpp ****        *div = DIV5;
1398:Veno-Echo.cpp ****     }
1399:Veno-Echo.cpp **** 
1400:Veno-Echo.cpp ****     else if (input < 0.2727f)
1401:Veno-Echo.cpp ****     {
1402:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
1403:Veno-Echo.cpp ****         *div = DIV4;
1404:Veno-Echo.cpp ****     }
1405:Veno-Echo.cpp **** 
1406:Veno-Echo.cpp ****     else if (input < 0.3636f)
1407:Veno-Echo.cpp ****     {
1408:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
1409:Veno-Echo.cpp ****         *div = DIV3;
1410:Veno-Echo.cpp ****     }
1411:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 46


1412:Veno-Echo.cpp ****     else if (input < 0.4545f)
1413:Veno-Echo.cpp ****     {
1414:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
1415:Veno-Echo.cpp ****         *div = DIV2;
1416:Veno-Echo.cpp ****     }
1417:Veno-Echo.cpp **** 
1418:Veno-Echo.cpp ****     else if (input <  0.5455f)
1419:Veno-Echo.cpp ****     {
1420:Veno-Echo.cpp ****         retVal = (1.0f);
1421:Veno-Echo.cpp ****         *div = UNITY;
1422:Veno-Echo.cpp ****     }
1423:Veno-Echo.cpp **** 
1424:Veno-Echo.cpp ****     else if (input < 0.6364f)
1425:Veno-Echo.cpp ****     {
1426:Veno-Echo.cpp ****         retVal = 2.0f;
1427:Veno-Echo.cpp ****         *div = MULT2;
1428:Veno-Echo.cpp ****     }
1429:Veno-Echo.cpp **** 
1430:Veno-Echo.cpp ****     else if (input < 0.7273f)
1431:Veno-Echo.cpp ****     {
1432:Veno-Echo.cpp ****         retVal = 3.0f;
1433:Veno-Echo.cpp ****         *div = MULT3;
1434:Veno-Echo.cpp ****     }
1435:Veno-Echo.cpp **** 
1436:Veno-Echo.cpp ****     else if (input < 0.8182f)
1437:Veno-Echo.cpp ****     {
1438:Veno-Echo.cpp ****         retVal = 4.0f;
1439:Veno-Echo.cpp ****         *div = MULT4;
1440:Veno-Echo.cpp ****     }
1441:Veno-Echo.cpp ****     
1442:Veno-Echo.cpp ****     else if (input < 0.9091f)
1443:Veno-Echo.cpp ****     {
1444:Veno-Echo.cpp ****         retVal = 5.0f;
1445:Veno-Echo.cpp ****         *div = MULT5;
1446:Veno-Echo.cpp ****     }
1447:Veno-Echo.cpp **** 
1448:Veno-Echo.cpp ****     else if (input <= 1.0f)
1449:Veno-Echo.cpp ****     {
1450:Veno-Echo.cpp ****        retVal = 6.0f; 
1451:Veno-Echo.cpp ****        *div = MULT6;
1452:Veno-Echo.cpp ****     }
1453:Veno-Echo.cpp ****     else
1454:Veno-Echo.cpp ****     {
1455:Veno-Echo.cpp ****         retVal = 1.0f; 
1456:Veno-Echo.cpp ****        *div = UNITY;
1457:Veno-Echo.cpp ****     }
1458:Veno-Echo.cpp ****     
1459:Veno-Echo.cpp **** return retVal;
1460:Veno-Echo.cpp **** 
1461:Veno-Echo.cpp **** }
1462:Veno-Echo.cpp **** 
1463:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
1464:Veno-Echo.cpp **** {
1465:Veno-Echo.cpp ****     float retVal{};
1466:Veno-Echo.cpp ****     switch(ratio)
1467:Veno-Echo.cpp ****     {
1468:Veno-Echo.cpp ****         case QUARTER:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 47


1469:Veno-Echo.cpp ****         retVal = 1.0f;
1470:Veno-Echo.cpp ****         break;
1471:Veno-Echo.cpp **** 
1472:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1473:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
1474:Veno-Echo.cpp ****         break;
1475:Veno-Echo.cpp **** 
1476:Veno-Echo.cpp ****         case EIGHT:
1477:Veno-Echo.cpp ****         retVal = 2.0f;
1478:Veno-Echo.cpp ****         break;
1479:Veno-Echo.cpp **** 
1480:Veno-Echo.cpp ****         case TWELVE:
1481:Veno-Echo.cpp ****         retVal = 3.0f;
1482:Veno-Echo.cpp ****         break;
1483:Veno-Echo.cpp **** 
1484:Veno-Echo.cpp ****         default:
1485:Veno-Echo.cpp ****         retVal = 1.0f;
1486:Veno-Echo.cpp ****         break;
1487:Veno-Echo.cpp ****     }
1488:Veno-Echo.cpp **** 
1489:Veno-Echo.cpp **** return retVal;
1490:Veno-Echo.cpp **** }
1491:Veno-Echo.cpp **** 
1492:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1493:Veno-Echo.cpp **** {
1494:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1495:Veno-Echo.cpp ****     {
1496:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1497:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1498:Veno-Echo.cpp ****     }
1499:Veno-Echo.cpp ****     else
1500:Veno-Echo.cpp ****     {
1501:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1502:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1503:Veno-Echo.cpp ****     }
1504:Veno-Echo.cpp **** 
1505:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1506:Veno-Echo.cpp ****     {
1507:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1508:Veno-Echo.cpp ****     }
1509:Veno-Echo.cpp ****     else
1510:Veno-Echo.cpp ****     {
1511:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1512:Veno-Echo.cpp ****     }
1513:Veno-Echo.cpp **** 
1514:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1515:Veno-Echo.cpp ****     {
1516:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1517:Veno-Echo.cpp ****     }
1518:Veno-Echo.cpp ****     else
1519:Veno-Echo.cpp ****     {
1520:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1521:Veno-Echo.cpp ****     }
1522:Veno-Echo.cpp **** 
1523:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1524:Veno-Echo.cpp ****     {
1525:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 48


1526:Veno-Echo.cpp ****     }
1527:Veno-Echo.cpp ****     else
1528:Veno-Echo.cpp ****     {
1529:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1530:Veno-Echo.cpp ****     }
1531:Veno-Echo.cpp **** 
1532:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1533:Veno-Echo.cpp ****     {
1534:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1535:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1536:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1537:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1538:Veno-Echo.cpp ****     }
1539:Veno-Echo.cpp ****     else
1540:Veno-Echo.cpp ****     {
1541:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1542:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1543:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1544:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1545:Veno-Echo.cpp ****     }
1546:Veno-Echo.cpp ****     
1547:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1548:Veno-Echo.cpp ****     {
1549:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1550:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1551:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1552:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1553:Veno-Echo.cpp ****     }
1554:Veno-Echo.cpp ****     else
1555:Veno-Echo.cpp ****     {
1556:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1557:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1558:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1559:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1560:Veno-Echo.cpp **** 
1561:Veno-Echo.cpp ****     }
1562:Veno-Echo.cpp **** 
1563:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1564:Veno-Echo.cpp ****     {
1565:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1566:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1567:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1568:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1569:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1570:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1571:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1572:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1573:Veno-Echo.cpp ****     }
1574:Veno-Echo.cpp **** 
1575:Veno-Echo.cpp ****     else
1576:Veno-Echo.cpp ****     {
1577:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1578:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1579:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1580:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1581:Veno-Echo.cpp ****     }
1582:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 49


1583:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1584:Veno-Echo.cpp ****     {
1585:Veno-Echo.cpp ****         PostFilters = false;
1586:Veno-Echo.cpp ****     }
1587:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1588:Veno-Echo.cpp ****     {
1589:Veno-Echo.cpp ****         PostFilters = true;
1590:Veno-Echo.cpp ****     }
1591:Veno-Echo.cpp ****     else
1592:Veno-Echo.cpp ****     {
1593:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1594:Veno-Echo.cpp ****     }
1595:Veno-Echo.cpp **** 
1596:Veno-Echo.cpp **** }
1597:Veno-Echo.cpp **** 
1598:Veno-Echo.cpp **** void TurnOnAllLEDs()
1599:Veno-Echo.cpp **** {
1600:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1601:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1602:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1603:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1604:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1605:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1606:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1607:Veno-Echo.cpp **** }
1608:Veno-Echo.cpp **** 
1609:Veno-Echo.cpp **** void ResetAllLEDs()
1610:Veno-Echo.cpp **** {
1611:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1612:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1613:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1614:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1615:Veno-Echo.cpp ****     {
1616:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1617:Veno-Echo.cpp ****     }
1618:Veno-Echo.cpp ****     else
1619:Veno-Echo.cpp ****     {
1620:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1621:Veno-Echo.cpp ****     }
1622:Veno-Echo.cpp **** 
1623:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1624:Veno-Echo.cpp ****     {
1625:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1626:Veno-Echo.cpp ****     }
1627:Veno-Echo.cpp ****     else
1628:Veno-Echo.cpp ****     {
1629:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1630:Veno-Echo.cpp ****     }
1631:Veno-Echo.cpp ****     
1632:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1633:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1634:Veno-Echo.cpp **** }
1635:Veno-Echo.cpp **** 
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1637:Veno-Echo.cpp **** {
1638:Veno-Echo.cpp ****     float returnval{};
1639:Veno-Echo.cpp ****     if (input > limit)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 50


1640:Veno-Echo.cpp ****         returnval = limit;
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1643:Veno-Echo.cpp ****     else
1644:Veno-Echo.cpp ****         returnval = input;
1645:Veno-Echo.cpp **** 
1646:Veno-Echo.cpp ****     return returnval;   
1647:Veno-Echo.cpp **** }
1648:Veno-Echo.cpp **** 
1649:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
1650:Veno-Echo.cpp **** {
1651:Veno-Echo.cpp ****     float output{};
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
1653:Veno-Echo.cpp **** 
1654:Veno-Echo.cpp ****     if(output < 0.0f)
1655:Veno-Echo.cpp ****     {
1656:Veno-Echo.cpp ****         output = 0.0f;
1657:Veno-Echo.cpp ****     }
1658:Veno-Echo.cpp **** 
1659:Veno-Echo.cpp ****     if(output > 1.0f)
1660:Veno-Echo.cpp ****     {
1661:Veno-Echo.cpp ****         output = 1.0f;
1662:Veno-Echo.cpp ****     }
1663:Veno-Echo.cpp **** 
1664:Veno-Echo.cpp ****     return output;
1665:Veno-Echo.cpp **** }
1666:Veno-Echo.cpp **** 
1667:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 437              		.loc 19 1667 13 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
1668:Veno-Echo.cpp **** {
1669:Veno-Echo.cpp ****     pickupState retval{};
1670:Veno-Echo.cpp **** 
1671:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
1672:Veno-Echo.cpp ****     {
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
1674:Veno-Echo.cpp ****         {
1675:Veno-Echo.cpp ****             retval = BELOW;
1676:Veno-Echo.cpp ****         }
1677:Veno-Echo.cpp ****         
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
1679:Veno-Echo.cpp ****         {
1680:Veno-Echo.cpp ****             retval = ABOVE;
1681:Veno-Echo.cpp ****         }
1682:Veno-Echo.cpp **** 
1683:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
1684:Veno-Echo.cpp ****         {
1685:Veno-Echo.cpp ****             retval = PICKEDUP;
1686:Veno-Echo.cpp ****         }
1687:Veno-Echo.cpp ****     }
1688:Veno-Echo.cpp **** 
1689:Veno-Echo.cpp ****     else    //not a recent shift change
1690:Veno-Echo.cpp ****     {
1691:Veno-Echo.cpp ****         switch(lastState)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 51


 442              		.loc 19 1691 9 view .LVU50
 443 0000 0128     		cmp	r0, #1
 444 0002 04D0     		beq	.L17
 445 0004 0228     		cmp	r0, #2
 446 0006 01D0     		beq	.L18
 447 0008 68B1     		cbz	r0, .L23
 448 000a 0020     		movs	r0, #0
 449              	.LVL15:
 450              	.L18:
1692:Veno-Echo.cpp ****         {
1693:Veno-Echo.cpp ****             case BELOW:
1694:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
1695:Veno-Echo.cpp ****                 retval = PICKEDUP;
1696:Veno-Echo.cpp ****             else
1697:Veno-Echo.cpp ****                 retval = lastState;
1698:Veno-Echo.cpp ****             break;
1699:Veno-Echo.cpp **** 
1700:Veno-Echo.cpp ****             case ABOVE:
1701:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
1702:Veno-Echo.cpp ****                 retval = PICKEDUP;
1703:Veno-Echo.cpp ****             else
1704:Veno-Echo.cpp ****                 retval = lastState;
1705:Veno-Echo.cpp ****             break;
1706:Veno-Echo.cpp ****             case PICKEDUP:
1707:Veno-Echo.cpp ****                 retval = lastState;
1708:Veno-Echo.cpp ****             break;
1709:Veno-Echo.cpp ****         }
1710:Veno-Echo.cpp ****     }
1711:Veno-Echo.cpp ****     
1712:Veno-Echo.cpp ****     return retval;
 451              		.loc 19 1712 5 view .LVU51
1713:Veno-Echo.cpp **** }...
 452              		.loc 19 1713 1 is_stmt 0 view .LVU52
 453 000c 7047     		bx	lr
 454              	.LVL16:
 455              	.L17:
1700:Veno-Echo.cpp ****             case ABOVE:
 456              		.loc 19 1700 13 is_stmt 1 view .LVU53
1701:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 457              		.loc 19 1701 13 view .LVU54
1701:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 458              		.loc 19 1701 35 is_stmt 0 view .LVU55
 459 000e DFED0C7A 		vldr.32	s15, .L24
 460 0012 70EEA70A 		vadd.f32	s1, s1, s15
 461              	.LVL17:
1701:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 462              		.loc 19 1701 13 view .LVU56
 463 0016 B4EEE00A 		vcmpe.f32	s0, s1
 464 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 465 001e 4CBF     		ite	mi
 466 0020 0220     		movmi	r0, #2
 467              	.LVL18:
1701:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 468              		.loc 19 1701 13 view .LVU57
 469 0022 0120     		movpl	r0, #1
 470 0024 7047     		bx	lr
 471              	.LVL19:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 52


 472              	.L23:
1693:Veno-Echo.cpp ****             case BELOW:
 473              		.loc 19 1693 13 is_stmt 1 view .LVU58
1694:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 474              		.loc 19 1694 13 view .LVU59
1694:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 475              		.loc 19 1694 35 is_stmt 0 view .LVU60
 476 0026 DFED067A 		vldr.32	s15, .L24
 477 002a 70EEE70A 		vsub.f32	s1, s1, s15
 478              	.LVL20:
1694:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 479              		.loc 19 1694 13 view .LVU61
 480 002e F4EEC00A 		vcmpe.f32	s1, s0
 481 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 482 0036 4CBF     		ite	mi
 483 0038 0220     		movmi	r0, #2
 484              	.LVL21:
1694:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 485              		.loc 19 1694 13 view .LVU62
 486 003a 0020     		movpl	r0, #0
 487 003c 7047     		bx	lr
 488              	.L25:
 489 003e 00BF     		.align	2
 490              	.L24:
 491 0040 0AD7A33B 		.word	1000593162
 492              		.cfi_endproc
 493              	.LFE4910:
 495              		.section	.text._Z10InitDelaysf,"ax",%progbits
 496              		.align	1
 497              		.p2align 2,,3
 498              		.global	_Z10InitDelaysf
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	_Z10InitDelaysf:
 505              	.LVL22:
 506              	.LFB4289:
 580:Veno-Echo.cpp **** {
 507              		.loc 19 580 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 16
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 583:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 511              		.loc 19 583 5 view .LVU64
 512              	.LBB756:
 513              	.LBI756:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 514              		.loc 17 56 10 view .LVU65
 515              	.LBB757:
 516              	.LBB758:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 517              		.loc 17 58 29 view .LVU66
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 53


 518 0000 624B     		ldr	r3, .L46
 519 0002 6349     		ldr	r1, .L46+4
 520              	.LBE758:
 521              	.LBE757:
 522              	.LBE756:
 580:Veno-Echo.cpp **** {
 523              		.loc 19 580 1 is_stmt 0 view .LVU67
 524 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 525              		.cfi_def_cfa_offset 20
 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0006 A3F18405 		sub	r5, r3, #132
 532 000a 85B0     		sub	sp, sp, #20
 533              		.cfi_def_cfa_offset 40
 534 000c 2846     		mov	r0, r5
 535              	.LVL23:
 536              	.L27:
 537              	.LBB763:
 538              	.LBB762:
 539              	.LBB759:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 540              		.loc 17 60 13 view .LVU68
 541 000e 0022     		movs	r2, #0
 542 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 543              		.loc 17 58 9 is_stmt 1 view .LVU69
  58:delayline_multitap.h ****         {
 544              		.loc 17 58 29 view .LVU70
 545 0014 8B42     		cmp	r3, r1
 546 0016 FAD1     		bne	.L27
 547              	.LBE759:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 548              		.loc 17 63 9 is_stmt 0 view .LVU71
 549 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 550              		.loc 17 64 9 view .LVU72
 551 001a 5E4C     		ldr	r4, .L46+8
 552 001c 0226     		movs	r6, #2
 553              	.LBB760:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 554              		.loc 17 66 21 view .LVU73
 555 001e 1346     		mov	r3, r2
 556              	.LBE760:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 557              		.loc 17 63 9 view .LVU74
 558 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 559              		.loc 17 64 9 view .LVU75
 560 0022 2E51     		str	r6, [r5, r4]
 561              	.LVL24:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 54


 562              	.LBB761:
 563              		.loc 17 66 31 is_stmt 1 view .LVU76
 564              	.L28:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 565              		.loc 17 68 13 is_stmt 0 view .LVU77
 566 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 567              		.loc 17 66 9 view .LVU78
 568 0026 0133     		adds	r3, r3, #1
 569              	.LVL25:
  69:delayline_multitap.h ****             frac_[i] = 0;
 570              		.loc 17 69 13 view .LVU79
 571 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 572              		.loc 17 68 13 view .LVU80
 573 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 574              		.loc 17 66 31 view .LVU81
 575 002e 0A68     		ldr	r2, [r1]
 576              		.loc 17 69 13 view .LVU82
 577 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 578              		.loc 17 66 9 is_stmt 1 view .LVU83
 579              	.LVL26:
  66:delayline_multitap.h ****         {
 580              		.loc 17 66 31 view .LVU84
 581 0032 9A42     		cmp	r2, r3
 582 0034 F6D8     		bhi	.L28
 583 0036 584B     		ldr	r3, .L46+12
 584              	.LVL27:
  66:delayline_multitap.h ****         {
 585              		.loc 17 66 31 is_stmt 0 view .LVU85
 586 0038 5849     		ldr	r1, .L46+16
 587 003a A3F18406 		sub	r6, r3, #132
 588 003e 3046     		mov	r0, r6
 589              	.LVL28:
 590              	.L29:
  66:delayline_multitap.h ****         {
 591              		.loc 17 66 31 view .LVU86
 592              	.LBE761:
 593              	.LBE762:
 594              	.LBE763:
 595              	.LBB764:
 596              	.LBB765:
 597              	.LBB766:
  60:delayline_multitap.h ****         }
 598              		.loc 17 60 13 view .LVU87
 599 0040 0022     		movs	r2, #0
 600 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 601              		.loc 17 58 9 is_stmt 1 view .LVU88
  58:delayline_multitap.h ****         {
 602              		.loc 17 58 29 view .LVU89
 603 0046 8B42     		cmp	r3, r1
 604 0048 FAD1     		bne	.L29
 605              	.LBE766:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 55


  63:delayline_multitap.h ****         num_heads_ = num_heads;
 606              		.loc 17 63 9 is_stmt 0 view .LVU90
 607 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 608              		.loc 17 64 9 view .LVU91
 609 004c 514C     		ldr	r4, .L46+8
 610 004e 0227     		movs	r7, #2
 611              	.LBB767:
  66:delayline_multitap.h ****         {
 612              		.loc 17 66 21 view .LVU92
 613 0050 1346     		mov	r3, r2
 614              	.LBE767:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 615              		.loc 17 63 9 view .LVU93
 616 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 617              		.loc 17 64 9 view .LVU94
 618 0054 3751     		str	r7, [r6, r4]
 619              	.LVL29:
 620              	.LBB768:
  66:delayline_multitap.h ****         {
 621              		.loc 17 66 31 is_stmt 1 view .LVU95
 622              	.L30:
  68:delayline_multitap.h ****             frac_[i] = 0;
 623              		.loc 17 68 13 is_stmt 0 view .LVU96
 624 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 625              		.loc 17 66 9 view .LVU97
 626 0058 0133     		adds	r3, r3, #1
 627              	.LVL30:
 628              		.loc 17 69 13 view .LVU98
 629 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 630              		.loc 17 68 13 view .LVU99
 631 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 632              		.loc 17 66 31 view .LVU100
 633 0060 0A68     		ldr	r2, [r1]
 634              		.loc 17 69 13 view .LVU101
 635 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 636              		.loc 17 66 9 is_stmt 1 view .LVU102
 637              	.LVL31:
  66:delayline_multitap.h ****         {
 638              		.loc 17 66 31 view .LVU103
 639 0064 9A42     		cmp	r2, r3
 640 0066 F6D8     		bhi	.L30
 641              	.LVL32:
  66:delayline_multitap.h ****         {
 642              		.loc 17 66 31 is_stmt 0 view .LVU104
 643              	.LBE768:
 644              	.LBE765:
 645              	.LBE764:
 587:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 646              		.loc 19 587 5 is_stmt 1 view .LVU105
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 647              		.loc 19 588 16 is_stmt 0 view .LVU106
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 56


 648 0068 4D4C     		ldr	r4, .L46+20
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 649              		.loc 19 590 16 view .LVU107
 650 006a 0820     		movs	r0, #8
 587:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 651              		.loc 19 587 16 view .LVU108
 652 006c 4D4F     		ldr	r7, .L46+24
 653 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 654 0072 3D60     		str	r5, [r7]
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 655              		.loc 19 588 5 is_stmt 1 view .LVU109
 656              	.LBB769:
 657              	.LBB770:
 658              	.LBB771:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 659              		.loc 18 51 9 is_stmt 0 view .LVU110
 660 0074 46F2A815 		movw	r5, #25000
 661              	.LBE771:
 662              	.LBE770:
 663              	.LBE769:
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 664              		.loc 19 588 16 view .LVU111
 665 0078 2660     		str	r6, [r4]
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 666              		.loc 19 590 5 is_stmt 1 view .LVU112
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 667              		.loc 19 590 16 is_stmt 0 view .LVU113
 668 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 669              	.LVL33:
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 670              		.loc 19 590 16 view .LVU114
 671 007e 0346     		mov	r3, r0	@ movhi
 672 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 673 0084 3846     		mov	r0, r7
 674 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 675 008a 0299     		ldr	r1, [sp, #8]
 676 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 677              	.LVL34:
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 678              		.loc 19 591 5 is_stmt 1 view .LVU115
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 679              		.loc 19 591 16 is_stmt 0 view .LVU116
 680 0090 0920     		movs	r0, #9
 681 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 682              	.LVL35:
 683 0096 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 57


 684 0098 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 685 009c 2046     		mov	r0, r4
 686 009e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 687 00a2 0399     		ldr	r1, [sp, #12]
 688 00a4 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 689              	.LVL36:
 593:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 690              		.loc 19 593 5 is_stmt 1 view .LVU117
 593:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 691              		.loc 19 593 24 is_stmt 0 view .LVU118
 692 00a8 9FED3F0A 		vldr.32	s0, .L46+28
 693 00ac 3846     		mov	r0, r7
 694 00ae FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 695              	.LVL37:
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 696              		.loc 19 594 5 is_stmt 1 view .LVU119
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 697              		.loc 19 594 24 is_stmt 0 view .LVU120
 698 00b2 2046     		mov	r0, r4
 699              	.LBB783:
 700              	.LBB778:
 701              	.LBB773:
 702              		.loc 18 51 9 view .LVU121
 703 00b4 3D4C     		ldr	r4, .L46+32
 704              	.LBE773:
 705              	.LBE778:
 706              	.LBE783:
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 707              		.loc 19 594 24 view .LVU122
 708 00b6 9FED3C0A 		vldr.32	s0, .L46+28
 709 00ba FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 710              	.LVL38:
 597:Veno-Echo.cpp ****     delMemsL_REV.Init();
 711              		.loc 19 597 5 is_stmt 1 view .LVU123
 712              	.LBB784:
 713              	.LBI769:
  42:delayline_reverse.h ****     { 
 714              		.loc 18 42 10 view .LVU124
 715              	.LBB779:
 716              	.LBI770:
  48:delayline_reverse.h ****     {
 717              		.loc 18 48 10 view .LVU125
 718              	.LBB774:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 719              		.loc 18 52 9 is_stmt 0 view .LVU126
 720 00be 3C4A     		ldr	r2, .L46+36
 721 00c0 45F6C050 		movw	r0, #24000
 722 00c4 04F11803 		add	r3, r4, #24
 723 00c8 3A49     		ldr	r1, .L46+40
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 724              		.loc 18 51 9 view .LVU127
 725 00ca 2561     		str	r5, [r4, #16]
 726              		.loc 18 52 9 view .LVU128
 727 00cc A050     		str	r0, [r4, r2]
 728              	.LVL39:
 729              	.LBB772:
  53:delayline_reverse.h ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 58


  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 730              		.loc 18 54 29 is_stmt 1 view .LVU129
 731              	.L31:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 732              		.loc 18 56 13 is_stmt 0 view .LVU130
 733 00ce 0022     		movs	r2, #0
 734 00d0 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 735              		.loc 18 54 9 is_stmt 1 view .LVU131
  54:delayline_reverse.h ****         {
 736              		.loc 18 54 29 view .LVU132
 737 00d4 8B42     		cmp	r3, r1
 738 00d6 FAD1     		bne	.L31
 739              	.LBE772:
 740              	.LBE774:
 741              	.LBE779:
 742              	.LBE784:
 743              	.LBB785:
 744              	.LBB786:
 745              	.LBB787:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 746              		.loc 18 51 9 is_stmt 0 view .LVU133
 747 00d8 3748     		ldr	r0, .L46+44
 748 00da 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 749              		.loc 18 52 9 view .LVU134
 750 00de 344D     		ldr	r5, .L46+36
 751 00e0 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 752              		.loc 18 51 9 view .LVU135
 753 00e4 0161     		str	r1, [r0, #16]
 754              	.LBE787:
 755              	.LBE786:
 756              	.LBE785:
 757              	.LBB810:
 758              	.LBB780:
 759              	.LBB775:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 760              		.loc 18 58 9 view .LVU136
 761 00e6 0021     		movs	r1, #0
 762              	.LBE775:
 763              	.LBE780:
 764              	.LBE810:
 765              	.LBB811:
 766              	.LBB800:
 767              	.LBB790:
  52:delayline_reverse.h ****         
 768              		.loc 18 52 9 view .LVU137
 769 00e8 4651     		str	r6, [r0, r5]
 770              	.LBE790:
 771              	.LBE800:
 772              	.LBE811:
 773              	.LBB812:
 774              	.LBB781:
 775              	.LBB776:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 59


  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 776              		.loc 18 62 9 view .LVU138
 777 00ea 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 778              		.loc 18 64 9 view .LVU139
 779 00ec 334E     		ldr	r6, .L46+48
 780 00ee 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 781              		.loc 18 62 9 view .LVU140
 782 00f2 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 783              		.loc 18 60 9 view .LVU141
 784 00f4 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 785              		.loc 18 63 9 view .LVU142
 786 00f6 324D     		ldr	r5, .L46+52
  61:delayline_reverse.h ****         playinghead_ = false;
 787              		.loc 18 61 9 view .LVU143
 788 00f8 6161     		str	r1, [r4, #20]
 789              		.loc 18 64 9 view .LVU144
 790 00fa A155     		strb	r1, [r4, r6]
 791              	.LVL40:
 792              		.loc 18 64 9 view .LVU145
 793              	.LBE776:
 794              	.LBE781:
 795              	.LBE812:
 598:Veno-Echo.cpp ****     delMemsR_REV.Init();
 796              		.loc 19 598 5 is_stmt 1 view .LVU146
 797              	.LBB813:
 798              	.LBI785:
  42:delayline_reverse.h ****     { 
 799              		.loc 18 42 10 view .LVU147
 800              	.LBB801:
 801              	.LBI786:
  48:delayline_reverse.h ****     {
 802              		.loc 18 48 10 view .LVU148
 803              	.LBB791:
 804              	.LBB788:
  54:delayline_reverse.h ****         {
 805              		.loc 18 54 29 view .LVU149
 806              	.LBE788:
 807              	.LBE791:
 808              	.LBE801:
 809              	.LBE813:
 810              	.LBB814:
 811              	.LBB782:
 812              	.LBB777:
  63:delayline_reverse.h ****         fading_ = false;
 813              		.loc 18 63 9 is_stmt 0 view .LVU150
 814 00fc 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 815              		.loc 18 59 9 view .LVU151
 816 00fe C4E90111 		strd	r1, r1, [r4, #4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 60


 817 0102 3049     		ldr	r1, .L46+56
 818              	.LVL41:
 819              	.L32:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 820              		.loc 18 59 9 view .LVU152
 821              	.LBE777:
 822              	.LBE782:
 823              	.LBE814:
 824              	.LBB815:
 825              	.LBB802:
 826              	.LBB792:
 827              	.LBB789:
  56:delayline_reverse.h ****         }
 828              		.loc 18 56 13 view .LVU153
 829 0104 0022     		movs	r2, #0
 830 0106 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 831              		.loc 18 54 9 is_stmt 1 view .LVU154
  54:delayline_reverse.h ****         {
 832              		.loc 18 54 29 view .LVU155
 833 010a 8B42     		cmp	r3, r1
 834 010c FAD1     		bne	.L32
 835              	.LBE789:
 836              	.LBE792:
 837              	.LBE802:
 838              	.LBE815:
 601:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 839              		.loc 19 601 21 is_stmt 0 view .LVU156
 840 010e 2E49     		ldr	r1, .L46+60
 841              	.LBB816:
 842              	.LBB803:
 843              	.LBB793:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 844              		.loc 18 58 9 view .LVU157
 845 0110 0023     		movs	r3, #0
 846              	.LBE793:
 847              	.LBE803:
 848              	.LBE816:
 849              	.LBB817:
 850              	.LBB818:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 851              		.loc 19 70 15 view .LVU158
 852 0112 DFED2E6A 		vldr.32	s13, .L46+64
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 853              		.loc 19 70 28 view .LVU159
 854 0116 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 855              		.loc 19 70 53 view .LVU160
 856 011a 9FED2D6A 		vldr.32	s12, .L46+68
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 857              		.loc 19 70 15 view .LVU161
 858 011e 36EEE77A 		vsub.f32	s14, s13, s15
 859              	.LBE818:
 860              	.LBE817:
 861              	.LBB832:
 862              	.LBB804:
 863              	.LBB794:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 61


  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 864              		.loc 18 62 9 view .LVU162
 865 0122 2C4D     		ldr	r5, .L46+72
 866              	.LBE794:
 867              	.LBE804:
 868              	.LBE832:
 869              	.LBB833:
 870              	.LBB827:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 871              		.loc 19 70 53 view .LVU163
 872 0124 67EE867A 		vmul.f32	s15, s15, s12
 873              	.LBE827:
 874              	.LBE833:
 875              	.LBB834:
 876              	.LBB805:
 877              	.LBB795:
 878              		.loc 18 64 9 view .LVU164
 879 0128 244E     		ldr	r6, .L46+48
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 880              		.loc 18 62 9 view .LVU165
 881 012a 4355     		strb	r3, [r0, r5]
 882              	.LBE795:
 883              	.LBE805:
 884              	.LBE834:
 885              	.LBB835:
 886              	.LBB828:
 887              	.LBB819:
 888              	.LBB820:
 889              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 62


  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 890              		.loc 20 76 31 view .LVU166
 891 012c B0EEC77A 		vabs.f32	s14, s14
 892              	.LBE820:
 893              	.LBE819:
 894              	.LBE828:
 895              	.LBE835:
 896              	.LBB836:
 897              	.LBB806:
 898              	.LBB796:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 63


  63:delayline_reverse.h ****         fading_ = false;
 899              		.loc 18 63 9 view .LVU167
 900 0130 294D     		ldr	r5, .L46+76
  60:delayline_reverse.h ****         headDiff_ = 0;
 901              		.loc 18 60 9 view .LVU168
 902 0132 C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 903              		.loc 18 61 9 view .LVU169
 904 0134 4361     		str	r3, [r0, #20]
 905              	.LBE796:
 906              	.LBE806:
 907              	.LBE836:
 908              	.LBB837:
 909              	.LBB829:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 910              		.loc 19 70 9 view .LVU170
 911 0136 B4EEE77A 		vcmpe.f32	s14, s15
 912              	.LBE829:
 913              	.LBE837:
 914              	.LBB838:
 915              	.LBB807:
 916              	.LBB797:
 917              		.loc 18 64 9 view .LVU171
 918 013a 8355     		strb	r3, [r0, r6]
 919              	.LVL42:
 920              		.loc 18 64 9 view .LVU172
 921              	.LBE797:
 922              	.LBE807:
 923              	.LBE838:
 601:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 924              		.loc 19 601 5 is_stmt 1 view .LVU173
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 925              		.loc 19 602 5 view .LVU174
 601:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 926              		.loc 19 601 21 is_stmt 0 view .LVU175
 927 013c 0C60     		str	r4, [r1]
 928              	.LBB839:
 929              	.LBB808:
 930              	.LBB798:
  63:delayline_reverse.h ****         fading_ = false;
 931              		.loc 18 63 9 view .LVU176
 932 013e 2A60     		str	r2, [r5]	@ float
 933              	.LBE798:
 934              	.LBE808:
 935              	.LBE839:
 936              	.LBB840:
 937              	.LBB830:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 938              		.loc 19 70 9 view .LVU177
 939 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 940              	.LBE830:
 941              	.LBE840:
 942              	.LBB841:
 943              	.LBB809:
 944              	.LBB799:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 945              		.loc 18 59 9 view .LVU178
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 64


 946 0144 C0E90133 		strd	r3, r3, [r0, #4]
 947              	.LBE799:
 948              	.LBE809:
 949              	.LBE841:
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 950              		.loc 19 602 21 view .LVU179
 951 0148 244B     		ldr	r3, .L46+80
 952 014a 1860     		str	r0, [r3]
 605:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 953              		.loc 19 605 5 is_stmt 1 view .LVU180
 954              	.LVL43:
 955              	.LBB842:
 956              	.LBI817:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 957              		.loc 19 68 10 view .LVU181
 958              	.LBB831:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 959              		.loc 19 70 9 view .LVU182
 960              	.LBB822:
 961              	.LBI819:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 962              		.loc 20 75 3 view .LVU183
 963              	.LBB821:
 964              		.loc 20 76 5 view .LVU184
 965              		.loc 20 76 5 is_stmt 0 view .LVU185
 966              	.LBE821:
 967              	.LBE822:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 968              		.loc 19 70 9 view .LVU186
 969 014c 04DD     		ble	.L33
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 970              		.loc 19 73 13 is_stmt 1 view .LVU187
 971              	.LBB823:
 972              	.LBB824:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 973              		.loc 18 72 9 is_stmt 0 view .LVU188
 974 014e 244D     		ldr	r5, .L46+84
 975              	.LBE824:
 976              	.LBE823:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 977              		.loc 19 73 27 view .LVU189
 978 0150 C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 979              		.loc 19 74 13 is_stmt 1 view .LVU190
 980              	.LVL44:
 981              	.LBB826:
 982              	.LBI823:
  69:delayline_reverse.h ****     {
 983              		.loc 18 69 17 view .LVU191
 984              	.LBB825:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 65


  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 985              		.loc 18 71 9 is_stmt 0 view .LVU192
 986 0154 2260     		str	r2, [r4]	@ float
 987              		.loc 18 72 9 view .LVU193
 988 0156 2561     		str	r5, [r4, #16]
 989              	.LVL45:
 990              	.L33:
 991              		.loc 18 72 9 view .LVU194
 992              	.LBE825:
 993              	.LBE826:
 994              	.LBE831:
 995              	.LBE842:
 606:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 996              		.loc 19 606 5 is_stmt 1 view .LVU195
 997              	.LBB843:
 998              	.LBI843:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 999              		.loc 19 68 10 view .LVU196
 1000              	.LBB844:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1001              		.loc 19 70 9 view .LVU197
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1002              		.loc 19 70 28 is_stmt 0 view .LVU198
 1003 0158 D3ED017A 		vldr.32	s15, [r3, #4]
 1004              	.LVL46:
 1005              	.LBB845:
 1006              	.LBI845:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1007              		.loc 20 75 3 is_stmt 1 view .LVU199
 1008              	.LBB846:
 1009              		.loc 20 76 5 view .LVU200
 1010              		.loc 20 76 5 is_stmt 0 view .LVU201
 1011              	.LBE846:
 1012              	.LBE845:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1013              		.loc 19 70 15 view .LVU202
 1014 015c DFED1B6A 		vldr.32	s13, .L46+64
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1015              		.loc 19 70 53 view .LVU203
 1016 0160 9FED1B6A 		vldr.32	s12, .L46+68
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1017              		.loc 19 70 15 view .LVU204
 1018 0164 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1019              		.loc 19 70 53 view .LVU205
 1020 0168 67EE867A 		vmul.f32	s15, s15, s12
 1021              	.LBB848:
 1022              	.LBB847:
 1023              		.loc 20 76 31 view .LVU206
 1024 016c B0EEC77A 		vabs.f32	s14, s14
 1025              	.LBE847:
 1026              	.LBE848:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1027              		.loc 19 70 9 view .LVU207
 1028 0170 B4EEE77A 		vcmpe.f32	s14, s15
 1029 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1030 0178 05DD     		ble	.L26
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 66


  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 1031              		.loc 19 73 13 is_stmt 1 view .LVU208
 1032              	.LBB849:
 1033              	.LBB850:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1034              		.loc 18 71 9 is_stmt 0 view .LVU209
 1035 017a 0021     		movs	r1, #0
 1036              		.loc 18 72 9 view .LVU210
 1037 017c 184A     		ldr	r2, .L46+84
 1038              	.LBE850:
 1039              	.LBE849:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 1040              		.loc 19 73 27 view .LVU211
 1041 017e C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1042              		.loc 19 74 13 is_stmt 1 view .LVU212
 1043              	.LVL47:
 1044              	.LBB852:
 1045              	.LBI849:
  69:delayline_reverse.h ****     {
 1046              		.loc 18 69 17 view .LVU213
 1047              	.LBB851:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1048              		.loc 18 71 9 is_stmt 0 view .LVU214
 1049 0182 0160     		str	r1, [r0]	@ float
 1050              		.loc 18 72 9 view .LVU215
 1051 0184 0261     		str	r2, [r0, #16]
 1052              	.LVL48:
 1053              	.L26:
 1054              		.loc 18 72 9 view .LVU216
 1055              	.LBE851:
 1056              	.LBE852:
 1057              	.LBE844:
 1058              	.LBE843:
 608:Veno-Echo.cpp **** }
 1059              		.loc 19 608 1 view .LVU217
 1060 0186 05B0     		add	sp, sp, #20
 1061              		.cfi_def_cfa_offset 20
 1062              		@ sp needed
 1063 0188 F0BD     		pop	{r4, r5, r6, r7, pc}
 1064              	.L47:
 1065 018a 00BF     		.align	2
 1066              	.L46:
 1067 018c 84000000 		.word	delMemsL+132
 1068 0190 84786900 		.word	delMemsL+6912132
 1069 0194 84786900 		.word	6912132
 1070 0198 84000000 		.word	delMemsR+132
 1071 019c 84786900 		.word	delMemsR+6912132
 1072 01a0 00000000 		.word	.LANCHOR1
 1073 01a4 00000000 		.word	.LANCHOR0
 1074 01a8 0000FA43 		.word	1140457472
 1075 01ac 00000000 		.word	delMemsL_REV
 1076 01b0 189F2400 		.word	2400024
 1077 01b4 189F2400 		.word	delMemsL_REV+2400024
 1078 01b8 00000000 		.word	delMemsR_REV
 1079 01bc 249F2400 		.word	2400036
 1080 01c0 209F2400 		.word	delMemsL_REV+2400032
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 67


 1081 01c4 189F2400 		.word	delMemsR_REV+2400024
 1082 01c8 00000000 		.word	.LANCHOR2
 1083 01cc 00409C47 		.word	1201422336
 1084 01d0 0AD7A33B 		.word	1000593162
 1085 01d4 1C9F2400 		.word	2400028
 1086 01d8 209F2400 		.word	delMemsR_REV+2400032
 1087 01dc 00000000 		.word	.LANCHOR3
 1088 01e0 80380100 		.word	80000
 1089              		.cfi_endproc
 1090              	.LFE4289:
 1092              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1093              		.align	1
 1094              		.p2align 2,,3
 1095              		.global	_Z20Update_DelayTimeL_CVv
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1099              		.fpu fpv5-d16
 1101              	_Z20Update_DelayTimeL_CVv:
 1102              	.LFB4291:
 788:Veno-Echo.cpp **** {
 1103              		.loc 19 788 1 is_stmt 1 view -0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1107              		.loc 19 789 5 view .LVU219
 788:Veno-Echo.cpp **** {
 1108              		.loc 19 788 1 is_stmt 0 view .LVU220
 1109 0000 08B5     		push	{r3, lr}
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 3, -8
 1112              		.cfi_offset 14, -4
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1113              		.loc 19 789 36 view .LVU221
 1114 0002 0021     		movs	r1, #0
 1115 0004 0348     		ldr	r0, .L50
 1116 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1117              	.LVL49:
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1118              		.loc 19 789 19 view .LVU222
 1119 000a 034B     		ldr	r3, .L50+4
 1120 000c 83ED000A 		vstr.32	s0, [r3]
 790:Veno-Echo.cpp **** }
 1121              		.loc 19 790 1 view .LVU223
 1122 0010 08BD     		pop	{r3, pc}
 1123              	.L51:
 1124 0012 00BF     		.align	2
 1125              	.L50:
 1126 0014 18000000 		.word	.LANCHOR4+24
 1127 0018 00000000 		.word	.LANCHOR5
 1128              		.cfi_endproc
 1129              	.LFE4291:
 1131              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1132              		.align	1
 1133              		.p2align 2,,3
 1134              		.global	_Z20Update_DelayTimeR_CVv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 68


 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv5-d16
 1140              	_Z20Update_DelayTimeR_CVv:
 1141              	.LFB4293:
 852:Veno-Echo.cpp **** {
 1142              		.loc 19 852 1 is_stmt 1 view -0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 853:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1146              		.loc 19 853 5 view .LVU225
 852:Veno-Echo.cpp **** {
 1147              		.loc 19 852 1 is_stmt 0 view .LVU226
 1148 0000 08B5     		push	{r3, lr}
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 3, -8
 1151              		.cfi_offset 14, -4
 853:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1152              		.loc 19 853 36 view .LVU227
 1153 0002 0121     		movs	r1, #1
 1154 0004 0348     		ldr	r0, .L54
 1155 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1156              	.LVL50:
 853:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1157              		.loc 19 853 19 view .LVU228
 1158 000a 034B     		ldr	r3, .L54+4
 1159 000c 83ED000A 		vstr.32	s0, [r3]
 854:Veno-Echo.cpp **** }
 1160              		.loc 19 854 1 view .LVU229
 1161 0010 08BD     		pop	{r3, pc}
 1162              	.L55:
 1163 0012 00BF     		.align	2
 1164              	.L54:
 1165 0014 18000000 		.word	.LANCHOR4+24
 1166 0018 00000000 		.word	.LANCHOR6
 1167              		.cfi_endproc
 1168              	.LFE4293:
 1170              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 1171              		.align	1
 1172              		.p2align 2,,3
 1173              		.global	_Z19Update_feedbackL_CVv
 1174              		.syntax unified
 1175              		.thumb
 1176              		.thumb_func
 1177              		.fpu fpv5-d16
 1179              	_Z19Update_feedbackL_CVv:
 1180              	.LFB4295:
 914:Veno-Echo.cpp **** {
 1181              		.loc 19 914 1 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 915:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1185              		.loc 19 915 5 view .LVU231
 914:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 69


 1186              		.loc 19 914 1 is_stmt 0 view .LVU232
 1187 0000 08B5     		push	{r3, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 3, -8
 1190              		.cfi_offset 14, -4
 915:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1191              		.loc 19 915 35 view .LVU233
 1192 0002 0221     		movs	r1, #2
 1193 0004 0348     		ldr	r0, .L58
 1194 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1195              	.LVL51:
 915:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1196              		.loc 19 915 18 view .LVU234
 1197 000a 034B     		ldr	r3, .L58+4
 1198 000c 83ED000A 		vstr.32	s0, [r3]
 916:Veno-Echo.cpp **** }
 1199              		.loc 19 916 1 view .LVU235
 1200 0010 08BD     		pop	{r3, pc}
 1201              	.L59:
 1202 0012 00BF     		.align	2
 1203              	.L58:
 1204 0014 18000000 		.word	.LANCHOR4+24
 1205 0018 00000000 		.word	.LANCHOR7
 1206              		.cfi_endproc
 1207              	.LFE4295:
 1209              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 1210              		.align	1
 1211              		.p2align 2,,3
 1212              		.global	_Z16Update_feedbackLv
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1216              		.fpu fpv5-d16
 1218              	_Z16Update_feedbackLv:
 1219              	.LFB4296:
 918:Veno-Echo.cpp **** {
 1220              		.loc 19 918 1 is_stmt 1 view -0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 921:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1224              		.loc 19 921 5 view .LVU237
 921:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1225              		.loc 19 921 43 is_stmt 0 view .LVU238
 1226 0000 0122     		movs	r2, #1
 1227 0002 0721     		movs	r1, #7
 1228 0004 3448     		ldr	r0, .L70
 918:Veno-Echo.cpp **** {
 1229              		.loc 19 918 1 view .LVU239
 1230 0006 10B5     		push	{r4, lr}
 1231              		.cfi_def_cfa_offset 8
 1232              		.cfi_offset 4, -8
 1233              		.cfi_offset 14, -4
 921:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1234              		.loc 19 921 43 view .LVU240
 1235 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1236              	.LVL52:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 70


 1237              	.LBB853:
 924:Veno-Echo.cpp ****     if (!shift) //default controls
 1238              		.loc 19 924 9 view .LVU241
 1239 000c 334B     		ldr	r3, .L70+4
 1240              	.LBE853:
 921:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1241              		.loc 19 921 43 view .LVU242
 1242 000e F0EE407A 		vmov.f32	s15, s0
 1243              	.LVL53:
 922:Veno-Echo.cpp ****     static float feedbackL_Pot_Last{};
 1244              		.loc 19 922 5 is_stmt 1 view .LVU243
 924:Veno-Echo.cpp ****     if (!shift) //default controls
 1245              		.loc 19 924 5 view .LVU244
 1246              	.LBB871:
 1247 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1248 0014 7BBB     		cbnz	r3, .L61
 1249              	.LBB854:
 927:Veno-Echo.cpp ****         feedbackL_Pot_Last = feedbackL_Pot;
 1250              		.loc 19 927 9 view .LVU245
 929:Veno-Echo.cpp ****         float feedbackL_Target{scale(PotCVCombo(feedbackL_Pot,feedbackL_CV),0.0,maxFB,LINEAR)};  
 1251              		.loc 19 929 37 is_stmt 0 view .LVU246
 1252 0016 324A     		ldr	r2, .L70+8
 1253              	.LBB855:
 1254              	.LBB856:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1255              		.loc 19 1652 39 view .LVU247
 1256 0018 F7EE006A 		vmov.f32	s13, #1.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1257              		.loc 19 1652 49 view .LVU248
 1258 001c F6EE005A 		vmov.f32	s11, #5.0e-1
 1259              	.LBE856:
 1260              	.LBE855:
 927:Veno-Echo.cpp ****         feedbackL_Pot_Last = feedbackL_Pot;
 1261              		.loc 19 927 28 view .LVU249
 1262 0020 304B     		ldr	r3, .L70+12
 1263              	.LBB860:
 1264              	.LBB857:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1265              		.loc 19 1652 39 view .LVU250
 1266 0022 92ED007A 		vldr.32	s14, [r2]
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1267              		.loc 19 1652 12 view .LVU251
 1268 0026 B0EE006A 		vmov.f32	s12, #2.0e+0
 1269              	.LBE857:
 1270              	.LBE860:
 927:Veno-Echo.cpp ****         feedbackL_Pot_Last = feedbackL_Pot;
 1271              		.loc 19 927 28 view .LVU252
 1272 002a 83ED000A 		vstr.32	s0, [r3]
 929:Veno-Echo.cpp ****         float feedbackL_Target{scale(PotCVCombo(feedbackL_Pot,feedbackL_CV),0.0,maxFB,LINEAR)};  
 1273              		.loc 19 929 9 is_stmt 1 view .LVU253
 1274              	.LVL54:
 1275              	.LBB861:
 1276              	.LBI855:
1649:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1277              		.loc 19 1649 7 view .LVU254
 1278              	.LBB858:
1651:Veno-Echo.cpp ****     float output{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 71


 1279              		.loc 19 1651 5 view .LVU255
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1280              		.loc 19 1652 5 view .LVU256
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1281              		.loc 19 1652 39 is_stmt 0 view .LVU257
 1282 002e 36EEC77A 		vsub.f32	s14, s13, s14
 1283              	.LVL55:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1284              		.loc 19 1652 49 view .LVU258
 1285 0032 37EE657A 		vsub.f32	s14, s14, s11
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1286              		.loc 19 1652 12 view .LVU259
 1287 0036 E7EE067A 		vfma.f32	s15, s14, s12
 1288              	.LVL56:
1654:Veno-Echo.cpp ****     if(output < 0.0f)
 1289              		.loc 19 1654 5 is_stmt 1 view .LVU260
 1290 003a F5EEC07A 		vcmpe.f32	s15, #0
 1291 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1292 0042 46D4     		bmi	.L66
1659:Veno-Echo.cpp ****     if(output > 1.0f)
 1293              		.loc 19 1659 5 view .LVU261
1661:Veno-Echo.cpp ****         output = 1.0f;
 1294              		.loc 19 1661 16 is_stmt 0 view .LVU262
 1295 0044 F4EE667A 		vcmp.f32	s15, s13
 1296 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1297 004c 36FEA70A 		vselgt.f32	s0, s13, s15
 1298              	.LVL57:
 1299              	.L62:
1664:Veno-Echo.cpp ****     return output;
 1300              		.loc 19 1664 5 is_stmt 1 view .LVU263
1664:Veno-Echo.cpp ****     return output;
 1301              		.loc 19 1664 5 is_stmt 0 view .LVU264
 1302              	.LBE858:
 1303              	.LBE861:
 929:Veno-Echo.cpp ****         float feedbackL_Target{scale(PotCVCombo(feedbackL_Pot,feedbackL_CV),0.0,maxFB,LINEAR)};  
 1304              		.loc 19 929 37 view .LVU265
 1305 0050 B7EE041A 		vmov.f32	s2, #1.25e+0
 1306 0054 0020     		movs	r0, #0
 1307 0056 DFED240A 		vldr.32	s1, .L70+16
 1308 005a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1309              	.LVL58:
 930:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1310              		.loc 19 930 9 is_stmt 1 view .LVU266
 1311              	.LBB862:
 1312              	.LBI862:
 1313              		.file 21 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 72


  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 73


  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 74


 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 1314              		.loc 21 135 13 view .LVU267
 1315              	.LBB863:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 1316              		.loc 21 137 5 view .LVU268
 1317              		.loc 21 137 9 is_stmt 0 view .LVU269
 1318 005e 234B     		ldr	r3, .L70+20
 1319 0060 9FED237A 		vldr.32	s14, .L70+24
 1320 0064 D3ED007A 		vldr.32	s15, [r3]
 1321              		.loc 21 137 24 view .LVU270
 1322 0068 30EE670A 		vsub.f32	s0, s0, s15
 1323              	.LVL59:
 1324              		.loc 21 137 9 view .LVU271
 1325 006c E0EE077A 		vfma.f32	s15, s0, s14
 1326 0070 C3ED007A 		vstr.32	s15, [r3]
 1327              	.LVL60:
 1328              	.L60:
 1329              		.loc 21 137 9 view .LVU272
 1330              	.LBE863:
 1331              	.LBE862:
 1332              	.LBE854:
 1333              	.LBE871:
 945:Veno-Echo.cpp **** }
 1334              		.loc 19 945 1 view .LVU273
 1335 0074 10BD     		pop	{r4, pc}
 1336              	.LVL61:
 1337              	.L61:
 1338              	.LBB872:
 1339              	.LBB865:
 934:Veno-Echo.cpp ****         static float HPCutoff{};
 1340              		.loc 19 934 9 is_stmt 1 view .LVU274
 935:Veno-Echo.cpp ****         if (abs(feedbackL_Pot_Last - feedbackL_Pot) > altControlThresh)
 1341              		.loc 19 935 9 view .LVU275
 1342              	.LBB866:
 1343              	.LBI866:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1344              		.loc 20 75 3 view .LVU276
 1345              	.LBB867:
 1346              		.loc 20 76 5 view .LVU277
 1347              		.loc 20 76 5 is_stmt 0 view .LVU278
 1348              	.LBE867:
 1349              	.LBE866:
 935:Veno-Echo.cpp ****         if (abs(feedbackL_Pot_Last - feedbackL_Pot) > altControlThresh)
 1350              		.loc 19 935 16 view .LVU279
 1351 0076 1B4B     		ldr	r3, .L70+12
 935:Veno-Echo.cpp ****         if (abs(feedbackL_Pot_Last - feedbackL_Pot) > altControlThresh)
 1352              		.loc 19 935 9 view .LVU280
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 75


 1353 0078 DFED1E6A 		vldr.32	s13, .L70+28
 935:Veno-Echo.cpp ****         if (abs(feedbackL_Pot_Last - feedbackL_Pot) > altControlThresh)
 1354              		.loc 19 935 16 view .LVU281
 1355 007c 93ED007A 		vldr.32	s14, [r3]
 1356 0080 77EE407A 		vsub.f32	s15, s14, s0
 1357              	.LBB869:
 1358              	.LBB868:
 1359              		.loc 20 76 31 view .LVU282
 1360 0084 F0EEE77A 		vabs.f32	s15, s15
 1361              	.LBE868:
 1362              	.LBE869:
 935:Veno-Echo.cpp ****         if (abs(feedbackL_Pot_Last - feedbackL_Pot) > altControlThresh)
 1363              		.loc 19 935 9 view .LVU283
 1364 0088 F4EEE67A 		vcmpe.f32	s15, s13
 1365 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1366 0090 F0DD     		ble	.L60
 937:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1367              		.loc 19 937 13 is_stmt 1 view .LVU284
 937:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1368              		.loc 19 937 29 is_stmt 0 view .LVU285
 1369 0092 9FED191A 		vldr.32	s2, .L70+32
 1370 0096 0120     		movs	r0, #1
 1371 0098 DFED180A 		vldr.32	s1, .L70+36
 937:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1372              		.loc 19 937 22 view .LVU286
 1373 009c 184C     		ldr	r4, .L70+40
 937:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1374              		.loc 19 937 29 view .LVU287
 1375 009e FFF7FEFF 		bl	_Z5scalefff9CurveType
 1376              	.LVL62:
 938:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1377              		.loc 19 938 26 view .LVU288
 1378 00a2 1848     		ldr	r0, .L70+44
 937:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1379              		.loc 19 937 22 view .LVU289
 1380 00a4 84ED000A 		vstr.32	s0, [r4]
 938:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1381              		.loc 19 938 13 is_stmt 1 view .LVU290
 938:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1382              		.loc 19 938 26 is_stmt 0 view .LVU291
 1383 00a8 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1384              	.LVL63:
 939:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1385              		.loc 19 939 13 is_stmt 1 view .LVU292
 939:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1386              		.loc 19 939 26 is_stmt 0 view .LVU293
 1387 00ac 94ED000A 		vldr.32	s0, [r4]
 1388 00b0 1548     		ldr	r0, .L70+48
 1389 00b2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1390              	.LVL64:
 940:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1391              		.loc 19 940 13 is_stmt 1 view .LVU294
 940:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1392              		.loc 19 940 31 is_stmt 0 view .LVU295
 1393 00b6 94ED000A 		vldr.32	s0, [r4]
 1394 00ba 1448     		ldr	r0, .L70+52
 1395 00bc FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 76


 1396              	.LVL65:
 941:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1397              		.loc 19 941 13 is_stmt 1 view .LVU296
 941:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1398              		.loc 19 941 31 is_stmt 0 view .LVU297
 1399 00c0 94ED000A 		vldr.32	s0, [r4]
 1400 00c4 1248     		ldr	r0, .L70+56
 1401 00c6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1402              	.LVL66:
 942:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1403              		.loc 19 942 13 is_stmt 1 view .LVU298
 942:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1404              		.loc 19 942 35 is_stmt 0 view .LVU299
 1405 00ca 2268     		ldr	r2, [r4]	@ float
 1406 00cc 114B     		ldr	r3, .L70+60
 1407 00ce 1A61     		str	r2, [r3, #16]	@ float
 1408              	.LBE865:
 1409              	.LBE872:
 945:Veno-Echo.cpp **** }
 1410              		.loc 19 945 1 view .LVU300
 1411 00d0 10BD     		pop	{r4, pc}
 1412              	.LVL67:
 1413              	.L66:
 1414              	.LBB873:
 1415              	.LBB870:
 1416              	.LBB864:
 1417              	.LBB859:
1656:Veno-Echo.cpp ****         output = 0.0f;
 1418              		.loc 19 1656 16 view .LVU301
 1419 00d2 9FED050A 		vldr.32	s0, .L70+16
 1420              	.LVL68:
1656:Veno-Echo.cpp ****         output = 0.0f;
 1421              		.loc 19 1656 16 view .LVU302
 1422 00d6 BBE7     		b	.L62
 1423              	.L71:
 1424              		.align	2
 1425              	.L70:
 1426 00d8 18000000 		.word	.LANCHOR4+24
 1427 00dc 00000000 		.word	.LANCHOR8
 1428 00e0 00000000 		.word	.LANCHOR7
 1429 00e4 00000000 		.word	.LANCHOR9
 1430 00e8 00000000 		.word	0
 1431 00ec 00000000 		.word	.LANCHOR10
 1432 00f0 6F12033D 		.word	1023611503
 1433 00f4 0AD7A33B 		.word	1000593162
 1434 00f8 00004844 		.word	1145569280
 1435 00fc 0000C842 		.word	1120403456
 1436 0100 00000000 		.word	.LANCHOR11
 1437 0104 00000000 		.word	.LANCHOR12
 1438 0108 00000000 		.word	.LANCHOR13
 1439 010c 00000000 		.word	.LANCHOR14
 1440 0110 00000000 		.word	.LANCHOR15
 1441 0114 00000000 		.word	.LANCHOR16
 1442              	.LBE859:
 1443              	.LBE864:
 1444              	.LBE870:
 1445              	.LBE873:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 77


 1446              		.cfi_endproc
 1447              	.LFE4296:
 1449              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 1450              		.align	1
 1451              		.p2align 2,,3
 1452              		.global	_Z19Update_feedbackR_CVv
 1453              		.syntax unified
 1454              		.thumb
 1455              		.thumb_func
 1456              		.fpu fpv5-d16
 1458              	_Z19Update_feedbackR_CVv:
 1459              	.LFB4297:
 948:Veno-Echo.cpp **** {
 1460              		.loc 19 948 1 is_stmt 1 view -0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 949:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1464              		.loc 19 949 5 view .LVU304
 948:Veno-Echo.cpp **** {
 1465              		.loc 19 948 1 is_stmt 0 view .LVU305
 1466 0000 08B5     		push	{r3, lr}
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 3, -8
 1469              		.cfi_offset 14, -4
 949:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1470              		.loc 19 949 35 view .LVU306
 1471 0002 0321     		movs	r1, #3
 1472 0004 0348     		ldr	r0, .L74
 1473 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1474              	.LVL69:
 949:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1475              		.loc 19 949 18 view .LVU307
 1476 000a 034B     		ldr	r3, .L74+4
 1477 000c 83ED000A 		vstr.32	s0, [r3]
 950:Veno-Echo.cpp **** }
 1478              		.loc 19 950 1 view .LVU308
 1479 0010 08BD     		pop	{r3, pc}
 1480              	.L75:
 1481 0012 00BF     		.align	2
 1482              	.L74:
 1483 0014 18000000 		.word	.LANCHOR4+24
 1484 0018 00000000 		.word	.LANCHOR17
 1485              		.cfi_endproc
 1486              	.LFE4297:
 1488              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 1489              		.align	1
 1490              		.p2align 2,,3
 1491              		.global	_Z16Update_feedbackRv
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1495              		.fpu fpv5-d16
 1497              	_Z16Update_feedbackRv:
 1498              	.LFB4298:
 953:Veno-Echo.cpp **** {
 1499              		.loc 19 953 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 78


 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 954:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1503              		.loc 19 954 5 view .LVU310
 954:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1504              		.loc 19 954 43 is_stmt 0 view .LVU311
 1505 0000 0422     		movs	r2, #4
 1506 0002 0721     		movs	r1, #7
 1507 0004 3448     		ldr	r0, .L86
 953:Veno-Echo.cpp **** {
 1508              		.loc 19 953 1 view .LVU312
 1509 0006 10B5     		push	{r4, lr}
 1510              		.cfi_def_cfa_offset 8
 1511              		.cfi_offset 4, -8
 1512              		.cfi_offset 14, -4
 954:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1513              		.loc 19 954 43 view .LVU313
 1514 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1515              	.LVL70:
 1516              	.LBB874:
 957:Veno-Echo.cpp ****     if (!shift) //default controls
 1517              		.loc 19 957 9 view .LVU314
 1518 000c 334B     		ldr	r3, .L86+4
 1519              	.LBE874:
 954:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1520              		.loc 19 954 43 view .LVU315
 1521 000e F0EE407A 		vmov.f32	s15, s0
 1522              	.LVL71:
 955:Veno-Echo.cpp ****     static float feedbackR_Pot_Last{};
 1523              		.loc 19 955 5 is_stmt 1 view .LVU316
 957:Veno-Echo.cpp ****     if (!shift) //default controls
 1524              		.loc 19 957 5 view .LVU317
 1525              	.LBB892:
 1526 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1527 0014 7BBB     		cbnz	r3, .L77
 1528              	.LBB875:
 960:Veno-Echo.cpp ****         feedbackR_Pot_Last = feedbackR_Pot;
 1529              		.loc 19 960 9 view .LVU318
 962:Veno-Echo.cpp ****         float feedbackR_Target{scale(PotCVCombo(feedbackR_Pot,feedbackR_CV),0.0,maxFB,LINEAR)};
 1530              		.loc 19 962 37 is_stmt 0 view .LVU319
 1531 0016 324A     		ldr	r2, .L86+8
 1532              	.LBB876:
 1533              	.LBB877:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1534              		.loc 19 1652 39 view .LVU320
 1535 0018 F7EE006A 		vmov.f32	s13, #1.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1536              		.loc 19 1652 49 view .LVU321
 1537 001c F6EE005A 		vmov.f32	s11, #5.0e-1
 1538              	.LBE877:
 1539              	.LBE876:
 960:Veno-Echo.cpp ****         feedbackR_Pot_Last = feedbackR_Pot;
 1540              		.loc 19 960 28 view .LVU322
 1541 0020 304B     		ldr	r3, .L86+12
 1542              	.LBB881:
 1543              	.LBB878:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 79


1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1544              		.loc 19 1652 39 view .LVU323
 1545 0022 92ED007A 		vldr.32	s14, [r2]
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1546              		.loc 19 1652 12 view .LVU324
 1547 0026 B0EE006A 		vmov.f32	s12, #2.0e+0
 1548              	.LBE878:
 1549              	.LBE881:
 960:Veno-Echo.cpp ****         feedbackR_Pot_Last = feedbackR_Pot;
 1550              		.loc 19 960 28 view .LVU325
 1551 002a 83ED000A 		vstr.32	s0, [r3]
 962:Veno-Echo.cpp ****         float feedbackR_Target{scale(PotCVCombo(feedbackR_Pot,feedbackR_CV),0.0,maxFB,LINEAR)};
 1552              		.loc 19 962 9 is_stmt 1 view .LVU326
 1553              	.LVL72:
 1554              	.LBB882:
 1555              	.LBI876:
1649:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1556              		.loc 19 1649 7 view .LVU327
 1557              	.LBB879:
1651:Veno-Echo.cpp ****     float output{};
 1558              		.loc 19 1651 5 view .LVU328
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1559              		.loc 19 1652 5 view .LVU329
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1560              		.loc 19 1652 39 is_stmt 0 view .LVU330
 1561 002e 36EEC77A 		vsub.f32	s14, s13, s14
 1562              	.LVL73:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1563              		.loc 19 1652 49 view .LVU331
 1564 0032 37EE657A 		vsub.f32	s14, s14, s11
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1565              		.loc 19 1652 12 view .LVU332
 1566 0036 E7EE067A 		vfma.f32	s15, s14, s12
 1567              	.LVL74:
1654:Veno-Echo.cpp ****     if(output < 0.0f)
 1568              		.loc 19 1654 5 is_stmt 1 view .LVU333
 1569 003a F5EEC07A 		vcmpe.f32	s15, #0
 1570 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1571 0042 46D4     		bmi	.L82
1659:Veno-Echo.cpp ****     if(output > 1.0f)
 1572              		.loc 19 1659 5 view .LVU334
1661:Veno-Echo.cpp ****         output = 1.0f;
 1573              		.loc 19 1661 16 is_stmt 0 view .LVU335
 1574 0044 F4EE667A 		vcmp.f32	s15, s13
 1575 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1576 004c 36FEA70A 		vselgt.f32	s0, s13, s15
 1577              	.LVL75:
 1578              	.L78:
1664:Veno-Echo.cpp ****     return output;
 1579              		.loc 19 1664 5 is_stmt 1 view .LVU336
1664:Veno-Echo.cpp ****     return output;
 1580              		.loc 19 1664 5 is_stmt 0 view .LVU337
 1581              	.LBE879:
 1582              	.LBE882:
 962:Veno-Echo.cpp ****         float feedbackR_Target{scale(PotCVCombo(feedbackR_Pot,feedbackR_CV),0.0,maxFB,LINEAR)};
 1583              		.loc 19 962 37 view .LVU338
 1584 0050 B7EE041A 		vmov.f32	s2, #1.25e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 80


 1585 0054 0020     		movs	r0, #0
 1586 0056 DFED240A 		vldr.32	s1, .L86+16
 1587 005a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1588              	.LVL76:
 963:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 1589              		.loc 19 963 9 is_stmt 1 view .LVU339
 1590              	.LBB883:
 1591              	.LBI883:
 135:../DaisySP/Source/Utility/dsp.h **** {
 1592              		.loc 21 135 13 view .LVU340
 1593              	.LBB884:
 1594              		.loc 21 137 5 view .LVU341
 1595              		.loc 21 137 9 is_stmt 0 view .LVU342
 1596 005e 234B     		ldr	r3, .L86+20
 1597 0060 9FED237A 		vldr.32	s14, .L86+24
 1598 0064 D3ED007A 		vldr.32	s15, [r3]
 1599              		.loc 21 137 24 view .LVU343
 1600 0068 30EE670A 		vsub.f32	s0, s0, s15
 1601              	.LVL77:
 1602              		.loc 21 137 9 view .LVU344
 1603 006c E0EE077A 		vfma.f32	s15, s0, s14
 1604 0070 C3ED007A 		vstr.32	s15, [r3]
 1605              	.LVL78:
 1606              	.L76:
 1607              		.loc 21 137 9 view .LVU345
 1608              	.LBE884:
 1609              	.LBE883:
 1610              	.LBE875:
 1611              	.LBE892:
 978:Veno-Echo.cpp **** }
 1612              		.loc 19 978 1 view .LVU346
 1613 0074 10BD     		pop	{r4, pc}
 1614              	.LVL79:
 1615              	.L77:
 1616              	.LBB893:
 1617              	.LBB886:
 967:Veno-Echo.cpp ****         static float LPCutoff{};
 1618              		.loc 19 967 9 is_stmt 1 view .LVU347
 968:Veno-Echo.cpp ****         if (abs(feedbackR_Pot_Last - feedbackR_Pot) > altControlThresh)
 1619              		.loc 19 968 9 view .LVU348
 1620              	.LBB887:
 1621              	.LBI887:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1622              		.loc 20 75 3 view .LVU349
 1623              	.LBB888:
 1624              		.loc 20 76 5 view .LVU350
 1625              		.loc 20 76 5 is_stmt 0 view .LVU351
 1626              	.LBE888:
 1627              	.LBE887:
 968:Veno-Echo.cpp ****         if (abs(feedbackR_Pot_Last - feedbackR_Pot) > altControlThresh)
 1628              		.loc 19 968 16 view .LVU352
 1629 0076 1B4B     		ldr	r3, .L86+12
 968:Veno-Echo.cpp ****         if (abs(feedbackR_Pot_Last - feedbackR_Pot) > altControlThresh)
 1630              		.loc 19 968 9 view .LVU353
 1631 0078 DFED1E6A 		vldr.32	s13, .L86+28
 968:Veno-Echo.cpp ****         if (abs(feedbackR_Pot_Last - feedbackR_Pot) > altControlThresh)
 1632              		.loc 19 968 16 view .LVU354
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 81


 1633 007c 93ED007A 		vldr.32	s14, [r3]
 1634 0080 77EE407A 		vsub.f32	s15, s14, s0
 1635              	.LBB890:
 1636              	.LBB889:
 1637              		.loc 20 76 31 view .LVU355
 1638 0084 F0EEE77A 		vabs.f32	s15, s15
 1639              	.LBE889:
 1640              	.LBE890:
 968:Veno-Echo.cpp ****         if (abs(feedbackR_Pot_Last - feedbackR_Pot) > altControlThresh)
 1641              		.loc 19 968 9 view .LVU356
 1642 0088 F4EEE67A 		vcmpe.f32	s15, s13
 1643 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1644 0090 F0DD     		ble	.L76
 970:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 1645              		.loc 19 970 13 is_stmt 1 view .LVU357
 970:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 1646              		.loc 19 970 29 is_stmt 0 view .LVU358
 1647 0092 9FED191A 		vldr.32	s2, .L86+32
 1648 0096 0120     		movs	r0, #1
 1649 0098 DFED180A 		vldr.32	s1, .L86+36
 970:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 1650              		.loc 19 970 22 view .LVU359
 1651 009c 184C     		ldr	r4, .L86+40
 970:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 1652              		.loc 19 970 29 view .LVU360
 1653 009e FFF7FEFF 		bl	_Z5scalefff9CurveType
 1654              	.LVL80:
 971:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1655              		.loc 19 971 26 view .LVU361
 1656 00a2 1848     		ldr	r0, .L86+44
 970:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 1657              		.loc 19 970 22 view .LVU362
 1658 00a4 84ED000A 		vstr.32	s0, [r4]
 971:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1659              		.loc 19 971 13 is_stmt 1 view .LVU363
 971:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1660              		.loc 19 971 26 is_stmt 0 view .LVU364
 1661 00a8 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1662              	.LVL81:
 972:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 1663              		.loc 19 972 13 is_stmt 1 view .LVU365
 972:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 1664              		.loc 19 972 26 is_stmt 0 view .LVU366
 1665 00ac 94ED000A 		vldr.32	s0, [r4]
 1666 00b0 1548     		ldr	r0, .L86+48
 1667 00b2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1668              	.LVL82:
 973:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 1669              		.loc 19 973 13 is_stmt 1 view .LVU367
 973:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 1670              		.loc 19 973 31 is_stmt 0 view .LVU368
 1671 00b6 94ED000A 		vldr.32	s0, [r4]
 1672 00ba 1448     		ldr	r0, .L86+52
 1673 00bc FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1674              	.LVL83:
 974:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 1675              		.loc 19 974 13 is_stmt 1 view .LVU369
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 82


 974:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 1676              		.loc 19 974 31 is_stmt 0 view .LVU370
 1677 00c0 94ED000A 		vldr.32	s0, [r4]
 1678 00c4 1248     		ldr	r0, .L86+56
 1679 00c6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1680              	.LVL84:
 975:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 1681              		.loc 19 975 13 is_stmt 1 view .LVU371
 975:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 1682              		.loc 19 975 35 is_stmt 0 view .LVU372
 1683 00ca 2268     		ldr	r2, [r4]	@ float
 1684 00cc 114B     		ldr	r3, .L86+60
 1685 00ce 5A61     		str	r2, [r3, #20]	@ float
 1686              	.LBE886:
 1687              	.LBE893:
 978:Veno-Echo.cpp **** }
 1688              		.loc 19 978 1 view .LVU373
 1689 00d0 10BD     		pop	{r4, pc}
 1690              	.LVL85:
 1691              	.L82:
 1692              	.LBB894:
 1693              	.LBB891:
 1694              	.LBB885:
 1695              	.LBB880:
1656:Veno-Echo.cpp ****         output = 0.0f;
 1696              		.loc 19 1656 16 view .LVU374
 1697 00d2 9FED050A 		vldr.32	s0, .L86+16
 1698              	.LVL86:
1656:Veno-Echo.cpp ****         output = 0.0f;
 1699              		.loc 19 1656 16 view .LVU375
 1700 00d6 BBE7     		b	.L78
 1701              	.L87:
 1702              		.align	2
 1703              	.L86:
 1704 00d8 18000000 		.word	.LANCHOR4+24
 1705 00dc 00000000 		.word	.LANCHOR8
 1706 00e0 00000000 		.word	.LANCHOR17
 1707 00e4 00000000 		.word	.LANCHOR18
 1708 00e8 00000000 		.word	0
 1709 00ec 00000000 		.word	.LANCHOR19
 1710 00f0 6F12033D 		.word	1023611503
 1711 00f4 0AD7A33B 		.word	1000593162
 1712 00f8 00803B46 		.word	1178304512
 1713 00fc 0080BB44 		.word	1153138688
 1714 0100 00000000 		.word	.LANCHOR20
 1715 0104 00000000 		.word	.LANCHOR21
 1716 0108 00000000 		.word	.LANCHOR22
 1717 010c 00000000 		.word	.LANCHOR23
 1718 0110 00000000 		.word	.LANCHOR24
 1719 0114 00000000 		.word	.LANCHOR16
 1720              	.LBE880:
 1721              	.LBE885:
 1722              	.LBE891:
 1723              	.LBE894:
 1724              		.cfi_endproc
 1725              	.LFE4298:
 1727              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 83


 1728              		.align	1
 1729              		.p2align 2,,3
 1730              		.global	_Z16Update_drywet_CVv
 1731              		.syntax unified
 1732              		.thumb
 1733              		.thumb_func
 1734              		.fpu fpv5-d16
 1736              	_Z16Update_drywet_CVv:
 1737              	.LFB4299:
 981:Veno-Echo.cpp **** {
 1738              		.loc 19 981 1 is_stmt 1 view -0
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 0
 1741              		@ frame_needed = 0, uses_anonymous_args = 0
 982:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 1742              		.loc 19 982 5 view .LVU377
 981:Veno-Echo.cpp **** {
 1743              		.loc 19 981 1 is_stmt 0 view .LVU378
 1744 0000 08B5     		push	{r3, lr}
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 3, -8
 1747              		.cfi_offset 14, -4
 982:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 1748              		.loc 19 982 32 view .LVU379
 1749 0002 0421     		movs	r1, #4
 1750 0004 0348     		ldr	r0, .L90
 1751 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1752              	.LVL87:
 982:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 1753              		.loc 19 982 15 view .LVU380
 1754 000a 034B     		ldr	r3, .L90+4
 1755 000c 83ED000A 		vstr.32	s0, [r3]
 983:Veno-Echo.cpp **** }
 1756              		.loc 19 983 1 view .LVU381
 1757 0010 08BD     		pop	{r3, pc}
 1758              	.L91:
 1759 0012 00BF     		.align	2
 1760              	.L90:
 1761 0014 18000000 		.word	.LANCHOR4+24
 1762 0018 00000000 		.word	.LANCHOR25
 1763              		.cfi_endproc
 1764              	.LFE4299:
 1766              		.section	.text._Z13Update_drywetv,"ax",%progbits
 1767              		.align	1
 1768              		.p2align 2,,3
 1769              		.global	_Z13Update_drywetv
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1773              		.fpu fpv5-d16
 1775              	_Z13Update_drywetv:
 1776              	.LFB4300:
 986:Veno-Echo.cpp **** {
 1777              		.loc 19 986 1 is_stmt 1 view -0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 0
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 84


 987:Veno-Echo.cpp ****     static bool lastShift{};
 1781              		.loc 19 987 5 view .LVU383
 988:Veno-Echo.cpp ****     static pickupState drywet_pickup{};
 1782              		.loc 19 988 5 view .LVU384
 989:Veno-Echo.cpp ****     static pickupState Res_pickup{};
 1783              		.loc 19 989 5 view .LVU385
 991:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
 1784              		.loc 19 991 5 view .LVU386
 992:Veno-Echo.cpp ****     static float Res_Last{}; //last res value (unscaled)
 1785              		.loc 19 992 5 view .LVU387
 996:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
 1786              		.loc 19 996 5 view .LVU388
 986:Veno-Echo.cpp **** {
 1787              		.loc 19 986 1 is_stmt 0 view .LVU389
 1788 0000 10B5     		push	{r4, lr}
 1789              		.cfi_def_cfa_offset 8
 1790              		.cfi_offset 4, -8
 1791              		.cfi_offset 14, -4
 996:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
 1792              		.loc 19 996 40 view .LVU390
 1793 0002 0522     		movs	r2, #5
 1794 0004 0721     		movs	r1, #7
 1795 0006 9048     		ldr	r0, .L123+24
 986:Veno-Echo.cpp **** {
 1796              		.loc 19 986 1 view .LVU391
 1797 0008 2DED028B 		vpush.64	{d8}
 1798              		.cfi_def_cfa_offset 16
 1799              		.cfi_offset 80, -16
 1800              		.cfi_offset 81, -12
 996:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
 1801              		.loc 19 996 40 view .LVU392
 1802 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1803              	.LVL88:
 1804              	.LBB895:
 998:Veno-Echo.cpp ****     if (!shift) //default controls
 1805              		.loc 19 998 9 view .LVU393
 1806 0010 8E4B     		ldr	r3, .L123+28
 1807              	.LBE895:
 996:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
 1808              		.loc 19 996 40 view .LVU394
 1809 0012 B0EE408A 		vmov.f32	s16, s0
 1810              	.LVL89:
 998:Veno-Echo.cpp ****     if (!shift) //default controls
 1811              		.loc 19 998 5 is_stmt 1 view .LVU395
 1812              	.LBB949:
 1813 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1814 0018 002B     		cmp	r3, #0
 1815 001a 40F08C80 		bne	.L93
 1816              	.LBB896:
1001:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1817              		.loc 19 1001 9 view .LVU396
1001:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1818              		.loc 19 1001 19 is_stmt 0 view .LVU397
 1819 001e 8C49     		ldr	r1, .L123+32
1001:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1820              		.loc 19 1001 9 view .LVU398
 1821 0020 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 85


 1822 0022 002A     		cmp	r2, #0
 1823 0024 44D0     		beq	.L94
1003:Veno-Echo.cpp ****             lastShift = shift;
 1824              		.loc 19 1003 13 is_stmt 1 view .LVU399
1004:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 1825              		.loc 19 1004 45 is_stmt 0 view .LVU400
 1826 0026 8B4A     		ldr	r2, .L123+36
 1827              	.LBB897:
 1828              	.LBB898:
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1829              		.loc 19 1673 31 view .LVU401
 1830 0028 9FED8B7A 		vldr.32	s14, .L123+40
 1831              	.LBE898:
 1832              	.LBE897:
1004:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 1833              		.loc 19 1004 45 view .LVU402
 1834 002c D2ED007A 		vldr.32	s15, [r2]
1003:Veno-Echo.cpp ****             lastShift = shift;
 1835              		.loc 19 1003 23 view .LVU403
 1836 0030 0B70     		strb	r3, [r1]
1004:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 1837              		.loc 19 1004 13 is_stmt 1 view .LVU404
 1838              	.LVL90:
 1839              	.LBB903:
 1840              	.LBI897:
1667:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 1841              		.loc 19 1667 13 view .LVU405
 1842              	.LBB899:
1669:Veno-Echo.cpp ****     pickupState retval{};
 1843              		.loc 19 1669 5 view .LVU406
1671:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 1844              		.loc 19 1671 5 view .LVU407
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1845              		.loc 19 1673 9 view .LVU408
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1846              		.loc 19 1673 31 is_stmt 0 view .LVU409
 1847 0032 77EEC76A 		vsub.f32	s13, s15, s14
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1848              		.loc 19 1673 9 view .LVU410
 1849 0036 B4EEE60A 		vcmpe.f32	s0, s13
 1850 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1851 003e 00F19F80 		bmi	.L95
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1852              		.loc 19 1678 14 is_stmt 1 view .LVU411
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1853              		.loc 19 1678 36 is_stmt 0 view .LVU412
 1854 0042 77EE877A 		vadd.f32	s15, s15, s14
 1855              	.LVL91:
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1856              		.loc 19 1678 36 view .LVU413
 1857              	.LBE899:
 1858              	.LBE903:
1004:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 1859              		.loc 19 1004 27 view .LVU414
 1860 0046 854B     		ldr	r3, .L123+44
 1861              	.LBB904:
 1862              	.LBB900:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 86


1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1863              		.loc 19 1678 14 view .LVU415
 1864 0048 B4EEE70A 		vcmpe.f32	s0, s15
 1865 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1866 0050 40F3E480 		ble	.L121
 1867              	.LVL92:
1712:Veno-Echo.cpp ****     return retval;
 1868              		.loc 19 1712 5 is_stmt 1 view .LVU416
1712:Veno-Echo.cpp ****     return retval;
 1869              		.loc 19 1712 5 is_stmt 0 view .LVU417
 1870              	.LBE900:
 1871              	.LBE904:
1004:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 1872              		.loc 19 1004 27 view .LVU418
 1873 0054 0121     		movs	r1, #1
 1874 0056 1970     		strb	r1, [r3]
1011:Veno-Echo.cpp ****         float drywetcombo{};
 1875              		.loc 19 1011 9 is_stmt 1 view .LVU419
 1876              	.LVL93:
1013:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 1877              		.loc 19 1013 9 view .LVU420
 1878              	.L98:
1021:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last drywet and CV
 1879              		.loc 19 1021 13 view .LVU421
 1880              	.LBB905:
 1881              	.LBI905:
1649:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1882              		.loc 19 1649 7 view .LVU422
 1883              	.LBB906:
1651:Veno-Echo.cpp ****     float output{};
 1884              		.loc 19 1651 5 view .LVU423
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1885              		.loc 19 1652 5 view .LVU424
 1886              	.LBE906:
 1887              	.LBE905:
1021:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last drywet and CV
 1888              		.loc 19 1021 37 is_stmt 0 view .LVU425
 1889 0058 814B     		ldr	r3, .L123+48
 1890              	.LBB908:
 1891              	.LBB907:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1892              		.loc 19 1652 39 view .LVU426
 1893 005a B7EE007A 		vmov.f32	s14, #1.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1894              		.loc 19 1652 49 view .LVU427
 1895 005e B6EE006A 		vmov.f32	s12, #5.0e-1
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1896              		.loc 19 1652 12 view .LVU428
 1897 0062 92ED000A 		vldr.32	s0, [r2]
 1898              	.LVL94:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1899              		.loc 19 1652 39 view .LVU429
 1900 0066 D3ED007A 		vldr.32	s15, [r3]
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1901              		.loc 19 1652 12 view .LVU430
 1902 006a F0EE006A 		vmov.f32	s13, #2.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 87


 1903              		.loc 19 1652 39 view .LVU431
 1904 006e 77EE677A 		vsub.f32	s15, s14, s15
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1905              		.loc 19 1652 49 view .LVU432
 1906 0072 77EEC67A 		vsub.f32	s15, s15, s12
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1907              		.loc 19 1652 12 view .LVU433
 1908 0076 A7EEA60A 		vfma.f32	s0, s15, s13
 1909              	.LVL95:
1654:Veno-Echo.cpp ****     if(output < 0.0f)
 1910              		.loc 19 1654 5 is_stmt 1 view .LVU434
 1911 007a B5EEC00A 		vcmpe.f32	s0, #0
 1912 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1913 0082 7AD4     		bmi	.L107
1659:Veno-Echo.cpp ****     if(output > 1.0f)
 1914              		.loc 19 1659 5 view .LVU435
 1915 0084 B4EEC70A 		vcmpe.f32	s0, s14
 1916 0088 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1917 008c 40F3CC80 		ble	.L118
 1918              	.LVL96:
 1919              	.L106:
1659:Veno-Echo.cpp ****     if(output > 1.0f)
 1920              		.loc 19 1659 5 is_stmt 0 view .LVU436
 1921              	.LBE907:
 1922              	.LBE908:
1028:Veno-Echo.cpp ****             drywetTarget = 1.0f;
 1923              		.loc 19 1028 26 view .LVU437
 1924 0090 B7EE000A 		vmov.f32	s0, #1.0e+0
 1925              	.L103:
 1926              	.LVL97:
1040:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
 1927              		.loc 19 1040 9 is_stmt 1 view .LVU438
 1928              	.LBB909:
 1929              	.LBI909:
 135:../DaisySP/Source/Utility/dsp.h **** {
 1930              		.loc 21 135 13 view .LVU439
 1931              	.LBB910:
 1932              		.loc 21 137 5 view .LVU440
 1933              		.loc 21 137 9 is_stmt 0 view .LVU441
 1934 0094 734B     		ldr	r3, .L123+52
 1935 0096 9FED747A 		vldr.32	s14, .L123+56
 1936 009a D3ED007A 		vldr.32	s15, [r3]
 1937              		.loc 21 137 24 view .LVU442
 1938 009e 30EE670A 		vsub.f32	s0, s0, s15
 1939              	.LVL98:
 1940              		.loc 21 137 9 view .LVU443
 1941 00a2 E0EE077A 		vfma.f32	s15, s0, s14
 1942 00a6 C3ED007A 		vstr.32	s15, [r3]
 1943              	.LVL99:
 1944              	.L92:
 1945              		.loc 21 137 9 view .LVU444
 1946              	.LBE910:
 1947              	.LBE909:
 1948              	.LBE896:
 1949              	.LBE949:
1072:Veno-Echo.cpp **** }
 1950              		.loc 19 1072 1 view .LVU445
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 88


 1951 00aa BDEC028B 		vldm	sp!, {d8}
 1952              		.cfi_remember_state
 1953              		.cfi_restore 80
 1954              		.cfi_restore 81
 1955              		.cfi_def_cfa_offset 8
 1956              	.LVL100:
1072:Veno-Echo.cpp **** }
 1957              		.loc 19 1072 1 view .LVU446
 1958 00ae 10BD     		pop	{r4, pc}
 1959              	.LVL101:
 1960              	.L94:
 1961              		.cfi_restore_state
 1962              	.LBB950:
 1963              	.LBB923:
1008:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
 1964              		.loc 19 1008 13 is_stmt 1 view .LVU447
 1965              	.LBB911:
 1966              	.LBI911:
1667:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 1967              		.loc 19 1667 13 view .LVU448
 1968              	.LBB912:
1669:Veno-Echo.cpp ****     pickupState retval{};
 1969              		.loc 19 1669 5 view .LVU449
1671:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 1970              		.loc 19 1671 5 view .LVU450
 1971              	.LBE912:
 1972              	.LBE911:
1008:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
 1973              		.loc 19 1008 45 is_stmt 0 view .LVU451
 1974 00b0 6A4B     		ldr	r3, .L123+44
 1975 00b2 684A     		ldr	r2, .L123+36
 1976              	.LBB914:
 1977              	.LBB913:
 1978 00b4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1979 00b6 D2ED000A 		vldr.32	s1, [r2]
 1980 00ba FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 1981              	.LVL102:
1712:Veno-Echo.cpp ****     return retval;
 1982              		.loc 19 1712 5 is_stmt 1 view .LVU452
1712:Veno-Echo.cpp ****     return retval;
 1983              		.loc 19 1712 5 is_stmt 0 view .LVU453
 1984              	.LBE913:
 1985              	.LBE914:
1013:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 1986              		.loc 19 1013 9 view .LVU454
 1987 00be 0228     		cmp	r0, #2
1008:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
 1988              		.loc 19 1008 27 view .LVU455
 1989 00c0 1870     		strb	r0, [r3]
1011:Veno-Echo.cpp ****         float drywetcombo{};
 1990              		.loc 19 1011 9 is_stmt 1 view .LVU456
 1991              	.LVL103:
1013:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 1992              		.loc 19 1013 9 view .LVU457
 1993 00c2 C9D1     		bne	.L98
 1994              	.L97:
1015:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 89


 1995              		.loc 19 1015 13 view .LVU458
 1996              	.LVL104:
 1997              	.LBB915:
 1998              	.LBI915:
1649:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1999              		.loc 19 1649 7 view .LVU459
 2000              	.LBB916:
1651:Veno-Echo.cpp ****     float output{};
 2001              		.loc 19 1651 5 view .LVU460
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2002              		.loc 19 1652 5 view .LVU461
 2003              	.LBE916:
 2004              	.LBE915:
1015:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
 2005              		.loc 19 1015 37 is_stmt 0 view .LVU462
 2006 00c4 664B     		ldr	r3, .L123+48
 2007              	.LBB919:
 2008              	.LBB917:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2009              		.loc 19 1652 39 view .LVU463
 2010 00c6 B7EE007A 		vmov.f32	s14, #1.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2011              		.loc 19 1652 49 view .LVU464
 2012 00ca B6EE006A 		vmov.f32	s12, #5.0e-1
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2013              		.loc 19 1652 39 view .LVU465
 2014 00ce D3ED007A 		vldr.32	s15, [r3]
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2015              		.loc 19 1652 12 view .LVU466
 2016 00d2 F0EE006A 		vmov.f32	s13, #2.0e+0
 2017 00d6 B0EE480A 		vmov.f32	s0, s16
 2018              	.LVL105:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2019              		.loc 19 1652 39 view .LVU467
 2020 00da 77EE677A 		vsub.f32	s15, s14, s15
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2021              		.loc 19 1652 49 view .LVU468
 2022 00de 77EEC67A 		vsub.f32	s15, s15, s12
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2023              		.loc 19 1652 12 view .LVU469
 2024 00e2 A7EEA60A 		vfma.f32	s0, s15, s13
 2025              	.LVL106:
1654:Veno-Echo.cpp ****     if(output < 0.0f)
 2026              		.loc 19 1654 5 is_stmt 1 view .LVU470
 2027 00e6 B5EEC00A 		vcmpe.f32	s0, #0
 2028 00ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2029 00ee 00F18D80 		bmi	.L114
1659:Veno-Echo.cpp ****     if(output > 1.0f)
 2030              		.loc 19 1659 5 view .LVU471
 2031 00f2 B4EEC70A 		vcmpe.f32	s0, s14
 2032 00f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2033 00fa 40F39280 		ble	.L122
 2034 00fe B7EE006B 		vmov.f64	d6, #1.0e+0
1661:Veno-Echo.cpp ****         output = 1.0f;
 2035              		.loc 19 1661 16 is_stmt 0 view .LVU472
 2036 0102 B0EE470A 		vmov.f32	s0, s14
 2037              	.LVL107:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 90


 2038              	.L99:
1664:Veno-Echo.cpp ****     return output;
 2039              		.loc 19 1664 5 is_stmt 1 view .LVU473
1664:Veno-Echo.cpp ****     return output;
 2040              		.loc 19 1664 5 is_stmt 0 view .LVU474
 2041              	.LBE917:
 2042              	.LBE919:
1016:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 2043              		.loc 19 1016 13 is_stmt 1 view .LVU475
1016:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 2044              		.loc 19 1016 25 is_stmt 0 view .LVU476
 2045 0106 82ED008A 		vstr.32	s16, [r2]
 2046              	.LVL108:
 2047              	.L100:
1024:Veno-Echo.cpp ****         float drywetTarget{};
 2048              		.loc 19 1024 9 is_stmt 1 view .LVU477
1026:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
 2049              		.loc 19 1026 9 view .LVU478
 2050 010a 9FED497B 		vldr.64	d7, .L123
 2051 010e B4EEC76B 		vcmpe.f64	d6, d7
 2052 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2053 0116 BBDA     		bge	.L106
1030:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
 2054              		.loc 19 1030 14 view .LVU479
 2055 0118 9FED477B 		vldr.64	d7, .L123+8
 2056 011c B4EEC76B 		vcmpe.f64	d6, d7
 2057 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2058 0124 29D9     		bls	.L107
1036:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
 2059              		.loc 19 1036 13 view .LVU480
1036:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
 2060              		.loc 19 1036 33 is_stmt 0 view .LVU481
 2061 0126 B7EE001A 		vmov.f32	s2, #1.0e+0
 2062 012a 0120     		movs	r0, #1
 2063 012c DFED4F0A 		vldr.32	s1, .L123+60
 2064 0130 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2065              	.LVL109:
1036:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
 2066              		.loc 19 1036 33 view .LVU482
 2067 0134 AEE7     		b	.L103
 2068              	.LVL110:
 2069              	.L93:
1036:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
 2070              		.loc 19 1036 33 view .LVU483
 2071              	.LBE923:
 2072              	.LBB924:
1045:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 2073              		.loc 19 1045 9 is_stmt 1 view .LVU484
1045:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 2074              		.loc 19 1045 19 is_stmt 0 view .LVU485
 2075 0136 464B     		ldr	r3, .L123+32
1045:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 2076              		.loc 19 1045 9 view .LVU486
 2077 0138 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2078 013a 22BB     		cbnz	r2, .L109
1047:Veno-Echo.cpp ****             lastShift = shift;
 2079              		.loc 19 1047 13 is_stmt 1 view .LVU487
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 91


1048:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2080              		.loc 19 1048 42 is_stmt 0 view .LVU488
 2081 013c 4C4C     		ldr	r4, .L123+64
1047:Veno-Echo.cpp ****             lastShift = shift;
 2082              		.loc 19 1047 23 view .LVU489
 2083 013e 0121     		movs	r1, #1
 2084              	.LBB925:
 2085              	.LBB926:
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2086              		.loc 19 1673 31 view .LVU490
 2087 0140 9FED457A 		vldr.32	s14, .L123+40
 2088              	.LBE926:
 2089              	.LBE925:
1048:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2090              		.loc 19 1048 42 view .LVU491
 2091 0144 D4ED007A 		vldr.32	s15, [r4]
1047:Veno-Echo.cpp ****             lastShift = shift;
 2092              		.loc 19 1047 23 view .LVU492
 2093 0148 1970     		strb	r1, [r3]
1048:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2094              		.loc 19 1048 13 is_stmt 1 view .LVU493
 2095              	.LVL111:
 2096              	.LBB931:
 2097              	.LBI925:
1667:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 2098              		.loc 19 1667 13 view .LVU494
 2099              	.LBB927:
1669:Veno-Echo.cpp ****     pickupState retval{};
 2100              		.loc 19 1669 5 view .LVU495
1671:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 2101              		.loc 19 1671 5 view .LVU496
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2102              		.loc 19 1673 9 view .LVU497
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2103              		.loc 19 1673 31 is_stmt 0 view .LVU498
 2104 014a 77EEC76A 		vsub.f32	s13, s15, s14
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2105              		.loc 19 1673 9 view .LVU499
 2106 014e B4EEE60A 		vcmpe.f32	s0, s13
 2107 0152 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2108 0156 0BD4     		bmi	.L110
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2109              		.loc 19 1678 14 is_stmt 1 view .LVU500
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2110              		.loc 19 1678 36 is_stmt 0 view .LVU501
 2111 0158 77EE877A 		vadd.f32	s15, s15, s14
 2112              	.LVL112:
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2113              		.loc 19 1678 36 view .LVU502
 2114              	.LBE927:
 2115              	.LBE931:
1048:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2116              		.loc 19 1048 24 view .LVU503
 2117 015c 454B     		ldr	r3, .L123+68
 2118              	.LBB932:
 2119              	.LBB928:
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 92


 2120              		.loc 19 1678 14 view .LVU504
 2121 015e B4EEE70A 		vcmpe.f32	s0, s15
 2122 0162 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2123 0166 56DD     		ble	.L119
 2124              	.LVL113:
1712:Veno-Echo.cpp ****     return retval;
 2125              		.loc 19 1712 5 is_stmt 1 view .LVU505
1712:Veno-Echo.cpp ****     return retval;
 2126              		.loc 19 1712 5 is_stmt 0 view .LVU506
 2127              	.LBE928:
 2128              	.LBE932:
1048:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2129              		.loc 19 1048 24 view .LVU507
 2130 0168 1970     		strb	r1, [r3]
1056:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 2131              		.loc 19 1056 9 is_stmt 1 view .LVU508
 2132              	.LBE924:
 2133              	.LBE950:
1072:Veno-Echo.cpp **** }
 2134              		.loc 19 1072 1 is_stmt 0 view .LVU509
 2135 016a BDEC028B 		vldm	sp!, {d8}
 2136              		.cfi_remember_state
 2137              		.cfi_restore 80
 2138              		.cfi_restore 81
 2139              		.cfi_def_cfa_offset 8
 2140 016e 10BD     		pop	{r4, pc}
 2141              	.LVL114:
 2142              	.L110:
 2143              		.cfi_restore_state
 2144              	.LBB951:
 2145              	.LBB942:
 2146              	.LBB933:
 2147              	.LBB929:
1712:Veno-Echo.cpp ****     return retval;
 2148              		.loc 19 1712 5 is_stmt 1 view .LVU510
1712:Veno-Echo.cpp ****     return retval;
 2149              		.loc 19 1712 5 is_stmt 0 view .LVU511
 2150              	.LBE929:
 2151              	.LBE933:
1048:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2152              		.loc 19 1048 24 view .LVU512
 2153 0170 404B     		ldr	r3, .L123+68
 2154              	.LBE942:
 2155              	.LBE951:
1072:Veno-Echo.cpp **** }
 2156              		.loc 19 1072 1 view .LVU513
 2157 0172 BDEC028B 		vldm	sp!, {d8}
 2158              		.cfi_remember_state
 2159              		.cfi_restore 80
 2160              		.cfi_restore 81
 2161              		.cfi_def_cfa_offset 8
 2162              	.LBB952:
 2163              	.LBB943:
1048:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2164              		.loc 19 1048 24 view .LVU514
 2165 0176 1A70     		strb	r2, [r3]
1056:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 93


 2166              		.loc 19 1056 9 is_stmt 1 view .LVU515
 2167              	.LBE943:
 2168              	.LBE952:
1072:Veno-Echo.cpp **** }
 2169              		.loc 19 1072 1 is_stmt 0 view .LVU516
 2170 0178 10BD     		pop	{r4, pc}
 2171              	.LVL115:
 2172              	.L107:
 2173              		.cfi_restore_state
 2174              	.LBB953:
 2175              	.LBB944:
1032:Veno-Echo.cpp ****             drywetTarget = 0.0f;
 2176              		.loc 19 1032 26 view .LVU517
 2177 017a 9FED3C0A 		vldr.32	s0, .L123+60
 2178 017e 89E7     		b	.L103
 2179              	.LVL116:
 2180              	.L95:
 2181              	.LBB920:
 2182              	.LBB901:
1712:Veno-Echo.cpp ****     return retval;
 2183              		.loc 19 1712 5 is_stmt 1 view .LVU518
1712:Veno-Echo.cpp ****     return retval;
 2184              		.loc 19 1712 5 is_stmt 0 view .LVU519
 2185              	.LBE901:
 2186              	.LBE920:
1004:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2187              		.loc 19 1004 27 view .LVU520
 2188 0180 3649     		ldr	r1, .L123+44
 2189 0182 0B70     		strb	r3, [r1]
1011:Veno-Echo.cpp ****         float drywetcombo{};
 2190              		.loc 19 1011 9 is_stmt 1 view .LVU521
 2191              	.LVL117:
1013:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2192              		.loc 19 1013 9 view .LVU522
 2193 0184 68E7     		b	.L98
 2194              	.LVL118:
 2195              	.L109:
1013:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2196              		.loc 19 1013 9 is_stmt 0 view .LVU523
 2197              	.LBE944:
 2198              	.LBB945:
1053:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,false);
 2199              		.loc 19 1053 13 is_stmt 1 view .LVU524
 2200              	.LBB934:
 2201              	.LBI934:
1667:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 2202              		.loc 19 1667 13 view .LVU525
 2203              	.LBB935:
1669:Veno-Echo.cpp ****     pickupState retval{};
 2204              		.loc 19 1669 5 view .LVU526
1671:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 2205              		.loc 19 1671 5 view .LVU527
 2206              	.LBE935:
 2207              	.LBE934:
1053:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,false);
 2208              		.loc 19 1053 42 is_stmt 0 view .LVU528
 2209 0186 3B4B     		ldr	r3, .L123+68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 94


 2210 0188 394C     		ldr	r4, .L123+64
 2211              	.LBB937:
 2212              	.LBB936:
 2213 018a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2214 018c D4ED000A 		vldr.32	s1, [r4]
 2215 0190 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 2216              	.LVL119:
1712:Veno-Echo.cpp ****     return retval;
 2217              		.loc 19 1712 5 is_stmt 1 view .LVU529
1712:Veno-Echo.cpp ****     return retval;
 2218              		.loc 19 1712 5 is_stmt 0 view .LVU530
 2219              	.LBE936:
 2220              	.LBE937:
 2221              	.LBB938:
1056:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 2222              		.loc 19 1056 9 view .LVU531
 2223 0194 0228     		cmp	r0, #2
 2224              	.LBE938:
1053:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,false);
 2225              		.loc 19 1053 24 view .LVU532
 2226 0196 1870     		strb	r0, [r3]
1056:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 2227              		.loc 19 1056 9 is_stmt 1 view .LVU533
 2228              	.LBB940:
 2229 0198 87D1     		bne	.L92
 2230              	.L113:
 2231              	.LBB939:
1058:Veno-Echo.cpp ****             float Res{};
 2232              		.loc 19 1058 13 view .LVU534
 2233              	.LVL120:
1059:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 2234              		.loc 19 1059 13 view .LVU535
1059:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 2235              		.loc 19 1059 24 is_stmt 0 view .LVU536
 2236 019a B6EE001A 		vmov.f32	s2, #5.0e-1
 2237 019e DFED330A 		vldr.32	s1, .L123+60
 2238 01a2 B0EE480A 		vmov.f32	s0, s16
 2239              	.LVL121:
1059:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 2240              		.loc 19 1059 24 view .LVU537
 2241 01a6 0020     		movs	r0, #0
 2242 01a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2243              	.LVL122:
 2244 01ac F0EE408A 		vmov.f32	s17, s0
 2245              	.LVL123:
1060:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2246              		.loc 19 1060 13 is_stmt 1 view .LVU538
1060:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2247              		.loc 19 1060 25 is_stmt 0 view .LVU539
 2248 01b0 3148     		ldr	r0, .L123+72
 2249 01b2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2250              	.LVL124:
1061:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2251              		.loc 19 1061 13 is_stmt 1 view .LVU540
1061:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2252              		.loc 19 1061 25 is_stmt 0 view .LVU541
 2253 01b6 3148     		ldr	r0, .L123+76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 95


 2254 01b8 B0EE680A 		vmov.f32	s0, s17
 2255 01bc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2256              	.LVL125:
1062:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2257              		.loc 19 1062 13 is_stmt 1 view .LVU542
1062:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2258              		.loc 19 1062 25 is_stmt 0 view .LVU543
 2259 01c0 B0EE680A 		vmov.f32	s0, s17
 2260 01c4 2E48     		ldr	r0, .L123+80
 2261 01c6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2262              	.LVL126:
1063:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2263              		.loc 19 1063 13 is_stmt 1 view .LVU544
1063:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2264              		.loc 19 1063 25 is_stmt 0 view .LVU545
 2265 01ca B0EE680A 		vmov.f32	s0, s17
 2266 01ce 2D48     		ldr	r0, .L123+84
 2267 01d0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2268              	.LVL127:
1064:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2269              		.loc 19 1064 13 is_stmt 1 view .LVU546
1064:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2270              		.loc 19 1064 30 is_stmt 0 view .LVU547
 2271 01d4 B0EE680A 		vmov.f32	s0, s17
 2272 01d8 2B48     		ldr	r0, .L123+88
 2273 01da FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2274              	.LVL128:
1065:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2275              		.loc 19 1065 13 is_stmt 1 view .LVU548
1065:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2276              		.loc 19 1065 30 is_stmt 0 view .LVU549
 2277 01de B0EE680A 		vmov.f32	s0, s17
 2278 01e2 2A48     		ldr	r0, .L123+92
 2279 01e4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2280              	.LVL129:
1066:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2281              		.loc 19 1066 13 is_stmt 1 view .LVU550
1066:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2282              		.loc 19 1066 30 is_stmt 0 view .LVU551
 2283 01e8 B0EE680A 		vmov.f32	s0, s17
 2284 01ec 2848     		ldr	r0, .L123+96
 2285 01ee FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2286              	.LVL130:
1067:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 2287              		.loc 19 1067 13 is_stmt 1 view .LVU552
1067:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 2288              		.loc 19 1067 30 is_stmt 0 view .LVU553
 2289 01f2 B0EE680A 		vmov.f32	s0, s17
 2290 01f6 2748     		ldr	r0, .L123+100
 2291 01f8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2292              	.LVL131:
1068:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2293              		.loc 19 1068 13 is_stmt 1 view .LVU554
1068:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2294              		.loc 19 1068 35 is_stmt 0 view .LVU555
 2295 01fc 264B     		ldr	r3, .L123+104
1069:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 96


 2296              		.loc 19 1069 22 view .LVU556
 2297 01fe 84ED008A 		vstr.32	s16, [r4]
1068:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2298              		.loc 19 1068 35 view .LVU557
 2299 0202 C3ED068A 		vstr.32	s17, [r3, #24]
1069:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
 2300              		.loc 19 1069 13 is_stmt 1 view .LVU558
 2301              	.LBE939:
 2302              	.LBE940:
 2303              	.LBE945:
 2304              	.LBE953:
1072:Veno-Echo.cpp **** }
 2305              		.loc 19 1072 1 is_stmt 0 view .LVU559
 2306 0206 BDEC028B 		vldm	sp!, {d8}
 2307              		.cfi_remember_state
 2308              		.cfi_restore 80
 2309              		.cfi_restore 81
 2310              		.cfi_def_cfa_offset 8
 2311              	.LVL132:
1072:Veno-Echo.cpp **** }
 2312              		.loc 19 1072 1 view .LVU560
 2313 020a 10BD     		pop	{r4, pc}
 2314              	.LVL133:
 2315              	.L114:
 2316              		.cfi_restore_state
 2317              	.LBB954:
 2318              	.LBB946:
 2319              	.LBB921:
 2320              	.LBB918:
1072:Veno-Echo.cpp **** }
 2321              		.loc 19 1072 1 view .LVU561
 2322 020c 9FED0C6B 		vldr.64	d6, .L123+16
1656:Veno-Echo.cpp ****         output = 0.0f;
 2323              		.loc 19 1656 16 view .LVU562
 2324 0210 9FED160A 		vldr.32	s0, .L123+60
 2325              	.LVL134:
1656:Veno-Echo.cpp ****         output = 0.0f;
 2326              		.loc 19 1656 16 view .LVU563
 2327 0214 77E7     		b	.L99
 2328              	.LVL135:
 2329              	.L119:
1656:Veno-Echo.cpp ****         output = 0.0f;
 2330              		.loc 19 1656 16 view .LVU564
 2331              	.LBE918:
 2332              	.LBE921:
 2333              	.LBE946:
 2334              	.LBB947:
 2335              	.LBB941:
 2336              	.LBB930:
1712:Veno-Echo.cpp ****     return retval;
 2337              		.loc 19 1712 5 is_stmt 1 view .LVU565
1712:Veno-Echo.cpp ****     return retval;
 2338              		.loc 19 1712 5 is_stmt 0 view .LVU566
 2339              	.LBE930:
 2340              	.LBE941:
1048:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2341              		.loc 19 1048 24 view .LVU567
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 97


 2342 0216 0222     		movs	r2, #2
 2343 0218 1A70     		strb	r2, [r3]
1056:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 2344              		.loc 19 1056 9 is_stmt 1 view .LVU568
 2345 021a BEE7     		b	.L113
 2346              	.LVL136:
 2347              	.L121:
1056:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 2348              		.loc 19 1056 9 is_stmt 0 view .LVU569
 2349              	.LBE947:
 2350              	.LBB948:
 2351              	.LBB922:
 2352              	.LBB902:
1712:Veno-Echo.cpp ****     return retval;
 2353              		.loc 19 1712 5 is_stmt 1 view .LVU570
1712:Veno-Echo.cpp ****     return retval;
 2354              		.loc 19 1712 5 is_stmt 0 view .LVU571
 2355              	.LBE902:
 2356              	.LBE922:
1004:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2357              		.loc 19 1004 27 view .LVU572
 2358 021c 0221     		movs	r1, #2
 2359 021e 1970     		strb	r1, [r3]
1011:Veno-Echo.cpp ****         float drywetcombo{};
 2360              		.loc 19 1011 9 is_stmt 1 view .LVU573
 2361              	.LVL137:
1013:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2362              		.loc 19 1013 9 view .LVU574
 2363 0220 50E7     		b	.L97
 2364              	.LVL138:
 2365              	.L122:
1013:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2366              		.loc 19 1013 9 is_stmt 0 view .LVU575
 2367 0222 B7EEC06A 		vcvt.f64.f32	d6, s0
 2368 0226 6EE7     		b	.L99
 2369              	.LVL139:
 2370              	.L118:
1013:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2371              		.loc 19 1013 9 view .LVU576
 2372 0228 B7EEC06A 		vcvt.f64.f32	d6, s0
 2373 022c 6DE7     		b	.L100
 2374              	.L124:
 2375 022e 00BF     		.align	3
 2376              	.L123:
 2377 0230 5C8FC2F5 		.word	4123168604
 2378 0234 285CEF3F 		.word	1072651304
 2379 0238 7B14AE47 		.word	1202590843
 2380 023c E17A943F 		.word	1066695393
 2381 0240 00000000 		.word	0
 2382 0244 00000000 		.word	0
 2383 0248 18000000 		.word	.LANCHOR4+24
 2384 024c 00000000 		.word	.LANCHOR8
 2385 0250 00000000 		.word	.LANCHOR26
 2386 0254 00000000 		.word	.LANCHOR27
 2387 0258 0AD7A33B 		.word	1000593162
 2388 025c 00000000 		.word	.LANCHOR28
 2389 0260 00000000 		.word	.LANCHOR25
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 98


 2390 0264 00000000 		.word	.LANCHOR29
 2391 0268 6F12833C 		.word	1015222895
 2392 026c 00000000 		.word	0
 2393 0270 00000000 		.word	.LANCHOR30
 2394 0274 00000000 		.word	.LANCHOR31
 2395 0278 00000000 		.word	.LANCHOR21
 2396 027c 00000000 		.word	.LANCHOR22
 2397 0280 00000000 		.word	.LANCHOR12
 2398 0284 00000000 		.word	.LANCHOR13
 2399 0288 00000000 		.word	.LANCHOR23
 2400 028c 00000000 		.word	.LANCHOR24
 2401 0290 00000000 		.word	.LANCHOR14
 2402 0294 00000000 		.word	.LANCHOR15
 2403 0298 00000000 		.word	.LANCHOR16
 2404              	.LBE948:
 2405              	.LBE954:
 2406              		.cfi_endproc
 2407              	.LFE4300:
 2409              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 2410              		.align	1
 2411              		.p2align 2,,3
 2412              		.global	_Z15Update_width_CVv
 2413              		.syntax unified
 2414              		.thumb
 2415              		.thumb_func
 2416              		.fpu fpv5-d16
 2418              	_Z15Update_width_CVv:
 2419              	.LFB4301:
1075:Veno-Echo.cpp **** {
 2420              		.loc 19 1075 1 is_stmt 1 view -0
 2421              		.cfi_startproc
 2422              		@ args = 0, pretend = 0, frame = 0
 2423              		@ frame_needed = 0, uses_anonymous_args = 0
1076:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 2424              		.loc 19 1076 5 view .LVU578
1075:Veno-Echo.cpp **** {
 2425              		.loc 19 1075 1 is_stmt 0 view .LVU579
 2426 0000 08B5     		push	{r3, lr}
 2427              		.cfi_def_cfa_offset 8
 2428              		.cfi_offset 3, -8
 2429              		.cfi_offset 14, -4
1076:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 2430              		.loc 19 1076 30 view .LVU580
 2431 0002 0521     		movs	r1, #5
 2432 0004 0348     		ldr	r0, .L127
 2433 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2434              	.LVL140:
1076:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 2435              		.loc 19 1076 13 view .LVU581
 2436 000a 034B     		ldr	r3, .L127+4
 2437 000c 83ED000A 		vstr.32	s0, [r3]
1077:Veno-Echo.cpp **** }
 2438              		.loc 19 1077 1 view .LVU582
 2439 0010 08BD     		pop	{r3, pc}
 2440              	.L128:
 2441 0012 00BF     		.align	2
 2442              	.L127:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 99


 2443 0014 18000000 		.word	.LANCHOR4+24
 2444 0018 00000000 		.word	.LANCHOR32
 2445              		.cfi_endproc
 2446              	.LFE4301:
 2448              		.section	.text._Z12Update_widthv,"ax",%progbits
 2449              		.align	1
 2450              		.p2align 2,,3
 2451              		.global	_Z12Update_widthv
 2452              		.syntax unified
 2453              		.thumb
 2454              		.thumb_func
 2455              		.fpu fpv5-d16
 2457              	_Z12Update_widthv:
 2458              	.LFB4302:
1080:Veno-Echo.cpp **** {
 2459              		.loc 19 1080 1 is_stmt 1 view -0
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 0
 2462              		@ frame_needed = 0, uses_anonymous_args = 0
1082:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
 2463              		.loc 19 1082 5 view .LVU584
1082:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
 2464              		.loc 19 1082 39 is_stmt 0 view .LVU585
 2465 0000 0722     		movs	r2, #7
 2466 0002 2E48     		ldr	r0, .L139
1080:Veno-Echo.cpp **** {
 2467              		.loc 19 1080 1 view .LVU586
 2468 0004 08B5     		push	{r3, lr}
 2469              		.cfi_def_cfa_offset 8
 2470              		.cfi_offset 3, -8
 2471              		.cfi_offset 14, -4
1082:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
 2472              		.loc 19 1082 39 view .LVU587
 2473 0006 1146     		mov	r1, r2
 2474 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2475              	.LVL141:
 2476              	.LBB955:
1086:Veno-Echo.cpp ****     if (!shift) //default controls
 2477              		.loc 19 1086 9 view .LVU588
 2478 000c 2C4B     		ldr	r3, .L139+4
 2479              	.LBE955:
1082:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
 2480              		.loc 19 1082 39 view .LVU589
 2481 000e F0EE407A 		vmov.f32	s15, s0
 2482              	.LVL142:
1084:Veno-Echo.cpp ****     static float width_Pot_Last{};
 2483              		.loc 19 1084 5 is_stmt 1 view .LVU590
1086:Veno-Echo.cpp ****     if (!shift) //default controls
 2484              		.loc 19 1086 5 view .LVU591
 2485              	.LBB978:
 2486 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2487 0014 93BB     		cbnz	r3, .L130
 2488              	.LBB956:
1089:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
 2489              		.loc 19 1089 9 view .LVU592
1091:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
 2490              		.loc 19 1091 32 is_stmt 0 view .LVU593
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 100


 2491 0016 2B4A     		ldr	r2, .L139+8
 2492              	.LBB957:
 2493              	.LBB958:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2494              		.loc 19 1652 39 view .LVU594
 2495 0018 F7EE006A 		vmov.f32	s13, #1.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2496              		.loc 19 1652 49 view .LVU595
 2497 001c F6EE005A 		vmov.f32	s11, #5.0e-1
 2498              	.LBE958:
 2499              	.LBE957:
1089:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
 2500              		.loc 19 1089 24 view .LVU596
 2501 0020 294B     		ldr	r3, .L139+12
 2502              	.LBB962:
 2503              	.LBB959:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2504              		.loc 19 1652 39 view .LVU597
 2505 0022 92ED007A 		vldr.32	s14, [r2]
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2506              		.loc 19 1652 12 view .LVU598
 2507 0026 B0EE006A 		vmov.f32	s12, #2.0e+0
 2508              	.LBE959:
 2509              	.LBE962:
1089:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
 2510              		.loc 19 1089 24 view .LVU599
 2511 002a 83ED000A 		vstr.32	s0, [r3]
1091:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
 2512              		.loc 19 1091 9 is_stmt 1 view .LVU600
 2513              	.LVL143:
 2514              	.LBB963:
 2515              	.LBI957:
1649:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 2516              		.loc 19 1649 7 view .LVU601
 2517              	.LBB960:
1651:Veno-Echo.cpp ****     float output{};
 2518              		.loc 19 1651 5 view .LVU602
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2519              		.loc 19 1652 5 view .LVU603
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2520              		.loc 19 1652 39 is_stmt 0 view .LVU604
 2521 002e 36EEC77A 		vsub.f32	s14, s13, s14
 2522              	.LVL144:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2523              		.loc 19 1652 49 view .LVU605
 2524 0032 37EE657A 		vsub.f32	s14, s14, s11
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2525              		.loc 19 1652 12 view .LVU606
 2526 0036 E7EE067A 		vfma.f32	s15, s14, s12
 2527              	.LVL145:
1654:Veno-Echo.cpp ****     if(output < 0.0f)
 2528              		.loc 19 1654 5 is_stmt 1 view .LVU607
 2529 003a F5EEC07A 		vcmpe.f32	s15, #0
 2530 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2531 0042 37D4     		bmi	.L135
1659:Veno-Echo.cpp ****     if(output > 1.0f)
 2532              		.loc 19 1659 5 view .LVU608
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 101


1661:Veno-Echo.cpp ****         output = 1.0f;
 2533              		.loc 19 1661 16 is_stmt 0 view .LVU609
 2534 0044 F4EE667A 		vcmp.f32	s15, s13
 2535 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2536 004c 36FEA70A 		vselgt.f32	s0, s13, s15
 2537              	.LVL146:
 2538              	.L131:
1664:Veno-Echo.cpp ****     return output;
 2539              		.loc 19 1664 5 is_stmt 1 view .LVU610
1664:Veno-Echo.cpp ****     return output;
 2540              		.loc 19 1664 5 is_stmt 0 view .LVU611
 2541              	.LBE960:
 2542              	.LBE963:
1091:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
 2543              		.loc 19 1091 32 view .LVU612
 2544 0050 F6EE000A 		vmov.f32	s1, #5.0e-1
 2545 0054 0020     		movs	r0, #0
 2546 0056 9FED1D1A 		vldr.32	s2, .L139+16
 2547 005a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2548              	.LVL147:
1092:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
 2549              		.loc 19 1092 9 is_stmt 1 view .LVU613
 2550              	.LBB964:
 2551              	.LBI964:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2552              		.loc 21 135 13 view .LVU614
 2553              	.LBB965:
 2554              		.loc 21 137 5 view .LVU615
 2555              		.loc 21 137 9 is_stmt 0 view .LVU616
 2556 005e 1C4B     		ldr	r3, .L139+20
 2557 0060 9FED1C7A 		vldr.32	s14, .L139+24
 2558 0064 D3ED007A 		vldr.32	s15, [r3]
 2559              	.LBE965:
 2560              	.LBE964:
 2561              	.LBB967:
 2562              	.LBB968:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 102


  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 2563              		.loc 10 60 42 view .LVU617
 2564 0068 1B4A     		ldr	r2, .L139+28
 2565              	.LBE968:
 2566              	.LBE967:
 2567              	.LBB970:
 2568              	.LBB966:
 2569              		.loc 21 137 24 view .LVU618
 2570 006a 30EE670A 		vsub.f32	s0, s0, s15
 2571              	.LVL148:
 2572              		.loc 21 137 9 view .LVU619
 2573 006e E0EE077A 		vfma.f32	s15, s0, s14
 2574 0072 C3ED007A 		vstr.32	s15, [r3]
 2575              	.LVL149:
 2576              		.loc 21 137 9 view .LVU620
 2577              	.LBE966:
 2578              	.LBE970:
1093:Veno-Echo.cpp ****         WidthXfade.SetPos(width);
 2579              		.loc 19 1093 9 is_stmt 1 view .LVU621
 2580              	.LBB971:
 2581              	.LBI967:
 2582              		.loc 10 60 17 view .LVU622
 2583              	.LBB969:
 2584              		.loc 10 60 37 view .LVU623
 2585              		.loc 10 60 42 is_stmt 0 view .LVU624
 2586 0076 C2ED007A 		vstr.32	s15, [r2]
 2587              	.LVL150:
 2588              	.L129:
 2589              		.loc 10 60 42 view .LVU625
 2590              	.LBE969:
 2591              	.LBE971:
 2592              	.LBE956:
 2593              	.LBE978:
1104:Veno-Echo.cpp **** }
 2594              		.loc 19 1104 1 view .LVU626
 2595 007a 08BD     		pop	{r3, pc}
 2596              	.LVL151:
 2597              	.L130:
 2598              	.LBB979:
1097:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 2599              		.loc 19 1097 9 is_stmt 1 view .LVU627
 2600              	.LBB973:
 2601              	.LBI973:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2602              		.loc 20 75 3 view .LVU628
 2603              	.LBB974:
 2604              		.loc 20 76 5 view .LVU629
 2605              		.loc 20 76 5 is_stmt 0 view .LVU630
 2606              	.LBE974:
 2607              	.LBE973:
1097:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 2608              		.loc 19 1097 16 view .LVU631
 2609 007c 124B     		ldr	r3, .L139+12
1097:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 2610              		.loc 19 1097 9 view .LVU632
 2611 007e 9FED177A 		vldr.32	s14, .L139+32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 103


1097:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 2612              		.loc 19 1097 16 view .LVU633
 2613 0082 D3ED006A 		vldr.32	s13, [r3]
 2614 0086 70EE667A 		vsub.f32	s15, s0, s13
 2615              	.LBB976:
 2616              	.LBB975:
 2617              		.loc 20 76 31 view .LVU634
 2618 008a F0EEE77A 		vabs.f32	s15, s15
 2619              	.LBE975:
 2620              	.LBE976:
1097:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 2621              		.loc 19 1097 9 view .LVU635
 2622 008e F4EEC77A 		vcmpe.f32	s15, s14
 2623 0092 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2624 0096 F0DD     		ble	.L129
1099:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
 2625              		.loc 19 1099 13 is_stmt 1 view .LVU636
1099:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
 2626              		.loc 19 1099 29 is_stmt 0 view .LVU637
 2627 0098 0020     		movs	r0, #0
 2628 009a 9FED111A 		vldr.32	s2, .L139+36
 2629 009e DFED0B0A 		vldr.32	s1, .L139+16
 2630 00a2 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2631              	.LVL152:
1099:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
 2632              		.loc 19 1099 22 view .LVU638
 2633 00a6 0F4A     		ldr	r2, .L139+40
1100:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 2634              		.loc 19 1100 34 view .LVU639
 2635 00a8 0F4B     		ldr	r3, .L139+44
1099:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
 2636              		.loc 19 1099 22 view .LVU640
 2637 00aa 82ED000A 		vstr.32	s0, [r2]
1100:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 2638              		.loc 19 1100 13 is_stmt 1 view .LVU641
1100:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 2639              		.loc 19 1100 34 is_stmt 0 view .LVU642
 2640 00ae 83ED020A 		vstr.32	s0, [r3, #8]
 2641              	.LBE979:
1104:Veno-Echo.cpp **** }
 2642              		.loc 19 1104 1 view .LVU643
 2643 00b2 08BD     		pop	{r3, pc}
 2644              	.LVL153:
 2645              	.L135:
 2646              	.LBB980:
 2647              	.LBB977:
 2648              	.LBB972:
 2649              	.LBB961:
1656:Veno-Echo.cpp ****         output = 0.0f;
 2650              		.loc 19 1656 16 view .LVU644
 2651 00b4 9FED050A 		vldr.32	s0, .L139+16
 2652              	.LVL154:
1656:Veno-Echo.cpp ****         output = 0.0f;
 2653              		.loc 19 1656 16 view .LVU645
 2654 00b8 CAE7     		b	.L131
 2655              	.L140:
 2656 00ba 00BF     		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 104


 2657              	.L139:
 2658 00bc 18000000 		.word	.LANCHOR4+24
 2659 00c0 00000000 		.word	.LANCHOR8
 2660 00c4 00000000 		.word	.LANCHOR32
 2661 00c8 00000000 		.word	.LANCHOR33
 2662 00cc 00000000 		.word	0
 2663 00d0 00000000 		.word	.LANCHOR34
 2664 00d4 6F12033D 		.word	1023611503
 2665 00d8 00000000 		.word	.LANCHOR35
 2666 00dc 0AD7A33B 		.word	1000593162
 2667 00e0 0000FA43 		.word	1140457472
 2668 00e4 00000000 		.word	.LANCHOR36
 2669 00e8 00000000 		.word	.LANCHOR16
 2670              	.LBE961:
 2671              	.LBE972:
 2672              	.LBE977:
 2673              	.LBE980:
 2674              		.cfi_endproc
 2675              	.LFE4302:
 2677              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 2678              		.align	1
 2679              		.p2align 2,,3
 2680              		.global	_Z20Update_crossfeedbackv
 2681              		.syntax unified
 2682              		.thumb
 2683              		.thumb_func
 2684              		.fpu fpv5-d16
 2686              	_Z20Update_crossfeedbackv:
 2687              	.LFB4303:
1107:Veno-Echo.cpp **** {
 2688              		.loc 19 1107 1 is_stmt 1 view -0
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 0
 2691              		@ frame_needed = 0, uses_anonymous_args = 0
1109:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
 2692              		.loc 19 1109 5 view .LVU647
1109:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
 2693              		.loc 19 1109 47 is_stmt 0 view .LVU648
 2694 0000 2048     		ldr	r0, .L149
 2695 0002 0022     		movs	r2, #0
 2696 0004 0721     		movs	r1, #7
1107:Veno-Echo.cpp **** {
 2697              		.loc 19 1107 1 view .LVU649
 2698 0006 38B5     		push	{r3, r4, r5, lr}
 2699              		.cfi_def_cfa_offset 16
 2700              		.cfi_offset 3, -16
 2701              		.cfi_offset 4, -12
 2702              		.cfi_offset 5, -8
 2703              		.cfi_offset 14, -4
1109:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
 2704              		.loc 19 1109 47 view .LVU650
 2705 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2706              	.LVL155:
 2707              	.LBB981:
1113:Veno-Echo.cpp ****     if (!shift) //default controls
 2708              		.loc 19 1113 9 view .LVU651
 2709 000c 1E4B     		ldr	r3, .L149+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 105


 2710              	.LVL156:
1113:Veno-Echo.cpp ****     if (!shift) //default controls
 2711              		.loc 19 1113 9 view .LVU652
 2712              	.LBE981:
1111:Veno-Echo.cpp ****     static float crossfeedback_Pot_Last{};
 2713              		.loc 19 1111 5 is_stmt 1 view .LVU653
1113:Veno-Echo.cpp ****     if (!shift) //default controls
 2714              		.loc 19 1113 5 view .LVU654
 2715              	.LBB1000:
 2716 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2717              	.LBB982:
1116:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
 2718              		.loc 19 1116 32 is_stmt 0 view .LVU655
 2719 0010 1E4B     		ldr	r3, .L149+8
 2720              	.LBE982:
1113:Veno-Echo.cpp ****     if (!shift) //default controls
 2721              		.loc 19 1113 5 view .LVU656
 2722 0012 18B3     		cbz	r0, .L147
 2723              	.LBB985:
1124:Veno-Echo.cpp ****         static float modRate{};
 2724              		.loc 19 1124 9 is_stmt 1 view .LVU657
1125:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 2725              		.loc 19 1125 9 view .LVU658
 2726              	.LVL157:
 2727              	.LBB986:
 2728              	.LBI986:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2729              		.loc 20 75 3 view .LVU659
 2730              	.LBB987:
 2731              		.loc 20 76 5 view .LVU660
 2732              		.loc 20 76 5 is_stmt 0 view .LVU661
 2733              	.LBE987:
 2734              	.LBE986:
1125:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 2735              		.loc 19 1125 16 view .LVU662
 2736 0014 93ED007A 		vldr.32	s14, [r3]
1125:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 2737              		.loc 19 1125 9 view .LVU663
 2738 0018 DFED1D6A 		vldr.32	s13, .L149+12
1125:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 2739              		.loc 19 1125 16 view .LVU664
 2740 001c 77EE407A 		vsub.f32	s15, s14, s0
 2741              	.LBB989:
 2742              	.LBB988:
 2743              		.loc 20 76 31 view .LVU665
 2744 0020 F0EEE77A 		vabs.f32	s15, s15
 2745              	.LBE988:
 2746              	.LBE989:
1125:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 2747              		.loc 19 1125 9 view .LVU666
 2748 0024 F4EEE67A 		vcmpe.f32	s15, s13
 2749 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2750 002c 00DC     		bgt	.L148
 2751              	.LBE985:
 2752              	.LBE1000:
1132:Veno-Echo.cpp **** }
 2753              		.loc 19 1132 1 view .LVU667
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 106


 2754 002e 38BD     		pop	{r3, r4, r5, pc}
 2755              	.L148:
 2756              	.LBB1001:
 2757              	.LBB998:
1127:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
 2758              		.loc 19 1127 13 is_stmt 1 view .LVU668
 2759              	.LBB990:
 2760              	.LBB991:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 2761              		.loc 8 60 20 is_stmt 0 view .LVU669
 2762 0030 184C     		ldr	r4, .L149+16
 2763              	.LBE991:
 2764              	.LBE990:
1127:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 107


 2765              		.loc 19 1127 28 view .LVU670
 2766 0032 B2EE041A 		vmov.f32	s2, #1.0e+1
 2767 0036 0020     		movs	r0, #0
 2768 0038 DFED170A 		vldr.32	s1, .L149+20
1127:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
 2769              		.loc 19 1127 21 view .LVU671
 2770 003c 174D     		ldr	r5, .L149+24
1127:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
 2771              		.loc 19 1127 28 view .LVU672
 2772 003e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2773              	.LVL158:
 2774              	.LBB995:
 2775              	.LBB992:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2776              		.loc 8 61 34 view .LVU673
 2777 0042 2046     		mov	r0, r4
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2778              		.loc 8 60 20 view .LVU674
 2779 0044 84ED020A 		vstr.32	s0, [r4, #8]
 2780              	.LBE992:
 2781              	.LBE995:
1127:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
 2782              		.loc 19 1127 21 view .LVU675
 2783 0048 85ED000A 		vstr.32	s0, [r5]
1128:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 2784              		.loc 19 1128 13 is_stmt 1 view .LVU676
 2785              	.LVL159:
 2786              	.LBB996:
 2787              	.LBI990:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 2788              		.loc 8 58 17 view .LVU677
 2789              	.LBB993:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2790              		.loc 8 60 9 view .LVU678
 2791              		.loc 8 61 9 view .LVU679
 2792              		.loc 8 61 34 is_stmt 0 view .LVU680
 2793 004c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 2794              	.LVL160:
 2795              		.loc 8 61 34 view .LVU681
 2796              	.LBE993:
 2797              	.LBE996:
1129:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 2798              		.loc 19 1129 33 view .LVU682
 2799 0050 2A68     		ldr	r2, [r5]	@ float
 2800 0052 134B     		ldr	r3, .L149+28
 2801              	.LBB997:
 2802              	.LBB994:
 2803              		.loc 8 61 20 view .LVU683
 2804 0054 84ED060A 		vstr.32	s0, [r4, #24]
 2805              	.LVL161:
 2806              		.loc 8 61 20 view .LVU684
 2807              	.LBE994:
 2808              	.LBE997:
1129:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 2809              		.loc 19 1129 13 is_stmt 1 view .LVU685
1129:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 2810              		.loc 19 1129 33 is_stmt 0 view .LVU686
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 108


 2811 0058 DA60     		str	r2, [r3, #12]	@ float
 2812              	.LBE998:
 2813              	.LBE1001:
1132:Veno-Echo.cpp **** }
 2814              		.loc 19 1132 1 view .LVU687
 2815 005a 38BD     		pop	{r3, r4, r5, pc}
 2816              	.LVL162:
 2817              	.L147:
 2818              	.LBB1002:
 2819              	.LBB999:
1116:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
 2820              		.loc 19 1116 9 is_stmt 1 view .LVU688
1118:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
 2821              		.loc 19 1118 40 is_stmt 0 view .LVU689
 2822 005c B7EE001A 		vmov.f32	s2, #1.0e+0
 2823 0060 DFED100A 		vldr.32	s1, .L149+32
1116:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
 2824              		.loc 19 1116 32 view .LVU690
 2825 0064 83ED000A 		vstr.32	s0, [r3]
1118:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
 2826              		.loc 19 1118 9 is_stmt 1 view .LVU691
1118:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
 2827              		.loc 19 1118 40 is_stmt 0 view .LVU692
 2828 0068 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2829              	.LVL163:
1119:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
 2830              		.loc 19 1119 9 is_stmt 1 view .LVU693
 2831              	.LBB983:
 2832              	.LBI983:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2833              		.loc 21 135 13 view .LVU694
 2834              	.LBB984:
 2835              		.loc 21 137 5 view .LVU695
 2836              		.loc 21 137 9 is_stmt 0 view .LVU696
 2837 006c 0E4B     		ldr	r3, .L149+36
 2838 006e 9FED0F7A 		vldr.32	s14, .L149+40
 2839 0072 D3ED007A 		vldr.32	s15, [r3]
 2840              		.loc 21 137 24 view .LVU697
 2841 0076 30EE670A 		vsub.f32	s0, s0, s15
 2842              	.LVL164:
 2843              		.loc 21 137 9 view .LVU698
 2844 007a E0EE077A 		vfma.f32	s15, s0, s14
 2845 007e C3ED007A 		vstr.32	s15, [r3]
 2846              	.LBE984:
 2847              	.LBE983:
 2848              	.LBE999:
 2849              	.LBE1002:
1132:Veno-Echo.cpp **** }
 2850              		.loc 19 1132 1 view .LVU699
 2851 0082 38BD     		pop	{r3, r4, r5, pc}
 2852              	.L150:
 2853              		.align	2
 2854              	.L149:
 2855 0084 18000000 		.word	.LANCHOR4+24
 2856 0088 00000000 		.word	.LANCHOR8
 2857 008c 00000000 		.word	.LANCHOR37
 2858 0090 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 109


 2859 0094 00000000 		.word	.LANCHOR40
 2860 0098 CDCCCC3D 		.word	1036831949
 2861 009c 00000000 		.word	.LANCHOR39
 2862 00a0 00000000 		.word	.LANCHOR16
 2863 00a4 00000000 		.word	0
 2864 00a8 00000000 		.word	.LANCHOR38
 2865 00ac 6F12033D 		.word	1023611503
 2866              		.cfi_endproc
 2867              	.LFE4303:
 2869              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 2870              		.align	1
 2871              		.p2align 2,,3
 2872              		.global	_Z18Update_filterXfadev
 2873              		.syntax unified
 2874              		.thumb
 2875              		.thumb_func
 2876              		.fpu fpv5-d16
 2878              	_Z18Update_filterXfadev:
 2879              	.LFB4304:
1135:Veno-Echo.cpp **** {
 2880              		.loc 19 1135 1 is_stmt 1 view -0
 2881              		.cfi_startproc
 2882              		@ args = 0, pretend = 0, frame = 0
 2883              		@ frame_needed = 0, uses_anonymous_args = 0
1137:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
 2884              		.loc 19 1137 5 view .LVU701
1135:Veno-Echo.cpp **** {
 2885              		.loc 19 1135 1 is_stmt 0 view .LVU702
 2886 0000 08B5     		push	{r3, lr}
 2887              		.cfi_def_cfa_offset 8
 2888              		.cfi_offset 3, -8
 2889              		.cfi_offset 14, -4
1137:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
 2890              		.loc 19 1137 45 view .LVU703
 2891 0002 0322     		movs	r2, #3
 2892 0004 0721     		movs	r1, #7
 2893 0006 2248     		ldr	r0, .L166
 2894 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2895              	.LVL165:
 2896              	.LBB1003:
1141:Veno-Echo.cpp ****     if (!shift) //default controls
 2897              		.loc 19 1141 9 view .LVU704
 2898 000c 214B     		ldr	r3, .L166+4
 2899              	.LBE1003:
1137:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
 2900              		.loc 19 1137 45 view .LVU705
 2901 000e F0EE407A 		vmov.f32	s15, s0
 2902              	.LVL166:
1139:Veno-Echo.cpp ****     static float filterXfade_Pot_Last{};
 2903              		.loc 19 1139 5 is_stmt 1 view .LVU706
1141:Veno-Echo.cpp ****     if (!shift) //default controls
 2904              		.loc 19 1141 5 view .LVU707
 2905              	.LBB1011:
 2906 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2907 0014 13B3     		cbz	r3, .L164
1153:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 2908              		.loc 19 1153 9 view .LVU708
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 110


 2909              	.LVL167:
 2910              	.LBB1004:
 2911              	.LBI1004:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2912              		.loc 20 75 3 view .LVU709
 2913              	.LBB1005:
 2914              		.loc 20 76 5 view .LVU710
 2915              		.loc 20 76 5 is_stmt 0 view .LVU711
 2916              	.LBE1005:
 2917              	.LBE1004:
1153:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 2918              		.loc 19 1153 16 view .LVU712
 2919 0016 204B     		ldr	r3, .L166+8
1153:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 2920              		.loc 19 1153 9 view .LVU713
 2921 0018 DFED206A 		vldr.32	s13, .L166+12
1153:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 2922              		.loc 19 1153 16 view .LVU714
 2923 001c 93ED007A 		vldr.32	s14, [r3]
 2924 0020 37EE407A 		vsub.f32	s14, s14, s0
 2925              	.LBB1007:
 2926              	.LBB1006:
 2927              		.loc 20 76 31 view .LVU715
 2928 0024 B0EEC77A 		vabs.f32	s14, s14
 2929              	.LBE1006:
 2930              	.LBE1007:
1153:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 2931              		.loc 19 1153 9 view .LVU716
 2932 0028 B4EEE67A 		vcmpe.f32	s14, s13
 2933 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2934 0030 13DD     		ble	.L151
1156:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
 2935              		.loc 19 1156 13 is_stmt 1 view .LVU717
 2936 0032 9FED1B7A 		vldr.32	s14, .L166+16
 2937 0036 B4EEC70A 		vcmpe.f32	s0, s14
 2938 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2939 003e 23D4     		bmi	.L165
1160:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
 2940              		.loc 19 1160 18 view .LVU718
 2941 0040 9FED187A 		vldr.32	s14, .L166+20
 2942 0044 B4EEC70A 		vcmpe.f32	s0, s14
 2943 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2944 004c 02DD     		ble	.L157
1163:Veno-Echo.cpp ****                 PostFilters = true;
 2945              		.loc 19 1163 17 view .LVU719
1163:Veno-Echo.cpp ****                 PostFilters = true;
 2946              		.loc 19 1163 29 is_stmt 0 view .LVU720
 2947 004e 164B     		ldr	r3, .L166+24
 2948 0050 0122     		movs	r2, #1
 2949 0052 1A70     		strb	r2, [r3]
 2950              	.L157:
1169:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
 2951              		.loc 19 1169 13 is_stmt 1 view .LVU721
1169:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
 2952              		.loc 19 1169 39 is_stmt 0 view .LVU722
 2953 0054 154B     		ldr	r3, .L166+28
 2954 0056 C3ED077A 		vstr.32	s15, [r3, #28]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 111


 2955              	.L151:
1169:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
 2956              		.loc 19 1169 39 view .LVU723
 2957              	.LBE1011:
1172:Veno-Echo.cpp **** }
 2958              		.loc 19 1172 1 view .LVU724
 2959 005a 08BD     		pop	{r3, pc}
 2960              	.L164:
 2961              	.LBB1012:
 2962              	.LBB1008:
1144:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
 2963              		.loc 19 1144 9 is_stmt 1 view .LVU725
1144:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
 2964              		.loc 19 1144 30 is_stmt 0 view .LVU726
 2965 005c 0E4B     		ldr	r3, .L166+8
1146:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
 2966              		.loc 19 1146 38 view .LVU727
 2967 005e B7EE001A 		vmov.f32	s2, #1.0e+0
 2968 0062 0120     		movs	r0, #1
 2969 0064 DFED120A 		vldr.32	s1, .L166+32
1144:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
 2970              		.loc 19 1144 30 view .LVU728
 2971 0068 83ED000A 		vstr.32	s0, [r3]
1146:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
 2972              		.loc 19 1146 9 is_stmt 1 view .LVU729
1146:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
 2973              		.loc 19 1146 38 is_stmt 0 view .LVU730
 2974 006c FFF7FEFF 		bl	_Z5scalefff9CurveType
 2975              	.LVL168:
1147:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
 2976              		.loc 19 1147 9 is_stmt 1 view .LVU731
 2977              	.LBB1009:
 2978              	.LBI1009:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2979              		.loc 21 135 13 view .LVU732
 2980              	.LBB1010:
 2981              		.loc 21 137 5 view .LVU733
 2982              		.loc 21 137 9 is_stmt 0 view .LVU734
 2983 0070 104B     		ldr	r3, .L166+36
 2984 0072 9FED117A 		vldr.32	s14, .L166+40
 2985 0076 D3ED007A 		vldr.32	s15, [r3]
 2986              		.loc 21 137 24 view .LVU735
 2987 007a 30EE670A 		vsub.f32	s0, s0, s15
 2988              	.LVL169:
 2989              		.loc 21 137 9 view .LVU736
 2990 007e E0EE077A 		vfma.f32	s15, s0, s14
 2991 0082 C3ED007A 		vstr.32	s15, [r3]
 2992              	.LBE1010:
 2993              	.LBE1009:
 2994              	.LBE1008:
 2995              	.LBE1012:
1172:Veno-Echo.cpp **** }
 2996              		.loc 19 1172 1 view .LVU737
 2997 0086 08BD     		pop	{r3, pc}
 2998              	.LVL170:
 2999              	.L165:
 3000              	.LBB1013:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 112


1158:Veno-Echo.cpp ****                 PostFilters = false;
 3001              		.loc 19 1158 17 is_stmt 1 view .LVU738
1158:Veno-Echo.cpp ****                 PostFilters = false;
 3002              		.loc 19 1158 29 is_stmt 0 view .LVU739
 3003 0088 074B     		ldr	r3, .L166+24
 3004 008a 0022     		movs	r2, #0
 3005 008c 1A70     		strb	r2, [r3]
 3006 008e E1E7     		b	.L157
 3007              	.L167:
 3008              		.align	2
 3009              	.L166:
 3010 0090 18000000 		.word	.LANCHOR4+24
 3011 0094 00000000 		.word	.LANCHOR8
 3012 0098 00000000 		.word	.LANCHOR41
 3013 009c 0AD7A33B 		.word	1000593162
 3014 00a0 6666E63E 		.word	1055286886
 3015 00a4 CDCC0C3F 		.word	1057803469
 3016 00a8 00000000 		.word	.LANCHOR43
 3017 00ac 00000000 		.word	.LANCHOR16
 3018 00b0 00000000 		.word	0
 3019 00b4 00000000 		.word	.LANCHOR42
 3020 00b8 6F12033D 		.word	1023611503
 3021              	.LBE1013:
 3022              		.cfi_endproc
 3023              	.LFE4304:
 3025              		.section	.text._Z8GetModCVv,"ax",%progbits
 3026              		.align	1
 3027              		.p2align 2,,3
 3028              		.global	_Z8GetModCVv
 3029              		.syntax unified
 3030              		.thumb
 3031              		.thumb_func
 3032              		.fpu fpv5-d16
 3034              	_Z8GetModCVv:
 3035              	.LFB4305:
1175:Veno-Echo.cpp **** {
 3036              		.loc 19 1175 1 is_stmt 1 view -0
 3037              		.cfi_startproc
 3038              		@ args = 0, pretend = 0, frame = 0
 3039              		@ frame_needed = 0, uses_anonymous_args = 0
1177:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
 3040              		.loc 19 1177 5 view .LVU741
1175:Veno-Echo.cpp **** {
 3041              		.loc 19 1175 1 is_stmt 0 view .LVU742
 3042 0000 08B5     		push	{r3, lr}
 3043              		.cfi_def_cfa_offset 8
 3044              		.cfi_offset 3, -8
 3045              		.cfi_offset 14, -4
1177:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
 3046              		.loc 19 1177 30 view .LVU743
 3047 0002 0621     		movs	r1, #6
 3048 0004 0648     		ldr	r0, .L170
 3049 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3050              	.LVL171:
 3051 000a 0020     		movs	r0, #0
 3052 000c 9FED051A 		vldr.32	s2, .L170+4
 3053 0010 DFED050A 		vldr.32	s1, .L170+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 113


 3054 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3055              	.LVL172:
1177:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
 3056              		.loc 19 1177 23 view .LVU744
 3057 0018 044B     		ldr	r3, .L170+12
 3058 001a 83ED000A 		vstr.32	s0, [r3]
1179:Veno-Echo.cpp **** }
 3059              		.loc 19 1179 1 view .LVU745
 3060 001e 08BD     		pop	{r3, pc}
 3061              	.L171:
 3062              		.align	2
 3063              	.L170:
 3064 0020 18000000 		.word	.LANCHOR4+24
 3065 0024 00004843 		.word	1128792064
 3066 0028 000048C3 		.word	3276275712
 3067 002c 00000000 		.word	.LANCHOR44
 3068              		.cfi_endproc
 3069              	.LFE4305:
 3071              		.section	.text._Z10Update_Modv,"ax",%progbits
 3072              		.align	1
 3073              		.p2align 2,,3
 3074              		.global	_Z10Update_Modv
 3075              		.syntax unified
 3076              		.thumb
 3077              		.thumb_func
 3078              		.fpu fpv5-d16
 3080              	_Z10Update_Modv:
 3081              	.LFB4306:
1182:Veno-Echo.cpp **** {    
 3082              		.loc 19 1182 1 is_stmt 1 view -0
 3083              		.cfi_startproc
 3084              		@ args = 0, pretend = 0, frame = 8
 3085              		@ frame_needed = 0, uses_anonymous_args = 0
1183:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3086              		.loc 19 1183 5 view .LVU747
1184:Veno-Echo.cpp ****     static float modulation_CV{};
 3087              		.loc 19 1184 5 view .LVU748
1185:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 3088              		.loc 19 1185 5 view .LVU749
 3089              	.LVL173:
 3090              	.LBB1014:
 3091              	.LBI1014:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3092              		.loc 21 135 13 view .LVU750
 3093              	.LBB1015:
 3094              		.loc 21 137 5 view .LVU751
 3095              	.LBE1015:
 3096              	.LBE1014:
1182:Veno-Echo.cpp **** {    
 3097              		.loc 19 1182 1 is_stmt 0 view .LVU752
 3098 0000 30B5     		push	{r4, r5, lr}
 3099              		.cfi_def_cfa_offset 12
 3100              		.cfi_offset 4, -12
 3101              		.cfi_offset 5, -8
 3102              		.cfi_offset 14, -4
1185:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 3103              		.loc 19 1185 13 view .LVU753
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 114


 3104 0002 1E4A     		ldr	r2, .L174
 3105              	.LBB1021:
 3106              	.LBB1016:
 3107              		.loc 21 137 9 view .LVU754
 3108 0004 1E4C     		ldr	r4, .L174+4
 3109              	.LBE1016:
 3110              	.LBE1021:
1186:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 3111              		.loc 19 1186 13 view .LVU755
 3112 0006 1F4B     		ldr	r3, .L174+8
 3113              	.LBB1022:
 3114              	.LBB1023:
 3115              		.loc 21 137 9 view .LVU756
 3116 0008 1F4D     		ldr	r5, .L174+12
 3117              	.LBE1023:
 3118              	.LBE1022:
 3119              	.LBB1028:
 3120              	.LBB1017:
 3121 000a 94ED007A 		vldr.32	s14, [r4]
 3122              		.loc 21 137 24 view .LVU757
 3123 000e 92ED006A 		vldr.32	s12, [r2]
 3124              	.LBE1017:
 3125              	.LBE1028:
 3126              	.LBB1029:
 3127              	.LBB1024:
 3128              		.loc 21 137 9 view .LVU758
 3129 0012 D5ED007A 		vldr.32	s15, [r5]
 3130              		.loc 21 137 24 view .LVU759
 3131 0016 D3ED006A 		vldr.32	s13, [r3]
 3132              	.LBE1024:
 3133              	.LBE1029:
 3134              	.LBB1030:
 3135              	.LBB1018:
 3136 001a 36EE476A 		vsub.f32	s12, s12, s14
 3137              		.loc 21 137 9 view .LVU760
 3138 001e DFED1B5A 		vldr.32	s11, .L174+16
 3139              	.LBE1018:
 3140              	.LBE1030:
 3141              	.LBB1031:
 3142              	.LBB1025:
 3143              		.loc 21 137 24 view .LVU761
 3144 0022 76EEE76A 		vsub.f32	s13, s13, s15
 3145              	.LBE1025:
 3146              	.LBE1031:
1188:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3147              		.loc 19 1188 34 view .LVU762
 3148 0026 1A48     		ldr	r0, .L174+20
 3149              	.LBB1032:
 3150              	.LBB1019:
 3151              		.loc 21 137 9 view .LVU763
 3152 0028 A6EE257A 		vfma.f32	s14, s12, s11
 3153              	.LBE1019:
 3154              	.LBE1032:
 3155              	.LBB1033:
 3156              	.LBB1026:
 3157 002c E6EEA57A 		vfma.f32	s15, s13, s11
 3158              	.LBE1026:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 115


 3159              	.LBE1033:
1182:Veno-Echo.cpp **** {    
 3160              		.loc 19 1182 1 view .LVU764
 3161 0030 2DED028B 		vpush.64	{d8}
 3162              		.cfi_def_cfa_offset 20
 3163              		.cfi_offset 80, -20
 3164              		.cfi_offset 81, -16
 3165 0034 83B0     		sub	sp, sp, #12
 3166              		.cfi_def_cfa_offset 32
 3167              	.LBB1034:
 3168              	.LBB1020:
 3169              		.loc 21 137 9 view .LVU765
 3170 0036 84ED007A 		vstr.32	s14, [r4]
 3171              	.LVL174:
 3172              		.loc 21 137 9 view .LVU766
 3173              	.LBE1020:
 3174              	.LBE1034:
1186:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 3175              		.loc 19 1186 5 is_stmt 1 view .LVU767
 3176              	.LBB1035:
 3177              	.LBI1022:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3178              		.loc 21 135 13 view .LVU768
 3179              	.LBB1027:
 3180              		.loc 21 137 5 view .LVU769
 3181              		.loc 21 137 9 is_stmt 0 view .LVU770
 3182 003a C5ED007A 		vstr.32	s15, [r5]
 3183              	.LVL175:
 3184              		.loc 21 137 9 view .LVU771
 3185              	.LBE1027:
 3186              	.LBE1035:
1188:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3187              		.loc 19 1188 5 is_stmt 1 view .LVU772
1188:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3188              		.loc 19 1188 34 is_stmt 0 view .LVU773
 3189 003e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 3190              	.LVL176:
1188:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3191              		.loc 19 1188 37 view .LVU774
 3192 0042 D5ED008A 		vldr.32	s17, [r5]
1188:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3193              		.loc 19 1188 34 view .LVU775
 3194 0046 B0EE408A 		vmov.f32	s16, s0
 3195              	.LVL177:
1190:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3196              		.loc 19 1190 5 is_stmt 1 view .LVU776
1190:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3197              		.loc 19 1190 40 is_stmt 0 view .LVU777
 3198 004a D4ED007A 		vldr.32	s15, [r4]
1190:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3199              		.loc 19 1190 25 view .LVU778
 3200 004e 01A9     		add	r1, sp, #4
 3201 0050 1048     		ldr	r0, .L174+24
1190:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3202              		.loc 19 1190 40 view .LVU779
 3203 0052 E0EE287A 		vfma.f32	s15, s0, s17
 3204 0056 CDED017A 		vstr.32	s15, [sp, #4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 116


1190:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3205              		.loc 19 1190 25 view .LVU780
 3206 005a FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 3207              	.LVL178:
1191:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3208              		.loc 19 1191 5 is_stmt 1 view .LVU781
1191:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3209              		.loc 19 1191 40 is_stmt 0 view .LVU782
 3210 005e D4ED007A 		vldr.32	s15, [r4]
1191:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3211              		.loc 19 1191 25 view .LVU783
 3212 0062 01A9     		add	r1, sp, #4
 3213 0064 0C48     		ldr	r0, .L174+28
1191:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3214              		.loc 19 1191 40 view .LVU784
 3215 0066 E8EE287A 		vfma.f32	s15, s16, s17
 3216 006a CDED017A 		vstr.32	s15, [sp, #4]
1191:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3217              		.loc 19 1191 25 view .LVU785
 3218 006e FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 3219              	.LVL179:
1192:Veno-Echo.cpp **** }
 3220              		.loc 19 1192 1 view .LVU786
 3221 0072 03B0     		add	sp, sp, #12
 3222              		.cfi_def_cfa_offset 20
 3223              		@ sp needed
 3224 0074 BDEC028B 		vldm	sp!, {d8}
 3225              		.cfi_restore 80
 3226              		.cfi_restore 81
 3227              		.cfi_def_cfa_offset 12
 3228              	.LVL180:
1192:Veno-Echo.cpp **** }
 3229              		.loc 19 1192 1 view .LVU787
 3230 0078 30BD     		pop	{r4, r5, pc}
 3231              	.L175:
 3232 007a 00BF     		.align	2
 3233              	.L174:
 3234 007c 00000000 		.word	.LANCHOR44
 3235 0080 00000000 		.word	.LANCHOR45
 3236 0084 00000000 		.word	.LANCHOR36
 3237 0088 00000000 		.word	.LANCHOR46
 3238 008c 0AD7233C 		.word	1008981770
 3239 0090 00000000 		.word	.LANCHOR40
 3240 0094 00000000 		.word	.LANCHOR0
 3241 0098 00000000 		.word	.LANCHOR1
 3242              		.cfi_endproc
 3243              	.LFE4306:
 3245              		.section	.text._Z11UpdateClockv,"ax",%progbits
 3246              		.align	1
 3247              		.p2align 2,,3
 3248              		.global	_Z11UpdateClockv
 3249              		.syntax unified
 3250              		.thumb
 3251              		.thumb_func
 3252              		.fpu fpv5-d16
 3254              	_Z11UpdateClockv:
 3255              	.LFB4307:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 117


1195:Veno-Echo.cpp **** {
 3256              		.loc 19 1195 1 is_stmt 1 view -0
 3257              		.cfi_startproc
 3258              		@ args = 0, pretend = 0, frame = 0
 3259              		@ frame_needed = 0, uses_anonymous_args = 0
1196:Veno-Echo.cpp ****     static int divCounter{};
 3260              		.loc 19 1196 5 view .LVU789
1197:Veno-Echo.cpp ****     ClockIn.Debounce();
 3261              		.loc 19 1197 5 view .LVU790
1195:Veno-Echo.cpp **** {
 3262              		.loc 19 1195 1 is_stmt 0 view .LVU791
 3263 0000 10B5     		push	{r4, lr}
 3264              		.cfi_def_cfa_offset 8
 3265              		.cfi_offset 4, -8
 3266              		.cfi_offset 14, -4
1197:Veno-Echo.cpp ****     ClockIn.Debounce();
 3267              		.loc 19 1197 21 view .LVU792
 3268 0002 184C     		ldr	r4, .L190
 3269 0004 2046     		mov	r0, r4
 3270 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 3271              	.LVL181:
1200:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
 3272              		.loc 19 1200 5 is_stmt 1 view .LVU793
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 3273              		.loc 1 69 38 view .LVU794
1200:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
 3274              		.loc 19 1200 5 is_stmt 0 view .LVU795
 3275 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3276 000c 7F2B     		cmp	r3, #127
 3277 000e 00D0     		beq	.L188
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 118


 3278              	.L176:
1225:Veno-Echo.cpp **** }
 3279              		.loc 19 1225 1 view .LVU796
 3280 0010 10BD     		pop	{r4, pc}
 3281              	.L188:
1202:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
 3282              		.loc 19 1202 9 is_stmt 1 view .LVU797
1202:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
 3283              		.loc 19 1202 20 is_stmt 0 view .LVU798
 3284 0012 0023     		movs	r3, #0
 3285 0014 144C     		ldr	r4, .L190+4
1203:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 3286              		.loc 19 1203 33 view .LVU799
 3287 0016 1548     		ldr	r0, .L190+8
1202:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
 3288              		.loc 19 1202 20 view .LVU800
 3289 0018 2360     		str	r3, [r4]
1203:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 3290              		.loc 19 1203 9 is_stmt 1 view .LVU801
1203:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 3291              		.loc 19 1203 33 is_stmt 0 view .LVU802
 3292 001a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 3293              	.LVL182:
1204:Veno-Echo.cpp ****         if(divCounter == 0)
 3294              		.loc 19 1204 9 is_stmt 1 view .LVU803
 3295 001e 2368     		ldr	r3, [r4]
 3296 0020 002B     		cmp	r3, #0
 3297 0022 F5D1     		bne	.L176
1206:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
 3298              		.loc 19 1206 13 view .LVU804
1206:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
 3299              		.loc 19 1206 29 is_stmt 0 view .LVU805
 3300 0024 1248     		ldr	r0, .L190+12
 3301 0026 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 3302              	.LVL183:
1206:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
 3303              		.loc 19 1206 13 view .LVU806
 3304 002a 0028     		cmp	r0, #0
 3305 002c F0D0     		beq	.L176
1208:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 3306              		.loc 19 1208 17 is_stmt 1 view .LVU807
1208:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 3307              		.loc 19 1208 39 is_stmt 0 view .LVU808
 3308 002e 1048     		ldr	r0, .L190+12
 3309 0030 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 3310              	.LVL184:
 3311 0034 0D48     		ldr	r0, .L190+8
 3312 0036 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 3313              	.LVL185:
1209:Veno-Echo.cpp ****                 if(syncMode)
 3314              		.loc 19 1209 17 is_stmt 1 view .LVU809
 3315 003a 0E4B     		ldr	r3, .L190+16
 3316 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3317 003e 002B     		cmp	r3, #0
 3318 0040 E6D0     		beq	.L176
 3319              	.LBB1040:
 3320              	.LBI1040:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 119


1194:Veno-Echo.cpp **** void UpdateClock()
 3321              		.loc 19 1194 6 view .LVU810
 3322              	.LBB1041:
1211:Veno-Echo.cpp ****                     if(div_L <= UNITY)
 3323              		.loc 19 1211 21 view .LVU811
1211:Veno-Echo.cpp ****                     if(div_L <= UNITY)
 3324              		.loc 19 1211 30 is_stmt 0 view .LVU812
 3325 0042 0D4B     		ldr	r3, .L190+20
1211:Veno-Echo.cpp ****                     if(div_L <= UNITY)
 3326              		.loc 19 1211 21 view .LVU813
 3327 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3328 0046 052B     		cmp	r3, #5
 3329 0048 08D9     		bls	.L189
 3330              	.L180:
1216:Veno-Echo.cpp ****                     if(div_R <= UNITY)
 3331              		.loc 19 1216 21 is_stmt 1 view .LVU814
1216:Veno-Echo.cpp ****                     if(div_R <= UNITY)
 3332              		.loc 19 1216 30 is_stmt 0 view .LVU815
 3333 004a 0C4B     		ldr	r3, .L190+24
1216:Veno-Echo.cpp ****                     if(div_R <= UNITY)
 3334              		.loc 19 1216 21 view .LVU816
 3335 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3336 004e 052B     		cmp	r3, #5
 3337 0050 DED8     		bhi	.L176
1218:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
 3338              		.loc 19 1218 25 is_stmt 1 view .LVU817
1218:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
 3339              		.loc 19 1218 51 is_stmt 0 view .LVU818
 3340 0052 0B48     		ldr	r0, .L190+28
 3341              	.LBE1041:
 3342              	.LBE1040:
1225:Veno-Echo.cpp **** }
 3343              		.loc 19 1225 1 view .LVU819
 3344 0054 BDE81040 		pop	{r4, lr}
 3345              		.cfi_remember_state
 3346              		.cfi_restore 14
 3347              		.cfi_restore 4
 3348              		.cfi_def_cfa_offset 0
 3349              	.LBB1043:
 3350              	.LBB1042:
1218:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
 3351              		.loc 19 1218 51 view .LVU820
 3352 0058 FFF7FEBF 		b	_ZN8TempoLED10resetPhaseEv
 3353              	.LVL186:
 3354              	.L189:
 3355              		.cfi_restore_state
1213:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
 3356              		.loc 19 1213 25 is_stmt 1 view .LVU821
1213:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
 3357              		.loc 19 1213 51 is_stmt 0 view .LVU822
 3358 005c 0948     		ldr	r0, .L190+32
 3359 005e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 3360              	.LVL187:
 3361 0062 F2E7     		b	.L180
 3362              	.L191:
 3363              		.align	2
 3364              	.L190:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 120


 3365 0064 00000000 		.word	.LANCHOR47
 3366 0068 00000000 		.word	.LANCHOR48
 3367 006c 00000000 		.word	.LANCHOR49
 3368 0070 00000000 		.word	.LANCHOR50
 3369 0074 00000000 		.word	.LANCHOR51
 3370 0078 00000000 		.word	.LANCHOR52
 3371 007c 00000000 		.word	.LANCHOR53
 3372 0080 04000000 		.word	.LANCHOR1+4
 3373 0084 04000000 		.word	.LANCHOR0+4
 3374              	.LBE1042:
 3375              	.LBE1043:
 3376              		.cfi_endproc
 3377              	.LFE4307:
 3379              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 3380              		.align	1
 3381              		.p2align 2,,3
 3382              		.global	_Z19Update_BaseTempoLEDv
 3383              		.syntax unified
 3384              		.thumb
 3385              		.thumb_func
 3386              		.fpu fpv5-d16
 3388              	_Z19Update_BaseTempoLEDv:
 3389              	.LFB4309:
1362:Veno-Echo.cpp **** {
 3390              		.loc 19 1362 1 is_stmt 1 view -0
 3391              		.cfi_startproc
 3392              		@ args = 0, pretend = 0, frame = 0
 3393              		@ frame_needed = 0, uses_anonymous_args = 0
1363:Veno-Echo.cpp ****     tempoLED_BASE.update();
 3394              		.loc 19 1363 5 view .LVU824
1363:Veno-Echo.cpp ****     tempoLED_BASE.update();
 3395              		.loc 19 1363 25 is_stmt 0 view .LVU825
 3396 0000 0F48     		ldr	r0, .L206
1362:Veno-Echo.cpp **** {
 3397              		.loc 19 1362 1 view .LVU826
 3398 0002 10B5     		push	{r4, lr}
 3399              		.cfi_def_cfa_offset 8
 3400              		.cfi_offset 4, -8
 3401              		.cfi_offset 14, -4
1363:Veno-Echo.cpp ****     tempoLED_BASE.update();
 3402              		.loc 19 1363 25 view .LVU827
 3403 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 3404              	.LVL188:
1365:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
 3405              		.loc 19 1365 5 is_stmt 1 view .LVU828
1365:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
 3406              		.loc 19 1365 27 is_stmt 0 view .LVU829
 3407 0008 0D48     		ldr	r0, .L206
 3408 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 3409              	.LVL189:
1365:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
 3410              		.loc 19 1365 5 view .LVU830
 3411 000e 28B1     		cbz	r0, .L192
1367:Veno-Echo.cpp ****         if(delayL_flag) //if left delay time change flag set
 3412              		.loc 19 1367 9 is_stmt 1 view .LVU831
 3413 0010 0C4C     		ldr	r4, .L206+4
 3414 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 121


 3415 0014 4BB9     		cbnz	r3, .L204
1373:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
 3416              		.loc 19 1373 9 view .LVU832
 3417 0016 0C4C     		ldr	r4, .L206+8
 3418 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3419 001a 03B9     		cbnz	r3, .L205
 3420              	.L192:
1380:Veno-Echo.cpp **** }
 3421              		.loc 19 1380 1 is_stmt 0 view .LVU833
 3422 001c 10BD     		pop	{r4, pc}
 3423              	.L205:
 3424              	.LBB1046:
 3425              	.LBI1046:
1361:Veno-Echo.cpp **** void Update_BaseTempoLED()
 3426              		.loc 19 1361 6 is_stmt 1 view .LVU834
 3427              	.LBB1047:
1375:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 3428              		.loc 19 1375 13 view .LVU835
1375:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 3429              		.loc 19 1375 39 is_stmt 0 view .LVU836
 3430 001e 0B48     		ldr	r0, .L206+12
 3431 0020 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 3432              	.LVL190:
1376:Veno-Echo.cpp ****             delayR_flag = false;
 3433              		.loc 19 1376 13 is_stmt 1 view .LVU837
1376:Veno-Echo.cpp ****             delayR_flag = false;
 3434              		.loc 19 1376 25 is_stmt 0 view .LVU838
 3435 0024 0023     		movs	r3, #0
 3436 0026 2370     		strb	r3, [r4]
 3437              	.LBE1047:
 3438              	.LBE1046:
1380:Veno-Echo.cpp **** }
 3439              		.loc 19 1380 1 view .LVU839
 3440 0028 10BD     		pop	{r4, pc}
 3441              	.L204:
1369:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
 3442              		.loc 19 1369 13 is_stmt 1 view .LVU840
1369:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
 3443              		.loc 19 1369 39 is_stmt 0 view .LVU841
 3444 002a 0948     		ldr	r0, .L206+16
 3445 002c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 3446              	.LVL191:
1370:Veno-Echo.cpp ****             delayL_flag = false;
 3447              		.loc 19 1370 13 is_stmt 1 view .LVU842
1370:Veno-Echo.cpp ****             delayL_flag = false;
 3448              		.loc 19 1370 25 is_stmt 0 view .LVU843
 3449 0030 0023     		movs	r3, #0
 3450 0032 2370     		strb	r3, [r4]
1373:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
 3451              		.loc 19 1373 9 is_stmt 1 view .LVU844
 3452 0034 044C     		ldr	r4, .L206+8
 3453 0036 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3454 0038 002B     		cmp	r3, #0
 3455 003a EFD0     		beq	.L192
 3456 003c EFE7     		b	.L205
 3457              	.L207:
 3458 003e 00BF     		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 122


 3459              	.L206:
 3460 0040 00000000 		.word	.LANCHOR49
 3461 0044 00000000 		.word	.LANCHOR54
 3462 0048 00000000 		.word	.LANCHOR55
 3463 004c 04000000 		.word	.LANCHOR1+4
 3464 0050 04000000 		.word	.LANCHOR0+4
 3465              		.cfi_endproc
 3466              	.LFE4309:
 3468              		.section	.text._Z11SetTempoDivfP9TempoDivs,"ax",%progbits
 3469              		.align	1
 3470              		.p2align 2,,3
 3471              		.global	_Z11SetTempoDivfP9TempoDivs
 3472              		.syntax unified
 3473              		.thumb
 3474              		.thumb_func
 3475              		.fpu fpv5-d16
 3477              	_Z11SetTempoDivfP9TempoDivs:
 3478              	.LVL192:
 3479              	.LFB4310:
1384:Veno-Echo.cpp **** {
 3480              		.loc 19 1384 1 view -0
 3481              		.cfi_startproc
 3482              		@ args = 0, pretend = 0, frame = 0
 3483              		@ frame_needed = 0, uses_anonymous_args = 0
 3484              		@ link register save eliminated.
1386:Veno-Echo.cpp ****     float retVal{};
 3485              		.loc 19 1386 5 view .LVU846
1388:Veno-Echo.cpp ****     if (input < 0.0909f)
 3486              		.loc 19 1388 5 view .LVU847
 3487 0000 DFED417A 		vldr.32	s15, .L254
 3488 0004 B4EEE70A 		vcmpe.f32	s0, s15
 3489 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3490 000c 04D5     		bpl	.L242
1390:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
 3491              		.loc 19 1390 9 view .LVU848
 3492              	.LVL193:
1391:Veno-Echo.cpp ****         *div = DIV6;
 3493              		.loc 19 1391 9 view .LVU849
1391:Veno-Echo.cpp ****         *div = DIV6;
 3494              		.loc 19 1391 14 is_stmt 0 view .LVU850
 3495 000e 0023     		movs	r3, #0
1390:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
 3496              		.loc 19 1390 16 view .LVU851
 3497 0010 9FED3E0A 		vldr.32	s0, .L254+4
 3498              	.LVL194:
1391:Veno-Echo.cpp ****         *div = DIV6;
 3499              		.loc 19 1391 14 view .LVU852
 3500 0014 0370     		strb	r3, [r0]
 3501 0016 7047     		bx	lr
 3502              	.LVL195:
 3503              	.L242:
1394:Veno-Echo.cpp ****     else if (input < 0.1818f)
 3504              		.loc 19 1394 10 is_stmt 1 view .LVU853
 3505 0018 DFED3D7A 		vldr.32	s15, .L254+8
 3506 001c B4EEE70A 		vcmpe.f32	s0, s15
 3507 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3508 0024 04D5     		bpl	.L243
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 123


1396:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
 3509              		.loc 19 1396 8 view .LVU854
 3510              	.LVL196:
1397:Veno-Echo.cpp ****        *div = DIV5;
 3511              		.loc 19 1397 8 view .LVU855
1397:Veno-Echo.cpp ****        *div = DIV5;
 3512              		.loc 19 1397 13 is_stmt 0 view .LVU856
 3513 0026 0123     		movs	r3, #1
1396:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
 3514              		.loc 19 1396 15 view .LVU857
 3515 0028 9FED3A0A 		vldr.32	s0, .L254+12
 3516              	.LVL197:
1397:Veno-Echo.cpp ****        *div = DIV5;
 3517              		.loc 19 1397 13 view .LVU858
 3518 002c 0370     		strb	r3, [r0]
 3519 002e 7047     		bx	lr
 3520              	.LVL198:
 3521              	.L243:
1400:Veno-Echo.cpp ****     else if (input < 0.2727f)
 3522              		.loc 19 1400 10 is_stmt 1 view .LVU859
 3523 0030 DFED397A 		vldr.32	s15, .L254+16
 3524 0034 B4EEE70A 		vcmpe.f32	s0, s15
 3525 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3526 003c 0BD4     		bmi	.L252
1406:Veno-Echo.cpp ****     else if (input < 0.3636f)
 3527              		.loc 19 1406 10 view .LVU860
 3528 003e DFED377A 		vldr.32	s15, .L254+20
 3529 0042 B4EEE70A 		vcmpe.f32	s0, s15
 3530 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3531 004a 09D5     		bpl	.L245
1408:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
 3532              		.loc 19 1408 9 view .LVU861
 3533              	.LVL199:
1409:Veno-Echo.cpp ****         *div = DIV3;
 3534              		.loc 19 1409 9 view .LVU862
1409:Veno-Echo.cpp ****         *div = DIV3;
 3535              		.loc 19 1409 14 is_stmt 0 view .LVU863
 3536 004c 0323     		movs	r3, #3
1408:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
 3537              		.loc 19 1408 16 view .LVU864
 3538 004e 9FED340A 		vldr.32	s0, .L254+24
 3539              	.LVL200:
1409:Veno-Echo.cpp ****         *div = DIV3;
 3540              		.loc 19 1409 14 view .LVU865
 3541 0052 0370     		strb	r3, [r0]
 3542 0054 7047     		bx	lr
 3543              	.LVL201:
 3544              	.L252:
1402:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
 3545              		.loc 19 1402 9 is_stmt 1 view .LVU866
1403:Veno-Echo.cpp ****         *div = DIV4;
 3546              		.loc 19 1403 9 view .LVU867
1403:Veno-Echo.cpp ****         *div = DIV4;
 3547              		.loc 19 1403 14 is_stmt 0 view .LVU868
 3548 0056 0223     		movs	r3, #2
1402:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
 3549              		.loc 19 1402 16 view .LVU869
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 124


 3550 0058 B5EE000A 		vmov.f32	s0, #2.5e-1
 3551              	.LVL202:
1403:Veno-Echo.cpp ****         *div = DIV4;
 3552              		.loc 19 1403 14 view .LVU870
 3553 005c 0370     		strb	r3, [r0]
 3554 005e 7047     		bx	lr
 3555              	.LVL203:
 3556              	.L245:
1412:Veno-Echo.cpp ****     else if (input < 0.4545f)
 3557              		.loc 19 1412 10 is_stmt 1 view .LVU871
 3558 0060 DFED307A 		vldr.32	s15, .L254+28
 3559 0064 B4EEE70A 		vcmpe.f32	s0, s15
 3560 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3561 006c 0BD4     		bmi	.L253
1418:Veno-Echo.cpp ****     else if (input <  0.5455f)
 3562              		.loc 19 1418 10 view .LVU872
 3563 006e DFED2E7A 		vldr.32	s15, .L254+32
 3564 0072 B4EEE70A 		vcmpe.f32	s0, s15
 3565 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3566 007a 09D5     		bpl	.L247
 3567              	.L230:
1420:Veno-Echo.cpp ****         retVal = (1.0f);
 3568              		.loc 19 1420 9 view .LVU873
 3569              	.LVL204:
1421:Veno-Echo.cpp ****         *div = UNITY;
 3570              		.loc 19 1421 9 view .LVU874
1421:Veno-Echo.cpp ****         *div = UNITY;
 3571              		.loc 19 1421 14 is_stmt 0 view .LVU875
 3572 007c 0523     		movs	r3, #5
1420:Veno-Echo.cpp ****         retVal = (1.0f);
 3573              		.loc 19 1420 16 view .LVU876
 3574 007e B7EE000A 		vmov.f32	s0, #1.0e+0
 3575              	.LVL205:
1421:Veno-Echo.cpp ****         *div = UNITY;
 3576              		.loc 19 1421 14 view .LVU877
 3577 0082 0370     		strb	r3, [r0]
 3578 0084 7047     		bx	lr
 3579              	.LVL206:
 3580              	.L253:
1414:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
 3581              		.loc 19 1414 9 is_stmt 1 view .LVU878
1415:Veno-Echo.cpp ****         *div = DIV2;
 3582              		.loc 19 1415 9 view .LVU879
1415:Veno-Echo.cpp ****         *div = DIV2;
 3583              		.loc 19 1415 14 is_stmt 0 view .LVU880
 3584 0086 0423     		movs	r3, #4
1414:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
 3585              		.loc 19 1414 16 view .LVU881
 3586 0088 B6EE000A 		vmov.f32	s0, #5.0e-1
 3587              	.LVL207:
1415:Veno-Echo.cpp ****         *div = DIV2;
 3588              		.loc 19 1415 14 view .LVU882
 3589 008c 0370     		strb	r3, [r0]
 3590 008e 7047     		bx	lr
 3591              	.LVL208:
 3592              	.L247:
1424:Veno-Echo.cpp ****     else if (input < 0.6364f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 125


 3593              		.loc 19 1424 10 is_stmt 1 view .LVU883
 3594 0090 DFED267A 		vldr.32	s15, .L254+36
 3595 0094 B4EEE70A 		vcmpe.f32	s0, s15
 3596 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3597 009c 04D5     		bpl	.L248
1426:Veno-Echo.cpp ****         retVal = 2.0f;
 3598              		.loc 19 1426 9 view .LVU884
 3599              	.LVL209:
1427:Veno-Echo.cpp ****         *div = MULT2;
 3600              		.loc 19 1427 9 view .LVU885
1427:Veno-Echo.cpp ****         *div = MULT2;
 3601              		.loc 19 1427 14 is_stmt 0 view .LVU886
 3602 009e 0623     		movs	r3, #6
1426:Veno-Echo.cpp ****         retVal = 2.0f;
 3603              		.loc 19 1426 16 view .LVU887
 3604 00a0 B0EE000A 		vmov.f32	s0, #2.0e+0
 3605              	.LVL210:
1427:Veno-Echo.cpp ****         *div = MULT2;
 3606              		.loc 19 1427 14 view .LVU888
 3607 00a4 0370     		strb	r3, [r0]
 3608 00a6 7047     		bx	lr
 3609              	.LVL211:
 3610              	.L248:
1430:Veno-Echo.cpp ****     else if (input < 0.7273f)
 3611              		.loc 19 1430 10 is_stmt 1 view .LVU889
 3612 00a8 DFED217A 		vldr.32	s15, .L254+40
 3613 00ac B4EEE70A 		vcmpe.f32	s0, s15
 3614 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3615 00b4 04D5     		bpl	.L249
1432:Veno-Echo.cpp ****         retVal = 3.0f;
 3616              		.loc 19 1432 9 view .LVU890
 3617              	.LVL212:
1433:Veno-Echo.cpp ****         *div = MULT3;
 3618              		.loc 19 1433 9 view .LVU891
1433:Veno-Echo.cpp ****         *div = MULT3;
 3619              		.loc 19 1433 14 is_stmt 0 view .LVU892
 3620 00b6 0723     		movs	r3, #7
1432:Veno-Echo.cpp ****         retVal = 3.0f;
 3621              		.loc 19 1432 16 view .LVU893
 3622 00b8 B0EE080A 		vmov.f32	s0, #3.0e+0
 3623              	.LVL213:
1433:Veno-Echo.cpp ****         *div = MULT3;
 3624              		.loc 19 1433 14 view .LVU894
 3625 00bc 0370     		strb	r3, [r0]
 3626 00be 7047     		bx	lr
 3627              	.LVL214:
 3628              	.L249:
1436:Veno-Echo.cpp ****     else if (input < 0.8182f)
 3629              		.loc 19 1436 10 is_stmt 1 view .LVU895
 3630 00c0 DFED1C7A 		vldr.32	s15, .L254+44
 3631 00c4 B4EEE70A 		vcmpe.f32	s0, s15
 3632 00c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3633 00cc 04D5     		bpl	.L250
1438:Veno-Echo.cpp ****         retVal = 4.0f;
 3634              		.loc 19 1438 9 view .LVU896
 3635              	.LVL215:
1439:Veno-Echo.cpp ****         *div = MULT4;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 126


 3636              		.loc 19 1439 9 view .LVU897
1439:Veno-Echo.cpp ****         *div = MULT4;
 3637              		.loc 19 1439 14 is_stmt 0 view .LVU898
 3638 00ce 0823     		movs	r3, #8
1438:Veno-Echo.cpp ****         retVal = 4.0f;
 3639              		.loc 19 1438 16 view .LVU899
 3640 00d0 B1EE000A 		vmov.f32	s0, #4.0e+0
 3641              	.LVL216:
1439:Veno-Echo.cpp ****         *div = MULT4;
 3642              		.loc 19 1439 14 view .LVU900
 3643 00d4 0370     		strb	r3, [r0]
 3644 00d6 7047     		bx	lr
 3645              	.LVL217:
 3646              	.L250:
 3647              	.LBB1050:
 3648              	.LBI1050:
1383:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div)
 3649              		.loc 19 1383 7 is_stmt 1 view .LVU901
 3650              	.LBB1051:
1442:Veno-Echo.cpp ****     else if (input < 0.9091f)
 3651              		.loc 19 1442 10 view .LVU902
 3652 00d8 DFED177A 		vldr.32	s15, .L254+48
 3653 00dc B4EEE70A 		vcmpe.f32	s0, s15
 3654 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3655 00e4 04D5     		bpl	.L251
1444:Veno-Echo.cpp ****         retVal = 5.0f;
 3656              		.loc 19 1444 9 view .LVU903
 3657              	.LVL218:
1445:Veno-Echo.cpp ****         *div = MULT5;
 3658              		.loc 19 1445 9 view .LVU904
1445:Veno-Echo.cpp ****         *div = MULT5;
 3659              		.loc 19 1445 14 is_stmt 0 view .LVU905
 3660 00e6 0923     		movs	r3, #9
1444:Veno-Echo.cpp ****         retVal = 5.0f;
 3661              		.loc 19 1444 16 view .LVU906
 3662 00e8 B1EE040A 		vmov.f32	s0, #5.0e+0
 3663              	.LVL219:
1445:Veno-Echo.cpp ****         *div = MULT5;
 3664              		.loc 19 1445 14 view .LVU907
 3665 00ec 0370     		strb	r3, [r0]
 3666 00ee 7047     		bx	lr
 3667              	.LVL220:
 3668              	.L251:
1448:Veno-Echo.cpp ****     else if (input <= 1.0f)
 3669              		.loc 19 1448 10 is_stmt 1 view .LVU908
 3670 00f0 F7EE007A 		vmov.f32	s15, #1.0e+0
 3671 00f4 B4EEE70A 		vcmpe.f32	s0, s15
 3672 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3673 00fc BED8     		bhi	.L230
1450:Veno-Echo.cpp ****        retVal = 6.0f; 
 3674              		.loc 19 1450 8 view .LVU909
 3675              	.LVL221:
1451:Veno-Echo.cpp ****        *div = MULT6;
 3676              		.loc 19 1451 8 view .LVU910
1451:Veno-Echo.cpp ****        *div = MULT6;
 3677              		.loc 19 1451 13 is_stmt 0 view .LVU911
 3678 00fe 0A23     		movs	r3, #10
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 127


1450:Veno-Echo.cpp ****        retVal = 6.0f; 
 3679              		.loc 19 1450 15 view .LVU912
 3680 0100 B1EE080A 		vmov.f32	s0, #6.0e+0
 3681              	.LVL222:
1450:Veno-Echo.cpp ****        retVal = 6.0f; 
 3682              		.loc 19 1450 15 view .LVU913
 3683              	.LBE1051:
 3684              	.LBE1050:
1459:Veno-Echo.cpp **** return retVal;
 3685              		.loc 19 1459 1 is_stmt 1 view .LVU914
 3686              	.LBB1053:
 3687              	.LBB1052:
1451:Veno-Echo.cpp ****        *div = MULT6;
 3688              		.loc 19 1451 13 is_stmt 0 view .LVU915
 3689 0104 0370     		strb	r3, [r0]
 3690              	.LBE1052:
 3691              	.LBE1053:
1461:Veno-Echo.cpp **** }
 3692              		.loc 19 1461 1 view .LVU916
 3693 0106 7047     		bx	lr
 3694              	.L255:
 3695              		.align	2
 3696              	.L254:
 3697 0108 C729BA3D 		.word	1035610567
 3698 010c ABAA2A3E 		.word	1042983595
 3699 0110 C7293A3E 		.word	1043999175
 3700 0114 CDCC4C3E 		.word	1045220557
 3701 0118 569F8B3E 		.word	1049337686
 3702 011c C729BA3E 		.word	1052387783
 3703 0120 ABAAAA3E 		.word	1051372203
 3704 0124 39B4E83E 		.word	1055437881
 3705 0128 E3A50B3F 		.word	1057727971
 3706 012c 1CEB223F 		.word	1059253020
 3707 0130 55303A3F 		.word	1060778069
 3708 0134 8E75513F 		.word	1062303118
 3709 0138 C7BA683F 		.word	1063828167
 3710              		.cfi_endproc
 3711              	.LFE4310:
 3713              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 3714              		.align	1
 3715              		.p2align 2,,3
 3716              		.global	_Z17Update_DelayTimeRv
 3717              		.syntax unified
 3718              		.thumb
 3719              		.thumb_func
 3720              		.fpu fpv5-d16
 3722              	_Z17Update_DelayTimeRv:
 3723              	.LFB4294:
 857:Veno-Echo.cpp **** {
 3724              		.loc 19 857 1 is_stmt 1 view -0
 3725              		.cfi_startproc
 3726              		@ args = 0, pretend = 0, frame = 0
 3727              		@ frame_needed = 0, uses_anonymous_args = 0
 858:Veno-Echo.cpp ****     static int counterR{};
 3728              		.loc 19 858 5 view .LVU918
 859:Veno-Echo.cpp ****     float delayTimeR_Pot{};
 3729              		.loc 19 859 5 view .LVU919
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 128


 3730              	.LVL223:
 860:Veno-Echo.cpp ****     static float delayTimeR_Pot_Last{};
 3731              		.loc 19 860 5 view .LVU920
 863:Veno-Echo.cpp ****     delayTimeR_Pot = hw.adc.GetMuxFloat(7,6);
 3732              		.loc 19 863 5 view .LVU921
 857:Veno-Echo.cpp **** {
 3733              		.loc 19 857 1 is_stmt 0 view .LVU922
 3734 0000 10B5     		push	{r4, lr}
 3735              		.cfi_def_cfa_offset 8
 3736              		.cfi_offset 4, -8
 3737              		.cfi_offset 14, -4
 863:Veno-Echo.cpp ****     delayTimeR_Pot = hw.adc.GetMuxFloat(7,6);
 3738              		.loc 19 863 40 view .LVU923
 3739 0002 0622     		movs	r2, #6
 3740 0004 0721     		movs	r1, #7
 3741 0006 4E48     		ldr	r0, .L276
 857:Veno-Echo.cpp **** {
 3742              		.loc 19 857 1 view .LVU924
 3743 0008 2DED028B 		vpush.64	{d8}
 3744              		.cfi_def_cfa_offset 16
 3745              		.cfi_offset 80, -16
 3746              		.cfi_offset 81, -12
 863:Veno-Echo.cpp ****     delayTimeR_Pot = hw.adc.GetMuxFloat(7,6);
 3747              		.loc 19 863 40 view .LVU925
 3748 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3749              	.LVL224:
 867:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);    
 3750              		.loc 19 867 26 view .LVU926
 3751 0010 4C48     		ldr	r0, .L276+4
 867:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);    
 3752              		.loc 19 867 31 view .LVU927
 3753 0012 4D4B     		ldr	r3, .L276+8
 863:Veno-Echo.cpp ****     delayTimeR_Pot = hw.adc.GetMuxFloat(7,6);
 3754              		.loc 19 863 40 view .LVU928
 3755 0014 F0EE407A 		vmov.f32	s15, s0
 3756              	.LVL225:
 867:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);    
 3757              		.loc 19 867 5 is_stmt 1 view .LVU929
 867:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);    
 3758              		.loc 19 867 26 is_stmt 0 view .LVU930
 3759 0018 0268     		ldr	r2, [r0]
 3760              	.LBB1054:
 869:Veno-Echo.cpp **** if (!shift)
 3761              		.loc 19 869 5 view .LVU931
 3762 001a 4C49     		ldr	r1, .L276+12
 3763              	.LBE1054:
 867:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);    
 3764              		.loc 19 867 26 view .LVU932
 3765 001c 0132     		adds	r2, r2, #1
 3766              	.LBB1085:
 869:Veno-Echo.cpp **** if (!shift)
 3767              		.loc 19 869 1 view .LVU933
 3768 001e 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 3769              	.LBE1085:
 867:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);    
 3770              		.loc 19 867 31 view .LVU934
 3771 0020 83FB0231 		smull	r3, r1, r3, r2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 129


 3772 0024 D317     		asrs	r3, r2, #31
 3773 0026 C3EB6113 		rsb	r3, r3, r1, asr #5
 3774 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3775 002e A2EB8313 		sub	r3, r2, r3, lsl #6
 867:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);    
 3776              		.loc 19 867 14 view .LVU935
 3777 0032 0360     		str	r3, [r0]
 869:Veno-Echo.cpp **** if (!shift)
 3778              		.loc 19 869 1 is_stmt 1 view .LVU936
 3779              	.LBB1086:
 3780 0034 002C     		cmp	r4, #0
 3781 0036 45D1     		bne	.L257
 3782              	.LBB1055:
 872:Veno-Echo.cpp **** delayTimeR_Pot_Last = delayTimeR_Pot;
 3783              		.loc 19 872 1 view .LVU937
 874:Veno-Echo.cpp **** float delayTimeR{PotCVCombo(delayTimeR_Pot,delayTimeR_CV)};
 3784              		.loc 19 874 28 is_stmt 0 view .LVU938
 3785 0038 4549     		ldr	r1, .L276+16
 3786              	.LBB1056:
 3787              	.LBB1057:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3788              		.loc 19 1652 39 view .LVU939
 3789 003a F7EE006A 		vmov.f32	s13, #1.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3790              		.loc 19 1652 49 view .LVU940
 3791 003e F6EE005A 		vmov.f32	s11, #5.0e-1
 3792              	.LBE1057:
 3793              	.LBE1056:
 872:Veno-Echo.cpp **** delayTimeR_Pot_Last = delayTimeR_Pot;
 3794              		.loc 19 872 21 view .LVU941
 3795 0042 444A     		ldr	r2, .L276+20
 3796              	.LBB1062:
 3797              	.LBB1058:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3798              		.loc 19 1652 39 view .LVU942
 3799 0044 91ED007A 		vldr.32	s14, [r1]
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3800              		.loc 19 1652 12 view .LVU943
 3801 0048 B0EE006A 		vmov.f32	s12, #2.0e+0
 3802              	.LBE1058:
 3803              	.LBE1062:
 872:Veno-Echo.cpp **** delayTimeR_Pot_Last = delayTimeR_Pot;
 3804              		.loc 19 872 21 view .LVU944
 3805 004c 82ED000A 		vstr.32	s0, [r2]
 874:Veno-Echo.cpp **** float delayTimeR{PotCVCombo(delayTimeR_Pot,delayTimeR_CV)};
 3806              		.loc 19 874 1 is_stmt 1 view .LVU945
 3807              	.LVL226:
 3808              	.LBB1063:
 3809              	.LBI1056:
1649:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 3810              		.loc 19 1649 7 view .LVU946
 3811              	.LBB1059:
1651:Veno-Echo.cpp ****     float output{};
 3812              		.loc 19 1651 5 view .LVU947
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3813              		.loc 19 1652 5 view .LVU948
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 130


 3814              		.loc 19 1652 39 is_stmt 0 view .LVU949
 3815 0050 36EEC77A 		vsub.f32	s14, s13, s14
 3816              	.LVL227:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3817              		.loc 19 1652 49 view .LVU950
 3818 0054 37EE657A 		vsub.f32	s14, s14, s11
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3819              		.loc 19 1652 12 view .LVU951
 3820 0058 E7EE067A 		vfma.f32	s15, s14, s12
 3821              	.LVL228:
1654:Veno-Echo.cpp ****     if(output < 0.0f)
 3822              		.loc 19 1654 5 is_stmt 1 view .LVU952
 3823 005c F5EEC07A 		vcmpe.f32	s15, #0
 3824 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3825 0064 0DD4     		bmi	.L266
1659:Veno-Echo.cpp ****     if(output > 1.0f)
 3826              		.loc 19 1659 5 view .LVU953
1661:Veno-Echo.cpp ****         output = 1.0f;
 3827              		.loc 19 1661 16 is_stmt 0 view .LVU954
 3828 0066 F4EE667A 		vcmp.f32	s15, s13
 3829              	.LBE1059:
 3830              	.LBE1063:
 876:Veno-Echo.cpp ****     if (!syncMode)
 3831              		.loc 19 876 9 view .LVU955
 3832 006a 3B4A     		ldr	r2, .L276+24
 876:Veno-Echo.cpp ****     if (!syncMode)
 3833              		.loc 19 876 5 view .LVU956
 3834 006c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3835              	.LBB1064:
 3836              	.LBB1060:
1661:Veno-Echo.cpp ****         output = 1.0f;
 3837              		.loc 19 1661 16 view .LVU957
 3838 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3839 0072 36FEA78A 		vselgt.f32	s16, s13, s15
 3840              	.LVL229:
1664:Veno-Echo.cpp ****     return output;
 3841              		.loc 19 1664 5 is_stmt 1 view .LVU958
1664:Veno-Echo.cpp ****     return output;
 3842              		.loc 19 1664 5 is_stmt 0 view .LVU959
 3843              	.LBE1060:
 3844              	.LBE1064:
 876:Veno-Echo.cpp ****     if (!syncMode)
 3845              		.loc 19 876 5 is_stmt 1 view .LVU960
 3846 0076 52B9     		cbnz	r2, .L260
 3847              	.L275:
 878:Veno-Echo.cpp ****         if (counterR == 0)
 3848              		.loc 19 878 9 view .LVU961
 3849 0078 002B     		cmp	r3, #0
 3850 007a 52D0     		beq	.L274
 3851              	.LVL230:
 3852              	.L256:
 878:Veno-Echo.cpp ****         if (counterR == 0)
 3853              		.loc 19 878 9 is_stmt 0 view .LVU962
 3854              	.LBE1055:
 3855              	.LBE1086:
 912:Veno-Echo.cpp **** }
 3856              		.loc 19 912 1 view .LVU963
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 131


 3857 007c BDEC028B 		vldm	sp!, {d8}
 3858              		.cfi_remember_state
 3859              		.cfi_restore 80
 3860              		.cfi_restore 81
 3861              		.cfi_def_cfa_offset 8
 3862 0080 10BD     		pop	{r4, pc}
 3863              	.LVL231:
 3864              	.L266:
 3865              		.cfi_restore_state
 3866              	.LBB1087:
 3867              	.LBB1066:
 876:Veno-Echo.cpp ****     if (!syncMode)
 3868              		.loc 19 876 9 view .LVU964
 3869 0082 354A     		ldr	r2, .L276+24
 3870              	.LBB1065:
 3871              	.LBB1061:
1656:Veno-Echo.cpp ****         output = 0.0f;
 3872              		.loc 19 1656 16 view .LVU965
 3873 0084 9FED358A 		vldr.32	s16, .L276+28
 3874              	.LVL232:
1664:Veno-Echo.cpp ****     return output;
 3875              		.loc 19 1664 5 is_stmt 1 view .LVU966
1664:Veno-Echo.cpp ****     return output;
 3876              		.loc 19 1664 5 is_stmt 0 view .LVU967
 3877              	.LBE1061:
 3878              	.LBE1065:
 876:Veno-Echo.cpp ****     if (!syncMode)
 3879              		.loc 19 876 5 is_stmt 1 view .LVU968
 3880 0088 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3881 008a 002A     		cmp	r2, #0
 3882 008c F4D0     		beq	.L275
 3883              	.L260:
 887:Veno-Echo.cpp ****         if (counterR == 0)
 3884              		.loc 19 887 9 view .LVU969
 3885 008e 002B     		cmp	r3, #0
 3886 0090 F4D1     		bne	.L256
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3887              		.loc 19 890 13 view .LVU970
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3888              		.loc 19 890 58 is_stmt 0 view .LVU971
 3889 0092 3348     		ldr	r0, .L276+32
 3890 0094 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 3891              	.LVL233:
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3892              		.loc 19 890 82 view .LVU972
 3893 0098 3248     		ldr	r0, .L276+36
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3894              		.loc 19 890 58 view .LVU973
 3895 009a B0EE407A 		vmov.f32	s14, s0
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3896              		.loc 19 890 82 view .LVU974
 3897 009e B0EE480A 		vmov.f32	s0, s16
 3898 00a2 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 3899              	.LVL234:
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3900              		.loc 19 890 61 view .LVU975
 3901 00a6 DFED307A 		vldr.32	s15, .L276+40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 132


 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3902              		.loc 19 890 35 view .LVU976
 3903 00aa 3048     		ldr	r0, .L276+44
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3904              		.loc 19 890 61 view .LVU977
 3905 00ac 27EE277A 		vmul.f32	s14, s14, s15
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3906              		.loc 19 890 35 view .LVU978
 3907 00b0 27EE000A 		vmul.f32	s0, s14, s0
 3908 00b4 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 3909              	.LVL235:
 890:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 3910              		.loc 19 890 13 view .LVU979
 3911 00b8 0028     		cmp	r0, #0
 3912 00ba DFD0     		beq	.L256
 892:Veno-Echo.cpp ****                 delayR_flag = true;
 3913              		.loc 19 892 17 is_stmt 1 view .LVU980
 892:Veno-Echo.cpp ****                 delayR_flag = true;
 3914              		.loc 19 892 29 is_stmt 0 view .LVU981
 3915 00bc 2C4B     		ldr	r3, .L276+48
 3916 00be 0122     		movs	r2, #1
 3917 00c0 1A70     		strb	r2, [r3]
 3918 00c2 DBE7     		b	.L256
 3919              	.LVL236:
 3920              	.L257:
 892:Veno-Echo.cpp ****                 delayR_flag = true;
 3921              		.loc 19 892 29 view .LVU982
 3922              	.LBE1066:
 3923              	.LBE1087:
 901:Veno-Echo.cpp ****     if(abs(delayTimeR_Pot_Last - delayTimeR_Pot) > altControlThresh)
 3924              		.loc 19 901 5 is_stmt 1 view .LVU983
 3925              	.LBB1088:
 3926              	.LBB1067:
 3927              	.LBB1068:
 3928              	.LBI1068:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3929              		.loc 20 75 3 view .LVU984
 3930              	.LBB1069:
 3931              		.loc 20 76 5 view .LVU985
 3932              		.loc 20 76 5 is_stmt 0 view .LVU986
 3933              	.LBE1069:
 3934              	.LBE1068:
 901:Veno-Echo.cpp ****     if(abs(delayTimeR_Pot_Last - delayTimeR_Pot) > altControlThresh)
 3935              		.loc 19 901 11 view .LVU987
 3936 00c4 234B     		ldr	r3, .L276+20
 901:Veno-Echo.cpp ****     if(abs(delayTimeR_Pot_Last - delayTimeR_Pot) > altControlThresh)
 3937              		.loc 19 901 5 view .LVU988
 3938 00c6 DFED2B6A 		vldr.32	s13, .L276+52
 901:Veno-Echo.cpp ****     if(abs(delayTimeR_Pot_Last - delayTimeR_Pot) > altControlThresh)
 3939              		.loc 19 901 11 view .LVU989
 3940 00ca 93ED007A 		vldr.32	s14, [r3]
 3941 00ce 77EE407A 		vsub.f32	s15, s14, s0
 3942              	.LBB1071:
 3943              	.LBB1070:
 3944              		.loc 20 76 31 view .LVU990
 3945 00d2 F0EEE77A 		vabs.f32	s15, s15
 3946              	.LBE1070:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 133


 3947              	.LBE1071:
 901:Veno-Echo.cpp ****     if(abs(delayTimeR_Pot_Last - delayTimeR_Pot) > altControlThresh)
 3948              		.loc 19 901 5 view .LVU991
 3949 00d6 F4EEE67A 		vcmpe.f32	s15, s13
 3950 00da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3951 00de CDDD     		ble	.L256
 3952              	.LBB1072:
 903:Veno-Echo.cpp ****         float tapRatioInput{delayTimeR_Pot};
 3953              		.loc 19 903 9 is_stmt 1 view .LVU992
 904:Veno-Echo.cpp ****         TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>(MAX
 3954              		.loc 19 904 9 view .LVU993
 904:Veno-Echo.cpp ****         TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>(MAX
 3955              		.loc 19 904 57 is_stmt 0 view .LVU994
 3956 00e0 F0EE080A 		vmov.f32	s1, #3.0e+0
 3957 00e4 0020     		movs	r0, #0
 3958 00e6 9FED1D1A 		vldr.32	s2, .L276+28
 3959 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 3960              	.LVL237:
 3961              	.LBB1073:
 3962              	.LBI1073:
 3963              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 134


  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 135


  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 136


 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 137


 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 138


 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 139


 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 140


 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 141


 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 142


 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 143


 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 144


 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 145


 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 146


 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 147


 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 148


 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 149


 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 150


 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 151


1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 152


1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 153


1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 154


1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 155


1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 156


1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 157


1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 158


1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 159


1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 160


1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 161


1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 162


1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 163


1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 164


1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 3964              		.loc 22 1756 3 is_stmt 1 view .LVU995
 3965              	.LBB1074:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 3966              		.loc 22 1757 5 view .LVU996
 3967              		.loc 22 1757 28 is_stmt 0 view .LVU997
 3968 00ee B8FE400A 		vrinta.f32	s0, s0
 3969              	.LVL238:
 3970              		.loc 22 1757 28 view .LVU998
 3971              	.LBE1074:
 3972              	.LBE1073:
 906:Veno-Echo.cpp ****         BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 3973              		.loc 19 906 9 is_stmt 1 view .LVU999
 3974              	.LBB1075:
 3975              	.LBI1075:
1463:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
 3976              		.loc 19 1463 7 view .LVU1000
 3977              	.LBB1076:
1465:Veno-Echo.cpp ****     float retVal{};
 3978              		.loc 19 1465 5 view .LVU1001
1466:Veno-Echo.cpp ****     switch(ratio)
 3979              		.loc 19 1466 5 view .LVU1002
 3980              	.LBE1076:
 3981              	.LBE1075:
 904:Veno-Echo.cpp ****         TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>(MAX
 3982              		.loc 19 904 126 is_stmt 0 view .LVU1003
 3983 00f2 FCEEC07A 		vcvt.u32.f32	s15, s0
 3984 00f6 17EE903A 		vmov	r3, s15	@ int
 3985 00fa 013B     		subs	r3, r3, #1
 3986 00fc DBB2     		uxtb	r3, r3
 3987 00fe 022B     		cmp	r3, #2
 3988 0100 1BD8     		bhi	.L267
 3989 0102 1D4A     		ldr	r2, .L276+56
 3990 0104 02EB8303 		add	r3, r2, r3, lsl #2
 3991 0108 93ED008A 		vldr.32	s16, [r3]
 3992              	.L265:
 3993              	.LVL239:
 3994              	.LBB1078:
 3995              	.LBB1077:
1489:Veno-Echo.cpp **** return retVal;
 3996              		.loc 19 1489 1 is_stmt 1 view .LVU1004
1489:Veno-Echo.cpp **** return retVal;
 3997              		.loc 19 1489 1 is_stmt 0 view .LVU1005
 3998              	.LBE1077:
 3999              	.LBE1078:
 906:Veno-Echo.cpp ****         BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4000              		.loc 19 906 30 view .LVU1006
 4001 010c B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 165


 4002              	.LVL240:
 906:Veno-Echo.cpp ****         BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4003              		.loc 19 906 30 view .LVU1007
 4004 0110 1348     		ldr	r0, .L276+32
 4005 0112 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 4006              	.LVL241:
 908:Veno-Echo.cpp ****         AltControls.tapRatio = GetTapRatio(tapRatio);
 4007              		.loc 19 908 9 is_stmt 1 view .LVU1008
 908:Veno-Echo.cpp ****         AltControls.tapRatio = GetTapRatio(tapRatio);
 4008              		.loc 19 908 9 is_stmt 0 view .LVU1009
 4009              	.LBE1072:
 4010              	.LBE1067:
 4011              	.LBE1088:
1465:Veno-Echo.cpp ****     float retVal{};
 4012              		.loc 19 1465 5 is_stmt 1 view .LVU1010
1466:Veno-Echo.cpp ****     switch(ratio)
 4013              		.loc 19 1466 5 view .LVU1011
1489:Veno-Echo.cpp **** return retVal;
 4014              		.loc 19 1489 1 view .LVU1012
 4015              	.LBB1089:
 4016              	.LBB1081:
 4017              	.LBB1079:
 908:Veno-Echo.cpp ****         AltControls.tapRatio = GetTapRatio(tapRatio);
 4018              		.loc 19 908 30 is_stmt 0 view .LVU1013
 4019 0116 194B     		ldr	r3, .L276+60
 4020 0118 83ED018A 		vstr.32	s16, [r3, #4]
 4021              	.LBE1079:
 4022              	.LBE1081:
 4023              	.LBE1089:
 912:Veno-Echo.cpp **** }
 4024              		.loc 19 912 1 view .LVU1014
 4025 011c BDEC028B 		vldm	sp!, {d8}
 4026              		.cfi_remember_state
 4027              		.cfi_restore 80
 4028              		.cfi_restore 81
 4029              		.cfi_def_cfa_offset 8
 4030 0120 10BD     		pop	{r4, pc}
 4031              	.LVL242:
 4032              	.L274:
 4033              		.cfi_restore_state
 4034              	.LBB1090:
 4035              	.LBB1082:
 881:Veno-Echo.cpp ****             delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 4036              		.loc 19 881 13 is_stmt 1 view .LVU1015
 881:Veno-Echo.cpp ****             delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 4037              		.loc 19 881 36 is_stmt 0 view .LVU1016
 4038 0122 B7EE000A 		vmov.f32	s0, #1.0e+0
 4039              	.LVL243:
 881:Veno-Echo.cpp ****             delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 4040              		.loc 19 881 36 view .LVU1017
 4041 0126 0121     		movs	r1, #1
 4042 0128 1048     		ldr	r0, .L276+44
 4043 012a 30EE480A 		vsub.f32	s0, s0, s16
 4044              	.LBE1082:
 4045              	.LBE1090:
 912:Veno-Echo.cpp **** }
 4046              		.loc 19 912 1 view .LVU1018
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 166


 4047 012e BDEC028B 		vldm	sp!, {d8}
 4048              		.cfi_remember_state
 4049              		.cfi_restore 80
 4050              		.cfi_restore 81
 4051              		.cfi_def_cfa_offset 8
 4052              	.LVL244:
 912:Veno-Echo.cpp **** }
 4053              		.loc 19 912 1 view .LVU1019
 4054 0132 BDE81040 		pop	{r4, lr}
 4055              		.cfi_restore 14
 4056              		.cfi_restore 4
 4057              		.cfi_def_cfa_offset 0
 4058              	.LBB1091:
 4059              	.LBB1083:
 881:Veno-Echo.cpp ****             delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 4060              		.loc 19 881 36 view .LVU1020
 4061 0136 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 4062              	.LVL245:
 4063              	.L267:
 4064              		.cfi_restore_state
 881:Veno-Echo.cpp ****             delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 4065              		.loc 19 881 36 view .LVU1021
 4066              	.LBE1083:
 4067              	.LBB1084:
 4068              	.LBB1080:
 904:Veno-Echo.cpp ****         TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>(MAX
 4069              		.loc 19 904 126 view .LVU1022
 4070 013a B7EE008A 		vmov.f32	s16, #1.0e+0
 4071 013e E5E7     		b	.L265
 4072              	.L277:
 4073              		.align	2
 4074              	.L276:
 4075 0140 18000000 		.word	.LANCHOR4+24
 4076 0144 00000000 		.word	.LANCHOR56
 4077 0148 ABAAAA2A 		.word	715827883
 4078 014c 00000000 		.word	.LANCHOR8
 4079 0150 00000000 		.word	.LANCHOR6
 4080 0154 00000000 		.word	.LANCHOR57
 4081 0158 00000000 		.word	.LANCHOR51
 4082 015c 00000000 		.word	0
 4083 0160 00000000 		.word	.LANCHOR50
 4084 0164 00000000 		.word	.LANCHOR53
 4085 0168 00004042 		.word	1111490560
 4086 016c 00000000 		.word	.LANCHOR1
 4087 0170 00000000 		.word	.LANCHOR55
 4088 0174 0AD7A33B 		.word	1000593162
 4089 0178 00000000 		.word	.LANCHOR58
 4090 017c 00000000 		.word	.LANCHOR16
 4091              	.LBE1080:
 4092              	.LBE1084:
 4093              	.LBE1091:
 4094              		.cfi_endproc
 4095              	.LFE4294:
 4097              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 4098              		.align	1
 4099              		.p2align 2,,3
 4100              		.global	_Z17Update_DelayTimeLv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 167


 4101              		.syntax unified
 4102              		.thumb
 4103              		.thumb_func
 4104              		.fpu fpv5-d16
 4106              	_Z17Update_DelayTimeLv:
 4107              	.LFB4292:
 795:Veno-Echo.cpp **** {
 4108              		.loc 19 795 1 is_stmt 1 view -0
 4109              		.cfi_startproc
 4110              		@ args = 0, pretend = 0, frame = 0
 4111              		@ frame_needed = 0, uses_anonymous_args = 0
 796:Veno-Echo.cpp ****     static int counterL{};
 4112              		.loc 19 796 5 view .LVU1024
 797:Veno-Echo.cpp ****     float delayTimeL_Pot{};
 4113              		.loc 19 797 5 view .LVU1025
 4114              	.LVL246:
 798:Veno-Echo.cpp ****     static float delayTimeL_Pot_Last{};
 4115              		.loc 19 798 5 view .LVU1026
 802:Veno-Echo.cpp ****     delayTimeL_Pot = hw.adc.GetMuxFloat(7,2);
 4116              		.loc 19 802 5 view .LVU1027
 795:Veno-Echo.cpp **** {
 4117              		.loc 19 795 1 is_stmt 0 view .LVU1028
 4118 0000 10B5     		push	{r4, lr}
 4119              		.cfi_def_cfa_offset 8
 4120              		.cfi_offset 4, -8
 4121              		.cfi_offset 14, -4
 802:Veno-Echo.cpp ****     delayTimeL_Pot = hw.adc.GetMuxFloat(7,2);
 4122              		.loc 19 802 40 view .LVU1029
 4123 0002 0222     		movs	r2, #2
 4124 0004 0721     		movs	r1, #7
 4125 0006 6048     		ldr	r0, .L302
 795:Veno-Echo.cpp **** {
 4126              		.loc 19 795 1 view .LVU1030
 4127 0008 2DED028B 		vpush.64	{d8}
 4128              		.cfi_def_cfa_offset 16
 4129              		.cfi_offset 80, -16
 4130              		.cfi_offset 81, -12
 802:Veno-Echo.cpp ****     delayTimeL_Pot = hw.adc.GetMuxFloat(7,2);
 4131              		.loc 19 802 40 view .LVU1031
 4132 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4133              	.LVL247:
 805:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 4134              		.loc 19 805 26 view .LVU1032
 4135 0010 5E48     		ldr	r0, .L302+4
 805:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 4136              		.loc 19 805 31 view .LVU1033
 4137 0012 5F4B     		ldr	r3, .L302+8
 802:Veno-Echo.cpp ****     delayTimeL_Pot = hw.adc.GetMuxFloat(7,2);
 4138              		.loc 19 802 40 view .LVU1034
 4139 0014 F0EE407A 		vmov.f32	s15, s0
 4140              	.LVL248:
 805:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 4141              		.loc 19 805 5 is_stmt 1 view .LVU1035
 805:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 4142              		.loc 19 805 26 is_stmt 0 view .LVU1036
 4143 0018 0268     		ldr	r2, [r0]
 4144              	.LBB1092:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 168


 807:Veno-Echo.cpp **** if (!shift)
 4145              		.loc 19 807 5 view .LVU1037
 4146 001a 5E49     		ldr	r1, .L302+12
 4147              	.LBE1092:
 805:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 4148              		.loc 19 805 26 view .LVU1038
 4149 001c 0132     		adds	r2, r2, #1
 4150              	.LBB1147:
 807:Veno-Echo.cpp **** if (!shift)
 4151              		.loc 19 807 1 view .LVU1039
 4152 001e 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 4153              	.LBE1147:
 805:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 4154              		.loc 19 805 31 view .LVU1040
 4155 0020 83FB0231 		smull	r3, r1, r3, r2
 4156 0024 D317     		asrs	r3, r2, #31
 4157 0026 C3EB6113 		rsb	r3, r3, r1, asr #5
 4158 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4159 002e A2EB8313 		sub	r3, r2, r3, lsl #6
 805:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 4160              		.loc 19 805 14 view .LVU1041
 4161 0032 0360     		str	r3, [r0]
 807:Veno-Echo.cpp **** if (!shift)
 4162              		.loc 19 807 1 is_stmt 1 view .LVU1042
 4163              	.LBB1148:
 4164 0034 002C     		cmp	r4, #0
 4165 0036 45D1     		bne	.L279
 4166              	.LBB1093:
 810:Veno-Echo.cpp **** delayTimeL_Pot_Last = delayTimeL_Pot;
 4167              		.loc 19 810 1 view .LVU1043
 812:Veno-Echo.cpp **** float DelayTimeL{PotCVCombo(delayTimeL_Pot,delayTimeL_CV)};
 4168              		.loc 19 812 28 is_stmt 0 view .LVU1044
 4169 0038 5749     		ldr	r1, .L302+16
 4170              	.LBB1094:
 4171              	.LBB1095:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4172              		.loc 19 1652 39 view .LVU1045
 4173 003a F7EE006A 		vmov.f32	s13, #1.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4174              		.loc 19 1652 49 view .LVU1046
 4175 003e F6EE005A 		vmov.f32	s11, #5.0e-1
 4176              	.LBE1095:
 4177              	.LBE1094:
 810:Veno-Echo.cpp **** delayTimeL_Pot_Last = delayTimeL_Pot;
 4178              		.loc 19 810 21 view .LVU1047
 4179 0042 564A     		ldr	r2, .L302+20
 4180              	.LBB1100:
 4181              	.LBB1096:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4182              		.loc 19 1652 39 view .LVU1048
 4183 0044 91ED007A 		vldr.32	s14, [r1]
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4184              		.loc 19 1652 12 view .LVU1049
 4185 0048 B0EE006A 		vmov.f32	s12, #2.0e+0
 4186              	.LBE1096:
 4187              	.LBE1100:
 810:Veno-Echo.cpp **** delayTimeL_Pot_Last = delayTimeL_Pot;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 169


 4188              		.loc 19 810 21 view .LVU1050
 4189 004c 82ED000A 		vstr.32	s0, [r2]
 812:Veno-Echo.cpp **** float DelayTimeL{PotCVCombo(delayTimeL_Pot,delayTimeL_CV)};
 4190              		.loc 19 812 1 is_stmt 1 view .LVU1051
 4191              	.LVL249:
 4192              	.LBB1101:
 4193              	.LBI1094:
1649:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 4194              		.loc 19 1649 7 view .LVU1052
 4195              	.LBB1097:
1651:Veno-Echo.cpp ****     float output{};
 4196              		.loc 19 1651 5 view .LVU1053
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4197              		.loc 19 1652 5 view .LVU1054
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4198              		.loc 19 1652 39 is_stmt 0 view .LVU1055
 4199 0050 36EEC77A 		vsub.f32	s14, s13, s14
 4200              	.LVL250:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4201              		.loc 19 1652 49 view .LVU1056
 4202 0054 37EE657A 		vsub.f32	s14, s14, s11
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4203              		.loc 19 1652 12 view .LVU1057
 4204 0058 E7EE067A 		vfma.f32	s15, s14, s12
 4205              	.LVL251:
1654:Veno-Echo.cpp ****     if(output < 0.0f)
 4206              		.loc 19 1654 5 is_stmt 1 view .LVU1058
 4207 005c F5EEC07A 		vcmpe.f32	s15, #0
 4208 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4209 0064 0DD4     		bmi	.L291
1659:Veno-Echo.cpp ****     if(output > 1.0f)
 4210              		.loc 19 1659 5 view .LVU1059
1661:Veno-Echo.cpp ****         output = 1.0f;
 4211              		.loc 19 1661 16 is_stmt 0 view .LVU1060
 4212 0066 F4EE667A 		vcmp.f32	s15, s13
 4213              	.LBE1097:
 4214              	.LBE1101:
 814:Veno-Echo.cpp ****     if (!syncMode)
 4215              		.loc 19 814 9 view .LVU1061
 4216 006a 4D4A     		ldr	r2, .L302+24
 814:Veno-Echo.cpp ****     if (!syncMode)
 4217              		.loc 19 814 5 view .LVU1062
 4218 006c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4219              	.LBB1102:
 4220              	.LBB1098:
1661:Veno-Echo.cpp ****         output = 1.0f;
 4221              		.loc 19 1661 16 view .LVU1063
 4222 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4223 0072 36FEA78A 		vselgt.f32	s16, s13, s15
 4224              	.LVL252:
1664:Veno-Echo.cpp ****     return output;
 4225              		.loc 19 1664 5 is_stmt 1 view .LVU1064
1664:Veno-Echo.cpp ****     return output;
 4226              		.loc 19 1664 5 is_stmt 0 view .LVU1065
 4227              	.LBE1098:
 4228              	.LBE1102:
 814:Veno-Echo.cpp ****     if (!syncMode)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 170


 4229              		.loc 19 814 5 is_stmt 1 view .LVU1066
 4230 0076 52B9     		cbnz	r2, .L282
 4231              	.L301:
 816:Veno-Echo.cpp ****         if (counterL == 0)
 4232              		.loc 19 816 9 view .LVU1067
 4233 0078 002B     		cmp	r3, #0
 4234 007a 78D0     		beq	.L300
 4235              	.LVL253:
 4236              	.L278:
 816:Veno-Echo.cpp ****         if (counterL == 0)
 4237              		.loc 19 816 9 is_stmt 0 view .LVU1068
 4238              	.LBE1093:
 4239              	.LBE1148:
 849:Veno-Echo.cpp **** }
 4240              		.loc 19 849 1 view .LVU1069
 4241 007c BDEC028B 		vldm	sp!, {d8}
 4242              		.cfi_remember_state
 4243              		.cfi_restore 80
 4244              		.cfi_restore 81
 4245              		.cfi_def_cfa_offset 8
 4246 0080 10BD     		pop	{r4, pc}
 4247              	.LVL254:
 4248              	.L291:
 4249              		.cfi_restore_state
 4250              	.LBB1149:
 4251              	.LBB1104:
 814:Veno-Echo.cpp ****     if (!syncMode)
 4252              		.loc 19 814 9 view .LVU1070
 4253 0082 474A     		ldr	r2, .L302+24
 4254              	.LBB1103:
 4255              	.LBB1099:
1656:Veno-Echo.cpp ****         output = 0.0f;
 4256              		.loc 19 1656 16 view .LVU1071
 4257 0084 9FED478A 		vldr.32	s16, .L302+28
 4258              	.LVL255:
1664:Veno-Echo.cpp ****     return output;
 4259              		.loc 19 1664 5 is_stmt 1 view .LVU1072
1664:Veno-Echo.cpp ****     return output;
 4260              		.loc 19 1664 5 is_stmt 0 view .LVU1073
 4261              	.LBE1099:
 4262              	.LBE1103:
 814:Veno-Echo.cpp ****     if (!syncMode)
 4263              		.loc 19 814 5 is_stmt 1 view .LVU1074
 4264 0088 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4265 008a 002A     		cmp	r2, #0
 4266 008c F4D0     		beq	.L301
 4267              	.L282:
 825:Veno-Echo.cpp ****         if (counterL == 0)
 4268              		.loc 19 825 9 view .LVU1075
 4269 008e 002B     		cmp	r3, #0
 4270 0090 F4D1     		bne	.L278
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4271              		.loc 19 828 13 view .LVU1076
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4272              		.loc 19 828 58 is_stmt 0 view .LVU1077
 4273 0092 4548     		ldr	r0, .L302+32
 4274 0094 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 171


 4275              	.LVL256:
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4276              		.loc 19 828 82 view .LVU1078
 4277 0098 4448     		ldr	r0, .L302+36
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4278              		.loc 19 828 58 view .LVU1079
 4279 009a B0EE407A 		vmov.f32	s14, s0
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4280              		.loc 19 828 82 view .LVU1080
 4281 009e B0EE480A 		vmov.f32	s0, s16
 4282 00a2 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 4283              	.LVL257:
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4284              		.loc 19 828 61 view .LVU1081
 4285 00a6 DFED427A 		vldr.32	s15, .L302+40
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4286              		.loc 19 828 35 view .LVU1082
 4287 00aa 4248     		ldr	r0, .L302+44
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4288              		.loc 19 828 61 view .LVU1083
 4289 00ac 27EE277A 		vmul.f32	s14, s14, s15
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4290              		.loc 19 828 35 view .LVU1084
 4291 00b0 27EE000A 		vmul.f32	s0, s14, s0
 4292 00b4 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 4293              	.LVL258:
 828:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 4294              		.loc 19 828 13 view .LVU1085
 4295 00b8 0028     		cmp	r0, #0
 4296 00ba DFD0     		beq	.L278
 830:Veno-Echo.cpp ****                 delayL_flag = true;
 4297              		.loc 19 830 17 is_stmt 1 view .LVU1086
 830:Veno-Echo.cpp ****                 delayL_flag = true;
 4298              		.loc 19 830 29 is_stmt 0 view .LVU1087
 4299 00bc 3E4B     		ldr	r3, .L302+48
 4300 00be 0122     		movs	r2, #1
 4301 00c0 1A70     		strb	r2, [r3]
 4302 00c2 DBE7     		b	.L278
 4303              	.LVL259:
 4304              	.L279:
 830:Veno-Echo.cpp ****                 delayL_flag = true;
 4305              		.loc 19 830 29 view .LVU1088
 4306              	.LBE1104:
 4307              	.LBE1149:
 839:Veno-Echo.cpp ****     if(abs(delayTimeL_Pot_Last - delayTimeL_Pot) > altControlThresh)
 4308              		.loc 19 839 5 is_stmt 1 view .LVU1089
 4309              	.LBB1150:
 4310              	.LBB1105:
 4311              	.LBB1106:
 4312              	.LBI1106:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4313              		.loc 20 75 3 view .LVU1090
 4314              	.LBB1107:
 4315              		.loc 20 76 5 view .LVU1091
 4316              		.loc 20 76 5 is_stmt 0 view .LVU1092
 4317              	.LBE1107:
 4318              	.LBE1106:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 172


 839:Veno-Echo.cpp ****     if(abs(delayTimeL_Pot_Last - delayTimeL_Pot) > altControlThresh)
 4319              		.loc 19 839 11 view .LVU1093
 4320 00c4 354B     		ldr	r3, .L302+20
 839:Veno-Echo.cpp ****     if(abs(delayTimeL_Pot_Last - delayTimeL_Pot) > altControlThresh)
 4321              		.loc 19 839 5 view .LVU1094
 4322 00c6 9FED3D8A 		vldr.32	s16, .L302+52
 839:Veno-Echo.cpp ****     if(abs(delayTimeL_Pot_Last - delayTimeL_Pot) > altControlThresh)
 4323              		.loc 19 839 11 view .LVU1095
 4324 00ca 93ED007A 		vldr.32	s14, [r3]
 4325 00ce 77EE407A 		vsub.f32	s15, s14, s0
 4326              	.LBB1109:
 4327              	.LBB1108:
 4328              		.loc 20 76 31 view .LVU1096
 4329 00d2 F0EEE77A 		vabs.f32	s15, s15
 4330              	.LBE1108:
 4331              	.LBE1109:
 839:Veno-Echo.cpp ****     if(abs(delayTimeL_Pot_Last - delayTimeL_Pot) > altControlThresh)
 4332              		.loc 19 839 5 view .LVU1097
 4333 00d6 F4EEC87A 		vcmpe.f32	s15, s16
 4334 00da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4335 00de CDDD     		ble	.L278
 4336              	.LBB1110:
 841:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 4337              		.loc 19 841 9 is_stmt 1 view .LVU1098
 841:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 4338              		.loc 19 841 34 is_stmt 0 view .LVU1099
 4339 00e0 0120     		movs	r0, #1
 4340 00e2 9FED371A 		vldr.32	s2, .L302+56
 4341 00e6 DFED370A 		vldr.32	s1, .L302+60
 4342 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4343              	.LVL260:
 4344              	.LBB1111:
 4345              	.LBB1112:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4346              		.loc 19 70 28 view .LVU1100
 4347 00ee 364B     		ldr	r3, .L302+64
 4348              	.LVL261:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4349              		.loc 19 70 28 view .LVU1101
 4350              	.LBE1112:
 4351              	.LBE1111:
 842:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 4352              		.loc 19 842 9 is_stmt 1 view .LVU1102
 4353              	.LBB1126:
 4354              	.LBI1111:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 4355              		.loc 19 68 10 view .LVU1103
 4356              	.LBB1124:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4357              		.loc 19 70 9 view .LVU1104
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4358              		.loc 19 70 28 is_stmt 0 view .LVU1105
 4359 00f0 D3ED017A 		vldr.32	s15, [r3, #4]
 4360              	.LVL262:
 4361              	.LBB1113:
 4362              	.LBI1113:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 173


 4363              		.loc 20 75 3 is_stmt 1 view .LVU1106
 4364              	.LBB1114:
 4365              		.loc 20 76 5 view .LVU1107
 4366              		.loc 20 76 5 is_stmt 0 view .LVU1108
 4367              	.LBE1114:
 4368              	.LBE1113:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4369              		.loc 19 70 15 view .LVU1109
 4370 00f4 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4371              		.loc 19 70 53 view .LVU1110
 4372 00f8 27EE888A 		vmul.f32	s16, s15, s16
 4373              	.LBB1116:
 4374              	.LBB1115:
 4375              		.loc 20 76 31 view .LVU1111
 4376 00fc F0EEC77A 		vabs.f32	s15, s14
 4377              	.LBE1115:
 4378              	.LBE1116:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4379              		.loc 19 70 9 view .LVU1112
 4380 0100 F4EEC87A 		vcmpe.f32	s15, s16
 4381 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4382 0108 0DDD     		ble	.L287
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4383              		.loc 19 74 29 view .LVU1113
 4384 010a FCEEC07A 		vcvt.u32.f32	s15, s0
 4385              	.LBB1117:
 4386              	.LBB1118:
 4387              		.loc 18 72 9 view .LVU1114
 4388 010e 2F4C     		ldr	r4, .L302+68
 4389              	.LBE1118:
 4390              	.LBE1117:
 4391              	.LBE1124:
 4392              	.LBE1126:
 842:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 4393              		.loc 19 842 33 view .LVU1115
 4394 0110 1968     		ldr	r1, [r3]
 4395              	.LBB1127:
 4396              	.LBB1125:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 4397              		.loc 19 73 13 is_stmt 1 view .LVU1116
 4398              	.LBB1121:
 4399              	.LBB1119:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4400              		.loc 18 71 9 is_stmt 0 view .LVU1117
 4401 0112 0020     		movs	r0, #0
 4402              	.LBE1119:
 4403              	.LBE1121:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 4404              		.loc 19 73 27 view .LVU1118
 4405 0114 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4406              		.loc 19 74 13 is_stmt 1 view .LVU1119
 4407              	.LVL263:
 4408              	.LBB1122:
 4409              	.LBI1117:
  69:delayline_reverse.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 174


 4410              		.loc 18 69 17 view .LVU1120
  69:delayline_reverse.h ****     {
 4411              		.loc 18 69 17 is_stmt 0 view .LVU1121
 4412              	.LBE1122:
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4413              		.loc 19 74 29 view .LVU1122
 4414 0118 17EE902A 		vmov	r2, s15	@ int
 4415              	.LBB1123:
 4416              	.LBB1120:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4417              		.loc 18 71 9 view .LVU1123
 4418 011c 0860     		str	r0, [r1]	@ float
 4419              		.loc 18 72 9 view .LVU1124
 4420 011e A242     		cmp	r2, r4
 4421 0120 28BF     		it	cs
 4422 0122 2246     		movcs	r2, r4
 4423 0124 0A61     		str	r2, [r1, #16]
 4424              	.LVL264:
 4425              	.L287:
 4426              		.loc 18 72 9 view .LVU1125
 4427              	.LBE1120:
 4428              	.LBE1123:
 4429              	.LBE1125:
 4430              	.LBE1127:
 843:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 4431              		.loc 19 843 9 is_stmt 1 view .LVU1126
 4432              	.LBB1128:
 4433              	.LBI1128:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 4434              		.loc 19 68 10 view .LVU1127
 4435              	.LBB1129:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4436              		.loc 19 70 9 view .LVU1128
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4437              		.loc 19 70 28 is_stmt 0 view .LVU1129
 4438 0126 2A4B     		ldr	r3, .L302+72
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4439              		.loc 19 70 53 view .LVU1130
 4440 0128 DFED246A 		vldr.32	s13, .L302+52
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4441              		.loc 19 70 28 view .LVU1131
 4442 012c D3ED017A 		vldr.32	s15, [r3, #4]
 4443              	.LVL265:
 4444              	.LBB1130:
 4445              	.LBI1130:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4446              		.loc 20 75 3 is_stmt 1 view .LVU1132
 4447              	.LBB1131:
 4448              		.loc 20 76 5 view .LVU1133
 4449              		.loc 20 76 5 is_stmt 0 view .LVU1134
 4450              	.LBE1131:
 4451              	.LBE1130:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4452              		.loc 19 70 15 view .LVU1135
 4453 0130 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4454              		.loc 19 70 53 view .LVU1136
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 175


 4455 0134 67EEA67A 		vmul.f32	s15, s15, s13
 4456              	.LBB1133:
 4457              	.LBB1132:
 4458              		.loc 20 76 31 view .LVU1137
 4459 0138 B0EEC77A 		vabs.f32	s14, s14
 4460              	.LBE1132:
 4461              	.LBE1133:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4462              		.loc 19 70 9 view .LVU1138
 4463 013c B4EEE77A 		vcmpe.f32	s14, s15
 4464 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4465 0144 0DDD     		ble	.L289
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4466              		.loc 19 74 29 view .LVU1139
 4467 0146 FCEEC07A 		vcvt.u32.f32	s15, s0
 4468              	.LBB1134:
 4469              	.LBB1135:
 4470              		.loc 18 72 9 view .LVU1140
 4471 014a 204C     		ldr	r4, .L302+68
 4472              	.LBE1135:
 4473              	.LBE1134:
 4474              	.LBE1129:
 4475              	.LBE1128:
 843:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 4476              		.loc 19 843 33 view .LVU1141
 4477 014c 1968     		ldr	r1, [r3]
 4478              	.LBB1142:
 4479              	.LBB1141:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 4480              		.loc 19 73 13 is_stmt 1 view .LVU1142
 4481              	.LBB1138:
 4482              	.LBB1136:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4483              		.loc 18 71 9 is_stmt 0 view .LVU1143
 4484 014e 0020     		movs	r0, #0
 4485              	.LBE1136:
 4486              	.LBE1138:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 4487              		.loc 19 73 27 view .LVU1144
 4488 0150 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4489              		.loc 19 74 13 is_stmt 1 view .LVU1145
 4490              	.LVL266:
 4491              	.LBB1139:
 4492              	.LBI1134:
  69:delayline_reverse.h ****     {
 4493              		.loc 18 69 17 view .LVU1146
  69:delayline_reverse.h ****     {
 4494              		.loc 18 69 17 is_stmt 0 view .LVU1147
 4495              	.LBE1139:
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4496              		.loc 19 74 29 view .LVU1148
 4497 0154 17EE902A 		vmov	r2, s15	@ int
 4498              	.LBB1140:
 4499              	.LBB1137:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4500              		.loc 18 71 9 view .LVU1149
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 176


 4501 0158 0860     		str	r0, [r1]	@ float
 4502              		.loc 18 72 9 view .LVU1150
 4503 015a A242     		cmp	r2, r4
 4504 015c 28BF     		it	cs
 4505 015e 2246     		movcs	r2, r4
 4506 0160 0A61     		str	r2, [r1, #16]
 4507              	.LVL267:
 4508              	.L289:
 4509              		.loc 18 72 9 view .LVU1151
 4510              	.LBE1137:
 4511              	.LBE1140:
 4512              	.LBE1141:
 4513              	.LBE1142:
 845:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 4514              		.loc 19 845 9 is_stmt 1 view .LVU1152
 845:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 4515              		.loc 19 845 31 is_stmt 0 view .LVU1153
 4516 0162 1C4B     		ldr	r3, .L302+76
 4517              	.LBE1110:
 4518              	.LBE1105:
 4519              	.LBE1150:
 849:Veno-Echo.cpp **** }
 4520              		.loc 19 849 1 view .LVU1154
 4521 0164 BDEC028B 		vldm	sp!, {d8}
 4522              		.cfi_remember_state
 4523              		.cfi_restore 80
 4524              		.cfi_restore 81
 4525              		.cfi_def_cfa_offset 8
 4526              	.LBB1151:
 4527              	.LBB1144:
 4528              	.LBB1143:
 845:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 4529              		.loc 19 845 31 view .LVU1155
 4530 0168 83ED000A 		vstr.32	s0, [r3]
 4531              	.LBE1143:
 4532              	.LBE1144:
 4533              	.LBE1151:
 849:Veno-Echo.cpp **** }
 4534              		.loc 19 849 1 view .LVU1156
 4535 016c 10BD     		pop	{r4, pc}
 4536              	.LVL268:
 4537              	.L300:
 4538              		.cfi_restore_state
 4539              	.LBB1152:
 4540              	.LBB1145:
 819:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - DelayTimeL,true);
 4541              		.loc 19 819 13 is_stmt 1 view .LVU1157
 819:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - DelayTimeL,true);
 4542              		.loc 19 819 36 is_stmt 0 view .LVU1158
 4543 016e B7EE000A 		vmov.f32	s0, #1.0e+0
 4544              	.LVL269:
 819:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - DelayTimeL,true);
 4545              		.loc 19 819 36 view .LVU1159
 4546 0172 0121     		movs	r1, #1
 4547 0174 0F48     		ldr	r0, .L302+44
 4548 0176 30EE480A 		vsub.f32	s0, s0, s16
 4549              	.LBE1145:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 177


 4550              	.LBE1152:
 849:Veno-Echo.cpp **** }
 4551              		.loc 19 849 1 view .LVU1160
 4552 017a BDEC028B 		vldm	sp!, {d8}
 4553              		.cfi_restore 80
 4554              		.cfi_restore 81
 4555              		.cfi_def_cfa_offset 8
 4556              	.LVL270:
 849:Veno-Echo.cpp **** }
 4557              		.loc 19 849 1 view .LVU1161
 4558 017e BDE81040 		pop	{r4, lr}
 4559              		.cfi_restore 14
 4560              		.cfi_restore 4
 4561              		.cfi_def_cfa_offset 0
 4562              	.LBB1153:
 4563              	.LBB1146:
 819:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - DelayTimeL,true);
 4564              		.loc 19 819 36 view .LVU1162
 4565 0182 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 4566              	.LVL271:
 4567              	.L303:
 819:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - DelayTimeL,true);
 4568              		.loc 19 819 36 view .LVU1163
 4569 0186 00BF     		.align	2
 4570              	.L302:
 4571 0188 18000000 		.word	.LANCHOR4+24
 4572 018c 00000000 		.word	.LANCHOR59
 4573 0190 ABAAAA2A 		.word	715827883
 4574 0194 00000000 		.word	.LANCHOR8
 4575 0198 00000000 		.word	.LANCHOR5
 4576 019c 00000000 		.word	.LANCHOR60
 4577 01a0 00000000 		.word	.LANCHOR51
 4578 01a4 00000000 		.word	0
 4579 01a8 00000000 		.word	.LANCHOR50
 4580 01ac 00000000 		.word	.LANCHOR52
 4581 01b0 00004042 		.word	1111490560
 4582 01b4 00000000 		.word	.LANCHOR0
 4583 01b8 00000000 		.word	.LANCHOR54
 4584 01bc 0AD7A33B 		.word	1000593162
 4585 01c0 0050C346 		.word	1187205120
 4586 01c4 00606A48 		.word	1214930944
 4587 01c8 00000000 		.word	.LANCHOR2
 4588 01cc BF270900 		.word	599999
 4589 01d0 00000000 		.word	.LANCHOR3
 4590 01d4 00000000 		.word	.LANCHOR16
 4591              	.LBE1146:
 4592              	.LBE1153:
 4593              		.cfi_endproc
 4594              	.LFE4292:
 4596              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 4597              		.align	1
 4598              		.p2align 2,,3
 4599              		.global	_Z11GetTapRatio9TapRatios
 4600              		.syntax unified
 4601              		.thumb
 4602              		.thumb_func
 4603              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 178


 4605              	_Z11GetTapRatio9TapRatios:
 4606              	.LVL272:
 4607              	.LFB4311:
1464:Veno-Echo.cpp **** {
 4608              		.loc 19 1464 1 is_stmt 1 view -0
 4609              		.cfi_startproc
 4610              		@ args = 0, pretend = 0, frame = 0
 4611              		@ frame_needed = 0, uses_anonymous_args = 0
 4612              		@ link register save eliminated.
1465:Veno-Echo.cpp ****     float retVal{};
 4613              		.loc 19 1465 5 view .LVU1165
1466:Veno-Echo.cpp ****     switch(ratio)
 4614              		.loc 19 1466 5 view .LVU1166
 4615 0000 0138     		subs	r0, r0, #1
 4616              	.LVL273:
1466:Veno-Echo.cpp ****     switch(ratio)
 4617              		.loc 19 1466 5 is_stmt 0 view .LVU1167
 4618 0002 C0B2     		uxtb	r0, r0
 4619 0004 0228     		cmp	r0, #2
 4620 0006 05D8     		bhi	.L306
 4621 0008 044B     		ldr	r3, .L307
 4622 000a 03EB8000 		add	r0, r3, r0, lsl #2
 4623 000e 90ED000A 		vldr.32	s0, [r0]
 4624 0012 7047     		bx	lr
 4625              	.L306:
1464:Veno-Echo.cpp **** {
 4626              		.loc 19 1464 1 view .LVU1168
 4627 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 4628              	.LVL274:
1489:Veno-Echo.cpp **** return retVal;
 4629              		.loc 19 1489 1 is_stmt 1 view .LVU1169
1490:Veno-Echo.cpp **** }
 4630              		.loc 19 1490 1 is_stmt 0 view .LVU1170
 4631 0018 7047     		bx	lr
 4632              	.L308:
 4633 001a 00BF     		.align	2
 4634              	.L307:
 4635 001c 00000000 		.word	.LANCHOR58
 4636              		.cfi_endproc
 4637              	.LFE4311:
 4639              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 4640              		.align	1
 4641              		.p2align 2,,3
 4642              		.global	_Z13ApplySettingsRK8Settings
 4643              		.syntax unified
 4644              		.thumb
 4645              		.thumb_func
 4646              		.fpu fpv5-d16
 4648              	_Z13ApplySettingsRK8Settings:
 4649              	.LVL275:
 4650              	.LFB4312:
1493:Veno-Echo.cpp **** {
 4651              		.loc 19 1493 1 is_stmt 1 view -0
 4652              		.cfi_startproc
 4653              		@ args = 0, pretend = 0, frame = 0
 4654              		@ frame_needed = 0, uses_anonymous_args = 0
1494:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 179


 4655              		.loc 19 1494 5 view .LVU1172
 4656 0000 9FEDCF7A 		vldr.32	s14, .L377
1494:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 4657              		.loc 19 1494 17 is_stmt 0 view .LVU1173
 4658 0004 D0ED007A 		vldr.32	s15, [r0]
1494:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 4659              		.loc 19 1494 5 view .LVU1174
 4660 0008 F4EEC77A 		vcmpe.f32	s15, s14
1493:Veno-Echo.cpp **** {
 4661              		.loc 19 1493 1 view .LVU1175
 4662 000c 38B5     		push	{r3, r4, r5, lr}
 4663              		.cfi_def_cfa_offset 16
 4664              		.cfi_offset 3, -16
 4665              		.cfi_offset 4, -12
 4666              		.cfi_offset 5, -8
 4667              		.cfi_offset 14, -4
1494:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 4668              		.loc 19 1494 5 view .LVU1176
 4669 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1493:Veno-Echo.cpp **** {
 4670              		.loc 19 1493 1 view .LVU1177
 4671 0012 0446     		mov	r4, r0
 4672              	.LBB1154:
 4673              	.LBB1155:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4674              		.loc 19 70 28 view .LVU1178
 4675 0014 CB4B     		ldr	r3, .L377+4
 4676              	.LBE1155:
 4677              	.LBE1154:
1494:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 4678              		.loc 19 1494 5 view .LVU1179
 4679 0016 C0F2FD80 		blt	.L310
1494:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 4680              		.loc 19 1494 43 discriminator 1 view .LVU1180
 4681 001a 9FEDCB7A 		vldr.32	s14, .L377+8
 4682 001e F4EEC77A 		vcmpe.f32	s15, s14
 4683 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4684 0026 00F2F580 		bhi	.L310
1496:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
 4685              		.loc 19 1496 9 is_stmt 1 view .LVU1181
 4686              	.LVL276:
 4687              	.LBB1169:
 4688              	.LBI1154:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 4689              		.loc 19 68 10 view .LVU1182
 4690              	.LBB1167:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4691              		.loc 19 70 9 view .LVU1183
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4692              		.loc 19 70 28 is_stmt 0 view .LVU1184
 4693 002a 93ED017A 		vldr.32	s14, [r3, #4]
 4694              	.LVL277:
 4695              	.LBB1156:
 4696              	.LBI1156:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4697              		.loc 20 75 3 is_stmt 1 view .LVU1185
 4698              	.LBB1157:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 180


 4699              		.loc 20 76 5 view .LVU1186
 4700              		.loc 20 76 5 is_stmt 0 view .LVU1187
 4701              	.LBE1157:
 4702              	.LBE1156:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4703              		.loc 19 70 53 view .LVU1188
 4704 002e 9FEDC76A 		vldr.32	s12, .L377+12
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4705              		.loc 19 70 15 view .LVU1189
 4706 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4707              		.loc 19 70 53 view .LVU1190
 4708 0036 27EE067A 		vmul.f32	s14, s14, s12
 4709              	.LBB1159:
 4710              	.LBB1158:
 4711              		.loc 20 76 31 view .LVU1191
 4712 003a F0EEE66A 		vabs.f32	s13, s13
 4713              	.LBE1158:
 4714              	.LBE1159:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4715              		.loc 19 70 9 view .LVU1192
 4716 003e F4EEC76A 		vcmpe.f32	s13, s14
 4717 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4718 0046 0FDD     		ble	.L313
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4719              		.loc 19 74 29 view .LVU1193
 4720 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 4721              	.LBB1160:
 4722              	.LBB1161:
 4723              		.loc 18 72 9 view .LVU1194
 4724 004c C04D     		ldr	r5, .L377+16
 4725              	.LBE1161:
 4726              	.LBE1160:
 4727              	.LBE1167:
 4728              	.LBE1169:
1496:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
 4729              		.loc 19 1496 33 view .LVU1195
 4730 004e 1968     		ldr	r1, [r3]
 4731              	.LBB1170:
 4732              	.LBB1168:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 4733              		.loc 19 73 13 is_stmt 1 view .LVU1196
 4734              	.LBB1164:
 4735              	.LBB1162:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4736              		.loc 18 71 9 is_stmt 0 view .LVU1197
 4737 0050 0020     		movs	r0, #0
 4738              	.LVL278:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4739              		.loc 18 71 9 view .LVU1198
 4740              	.LBE1162:
 4741              	.LBE1164:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 4742              		.loc 19 73 27 view .LVU1199
 4743 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4744              		.loc 19 74 13 is_stmt 1 view .LVU1200
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 181


 4745              	.LVL279:
 4746              	.LBB1165:
 4747              	.LBI1160:
  69:delayline_reverse.h ****     {
 4748              		.loc 18 69 17 view .LVU1201
  69:delayline_reverse.h ****     {
 4749              		.loc 18 69 17 is_stmt 0 view .LVU1202
 4750              	.LBE1165:
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4751              		.loc 19 74 29 view .LVU1203
 4752 0056 17EE102A 		vmov	r2, s14	@ int
 4753              	.LBB1166:
 4754              	.LBB1163:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4755              		.loc 18 71 9 view .LVU1204
 4756 005a 0860     		str	r0, [r1]	@ float
 4757 005c D4ED007A 		vldr.32	s15, [r4]
 4758              	.LVL280:
 4759              		.loc 18 72 9 view .LVU1205
 4760 0060 AA42     		cmp	r2, r5
 4761 0062 28BF     		it	cs
 4762 0064 2A46     		movcs	r2, r5
 4763 0066 0A61     		str	r2, [r1, #16]
 4764              	.LVL281:
 4765              	.L313:
 4766              		.loc 18 72 9 view .LVU1206
 4767              	.LBE1163:
 4768              	.LBE1166:
 4769              	.LBE1168:
 4770              	.LBE1170:
1497:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 4771              		.loc 19 1497 9 is_stmt 1 view .LVU1207
 4772              	.LBB1171:
 4773              	.LBI1171:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 4774              		.loc 19 68 10 view .LVU1208
 4775              	.LBB1172:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4776              		.loc 19 70 9 view .LVU1209
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4777              		.loc 19 70 28 is_stmt 0 view .LVU1210
 4778 0068 BA4B     		ldr	r3, .L377+20
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4779              		.loc 19 70 53 view .LVU1211
 4780 006a 9FEDB86A 		vldr.32	s12, .L377+12
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4781              		.loc 19 70 28 view .LVU1212
 4782 006e 93ED017A 		vldr.32	s14, [r3, #4]
 4783              	.LVL282:
 4784              	.LBB1173:
 4785              	.LBI1173:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4786              		.loc 20 75 3 is_stmt 1 view .LVU1213
 4787              	.LBB1174:
 4788              		.loc 20 76 5 view .LVU1214
 4789              		.loc 20 76 5 is_stmt 0 view .LVU1215
 4790              	.LBE1174:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 182


 4791              	.LBE1173:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4792              		.loc 19 70 15 view .LVU1216
 4793 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4794              		.loc 19 70 53 view .LVU1217
 4795 0076 27EE067A 		vmul.f32	s14, s14, s12
 4796              	.LBB1176:
 4797              	.LBB1175:
 4798              		.loc 20 76 31 view .LVU1218
 4799 007a F0EEE66A 		vabs.f32	s13, s13
 4800              	.LBE1175:
 4801              	.LBE1176:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4802              		.loc 19 70 9 view .LVU1219
 4803 007e F4EEC76A 		vcmpe.f32	s13, s14
 4804 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4805 0086 00F34B81 		bgt	.L373
 4806              	.LVL283:
 4807              	.L316:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 4808              		.loc 19 70 9 view .LVU1220
 4809              	.LBE1172:
 4810              	.LBE1171:
1505:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
 4811              		.loc 19 1505 5 is_stmt 1 view .LVU1221
 4812 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1505:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
 4813              		.loc 19 1505 17 is_stmt 0 view .LVU1222
 4814 008e 94ED010A 		vldr.32	s0, [r4, #4]
1505:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
 4815              		.loc 19 1505 5 view .LVU1223
 4816 0092 B4EEE70A 		vcmpe.f32	s0, s15
 4817 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4818 009a 06DB     		blt	.L321
1505:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
 4819              		.loc 19 1505 35 discriminator 1 view .LVU1224
 4820 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 4821 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 4822 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4823 00a8 01D9     		bls	.L371
 4824              	.L321:
1511:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
 4825              		.loc 19 1511 9 is_stmt 1 view .LVU1225
1511:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
 4826              		.loc 19 1511 30 is_stmt 0 view .LVU1226
 4827 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 4828              	.L371:
 4829 00ae AA48     		ldr	r0, .L377+24
 4830 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 4831              	.LVL284:
1514:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
 4832              		.loc 19 1514 5 is_stmt 1 view .LVU1227
1514:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
 4833              		.loc 19 1514 17 is_stmt 0 view .LVU1228
 4834 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1514:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 183


 4835              		.loc 19 1514 5 view .LVU1229
 4836 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 4837 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4838 00c0 C0F22B81 		blt	.L368
1514:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
 4839              		.loc 19 1514 42 discriminator 1 view .LVU1230
 4840 00c4 DFEDA56A 		vldr.32	s13, .L377+28
1520:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
 4841              		.loc 19 1520 18 discriminator 1 view .LVU1231
 4842 00c8 9FEDA57A 		vldr.32	s14, .L377+32
 4843 00cc F4EEE67A 		vcmpe.f32	s15, s13
 4844 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4845 00d4 88BF     		it	hi
 4846 00d6 F0EE477A 		vmovhi.f32	s15, s14
 4847              	.L325:
1523:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
 4848              		.loc 19 1523 17 view .LVU1232
 4849 00da 94ED030A 		vldr.32	s0, [r4, #12]
1523:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
 4850              		.loc 19 1523 5 view .LVU1233
 4851 00de 9FEDA17A 		vldr.32	s14, .L377+36
 4852 00e2 A14B     		ldr	r3, .L377+40
 4853 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 4854              	.LBB1187:
 4855              	.LBB1188:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4856              		.loc 8 60 20 view .LVU1234
 4857 00e8 A04D     		ldr	r5, .L377+44
 4858 00ea C3ED007A 		vstr.32	s15, [r3]
 4859              	.LBE1188:
 4860              	.LBE1187:
1523:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
 4861              		.loc 19 1523 5 is_stmt 1 view .LVU1235
 4862 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4863 00f2 06DB     		blt	.L328
1523:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
 4864              		.loc 19 1523 40 is_stmt 0 discriminator 1 view .LVU1236
 4865 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 4866 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 4867 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4868 0100 01D9     		bls	.L372
 4869              	.L328:
1529:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
 4870              		.loc 19 1529 9 is_stmt 1 view .LVU1237
 4871              	.LVL285:
 4872              	.LBB1189:
 4873              	.LBI1189:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4874              		.loc 8 58 17 view .LVU1238
 4875              	.LBB1190:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4876              		.loc 8 60 9 view .LVU1239
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4877              		.loc 8 60 20 is_stmt 0 view .LVU1240
 4878 0102 9FED9B0A 		vldr.32	s0, .L377+48
 4879              	.LVL286:
 4880              	.L372:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 184


 4881              		.loc 8 61 34 view .LVU1241
 4882 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4883              		.loc 8 60 20 view .LVU1242
 4884 0108 85ED020A 		vstr.32	s0, [r5, #8]
 4885              		.loc 8 61 9 is_stmt 1 view .LVU1243
 4886              		.loc 8 61 34 is_stmt 0 view .LVU1244
 4887 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4888              	.LVL287:
 4889              	.LBE1190:
 4890              	.LBE1189:
1532:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 4891              		.loc 19 1532 5 view .LVU1245
 4892 0110 DFED987A 		vldr.32	s15, .L377+52
 4893              	.LBB1192:
 4894              	.LBB1191:
 4895              		.loc 8 61 20 view .LVU1246
 4896 0114 85ED060A 		vstr.32	s0, [r5, #24]
 4897              	.LBE1191:
 4898              	.LBE1192:
1532:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 4899              		.loc 19 1532 5 is_stmt 1 view .LVU1247
1532:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 4900              		.loc 19 1532 17 is_stmt 0 view .LVU1248
 4901 0118 94ED050A 		vldr.32	s0, [r4, #20]
1532:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 4902              		.loc 19 1532 5 view .LVU1249
 4903 011c B4EEE70A 		vcmpe.f32	s0, s15
 4904 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4905 0124 07DB     		blt	.L332
1532:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 4906              		.loc 19 1532 40 discriminator 1 view .LVU1250
 4907 0126 DFED947A 		vldr.32	s15, .L377+56
 4908 012a B4EEE70A 		vcmpe.f32	s0, s15
 4909 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4910 0132 40F2DF80 		bls	.L374
 4911              	.L332:
1541:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
 4912              		.loc 19 1541 9 is_stmt 1 view .LVU1251
1541:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
 4913              		.loc 19 1541 22 is_stmt 0 view .LVU1252
 4914 0136 9FED900A 		vldr.32	s0, .L377+56
 4915 013a 9048     		ldr	r0, .L377+60
 4916 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4917              	.LVL288:
1542:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 4918              		.loc 19 1542 9 is_stmt 1 view .LVU1253
1542:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 4919              		.loc 19 1542 22 is_stmt 0 view .LVU1254
 4920 0140 9FED8D0A 		vldr.32	s0, .L377+56
 4921 0144 8E48     		ldr	r0, .L377+64
 4922 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4923              	.LVL289:
1543:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 4924              		.loc 19 1543 9 is_stmt 1 view .LVU1255
1543:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 4925              		.loc 19 1543 27 is_stmt 0 view .LVU1256
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 185


 4926 014a 9FED8B0A 		vldr.32	s0, .L377+56
 4927 014e 8D48     		ldr	r0, .L377+68
 4928 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4929              	.LVL290:
1544:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 4930              		.loc 19 1544 9 is_stmt 1 view .LVU1257
1544:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 4931              		.loc 19 1544 27 is_stmt 0 view .LVU1258
 4932 0154 9FED880A 		vldr.32	s0, .L377+56
 4933 0158 8B48     		ldr	r0, .L377+72
 4934 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4935              	.LVL291:
 4936              	.L335:
1547:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
 4937              		.loc 19 1547 5 is_stmt 1 view .LVU1259
1547:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
 4938              		.loc 19 1547 17 is_stmt 0 view .LVU1260
 4939 015e 94ED040A 		vldr.32	s0, [r4, #16]
1547:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
 4940              		.loc 19 1547 5 view .LVU1261
 4941 0162 DFED8A7A 		vldr.32	s15, .L377+76
 4942 0166 B4EEE70A 		vcmpe.f32	s0, s15
 4943 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4944 016e 07DB     		blt	.L336
1547:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
 4945              		.loc 19 1547 40 discriminator 1 view .LVU1262
 4946 0170 DFED877A 		vldr.32	s15, .L377+80
 4947 0174 B4EEE70A 		vcmpe.f32	s0, s15
 4948 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4949 017c 40F2A780 		bls	.L375
 4950              	.L336:
1556:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
 4951              		.loc 19 1556 9 is_stmt 1 view .LVU1263
1556:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
 4952              		.loc 19 1556 22 is_stmt 0 view .LVU1264
 4953 0180 9FED840A 		vldr.32	s0, .L377+84
 4954 0184 8448     		ldr	r0, .L377+88
 4955 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4956              	.LVL292:
1557:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 4957              		.loc 19 1557 9 is_stmt 1 view .LVU1265
1557:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 4958              		.loc 19 1557 22 is_stmt 0 view .LVU1266
 4959 018a 9FED820A 		vldr.32	s0, .L377+84
 4960 018e 8348     		ldr	r0, .L377+92
 4961 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4962              	.LVL293:
1558:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 4963              		.loc 19 1558 9 is_stmt 1 view .LVU1267
1558:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 4964              		.loc 19 1558 27 is_stmt 0 view .LVU1268
 4965 0194 9FED7F0A 		vldr.32	s0, .L377+84
 4966 0198 8148     		ldr	r0, .L377+96
 4967 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4968              	.LVL294:
1559:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 4969              		.loc 19 1559 9 is_stmt 1 view .LVU1269
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 186


1559:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 4970              		.loc 19 1559 27 is_stmt 0 view .LVU1270
 4971 019e 9FED7D0A 		vldr.32	s0, .L377+84
 4972 01a2 8048     		ldr	r0, .L377+100
 4973 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4974              	.LVL295:
 4975              	.L339:
1563:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
 4976              		.loc 19 1563 5 is_stmt 1 view .LVU1271
1563:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
 4977              		.loc 19 1563 17 is_stmt 0 view .LVU1272
 4978 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1563:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
 4979              		.loc 19 1563 5 view .LVU1273
 4980 01ac B5EEC00A 		vcmpe.f32	s0, #0
 4981 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4982 01b4 06DB     		blt	.L340
1563:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
 4983              		.loc 19 1563 38 discriminator 1 view .LVU1274
 4984 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 4985 01ba B4EEE70A 		vcmpe.f32	s0, s15
 4986 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4987 01c2 5DD9     		bls	.L376
 4988              	.L340:
1577:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
 4989              		.loc 19 1577 9 is_stmt 1 view .LVU1275
1577:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
 4990              		.loc 19 1577 26 is_stmt 0 view .LVU1276
 4991 01c4 9FED660A 		vldr.32	s0, .L377+32
 4992 01c8 6E48     		ldr	r0, .L377+68
 4993 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4994              	.LVL296:
1578:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 4995              		.loc 19 1578 9 is_stmt 1 view .LVU1277
1578:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 4996              		.loc 19 1578 26 is_stmt 0 view .LVU1278
 4997 01ce 9FED640A 		vldr.32	s0, .L377+32
 4998 01d2 7348     		ldr	r0, .L377+96
 4999 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5000              	.LVL297:
1579:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5001              		.loc 19 1579 9 is_stmt 1 view .LVU1279
1579:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5002              		.loc 19 1579 26 is_stmt 0 view .LVU1280
 5003 01d8 9FED610A 		vldr.32	s0, .L377+32
 5004 01dc 6A48     		ldr	r0, .L377+72
 5005 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5006              	.LVL298:
1580:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5007              		.loc 19 1580 9 is_stmt 1 view .LVU1281
1580:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5008              		.loc 19 1580 26 is_stmt 0 view .LVU1282
 5009 01e2 9FED5F0A 		vldr.32	s0, .L377+32
 5010 01e6 6F48     		ldr	r0, .L377+100
 5011 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5012              	.LVL299:
 5013              	.L343:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 187


1583:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
 5014              		.loc 19 1583 5 is_stmt 1 view .LVU1283
1583:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
 5015              		.loc 19 1583 16 is_stmt 0 view .LVU1284
 5016 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1583:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
 5017              		.loc 19 1583 5 view .LVU1285
 5018 01f0 9FED6D7A 		vldr.32	s14, .L377+104
1589:Veno-Echo.cpp ****         PostFilters = true;
 5019              		.loc 19 1589 21 view .LVU1286
 5020 01f4 6D4B     		ldr	r3, .L377+108
1583:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
 5021              		.loc 19 1583 5 view .LVU1287
 5022 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 5023 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5024 01fe 3CD4     		bmi	.L347
1587:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
 5025              		.loc 19 1587 14 is_stmt 1 view .LVU1288
 5026 0200 9FED6B7A 		vldr.32	s14, .L377+112
 5027 0204 F4EEC77A 		vcmpe.f32	s15, s14
 5028 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5029 020c 35DD     		ble	.L347
1589:Veno-Echo.cpp ****         PostFilters = true;
 5030              		.loc 19 1589 9 view .LVU1289
1589:Veno-Echo.cpp ****         PostFilters = true;
 5031              		.loc 19 1589 21 is_stmt 0 view .LVU1290
 5032 020e 0122     		movs	r2, #1
 5033 0210 1A70     		strb	r2, [r3]
1596:Veno-Echo.cpp **** }
 5034              		.loc 19 1596 1 view .LVU1291
 5035 0212 38BD     		pop	{r3, r4, r5, pc}
 5036              	.LVL300:
 5037              	.L310:
1501:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
 5038              		.loc 19 1501 9 is_stmt 1 view .LVU1292
 5039              	.LBB1193:
 5040              	.LBI1193:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 5041              		.loc 19 68 10 view .LVU1293
 5042              	.LBB1194:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5043              		.loc 19 70 9 view .LVU1294
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5044              		.loc 19 70 28 is_stmt 0 view .LVU1295
 5045 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 5046              	.LVL301:
 5047              	.LBB1195:
 5048              	.LBI1195:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5049              		.loc 20 75 3 is_stmt 1 view .LVU1296
 5050              	.LBB1196:
 5051              		.loc 20 76 5 view .LVU1297
 5052              		.loc 20 76 5 is_stmt 0 view .LVU1298
 5053              	.LBE1196:
 5054              	.LBE1195:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5055              		.loc 19 70 15 view .LVU1299
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 188


 5056 0218 DFED666A 		vldr.32	s13, .L377+116
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5057              		.loc 19 70 53 view .LVU1300
 5058 021c 9FED4B6A 		vldr.32	s12, .L377+12
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5059              		.loc 19 70 15 view .LVU1301
 5060 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5061              		.loc 19 70 53 view .LVU1302
 5062 0224 67EE867A 		vmul.f32	s15, s15, s12
 5063              	.LBB1198:
 5064              	.LBB1197:
 5065              		.loc 20 76 31 view .LVU1303
 5066 0228 B0EEC77A 		vabs.f32	s14, s14
 5067              	.LBE1197:
 5068              	.LBE1198:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5069              		.loc 19 70 9 view .LVU1304
 5070 022c B4EEE77A 		vcmpe.f32	s14, s15
 5071 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5072 0234 06DD     		ble	.L317
 5073              	.LBE1194:
 5074              	.LBE1193:
1501:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
 5075              		.loc 19 1501 33 view .LVU1305
 5076 0236 1A68     		ldr	r2, [r3]
 5077              	.LBB1204:
 5078              	.LBB1203:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5079              		.loc 19 73 13 is_stmt 1 view .LVU1306
 5080              	.LBB1199:
 5081              	.LBB1200:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5082              		.loc 18 71 9 is_stmt 0 view .LVU1307
 5083 0238 0021     		movs	r1, #0
 5084              		.loc 18 72 9 view .LVU1308
 5085 023a 5F48     		ldr	r0, .L377+120
 5086              	.LVL302:
 5087              		.loc 18 72 9 view .LVU1309
 5088              	.LBE1200:
 5089              	.LBE1199:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5090              		.loc 19 73 27 view .LVU1310
 5091 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5092              		.loc 19 74 13 is_stmt 1 view .LVU1311
 5093              	.LVL303:
 5094              	.LBB1202:
 5095              	.LBI1199:
  69:delayline_reverse.h ****     {
 5096              		.loc 18 69 17 view .LVU1312
 5097              	.LBB1201:
 5098              		.loc 18 72 9 is_stmt 0 view .LVU1313
 5099 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5100              		.loc 18 71 9 view .LVU1314
 5101 0242 1160     		str	r1, [r2]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 189


 5102              	.LVL304:
 5103              	.L317:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5104              		.loc 18 71 9 view .LVU1315
 5105              	.LBE1201:
 5106              	.LBE1202:
 5107              	.LBE1203:
 5108              	.LBE1204:
1502:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5109              		.loc 19 1502 9 is_stmt 1 view .LVU1316
 5110              	.LBB1205:
 5111              	.LBI1205:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 5112              		.loc 19 68 10 view .LVU1317
 5113              	.LBB1206:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5114              		.loc 19 70 9 view .LVU1318
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5115              		.loc 19 70 28 is_stmt 0 view .LVU1319
 5116 0244 434B     		ldr	r3, .L377+20
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5117              		.loc 19 70 15 view .LVU1320
 5118 0246 DFED5B6A 		vldr.32	s13, .L377+116
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5119              		.loc 19 70 28 view .LVU1321
 5120 024a D3ED017A 		vldr.32	s15, [r3, #4]
 5121              	.LVL305:
 5122              	.LBB1207:
 5123              	.LBI1207:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5124              		.loc 20 75 3 is_stmt 1 view .LVU1322
 5125              	.LBB1208:
 5126              		.loc 20 76 5 view .LVU1323
 5127              		.loc 20 76 5 is_stmt 0 view .LVU1324
 5128              	.LBE1208:
 5129              	.LBE1207:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5130              		.loc 19 70 53 view .LVU1325
 5131 024e 9FED3F6A 		vldr.32	s12, .L377+12
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5132              		.loc 19 70 15 view .LVU1326
 5133 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5134              		.loc 19 70 53 view .LVU1327
 5135 0256 67EE867A 		vmul.f32	s15, s15, s12
 5136              	.LBB1210:
 5137              	.LBB1209:
 5138              		.loc 20 76 31 view .LVU1328
 5139 025a B0EEC77A 		vabs.f32	s14, s14
 5140              	.LBE1209:
 5141              	.LBE1210:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5142              		.loc 19 70 9 view .LVU1329
 5143 025e B4EEE77A 		vcmpe.f32	s14, s15
 5144 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5145 0266 7FF710AF 		ble	.L316
 5146              	.LBE1206:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 190


 5147              	.LBE1205:
1502:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5148              		.loc 19 1502 33 view .LVU1330
 5149 026a 1A68     		ldr	r2, [r3]
 5150              	.LBB1216:
 5151              	.LBB1215:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5152              		.loc 19 73 13 is_stmt 1 view .LVU1331
 5153              	.LBB1211:
 5154              	.LBB1212:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5155              		.loc 18 71 9 is_stmt 0 view .LVU1332
 5156 026c 0021     		movs	r1, #0
 5157              		.loc 18 72 9 view .LVU1333
 5158 026e 5248     		ldr	r0, .L377+120
 5159              	.LBE1212:
 5160              	.LBE1211:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5161              		.loc 19 73 27 view .LVU1334
 5162 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5163              		.loc 19 74 13 is_stmt 1 view .LVU1335
 5164              	.LVL306:
 5165              	.LBB1214:
 5166              	.LBI1211:
  69:delayline_reverse.h ****     {
 5167              		.loc 18 69 17 view .LVU1336
 5168              	.LBB1213:
 5169              		.loc 18 72 9 is_stmt 0 view .LVU1337
 5170 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5171              		.loc 18 71 9 view .LVU1338
 5172 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 5173              		.loc 18 73 5 view .LVU1339
 5174 0278 07E7     		b	.L316
 5175              	.LVL307:
 5176              	.L347:
 5177              		.loc 18 73 5 view .LVU1340
 5178              	.LBE1213:
 5179              	.LBE1214:
 5180              	.LBE1215:
 5181              	.LBE1216:
1585:Veno-Echo.cpp ****         PostFilters = false;
 5182              		.loc 19 1585 9 is_stmt 1 view .LVU1341
1585:Veno-Echo.cpp ****         PostFilters = false;
 5183              		.loc 19 1585 21 is_stmt 0 view .LVU1342
 5184 027a 0022     		movs	r2, #0
 5185 027c 1A70     		strb	r2, [r3]
1596:Veno-Echo.cpp **** }
 5186              		.loc 19 1596 1 view .LVU1343
 5187 027e 38BD     		pop	{r3, r4, r5, pc}
 5188              	.LVL308:
 5189              	.L376:
1565:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
 5190              		.loc 19 1565 9 is_stmt 1 view .LVU1344
1565:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 191


 5191              		.loc 19 1565 21 is_stmt 0 view .LVU1345
 5192 0280 3E48     		ldr	r0, .L377+60
 5193 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5194              	.LVL309:
1566:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5195              		.loc 19 1566 9 is_stmt 1 view .LVU1346
1566:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5196              		.loc 19 1566 21 is_stmt 0 view .LVU1347
 5197 0286 94ED060A 		vldr.32	s0, [r4, #24]
 5198 028a 4348     		ldr	r0, .L377+88
 5199 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5200              	.LVL310:
1567:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5201              		.loc 19 1567 9 is_stmt 1 view .LVU1348
1567:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5202              		.loc 19 1567 21 is_stmt 0 view .LVU1349
 5203 0290 94ED060A 		vldr.32	s0, [r4, #24]
 5204 0294 3A48     		ldr	r0, .L377+64
 5205 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5206              	.LVL311:
1568:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5207              		.loc 19 1568 9 is_stmt 1 view .LVU1350
1568:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5208              		.loc 19 1568 21 is_stmt 0 view .LVU1351
 5209 029a 94ED060A 		vldr.32	s0, [r4, #24]
 5210 029e 3F48     		ldr	r0, .L377+92
 5211 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5212              	.LVL312:
1569:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5213              		.loc 19 1569 9 is_stmt 1 view .LVU1352
1569:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5214              		.loc 19 1569 26 is_stmt 0 view .LVU1353
 5215 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 5216 02a8 3648     		ldr	r0, .L377+68
 5217 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5218              	.LVL313:
1570:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5219              		.loc 19 1570 9 is_stmt 1 view .LVU1354
1570:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5220              		.loc 19 1570 26 is_stmt 0 view .LVU1355
 5221 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 5222 02b2 3B48     		ldr	r0, .L377+96
 5223 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5224              	.LVL314:
1571:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5225              		.loc 19 1571 9 is_stmt 1 view .LVU1356
1571:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5226              		.loc 19 1571 26 is_stmt 0 view .LVU1357
 5227 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 5228 02bc 3248     		ldr	r0, .L377+72
 5229 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5230              	.LVL315:
1572:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5231              		.loc 19 1572 9 is_stmt 1 view .LVU1358
1572:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5232              		.loc 19 1572 26 is_stmt 0 view .LVU1359
 5233 02c2 94ED060A 		vldr.32	s0, [r4, #24]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 192


 5234 02c6 3748     		ldr	r0, .L377+100
 5235 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5236              	.LVL316:
 5237 02cc 8EE7     		b	.L343
 5238              	.L375:
1549:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
 5239              		.loc 19 1549 9 is_stmt 1 view .LVU1360
1549:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
 5240              		.loc 19 1549 22 is_stmt 0 view .LVU1361
 5241 02ce 3248     		ldr	r0, .L377+88
 5242 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5243              	.LVL317:
1550:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 5244              		.loc 19 1550 9 is_stmt 1 view .LVU1362
1550:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 5245              		.loc 19 1550 22 is_stmt 0 view .LVU1363
 5246 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 5247 02d8 3048     		ldr	r0, .L377+92
 5248 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5249              	.LVL318:
1551:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 5250              		.loc 19 1551 9 is_stmt 1 view .LVU1364
1551:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 5251              		.loc 19 1551 27 is_stmt 0 view .LVU1365
 5252 02de 94ED040A 		vldr.32	s0, [r4, #16]
 5253 02e2 2F48     		ldr	r0, .L377+96
 5254 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5255              	.LVL319:
1552:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 5256              		.loc 19 1552 9 is_stmt 1 view .LVU1366
1552:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 5257              		.loc 19 1552 27 is_stmt 0 view .LVU1367
 5258 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 5259 02ec 2D48     		ldr	r0, .L377+100
 5260 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5261              	.LVL320:
 5262 02f2 59E7     		b	.L339
 5263              	.L374:
1534:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
 5264              		.loc 19 1534 9 is_stmt 1 view .LVU1368
1534:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
 5265              		.loc 19 1534 22 is_stmt 0 view .LVU1369
 5266 02f4 2148     		ldr	r0, .L377+60
 5267 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5268              	.LVL321:
1535:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 5269              		.loc 19 1535 9 is_stmt 1 view .LVU1370
1535:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 5270              		.loc 19 1535 22 is_stmt 0 view .LVU1371
 5271 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 5272 02fe 2048     		ldr	r0, .L377+64
 5273 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5274              	.LVL322:
1536:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 5275              		.loc 19 1536 9 is_stmt 1 view .LVU1372
1536:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 5276              		.loc 19 1536 27 is_stmt 0 view .LVU1373
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 193


 5277 0304 94ED050A 		vldr.32	s0, [r4, #20]
 5278 0308 1E48     		ldr	r0, .L377+68
 5279 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5280              	.LVL323:
1537:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 5281              		.loc 19 1537 9 is_stmt 1 view .LVU1374
1537:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 5282              		.loc 19 1537 27 is_stmt 0 view .LVU1375
 5283 030e 94ED050A 		vldr.32	s0, [r4, #20]
 5284 0312 1D48     		ldr	r0, .L377+72
 5285 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5286              	.LVL324:
 5287 0318 21E7     		b	.L335
 5288              	.L368:
1520:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
 5289              		.loc 19 1520 18 view .LVU1376
 5290 031a DFED117A 		vldr.32	s15, .L377+32
 5291 031e DCE6     		b	.L325
 5292              	.LVL325:
 5293              	.L373:
 5294              	.LBB1217:
 5295              	.LBB1185:
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5296              		.loc 19 74 29 view .LVU1377
 5297 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 5298              	.LBB1177:
 5299              	.LBB1178:
  72:delayline_reverse.h ****     }
 5300              		.loc 18 72 9 view .LVU1378
 5301 0324 0A4D     		ldr	r5, .L377+16
 5302              	.LBE1178:
 5303              	.LBE1177:
 5304              	.LBE1185:
 5305              	.LBE1217:
1497:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5306              		.loc 19 1497 33 view .LVU1379
 5307 0326 1968     		ldr	r1, [r3]
 5308              	.LBB1218:
 5309              	.LBB1186:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5310              		.loc 19 73 13 is_stmt 1 view .LVU1380
 5311              	.LBB1182:
 5312              	.LBB1179:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5313              		.loc 18 71 9 is_stmt 0 view .LVU1381
 5314 0328 0020     		movs	r0, #0
 5315              	.LBE1179:
 5316              	.LBE1182:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5317              		.loc 19 73 27 view .LVU1382
 5318 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5319              		.loc 19 74 29 view .LVU1383
 5320 032e 17EE102A 		vmov	r2, s14	@ int
 5321              	.LBB1183:
 5322              	.LBB1180:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 194


 5323              		.loc 18 71 9 view .LVU1384
 5324 0332 0860     		str	r0, [r1]	@ float
 5325              	.LVL326:
  72:delayline_reverse.h ****     }
 5326              		.loc 18 72 9 view .LVU1385
 5327 0334 AA42     		cmp	r2, r5
 5328 0336 28BF     		it	cs
 5329 0338 2A46     		movcs	r2, r5
 5330              	.LBE1180:
 5331              	.LBE1183:
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5332              		.loc 19 74 13 is_stmt 1 view .LVU1386
 5333              	.LVL327:
 5334              	.LBB1184:
 5335              	.LBI1177:
  69:delayline_reverse.h ****     {
 5336              		.loc 18 69 17 view .LVU1387
 5337              	.LBB1181:
  72:delayline_reverse.h ****     }
 5338              		.loc 18 72 9 is_stmt 0 view .LVU1388
 5339 033a 0A61     		str	r2, [r1, #16]
 5340              		.loc 18 73 5 view .LVU1389
 5341 033c A5E6     		b	.L316
 5342              	.L378:
 5343 033e 00BF     		.align	2
 5344              	.L377:
 5345 0340 0050C346 		.word	1187205120
 5346 0344 00000000 		.word	.LANCHOR2
 5347 0348 00606A48 		.word	1214930944
 5348 034c 0AD7A33B 		.word	1000593162
 5349 0350 BF270900 		.word	599999
 5350 0354 00000000 		.word	.LANCHOR3
 5351 0358 00000000 		.word	.LANCHOR50
 5352 035c 0000FA43 		.word	1140457472
 5353 0360 00000000 		.word	0
 5354 0364 CDCCCC3D 		.word	1036831949
 5355 0368 00000000 		.word	.LANCHOR36
 5356 036c 00000000 		.word	.LANCHOR40
 5357 0370 9A99A140 		.word	1084332442
 5358 0374 0080BB44 		.word	1153138688
 5359 0378 00803B46 		.word	1178304512
 5360 037c 00000000 		.word	.LANCHOR21
 5361 0380 00000000 		.word	.LANCHOR22
 5362 0384 00000000 		.word	.LANCHOR23
 5363 0388 00000000 		.word	.LANCHOR24
 5364 038c 0000C842 		.word	1120403456
 5365 0390 00004844 		.word	1145569280
 5366 0394 00004843 		.word	1128792064
 5367 0398 00000000 		.word	.LANCHOR12
 5368 039c 00000000 		.word	.LANCHOR13
 5369 03a0 00000000 		.word	.LANCHOR14
 5370 03a4 00000000 		.word	.LANCHOR15
 5371 03a8 6666E63E 		.word	1055286886
 5372 03ac 00000000 		.word	.LANCHOR43
 5373 03b0 CDCC0C3F 		.word	1057803469
 5374 03b4 00650148 		.word	1208050944
 5375 03b8 94050200 		.word	132500
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 195


 5376              	.LBE1181:
 5377              	.LBE1184:
 5378              	.LBE1186:
 5379              	.LBE1218:
 5380              		.cfi_endproc
 5381              	.LFE4312:
 5383              		.section	.text.startup.main,"ax",%progbits
 5384              		.align	1
 5385              		.p2align 2,,3
 5386              		.global	main
 5387              		.syntax unified
 5388              		.thumb
 5389              		.thumb_func
 5390              		.fpu fpv5-d16
 5392              	main:
 5393              	.LFB4290:
 611:Veno-Echo.cpp **** {
 5394              		.loc 19 611 1 is_stmt 1 view -0
 5395              		.cfi_startproc
 5396              		@ Volatile: function does not return.
 5397              		@ args = 0, pretend = 0, frame = 240
 5398              		@ frame_needed = 0, uses_anonymous_args = 0
 613:Veno-Echo.cpp ****     hw.Configure();
 5399              		.loc 19 613 5 view .LVU1391
 611:Veno-Echo.cpp **** {
 5400              		.loc 19 611 1 is_stmt 0 view .LVU1392
 5401 0000 80B5     		push	{r7, lr}
 5402              		.cfi_def_cfa_offset 8
 5403              		.cfi_offset 7, -8
 5404              		.cfi_offset 14, -4
 613:Veno-Echo.cpp ****     hw.Configure();
 5405              		.loc 19 613 17 view .LVU1393
 5406 0002 D148     		ldr	r0, .L382
 611:Veno-Echo.cpp **** {
 5407              		.loc 19 611 1 view .LVU1394
 5408 0004 BEB0     		sub	sp, sp, #248
 5409              		.cfi_def_cfa_offset 256
 613:Veno-Echo.cpp ****     hw.Configure();
 5410              		.loc 19 613 17 view .LVU1395
 5411 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 5412              	.LVL328:
 614:Veno-Echo.cpp ****     hw.Init();
 5413              		.loc 19 614 5 is_stmt 1 view .LVU1396
 614:Veno-Echo.cpp ****     hw.Init();
 5414              		.loc 19 614 12 is_stmt 0 view .LVU1397
 5415 000a 0021     		movs	r1, #0
 5416 000c CE48     		ldr	r0, .L382
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 5417              		.loc 19 618 16 view .LVU1398
 5418 000e B2EE088A 		vmov.f32	s16, #1.2e+1
 614:Veno-Echo.cpp ****     hw.Init();
 5419              		.loc 19 614 12 view .LVU1399
 5420 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 5421              	.LVL329:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 5422              		.loc 19 618 5 is_stmt 1 view .LVU1400
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 196


 5423              		.loc 19 618 16 is_stmt 0 view .LVU1401
 5424 0016 1D20     		movs	r0, #29
 5425 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5426              	.LVL330:
 5427 001c 0346     		mov	r3, r0	@ movhi
 5428 001e 0620     		movs	r0, #6
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5429              		.loc 19 625 22 view .LVU1402
 5430 0020 0224     		movs	r4, #2
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 5431              		.loc 19 618 16 view .LVU1403
 5432 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 5433 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5434              	.LVL331:
 5435 002a 0346     		mov	r3, r0	@ movhi
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 5436              		.loc 19 618 80 view .LVU1404
 5437 002c C648     		ldr	r0, .L382
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5438              		.loc 19 625 22 view .LVU1405
 5439 002e 9FEDC79A 		vldr.32	s18, .L382+4
 5440              	.LBB1219:
 5441              	.LBB1220:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 5442              		.loc 7 58 57 view .LVU1406
 5443 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 5444              	.LBE1220:
 5445              	.LBE1219:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 5446              		.loc 19 618 16 view .LVU1407
 5447 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 5448              		.loc 19 618 80 view .LVU1408
 5449 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5450              	.LVL332:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 5451              		.loc 19 618 16 view .LVU1409
 5452 003e 0123     		movs	r3, #1
 5453 0040 80EE080A 		vdiv.f32	s0, s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 197


 5454 0044 039A     		ldr	r2, [sp, #12]
 5455              	.LBB1223:
 5456              	.LBB1224:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5457              		.loc 7 54 63 view .LVU1410
 5458 0046 4FF07C55 		mov	r5, #1056964608
 5459              	.LBE1224:
 5460              	.LBE1223:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 5461              		.loc 19 618 16 view .LVU1411
 5462 004a 0299     		ldr	r1, [sp, #8]
 5463              	.LBB1227:
 5464              	.LBB1228:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 5465              		.loc 10 64 50 view .LVU1412
 5466 004c 1F46     		mov	r7, r3
 5467              	.LBE1228:
 5468              	.LBE1227:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 5469              		.loc 19 618 16 view .LVU1413
 5470 004e C048     		ldr	r0, .L382+8
 5471 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5472              	.LVL333:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5473              		.loc 19 619 5 is_stmt 1 view .LVU1414
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5474              		.loc 19 619 16 is_stmt 0 view .LVU1415
 5475 0054 1E20     		movs	r0, #30
 5476 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5477              	.LVL334:
 5478 005a 0346     		mov	r3, r0	@ movhi
 5479 005c 0720     		movs	r0, #7
 632:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 5480              		.loc 19 632 20 view .LVU1416
 5481 005e DFF85483 		ldr	r8, .L382+108
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5482              		.loc 19 619 16 view .LVU1417
 5483 0062 ADF81030 		strh	r3, [sp, #16]	@ movhi
 5484 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5485              	.LVL335:
 5486 006a 0346     		mov	r3, r0	@ movhi
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5487              		.loc 19 619 80 view .LVU1418
 5488 006c B648     		ldr	r0, .L382
 5489              	.LBB1231:
 5490              	.LBB1232:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5491              		.loc 7 54 63 view .LVU1419
 5492 006e B94E     		ldr	r6, .L382+12
 5493              	.LBE1232:
 5494              	.LBE1231:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5495              		.loc 19 619 16 view .LVU1420
 5496 0070 ADF81430 		strh	r3, [sp, #20]	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 198


 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5497              		.loc 19 619 80 view .LVU1421
 5498 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5499              	.LVL336:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5500              		.loc 19 619 16 view .LVU1422
 5501 0078 059A     		ldr	r2, [sp, #20]
 5502 007a 80EE080A 		vdiv.f32	s0, s0, s16
 5503 007e 0499     		ldr	r1, [sp, #16]
 5504 0080 3B46     		mov	r3, r7
 5505 0082 B548     		ldr	r0, .L382+16
 5506 0084 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5507              	.LVL337:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5508              		.loc 19 620 5 is_stmt 1 view .LVU1423
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5509              		.loc 19 620 18 is_stmt 0 view .LVU1424
 5510 0088 0A20     		movs	r0, #10
 5511 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5512              	.LVL338:
 5513 008e 0346     		mov	r3, r0	@ movhi
 5514 0090 2046     		mov	r0, r4
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 5515              		.loc 19 638 20 view .LVU1425
 5516 0092 DFF82493 		ldr	r9, .L382+112
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5517              		.loc 19 620 18 view .LVU1426
 5518 0096 ADF81830 		strh	r3, [sp, #24]	@ movhi
 5519 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5520              	.LVL339:
 5521 009e 0346     		mov	r3, r0	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5522              		.loc 19 620 85 view .LVU1427
 5523 00a0 A948     		ldr	r0, .L382
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5524              		.loc 19 620 18 view .LVU1428
 5525 00a2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5526              		.loc 19 620 85 view .LVU1429
 5527 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5528              	.LVL340:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5529              		.loc 19 620 18 view .LVU1430
 5530 00aa 079A     		ldr	r2, [sp, #28]
 5531 00ac 80EE080A 		vdiv.f32	s0, s0, s16
 5532 00b0 0699     		ldr	r1, [sp, #24]
 5533 00b2 0023     		movs	r3, #0
 5534 00b4 A948     		ldr	r0, .L382+20
 5535 00b6 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5536              	.LVL341:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5537              		.loc 19 621 5 is_stmt 1 view .LVU1431
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5538              		.loc 19 621 18 is_stmt 0 view .LVU1432
 5539 00ba 0B20     		movs	r0, #11
 5540 00bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5541              	.LVL342:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 199


 5542 00c0 0346     		mov	r3, r0	@ movhi
 5543 00c2 0320     		movs	r0, #3
 5544 00c4 ADF82030 		strh	r3, [sp, #32]	@ movhi
 5545 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5546              	.LVL343:
 5547 00cc 0346     		mov	r3, r0	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5548              		.loc 19 621 85 view .LVU1433
 5549 00ce 9E48     		ldr	r0, .L382
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5550              		.loc 19 621 18 view .LVU1434
 5551 00d0 ADF82430 		strh	r3, [sp, #36]	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5552              		.loc 19 621 85 view .LVU1435
 5553 00d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5554              	.LVL344:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5555              		.loc 19 621 18 view .LVU1436
 5556 00d8 099A     		ldr	r2, [sp, #36]
 5557 00da 80EE080A 		vdiv.f32	s0, s0, s16
 5558 00de 0899     		ldr	r1, [sp, #32]
 5559 00e0 0023     		movs	r3, #0
 5560 00e2 9F48     		ldr	r0, .L382+24
 5561 00e4 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5562              	.LVL345:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5563              		.loc 19 622 5 is_stmt 1 view .LVU1437
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5564              		.loc 19 622 20 is_stmt 0 view .LVU1438
 5565 00e8 1820     		movs	r0, #24
 5566 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5567              	.LVL346:
 5568 00ee 0346     		mov	r3, r0	@ movhi
 5569 00f0 0420     		movs	r0, #4
 5570 00f2 ADF82830 		strh	r3, [sp, #40]	@ movhi
 5571 00f6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5572              	.LVL347:
 5573 00fa 0346     		mov	r3, r0	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5574              		.loc 19 622 93 view .LVU1439
 5575 00fc 9248     		ldr	r0, .L382
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5576              		.loc 19 622 20 view .LVU1440
 5577 00fe ADF82C30 		strh	r3, [sp, #44]	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5578              		.loc 19 622 93 view .LVU1441
 5579 0102 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5580              	.LVL348:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5581              		.loc 19 622 20 view .LVU1442
 5582 0106 2346     		mov	r3, r4
 5583 0108 80EE080A 		vdiv.f32	s0, s0, s16
 5584 010c 0B9A     		ldr	r2, [sp, #44]
 5585 010e 0A99     		ldr	r1, [sp, #40]
 5586 0110 9448     		ldr	r0, .L382+28
 5587 0112 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5588              	.LVL349:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 200


 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5589              		.loc 19 625 5 is_stmt 1 view .LVU1443
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5590              		.loc 19 625 22 is_stmt 0 view .LVU1444
 5591 0116 0020     		movs	r0, #0
 5592 0118 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5593              	.LVL350:
 5594 011c 0346     		mov	r3, r0	@ movhi
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5595              		.loc 19 625 55 view .LVU1445
 5596 011e 8A48     		ldr	r0, .L382
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5597              		.loc 19 625 22 view .LVU1446
 5598 0120 ADF83030 		strh	r3, [sp, #48]	@ movhi
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5599              		.loc 19 625 55 view .LVU1447
 5600 0124 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5601              	.LVL351:
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5602              		.loc 19 625 22 view .LVU1448
 5603 0128 3A46     		mov	r2, r7
 5604 012a 0C99     		ldr	r1, [sp, #48]
 5605 012c 80EE090A 		vdiv.f32	s0, s0, s18
 5606 0130 3B46     		mov	r3, r7
 5607 0132 8D48     		ldr	r0, .L382+32
 5608 0134 0094     		str	r4, [sp]
 5609 0136 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 5610              	.LVL352:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5611              		.loc 19 626 5 is_stmt 1 view .LVU1449
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5612              		.loc 19 626 22 is_stmt 0 view .LVU1450
 5613 013a 3846     		mov	r0, r7
 5614 013c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5615              	.LVL353:
 5616 0140 0346     		mov	r3, r0	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5617              		.loc 19 626 55 view .LVU1451
 5618 0142 8148     		ldr	r0, .L382
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5619              		.loc 19 626 22 view .LVU1452
 5620 0144 ADF83430 		strh	r3, [sp, #52]	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5621              		.loc 19 626 55 view .LVU1453
 5622 0148 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5623              	.LVL354:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5624              		.loc 19 626 22 view .LVU1454
 5625 014c 3A46     		mov	r2, r7
 5626 014e 0D99     		ldr	r1, [sp, #52]
 5627 0150 80EE090A 		vdiv.f32	s0, s0, s18
 5628 0154 3B46     		mov	r3, r7
 5629 0156 8548     		ldr	r0, .L382+36
 5630 0158 0094     		str	r4, [sp]
 5631 015a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 5632              	.LVL355:
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 201


 5633              		.loc 19 629 5 is_stmt 1 view .LVU1455
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 5634              		.loc 19 629 14 is_stmt 0 view .LVU1456
 5635 015e 1720     		movs	r0, #23
 5636 0160 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5637              	.LVL356:
 5638 0164 0346     		mov	r3, r0	@ movhi
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 5639              		.loc 19 629 48 view .LVU1457
 5640 0166 7848     		ldr	r0, .L382
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 5641              		.loc 19 629 14 view .LVU1458
 5642 0168 ADF83830 		strh	r3, [sp, #56]	@ movhi
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 5643              		.loc 19 629 48 view .LVU1459
 5644 016c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5645              	.LVL357:
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 5646              		.loc 19 629 14 view .LVU1460
 5647 0170 0E99     		ldr	r1, [sp, #56]
 5648 0172 80EE090A 		vdiv.f32	s0, s0, s18
 5649 0176 7E48     		ldr	r0, .L382+40
 5650 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 5651              	.LVL358:
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 5652              		.loc 19 630 5 is_stmt 1 view .LVU1461
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 5653              		.loc 19 630 17 is_stmt 0 view .LVU1462
 5654 017c 0520     		movs	r0, #5
 5655 017e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5656              	.LVL359:
 5657 0182 0346     		mov	r3, r0	@ movhi
 5658 0184 7048     		ldr	r0, .L382
 5659 0186 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 5660 018a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5661              	.LVL360:
 5662 018e 0F99     		ldr	r1, [sp, #60]
 5663 0190 7848     		ldr	r0, .L382+44
 5664 0192 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 5665              	.LVL361:
 632:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 5666              		.loc 19 632 5 is_stmt 1 view .LVU1463
 632:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 5667              		.loc 19 632 20 is_stmt 0 view .LVU1464
 5668 0196 6C48     		ldr	r0, .L382
 5669 0198 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5670              	.LVL362:
 5671 019c 4046     		mov	r0, r8
 5672 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 5673              	.LVL363:
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5674              		.loc 19 633 5 is_stmt 1 view .LVU1465
 5675              	.LBB1235:
 5676              	.LBI1223:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5677              		.loc 7 54 17 view .LVU1466
 5678              	.LBB1225:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 202


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5679              		.loc 7 54 48 view .LVU1467
 5680              	.LBE1225:
 5681              	.LBE1235:
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 5682              		.loc 19 638 20 is_stmt 0 view .LVU1468
 5683 01a2 6948     		ldr	r0, .L382
 5684              	.LBB1236:
 5685              	.LBB1221:
 5686              		.loc 7 58 57 view .LVU1469
 5687 01a4 C8ED008A 		vstr.32	s17, [r8]
 5688              	.LBE1221:
 5689              	.LBE1236:
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 5690              		.loc 19 644 17 view .LVU1470
 5691 01a8 734C     		ldr	r4, .L382+48
 5692              	.LBB1237:
 5693              	.LBB1226:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5694              		.loc 7 54 63 view .LVU1471
 5695 01aa C8F80850 		str	r5, [r8, #8]	@ float
 5696              	.LVL364:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5697              		.loc 7 54 63 view .LVU1472
 5698              	.LBE1226:
 5699              	.LBE1237:
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 5700              		.loc 19 634 5 is_stmt 1 view .LVU1473
 5701              	.LBB1238:
 5702              	.LBI1231:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5703              		.loc 7 54 17 view .LVU1474
 5704              	.LBB1233:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5705              		.loc 7 54 48 view .LVU1475
 5706              	.LBE1233:
 5707              	.LBE1238:
 5708              	.LBB1239:
 5709              	.LBB1240:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5710              		.loc 7 54 63 is_stmt 0 view .LVU1476
 5711 01ae C8F81450 		str	r5, [r8, #20]	@ float
 5712              	.LBE1240:
 5713              	.LBE1239:
 5714              	.LBB1242:
 5715              	.LBB1234:
 5716 01b2 C8F80C60 		str	r6, [r8, #12]	@ float
 5717              	.LVL365:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5718              		.loc 7 54 63 view .LVU1477
 5719              	.LBE1234:
 5720              	.LBE1242:
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 5721              		.loc 19 635 5 is_stmt 1 view .LVU1478
 5722              	.LBB1243:
 5723              	.LBI1239:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 203


 5724              		.loc 7 54 17 view .LVU1479
 5725              	.LBB1241:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5726              		.loc 7 54 48 view .LVU1480
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5727              		.loc 7 54 48 is_stmt 0 view .LVU1481
 5728              	.LBE1241:
 5729              	.LBE1243:
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 5730              		.loc 19 636 5 is_stmt 1 view .LVU1482
 5731              	.LBB1244:
 5732              	.LBI1219:
 5733              		.loc 7 58 17 view .LVU1483
 5734              	.LBB1222:
 5735              		.loc 7 58 52 view .LVU1484
 5736              		.loc 7 58 52 is_stmt 0 view .LVU1485
 5737              	.LBE1222:
 5738              	.LBE1244:
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 5739              		.loc 19 638 5 is_stmt 1 view .LVU1486
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 5740              		.loc 19 638 20 is_stmt 0 view .LVU1487
 5741 01b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5742              	.LVL366:
 5743 01ba 4846     		mov	r0, r9
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 5744              		.loc 19 650 17 view .LVU1488
 5745 01bc DFF8FC81 		ldr	r8, .L382+116
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 5746              		.loc 19 638 20 view .LVU1489
 5747 01c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 5748              	.LVL367:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5749              		.loc 19 639 5 is_stmt 1 view .LVU1490
 5750              	.LBB1245:
 5751              	.LBI1245:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5752              		.loc 7 54 17 view .LVU1491
 5753              	.LBB1246:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5754              		.loc 7 54 48 view .LVU1492
 5755              	.LBE1246:
 5756              	.LBE1245:
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 5757              		.loc 19 644 17 is_stmt 0 view .LVU1493
 5758 01c4 6048     		ldr	r0, .L382
 5759              	.LBB1248:
 5760              	.LBB1247:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5761              		.loc 7 54 63 view .LVU1494
 5762 01c6 C9F80850 		str	r5, [r9, #8]	@ float
 5763              	.LVL368:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5764              		.loc 7 54 63 view .LVU1495
 5765              	.LBE1247:
 5766              	.LBE1248:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 204


 5767              		.loc 19 640 5 is_stmt 1 view .LVU1496
 5768              	.LBB1249:
 5769              	.LBI1249:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5770              		.loc 7 54 17 view .LVU1497
 5771              	.LBB1250:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5772              		.loc 7 54 48 view .LVU1498
 5773              	.LBE1250:
 5774              	.LBE1249:
 5775              	.LBB1252:
 5776              	.LBB1253:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5777              		.loc 7 54 63 is_stmt 0 view .LVU1499
 5778 01ca C9F81450 		str	r5, [r9, #20]	@ float
 5779              	.LBE1253:
 5780              	.LBE1252:
 5781              	.LBB1255:
 5782              	.LBB1251:
 5783 01ce C9F80C60 		str	r6, [r9, #12]	@ float
 5784              	.LVL369:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5785              		.loc 7 54 63 view .LVU1500
 5786              	.LBE1251:
 5787              	.LBE1255:
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 5788              		.loc 19 641 5 is_stmt 1 view .LVU1501
 5789              	.LBB1256:
 5790              	.LBI1252:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5791              		.loc 7 54 17 view .LVU1502
 5792              	.LBB1254:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5793              		.loc 7 54 48 view .LVU1503
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5794              		.loc 7 54 48 is_stmt 0 view .LVU1504
 5795              	.LBE1254:
 5796              	.LBE1256:
 642:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 5797              		.loc 19 642 5 is_stmt 1 view .LVU1505
 5798              	.LBB1257:
 5799              	.LBI1257:
 5800              		.loc 7 58 17 view .LVU1506
 5801              	.LBB1258:
 5802              		.loc 7 58 52 view .LVU1507
 5803              		.loc 7 58 57 is_stmt 0 view .LVU1508
 5804 01d2 C9ED008A 		vstr.32	s17, [r9]
 5805              	.LVL370:
 5806              		.loc 7 58 57 view .LVU1509
 5807              	.LBE1258:
 5808              	.LBE1257:
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 5809              		.loc 19 644 5 is_stmt 1 view .LVU1510
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 5810              		.loc 19 644 17 is_stmt 0 view .LVU1511
 5811 01d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5812              	.LVL371:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 205


 5813 01da 2046     		mov	r0, r4
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 5814              		.loc 19 669 17 view .LVU1512
 5815 01dc 9FED678A 		vldr.32	s16, .L382+52
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 5816              		.loc 19 644 17 view .LVU1513
 5817 01e0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 5818              	.LVL372:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5819              		.loc 19 645 5 is_stmt 1 view .LVU1514
 5820              	.LBB1259:
 5821              	.LBI1259:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5822              		.loc 7 54 17 view .LVU1515
 5823              	.LBB1260:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5824              		.loc 7 54 48 view .LVU1516
 5825              	.LBE1260:
 5826              	.LBE1259:
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 5827              		.loc 19 650 17 is_stmt 0 view .LVU1517
 5828 01e4 5848     		ldr	r0, .L382
 5829              	.LBB1262:
 5830              	.LBB1263:
 5831              		.loc 7 58 57 view .LVU1518
 5832 01e6 C4ED008A 		vstr.32	s17, [r4]
 5833              	.LBE1263:
 5834              	.LBE1262:
 5835              	.LBB1265:
 5836              	.LBB1261:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5837              		.loc 7 54 63 view .LVU1519
 5838 01ea A660     		str	r6, [r4, #8]	@ float
 5839              	.LVL373:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5840              		.loc 7 54 63 view .LVU1520
 5841              	.LBE1261:
 5842              	.LBE1265:
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 5843              		.loc 19 646 5 is_stmt 1 view .LVU1521
 5844              	.LBB1266:
 5845              	.LBI1266:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5846              		.loc 7 54 17 view .LVU1522
 5847              	.LBB1267:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5848              		.loc 7 54 48 view .LVU1523
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5849              		.loc 7 54 63 is_stmt 0 view .LVU1524
 5850 01ec E660     		str	r6, [r4, #12]	@ float
 5851              	.LVL374:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5852              		.loc 7 54 63 view .LVU1525
 5853              	.LBE1267:
 5854              	.LBE1266:
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 5855              		.loc 19 647 5 is_stmt 1 view .LVU1526
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 206


 5856              	.LBB1268:
 5857              	.LBI1268:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5858              		.loc 7 54 17 view .LVU1527
 5859              	.LBB1269:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5860              		.loc 7 54 48 view .LVU1528
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5861              		.loc 7 54 63 is_stmt 0 view .LVU1529
 5862 01ee 6661     		str	r6, [r4, #20]	@ float
 5863              	.LVL375:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5864              		.loc 7 54 63 view .LVU1530
 5865              	.LBE1269:
 5866              	.LBE1268:
 648:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 5867              		.loc 19 648 5 is_stmt 1 view .LVU1531
 5868              	.LBB1270:
 5869              	.LBI1262:
 5870              		.loc 7 58 17 view .LVU1532
 5871              	.LBB1264:
 5872              		.loc 7 58 52 view .LVU1533
 5873              		.loc 7 58 52 is_stmt 0 view .LVU1534
 5874              	.LBE1264:
 5875              	.LBE1270:
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 5876              		.loc 19 650 5 is_stmt 1 view .LVU1535
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 5877              		.loc 19 650 17 is_stmt 0 view .LVU1536
 5878 01f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5879              	.LVL376:
 5880 01f4 4046     		mov	r0, r8
 5881              	.LBB1271:
 5882              	.LBB1272:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 5883              		.loc 8 44 20 view .LVU1537
 5884 01f6 624C     		ldr	r4, .L382+56
 5885              	.LBE1272:
 5886              	.LBE1271:
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 5887              		.loc 19 650 17 view .LVU1538
 5888 01f8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 5889              	.LVL377:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5890              		.loc 19 651 5 is_stmt 1 view .LVU1539
 5891              	.LBB1277:
 5892              	.LBI1277:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5893              		.loc 7 54 17 view .LVU1540
 5894              	.LBB1278:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5895              		.loc 7 54 48 view .LVU1541
 5896              	.LBE1278:
 5897              	.LBE1277:
 5898              	.LBB1280:
 5899              	.LBB1281:
 5900              	.LBB1282:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 207


  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 5901              		.loc 10 45 16 is_stmt 0 view .LVU1542
 5902 01fc 6149     		ldr	r1, .L382+60
 5903              	.LBE1282:
 5904              	.LBE1281:
 5905              	.LBE1280:
 5906              	.LBB1287:
 5907              	.LBB1288:
 5908              	.LBB1289:
 5909 01fe 624A     		ldr	r2, .L382+64
 5910              	.LBE1289:
 5911              	.LBE1288:
 5912              	.LBE1287:
 5913              	.LBB1294:
 5914              	.LBB1295:
 5915              	.LBB1296:
 5916 0200 624B     		ldr	r3, .L382+68
 5917              	.LBE1296:
 5918              	.LBE1295:
 5919              	.LBE1294:
 5920              	.LBB1301:
 5921              	.LBB1285:
 5922              	.LBB1283:
 5923 0202 0D60     		str	r5, [r1]	@ float
 5924              	.LBE1283:
 5925              	.LBE1285:
 5926              	.LBE1301:
 5927              	.LBB1302:
 5928              	.LBB1292:
 5929              	.LBB1290:
 5930 0204 1560     		str	r5, [r2]	@ float
 5931              	.LBE1290:
 5932              	.LBE1292:
 5933              	.LBE1302:
 5934              	.LBB1303:
 5935              	.LBB1299:
 5936              	.LBB1297:
 5937 0206 1D60     		str	r5, [r3]	@ float
 5938              	.LBE1297:
 5939              	.LBE1299:
 5940              	.LBE1303:
 5941              	.LBB1304:
 5942              	.LBB1229:
 5943              		.loc 10 64 50 view .LVU1543
 5944 0208 0F71     		strb	r7, [r1, #4]
 5945              	.LBE1229:
 5946              	.LBE1304:
 5947              	.LBB1305:
 5948              	.LBB1306:
 5949 020a 1771     		strb	r7, [r2, #4]
 5950              	.LBE1306:
 5951              	.LBE1305:
 5952              	.LBB1308:
 5953              	.LBB1309:
 5954 020c 1F71     		strb	r7, [r3, #4]
 5955              	.LBE1309:
 5956              	.LBE1308:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 208


 665:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 5957              		.loc 19 665 15 view .LVU1544
 5958 020e 4E48     		ldr	r0, .L382
 5959              	.LBB1311:
 5960              	.LBB1312:
 5961              		.loc 7 58 57 view .LVU1545
 5962 0210 C8ED008A 		vstr.32	s17, [r8]
 5963              	.LBE1312:
 5964              	.LBE1311:
 5965              	.LBB1314:
 5966              	.LBB1279:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5967              		.loc 7 54 63 view .LVU1546
 5968 0214 C8F80860 		str	r6, [r8, #8]	@ float
 5969              	.LVL378:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5970              		.loc 7 54 63 view .LVU1547
 5971              	.LBE1279:
 5972              	.LBE1314:
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 5973              		.loc 19 652 5 is_stmt 1 view .LVU1548
 5974              	.LBB1315:
 5975              	.LBI1315:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5976              		.loc 7 54 17 view .LVU1549
 5977              	.LBB1316:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5978              		.loc 7 54 48 view .LVU1550
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5979              		.loc 7 54 63 is_stmt 0 view .LVU1551
 5980 0218 C8F80C60 		str	r6, [r8, #12]	@ float
 5981              	.LVL379:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5982              		.loc 7 54 63 view .LVU1552
 5983              	.LBE1316:
 5984              	.LBE1315:
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 5985              		.loc 19 653 5 is_stmt 1 view .LVU1553
 5986              	.LBB1317:
 5987              	.LBI1317:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5988              		.loc 7 54 17 view .LVU1554
 5989              	.LBB1318:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5990              		.loc 7 54 48 view .LVU1555
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5991              		.loc 7 54 63 is_stmt 0 view .LVU1556
 5992 021c C8F81460 		str	r6, [r8, #20]	@ float
 5993              	.LVL380:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5994              		.loc 7 54 63 view .LVU1557
 5995              	.LBE1318:
 5996              	.LBE1317:
 654:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 5997              		.loc 19 654 5 is_stmt 1 view .LVU1558
 5998              	.LBB1319:
 5999              	.LBI1311:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 209


 6000              		.loc 7 58 17 view .LVU1559
 6001              	.LBB1313:
 6002              		.loc 7 58 52 view .LVU1560
 6003              		.loc 7 58 52 is_stmt 0 view .LVU1561
 6004              	.LBE1313:
 6005              	.LBE1319:
 657:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 6006              		.loc 19 657 5 is_stmt 1 view .LVU1562
 6007              	.LBB1320:
 6008              	.LBI1280:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6009              		.loc 10 51 17 view .LVU1563
 6010              	.LBE1320:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6011              		.loc 10 51 26 view .LVU1564
 6012              	.LBB1321:
 6013              	.LBB1286:
 6014              	.LBI1281:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6015              		.loc 10 43 17 view .LVU1565
 6016              	.LBB1284:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6017              		.loc 10 45 9 view .LVU1566
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6018              		.loc 10 46 9 view .LVU1567
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6019              		.loc 10 46 9 is_stmt 0 view .LVU1568
 6020              	.LBE1284:
 6021              	.LBE1286:
 6022              	.LBE1321:
 658:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 6023              		.loc 19 658 5 is_stmt 1 view .LVU1569
 6024              	.LBB1322:
 6025              	.LBI1227:
 6026              		.loc 10 64 17 view .LVU1570
 6027              	.LBB1230:
 6028              		.loc 10 64 43 view .LVU1571
 6029              		.loc 10 64 43 is_stmt 0 view .LVU1572
 6030              	.LBE1230:
 6031              	.LBE1322:
 659:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 6032              		.loc 19 659 5 is_stmt 1 view .LVU1573
 6033              	.LBB1323:
 6034              	.LBI1287:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6035              		.loc 10 51 17 view .LVU1574
 6036              	.LBE1323:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6037              		.loc 10 51 26 view .LVU1575
 6038              	.LBB1324:
 6039              	.LBB1293:
 6040              	.LBI1288:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6041              		.loc 10 43 17 view .LVU1576
 6042              	.LBB1291:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6043              		.loc 10 45 9 view .LVU1577
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 210


  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6044              		.loc 10 46 9 view .LVU1578
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6045              		.loc 10 46 9 is_stmt 0 view .LVU1579
 6046              	.LBE1291:
 6047              	.LBE1293:
 6048              	.LBE1324:
 660:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 6049              		.loc 19 660 5 is_stmt 1 view .LVU1580
 6050              	.LBB1325:
 6051              	.LBI1305:
 6052              		.loc 10 64 17 view .LVU1581
 6053              	.LBB1307:
 6054              		.loc 10 64 43 view .LVU1582
 6055              		.loc 10 64 43 is_stmt 0 view .LVU1583
 6056              	.LBE1307:
 6057              	.LBE1325:
 662:Veno-Echo.cpp ****     WidthXfade.Init();
 6058              		.loc 19 662 5 is_stmt 1 view .LVU1584
 6059              	.LBB1326:
 6060              	.LBI1294:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6061              		.loc 10 51 17 view .LVU1585
 6062              	.LBE1326:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6063              		.loc 10 51 26 view .LVU1586
 6064              	.LBB1327:
 6065              	.LBB1300:
 6066              	.LBI1295:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6067              		.loc 10 43 17 view .LVU1587
 6068              	.LBB1298:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6069              		.loc 10 45 9 view .LVU1588
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6070              		.loc 10 46 9 view .LVU1589
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6071              		.loc 10 46 9 is_stmt 0 view .LVU1590
 6072              	.LBE1298:
 6073              	.LBE1300:
 6074              	.LBE1327:
 663:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 6075              		.loc 19 663 5 is_stmt 1 view .LVU1591
 6076              	.LBB1328:
 6077              	.LBI1308:
 6078              		.loc 10 64 17 view .LVU1592
 6079              	.LBB1310:
 6080              		.loc 10 64 43 view .LVU1593
 6081              		.loc 10 64 43 is_stmt 0 view .LVU1594
 6082              	.LBE1310:
 6083              	.LBE1328:
 665:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 6084              		.loc 19 665 5 is_stmt 1 view .LVU1595
 665:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 6085              		.loc 19 665 15 is_stmt 0 view .LVU1596
 6086 0220 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6087              	.LVL381:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 211


 6088 0224 FFF7FEFF 		bl	_Z10InitDelaysf
 6089              	.LVL382:
 668:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 6090              		.loc 19 668 5 is_stmt 1 view .LVU1597
 668:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 6091              		.loc 19 668 15 is_stmt 0 view .LVU1598
 6092 0228 4748     		ldr	r0, .L382
 6093 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6094              	.LVL383:
 6095 022e 5848     		ldr	r0, .L382+72
 6096 0230 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6097              	.LVL384:
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6098              		.loc 19 669 5 is_stmt 1 view .LVU1599
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6099              		.loc 19 669 17 is_stmt 0 view .LVU1600
 6100 0234 B0EE480A 		vmov.f32	s0, s16
 6101 0238 5548     		ldr	r0, .L382+72
 6102 023a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6103              	.LVL385:
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6104              		.loc 19 670 5 is_stmt 1 view .LVU1601
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6105              		.loc 19 670 18 is_stmt 0 view .LVU1602
 6106 023e 9FED550A 		vldr.32	s0, .L382+76
 6107 0242 5348     		ldr	r0, .L382+72
 6108 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6109              	.LVL386:
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6110              		.loc 19 671 5 is_stmt 1 view .LVU1603
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6111              		.loc 19 671 19 is_stmt 0 view .LVU1604
 6112 0248 9FED5D0A 		vldr.32	s0, .L382+120
 6113 024c 5048     		ldr	r0, .L382+72
 6114 024e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6115              	.LVL387:
 673:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 6116              		.loc 19 673 5 is_stmt 1 view .LVU1605
 673:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 6117              		.loc 19 673 15 is_stmt 0 view .LVU1606
 6118 0252 3D48     		ldr	r0, .L382
 6119 0254 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6120              	.LVL388:
 6121 0258 4F48     		ldr	r0, .L382+80
 6122 025a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6123              	.LVL389:
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6124              		.loc 19 674 5 is_stmt 1 view .LVU1607
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6125              		.loc 19 674 17 is_stmt 0 view .LVU1608
 6126 025e B0EE480A 		vmov.f32	s0, s16
 6127 0262 4D48     		ldr	r0, .L382+80
 6128 0264 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6129              	.LVL390:
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6130              		.loc 19 675 5 is_stmt 1 view .LVU1609
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 212


 6131              		.loc 19 675 18 is_stmt 0 view .LVU1610
 6132 0268 9FED4A0A 		vldr.32	s0, .L382+76
 6133 026c 4A48     		ldr	r0, .L382+80
 6134 026e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6135              	.LVL391:
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6136              		.loc 19 676 5 is_stmt 1 view .LVU1611
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6137              		.loc 19 676 19 is_stmt 0 view .LVU1612
 6138 0272 9FED530A 		vldr.32	s0, .L382+120
 6139 0276 4848     		ldr	r0, .L382+80
 6140 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6141              	.LVL392:
 679:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 6142              		.loc 19 679 5 is_stmt 1 view .LVU1613
 679:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 6143              		.loc 19 679 15 is_stmt 0 view .LVU1614
 6144 027c 3248     		ldr	r0, .L382
 6145 027e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6146              	.LVL393:
 6147 0282 4648     		ldr	r0, .L382+84
 6148 0284 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6149              	.LVL394:
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6150              		.loc 19 680 5 is_stmt 1 view .LVU1615
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6151              		.loc 19 680 17 is_stmt 0 view .LVU1616
 6152 0288 B0EE480A 		vmov.f32	s0, s16
 6153 028c 4348     		ldr	r0, .L382+84
 6154 028e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6155              	.LVL395:
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6156              		.loc 19 681 5 is_stmt 1 view .LVU1617
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6157              		.loc 19 681 18 is_stmt 0 view .LVU1618
 6158 0292 9FED430A 		vldr.32	s0, .L382+88
 6159 0296 4148     		ldr	r0, .L382+84
 6160 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6161              	.LVL396:
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6162              		.loc 19 682 5 is_stmt 1 view .LVU1619
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6163              		.loc 19 682 19 is_stmt 0 view .LVU1620
 6164 029c 9FED480A 		vldr.32	s0, .L382+120
 6165 02a0 3E48     		ldr	r0, .L382+84
 6166 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6167              	.LVL397:
 684:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 6168              		.loc 19 684 5 is_stmt 1 view .LVU1621
 684:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 6169              		.loc 19 684 15 is_stmt 0 view .LVU1622
 6170 02a6 2848     		ldr	r0, .L382
 6171 02a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6172              	.LVL398:
 6173 02ac 3D48     		ldr	r0, .L382+92
 6174 02ae FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6175              	.LVL399:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 213


 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6176              		.loc 19 685 5 is_stmt 1 view .LVU1623
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6177              		.loc 19 685 17 is_stmt 0 view .LVU1624
 6178 02b2 B0EE480A 		vmov.f32	s0, s16
 6179 02b6 3B48     		ldr	r0, .L382+92
 6180 02b8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6181              	.LVL400:
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6182              		.loc 19 686 5 is_stmt 1 view .LVU1625
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6183              		.loc 19 686 18 is_stmt 0 view .LVU1626
 6184 02bc 9FED380A 		vldr.32	s0, .L382+88
 6185 02c0 3848     		ldr	r0, .L382+92
 6186 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6187              	.LVL401:
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6188              		.loc 19 687 5 is_stmt 1 view .LVU1627
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6189              		.loc 19 687 19 is_stmt 0 view .LVU1628
 6190 02c6 9FED3E0A 		vldr.32	s0, .L382+120
 6191 02ca 3648     		ldr	r0, .L382+92
 6192 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6193              	.LVL402:
 690:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 6194              		.loc 19 690 5 is_stmt 1 view .LVU1629
 690:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 6195              		.loc 19 690 20 is_stmt 0 view .LVU1630
 6196 02d0 1D48     		ldr	r0, .L382
 6197 02d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6198              	.LVL403:
 6199 02d6 3448     		ldr	r0, .L382+96
 6200 02d8 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6201              	.LVL404:
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6202              		.loc 19 691 5 is_stmt 1 view .LVU1631
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6203              		.loc 19 691 22 is_stmt 0 view .LVU1632
 6204 02dc B0EE480A 		vmov.f32	s0, s16
 6205 02e0 3148     		ldr	r0, .L382+96
 6206 02e2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6207              	.LVL405:
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6208              		.loc 19 692 5 is_stmt 1 view .LVU1633
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6209              		.loc 19 692 23 is_stmt 0 view .LVU1634
 6210 02e6 9FED2B0A 		vldr.32	s0, .L382+76
 6211 02ea 2F48     		ldr	r0, .L382+96
 6212 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6213              	.LVL406:
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6214              		.loc 19 693 5 is_stmt 1 view .LVU1635
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6215              		.loc 19 693 24 is_stmt 0 view .LVU1636
 6216 02f0 9FED330A 		vldr.32	s0, .L382+120
 6217 02f4 2C48     		ldr	r0, .L382+96
 6218 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 214


 6219              	.LVL407:
 695:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 6220              		.loc 19 695 5 is_stmt 1 view .LVU1637
 695:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 6221              		.loc 19 695 20 is_stmt 0 view .LVU1638
 6222 02fa 1348     		ldr	r0, .L382
 6223 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6224              	.LVL408:
 6225 0300 2A48     		ldr	r0, .L382+100
 6226 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6227              	.LVL409:
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6228              		.loc 19 696 5 is_stmt 1 view .LVU1639
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6229              		.loc 19 696 22 is_stmt 0 view .LVU1640
 6230 0306 B0EE480A 		vmov.f32	s0, s16
 6231 030a 2848     		ldr	r0, .L382+100
 6232 030c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6233              	.LVL410:
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6234              		.loc 19 697 5 is_stmt 1 view .LVU1641
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6235              		.loc 19 697 23 is_stmt 0 view .LVU1642
 6236 0310 9FED200A 		vldr.32	s0, .L382+76
 6237 0314 2548     		ldr	r0, .L382+100
 6238 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6239              	.LVL411:
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6240              		.loc 19 698 5 is_stmt 1 view .LVU1643
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6241              		.loc 19 698 24 is_stmt 0 view .LVU1644
 6242 031a 9FED290A 		vldr.32	s0, .L382+120
 6243 031e 2348     		ldr	r0, .L382+100
 6244 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6245              	.LVL412:
 701:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 6246              		.loc 19 701 5 is_stmt 1 view .LVU1645
 701:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 6247              		.loc 19 701 20 is_stmt 0 view .LVU1646
 6248 0324 0848     		ldr	r0, .L382
 6249 0326 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6250              	.LVL413:
 6251 032a 2148     		ldr	r0, .L382+104
 6252 032c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6253              	.LVL414:
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6254              		.loc 19 702 5 is_stmt 1 view .LVU1647
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6255              		.loc 19 702 22 is_stmt 0 view .LVU1648
 6256 0330 B0EE480A 		vmov.f32	s0, s16
 6257 0334 1E48     		ldr	r0, .L382+104
 6258 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6259              	.LVL415:
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 6260              		.loc 19 703 5 is_stmt 1 view .LVU1649
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 6261              		.loc 19 703 23 is_stmt 0 view .LVU1650
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 215


 6262 033a 9FED190A 		vldr.32	s0, .L382+88
 6263 033e 1C48     		ldr	r0, .L382+104
 6264 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6265              	.LVL416:
 6266 0344 3EE0     		b	.L383
 6267              	.L384:
 6268 0346 00BF     		.align	2
 6269              	.L382:
 6270 0348 00000000 		.word	.LANCHOR4
 6271 034c 00004042 		.word	1111490560
 6272 0350 00000000 		.word	.LANCHOR61
 6273 0354 0AD7233C 		.word	1008981770
 6274 0358 00000000 		.word	.LANCHOR62
 6275 035c 00000000 		.word	.LANCHOR63
 6276 0360 00000000 		.word	.LANCHOR64
 6277 0364 00000000 		.word	.LANCHOR65
 6278 0368 00000000 		.word	.LANCHOR66
 6279 036c 00000000 		.word	.LANCHOR67
 6280 0370 00000000 		.word	.LANCHOR68
 6281 0374 00000000 		.word	.LANCHOR47
 6282 0378 00000000 		.word	.LANCHOR71
 6283 037c 00000000 		.word	0
 6284 0380 00000000 		.word	.LANCHOR40
 6285 0384 00000000 		.word	.LANCHOR73
 6286 0388 00000000 		.word	.LANCHOR74
 6287 038c 00000000 		.word	.LANCHOR35
 6288 0390 00000000 		.word	.LANCHOR21
 6289 0394 00803B46 		.word	1178304512
 6290 0398 00000000 		.word	.LANCHOR22
 6291 039c 00000000 		.word	.LANCHOR12
 6292 03a0 00004843 		.word	1128792064
 6293 03a4 00000000 		.word	.LANCHOR13
 6294 03a8 00000000 		.word	.LANCHOR23
 6295 03ac 00000000 		.word	.LANCHOR24
 6296 03b0 00000000 		.word	.LANCHOR14
 6297 03b4 00000000 		.word	.LANCHOR69
 6298 03b8 00000000 		.word	.LANCHOR70
 6299 03bc 00000000 		.word	.LANCHOR72
 6300 03c0 3333333F 		.word	1060320051
 6301              	.L383:
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 6302              		.loc 19 704 5 is_stmt 1 view .LVU1651
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 6303              		.loc 19 704 24 is_stmt 0 view .LVU1652
 6304 03c4 1FED020A 		vldr.32	s0, .L382+120
 6305 03c8 7B48     		ldr	r0, .L385
 6306 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6307              	.LVL417:
 706:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 6308              		.loc 19 706 5 is_stmt 1 view .LVU1653
 706:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 6309              		.loc 19 706 20 is_stmt 0 view .LVU1654
 6310 03ce 7B48     		ldr	r0, .L385+4
 6311 03d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6312              	.LVL418:
 6313 03d4 7A48     		ldr	r0, .L385+8
 6314 03d6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 216


 6315              	.LVL419:
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 6316              		.loc 19 707 5 is_stmt 1 view .LVU1655
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 6317              		.loc 19 707 22 is_stmt 0 view .LVU1656
 6318 03da B0EE480A 		vmov.f32	s0, s16
 6319 03de 7848     		ldr	r0, .L385+8
 6320 03e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6321              	.LVL420:
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 6322              		.loc 19 708 5 is_stmt 1 view .LVU1657
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 6323              		.loc 19 708 23 is_stmt 0 view .LVU1658
 6324 03e4 9FED770A 		vldr.32	s0, .L385+12
 6325 03e8 7548     		ldr	r0, .L385+8
 6326 03ea FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6327              	.LVL421:
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 6328              		.loc 19 709 5 is_stmt 1 view .LVU1659
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 6329              		.loc 19 709 24 is_stmt 0 view .LVU1660
 6330 03ee 9FED760A 		vldr.32	s0, .L385+16
 6331 03f2 7348     		ldr	r0, .L385+8
 6332 03f4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6333              	.LVL422:
 711:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 6334              		.loc 19 711 5 is_stmt 1 view .LVU1661
 711:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 6335              		.loc 19 711 21 is_stmt 0 view .LVU1662
 6336 03f8 7048     		ldr	r0, .L385+4
 6337 03fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6338              	.LVL423:
 6339 03fe 7348     		ldr	r0, .L385+20
 6340 0400 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 6341              	.LVL424:
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 6342              		.loc 19 712 5 is_stmt 1 view .LVU1663
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 6343              		.loc 19 712 21 is_stmt 0 view .LVU1664
 6344 0404 6D48     		ldr	r0, .L385+4
 6345 0406 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6346              	.LVL425:
 6347 040a 7148     		ldr	r0, .L385+24
 6348 040c FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 6349              	.LVL426:
 715:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 6350              		.loc 19 715 5 is_stmt 1 view .LVU1665
 715:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 6351              		.loc 19 715 13 is_stmt 0 view .LVU1666
 6352 0410 6A48     		ldr	r0, .L385+4
 6353 0412 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6354              	.LVL427:
 6355 0416 F0EE407A 		vmov.f32	s15, s0
 6356              	.LVL428:
 6357              	.LBB1329:
 6358              	.LBI1271:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 217


 6359              		.loc 8 42 10 is_stmt 1 view .LVU1667
 6360              	.LBB1273:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6361              		.loc 8 44 9 view .LVU1668
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 6362              		.loc 8 46 20 is_stmt 0 view .LVU1669
 6363 041a 9FED6E7A 		vldr.32	s14, .L385+28
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6364              		.loc 8 49 34 view .LVU1670
 6365 041e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 6366              		.loc 8 47 20 view .LVU1671
 6367 0420 6560     		str	r5, [r4, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 6368              		.loc 8 45 27 view .LVU1672
 6369 0422 C8EEA76A 		vdiv.f32	s13, s17, s15
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 6370              		.loc 8 46 20 view .LVU1673
 6371 0426 84ED027A 		vstr.32	s14, [r4, #8]
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6372              		.loc 8 44 20 view .LVU1674
 6373 042a C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 6374              		.loc 8 45 9 is_stmt 1 view .LVU1675
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 6375              		.loc 8 48 20 is_stmt 0 view .LVU1676
 6376 042e 84ED058A 		vstr.32	s16, [r4, #20]
 6377              	.LBE1273:
 6378              	.LBE1329:
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 6379              		.loc 19 737 17 view .LVU1677
 6380 0432 694D     		ldr	r5, .L385+32
 6381              	.LBB1330:
 6382              	.LBB1274:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6383              		.loc 8 49 34 view .LVU1678
 6384 0434 B0EE470A 		vmov.f32	s0, s14
 6385              	.LVL429:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 6386              		.loc 8 45 20 view .LVU1679
 6387 0438 C4ED046A 		vstr.32	s13, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 6388              		.loc 8 46 9 is_stmt 1 view .LVU1680
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 6389              		.loc 8 47 9 view .LVU1681
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 6390              		.loc 8 48 9 view .LVU1682
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6391              		.loc 8 49 9 view .LVU1683
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6392              		.loc 8 49 34 is_stmt 0 view .LVU1684
 6393 043c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6394              	.LVL430:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6395              		.loc 8 52 20 view .LVU1685
 6396 0440 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 218


 6397              		.loc 8 49 34 view .LVU1686
 6398 0444 F0EE407A 		vmov.f32	s15, s0
 6399              	.LBE1274:
 6400              	.LBE1330:
 6401              	.LBB1331:
 6402              	.LBB1332:
 6403              		.loc 8 61 34 view .LVU1687
 6404 0448 2046     		mov	r0, r4
 6405              	.LBE1332:
 6406              	.LBE1331:
 6407              	.LBB1336:
 6408              	.LBB1337:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 6409              		.loc 8 72 19 view .LVU1688
 6410 044a 2770     		strb	r7, [r4]
 6411              	.LBE1337:
 6412              	.LBE1336:
 6413              	.LBB1339:
 6414              	.LBB1275:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6415              		.loc 8 52 20 view .LVU1689
 6416 044c A384     		strh	r3, [r4, #36]	@ movhi
 6417              	.LBE1275:
 6418              	.LBE1339:
 6419              	.LBB1340:
 6420              	.LBB1333:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6421              		.loc 8 61 34 view .LVU1690
 6422 044e B0EE680A 		vmov.f32	s0, s17
 6423              	.LBE1333:
 6424              	.LBE1340:
 6425              	.LBB1341:
 6426              	.LBB1276:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6427              		.loc 8 49 20 view .LVU1691
 6428 0452 C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 6429              		.loc 8 50 9 is_stmt 1 view .LVU1692
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 6430              		.loc 8 51 9 view .LVU1693
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6431              		.loc 8 52 9 view .LVU1694
 6432              	.LVL431:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6433              		.loc 8 52 9 is_stmt 0 view .LVU1695
 6434              	.LBE1276:
 6435              	.LBE1341:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 219


 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 6436              		.loc 19 716 5 is_stmt 1 view .LVU1696
 6437              	.LBB1342:
 6438              	.LBI1336:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6439              		.loc 8 70 17 view .LVU1697
 6440              	.LBB1338:
 6441              		.loc 8 72 9 view .LVU1698
 6442              		.loc 8 72 9 is_stmt 0 view .LVU1699
 6443              	.LBE1338:
 6444              	.LBE1342:
 717:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 6445              		.loc 19 717 5 is_stmt 1 view .LVU1700
 6446              	.LBB1343:
 6447              	.LBI1331:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6448              		.loc 8 58 17 view .LVU1701
 6449              	.LBB1334:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6450              		.loc 8 60 9 view .LVU1702
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6451              		.loc 8 61 9 view .LVU1703
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6452              		.loc 8 60 20 is_stmt 0 view .LVU1704
 6453 0456 C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6454              		.loc 8 61 34 view .LVU1705
 6455 045a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6456              	.LVL432:
 6457 045e F0EE407A 		vmov.f32	s15, s0
 6458              	.LBE1334:
 6459              	.LBE1343:
 725:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 6460              		.loc 19 725 19 view .LVU1706
 6461 0462 41F27072 		movw	r2, #6000
 6462 0466 5021     		movs	r1, #80
 6463 0468 B7EE040A 		vmov.f32	s0, #1.25e+0
 6464 046c 5B48     		ldr	r0, .L385+36
 6465              	.LBB1344:
 6466              	.LBB1345:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6467              		.loc 8 67 46 view .LVU1707
 6468 046e C4ED018A 		vstr.32	s17, [r4, #4]
 6469              	.LBE1345:
 6470              	.LBE1344:
 6471              	.LBB1347:
 6472              	.LBB1335:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6473              		.loc 8 61 20 view .LVU1708
 6474 0472 C4ED067A 		vstr.32	s15, [r4, #24]
 6475              	.LVL433:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6476              		.loc 8 61 20 view .LVU1709
 6477              	.LBE1335:
 6478              	.LBE1347:
 718:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 6479              		.loc 19 718 5 is_stmt 1 view .LVU1710
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 220


 6480              	.LBB1348:
 6481              	.LBI1344:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6482              		.loc 8 67 17 view .LVU1711
 6483              	.LBB1346:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6484              		.loc 8 67 41 view .LVU1712
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6485              		.loc 8 67 41 is_stmt 0 view .LVU1713
 6486              	.LBE1346:
 6487              	.LBE1348:
 725:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 6488              		.loc 19 725 5 is_stmt 1 view .LVU1714
 725:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 6489              		.loc 19 725 19 is_stmt 0 view .LVU1715
 6490 0476 FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 6491              	.LVL434:
 729:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 6492              		.loc 19 729 5 is_stmt 1 view .LVU1716
 729:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 6493              		.loc 19 729 23 is_stmt 0 view .LVU1717
 6494 047a 1820     		movs	r0, #24
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 6495              		.loc 19 737 17 view .LVU1718
 6496 047c 584C     		ldr	r4, .L385+40
 729:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 6497              		.loc 19 729 23 view .LVU1719
 6498 047e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6499              	.LVL435:
 6500 0482 0346     		mov	r3, r0	@ movhi
 6501 0484 4D48     		ldr	r0, .L385+4
 6502 0486 ADF84030 		strh	r3, [sp, #64]	@ movhi
 6503 048a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6504              	.LVL436:
 6505 048e 1099     		ldr	r1, [sp, #64]
 6506 0490 5448     		ldr	r0, .L385+44
 6507 0492 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 6508              	.LVL437:
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6509              		.loc 19 730 5 is_stmt 1 view .LVU1720
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6510              		.loc 19 730 27 is_stmt 0 view .LVU1721
 6511 0496 5148     		ldr	r0, .L385+36
 6512 0498 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6513              	.LVL438:
 6514 049c 5148     		ldr	r0, .L385+44
 6515 049e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6516              	.LVL439:
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 6517              		.loc 19 731 5 is_stmt 1 view .LVU1722
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 6518              		.loc 19 731 29 is_stmt 0 view .LVU1723
 6519 04a2 5048     		ldr	r0, .L385+44
 6520 04a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 6521              	.LVL440:
 736:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 6522              		.loc 19 736 5 is_stmt 1 view .LVU1724
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 221


 736:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 6523              		.loc 19 736 18 is_stmt 0 view .LVU1725
 6524 04a8 4B48     		ldr	r0, .L385+32
 6525 04aa FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 6526              	.LVL441:
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 6527              		.loc 19 737 5 is_stmt 1 view .LVU1726
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 6528              		.loc 19 737 17 is_stmt 0 view .LVU1727
 6529 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6530 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6531 04b2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 6532 04b6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 745:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 6533              		.loc 19 745 5 is_stmt 1 view .LVU1728
 747:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 6534              		.loc 19 747 5 view .LVU1729
 747:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 6535              		.loc 19 747 28 is_stmt 0 view .LVU1730
 6536 04ba 0F20     		movs	r0, #15
 6537 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6538              	.LVL442:
 6539 04c0 0346     		mov	r3, r0	@ movhi
 6540 04c2 1CA8     		add	r0, sp, #112
 6541 04c4 ADF84430 		strh	r3, [sp, #68]	@ movhi
 6542 04c8 1199     		ldr	r1, [sp, #68]
 6543 04ca FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6544              	.LVL443:
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 6545              		.loc 19 748 5 is_stmt 1 view .LVU1731
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 6546              		.loc 19 748 28 is_stmt 0 view .LVU1732
 6547 04ce 1020     		movs	r0, #16
 6548 04d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6549              	.LVL444:
 6550 04d4 0346     		mov	r3, r0	@ movhi
 6551 04d6 0DF18100 		add	r0, sp, #129
 6552 04da ADF84830 		strh	r3, [sp, #72]	@ movhi
 6553 04de 1299     		ldr	r1, [sp, #72]
 6554 04e0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6555              	.LVL445:
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 6556              		.loc 19 749 5 is_stmt 1 view .LVU1733
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 6557              		.loc 19 749 28 is_stmt 0 view .LVU1734
 6558 04e4 1120     		movs	r0, #17
 6559 04e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6560              	.LVL446:
 6561 04ea 0346     		mov	r3, r0	@ movhi
 6562 04ec 0DF19200 		add	r0, sp, #146
 6563 04f0 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 6564 04f4 1399     		ldr	r1, [sp, #76]
 6565 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6566              	.LVL447:
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 6567              		.loc 19 750 5 is_stmt 1 view .LVU1735
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 222


 6568              		.loc 19 750 28 is_stmt 0 view .LVU1736
 6569 04fa 1220     		movs	r0, #18
 6570 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6571              	.LVL448:
 6572 0500 0346     		mov	r3, r0	@ movhi
 6573 0502 0DF1A300 		add	r0, sp, #163
 6574 0506 ADF85030 		strh	r3, [sp, #80]	@ movhi
 6575 050a 1499     		ldr	r1, [sp, #80]
 6576 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6577              	.LVL449:
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 6578              		.loc 19 751 5 is_stmt 1 view .LVU1737
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 6579              		.loc 19 751 28 is_stmt 0 view .LVU1738
 6580 0510 1320     		movs	r0, #19
 6581 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6582              	.LVL450:
 6583 0516 0346     		mov	r3, r0	@ movhi
 6584 0518 2DA8     		add	r0, sp, #180
 6585 051a ADF85430 		strh	r3, [sp, #84]	@ movhi
 6586 051e 1599     		ldr	r1, [sp, #84]
 6587 0520 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6588              	.LVL451:
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 6589              		.loc 19 752 5 is_stmt 1 view .LVU1739
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 6590              		.loc 19 752 28 is_stmt 0 view .LVU1740
 6591 0524 1420     		movs	r0, #20
 6592 0526 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6593              	.LVL452:
 6594 052a 0346     		mov	r3, r0	@ movhi
 6595 052c 0DF1C500 		add	r0, sp, #197
 6596 0530 ADF85830 		strh	r3, [sp, #88]	@ movhi
 6597 0534 1699     		ldr	r1, [sp, #88]
 6598 0536 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6599              	.LVL453:
 754:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 6600              		.loc 19 754 5 is_stmt 1 view .LVU1741
 754:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 6601              		.loc 19 754 28 is_stmt 0 view .LVU1742
 6602 053a 1620     		movs	r0, #22
 6603 053c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6604              	.LVL454:
 6605 0540 0346     		mov	r3, r0	@ movhi
 6606 0542 0DF1D600 		add	r0, sp, #214
 6607 0546 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 6608 054a 1799     		ldr	r1, [sp, #92]
 6609 054c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6610              	.LVL455:
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 6611              		.loc 19 755 5 is_stmt 1 view .LVU1743
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 6612              		.loc 19 755 25 is_stmt 0 view .LVU1744
 6613 0550 1920     		movs	r0, #25
 6614 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6615              	.LVL456:
 6616 0556 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 223


 6617 0558 0E20     		movs	r0, #14
 6618 055a ADF86030 		strh	r3, [sp, #96]	@ movhi
 6619 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6620              	.LVL457:
 6621 0562 0346     		mov	r3, r0	@ movhi
 6622 0564 0D20     		movs	r0, #13
 6623 0566 ADF86430 		strh	r3, [sp, #100]	@ movhi
 6624 056a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6625              	.LVL458:
 6626 056e 0346     		mov	r3, r0	@ movhi
 6627 0570 0C20     		movs	r0, #12
 6628 0572 ADF86830 		strh	r3, [sp, #104]	@ movhi
 6629 0576 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6630              	.LVL459:
 6631 057a BDF86810 		ldrh	r1, [sp, #104]
 6632 057e 0822     		movs	r2, #8
 6633 0580 199B     		ldr	r3, [sp, #100]
 6634 0582 ADF80400 		strh	r0, [sp, #4]	@ movhi
 6635 0586 0DF1E700 		add	r0, sp, #231
 6636 058a ADF80010 		strh	r1, [sp]	@ movhi
 6637 058e 1899     		ldr	r1, [sp, #96]
 6638 0590 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 6639              	.LVL460:
 758:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 6640              		.loc 19 758 5 is_stmt 1 view .LVU1745
 758:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 6641              		.loc 19 758 16 is_stmt 0 view .LVU1746
 6642 0594 1CA9     		add	r1, sp, #112
 6643 0596 0623     		movs	r3, #6
 6644 0598 0822     		movs	r2, #8
 6645 059a 1348     		ldr	r0, .L385+48
 6646 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 6647              	.LVL461:
 759:Veno-Echo.cpp ****     hw.adc.Start();
 6648              		.loc 19 759 5 is_stmt 1 view .LVU1747
 759:Veno-Echo.cpp ****     hw.adc.Start();
 6649              		.loc 19 759 17 is_stmt 0 view .LVU1748
 6650 05a0 1148     		ldr	r0, .L385+48
 6651 05a2 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 6652              	.LVL462:
 761:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 6653              		.loc 19 761 5 is_stmt 1 view .LVU1749
 761:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 6654              		.loc 19 761 25 is_stmt 0 view .LVU1750
 6655 05a6 3946     		mov	r1, r7
 6656 05a8 0448     		ldr	r0, .L385+4
 6657 05aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 6658              	.LVL463:
 763:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 6659              		.loc 19 763 5 is_stmt 1 view .LVU1751
 763:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 6660              		.loc 19 763 18 is_stmt 0 view .LVU1752
 6661 05ae 0F49     		ldr	r1, .L385+52
 6662 05b0 0248     		ldr	r0, .L385+4
 6663 05b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 6664              	.LVL464:
 6665              	.L380:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 224


 767:Veno-Echo.cpp ****      for(;;)
 6666              		.loc 19 767 6 is_stmt 1 discriminator 1 view .LVU1753
 767:Veno-Echo.cpp ****      for(;;)
 6667              		.loc 19 767 6 discriminator 1 view .LVU1754
 767:Veno-Echo.cpp ****      for(;;)
 6668              		.loc 19 767 6 discriminator 1 view .LVU1755
 767:Veno-Echo.cpp ****      for(;;)
 6669              		.loc 19 767 6 discriminator 1 view .LVU1756
 6670 05b6 FEE7     		b	.L380
 6671              	.L386:
 6672              		.align	2
 6673              	.L385:
 6674 05b8 00000000 		.word	.LANCHOR14
 6675 05bc 00000000 		.word	.LANCHOR4
 6676 05c0 00000000 		.word	.LANCHOR15
 6677 05c4 00004843 		.word	1128792064
 6678 05c8 3333333F 		.word	1060320051
 6679 05cc 00000000 		.word	.LANCHOR75
 6680 05d0 00000000 		.word	.LANCHOR76
 6681 05d4 0000C842 		.word	1120403456
 6682 05d8 00000000 		.word	.LANCHOR77
 6683 05dc 00000000 		.word	.LANCHOR50
 6684 05e0 00000000 		.word	.LANCHOR16
 6685 05e4 00000000 		.word	.LANCHOR49
 6686 05e8 18000000 		.word	.LANCHOR4+24
 6687 05ec 00000000 		.word	_ZL13AudioCallbackPfS_j
 6688              		.cfi_endproc
 6689              	.LFE4290:
 6691              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 6692              		.align	1
 6693              		.p2align 2,,3
 6694              		.global	_Z13TurnOnAllLEDsv
 6695              		.syntax unified
 6696              		.thumb
 6697              		.thumb_func
 6698              		.fpu fpv5-d16
 6700              	_Z13TurnOnAllLEDsv:
 6701              	.LFB4313:
1599:Veno-Echo.cpp **** {
 6702              		.loc 19 1599 1 view -0
 6703              		.cfi_startproc
 6704              		@ args = 0, pretend = 0, frame = 0
 6705              		@ frame_needed = 0, uses_anonymous_args = 0
1600:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 6706              		.loc 19 1600 5 view .LVU1758
1599:Veno-Echo.cpp **** {
 6707              		.loc 19 1599 1 is_stmt 0 view .LVU1759
 6708 0000 08B5     		push	{r3, lr}
 6709              		.cfi_def_cfa_offset 8
 6710              		.cfi_offset 3, -8
 6711              		.cfi_offset 14, -4
1600:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 6712              		.loc 19 1600 26 view .LVU1760
 6713 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 6714 0006 1148     		ldr	r0, .L389
 6715 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6716              	.LVL465:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 225


1601:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 6717              		.loc 19 1601 5 is_stmt 1 view .LVU1761
1601:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 6718              		.loc 19 1601 28 is_stmt 0 view .LVU1762
 6719 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 6720 0010 0F48     		ldr	r0, .L389+4
 6721 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6722              	.LVL466:
1602:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 6723              		.loc 19 1602 5 is_stmt 1 view .LVU1763
1602:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 6724              		.loc 19 1602 28 is_stmt 0 view .LVU1764
 6725 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 6726 001a 0E48     		ldr	r0, .L389+8
 6727 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6728              	.LVL467:
1603:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 6729              		.loc 19 1603 5 is_stmt 1 view .LVU1765
1603:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 6730              		.loc 19 1603 21 is_stmt 0 view .LVU1766
 6731 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 6732 0024 0C48     		ldr	r0, .L389+12
 6733 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6734              	.LVL468:
1604:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 6735              		.loc 19 1604 5 is_stmt 1 view .LVU1767
1604:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 6736              		.loc 19 1604 21 is_stmt 0 view .LVU1768
 6737 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 6738 002e 0B48     		ldr	r0, .L389+16
 6739 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6740              	.LVL469:
1605:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 6741              		.loc 19 1605 5 is_stmt 1 view .LVU1769
1605:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 6742              		.loc 19 1605 19 is_stmt 0 view .LVU1770
 6743 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 6744 0038 0948     		ldr	r0, .L389+20
 6745 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6746              	.LVL470:
1606:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 6747              		.loc 19 1606 5 is_stmt 1 view .LVU1771
1606:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 6748              		.loc 19 1606 19 is_stmt 0 view .LVU1772
 6749 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 6750 0042 0848     		ldr	r0, .L389+24
1607:Veno-Echo.cpp **** }
 6751              		.loc 19 1607 1 view .LVU1773
 6752 0044 BDE80840 		pop	{r3, lr}
 6753              		.cfi_restore 14
 6754              		.cfi_restore 3
 6755              		.cfi_def_cfa_offset 0
1606:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 6756              		.loc 19 1606 19 view .LVU1774
 6757 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 6758              	.LVL471:
 6759              	.L390:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 226


 6760              		.align	2
 6761              	.L389:
 6762 004c 00000000 		.word	.LANCHOR49
 6763 0050 04000000 		.word	.LANCHOR0+4
 6764 0054 04000000 		.word	.LANCHOR1+4
 6765 0058 00000000 		.word	.LANCHOR63
 6766 005c 00000000 		.word	.LANCHOR64
 6767 0060 00000000 		.word	.LANCHOR61
 6768 0064 00000000 		.word	.LANCHOR62
 6769              		.cfi_endproc
 6770              	.LFE4313:
 6772              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 6773              		.align	1
 6774              		.p2align 2,,3
 6775              		.global	_Z12ResetAllLEDsv
 6776              		.syntax unified
 6777              		.thumb
 6778              		.thumb_func
 6779              		.fpu fpv5-d16
 6781              	_Z12ResetAllLEDsv:
 6782              	.LFB4314:
1610:Veno-Echo.cpp **** {
 6783              		.loc 19 1610 1 is_stmt 1 view -0
 6784              		.cfi_startproc
 6785              		@ args = 0, pretend = 0, frame = 0
 6786              		@ frame_needed = 0, uses_anonymous_args = 0
1611:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 6787              		.loc 19 1611 5 view .LVU1776
1610:Veno-Echo.cpp **** {
 6788              		.loc 19 1610 1 is_stmt 0 view .LVU1777
 6789 0000 08B5     		push	{r3, lr}
 6790              		.cfi_def_cfa_offset 8
 6791              		.cfi_offset 3, -8
 6792              		.cfi_offset 14, -4
1611:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 6793              		.loc 19 1611 26 view .LVU1778
 6794 0002 9FED1E0A 		vldr.32	s0, .L398
 6795 0006 1E48     		ldr	r0, .L398+4
 6796 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6797              	.LVL472:
1612:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 6798              		.loc 19 1612 5 is_stmt 1 view .LVU1779
1612:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 6799              		.loc 19 1612 28 is_stmt 0 view .LVU1780
 6800 000c 9FED1B0A 		vldr.32	s0, .L398
 6801 0010 1C48     		ldr	r0, .L398+8
 6802 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6803              	.LVL473:
1613:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 6804              		.loc 19 1613 5 is_stmt 1 view .LVU1781
1613:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 6805              		.loc 19 1613 28 is_stmt 0 view .LVU1782
 6806 0016 1C48     		ldr	r0, .L398+12
 6807 0018 9FED180A 		vldr.32	s0, .L398
 6808 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6809              	.LVL474:
1614:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 227


 6810              		.loc 19 1614 5 is_stmt 1 view .LVU1783
1614:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 6811              		.loc 19 1614 26 is_stmt 0 view .LVU1784
 6812 0020 1A48     		ldr	r0, .L398+16
 6813 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 6814              	.LVL475:
1614:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 6815              		.loc 19 1614 5 view .LVU1785
 6816 0026 C8B9     		cbnz	r0, .L392
1616:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
 6817              		.loc 19 1616 9 is_stmt 1 view .LVU1786
1616:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
 6818              		.loc 19 1616 25 is_stmt 0 view .LVU1787
 6819 0028 1848     		ldr	r0, .L398+16
 6820 002a 9FED140A 		vldr.32	s0, .L398
 6821 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6822              	.LVL476:
1623:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 6823              		.loc 19 1623 5 is_stmt 1 view .LVU1788
1623:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 6824              		.loc 19 1623 26 is_stmt 0 view .LVU1789
 6825 0032 1748     		ldr	r0, .L398+20
 6826 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 6827              	.LVL477:
1623:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 6828              		.loc 19 1623 5 view .LVU1790
 6829 0038 D0B9     		cbnz	r0, .L394
 6830              	.L397:
1625:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
 6831              		.loc 19 1625 9 is_stmt 1 view .LVU1791
1625:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
 6832              		.loc 19 1625 25 is_stmt 0 view .LVU1792
 6833 003a 9FED100A 		vldr.32	s0, .L398
 6834 003e 1448     		ldr	r0, .L398+20
 6835 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6836              	.LVL478:
 6837              	.L395:
1632:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
 6838              		.loc 19 1632 5 is_stmt 1 view .LVU1793
1632:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
 6839              		.loc 19 1632 19 is_stmt 0 view .LVU1794
 6840 0044 9FED0D0A 		vldr.32	s0, .L398
 6841 0048 1248     		ldr	r0, .L398+24
 6842 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6843              	.LVL479:
1633:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 6844              		.loc 19 1633 5 is_stmt 1 view .LVU1795
1633:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 6845              		.loc 19 1633 19 is_stmt 0 view .LVU1796
 6846 004e 9FED0B0A 		vldr.32	s0, .L398
 6847 0052 1148     		ldr	r0, .L398+28
1634:Veno-Echo.cpp **** }
 6848              		.loc 19 1634 1 view .LVU1797
 6849 0054 BDE80840 		pop	{r3, lr}
 6850              		.cfi_remember_state
 6851              		.cfi_restore 14
 6852              		.cfi_restore 3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 228


 6853              		.cfi_def_cfa_offset 0
1633:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 6854              		.loc 19 1633 19 view .LVU1798
 6855 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 6856              	.LVL480:
 6857              	.L392:
 6858              		.cfi_restore_state
1620:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
 6859              		.loc 19 1620 8 is_stmt 1 view .LVU1799
1620:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
 6860              		.loc 19 1620 24 is_stmt 0 view .LVU1800
 6861 005c 0B48     		ldr	r0, .L398+16
 6862 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 6863 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6864              	.LVL481:
1623:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 6865              		.loc 19 1623 5 is_stmt 1 view .LVU1801
1623:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 6866              		.loc 19 1623 26 is_stmt 0 view .LVU1802
 6867 0066 0A48     		ldr	r0, .L398+20
 6868 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 6869              	.LVL482:
1623:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 6870              		.loc 19 1623 5 view .LVU1803
 6871 006c 0028     		cmp	r0, #0
 6872 006e E4D0     		beq	.L397
 6873              	.L394:
1629:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
 6874              		.loc 19 1629 9 is_stmt 1 view .LVU1804
1629:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
 6875              		.loc 19 1629 25 is_stmt 0 view .LVU1805
 6876 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 6877 0074 0648     		ldr	r0, .L398+20
 6878 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6879              	.LVL483:
 6880 007a E3E7     		b	.L395
 6881              	.L399:
 6882              		.align	2
 6883              	.L398:
 6884 007c 00000000 		.word	0
 6885 0080 00000000 		.word	.LANCHOR49
 6886 0084 04000000 		.word	.LANCHOR0+4
 6887 0088 04000000 		.word	.LANCHOR1+4
 6888 008c 00000000 		.word	.LANCHOR63
 6889 0090 00000000 		.word	.LANCHOR64
 6890 0094 00000000 		.word	.LANCHOR61
 6891 0098 00000000 		.word	.LANCHOR62
 6892              		.cfi_endproc
 6893              	.LFE4314:
 6895              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 6896              		.align	1
 6897              		.p2align 2,,3
 6898              		.global	_Z14Update_Buttonsv
 6899              		.syntax unified
 6900              		.thumb
 6901              		.thumb_func
 6902              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 229


 6904              	_Z14Update_Buttonsv:
 6905              	.LFB4308:
1228:Veno-Echo.cpp **** {  
 6906              		.loc 19 1228 1 is_stmt 1 view -0
 6907              		.cfi_startproc
 6908              		@ args = 0, pretend = 0, frame = 0
 6909              		@ frame_needed = 0, uses_anonymous_args = 0
1229:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 6910              		.loc 19 1229 5 view .LVU1807
1230:Veno-Echo.cpp ****     static uint32_t resetTime{};
 6911              		.loc 19 1230 5 view .LVU1808
1231:Veno-Echo.cpp ****     static int buttonstate{};
 6912              		.loc 19 1231 5 view .LVU1809
1233:Veno-Echo.cpp ****     Rev_L_sw.update();
 6913              		.loc 19 1233 5 view .LVU1810
1228:Veno-Echo.cpp **** {  
 6914              		.loc 19 1228 1 is_stmt 0 view .LVU1811
 6915 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6916              		.cfi_def_cfa_offset 24
 6917              		.cfi_offset 3, -24
 6918              		.cfi_offset 4, -20
 6919              		.cfi_offset 5, -16
 6920              		.cfi_offset 6, -12
 6921              		.cfi_offset 7, -8
 6922              		.cfi_offset 14, -4
1233:Veno-Echo.cpp ****     Rev_L_sw.update();
 6923              		.loc 19 1233 20 view .LVU1812
 6924 0002 6748     		ldr	r0, .L449
 6925 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6926              	.LVL484:
1234:Veno-Echo.cpp ****     Rev_R_sw.update();
 6927              		.loc 19 1234 5 is_stmt 1 view .LVU1813
1234:Veno-Echo.cpp ****     Rev_R_sw.update();
 6928              		.loc 19 1234 20 is_stmt 0 view .LVU1814
 6929 0008 6648     		ldr	r0, .L449+4
 6930 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6931              	.LVL485:
1235:Veno-Echo.cpp ****     LPF_sw.update();
 6932              		.loc 19 1235 5 is_stmt 1 view .LVU1815
1235:Veno-Echo.cpp ****     LPF_sw.update();
 6933              		.loc 19 1235 18 is_stmt 0 view .LVU1816
 6934 000e 6648     		ldr	r0, .L449+8
 6935 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6936              	.LVL486:
1236:Veno-Echo.cpp ****     HPF_sw.update();
 6937              		.loc 19 1236 5 is_stmt 1 view .LVU1817
1239:Veno-Echo.cpp ****     ReverseGateL.Debounce();
 6938              		.loc 19 1239 26 is_stmt 0 view .LVU1818
 6939 0014 654C     		ldr	r4, .L449+12
1236:Veno-Echo.cpp ****     HPF_sw.update();
 6940              		.loc 19 1236 18 view .LVU1819
 6941 0016 6648     		ldr	r0, .L449+16
 6942 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6943              	.LVL487:
1237:Veno-Echo.cpp ****     Tap_Button.update();
 6944              		.loc 19 1237 5 is_stmt 1 view .LVU1820
1237:Veno-Echo.cpp ****     Tap_Button.update();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 230


 6945              		.loc 19 1237 22 is_stmt 0 view .LVU1821
 6946 001c 6548     		ldr	r0, .L449+20
 6947 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6948              	.LVL488:
1239:Veno-Echo.cpp ****     ReverseGateL.Debounce();
 6949              		.loc 19 1239 5 is_stmt 1 view .LVU1822
1239:Veno-Echo.cpp ****     ReverseGateL.Debounce();
 6950              		.loc 19 1239 26 is_stmt 0 view .LVU1823
 6951 0022 2046     		mov	r0, r4
 6952 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 6953              	.LVL489:
1240:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 6954              		.loc 19 1240 5 is_stmt 1 view .LVU1824
1240:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 6955              		.loc 19 1240 26 is_stmt 0 view .LVU1825
 6956 0028 6348     		ldr	r0, .L449+24
 6957 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 6958              	.LVL490:
1242:Veno-Echo.cpp ****     Sync.Debounce();
 6959              		.loc 19 1242 5 is_stmt 1 view .LVU1826
1242:Veno-Echo.cpp ****     Sync.Debounce();
 6960              		.loc 19 1242 18 is_stmt 0 view .LVU1827
 6961 002e 6348     		ldr	r0, .L449+28
 6962 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 6963              	.LVL491:
1243:Veno-Echo.cpp ****     ClockIn.Debounce();
 6964              		.loc 19 1243 5 is_stmt 1 view .LVU1828
1243:Veno-Echo.cpp ****     ClockIn.Debounce();
 6965              		.loc 19 1243 21 is_stmt 0 view .LVU1829
 6966 0034 6248     		ldr	r0, .L449+32
 6967 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 6968              	.LVL492:
1245:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
 6969              		.loc 19 1245 5 is_stmt 1 view .LVU1830
 6970              		.loc 1 69 38 view .LVU1831
1245:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
 6971              		.loc 19 1245 5 is_stmt 0 view .LVU1832
 6972 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 6973 003c 7F2B     		cmp	r3, #127
 6974 003e 00F09380 		beq	.L441
 6975              	.L401:
1251:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
 6976              		.loc 19 1251 5 is_stmt 1 view .LVU1833
 6977              	.LVL493:
 6978              		.loc 1 69 38 view .LVU1834
1251:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
 6979              		.loc 19 1251 32 is_stmt 0 view .LVU1835
 6980 0042 5D4B     		ldr	r3, .L449+24
1251:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
 6981              		.loc 19 1251 5 view .LVU1836
 6982 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 6983 0046 7F2B     		cmp	r3, #127
 6984 0048 00F08A80 		beq	.L442
 6985              	.L402:
1259:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
 6986              		.loc 19 1259 5 is_stmt 1 view .LVU1837
1259:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 231


 6987              		.loc 19 1259 28 is_stmt 0 view .LVU1838
 6988 004c 5448     		ldr	r0, .L449
1261:Veno-Echo.cpp ****         buttonstate += 1;
 6989              		.loc 19 1261 21 view .LVU1839
 6990 004e 5D4C     		ldr	r4, .L449+36
1259:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
 6991              		.loc 19 1259 28 view .LVU1840
 6992 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 6993              	.LVL494:
1259:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
 6994              		.loc 19 1259 5 view .LVU1841
 6995 0054 28B1     		cbz	r0, .L404
1261:Veno-Echo.cpp ****         buttonstate += 1;
 6996              		.loc 19 1261 9 is_stmt 1 view .LVU1842
1261:Veno-Echo.cpp ****         buttonstate += 1;
 6997              		.loc 19 1261 21 is_stmt 0 view .LVU1843
 6998 0056 2368     		ldr	r3, [r4]
 6999 0058 0133     		adds	r3, r3, #1
1262:Veno-Echo.cpp ****         if (buttonstate == 3)
 7000              		.loc 19 1262 9 view .LVU1844
 7001 005a 032B     		cmp	r3, #3
1261:Veno-Echo.cpp ****         buttonstate += 1;
 7002              		.loc 19 1261 21 view .LVU1845
 7003 005c 2360     		str	r3, [r4]
1262:Veno-Echo.cpp ****         if (buttonstate == 3)
 7004              		.loc 19 1262 9 is_stmt 1 view .LVU1846
 7005 005e 00F08C80 		beq	.L443
 7006              	.L404:
1268:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
 7007              		.loc 19 1268 5 view .LVU1847
1268:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
 7008              		.loc 19 1268 29 is_stmt 0 view .LVU1848
 7009 0062 4F48     		ldr	r0, .L449
 7010 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7011              	.LVL495:
1268:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
 7012              		.loc 19 1268 5 view .LVU1849
 7013 0068 10B1     		cbz	r0, .L406
1270:Veno-Echo.cpp ****         buttonstate -= 1;
 7014              		.loc 19 1270 9 is_stmt 1 view .LVU1850
1270:Veno-Echo.cpp ****         buttonstate -= 1;
 7015              		.loc 19 1270 21 is_stmt 0 view .LVU1851
 7016 006a 2368     		ldr	r3, [r4]
 7017 006c 013B     		subs	r3, r3, #1
 7018 006e 2360     		str	r3, [r4]
 7019              	.L406:
1273:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
 7020              		.loc 19 1273 5 is_stmt 1 view .LVU1852
1273:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
 7021              		.loc 19 1273 28 is_stmt 0 view .LVU1853
 7022 0070 4C48     		ldr	r0, .L449+4
 7023 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7024              	.LVL496:
1273:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
 7025              		.loc 19 1273 5 view .LVU1854
 7026 0076 20B1     		cbz	r0, .L408
1275:Veno-Echo.cpp ****         buttonstate += 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 232


 7027              		.loc 19 1275 9 is_stmt 1 view .LVU1855
1275:Veno-Echo.cpp ****         buttonstate += 1;
 7028              		.loc 19 1275 21 is_stmt 0 view .LVU1856
 7029 0078 2368     		ldr	r3, [r4]
 7030 007a 0133     		adds	r3, r3, #1
1276:Veno-Echo.cpp ****         if (buttonstate == 3)
 7031              		.loc 19 1276 9 view .LVU1857
 7032 007c 032B     		cmp	r3, #3
1275:Veno-Echo.cpp ****         buttonstate += 1;
 7033              		.loc 19 1275 21 view .LVU1858
 7034 007e 2360     		str	r3, [r4]
1276:Veno-Echo.cpp ****         if (buttonstate == 3)
 7035              		.loc 19 1276 9 is_stmt 1 view .LVU1859
 7036 0080 76D0     		beq	.L444
 7037              	.L408:
1282:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
 7038              		.loc 19 1282 5 view .LVU1860
1282:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
 7039              		.loc 19 1282 29 is_stmt 0 view .LVU1861
 7040 0082 4848     		ldr	r0, .L449+4
 7041 0084 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7042              	.LVL497:
1282:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
 7043              		.loc 19 1282 5 view .LVU1862
 7044 0088 10B1     		cbz	r0, .L410
1284:Veno-Echo.cpp ****         buttonstate -= 1;
 7045              		.loc 19 1284 9 is_stmt 1 view .LVU1863
1284:Veno-Echo.cpp ****         buttonstate -= 1;
 7046              		.loc 19 1284 21 is_stmt 0 view .LVU1864
 7047 008a 2368     		ldr	r3, [r4]
 7048 008c 013B     		subs	r3, r3, #1
 7049 008e 2360     		str	r3, [r4]
 7050              	.L410:
1287:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
 7051              		.loc 19 1287 5 is_stmt 1 view .LVU1865
1287:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
 7052              		.loc 19 1287 30 is_stmt 0 view .LVU1866
 7053 0090 4848     		ldr	r0, .L449+20
 7054 0092 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7055              	.LVL498:
1287:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
 7056              		.loc 19 1287 5 view .LVU1867
 7057 0096 40BB     		cbnz	r0, .L411
 7058 0098 4B4D     		ldr	r5, .L449+40
 7059              	.L412:
1311:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
 7060              		.loc 19 1311 5 is_stmt 1 view .LVU1868
1311:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
 7061              		.loc 19 1311 31 is_stmt 0 view .LVU1869
 7062 009a 4648     		ldr	r0, .L449+20
 7063 009c FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7064              	.LVL499:
1311:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
 7065              		.loc 19 1311 5 view .LVU1870
 7066 00a0 38B1     		cbz	r0, .L416
1313:Veno-Echo.cpp ****         shift = false;
 7067              		.loc 19 1313 9 is_stmt 1 view .LVU1871
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 233


1314:Veno-Echo.cpp ****         buttonstate -= 1;
 7068              		.loc 19 1314 21 is_stmt 0 view .LVU1872
 7069 00a2 2368     		ldr	r3, [r4]
1313:Veno-Echo.cpp ****         shift = false;
 7070              		.loc 19 1313 15 view .LVU1873
 7071 00a4 0022     		movs	r2, #0
 7072 00a6 4948     		ldr	r0, .L449+44
1314:Veno-Echo.cpp ****         buttonstate -= 1;
 7073              		.loc 19 1314 21 view .LVU1874
 7074 00a8 013B     		subs	r3, r3, #1
1315:Veno-Echo.cpp ****         mute = false;
 7075              		.loc 19 1315 14 view .LVU1875
 7076 00aa 4949     		ldr	r1, .L449+48
1313:Veno-Echo.cpp ****         shift = false;
 7077              		.loc 19 1313 15 view .LVU1876
 7078 00ac 0270     		strb	r2, [r0]
1314:Veno-Echo.cpp ****         buttonstate -= 1;
 7079              		.loc 19 1314 9 is_stmt 1 view .LVU1877
1314:Veno-Echo.cpp ****         buttonstate -= 1;
 7080              		.loc 19 1314 21 is_stmt 0 view .LVU1878
 7081 00ae 2360     		str	r3, [r4]
1315:Veno-Echo.cpp ****         mute = false;
 7082              		.loc 19 1315 9 is_stmt 1 view .LVU1879
1315:Veno-Echo.cpp ****         mute = false;
 7083              		.loc 19 1315 14 is_stmt 0 view .LVU1880
 7084 00b0 0A70     		strb	r2, [r1]
 7085              	.L416:
1318:Veno-Echo.cpp ****     if (Tap_Button.getState())
 7086              		.loc 19 1318 5 is_stmt 1 view .LVU1881
1318:Veno-Echo.cpp ****     if (Tap_Button.getState())
 7087              		.loc 19 1318 28 is_stmt 0 view .LVU1882
 7088 00b2 4048     		ldr	r0, .L449+20
 7089 00b4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7090              	.LVL500:
1318:Veno-Echo.cpp ****     if (Tap_Button.getState())
 7091              		.loc 19 1318 5 view .LVU1883
 7092 00b8 10B1     		cbz	r0, .L417
1322:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
 7093              		.loc 19 1322 13 is_stmt 1 view .LVU1884
1322:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
 7094              		.loc 19 1322 19 is_stmt 0 view .LVU1885
 7095 00ba 444B     		ldr	r3, .L449+44
 7096 00bc 0122     		movs	r2, #1
 7097 00be 1A70     		strb	r2, [r3]
 7098              	.L417:
1326:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
 7099              		.loc 19 1326 5 is_stmt 1 view .LVU1886
 7100 00c0 2368     		ldr	r3, [r4]
 7101 00c2 032B     		cmp	r3, #3
 7102 00c4 29D0     		beq	.L445
 7103              	.L419:
1348:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
 7104              		.loc 19 1348 5 view .LVU1887
1348:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
 7105              		.loc 19 1348 31 is_stmt 0 view .LVU1888
 7106 00c6 3D4B     		ldr	r3, .L449+28
 7107 00c8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 234


 7108              	.LBB1349:
 7109              	.LBI1349:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 7110              		.loc 1 75 17 is_stmt 1 view .LVU1889
 7111              	.LVL501:
 7112              	.LBB1350:
 7113              		.loc 1 75 35 view .LVU1890
 7114              		.loc 1 75 52 is_stmt 0 view .LVU1891
 7115 00ca A3F1FF02 		sub	r2, r3, #255
 7116              	.LBE1350:
 7117              	.LBE1349:
1350:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
 7118              		.loc 19 1350 5 view .LVU1892
 7119 00ce 7F2B     		cmp	r3, #127
 7120              	.LBB1352:
 7121              	.LBB1351:
 7122              		.loc 1 75 52 view .LVU1893
 7123 00d0 B2FA82F2 		clz	r2, r2
 7124 00d4 4FEA5212 		lsr	r2, r2, #5
 7125 00d8 2A70     		strb	r2, [r5]
 7126              	.LBE1351:
 7127              	.LBE1352:
1350:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
 7128              		.loc 19 1350 5 is_stmt 1 view .LVU1894
 7129              	.LVL502:
  69:../libdaisy/src/hid/switch.h **** 
 7130              		.loc 1 69 38 view .LVU1895
1350:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
 7131              		.loc 19 1350 5 is_stmt 0 view .LVU1896
 7132 00da 00D0     		beq	.L446
1359:Veno-Echo.cpp **** }
 7133              		.loc 19 1359 1 view .LVU1897
 7134 00dc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7135              	.L446:
1355:Veno-Echo.cpp ****         delayL_flag = true;
 7136              		.loc 19 1355 9 is_stmt 1 view .LVU1898
1355:Veno-Echo.cpp ****         delayL_flag = true;
 7137              		.loc 19 1355 21 is_stmt 0 view .LVU1899
 7138 00de 0123     		movs	r3, #1
 7139 00e0 3C49     		ldr	r1, .L449+52
1356:Veno-Echo.cpp ****         delayR_flag = true;
 7140              		.loc 19 1356 21 view .LVU1900
 7141 00e2 3D4A     		ldr	r2, .L449+56
1355:Veno-Echo.cpp ****         delayL_flag = true;
 7142              		.loc 19 1355 21 view .LVU1901
 7143 00e4 0B70     		strb	r3, [r1]
1356:Veno-Echo.cpp ****         delayR_flag = true;
 7144              		.loc 19 1356 9 is_stmt 1 view .LVU1902
1356:Veno-Echo.cpp ****         delayR_flag = true;
 7145              		.loc 19 1356 21 is_stmt 0 view .LVU1903
 7146 00e6 1370     		strb	r3, [r2]
1359:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 235


 7147              		.loc 19 1359 1 view .LVU1904
 7148 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7149              	.LVL503:
 7150              	.L411:
1289:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
 7151              		.loc 19 1289 9 is_stmt 1 view .LVU1905
1289:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
 7152              		.loc 19 1289 25 is_stmt 0 view .LVU1906
 7153 00ea 3C48     		ldr	r0, .L449+60
 7154 00ec FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 7155              	.LVL504:
1289:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
 7156              		.loc 19 1289 9 view .LVU1907
 7157 00f0 0028     		cmp	r0, #0
 7158 00f2 47D1     		bne	.L447
 7159              	.L413:
1293:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 7160              		.loc 19 1293 9 is_stmt 1 view .LVU1908
1295:Veno-Echo.cpp ****         if(syncMode)
 7161              		.loc 19 1295 9 is_stmt 0 view .LVU1909
 7162 00f4 344D     		ldr	r5, .L449+40
1293:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 7163              		.loc 19 1293 33 view .LVU1910
 7164 00f6 3A48     		ldr	r0, .L449+64
 7165 00f8 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7166              	.LVL505:
1295:Veno-Echo.cpp ****         if(syncMode)
 7167              		.loc 19 1295 9 is_stmt 1 view .LVU1911
 7168 00fc 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7169 00fe 002B     		cmp	r3, #0
 7170 0100 47D1     		bne	.L448
 7171              	.L414:
1301:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
 7172              		.loc 19 1301 9 view .LVU1912
1301:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
 7173              		.loc 19 1301 35 is_stmt 0 view .LVU1913
 7174 0102 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7175              	.LVL506:
1302:Veno-Echo.cpp ****         buttonstate += 1;
 7176              		.loc 19 1302 9 is_stmt 1 view .LVU1914
1302:Veno-Echo.cpp ****         buttonstate += 1;
 7177              		.loc 19 1302 21 is_stmt 0 view .LVU1915
 7178 0106 2368     		ldr	r3, [r4]
 7179 0108 0133     		adds	r3, r3, #1
1304:Veno-Echo.cpp ****         if (buttonstate == 3)
 7180              		.loc 19 1304 9 view .LVU1916
 7181 010a 032B     		cmp	r3, #3
1302:Veno-Echo.cpp ****         buttonstate += 1;
 7182              		.loc 19 1302 21 view .LVU1917
 7183 010c 2360     		str	r3, [r4]
1304:Veno-Echo.cpp ****         if (buttonstate == 3)
 7184              		.loc 19 1304 9 is_stmt 1 view .LVU1918
 7185 010e C4D1     		bne	.L412
1306:Veno-Echo.cpp ****             resetTime = System::GetNow();
 7186              		.loc 19 1306 13 view .LVU1919
1306:Veno-Echo.cpp ****             resetTime = System::GetNow();
 7187              		.loc 19 1306 39 is_stmt 0 view .LVU1920
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 236


 7188 0110 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7189              	.LVL507:
1306:Veno-Echo.cpp ****             resetTime = System::GetNow();
 7190              		.loc 19 1306 23 view .LVU1921
 7191 0114 334B     		ldr	r3, .L449+68
 7192 0116 1860     		str	r0, [r3]
 7193 0118 BFE7     		b	.L412
 7194              	.L445:
1335:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 7195              		.loc 19 1335 13 is_stmt 1 view .LVU1922
1335:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 7196              		.loc 19 1335 36 is_stmt 0 view .LVU1923
 7197 011a 324F     		ldr	r7, .L449+68
1335:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 7198              		.loc 19 1335 33 view .LVU1924
 7199 011c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7200              	.LVL508:
1335:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 7201              		.loc 19 1335 13 view .LVU1925
 7202 0120 40F6B833 		movw	r3, #3000
1335:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 7203              		.loc 19 1335 36 view .LVU1926
 7204 0124 3A68     		ldr	r2, [r7]
 7205 0126 801A     		subs	r0, r0, r2
1335:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 7206              		.loc 19 1335 13 view .LVU1927
 7207 0128 9842     		cmp	r0, r3
 7208 012a CCD9     		bls	.L419
1337:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
 7209              		.loc 19 1337 17 is_stmt 1 view .LVU1928
1337:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
 7210              		.loc 19 1337 32 is_stmt 0 view .LVU1929
 7211 012c 1C48     		ldr	r0, .L449
 7212 012e FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7213              	.LVL509:
1338:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7214              		.loc 19 1338 17 is_stmt 1 view .LVU1930
1338:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7215              		.loc 19 1338 32 is_stmt 0 view .LVU1931
 7216 0132 1C48     		ldr	r0, .L449+4
 7217 0134 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7218              	.LVL510:
1339:Veno-Echo.cpp ****                 ResetAllLEDs();
 7219              		.loc 19 1339 17 is_stmt 1 view .LVU1932
1343:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7220              		.loc 19 1343 29 is_stmt 0 view .LVU1933
 7221 0138 2B4E     		ldr	r6, .L449+72
1339:Veno-Echo.cpp ****                 ResetAllLEDs();
 7222              		.loc 19 1339 29 view .LVU1934
 7223 013a FFF7FEFF 		bl	_Z12ResetAllLEDsv
 7224              	.LVL511:
1341:Veno-Echo.cpp ****                 shift = false;
 7225              		.loc 19 1341 17 is_stmt 1 view .LVU1935
1341:Veno-Echo.cpp ****                 shift = false;
 7226              		.loc 19 1341 23 is_stmt 0 view .LVU1936
 7227 013e 234B     		ldr	r3, .L449+44
 7228 0140 0022     		movs	r2, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 237


1342:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7229              		.loc 19 1342 30 view .LVU1937
 7230 0142 2948     		ldr	r0, .L449+72
1343:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7231              		.loc 19 1343 29 view .LVU1938
 7232 0144 294C     		ldr	r4, .L449+76
1341:Veno-Echo.cpp ****                 shift = false;
 7233              		.loc 19 1341 23 view .LVU1939
 7234 0146 1A70     		strb	r2, [r3]
1342:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7235              		.loc 19 1342 17 is_stmt 1 view .LVU1940
1342:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7236              		.loc 19 1342 30 is_stmt 0 view .LVU1941
 7237 0148 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7238              	.LVL512:
1343:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7239              		.loc 19 1343 17 is_stmt 1 view .LVU1942
1343:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7240              		.loc 19 1343 29 is_stmt 0 view .LVU1943
 7241 014c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7242 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7243 0150 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 7244 0154 84E80F00 		stm	r4, {r0, r1, r2, r3}
1344:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7245              		.loc 19 1344 17 is_stmt 1 view .LVU1944
1344:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7246              		.loc 19 1344 43 is_stmt 0 view .LVU1945
 7247 0158 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7248              	.LVL513:
1344:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7249              		.loc 19 1344 27 view .LVU1946
 7250 015c 3860     		str	r0, [r7]
 7251 015e B2E7     		b	.L419
 7252              	.L442:
1253:Veno-Echo.cpp ****         Rev_R_sw.toggle();
 7253              		.loc 19 1253 9 is_stmt 1 view .LVU1947
1253:Veno-Echo.cpp ****         Rev_R_sw.toggle();
 7254              		.loc 19 1253 24 is_stmt 0 view .LVU1948
 7255 0160 1048     		ldr	r0, .L449+4
 7256 0162 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7257              	.LVL514:
 7258 0166 71E7     		b	.L402
 7259              	.LVL515:
 7260              	.L441:
1247:Veno-Echo.cpp ****         Rev_L_sw.toggle();
 7261              		.loc 19 1247 9 is_stmt 1 view .LVU1949
1247:Veno-Echo.cpp ****         Rev_L_sw.toggle();
 7262              		.loc 19 1247 24 is_stmt 0 view .LVU1950
 7263 0168 0D48     		ldr	r0, .L449
 7264 016a FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7265              	.LVL516:
 7266 016e 68E7     		b	.L401
 7267              	.LVL517:
 7268              	.L444:
1278:Veno-Echo.cpp ****             resetTime = System::GetNow();
 7269              		.loc 19 1278 13 is_stmt 1 view .LVU1951
1278:Veno-Echo.cpp ****             resetTime = System::GetNow();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 238


 7270              		.loc 19 1278 39 is_stmt 0 view .LVU1952
 7271 0170 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7272              	.LVL518:
1278:Veno-Echo.cpp ****             resetTime = System::GetNow();
 7273              		.loc 19 1278 23 view .LVU1953
 7274 0174 1B4B     		ldr	r3, .L449+68
 7275 0176 1860     		str	r0, [r3]
 7276 0178 83E7     		b	.L408
 7277              	.L443:
1264:Veno-Echo.cpp ****             resetTime = System::GetNow();
 7278              		.loc 19 1264 13 is_stmt 1 view .LVU1954
1264:Veno-Echo.cpp ****             resetTime = System::GetNow();
 7279              		.loc 19 1264 39 is_stmt 0 view .LVU1955
 7280 017a FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7281              	.LVL519:
1264:Veno-Echo.cpp ****             resetTime = System::GetNow();
 7282              		.loc 19 1264 23 view .LVU1956
 7283 017e 194B     		ldr	r3, .L449+68
 7284 0180 1860     		str	r0, [r3]
 7285 0182 6EE7     		b	.L404
 7286              	.L447:
1291:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7287              		.loc 19 1291 13 is_stmt 1 view .LVU1957
1291:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7288              		.loc 19 1291 35 is_stmt 0 view .LVU1958
 7289 0184 1548     		ldr	r0, .L449+60
 7290 0186 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7291              	.LVL520:
 7292 018a 1548     		ldr	r0, .L449+64
 7293 018c FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7294              	.LVL521:
 7295 0190 B0E7     		b	.L413
 7296              	.L448:
1297:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
 7297              		.loc 19 1297 13 is_stmt 1 view .LVU1959
1297:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
 7298              		.loc 19 1297 39 is_stmt 0 view .LVU1960
 7299 0192 1748     		ldr	r0, .L449+80
 7300 0194 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7301              	.LVL522:
1298:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 7302              		.loc 19 1298 13 is_stmt 1 view .LVU1961
1298:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 7303              		.loc 19 1298 39 is_stmt 0 view .LVU1962
 7304 0198 1648     		ldr	r0, .L449+84
 7305 019a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7306              	.LVL523:
 7307 019e B0E7     		b	.L414
 7308              	.L450:
 7309              		.align	2
 7310              	.L449:
 7311 01a0 00000000 		.word	.LANCHOR63
 7312 01a4 00000000 		.word	.LANCHOR64
 7313 01a8 00000000 		.word	.LANCHOR61
 7314 01ac 00000000 		.word	.LANCHOR66
 7315 01b0 00000000 		.word	.LANCHOR62
 7316 01b4 00000000 		.word	.LANCHOR65
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 239


 7317 01b8 00000000 		.word	.LANCHOR67
 7318 01bc 00000000 		.word	.LANCHOR68
 7319 01c0 00000000 		.word	.LANCHOR47
 7320 01c4 00000000 		.word	.LANCHOR78
 7321 01c8 00000000 		.word	.LANCHOR51
 7322 01cc 00000000 		.word	.LANCHOR8
 7323 01d0 00000000 		.word	.LANCHOR80
 7324 01d4 00000000 		.word	.LANCHOR54
 7325 01d8 00000000 		.word	.LANCHOR55
 7326 01dc 00000000 		.word	.LANCHOR50
 7327 01e0 00000000 		.word	.LANCHOR49
 7328 01e4 00000000 		.word	.LANCHOR79
 7329 01e8 00000000 		.word	.LANCHOR77
 7330 01ec 00000000 		.word	.LANCHOR16
 7331 01f0 04000000 		.word	.LANCHOR0+4
 7332 01f4 04000000 		.word	.LANCHOR1+4
 7333              		.cfi_endproc
 7334              	.LFE4308:
 7336              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 7337              		.align	1
 7338              		.p2align 2,,3
 7339              		.syntax unified
 7340              		.thumb
 7341              		.thumb_func
 7342              		.fpu fpv5-d16
 7344              	_ZL13AudioCallbackPfS_j:
 7345              	.LVL524:
 7346              	.LFB4288:
 241:Veno-Echo.cpp **** {
 7347              		.loc 19 241 1 is_stmt 1 view -0
 7348              		.cfi_startproc
 7349              		@ args = 0, pretend = 0, frame = 72
 7350              		@ frame_needed = 0, uses_anonymous_args = 0
 252:Veno-Echo.cpp **** static int Counter{};
 7351              		.loc 19 252 1 view .LVU1964
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 7352              		.loc 19 270 1 view .LVU1965
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 7353              		.loc 19 270 9 is_stmt 0 view .LVU1966
 7354 0000 DFF894C0 		ldr	ip, .L568+8
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 7355              		.loc 19 270 20 view .LVU1967
 7356 0004 DCF80030 		ldr	r3, [ip]
 241:Veno-Echo.cpp **** {
 7357              		.loc 19 241 1 view .LVU1968
 7358 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7359              		.cfi_def_cfa_offset 36
 7360              		.cfi_offset 4, -36
 7361              		.cfi_offset 5, -32
 7362              		.cfi_offset 6, -28
 7363              		.cfi_offset 7, -24
 7364              		.cfi_offset 8, -20
 7365              		.cfi_offset 9, -16
 7366              		.cfi_offset 10, -12
 7367              		.cfi_offset 11, -8
 7368              		.cfi_offset 14, -4
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 240


 7369              		.loc 19 270 20 view .LVU1969
 7370 000c 0133     		adds	r3, r3, #1
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 7371              		.loc 19 270 25 view .LVU1970
 7372 000e 204C     		ldr	r4, .L568
 241:Veno-Echo.cpp **** {
 7373              		.loc 19 241 1 view .LVU1971
 7374 0010 0646     		mov	r6, r0
 7375 0012 1546     		mov	r5, r2
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 7376              		.loc 19 270 25 view .LVU1972
 7377 0014 84FB0302 		smull	r0, r2, r4, r3
 7378              	.LVL525:
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 7379              		.loc 19 270 25 view .LVU1973
 7380 0018 DC17     		asrs	r4, r3, #31
 241:Veno-Echo.cpp **** {
 7381              		.loc 19 241 1 view .LVU1974
 7382 001a 0F46     		mov	r7, r1
 7383              	.LBB1442:
 7384              	.LBB1443:
 7385              	.LBB1444:
 7386              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 241


  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 242


  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 243


 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 244


 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 245


 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 246


 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 247


 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7387              		.loc 23 419 24 view .LVU1975
 7388 001c 1D49     		ldr	r1, .L568+4
 7389              	.LVL526:
 7390              		.loc 23 419 24 view .LVU1976
 7391              	.LBE1444:
 7392              	.LBE1443:
 7393              	.LBE1442:
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 7394              		.loc 19 270 25 view .LVU1977
 7395 001e 1A44     		add	r2, r2, r3
 7396 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 7397 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 7398 0028 1B1B     		subs	r3, r3, r4
 241:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 248


 7399              		.loc 19 241 1 view .LVU1978
 7400 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 7401              		.cfi_def_cfa_offset 92
 7402              		.cfi_offset 80, -92
 7403              		.cfi_offset 81, -88
 7404              		.cfi_offset 82, -84
 7405              		.cfi_offset 83, -80
 7406              		.cfi_offset 84, -76
 7407              		.cfi_offset 85, -72
 7408              		.cfi_offset 86, -68
 7409              		.cfi_offset 87, -64
 7410              		.cfi_offset 88, -60
 7411              		.cfi_offset 89, -56
 7412              		.cfi_offset 90, -52
 7413              		.cfi_offset 91, -48
 7414              		.cfi_offset 92, -44
 7415              		.cfi_offset 93, -40
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 7416              		.loc 19 270 9 view .LVU1979
 7417 002e CCF80030 		str	r3, [ip]
 272:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 7418              		.loc 19 272 1 is_stmt 1 view .LVU1980
 7419              	.LVL527:
 7420              	.LBB1449:
 7421              	.LBI1442:
 7422              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 249


  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7423              		.loc 24 87 5 view .LVU1981
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 250


 7424              	.LBE1449:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7425              		.loc 24 88 7 view .LVU1982
 7426              	.LBB1450:
 7427              	.LBB1447:
 7428              	.LBI1443:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7429              		.loc 23 413 7 view .LVU1983
 7430              	.LBB1445:
 7431              		.loc 23 419 24 is_stmt 0 view .LVU1984
 7432 0032 BFF35B8F 		dmb	ish
 7433 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 7434              	.LBE1445:
 7435              	.LBE1447:
 7436              	.LBE1450:
 241:Veno-Echo.cpp **** {
 7437              		.loc 19 241 1 view .LVU1985
 7438 0038 93B0     		sub	sp, sp, #76
 7439              		.cfi_def_cfa_offset 168
 7440              	.LBB1451:
 7441              	.LBB1448:
 7442              	.LBB1446:
 7443              		.loc 23 419 24 view .LVU1986
 7444 003a BFF35B8F 		dmb	ish
 7445              	.LBE1446:
 7446              	.LBE1448:
 7447              	.LBE1451:
 272:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 7448              		.loc 19 272 1 view .LVU1987
 7449 003e B3B9     		cbnz	r3, .L452
 285:Veno-Echo.cpp ****         switch (Counter)
 7450              		.loc 19 285 9 is_stmt 1 view .LVU1988
 7451 0040 DCF80030 		ldr	r3, [ip]
 7452 0044 0E2B     		cmp	r3, #14
 7453 0046 12D8     		bhi	.L452
 7454 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 7455              	.L454:
 7456 004c 2606     		.2byte	(.L468-.L454)/2
 7457 004e 1D06     		.2byte	(.L467-.L454)/2
 7458 0050 1906     		.2byte	(.L466-.L454)/2
 7459 0052 1006     		.2byte	(.L465-.L454)/2
 7460 0054 0C06     		.2byte	(.L464-.L454)/2
 7461 0056 0306     		.2byte	(.L463-.L454)/2
 7462 0058 FF05     		.2byte	(.L462-.L454)/2
 7463 005a F605     		.2byte	(.L461-.L454)/2
 7464 005c F205     		.2byte	(.L460-.L454)/2
 7465 005e E905     		.2byte	(.L459-.L454)/2
 7466 0060 E505     		.2byte	(.L458-.L454)/2
 7467 0062 DC05     		.2byte	(.L457-.L454)/2
 7468 0064 D805     		.2byte	(.L456-.L454)/2
 7469 0066 0F00     		.2byte	(.L455-.L454)/2
 7470 0068 D405     		.2byte	(.L453-.L454)/2
 7471              		.p2align 1
 7472              	.L455:
 340:Veno-Echo.cpp ****             case 13:
 7473              		.loc 19 340 13 view .LVU1989
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 251


 7474              		.loc 19 341 17 view .LVU1990
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
 7475              		.loc 19 341 37 is_stmt 0 view .LVU1991
 7476 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 7477              	.LVL528:
 342:Veno-Echo.cpp ****             break;
 7478              		.loc 19 342 13 is_stmt 1 view .LVU1992
 7479              	.L452:
 7480              	.LBB1452:
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 7481              		.loc 19 350 25 discriminator 1 view .LVU1993
 7482 006e 002D     		cmp	r5, #0
 7483 0070 00F0A885 		beq	.L451
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 7484              		.loc 19 350 25 is_stmt 0 view .LVU1994
 7485 0074 0023     		movs	r3, #0
 7486 0076 013D     		subs	r5, r5, #1
 7487              	.LVL529:
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 7488              		.loc 19 350 25 view .LVU1995
 7489 0078 DFF82080 		ldr	r8, .L568+12
 7490 007c B346     		mov	fp, r6
 7491 007e 0293     		str	r3, [sp, #8]
 7492 0080 25F00103 		bic	r3, r5, #1
 7493 0084 DFF81890 		ldr	r9, .L568+16
 7494 0088 0097     		str	r7, [sp]
 7495 008a 0593     		str	r3, [sp, #20]
 7496 008c 8FE0     		b	.L524
 7497              	.L569:
 7498 008e 00BF     		.align	2
 7499              	.L568:
 7500 0090 89888888 		.word	-2004318071
 7501 0094 00000000 		.word	.LANCHOR82
 7502 0098 00000000 		.word	.LANCHOR81
 7503 009c 00000000 		.word	.LANCHOR97
 7504 00a0 00000000 		.word	.LANCHOR98
 7505              	.LVL530:
 7506              	.L567:
 7507              	.LBB1453:
 7508              	.LBB1454:
 7509              	.LBB1455:
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 7510              		.loc 19 1641 10 is_stmt 1 view .LVU1996
 7511 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 7512              		.loc 19 1642 19 is_stmt 0 view .LVU1997
 7513 00a8 B4EE678A 		vcmp.f32	s16, s15
 7514 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7515 00b0 48BF     		it	mi
 7516 00b2 B0EE678A 		vmovmi.f32	s16, s15
 7517              	.LVL531:
 7518              	.L506:
1646:Veno-Echo.cpp ****     return returnval;   
 7519              		.loc 19 1646 5 is_stmt 1 view .LVU1998
1646:Veno-Echo.cpp ****     return returnval;   
 7520              		.loc 19 1646 5 is_stmt 0 view .LVU1999
 7521              	.LBE1455:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 252


 7522              	.LBE1454:
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 7523              		.loc 19 489 9 is_stmt 1 view .LVU2000
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 7524              		.loc 19 489 42 is_stmt 0 view .LVU2001
 7525 00b6 D848     		ldr	r0, .L570
 7526 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 7527              	.LVL532:
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 7528              		.loc 19 489 21 view .LVU2002
 7529 00bc 11A9     		add	r1, sp, #68
 7530 00be D748     		ldr	r0, .L570+4
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 7531              		.loc 19 489 42 view .LVU2003
 7532 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 7533              		.loc 19 489 21 view .LVU2004
 7534 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 7535              	.LVL533:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7536              		.loc 19 490 9 is_stmt 1 view .LVU2005
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7537              		.loc 19 490 42 is_stmt 0 view .LVU2006
 7538 00c8 D548     		ldr	r0, .L570+8
 7539 00ca B0EE480A 		vmov.f32	s0, s16
 7540 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 7541              	.LVL534:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7542              		.loc 19 490 21 view .LVU2007
 7543 00d2 11A9     		add	r1, sp, #68
 7544 00d4 D348     		ldr	r0, .L570+12
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7545              		.loc 19 490 42 view .LVU2008
 7546 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7547              		.loc 19 490 21 view .LVU2009
 7548 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 7549              	.LVL535:
 493:Veno-Echo.cpp ****         float mixL;
 7550              		.loc 19 493 9 is_stmt 1 view .LVU2010
 494:Veno-Echo.cpp ****         float mixR;
 7551              		.loc 19 494 9 view .LVU2011
 496:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 7552              		.loc 19 496 9 view .LVU2012
 496:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 7553              		.loc 19 496 53 is_stmt 0 view .LVU2013
 7554 00de 09AA     		add	r2, sp, #36
 7555 00e0 08A9     		add	r1, sp, #32
 7556 00e2 D148     		ldr	r0, .L570+16
 7557 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 7558              	.LVL536:
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 7559              		.loc 19 497 53 view .LVU2014
 7560 00e8 08AA     		add	r2, sp, #32
 7561 00ea 09A9     		add	r1, sp, #36
 7562 00ec CE48     		ldr	r0, .L570+16
 496:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 253


 7563              		.loc 19 496 81 view .LVU2015
 7564 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 7565              		.loc 19 497 9 is_stmt 1 view .LVU2016
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 7566              		.loc 19 497 53 is_stmt 0 view .LVU2017
 7567 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 7568              	.LVL537:
 7569              	.LBB1457:
 7570              	.LBB1458:
1639:Veno-Echo.cpp ****     if (input > limit)
 7571              		.loc 19 1639 5 view .LVU2018
 7572 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 7573              	.LBE1458:
 7574              	.LBE1457:
 500:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 7575              		.loc 19 500 38 view .LVU2019
 7576 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 500:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 7577              		.loc 19 500 9 is_stmt 1 view .LVU2020
 7578              	.LVL538:
 7579              	.LBB1461:
 7580              	.LBI1457:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 7581              		.loc 19 1636 7 view .LVU2021
 7582              	.LBB1459:
1638:Veno-Echo.cpp ****     float returnval{};
 7583              		.loc 19 1638 5 view .LVU2022
1639:Veno-Echo.cpp ****     if (input > limit)
 7584              		.loc 19 1639 5 view .LVU2023
 7585 00fe F4EEC77A 		vcmpe.f32	s15, s14
 7586 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7587 0106 00F30285 		bgt	.L536
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 7588              		.loc 19 1641 10 view .LVU2024
 7589 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 7590              		.loc 19 1642 19 is_stmt 0 view .LVU2025
 7591 010e F4EE477A 		vcmp.f32	s15, s14
 7592 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7593 0116 48BF     		it	mi
 7594 0118 F0EE477A 		vmovmi.f32	s15, s14
 7595              	.LVL539:
 7596              	.L508:
1646:Veno-Echo.cpp ****     return returnval;   
 7597              		.loc 19 1646 5 is_stmt 1 view .LVU2026
1646:Veno-Echo.cpp ****     return returnval;   
 7598              		.loc 19 1646 5 is_stmt 0 view .LVU2027
 7599              	.LBE1459:
 7600              	.LBE1461:
 7601              	.LBB1462:
 7602              	.LBB1463:
1639:Veno-Echo.cpp ****     if (input > limit)
 7603              		.loc 19 1639 5 view .LVU2028
 7604 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 7605              	.LBE1463:
 7606              	.LBE1462:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 254


 500:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 7607              		.loc 19 500 27 view .LVU2029
 7608 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 7609              		.loc 19 501 9 is_stmt 1 view .LVU2030
 7610              	.LVL540:
 7611              	.LBB1467:
 7612              	.LBI1462:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 7613              		.loc 19 1636 7 view .LVU2031
 7614              	.LBB1464:
1638:Veno-Echo.cpp ****     float returnval{};
 7615              		.loc 19 1638 5 view .LVU2032
1639:Veno-Echo.cpp ****     if (input > limit)
 7616              		.loc 19 1639 5 view .LVU2033
 7617 0124 B4EEC70A 		vcmpe.f32	s0, s14
 7618 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7619 012c 00F35784 		bgt	.L537
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 7620              		.loc 19 1641 10 view .LVU2034
 7621 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 7622              	.LBE1464:
 7623              	.LBE1467:
 7624              	.LBB1468:
 503:Veno-Echo.cpp **** if(PostFilters)
 7625              		.loc 19 503 1 is_stmt 0 view .LVU2035
 7626 0134 BD4B     		ldr	r3, .L570+20
 7627 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7628              	.LBE1468:
 7629              	.LBB1490:
 7630              	.LBB1465:
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 7631              		.loc 19 1642 19 view .LVU2036
 7632 0138 B4EE470A 		vcmp.f32	s0, s14
 7633 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7634 0140 48BF     		it	mi
 7635 0142 B0EE470A 		vmovmi.f32	s0, s14
 7636              	.LVL541:
1646:Veno-Echo.cpp ****     return returnval;   
 7637              		.loc 19 1646 5 is_stmt 1 view .LVU2037
1646:Veno-Echo.cpp ****     return returnval;   
 7638              		.loc 19 1646 5 is_stmt 0 view .LVU2038
 7639              	.LBE1465:
 7640              	.LBE1490:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 7641              		.loc 19 501 27 view .LVU2039
 7642 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 503:Veno-Echo.cpp **** if(PostFilters)
 7643              		.loc 19 503 1 is_stmt 1 view .LVU2040
 7644              	.LBB1491:
 7645 014a 002B     		cmp	r3, #0
 7646 014c 40F05084 		bne	.L564
 7647              	.LVL542:
 7648              	.L512:
 503:Veno-Echo.cpp **** if(PostFilters)
 7649              		.loc 19 503 1 is_stmt 0 view .LVU2041
 7650              	.LBE1491:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 255


 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 7651              		.loc 19 544 9 is_stmt 1 view .LVU2042
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 7652              		.loc 19 544 19 is_stmt 0 view .LVU2043
 7653 0150 B74B     		ldr	r3, .L570+24
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 7654              		.loc 19 544 9 view .LVU2044
 7655 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 7656              		.loc 19 544 19 view .LVU2045
 7657 0156 93ED007A 		vldr.32	s14, [r3]
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 7658              		.loc 19 544 9 view .LVU2046
 7659 015a B4EEE67A 		vcmpe.f32	s14, s13
 7660 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7661 0162 40F12A84 		bpl	.L558
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 7662              		.loc 19 546 13 is_stmt 1 view .LVU2047
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 7663              		.loc 19 546 34 is_stmt 0 view .LVU2048
 7664 0166 37EE077A 		vadd.f32	s14, s14, s14
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 7665              		.loc 19 546 18 view .LVU2049
 7666 016a 9BED006A 		vldr.32	s12, [fp]
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 7667              		.loc 19 547 18 view .LVU2050
 7668 016e DBED016A 		vldr.32	s13, [fp, #4]
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 7669              		.loc 19 546 18 view .LVU2051
 7670 0172 A7EE276A 		vfma.f32	s12, s14, s15
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 7671              		.loc 19 547 18 view .LVU2052
 7672 0176 E7EE006A 		vfma.f32	s13, s14, s0
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 7673              		.loc 19 546 18 view .LVU2053
 7674 017a F0EE467A 		vmov.f32	s15, s12
 7675              	.LVL543:
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 7676              		.loc 19 547 13 is_stmt 1 view .LVU2054
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 7677              		.loc 19 547 18 is_stmt 0 view .LVU2055
 7678 017e B0EE660A 		vmov.f32	s0, s13
 7679              	.LVL544:
 7680              	.L518:
 561:Veno-Echo.cpp ****         if(mute)
 7681              		.loc 19 561 9 is_stmt 1 view .LVU2056
 7682 0182 AC4B     		ldr	r3, .L570+28
 7683 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7684 0186 002B     		cmp	r3, #0
 7685 0188 00F01084 		beq	.L521
 563:Veno-Echo.cpp ****             out[i] = 0.0f;
 7686              		.loc 19 563 13 view .LVU2057
 563:Veno-Echo.cpp ****             out[i] = 0.0f;
 7687              		.loc 19 563 20 is_stmt 0 view .LVU2058
 7688 018c 0023     		movs	r3, #0
 7689 018e 009A     		ldr	r2, [sp]
 7690 0190 1360     		str	r3, [r2]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 256


 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 7691              		.loc 19 564 13 is_stmt 1 view .LVU2059
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 7692              		.loc 19 564 22 is_stmt 0 view .LVU2060
 7693 0192 5360     		str	r3, [r2, #4]	@ float
 7694              	.L522:
 7695              	.LBE1453:
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 7696              		.loc 19 350 5 is_stmt 1 discriminator 2 view .LVU2061
 7697 0194 009B     		ldr	r3, [sp]
 7698 0196 0BF1080B 		add	fp, fp, #8
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 7699              		.loc 19 350 35 is_stmt 0 discriminator 2 view .LVU2062
 7700 019a 029A     		ldr	r2, [sp, #8]
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 7701              		.loc 19 350 25 discriminator 2 view .LVU2063
 7702 019c 0599     		ldr	r1, [sp, #20]
 7703 019e 0833     		adds	r3, r3, #8
 7704 01a0 8A42     		cmp	r2, r1
 7705 01a2 0093     		str	r3, [sp]
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 7706              		.loc 19 350 35 discriminator 2 view .LVU2064
 7707 01a4 02F10203 		add	r3, r2, #2
 7708              	.LVL545:
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 7709              		.loc 19 350 25 is_stmt 1 discriminator 2 view .LVU2065
 7710 01a8 00F00C85 		beq	.L451
 7711 01ac 0293     		str	r3, [sp, #8]
 7712              	.LVL546:
 7713              	.L524:
 7714              	.LBB1827:
 352:Veno-Echo.cpp ****         UpdateClock(); 
 7715              		.loc 19 352 9 view .LVU2066
 352:Veno-Echo.cpp ****         UpdateClock(); 
 7716              		.loc 19 352 20 is_stmt 0 view .LVU2067
 7717 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 7718              	.LVL547:
 353:Veno-Echo.cpp ****         Update_Mod();
 7719              		.loc 19 353 9 is_stmt 1 view .LVU2068
 7720              	.LBB1492:
 7721              	.LBB1493:
 7722              	.LBB1494:
 7723              	.LBB1495:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 257


  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 258


 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 7724              		.loc 18 174 71 is_stmt 0 view .LVU2069
 7725 01b2 DFF808A3 		ldr	r10, .L570+164
 7726              	.LBE1495:
 7727              	.LBE1494:
 7728              	.LBE1493:
 7729              	.LBE1492:
 353:Veno-Echo.cpp ****         Update_Mod();
 7730              		.loc 19 353 19 view .LVU2070
 7731 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 7732              	.LVL548:
 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 7733              		.loc 19 355 9 is_stmt 1 view .LVU2071
 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 7734              		.loc 19 355 51 is_stmt 0 view .LVU2072
 7735 01ba 9F48     		ldr	r0, .L570+32
 7736 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7737              	.LVL549:
 7738 01c0 0146     		mov	r1, r0
 7739 01c2 9E48     		ldr	r0, .L570+36
 7740              	.LBB1547:
 7741              	.LBB1530:
 7742              	.LBB1513:
 7743              	.LBB1496:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7744              		.loc 18 175 77 view .LVU2073
 7745 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 7746              	.LBE1496:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 259


 7747              	.LBE1513:
 7748              	.LBE1530:
 7749              	.LBE1547:
 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 7750              		.loc 19 355 51 view .LVU2074
 7751 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 7752              	.LVL550:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 7753              		.loc 19 356 51 view .LVU2075
 7754 01cc 9C48     		ldr	r0, .L570+40
 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 7755              		.loc 19 355 51 view .LVU2076
 7756 01ce F0EE40BA 		vmov.f32	s23, s0
 7757              	.LVL551:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 7758              		.loc 19 356 9 is_stmt 1 view .LVU2077
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 7759              		.loc 19 356 51 is_stmt 0 view .LVU2078
 7760 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7761              	.LVL552:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 7762              		.loc 19 356 51 view .LVU2079
 7763 01d6 0146     		mov	r1, r0
 7764 01d8 9A48     		ldr	r0, .L570+44
 7765 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 7766              	.LVL553:
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 7767              		.loc 19 358 44 view .LVU2080
 7768 01de 9A48     		ldr	r0, .L570+48
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 7769              		.loc 19 356 51 view .LVU2081
 7770 01e0 B0EE409A 		vmov.f32	s18, s0
 7771              	.LVL554:
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 7772              		.loc 19 358 9 is_stmt 1 view .LVU2082
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 7773              		.loc 19 358 44 is_stmt 0 view .LVU2083
 7774 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7775              	.LVL555:
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 7776              		.loc 19 358 44 view .LVU2084
 7777 01e8 0146     		mov	r1, r0
 7778 01ea 9848     		ldr	r0, .L570+52
 7779 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 7780              	.LVL556:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7781              		.loc 19 359 44 view .LVU2085
 7782 01f0 9748     		ldr	r0, .L570+56
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 7783              		.loc 19 358 44 view .LVU2086
 7784 01f2 B0EE408A 		vmov.f32	s16, s0
 7785              	.LVL557:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7786              		.loc 19 359 9 is_stmt 1 view .LVU2087
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7787              		.loc 19 359 44 is_stmt 0 view .LVU2088
 7788 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 260


 7789              	.LVL558:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7790              		.loc 19 359 44 view .LVU2089
 7791 01fa 0146     		mov	r1, r0
 7792 01fc 9548     		ldr	r0, .L570+60
 7793 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 7794              	.LVL559:
 7795              	.LBB1548:
 7796              	.LBB1549:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7797              		.loc 10 60 42 view .LVU2090
 7798 0202 9548     		ldr	r0, .L570+64
 7799              	.LBE1549:
 7800              	.LBE1548:
 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 7801              		.loc 19 382 49 view .LVU2091
 7802 0204 954B     		ldr	r3, .L570+68
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7803              		.loc 19 359 44 view .LVU2092
 7804 0206 F0EE407A 		vmov.f32	s15, s0
 7805              	.LVL560:
 362:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 7806              		.loc 19 362 9 is_stmt 1 view .LVU2093
 7807              	.LBB1551:
 7808              	.LBI1548:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7809              		.loc 10 60 17 view .LVU2094
 7810              	.LBB1550:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7811              		.loc 10 60 37 view .LVU2095
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7812              		.loc 10 60 42 is_stmt 0 view .LVU2096
 7813 020a C0ED00BA 		vstr.32	s23, [r0]
 7814              	.LVL561:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7815              		.loc 10 60 42 view .LVU2097
 7816              	.LBE1550:
 7817              	.LBE1551:
 363:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 7818              		.loc 19 363 9 is_stmt 1 view .LVU2098
 7819              	.LBB1552:
 7820              	.LBI1552:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7821              		.loc 10 60 17 view .LVU2099
 7822              	.LBB1553:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7823              		.loc 10 60 37 view .LVU2100
 7824              	.LBE1553:
 7825              	.LBE1552:
 7826              	.LBB1556:
 7827              	.LBB1531:
 7828              	.LBB1514:
 7829              	.LBB1497:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7830              		.loc 18 174 82 is_stmt 0 view .LVU2101
 7831 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 7832              	.LBE1497:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 261


 7833              	.LBE1514:
 7834              	.LBE1531:
 7835              	.LBE1556:
 7836              	.LBB1557:
 7837              	.LBB1554:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7838              		.loc 10 60 42 view .LVU2102
 7839 0212 9348     		ldr	r0, .L570+72
 7840              	.LBE1554:
 7841              	.LBE1557:
 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 7842              		.loc 19 382 49 view .LVU2103
 7843 0214 1D68     		ldr	r5, [r3]
 7844              	.LBB1558:
 7845              	.LBB1555:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7846              		.loc 10 60 42 view .LVU2104
 7847 0216 80ED009A 		vstr.32	s18, [r0]
 7848              	.LVL562:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7849              		.loc 10 60 42 view .LVU2105
 7850              	.LBE1555:
 7851              	.LBE1558:
 365:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 7852              		.loc 19 365 9 is_stmt 1 view .LVU2106
 7853              	.LBB1559:
 7854              	.LBI1559:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7855              		.loc 10 60 17 view .LVU2107
 7856              	.LBB1560:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7857              		.loc 10 60 37 view .LVU2108
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7858              		.loc 10 60 42 is_stmt 0 view .LVU2109
 7859 021a 9248     		ldr	r0, .L570+76
 7860              	.LBE1560:
 7861              	.LBE1559:
 7862              	.LBB1562:
 7863              	.LBB1532:
 7864              	.LBB1515:
 7865              	.LBB1498:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7866              		.loc 18 174 71 view .LVU2110
 7867 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7868              		.loc 18 174 46 view .LVU2111
 7869 0220 9FED91AA 		vldr.32	s20, .L570+80
 7870              	.LBE1498:
 7871              	.LBE1515:
 7872              	.LBE1532:
 7873              	.LBE1562:
 7874              	.LBB1563:
 7875              	.LBB1561:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7876              		.loc 10 60 42 view .LVU2112
 7877 0224 80ED008A 		vstr.32	s16, [r0]
 7878              	.LVL563:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 262


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7879              		.loc 10 60 42 view .LVU2113
 7880              	.LBE1561:
 7881              	.LBE1563:
 366:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 7882              		.loc 19 366 9 is_stmt 1 view .LVU2114
 7883              	.LBB1564:
 7884              	.LBI1564:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7885              		.loc 10 60 17 view .LVU2115
 7886              	.LBB1565:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7887              		.loc 10 60 37 view .LVU2116
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7888              		.loc 10 60 42 is_stmt 0 view .LVU2117
 7889 0228 9048     		ldr	r0, .L570+84
 7890              	.LBE1565:
 7891              	.LBE1564:
 7892              	.LBB1567:
 7893              	.LBB1533:
 7894              	.LBB1516:
 7895              	.LBB1499:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7896              		.loc 18 174 71 view .LVU2118
 7897 022a 93ED00BA 		vldr.32	s22, [r3]
 7898              	.LBE1499:
 7899              	.LBE1516:
 7900              	.LBE1533:
 7901              	.LBE1567:
 7902              	.LBB1568:
 7903              	.LBB1566:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7904              		.loc 10 60 42 view .LVU2119
 7905 022e 80ED008A 		vstr.32	s16, [r0]
 7906              	.LVL564:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7907              		.loc 10 60 42 view .LVU2120
 7908              	.LBE1566:
 7909              	.LBE1568:
 367:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 7910              		.loc 19 367 9 is_stmt 1 view .LVU2121
 7911              	.LBB1569:
 7912              	.LBI1569:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7913              		.loc 10 60 17 view .LVU2122
 7914              	.LBB1570:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7915              		.loc 10 60 37 view .LVU2123
 7916              	.LBE1570:
 7917              	.LBE1569:
 7918              	.LBB1573:
 7919              	.LBB1574:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7920              		.loc 10 60 42 is_stmt 0 view .LVU2124
 7921 0232 8F48     		ldr	r0, .L570+88
 7922              	.LBE1574:
 7923              	.LBE1573:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 263


 7924              	.LBB1577:
 7925              	.LBB1534:
 7926              	.LBB1517:
 7927              	.LBB1500:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7928              		.loc 18 174 46 view .LVU2125
 7929 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 7930              	.LVL565:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7931              		.loc 18 174 71 view .LVU2126
 7932 0238 0493     		str	r3, [sp, #16]
 7933              		.loc 18 175 77 view .LVU2127
 7934 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 7935              	.LBE1500:
 7936              	.LBE1517:
 7937              	.LBE1534:
 7938              	.LBE1577:
 7939              	.LBB1578:
 7940              	.LBB1575:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7941              		.loc 10 60 42 view .LVU2128
 7942 023e 80ED008A 		vstr.32	s16, [r0]
 7943              	.LBE1575:
 7944              	.LBE1578:
 375:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 7945              		.loc 19 375 27 view .LVU2129
 7946 0242 8C4B     		ldr	r3, .L570+92
 7947              	.LBB1579:
 7948              	.LBB1580:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7949              		.loc 10 60 42 view .LVU2130
 7950 0244 8C48     		ldr	r0, .L570+96
 7951              	.LBE1580:
 7952              	.LBE1579:
 375:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 7953              		.loc 19 375 27 view .LVU2131
 7954 0246 1B68     		ldr	r3, [r3]	@ float
 7955              	.LBB1583:
 7956              	.LBB1581:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7957              		.loc 10 60 42 view .LVU2132
 7958 0248 80ED008A 		vstr.32	s16, [r0]
 7959              	.LBE1581:
 7960              	.LBE1583:
 7961              	.LBB1584:
 7962              	.LBB1571:
 7963 024c 8B48     		ldr	r0, .L570+100
 7964              	.LBE1571:
 7965              	.LBE1584:
 7966              	.LBB1585:
 7967              	.LBB1535:
 7968              	.LBB1518:
 7969              	.LBB1501:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7970              		.loc 18 174 103 view .LVU2133
 7971 024e DFED8C9A 		vldr.32	s19, .L570+104
 7972              	.LBE1501:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 264


 7973              	.LBE1518:
 7974              	.LBE1535:
 7975              	.LBE1585:
 7976              	.LBB1586:
 7977              	.LBB1572:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7978              		.loc 10 60 42 view .LVU2134
 7979 0252 C0ED007A 		vstr.32	s15, [r0]
 7980              	.LVL566:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7981              		.loc 10 60 42 view .LVU2135
 7982              	.LBE1572:
 7983              	.LBE1586:
 368:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 7984              		.loc 19 368 9 is_stmt 1 view .LVU2136
 7985              	.LBB1587:
 7986              	.LBI1587:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7987              		.loc 10 60 17 view .LVU2137
 7988              	.LBB1588:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7989              		.loc 10 60 37 view .LVU2138
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7990              		.loc 10 60 42 is_stmt 0 view .LVU2139
 7991 0256 8B48     		ldr	r0, .L570+108
 7992              	.LBE1588:
 7993              	.LBE1587:
 7994              	.LBB1590:
 7995              	.LBB1536:
 7996              	.LBB1519:
 7997              	.LBB1502:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7998              		.loc 18 174 98 view .LVU2140
 7999 0258 9FED8B9A 		vldr.32	s18, .L570+112
 8000              	.LVL567:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8001              		.loc 18 174 98 view .LVU2141
 8002              	.LBE1502:
 8003              	.LBE1519:
 8004              	.LBE1536:
 8005              	.LBE1590:
 8006              	.LBB1591:
 8007              	.LBB1589:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8008              		.loc 10 60 42 view .LVU2142
 8009 025c C0ED007A 		vstr.32	s15, [r0]
 8010              	.LVL568:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8011              		.loc 10 60 42 view .LVU2143
 8012              	.LBE1589:
 8013              	.LBE1591:
 370:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 8014              		.loc 19 370 9 is_stmt 1 view .LVU2144
 8015              	.LBB1592:
 8016              	.LBI1573:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8017              		.loc 10 60 17 view .LVU2145
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 265


 8018              	.LBB1576:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8019              		.loc 10 60 37 view .LVU2146
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8020              		.loc 10 60 37 is_stmt 0 view .LVU2147
 8021              	.LBE1576:
 8022              	.LBE1592:
 371:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 8023              		.loc 19 371 9 is_stmt 1 view .LVU2148
 8024              	.LBB1593:
 8025              	.LBI1579:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8026              		.loc 10 60 17 view .LVU2149
 8027              	.LBB1582:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8028              		.loc 10 60 37 view .LVU2150
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8029              		.loc 10 60 37 is_stmt 0 view .LVU2151
 8030              	.LBE1582:
 8031              	.LBE1593:
 372:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 8032              		.loc 19 372 9 is_stmt 1 view .LVU2152
 8033              	.LBB1594:
 8034              	.LBI1594:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8035              		.loc 10 60 17 view .LVU2153
 8036              	.LBB1595:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8037              		.loc 10 60 37 view .LVU2154
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8038              		.loc 10 60 42 is_stmt 0 view .LVU2155
 8039 0260 8A48     		ldr	r0, .L570+116
 8040              	.LBE1595:
 8041              	.LBE1594:
 8042              	.LBB1597:
 8043              	.LBB1537:
 8044              	.LBB1520:
 8045              	.LBB1503:
 162:delayline_reverse.h **** 
 8046              		.loc 18 162 23 view .LVU2156
 8047 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 8048              	.LBE1503:
 8049              	.LBE1520:
 8050              	.LBE1537:
 8051              	.LBE1597:
 8052              	.LBB1598:
 8053              	.LBB1596:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8054              		.loc 10 60 42 view .LVU2157
 8055 0266 C0ED007A 		vstr.32	s15, [r0]
 8056              	.LVL569:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8057              		.loc 10 60 42 view .LVU2158
 8058              	.LBE1596:
 8059              	.LBE1598:
 373:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 8060              		.loc 19 373 9 is_stmt 1 view .LVU2159
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 266


 8061              	.LBB1599:
 8062              	.LBI1599:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8063              		.loc 10 60 17 view .LVU2160
 8064              	.LBB1600:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8065              		.loc 10 60 37 view .LVU2161
 8066              	.LBE1600:
 8067              	.LBE1599:
 8068              	.LBB1603:
 8069              	.LBB1538:
 8070              	.LBB1521:
 8071              	.LBB1504:
 162:delayline_reverse.h **** 
 8072              		.loc 18 162 11 is_stmt 0 view .LVU2162
 8073 026a 05EB8702 		add	r2, r5, r7, lsl #2
 8074              	.LBE1504:
 8075              	.LBE1521:
 8076              	.LBE1538:
 8077              	.LBE1603:
 8078              	.LBB1604:
 8079              	.LBB1601:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8080              		.loc 10 60 42 view .LVU2163
 8081 026e 8848     		ldr	r0, .L570+120
 8082              	.LBE1601:
 8083              	.LBE1604:
 8084              	.LBB1605:
 8085              	.LBB1539:
 8086              	.LBB1522:
 8087              	.LBB1505:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8088              		.loc 18 161 11 view .LVU2164
 8089 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 8090              		.loc 18 162 11 view .LVU2165
 8091 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 8092              	.LBE1505:
 8093              	.LBE1522:
 8094              	.LBE1539:
 8095              	.LBE1605:
 8096              	.LBB1606:
 8097              	.LBB1607:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8098              		.loc 10 60 42 view .LVU2166
 8099 0278 864A     		ldr	r2, .L570+124
 8100              	.LBE1607:
 8101              	.LBE1606:
 8102              	.LBB1609:
 8103              	.LBB1602:
 8104 027a C0ED007A 		vstr.32	s15, [r0]
 8105              	.LVL570:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8106              		.loc 10 60 42 view .LVU2167
 8107              	.LBE1602:
 8108              	.LBE1609:
 375:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 267


 8109              		.loc 19 375 9 is_stmt 1 view .LVU2168
 8110              	.LBB1610:
 8111              	.LBI1606:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8112              		.loc 10 60 17 view .LVU2169
 8113              	.LBB1608:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8114              		.loc 10 60 37 view .LVU2170
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8115              		.loc 10 60 42 is_stmt 0 view .LVU2171
 8116 027e 1360     		str	r3, [r2]	@ float
 8117              	.LVL571:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8118              		.loc 10 60 42 view .LVU2172
 8119              	.LBE1608:
 8120              	.LBE1610:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8121              		.loc 19 376 9 is_stmt 1 view .LVU2173
 8122              	.LBB1611:
 8123              	.LBI1611:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8124              		.loc 10 60 17 view .LVU2174
 8125              	.LBB1612:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8126              		.loc 10 60 37 view .LVU2175
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8127              		.loc 10 60 42 is_stmt 0 view .LVU2176
 8128 0280 854A     		ldr	r2, .L570+128
 8129              	.LBE1612:
 8130              	.LBE1611:
 8131              	.LBB1614:
 8132              	.LBB1540:
 8133              	.LBB1523:
 8134              	.LBB1506:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8135              		.loc 18 161 11 view .LVU2177
 8136 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 8137              	.LBE1506:
 8138              	.LBE1523:
 8139              	.LBE1540:
 8140              	.LBE1614:
 8141              	.LBB1615:
 8142              	.LBB1613:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8143              		.loc 10 60 42 view .LVU2178
 8144 0286 1360     		str	r3, [r2]	@ float
 8145              	.LVL572:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8146              		.loc 10 60 42 view .LVU2179
 8147              	.LBE1613:
 8148              	.LBE1615:
 378:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 8149              		.loc 19 378 9 is_stmt 1 view .LVU2180
 8150              	.LBB1616:
 8151              	.LBI1616:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8152              		.loc 10 60 17 view .LVU2181
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 268


 8153              	.LBB1617:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8154              		.loc 10 60 37 view .LVU2182
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8155              		.loc 10 60 42 is_stmt 0 view .LVU2183
 8156 0288 844A     		ldr	r2, .L570+132
 8157 028a 1360     		str	r3, [r2]	@ float
 8158              	.LVL573:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8159              		.loc 10 60 42 view .LVU2184
 8160              	.LBE1617:
 8161              	.LBE1616:
 379:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 8162              		.loc 19 379 9 is_stmt 1 view .LVU2185
 8163              	.LBB1618:
 8164              	.LBI1618:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8165              		.loc 10 60 17 view .LVU2186
 8166              	.LBB1619:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8167              		.loc 10 60 37 view .LVU2187
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8168              		.loc 10 60 42 is_stmt 0 view .LVU2188
 8169 028c 844A     		ldr	r2, .L570+136
 8170 028e 1360     		str	r3, [r2]	@ float
 8171              	.LVL574:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8172              		.loc 10 60 42 view .LVU2189
 8173              	.LBE1619:
 8174              	.LBE1618:
 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 8175              		.loc 19 382 9 is_stmt 1 view .LVU2190
 8176              	.LBB1620:
 8177              	.LBI1492:
  79:Veno-Echo.cpp ****     float Read()
 8178              		.loc 19 79 11 view .LVU2191
 8179              	.LBB1541:
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
 8180              		.loc 19 82 9 view .LVU2192
 8181              	.LBB1524:
 8182              	.LBI1494:
 159:delayline_reverse.h ****     {
 8183              		.loc 18 159 20 view .LVU2193
 8184              	.LBB1507:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8185              		.loc 18 174 46 is_stmt 0 view .LVU2194
 8186 0290 FFF7FEFF 		bl	sinf
 8187              	.LVL575:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8188              		.loc 18 174 46 view .LVU2195
 8189 0294 F0EE40BA 		vmov.f32	s23, s0
 8190              	.LVL576:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8191              		.loc 18 174 103 view .LVU2196
 8192 0298 2BEE290A 		vmul.f32	s0, s22, s19
 8193 029c FFF7FEFF 		bl	sinf
 8194              	.LVL577:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 269


 8195 02a0 B0EE408A 		vmov.f32	s16, s0
 8196              	.LVL578:
 8197              		.loc 18 175 46 view .LVU2197
 8198 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 8199 02a8 FFF7FEFF 		bl	sinf
 8200              	.LVL579:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8201              		.loc 18 174 98 view .LVU2198
 8202 02ac 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8203              		.loc 18 174 82 view .LVU2199
 8204 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 8205              	.LVL580:
 8206              		.loc 18 175 46 view .LVU2200
 8207 02b4 F0EE40BA 		vmov.f32	s23, s0
 8208              		.loc 18 175 112 view .LVU2201
 8209 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 8210 02bc FFF7FEFF 		bl	sinf
 8211              	.LVL581:
 8212              		.loc 18 175 107 view .LVU2202
 8213 02c0 60EE097A 		vmul.f32	s15, s0, s18
 8214              	.LBE1507:
 8215              	.LBE1524:
 8216              	.LBE1541:
 8217              	.LBE1620:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8218              		.loc 19 383 49 view .LVU2203
 8219 02c4 774B     		ldr	r3, .L570+140
 8220              	.LBB1621:
 8221              	.LBB1542:
 8222              	.LBB1525:
 8223              	.LBB1508:
 8224              		.loc 18 175 91 view .LVU2204
 8225 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 8226              	.LVL582:
 8227              		.loc 18 175 91 view .LVU2205
 8228              	.LBE1508:
 8229              	.LBE1525:
 8230              	.LBE1542:
 8231              	.LBE1621:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8232              		.loc 19 383 49 view .LVU2206
 8233 02ca 1C68     		ldr	r4, [r3]
 8234              	.LBB1622:
 8235              	.LBB1543:
 8236              	.LBB1526:
 8237              	.LBB1509:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8238              		.loc 18 174 9 view .LVU2207
 8239 02cc 38EE088A 		vadd.f32	s16, s16, s16
 8240              	.LVL583:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8241              		.loc 18 174 9 view .LVU2208
 8242              	.LBE1509:
 8243              	.LBE1526:
 8244              	.LBE1543:
 8245              	.LBE1622:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 270


 8246              	.LBB1623:
 8247              	.LBB1624:
 8248              	.LBB1625:
 8249              	.LBB1626:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8250              		.loc 18 174 71 view .LVU2209
 8251 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 8252              		.loc 18 162 11 view .LVU2210
 8253 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8254              		.loc 18 174 71 view .LVU2211
 8255 02d8 91ED00CA 		vldr.32	s24, [r1]
 8256              	.LBE1626:
 8257              	.LBE1625:
 8258              	.LBE1624:
 8259              	.LBE1623:
 8260              	.LBB1657:
 8261              	.LBB1544:
 8262              	.LBB1527:
 8263              	.LBB1510:
 8264              		.loc 18 175 9 view .LVU2212
 8265 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 8266              	.LVL584:
 8267              		.loc 18 175 9 view .LVU2213
 8268              	.LBE1510:
 8269              	.LBE1527:
 8270              	.LBE1544:
 8271              	.LBE1657:
 8272              	.LBB1658:
 8273              	.LBB1647:
 8274              	.LBB1637:
 8275              	.LBB1627:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8276              		.loc 18 161 11 view .LVU2214
 8277 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 8278              		.loc 18 162 11 view .LVU2215
 8279 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 8280              		.loc 18 175 77 view .LVU2216
 8281 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8282              		.loc 18 174 46 view .LVU2217
 8283 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8284              		.loc 18 161 11 view .LVU2218
 8285 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 8286              	.LBE1627:
 8287              	.LBE1637:
 8288              	.LBE1647:
 8289              	.LBE1658:
 8290              	.LBB1659:
 8291              	.LBB1545:
 8292              	.LBB1528:
 8293              	.LBB1511:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 271


 8294              		.loc 18 177 44 view .LVU2219
 8295 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 8296              	.LVL585:
 8297              		.loc 18 177 44 view .LVU2220
 8298              	.LBE1511:
 8299              	.LBE1528:
 8300              	.LBE1545:
 8301              	.LBE1659:
 8302              	.LBB1660:
 8303              	.LBB1648:
 8304              	.LBB1638:
 8305              	.LBB1628:
 162:delayline_reverse.h **** 
 8306              		.loc 18 162 11 view .LVU2221
 8307 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8308              		.loc 18 174 71 view .LVU2222
 8309 02fc 0391     		str	r1, [sp, #12]
 8310              	.LBE1628:
 8311              	.LBE1638:
 8312              	.LBE1648:
 8313              	.LBE1660:
 8314              	.LBB1661:
 8315              	.LBB1546:
 8316              	.LBB1529:
 8317              	.LBB1512:
 8318              		.loc 18 177 54 view .LVU2223
 8319 02fe EDEE887A 		vfma.f32	s15, s27, s16
 8320              	.LVL586:
 8321              		.loc 18 177 54 view .LVU2224
 8322              	.LBE1512:
 8323              	.LBE1529:
  83:Veno-Echo.cpp ****         return read;
 8324              		.loc 19 83 9 is_stmt 1 view .LVU2225
  83:Veno-Echo.cpp ****         return read;
 8325              		.loc 19 83 9 is_stmt 0 view .LVU2226
 8326              	.LBE1546:
 8327              	.LBE1661:
 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 8328              		.loc 19 382 50 view .LVU2227
 8329 0302 CDED067A 		vstr.32	s15, [sp, #24]
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8330              		.loc 19 383 9 is_stmt 1 view .LVU2228
 8331              	.LVL587:
 8332              	.LBB1662:
 8333              	.LBI1623:
  79:Veno-Echo.cpp ****     float Read()
 8334              		.loc 19 79 11 view .LVU2229
 8335              	.LBB1649:
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
 8336              		.loc 19 82 9 view .LVU2230
 8337              	.LBB1639:
 8338              	.LBI1625:
 159:delayline_reverse.h ****     {
 8339              		.loc 18 159 20 view .LVU2231
 8340              	.LBB1629:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 272


 8341              		.loc 18 174 46 is_stmt 0 view .LVU2232
 8342 0306 FFF7FEFF 		bl	sinf
 8343              	.LVL588:
 8344 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8345              		.loc 18 174 103 view .LVU2233
 8346 030e 2CEE290A 		vmul.f32	s0, s24, s19
 8347 0312 FFF7FEFF 		bl	sinf
 8348              	.LVL589:
 8349 0316 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 8350              		.loc 18 175 46 view .LVU2234
 8351 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 8352 031e FFF7FEFF 		bl	sinf
 8353              	.LVL590:
 8354 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 8355              		.loc 18 175 112 view .LVU2235
 8356 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8357              		.loc 18 174 98 view .LVU2236
 8358 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 8359              		.loc 18 175 46 view .LVU2237
 8360 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 8361              		.loc 18 175 112 view .LVU2238
 8362 0332 FFF7FEFF 		bl	sinf
 8363              	.LVL591:
 8364              	.LBE1629:
 8365              	.LBE1639:
 8366              	.LBE1649:
 8367              	.LBE1662:
 8368              	.LBB1663:
 8369              	.LBB1664:
 8370              	.LBB1665:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8371              		.loc 18 98 38 view .LVU2239
 8372 0336 5C48     		ldr	r0, .L570+144
 8373              	.LBE1665:
 8374              	.LBE1664:
 8375              	.LBE1663:
 8376              	.LBB1688:
 8377              	.LBB1650:
 8378              	.LBB1640:
 8379              	.LBB1630:
 175:delayline_reverse.h **** 
 8380              		.loc 18 175 107 view .LVU2240
 8381 0338 60EE097A 		vmul.f32	s15, s0, s18
 8382              	.LBE1630:
 8383              	.LBE1640:
 8384              	.LBE1650:
 8385              	.LBE1688:
 8386              	.LBB1689:
 8387              	.LBB1677:
 8388              	.LBB1666:
  92:delayline_reverse.h ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 273


 8389              		.loc 18 92 57 view .LVU2241
 8390 033c 5B4B     		ldr	r3, .L570+148
 8391              	.LBE1666:
 8392              	.LBE1677:
 8393              	.LBE1689:
 8394              	.LBB1690:
 8395              	.LBB1651:
 8396              	.LBB1641:
 8397              	.LBB1631:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8398              		.loc 18 174 82 view .LVU2242
 8399 033e ABEEA88A 		vfma.f32	s16, s23, s17
 8400              	.LVL592:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8401              		.loc 18 174 82 view .LVU2243
 8402              	.LBE1631:
 8403              	.LBE1641:
 8404              	.LBE1651:
 8405              	.LBE1690:
 8406              	.LBB1691:
 8407              	.LBB1678:
 8408              	.LBB1667:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8409              		.loc 18 98 38 view .LVU2244
 8410 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8411              		.loc 18 90 15 view .LVU2245
 8412 0344 D5F804E0 		ldr	lr, [r5, #4]
 8413              	.LBE1667:
 8414              	.LBE1678:
 8415              	.LBE1691:
 8416              	.LBB1692:
 8417              	.LBB1652:
 8418              	.LBB1642:
 8419              	.LBB1632:
 175:delayline_reverse.h **** 
 8420              		.loc 18 175 91 view .LVU2246
 8421 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 8422              	.LVL593:
 175:delayline_reverse.h **** 
 8423              		.loc 18 175 91 view .LVU2247
 8424              	.LBE1632:
 8425              	.LBE1642:
 8426              	.LBE1652:
 8427              	.LBE1692:
 8428              	.LBB1693:
 8429              	.LBB1679:
 8430              	.LBB1668:
  99:delayline_reverse.h ****  
 8431              		.loc 18 99 38 view .LVU2248
 8432 034c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8433              		.loc 18 98 50 view .LVU2249
 8434 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 8435              		.loc 18 92 57 view .LVU2250
 8436 0352 DFF86CC1 		ldr	ip, .L570+168
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 274


  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8437              		.loc 18 90 9 view .LVU2251
 8438 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8439              		.loc 18 98 50 view .LVU2252
 8440 035a 890C     		lsrs	r1, r1, #18
 8441              	.LBE1668:
 8442              	.LBE1679:
 8443              	.LBE1693:
 8444              	.LBB1694:
 8445              	.LBB1653:
 8446              	.LBB1643:
 8447              	.LBB1633:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8448              		.loc 18 174 9 view .LVU2253
 8449 035c 38EE088A 		vadd.f32	s16, s16, s16
 8450              	.LVL594:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8451              		.loc 18 174 9 view .LVU2254
 8452              	.LBE1633:
 8453              	.LBE1643:
 8454              	.LBE1653:
 8455              	.LBE1694:
 8456              	.LBB1695:
 8457              	.LBB1680:
 8458              	.LBB1669:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8459              		.loc 18 98 50 view .LVU2255
 8460 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 8461              		.loc 18 92 45 view .LVU2256
 8462 0364 524E     		ldr	r6, .L570+152
 8463              	.LBE1669:
 8464              	.LBE1680:
 8465              	.LBE1695:
 8466              	.LBB1696:
 8467              	.LBB1654:
 8468              	.LBB1644:
 8469              	.LBB1634:
 175:delayline_reverse.h **** 
 8470              		.loc 18 175 9 view .LVU2257
 8471 0366 37EEA70A 		vadd.f32	s0, s15, s15
 8472              	.LVL595:
 175:delayline_reverse.h **** 
 8473              		.loc 18 175 9 view .LVU2258
 8474              	.LBE1634:
 8475              	.LBE1644:
 8476              	.LBE1654:
 8477              	.LBE1696:
 386:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 8478              		.loc 19 386 26 view .LVU2259
 8479 036a DBED007A 		vldr.32	s15, [fp]
 8480              	.LBB1697:
 8481              	.LBB1681:
 8482              	.LBB1670:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8483              		.loc 18 98 50 view .LVU2260
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 275


 8484 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 8485              		.loc 18 92 45 view .LVU2261
 8486 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 8487              		.loc 18 99 50 view .LVU2262
 8488 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 8489              		.loc 18 92 57 view .LVU2263
 8490 0376 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8491              		.loc 18 98 9 view .LVU2264
 8492 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 8493              		.loc 18 99 50 view .LVU2265
 8494 037c 4FEA9E4E 		lsr	lr, lr, #18
 8495              	.LBE1670:
 8496              	.LBE1681:
 8497              	.LBE1697:
 8498              	.LBB1698:
 8499              	.LBB1655:
 8500              	.LBB1645:
 8501              	.LBB1635:
 8502              		.loc 18 177 44 view .LVU2266
 8503 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 8504              	.LVL596:
 8505              		.loc 18 177 44 view .LVU2267
 8506              	.LBE1635:
 8507              	.LBE1645:
 8508              	.LBE1655:
 8509              	.LBE1698:
 8510              	.LBB1699:
 8511              	.LBB1682:
 8512              	.LBB1671:
  92:delayline_reverse.h ****         
 8513              		.loc 18 92 57 view .LVU2268
 8514 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 8515              		.loc 18 99 50 view .LVU2269
 8516 0386 0CFB1E00 		mls	r0, ip, lr, r0
 8517              	.LBE1671:
 8518              	.LBE1682:
 8519              	.LBE1699:
 8520              	.LBB1700:
 8521              	.LBB1656:
 8522              	.LBB1646:
 8523              	.LBB1636:
 8524              		.loc 18 177 54 view .LVU2270
 8525 038a ACEE880A 		vfma.f32	s0, s25, s16
 8526              	.LVL597:
 8527              		.loc 18 177 54 view .LVU2271
 8528              	.LBE1636:
 8529              	.LBE1646:
  83:Veno-Echo.cpp ****         return read;
 8530              		.loc 19 83 9 is_stmt 1 view .LVU2272
  83:Veno-Echo.cpp ****         return read;
 8531              		.loc 19 83 9 is_stmt 0 view .LVU2273
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 276


 8532              	.LBE1656:
 8533              	.LBE1700:
 8534              	.LBB1701:
 8535              	.LBB1683:
 8536              	.LBB1672:
  92:delayline_reverse.h ****         
 8537              		.loc 18 92 57 view .LVU2274
 8538 038e 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 8539              		.loc 18 95 43 view .LVU2275
 8540 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8541              		.loc 18 90 9 view .LVU2276
 8542 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 8543              		.loc 18 95 43 view .LVU2277
 8544 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 8545              		.loc 18 101 36 view .LVU2278
 8546 039c DFF824A1 		ldr	r10, .L570+172
  95:delayline_reverse.h **** 
 8547              		.loc 18 95 43 view .LVU2279
 8548 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 8549              		.loc 18 101 36 view .LVU2280
 8550 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 8551              		.loc 18 101 45 view .LVU2281
 8552 03a6 07F1FF3A 		add	r10, r7, #-1
 8553              	.LBE1672:
 8554              	.LBE1683:
 8555              	.LBE1701:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8556              		.loc 19 383 50 view .LVU2282
 8557 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 386:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 8558              		.loc 19 386 9 is_stmt 1 view .LVU2283
 8559              	.LVL598:
 8560              	.LBB1702:
 8561              	.LBI1663:
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
 8562              		.loc 19 92 10 view .LVU2284
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
 8563              		.loc 19 92 10 is_stmt 0 view .LVU2285
 8564              	.LBE1702:
 8565              	.LBE1827:
 8566              	.LBE1452:
  94:Veno-Echo.cpp ****         del -> Write(in);
 8567              		.loc 19 94 9 is_stmt 1 view .LVU2286
 8568              	.LBB1839:
 8569              	.LBB1828:
 8570              	.LBB1703:
 8571              	.LBB1684:
 8572              	.LBI1664:
  88:delayline_reverse.h ****     {
 8573              		.loc 18 88 17 view .LVU2287
 8574              	.LBB1673:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 277


  99:delayline_reverse.h ****  
 8575              		.loc 18 99 9 is_stmt 0 view .LVU2288
 8576 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 8577              		.loc 18 95 54 view .LVU2289
 8578 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 8579              		.loc 18 101 45 view .LVU2290
 8580 03b6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 8581              		.loc 18 95 54 view .LVU2291
 8582 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 8583              		.loc 18 92 9 view .LVU2292
 8584 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 8585              		.loc 18 101 9 view .LVU2293
 8586 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 8587              		.loc 18 95 9 view .LVU2294
 8588 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 8589              		.loc 18 101 9 view .LVU2295
 8590 03c4 40F2CF82 		bls	.L470
 103:delayline_reverse.h ****             {
 8591              		.loc 18 103 17 view .LVU2296
 8592 03c8 3A49     		ldr	r1, .L570+156
 103:delayline_reverse.h ****             {
 8593              		.loc 18 103 13 view .LVU2297
 8594 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 8595              		.loc 18 103 17 view .LVU2298
 8596 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 8597              		.loc 18 103 13 view .LVU2299
 8598 03ce 0028     		cmp	r0, #0
 8599 03d0 40F0CF82 		bne	.L561
 107:delayline_reverse.h ****                 {
 8600              		.loc 18 107 21 view .LVU2300
 8601 03d4 3848     		ldr	r0, .L570+160
 105:delayline_reverse.h ****                 
 8602              		.loc 18 105 17 view .LVU2301
 8603 03d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 8604              		.loc 18 110 45 view .LVU2302
 8605 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 8606              		.loc 18 107 17 view .LVU2303
 8607 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 8608              		.loc 18 107 21 view .LVU2304
 8609 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 8610              		.loc 18 105 17 view .LVU2305
 8611 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 8612              		.loc 18 107 17 view .LVU2306
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 278


 8613 03e0 002E     		cmp	r6, #0
 8614 03e2 40F0EB83 		bne	.L472
 110:delayline_reverse.h ****                 }
 8615              		.loc 18 110 21 view .LVU2307
 8616 03e6 EB60     		str	r3, [r5, #12]
 8617              	.L473:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8618              		.loc 18 130 45 view .LVU2308
 8619 03e8 07EE90EA 		vmov	s15, lr	@ int
 8620              	.LVL599:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8621              		.loc 18 130 45 view .LVU2309
 8622 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 8623 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 8624 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8625              		.loc 18 130 37 view .LVU2310
 8626 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 8627              		.loc 18 131 17 view .LVU2311
 8628 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 8629 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8630 0404 40F39183 		ble	.L562
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8631              		.loc 18 133 21 view .LVU2312
 8632 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 8633              		.loc 18 134 21 view .LVU2313
 8634 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8635              		.loc 18 133 21 view .LVU2314
 8636 040c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 8637              		.loc 18 135 21 view .LVU2315
 8638 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 8639              		.loc 18 134 21 view .LVU2316
 8640 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 8641              		.loc 18 135 21 view .LVU2317
 8642 0414 0370     		strb	r3, [r0]
 8643 0416 57E0     		b	.L571
 8644              	.L572:
 8645              		.align	2
 8646              	.L570:
 8647 0418 00000000 		.word	.LANCHOR75
 8648 041c 00000000 		.word	.LANCHOR0
 8649 0420 00000000 		.word	.LANCHOR76
 8650 0424 00000000 		.word	.LANCHOR1
 8651 0428 00000000 		.word	.LANCHOR35
 8652 042c 00000000 		.word	.LANCHOR43
 8653 0430 00000000 		.word	.LANCHOR29
 8654 0434 00000000 		.word	.LANCHOR80
 8655 0438 00000000 		.word	.LANCHOR63
 8656 043c 00000000 		.word	.LANCHOR69
 8657 0440 00000000 		.word	.LANCHOR64
 8658 0444 00000000 		.word	.LANCHOR70
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 279


 8659 0448 00000000 		.word	.LANCHOR62
 8660 044c 00000000 		.word	.LANCHOR72
 8661 0450 00000000 		.word	.LANCHOR61
 8662 0454 00000000 		.word	.LANCHOR71
 8663 0458 00000000 		.word	.LANCHOR73
 8664 045c 00000000 		.word	.LANCHOR2
 8665 0460 00000000 		.word	.LANCHOR74
 8666 0464 00000000 		.word	.LANCHOR83
 8667 0468 DB0FC93F 		.word	1070141403
 8668 046c 00000000 		.word	.LANCHOR84
 8669 0470 00000000 		.word	.LANCHOR87
 8670 0474 00000000 		.word	.LANCHOR42
 8671 0478 00000000 		.word	.LANCHOR88
 8672 047c 00000000 		.word	.LANCHOR85
 8673 0480 E4CB9640 		.word	1083624420
 8674 0484 00000000 		.word	.LANCHOR86
 8675 0488 0000803D 		.word	1031798784
 8676 048c 00000000 		.word	.LANCHOR89
 8677 0490 00000000 		.word	.LANCHOR90
 8678 0494 00000000 		.word	.LANCHOR91
 8679 0498 00000000 		.word	.LANCHOR92
 8680 049c 00000000 		.word	.LANCHOR93
 8681 04a0 00000000 		.word	.LANCHOR94
 8682 04a4 00000000 		.word	.LANCHOR3
 8683 04a8 BF270900 		.word	599999
 8684 04ac 851DD96F 		.word	1876499845
 8685 04b0 C1270900 		.word	600001
 8686 04b4 249F2400 		.word	2400036
 8687 04b8 1C9F2400 		.word	2400028
 8688 04bc 209F2400 		.word	2400032
 8689 04c0 C0270900 		.word	600000
 8690 04c4 189F2400 		.word	2400024
 8691              	.L571:
 8692              	.LVL600:
 8693              	.L476:
 135:delayline_reverse.h ****                 }
 8694              		.loc 18 135 21 view .LVU2318
 8695              	.LBE1673:
 8696              	.LBE1684:
 8697              	.LBE1703:
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 8698              		.loc 19 387 9 is_stmt 1 view .LVU2319
 8699              	.LBB1704:
 8700              	.LBB1705:
 8701              	.LBB1706:
  95:delayline_reverse.h **** 
 8702              		.loc 18 95 45 is_stmt 0 view .LVU2320
 8703 04c8 2169     		ldr	r1, [r4, #16]
 8704 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 8705              		.loc 18 95 43 view .LVU2321
 8706 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8707              		.loc 18 90 15 view .LVU2322
 8708 04d0 6568     		ldr	r5, [r4, #4]
 8709 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 280


 8710              		.loc 18 95 43 view .LVU2323
 8711 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 8712              		.loc 18 92 45 view .LVU2324
 8713 04d8 B14F     		ldr	r7, .L573
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8714              		.loc 18 90 9 view .LVU2325
 8715 04da 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8716              		.loc 18 98 38 view .LVU2326
 8717 04de B14B     		ldr	r3, .L573+4
  95:delayline_reverse.h **** 
 8718              		.loc 18 95 43 view .LVU2327
 8719 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 8720              		.loc 18 92 45 view .LVU2328
 8721 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 8722              		.loc 18 101 45 view .LVU2329
 8723 04e4 01F1FF3C 		add	ip, r1, #-1
 8724              	.LBE1706:
 8725              	.LBE1705:
 8726              	.LBE1704:
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 8727              		.loc 19 387 26 view .LVU2330
 8728 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 8729              	.LVL601:
 8730              	.LBB1715:
 8731              	.LBI1704:
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
 8732              		.loc 19 92 10 is_stmt 1 view .LVU2331
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
 8733              		.loc 19 92 10 is_stmt 0 view .LVU2332
 8734              	.LBE1715:
 8735              	.LBE1828:
 8736              	.LBE1839:
  94:Veno-Echo.cpp ****         del -> Write(in);
 8737              		.loc 19 94 9 is_stmt 1 view .LVU2333
 8738              	.LBB1840:
 8739              	.LBB1829:
 8740              	.LBB1716:
 8741              	.LBB1711:
 8742              	.LBI1705:
  88:delayline_reverse.h ****     {
 8743              		.loc 18 88 17 view .LVU2334
 8744              	.LBB1707:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8745              		.loc 18 98 38 is_stmt 0 view .LVU2335
 8746 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 8747 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 8748              		.loc 18 99 38 view .LVU2336
 8749 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 8750              		.loc 18 92 57 view .LVU2337
 8751 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 281


 8752              		.loc 18 95 54 view .LVU2338
 8753 04fa B2FBF1F0 		udiv	r0, r2, r1
 8754 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 8755              		.loc 18 101 36 view .LVU2339
 8756 0502 A949     		ldr	r1, .L573+8
  92:delayline_reverse.h ****         
 8757              		.loc 18 92 57 view .LVU2340
 8758 0504 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 8759              		.loc 18 101 36 view .LVU2341
 8760 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 8761              		.loc 18 92 57 view .LVU2342
 8762 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8763              		.loc 18 90 9 view .LVU2343
 8764 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 8765              		.loc 18 101 36 view .LVU2344
 8766 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 8767              		.loc 18 92 57 view .LVU2345
 8768 0514 A3FB0762 		umull	r6, r2, r3, r7
 8769 0518 DFF8C8E2 		ldr	lr, .L573+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8770              		.loc 18 98 50 view .LVU2346
 8771 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 8772              		.loc 18 99 50 view .LVU2347
 8773 0520 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 8774              		.loc 18 101 45 view .LVU2348
 8775 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 8776              		.loc 18 92 57 view .LVU2349
 8777 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 8778              		.loc 18 95 9 view .LVU2350
 8779 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8780              		.loc 18 98 50 view .LVU2351
 8781 052a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 8782              		.loc 18 101 45 view .LVU2352
 8783 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 8784              		.loc 18 99 50 view .LVU2353
 8785 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 8786              		.loc 18 92 57 view .LVU2354
 8787 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8788              		.loc 18 98 50 view .LVU2355
 8789 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 8790              		.loc 18 101 9 view .LVU2356
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 282


 8791 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 8792              		.loc 18 99 50 view .LVU2357
 8793 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8794              		.loc 18 98 9 view .LVU2358
 8795 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 8796              		.loc 18 99 9 view .LVU2359
 8797 0544 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 8798              		.loc 18 101 9 view .LVU2360
 8799 0546 40F2EB81 		bls	.L480
 103:delayline_reverse.h ****             {
 8800              		.loc 18 103 17 view .LVU2361
 8801 054a 9849     		ldr	r1, .L573+12
 103:delayline_reverse.h ****             {
 8802              		.loc 18 103 13 view .LVU2362
 8803 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 8804              		.loc 18 103 17 view .LVU2363
 8805 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 8806              		.loc 18 103 13 view .LVU2364
 8807 0550 0028     		cmp	r0, #0
 8808 0552 40F0EB81 		bne	.L563
 107:delayline_reverse.h ****                 {
 8809              		.loc 18 107 21 view .LVU2365
 8810 0556 9648     		ldr	r0, .L573+16
 105:delayline_reverse.h ****                 
 8811              		.loc 18 105 17 view .LVU2366
 8812 0558 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 8813              		.loc 18 110 45 view .LVU2367
 8814 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 8815              		.loc 18 107 17 view .LVU2368
 8816 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 8817              		.loc 18 107 21 view .LVU2369
 8818 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 8819              		.loc 18 105 17 view .LVU2370
 8820 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 8821              		.loc 18 107 17 view .LVU2371
 8822 0562 002D     		cmp	r5, #0
 8823 0564 40F02C83 		bne	.L482
 110:delayline_reverse.h ****                 }
 8824              		.loc 18 110 21 view .LVU2372
 8825 0568 E260     		str	r2, [r4, #12]
 8826              	.L483:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8827              		.loc 18 130 45 view .LVU2373
 8828 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 8829              	.LVL602:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 283


 8830              		.loc 18 130 45 view .LVU2374
 8831 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8832              		.loc 18 130 37 view .LVU2375
 8833 0572 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8834              		.loc 18 130 45 view .LVU2376
 8835 0574 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8836              		.loc 18 130 37 view .LVU2377
 8837 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8838              		.loc 18 130 45 view .LVU2378
 8839 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8840              		.loc 18 130 37 view .LVU2379
 8841 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 8842              		.loc 18 131 17 view .LVU2380
 8843 0584 F4EEC77A 		vcmpe.f32	s15, s14
 8844 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8845 058c 40F31F83 		ble	.L565
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8846              		.loc 18 133 21 view .LVU2381
 8847 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 8848              		.loc 18 134 21 view .LVU2382
 8849 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8850              		.loc 18 133 21 view .LVU2383
 8851 0594 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 8852              		.loc 18 135 21 view .LVU2384
 8853 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 8854              		.loc 18 134 21 view .LVU2385
 8855 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 8856              		.loc 18 135 21 view .LVU2386
 8857 059c 0270     		strb	r2, [r0]
 8858              	.LVL603:
 8859              	.L486:
 135:delayline_reverse.h ****                 }
 8860              		.loc 18 135 21 view .LVU2387
 8861              	.LBE1707:
 8862              	.LBE1711:
 8863              	.LBE1716:
 392:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 8864              		.loc 19 392 9 is_stmt 1 view .LVU2388
 392:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 8865              		.loc 19 392 56 is_stmt 0 view .LVU2389
 8866 059e 06AA     		add	r2, sp, #24
 8867 05a0 5946     		mov	r1, fp
 8868 05a2 8448     		ldr	r0, .L573+20
 8869 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8870              	.LVL604:
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 284


 8871              		.loc 19 393 56 view .LVU2390
 8872 05a8 18EE101A 		vmov	r1, s16	@ int
 8873 05ac 07AA     		add	r2, sp, #28
 8874 05ae 8248     		ldr	r0, .L573+24
 392:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 8875              		.loc 19 392 56 view .LVU2391
 8876 05b0 F0EE408A 		vmov.f32	s17, s0
 8877              	.LVL605:
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8878              		.loc 19 393 9 is_stmt 1 view .LVU2392
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8879              		.loc 19 393 56 is_stmt 0 view .LVU2393
 8880 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8881              	.LVL606:
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 8882              		.loc 19 396 46 view .LVU2394
 8883 05b8 8048     		ldr	r0, .L573+28
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8884              		.loc 19 393 56 view .LVU2395
 8885 05ba B0EE408A 		vmov.f32	s16, s0
 8886              	.LVL607:
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 8887              		.loc 19 396 9 is_stmt 1 view .LVU2396
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 8888              		.loc 19 396 46 is_stmt 0 view .LVU2397
 8889 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 8890              	.LVL608:
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 8891              		.loc 19 396 46 view .LVU2398
 8892 05c2 0346     		mov	r3, r0
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8893              		.loc 19 397 46 view .LVU2399
 8894 05c4 7E48     		ldr	r0, .L573+32
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 8895              		.loc 19 396 45 view .LVU2400
 8896 05c6 1B68     		ldr	r3, [r3]	@ float
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 8897              		.loc 19 396 47 view .LVU2401
 8898 05c8 0893     		str	r3, [sp, #32]	@ float
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8899              		.loc 19 397 9 is_stmt 1 view .LVU2402
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8900              		.loc 19 397 46 is_stmt 0 view .LVU2403
 8901 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 8902              	.LVL609:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8903              		.loc 19 397 45 view .LVU2404
 8904 05ce 0368     		ldr	r3, [r0]	@ float
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8905              		.loc 19 397 47 view .LVU2405
 8906 05d0 0993     		str	r3, [sp, #36]	@ float
 399:Veno-Echo.cpp ****         Update_BaseTempoLED();
 8907              		.loc 19 399 9 is_stmt 1 view .LVU2406
 399:Veno-Echo.cpp ****         Update_BaseTempoLED();
 8908              		.loc 19 399 28 is_stmt 0 view .LVU2407
 8909 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 8910              	.LVL610:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 285


 402:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 8911              		.loc 19 402 9 is_stmt 1 view .LVU2408
 8912              	.LBB1717:
 8913              	.LBB1718:
1639:Veno-Echo.cpp ****     if (input > limit)
 8914              		.loc 19 1639 5 is_stmt 0 view .LVU2409
 8915 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8916              	.LBE1718:
 8917              	.LBE1717:
 402:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 8918              		.loc 19 402 34 view .LVU2410
 8919 05da DDED087A 		vldr.32	s15, [sp, #32]
 8920              	.LVL611:
 8921              	.LBB1721:
 8922              	.LBI1717:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 8923              		.loc 19 1636 7 is_stmt 1 view .LVU2411
 8924              	.LBB1719:
1638:Veno-Echo.cpp ****     float returnval{};
 8925              		.loc 19 1638 5 view .LVU2412
1639:Veno-Echo.cpp ****     if (input > limit)
 8926              		.loc 19 1639 5 view .LVU2413
 8927 05de F4EEC77A 		vcmpe.f32	s15, s14
 8928 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8929 05e6 00F39881 		bgt	.L527
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8930              		.loc 19 1641 10 view .LVU2414
 8931 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8932              		.loc 19 1642 19 is_stmt 0 view .LVU2415
 8933 05ee F4EE477A 		vcmp.f32	s15, s14
 8934 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8935 05f6 48BF     		it	mi
 8936 05f8 F0EE477A 		vmovmi.f32	s15, s14
 8937              	.LVL612:
 8938              	.L490:
1646:Veno-Echo.cpp ****     return returnval;   
 8939              		.loc 19 1646 5 is_stmt 1 view .LVU2416
1646:Veno-Echo.cpp ****     return returnval;   
 8940              		.loc 19 1646 5 is_stmt 0 view .LVU2417
 8941              	.LBE1719:
 8942              	.LBE1721:
 8943              	.LBB1722:
 8944              	.LBB1723:
1639:Veno-Echo.cpp ****     if (input > limit)
 8945              		.loc 19 1639 5 view .LVU2418
 8946 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 8947              	.LBE1723:
 8948              	.LBE1722:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8949              		.loc 19 403 34 view .LVU2419
 8950 0600 9DED090A 		vldr.32	s0, [sp, #36]
 402:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 8951              		.loc 19 402 23 view .LVU2420
 8952 0604 CDED087A 		vstr.32	s15, [sp, #32]
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8953              		.loc 19 403 9 is_stmt 1 view .LVU2421
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 286


 8954              	.LVL613:
 8955              	.LBB1727:
 8956              	.LBI1722:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 8957              		.loc 19 1636 7 view .LVU2422
 8958              	.LBB1724:
1638:Veno-Echo.cpp ****     float returnval{};
 8959              		.loc 19 1638 5 view .LVU2423
1639:Veno-Echo.cpp ****     if (input > limit)
 8960              		.loc 19 1639 5 view .LVU2424
 8961 0608 B4EEC70A 		vcmpe.f32	s0, s14
 8962 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8963 0610 00F3EA80 		bgt	.L528
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8964              		.loc 19 1641 10 view .LVU2425
 8965 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8966              	.LBE1724:
 8967              	.LBE1727:
 8968              	.LBB1728:
 405:Veno-Echo.cpp **** if(!PostFilters)
 8969              		.loc 19 405 1 is_stmt 0 view .LVU2426
 8970 0618 6A4B     		ldr	r3, .L573+36
 8971 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8972              	.LBE1728:
 8973              	.LBB1750:
 8974              	.LBB1725:
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8975              		.loc 19 1642 19 view .LVU2427
 8976 061c B4EE470A 		vcmp.f32	s0, s14
 8977 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8978 0624 48BF     		it	mi
 8979 0626 B0EE470A 		vmovmi.f32	s0, s14
 8980              	.LVL614:
1646:Veno-Echo.cpp ****     return returnval;   
 8981              		.loc 19 1646 5 is_stmt 1 view .LVU2428
1646:Veno-Echo.cpp ****     return returnval;   
 8982              		.loc 19 1646 5 is_stmt 0 view .LVU2429
 8983              	.LBE1725:
 8984              	.LBE1750:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8985              		.loc 19 403 23 view .LVU2430
 8986 062a 8DED090A 		vstr.32	s0, [sp, #36]
 405:Veno-Echo.cpp **** if(!PostFilters)
 8987              		.loc 19 405 1 is_stmt 1 view .LVU2431
 8988              	.LBB1751:
 8989 062e 002B     		cmp	r3, #0
 8990 0630 00F0E380 		beq	.L566
 8991              	.L494:
 8992              	.LBE1751:
 449:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 8993              		.loc 19 449 9 view .LVU2432
 450:Veno-Echo.cpp ****         static float RNegFB{};
 8994              		.loc 19 450 9 view .LVU2433
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 8995              		.loc 19 453 9 view .LVU2434
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 8996              		.loc 19 453 22 is_stmt 0 view .LVU2435
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 287


 8997 0634 644B     		ldr	r3, .L573+40
 8998              	.LBB1752:
 8999              	.LBB1753:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9000              		.loc 12 57 16 view .LVU2436
 9001 0636 D8ED042A 		vldr.32	s5, [r8, #16]
 9002              	.LBE1753:
 9003              	.LBE1752:
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 9004              		.loc 19 453 22 view .LVU2437
 9005 063a D3ED004A 		vldr.32	s9, [r3]
 9006 063e 634B     		ldr	r3, .L573+44
 9007              	.LBB1765:
 9008              	.LBB1754:
 9009              		.loc 12 57 37 view .LVU2438
 9010 0640 98ED006A 		vldr.32	s12, [r8]
 9011              	.LBE1754:
 9012              	.LBE1765:
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 9013              		.loc 19 453 22 view .LVU2439
 9014 0644 93ED007A 		vldr.32	s14, [r3]
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 9015              		.loc 19 456 22 view .LVU2440
 9016 0648 614B     		ldr	r3, .L573+48
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 9017              		.loc 19 453 9 view .LVU2441
 9018 064a F4EEC74A 		vcmpe.f32	s9, s14
 9019              	.LBB1766:
 9020              	.LBB1767:
 9021              		.loc 12 57 16 view .LVU2442
 9022 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9023              		.loc 12 65 20 view .LVU2443
 9024 0652 99ED054A 		vldr.32	s8, [r9, #20]
 9025              		.loc 12 65 53 view .LVU2444
 9026 0656 99ED032A 		vldr.32	s4, [r9, #12]
 9027              	.LBE1767:
 9028              	.LBE1766:
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 9029              		.loc 19 453 9 view .LVU2445
 9030 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9031              	.LBB1776:
 9032              	.LBB1755:
 9033              		.loc 12 65 20 view .LVU2446
 9034 065e 98ED053A 		vldr.32	s6, [r8, #20]
 9035              		.loc 12 65 53 view .LVU2447
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 288


 9036 0662 98ED031A 		vldr.32	s2, [r8, #12]
 9037              	.LBE1755:
 9038              	.LBE1776:
 472:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 9039              		.loc 19 472 13 view .LVU2448
 9040 0666 DFED5B1A 		vldr.32	s3, .L573+52
 9041 066a 58BF     		it	pl
 9042 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 9043              		.loc 19 456 9 is_stmt 1 view .LVU2449
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 9044              		.loc 19 456 22 is_stmt 0 view .LVU2450
 9045 0670 93ED007A 		vldr.32	s14, [r3]
 9046 0674 584B     		ldr	r3, .L573+56
 9047 0676 D3ED006A 		vldr.32	s13, [r3]
 459:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 9048              		.loc 19 459 15 view .LVU2451
 9049 067a 67EEA44A 		vmul.f32	s9, s15, s9
 9050              	.LBB1777:
 9051              	.LBB1768:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9052              		.loc 12 57 37 view .LVU2452
 9053 067e D9ED007A 		vldr.32	s15, [r9]
 9054              	.LBE1768:
 9055              	.LBE1777:
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 9056              		.loc 19 456 9 view .LVU2453
 9057 0682 B4EEE67A 		vcmpe.f32	s14, s13
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 9058              		.loc 19 463 36 view .LVU2454
 9059 0686 554B     		ldr	r3, .L573+60
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 9060              		.loc 19 456 9 view .LVU2455
 9061 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9062 068c 58BF     		it	pl
 9063 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 459:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 9064              		.loc 19 459 9 is_stmt 1 view .LVU2456
 9065              	.LVL615:
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9066              		.loc 19 460 9 view .LVU2457
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 9067              		.loc 19 463 36 is_stmt 0 view .LVU2458
 9068 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9069              		.loc 19 460 15 view .LVU2459
 9070 0696 20EE070A 		vmul.f32	s0, s0, s14
 9071              	.LVL616:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 9072              		.loc 19 463 9 is_stmt 1 view .LVU2460
 9073              	.LBB1778:
 9074              	.LBB1756:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9075              		.loc 12 57 33 is_stmt 0 view .LVU2461
 9076 069a 36EEE25A 		vsub.f32	s10, s13, s5
 9077              	.LBE1756:
 9078              	.LBE1778:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 289


 9079              	.LBB1779:
 9080              	.LBB1769:
 9081 069e 76EEE35A 		vsub.f32	s11, s13, s7
 9082              	.LBE1769:
 9083              	.LBE1779:
 9084              	.LBB1780:
 9085              	.LBB1757:
 9086              		.loc 12 65 45 view .LVU2462
 9087 06a2 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9088              		.loc 12 57 37 view .LVU2463
 9089 06a6 25EE065A 		vmul.f32	s10, s10, s12
 9090              	.LBE1757:
 9091              	.LBE1780:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 9092              		.loc 19 463 36 view .LVU2464
 9093 06aa 93ED006A 		vldr.32	s12, [r3]
 9094              	.LBB1781:
 9095              	.LBB1770:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9096              		.loc 12 57 37 view .LVU2465
 9097 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 9098              		.loc 12 65 45 view .LVU2466
 9099 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 9100              	.LBE1770:
 9101              	.LBE1781:
 9102              	.LBB1782:
 9103              	.LBB1758:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9104              		.loc 12 57 28 view .LVU2467
 9105 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
 9106              	.LBE1758:
 9107              	.LBE1782:
 9108              	.LBB1783:
 9109              	.LBB1771:
 9110 06ba E0EE235A 		vfma.f32	s11, s0, s7
 9111              		.loc 12 65 53 view .LVU2468
 9112 06be 67EE827A 		vmul.f32	s15, s15, s4
 9113              	.LBE1771:
 9114              	.LBE1783:
 9115              	.LBB1784:
 9116              	.LBB1759:
 9117 06c2 27EE017A 		vmul.f32	s14, s14, s2
 9118              	.LBE1759:
 9119              	.LBE1784:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 9120              		.loc 19 463 36 view .LVU2469
 9121 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 9122              	.LBB1785:
 9123              	.LBB1760:
  58:envFollow.h   **** 
 9124              		.loc 12 58 30 view .LVU2470
 9125 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9126              		.loc 12 57 13 view .LVU2471
 9127 06ce 88ED005A 		vstr.32	s10, [r8]
 9128              	.LBE1760:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 290


 9129              	.LBE1785:
 9130              	.LBB1786:
 9131              	.LBB1772:
  58:envFollow.h   **** 
 9132              		.loc 12 58 30 view .LVU2472
 9133 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9134              		.loc 12 57 13 view .LVU2473
 9135 06d6 C9ED005A 		vstr.32	s11, [r9]
 9136              	.LBE1772:
 9137              	.LBE1786:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 9138              		.loc 19 463 89 view .LVU2474
 9139 06da 66EE005A 		vmul.f32	s11, s12, s0
 9140              	.LBB1787:
 9141              	.LBB1761:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9142              		.loc 12 61 27 view .LVU2475
 9143 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9144              		.loc 12 58 21 view .LVU2476
 9145 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 9146              	.LBE1761:
 9147              	.LBE1787:
 9148              	.LBB1788:
 9149              	.LBB1773:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9150              		.loc 12 61 27 view .LVU2477
 9151 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9152              		.loc 12 58 21 view .LVU2478
 9153 06ea C9ED022A 		vstr.32	s5, [r9, #8]
 9154              	.LBE1773:
 9155              	.LBE1788:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9156              		.loc 19 464 89 view .LVU2479
 9157 06ee 26EE246A 		vmul.f32	s12, s12, s9
 9158              	.LBB1789:
 9159              	.LBB1762:
 9160              		.loc 12 65 40 view .LVU2480
 9161 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9162              		.loc 12 61 20 view .LVU2481
 9163 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 9164              	.LBE1762:
 9165              	.LBE1789:
 9166              	.LBB1790:
 9167              	.LBB1774:
 9168              		.loc 12 65 40 view .LVU2482
 9169 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9170              		.loc 12 61 20 view .LVU2483
 9171 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 9172              	.LBE1774:
 9173              	.LBE1790:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 9174              		.loc 19 463 15 view .LVU2484
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 291


 9175 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 9176              	.LVL617:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9177              		.loc 19 464 9 is_stmt 1 view .LVU2485
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9178              		.loc 19 464 15 is_stmt 0 view .LVU2486
 9179 0706 A6EE806A 		vfma.f32	s12, s13, s0
 9180              	.LVL618:
 468:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 9181              		.loc 19 468 9 is_stmt 1 view .LVU2487
 9182              	.LBB1791:
 9183              	.LBI1752:
  54:envFollow.h   ****     {
 9184              		.loc 12 54 11 view .LVU2488
 9185              	.LBB1763:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9186              		.loc 12 57 9 view .LVU2489
  58:envFollow.h   **** 
 9187              		.loc 12 58 9 view .LVU2490
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9188              		.loc 12 61 9 view .LVU2491
 9189              		.loc 12 65 9 view .LVU2492
 9190              	.LBE1763:
 9191              	.LBE1791:
 472:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 9192              		.loc 19 472 13 is_stmt 0 view .LVU2493
 9193 070a B4EEE17A 		vcmpe.f32	s14, s3
 9194              	.LBB1792:
 9195              	.LBB1764:
 9196              		.loc 12 65 17 view .LVU2494
 9197 070e 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9198              		.loc 12 67 9 is_stmt 1 view .LVU2495
 9199              	.LVL619:
 9200              		.loc 12 67 9 is_stmt 0 view .LVU2496
 9201              	.LBE1764:
 9202              	.LBE1792:
 469:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9203              		.loc 19 469 9 is_stmt 1 view .LVU2497
 9204              	.LBB1793:
 9205              	.LBI1766:
  54:envFollow.h   ****     {
 9206              		.loc 12 54 11 view .LVU2498
 9207              	.LBB1775:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9208              		.loc 12 57 9 view .LVU2499
  58:envFollow.h   **** 
 9209              		.loc 12 58 9 view .LVU2500
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9210              		.loc 12 61 9 view .LVU2501
  65:envFollow.h   **** 
 9211              		.loc 12 65 9 view .LVU2502
  65:envFollow.h   **** 
 9212              		.loc 12 65 17 is_stmt 0 view .LVU2503
 9213 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 9214              		.loc 12 67 9 is_stmt 1 view .LVU2504
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 292


 9215              	.LVL620:
 9216              		.loc 12 67 9 is_stmt 0 view .LVU2505
 9217              	.LBE1775:
 9218              	.LBE1793:
 472:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 9219              		.loc 19 472 13 is_stmt 1 view .LVU2506
 9220 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9221 071a 3DDB     		blt	.L556
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9222              		.loc 19 473 17 view .LVU2507
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9223              		.loc 19 473 32 is_stmt 0 view .LVU2508
 9224 071c 37EE617A 		vsub.f32	s14, s14, s3
 9225              	.LVL621:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9226              		.loc 19 473 47 view .LVU2509
 9227 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 9228 0724 27EE267A 		vmul.f32	s14, s14, s13
 9229              	.L500:
 477:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 9230              		.loc 19 477 13 view .LVU2510
 9231 0728 DFED2A6A 		vldr.32	s13, .L573+52
 9232 072c 274B     		ldr	r3, .L573+44
 9233 072e F4EEE67A 		vcmpe.f32	s15, s13
 9234 0732 83ED007A 		vstr.32	s14, [r3]
 477:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 9235              		.loc 19 477 13 is_stmt 1 view .LVU2511
 9236 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9237 073a 2ADB     		blt	.L557
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9238              		.loc 19 478 17 view .LVU2512
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9239              		.loc 19 478 32 is_stmt 0 view .LVU2513
 9240 073c 77EEE67A 		vsub.f32	s15, s15, s13
 9241              	.LVL622:
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9242              		.loc 19 478 47 view .LVU2514
 9243 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 9244 0744 67EE877A 		vmul.f32	s15, s15, s14
 9245              	.L502:
 9246 0748 234B     		ldr	r3, .L573+56
 482:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 9247              		.loc 19 482 15 view .LVU2515
 9248 074a 38EEA50A 		vadd.f32	s0, s17, s11
 9249              	.LVL623:
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9250              		.loc 19 483 15 view .LVU2516
 9251 074e 38EE068A 		vadd.f32	s16, s16, s12
 9252              	.LVL624:
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9253              		.loc 19 483 15 view .LVU2517
 9254 0752 C3ED007A 		vstr.32	s15, [r3]
 482:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 9255              		.loc 19 482 9 is_stmt 1 view .LVU2518
 9256              	.LVL625:
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9257              		.loc 19 483 9 view .LVU2519
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 293


 486:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 9258              		.loc 19 486 9 view .LVU2520
 9259              	.LBB1794:
 9260              	.LBI1794:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 9261              		.loc 19 1636 7 view .LVU2521
 9262              	.LBB1795:
1638:Veno-Echo.cpp ****     float returnval{};
 9263              		.loc 19 1638 5 view .LVU2522
1639:Veno-Echo.cpp ****     if (input > limit)
 9264              		.loc 19 1639 5 view .LVU2523
 9265 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 9266 075a B4EEE70A 		vcmpe.f32	s0, s15
 9267 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9268 0762 13DC     		bgt	.L534
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9269              		.loc 19 1641 10 view .LVU2524
 9270 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9271              		.loc 19 1642 19 is_stmt 0 view .LVU2525
 9272 0768 B4EE670A 		vcmp.f32	s0, s15
 9273 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9274 0770 48BF     		it	mi
 9275 0772 B0EE670A 		vmovmi.f32	s0, s15
 9276              	.LVL626:
 9277              	.L504:
1646:Veno-Echo.cpp ****     return returnval;   
 9278              		.loc 19 1646 5 is_stmt 1 view .LVU2526
1646:Veno-Echo.cpp ****     return returnval;   
 9279              		.loc 19 1646 5 is_stmt 0 view .LVU2527
 9280              	.LBE1795:
 9281              	.LBE1794:
 487:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9282              		.loc 19 487 9 is_stmt 1 view .LVU2528
 9283              	.LBB1797:
 9284              	.LBI1454:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 9285              		.loc 19 1636 7 view .LVU2529
 9286              	.LBB1456:
1638:Veno-Echo.cpp ****     float returnval{};
 9287              		.loc 19 1638 5 view .LVU2530
1639:Veno-Echo.cpp ****     if (input > limit)
 9288              		.loc 19 1639 5 view .LVU2531
 9289 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 9290 077a B4EEE78A 		vcmpe.f32	s16, s15
 9291 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9292 0782 7FF78FAC 		ble	.L567
1640:Veno-Echo.cpp ****         returnval = limit;
 9293              		.loc 19 1640 19 is_stmt 0 view .LVU2532
 9294 0786 B0EE678A 		vmov.f32	s16, s15
 9295              	.LVL627:
1640:Veno-Echo.cpp ****         returnval = limit;
 9296              		.loc 19 1640 19 view .LVU2533
 9297 078a 94E4     		b	.L506
 9298              	.LVL628:
 9299              	.L534:
1640:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 294


 9300              		.loc 19 1640 19 view .LVU2534
 9301              	.LBE1456:
 9302              	.LBE1797:
 9303              	.LBB1798:
 9304              	.LBB1796:
 9305 078c B0EE670A 		vmov.f32	s0, s15
 9306              	.LVL629:
1640:Veno-Echo.cpp ****         returnval = limit;
 9307              		.loc 19 1640 19 view .LVU2535
 9308 0790 F1E7     		b	.L504
 9309              	.LVL630:
 9310              	.L557:
1640:Veno-Echo.cpp ****         returnval = limit;
 9311              		.loc 19 1640 19 view .LVU2536
 9312              	.LBE1796:
 9313              	.LBE1798:
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9314              		.loc 19 479 25 view .LVU2537
 9315 0792 DFED137A 		vldr.32	s15, .L573+64
 9316              	.LVL631:
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9317              		.loc 19 479 25 view .LVU2538
 9318 0796 D7E7     		b	.L502
 9319              	.LVL632:
 9320              	.L556:
 475:Veno-Echo.cpp ****             else LNegFB = 0.0;
 9321              		.loc 19 475 25 view .LVU2539
 9322 0798 9FED117A 		vldr.32	s14, .L573+64
 9323              	.LVL633:
 475:Veno-Echo.cpp ****             else LNegFB = 0.0;
 9324              		.loc 19 475 25 view .LVU2540
 9325 079c C4E7     		b	.L500
 9326              	.L574:
 9327 079e 00BF     		.align	2
 9328              	.L573:
 9329 07a0 C1270900 		.word	600001
 9330 07a4 BF270900 		.word	599999
 9331 07a8 189F2400 		.word	2400024
 9332 07ac 249F2400 		.word	2400036
 9333 07b0 1C9F2400 		.word	2400028
 9334 07b4 00000000 		.word	.LANCHOR73
 9335 07b8 00000000 		.word	.LANCHOR74
 9336 07bc 00000000 		.word	.LANCHOR0
 9337 07c0 00000000 		.word	.LANCHOR1
 9338 07c4 00000000 		.word	.LANCHOR43
 9339 07c8 00000000 		.word	.LANCHOR10
 9340 07cc 00000000 		.word	.LANCHOR95
 9341 07d0 00000000 		.word	.LANCHOR19
 9342 07d4 CDCCCC3E 		.word	1053609165
 9343 07d8 00000000 		.word	.LANCHOR96
 9344 07dc 00000000 		.word	.LANCHOR38
 9345 07e0 00000000 		.word	0
 9346 07e4 C0270900 		.word	600000
 9347              	.LVL634:
 9348              	.L528:
 9349              	.LBB1799:
 405:Veno-Echo.cpp **** if(!PostFilters)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 295


 9350              		.loc 19 405 1 view .LVU2541
 9351 07e8 D64B     		ldr	r3, .L575
 9352              	.LBE1799:
 9353              	.LBB1800:
 9354              	.LBB1726:
1640:Veno-Echo.cpp ****         returnval = limit;
 9355              		.loc 19 1640 19 view .LVU2542
 9356 07ea B0EE470A 		vmov.f32	s0, s14
 9357              	.LVL635:
1646:Veno-Echo.cpp ****     return returnval;   
 9358              		.loc 19 1646 5 is_stmt 1 view .LVU2543
1646:Veno-Echo.cpp ****     return returnval;   
 9359              		.loc 19 1646 5 is_stmt 0 view .LVU2544
 9360              	.LBE1726:
 9361              	.LBE1800:
 9362              	.LBB1801:
 405:Veno-Echo.cpp **** if(!PostFilters)
 9363              		.loc 19 405 1 view .LVU2545
 9364 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9365              	.LBE1801:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9366              		.loc 19 403 23 view .LVU2546
 9367 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 405:Veno-Echo.cpp **** if(!PostFilters)
 9368              		.loc 19 405 1 is_stmt 1 view .LVU2547
 9369              	.LBB1802:
 9370 07f4 002B     		cmp	r3, #0
 9371 07f6 7FF41DAF 		bne	.L494
 9372              	.L566:
 9373              	.LBB1729:
 411:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 9374              		.loc 19 411 9 view .LVU2548
 411:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 9375              		.loc 19 411 22 is_stmt 0 view .LVU2549
 9376 07fa 9FEDD39A 		vldr.32	s18, .L575+4
 9377 07fe D34D     		ldr	r5, .L575+8
 9378 0800 27EE890A 		vmul.f32	s0, s15, s18
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 9379              		.loc 19 412 22 view .LVU2550
 9380 0804 D24C     		ldr	r4, .L575+12
 411:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 9381              		.loc 19 411 22 view .LVU2551
 9382 0806 2846     		mov	r0, r5
 9383 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9384              	.LVL636:
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 9385              		.loc 19 412 9 is_stmt 1 view .LVU2552
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 9386              		.loc 19 412 22 is_stmt 0 view .LVU2553
 9387 080c 9DED090A 		vldr.32	s0, [sp, #36]
 9388 0810 2046     		mov	r0, r4
 9389 0812 20EE090A 		vmul.f32	s0, s0, s18
 9390 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9391              	.LVL637:
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 9392              		.loc 19 415 9 is_stmt 1 view .LVU2554
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 296


 9393              		.loc 19 415 9 is_stmt 0 view .LVU2555
 9394              	.LBE1729:
 9395              	.LBE1802:
 9396              	.LBE1829:
 9397              	.LBE1840:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 9398              		.loc 9 52 26 is_stmt 1 view .LVU2556
 9399              	.LBB1841:
 9400              	.LBB1830:
 9401              	.LBB1803:
 9402              	.LBB1744:
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 9403              		.loc 19 415 40 is_stmt 0 view .LVU2557
 9404 081a F2EE046A 		vmov.f32	s13, #1.0e+1
 9405 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 9406              		.loc 19 419 49 view .LVU2558
 9407 0822 0CAA     		add	r2, sp, #48
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 9408              		.loc 19 416 40 view .LVU2559
 9409 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 9410              		.loc 19 419 49 view .LVU2560
 9411 0828 08A9     		add	r1, sp, #32
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 9412              		.loc 19 415 40 view .LVU2561
 9413 082a 27EE267A 		vmul.f32	s14, s14, s13
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 297


 9414              		.loc 19 419 49 view .LVU2562
 9415 082e C948     		ldr	r0, .L575+16
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 9416              		.loc 19 416 40 view .LVU2563
 9417 0830 67EEA67A 		vmul.f32	s15, s15, s13
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 9418              		.loc 19 415 47 view .LVU2564
 9419 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 9420              		.loc 19 416 9 is_stmt 1 view .LVU2565
 9421              	.LVL638:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 9422              		.loc 19 416 9 is_stmt 0 view .LVU2566
 9423              	.LBE1744:
 9424              	.LBE1803:
 9425              	.LBE1830:
 9426              	.LBE1841:
 9427              		.loc 9 52 26 is_stmt 1 view .LVU2567
 9428              	.LBB1842:
 9429              	.LBB1831:
 9430              	.LBB1804:
 9431              	.LBB1745:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 9432              		.loc 19 416 47 is_stmt 0 view .LVU2568
 9433 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 9434              		.loc 19 419 9 is_stmt 1 view .LVU2569
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 9435              		.loc 19 419 49 is_stmt 0 view .LVU2570
 9436 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9437              	.LVL639:
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 9438              		.loc 19 420 49 view .LVU2571
 9439 0840 0DAA     		add	r2, sp, #52
 9440 0842 09A9     		add	r1, sp, #36
 9441 0844 C448     		ldr	r0, .L575+20
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 9442              		.loc 19 419 78 view .LVU2572
 9443 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 9444              		.loc 19 420 9 is_stmt 1 view .LVU2573
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 9445              		.loc 19 420 49 is_stmt 0 view .LVU2574
 9446 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9447              	.LVL640:
 9448              	.LBB1730:
 9449              	.LBB1731:
1639:Veno-Echo.cpp ****     if (input > limit)
 9450              		.loc 19 1639 5 view .LVU2575
 9451 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 9452              	.LBE1731:
 9453              	.LBE1730:
 423:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 9454              		.loc 19 423 36 view .LVU2576
 9455 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 9456              		.loc 19 420 49 view .LVU2577
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 298


 9457 0856 F0EE407A 		vmov.f32	s15, s0
 423:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 9458              		.loc 19 423 9 is_stmt 1 view .LVU2578
 9459              	.LVL641:
 9460              	.LBB1735:
 9461              	.LBI1730:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 9462              		.loc 19 1636 7 view .LVU2579
 9463              	.LBB1732:
1638:Veno-Echo.cpp ****     float returnval{};
 9464              		.loc 19 1638 5 view .LVU2580
1639:Veno-Echo.cpp ****     if (input > limit)
 9465              		.loc 19 1639 5 view .LVU2581
 9466 085a B4EEE67A 		vcmpe.f32	s14, s13
 9467 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9468 0862 00F3A681 		bgt	.L529
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9469              		.loc 19 1641 10 view .LVU2582
 9470 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 9471 086a B4EEE67A 		vcmpe.f32	s14, s13
 9472 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9473 0872 00F1B581 		bmi	.L530
 9474 0876 27EE090A 		vmul.f32	s0, s14, s18
 9475              	.LVL642:
 9476              	.L495:
1646:Veno-Echo.cpp ****     return returnval;   
 9477              		.loc 19 1646 5 view .LVU2583
1646:Veno-Echo.cpp ****     return returnval;   
 9478              		.loc 19 1646 5 is_stmt 0 view .LVU2584
 9479              	.LBE1732:
 9480              	.LBE1735:
 9481              	.LBB1736:
 9482              	.LBB1737:
1639:Veno-Echo.cpp ****     if (input > limit)
 9483              		.loc 19 1639 5 view .LVU2585
 9484 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 9485              	.LBE1737:
 9486              	.LBE1736:
 423:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 9487              		.loc 19 423 25 view .LVU2586
 9488 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 9489              		.loc 19 424 9 is_stmt 1 view .LVU2587
 9490              	.LVL643:
 9491              	.LBB1740:
 9492              	.LBI1736:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 9493              		.loc 19 1636 7 view .LVU2588
 9494              	.LBB1738:
1638:Veno-Echo.cpp ****     float returnval{};
 9495              		.loc 19 1638 5 view .LVU2589
1639:Veno-Echo.cpp ****     if (input > limit)
 9496              		.loc 19 1639 5 view .LVU2590
 9497 0882 F4EEE67A 		vcmpe.f32	s15, s13
 9498 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9499 088a 00F38F81 		bgt	.L531
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 299


 9500              		.loc 19 1641 10 view .LVU2591
 9501 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9502              		.loc 19 1642 19 is_stmt 0 view .LVU2592
 9503 0892 F4EE477A 		vcmp.f32	s15, s14
 9504 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9505 089a 48BF     		it	mi
 9506 089c F0EE477A 		vmovmi.f32	s15, s14
 9507              	.LVL644:
 9508              	.L496:
1646:Veno-Echo.cpp ****     return returnval;   
 9509              		.loc 19 1646 5 is_stmt 1 view .LVU2593
1646:Veno-Echo.cpp ****     return returnval;   
 9510              		.loc 19 1646 5 is_stmt 0 view .LVU2594
 9511              	.LBE1738:
 9512              	.LBE1740:
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 9513              		.loc 19 427 22 view .LVU2595
 9514 08a0 AE4D     		ldr	r5, .L575+24
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 9515              		.loc 19 428 22 view .LVU2596
 9516 08a2 AF4C     		ldr	r4, .L575+28
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 9517              		.loc 19 427 22 view .LVU2597
 9518 08a4 2846     		mov	r0, r5
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 9519              		.loc 19 424 25 view .LVU2598
 9520 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 9521              		.loc 19 427 9 is_stmt 1 view .LVU2599
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 9522              		.loc 19 427 22 is_stmt 0 view .LVU2600
 9523 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9524              	.LVL645:
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 9525              		.loc 19 428 9 is_stmt 1 view .LVU2601
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 9526              		.loc 19 428 22 is_stmt 0 view .LVU2602
 9527 08ae DFEDA67A 		vldr.32	s15, .L575+4
 9528 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 9529 08b6 2046     		mov	r0, r4
 9530 08b8 20EE270A 		vmul.f32	s0, s0, s15
 9531 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9532              	.LVL646:
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 9533              		.loc 19 430 9 is_stmt 1 view .LVU2603
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 9534              		.loc 19 430 9 is_stmt 0 view .LVU2604
 9535              	.LBE1745:
 9536              	.LBE1804:
 9537              	.LBE1831:
 9538              	.LBE1842:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 9539              		.loc 9 56 27 is_stmt 1 view .LVU2605
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 300


 9540              	.LBB1843:
 9541              	.LBB1832:
 9542              	.LBB1805:
 9543              	.LBB1746:
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 9544              		.loc 19 430 41 is_stmt 0 view .LVU2606
 9545 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 9546 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 9547              		.loc 19 433 45 view .LVU2607
 9548 08c8 0EA9     		add	r1, sp, #56
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9549              		.loc 19 431 41 view .LVU2608
 9550 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 9551              		.loc 19 433 45 view .LVU2609
 9552 08ce 10AA     		add	r2, sp, #64
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 9553              		.loc 19 430 41 view .LVU2610
 9554 08d0 27EE267A 		vmul.f32	s14, s14, s13
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 9555              		.loc 19 433 45 view .LVU2611
 9556 08d4 A348     		ldr	r0, .L575+32
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9557              		.loc 19 431 41 view .LVU2612
 9558 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 9559              		.loc 19 430 48 view .LVU2613
 9560 08da 8DED107A 		vstr.32	s14, [sp, #64]
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9561              		.loc 19 431 9 is_stmt 1 view .LVU2614
 9562              	.LVL647:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9563              		.loc 19 431 9 is_stmt 0 view .LVU2615
 9564              	.LBE1746:
 9565              	.LBE1805:
 9566              	.LBE1832:
 9567              	.LBE1843:
 9568              		.loc 9 56 27 is_stmt 1 view .LVU2616
 9569              	.LBB1844:
 9570              	.LBB1833:
 9571              	.LBB1806:
 9572              	.LBB1747:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9573              		.loc 19 431 48 is_stmt 0 view .LVU2617
 9574 08de CDED117A 		vstr.32	s15, [sp, #68]
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 9575              		.loc 19 433 9 is_stmt 1 view .LVU2618
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 9576              		.loc 19 433 45 is_stmt 0 view .LVU2619
 9577 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9578              	.LVL648:
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9579              		.loc 19 434 45 view .LVU2620
 9580 08e6 0FA9     		add	r1, sp, #60
 9581 08e8 11AA     		add	r2, sp, #68
 9582 08ea 9F48     		ldr	r0, .L575+36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 301


 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 9583              		.loc 19 433 25 view .LVU2621
 9584 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9585              		.loc 19 434 9 is_stmt 1 view .LVU2622
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9586              		.loc 19 434 45 is_stmt 0 view .LVU2623
 9587 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9588              	.LVL649:
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 9589              		.loc 19 438 44 view .LVU2624
 9590 08f4 0EAA     		add	r2, sp, #56
 9591 08f6 08A9     		add	r1, sp, #32
 9592 08f8 9C48     		ldr	r0, .L575+40
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9593              		.loc 19 434 25 view .LVU2625
 9594 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 9595              		.loc 19 438 9 is_stmt 1 view .LVU2626
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 9596              		.loc 19 438 44 is_stmt 0 view .LVU2627
 9597 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9598              	.LVL650:
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 9599              		.loc 19 439 44 view .LVU2628
 9600 0902 0FAA     		add	r2, sp, #60
 9601 0904 09A9     		add	r1, sp, #36
 9602 0906 9A48     		ldr	r0, .L575+44
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 9603              		.loc 19 438 23 view .LVU2629
 9604 0908 8DED080A 		vstr.32	s0, [sp, #32]
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 9605              		.loc 19 439 9 is_stmt 1 view .LVU2630
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 9606              		.loc 19 439 44 is_stmt 0 view .LVU2631
 9607 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9608              	.LVL651:
 9609 0910 DDED087A 		vldr.32	s15, [sp, #32]
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 9610              		.loc 19 439 23 view .LVU2632
 9611 0914 8DED090A 		vstr.32	s0, [sp, #36]
 9612              	.LBE1747:
 9613 0918 8CE6     		b	.L494
 9614              	.LVL652:
 9615              	.L527:
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 9616              		.loc 19 439 23 view .LVU2633
 9617              	.LBE1806:
 9618              	.LBB1807:
 9619              	.LBB1720:
1640:Veno-Echo.cpp ****         returnval = limit;
 9620              		.loc 19 1640 19 view .LVU2634
 9621 091a F0EE477A 		vmov.f32	s15, s14
 9622              	.LVL653:
1640:Veno-Echo.cpp ****         returnval = limit;
 9623              		.loc 19 1640 19 view .LVU2635
 9624 091e 6DE6     		b	.L490
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 302


 9625              	.LVL654:
 9626              	.L480:
1640:Veno-Echo.cpp ****         returnval = limit;
 9627              		.loc 19 1640 19 view .LVU2636
 9628              	.LBE1720:
 9629              	.LBE1807:
 9630              	.LBB1808:
 9631              	.LBB1712:
 9632              	.LBB1708:
 126:delayline_reverse.h ****         {
 9633              		.loc 18 126 12 view .LVU2637
 9634 0920 944B     		ldr	r3, .L575+48
 126:delayline_reverse.h ****         {
 9635              		.loc 18 126 9 view .LVU2638
 9636 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 9637              		.loc 18 126 12 view .LVU2639
 9638 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 9639              		.loc 18 126 9 view .LVU2640
 9640 0926 002A     		cmp	r2, #0
 9641 0928 3FF439AE 		beq	.L486
 9642              	.L563:
 126:delayline_reverse.h ****         {
 9643              		.loc 18 126 9 view .LVU2641
 9644 092c 924A     		ldr	r2, .L575+52
 9645 092e A018     		adds	r0, r4, r2
 9646 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 9647              		.loc 18 128 13 view .LVU2642
 9648 0932 002A     		cmp	r2, #0
 9649 0934 3FF419AE 		beq	.L483
 9650              	.L484:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9651              		.loc 18 141 45 view .LVU2643
 9652 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9653              	.LVL655:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9654              		.loc 18 141 45 view .LVU2644
 9655 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9656              		.loc 18 141 37 view .LVU2645
 9657 0940 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 9658              		.loc 18 142 17 view .LVU2646
 9659 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9660              		.loc 18 141 45 view .LVU2647
 9661 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9662              		.loc 18 141 37 view .LVU2648
 9663 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9664              		.loc 18 141 45 view .LVU2649
 9665 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9666              		.loc 18 141 37 view .LVU2650
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 303


 9667 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 9668              		.loc 18 142 17 view .LVU2651
 9669 0954 F5EEC07A 		vcmpe.f32	s15, #0
 9670 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9671 095c 00F13A81 		bmi	.L489
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9672              		.loc 18 141 17 view .LVU2652
 9673 0960 C1ED007A 		vstr.32	s15, [r1]
 9674 0964 1BE6     		b	.L486
 9675              	.LVL656:
 9676              	.L470:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9677              		.loc 18 141 17 view .LVU2653
 9678              	.LBE1708:
 9679              	.LBE1712:
 9680              	.LBE1808:
 9681              	.LBB1809:
 9682              	.LBB1685:
 9683              	.LBB1674:
 126:delayline_reverse.h ****         {
 9684              		.loc 18 126 12 view .LVU2654
 9685 0966 834A     		ldr	r2, .L575+48
 126:delayline_reverse.h ****         {
 9686              		.loc 18 126 9 view .LVU2655
 9687 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 9688              		.loc 18 126 12 view .LVU2656
 9689 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 9690              		.loc 18 126 9 view .LVU2657
 9691 096c 002B     		cmp	r3, #0
 9692 096e 3FF4ABAD 		beq	.L476
 9693              	.L561:
 126:delayline_reverse.h ****         {
 9694              		.loc 18 126 9 view .LVU2658
 9695 0972 814B     		ldr	r3, .L575+52
 9696 0974 E818     		adds	r0, r5, r3
 9697 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 9698              		.loc 18 128 13 view .LVU2659
 9699 0978 002B     		cmp	r3, #0
 9700 097a 3FF435AD 		beq	.L473
 9701              	.L474:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9702              		.loc 18 141 45 view .LVU2660
 9703 097e 07EE90EA 		vmov	s15, lr	@ int
 9704              	.LVL657:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9705              		.loc 18 141 45 view .LVU2661
 9706 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 9707              		.loc 18 142 17 view .LVU2662
 9708 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9709              		.loc 18 141 45 view .LVU2663
 9710 0988 B8EE677A 		vcvt.f32.u32	s14, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 304


 9711 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9712              		.loc 18 141 37 view .LVU2664
 9713 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 9714              		.loc 18 142 17 view .LVU2665
 9715 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 9716 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9717 099c 40F1C580 		bpl	.L562
 145:delayline_reverse.h ****                     playinghead_ = false;
 9718              		.loc 18 145 21 view .LVU2666
 9719 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9720              		.loc 18 144 21 view .LVU2667
 9721 09a2 049D     		ldr	r5, [sp, #16]
 9722              	.LVL658:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9723              		.loc 18 144 21 view .LVU2668
 9724 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 9725              		.loc 18 145 21 view .LVU2669
 9726 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 9727              		.loc 18 146 21 view .LVU2670
 9728 09a8 0170     		strb	r1, [r0]
 9729 09aa 8DE5     		b	.L476
 9730              	.LVL659:
 9731              	.L521:
 146:delayline_reverse.h ****                 }
 9732              		.loc 18 146 21 view .LVU2671
 9733              	.LBE1674:
 9734              	.LBE1685:
 9735              	.LBE1809:
 568:Veno-Echo.cpp ****             out[i] = mixL;
 9736              		.loc 19 568 13 is_stmt 1 view .LVU2672
 568:Veno-Echo.cpp ****             out[i] = mixL;
 9737              		.loc 19 568 20 is_stmt 0 view .LVU2673
 9738 09ac 009B     		ldr	r3, [sp]
 9739 09ae C3ED007A 		vstr.32	s15, [r3]
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 9740              		.loc 19 569 13 is_stmt 1 view .LVU2674
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 9741              		.loc 19 569 22 is_stmt 0 view .LVU2675
 9742 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 9743 09b6 FFF7EDBB 		b	.L522
 9744              	.LVL660:
 9745              	.L558:
 549:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 9746              		.loc 19 549 14 is_stmt 1 view .LVU2676
 9747 09ba 40F3AC80 		ble	.L559
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 9748              		.loc 19 551 13 view .LVU2677
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 9749              		.loc 19 551 24 is_stmt 0 view .LVU2678
 9750 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 9751              		.loc 19 551 18 view .LVU2679
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 305


 9752 09c2 DBED005A 		vldr.32	s11, [fp]
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9753              		.loc 19 552 18 view .LVU2680
 9754 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 9755              		.loc 19 551 24 view .LVU2681
 9756 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 9757              		.loc 19 551 33 view .LVU2682
 9758 09ce 37EE077A 		vadd.f32	s14, s14, s14
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 9759              		.loc 19 551 18 view .LVU2683
 9760 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 9761              	.LVL661:
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9762              		.loc 19 552 13 is_stmt 1 view .LVU2684
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9763              		.loc 19 552 18 is_stmt 0 view .LVU2685
 9764 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 9765              	.LVL662:
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9766              		.loc 19 552 18 view .LVU2686
 9767 09da FFF7D2BB 		b	.L518
 9768              	.LVL663:
 9769              	.L537:
 9770              	.LBB1810:
 503:Veno-Echo.cpp **** if(PostFilters)
 9771              		.loc 19 503 1 view .LVU2687
 9772 09de 594B     		ldr	r3, .L575
 9773              	.LBE1810:
 9774              	.LBB1811:
 9775              	.LBB1466:
1640:Veno-Echo.cpp ****         returnval = limit;
 9776              		.loc 19 1640 19 view .LVU2688
 9777 09e0 B0EE470A 		vmov.f32	s0, s14
 9778              	.LVL664:
1646:Veno-Echo.cpp ****     return returnval;   
 9779              		.loc 19 1646 5 is_stmt 1 view .LVU2689
1646:Veno-Echo.cpp ****     return returnval;   
 9780              		.loc 19 1646 5 is_stmt 0 view .LVU2690
 9781              	.LBE1466:
 9782              	.LBE1811:
 9783              	.LBB1812:
 503:Veno-Echo.cpp **** if(PostFilters)
 9784              		.loc 19 503 1 view .LVU2691
 9785 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9786              	.LBE1812:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9787              		.loc 19 501 27 view .LVU2692
 9788 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 503:Veno-Echo.cpp **** if(PostFilters)
 9789              		.loc 19 503 1 is_stmt 1 view .LVU2693
 9790              	.LBB1813:
 9791 09ea 002B     		cmp	r3, #0
 9792 09ec 3FF4B0AB 		beq	.L512
 9793              	.L564:
 9794              	.LBB1469:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 306


 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 9795              		.loc 19 509 9 view .LVU2694
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 9796              		.loc 19 509 27 is_stmt 0 view .LVU2695
 9797 09f0 9FED558A 		vldr.32	s16, .L575+4
 9798              	.LVL665:
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 9799              		.loc 19 509 27 view .LVU2696
 9800 09f4 614D     		ldr	r5, .L575+56
 9801 09f6 27EE880A 		vmul.f32	s0, s15, s16
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9802              		.loc 19 510 27 view .LVU2697
 9803 09fa 614C     		ldr	r4, .L575+60
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 9804              		.loc 19 509 27 view .LVU2698
 9805 09fc 2846     		mov	r0, r5
 9806 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9807              	.LVL666:
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9808              		.loc 19 510 9 is_stmt 1 view .LVU2699
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9809              		.loc 19 510 27 is_stmt 0 view .LVU2700
 9810 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 9811 0a06 2046     		mov	r0, r4
 9812 0a08 20EE080A 		vmul.f32	s0, s0, s16
 9813 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9814              	.LVL667:
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 9815              		.loc 19 513 9 is_stmt 1 view .LVU2701
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 9816              		.loc 19 513 9 is_stmt 0 view .LVU2702
 9817              	.LBE1469:
 9818              	.LBE1813:
 9819              	.LBE1833:
 9820              	.LBE1844:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 9821              		.loc 9 52 26 is_stmt 1 view .LVU2703
 9822              	.LBB1845:
 9823              	.LBB1834:
 9824              	.LBB1814:
 9825              	.LBB1484:
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 9826              		.loc 19 513 50 is_stmt 0 view .LVU2704
 9827 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 9828 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 9829              		.loc 19 517 59 view .LVU2705
 9830 0a18 0AA9     		add	r1, sp, #40
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9831              		.loc 19 514 50 view .LVU2706
 9832 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 9833              		.loc 19 517 59 view .LVU2707
 9834 0a1e 0CAA     		add	r2, sp, #48
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 9835              		.loc 19 513 50 view .LVU2708
 9836 0a20 27EE267A 		vmul.f32	s14, s14, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 307


 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 9837              		.loc 19 517 59 view .LVU2709
 9838 0a24 5748     		ldr	r0, .L575+64
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9839              		.loc 19 514 50 view .LVU2710
 9840 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 9841              		.loc 19 513 57 view .LVU2711
 9842 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9843              		.loc 19 514 9 is_stmt 1 view .LVU2712
 9844              	.LVL668:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9845              		.loc 19 514 9 is_stmt 0 view .LVU2713
 9846              	.LBE1484:
 9847              	.LBE1814:
 9848              	.LBE1834:
 9849              	.LBE1845:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 9850              		.loc 9 52 26 is_stmt 1 view .LVU2714
 9851              	.LBB1846:
 9852              	.LBB1835:
 9853              	.LBB1815:
 9854              	.LBB1485:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9855              		.loc 19 514 57 is_stmt 0 view .LVU2715
 9856 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 9857              		.loc 19 517 9 is_stmt 1 view .LVU2716
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 9858              		.loc 19 517 59 is_stmt 0 view .LVU2717
 9859 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9860              	.LVL669:
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9861              		.loc 19 518 59 view .LVU2718
 9862 0a36 0BA9     		add	r1, sp, #44
 9863 0a38 0DAA     		add	r2, sp, #52
 9864 0a3a 5348     		ldr	r0, .L575+68
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 9865              		.loc 19 517 97 view .LVU2719
 9866 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9867              		.loc 19 518 9 is_stmt 1 view .LVU2720
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9868              		.loc 19 518 59 is_stmt 0 view .LVU2721
 9869 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9870              	.LVL670:
 9871              	.LBB1470:
 9872              	.LBB1471:
1639:Veno-Echo.cpp ****     if (input > limit)
 9873              		.loc 19 1639 5 view .LVU2722
 9874 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 9875              	.LBE1471:
 9876              	.LBE1470:
 521:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 9877              		.loc 19 521 41 view .LVU2723
 9878 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 308


 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9879              		.loc 19 518 59 view .LVU2724
 9880 0a4c F0EE407A 		vmov.f32	s15, s0
 521:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 9881              		.loc 19 521 9 is_stmt 1 view .LVU2725
 9882              	.LVL671:
 9883              	.LBB1475:
 9884              	.LBI1470:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 9885              		.loc 19 1636 7 view .LVU2726
 9886              	.LBB1472:
1638:Veno-Echo.cpp ****     float returnval{};
 9887              		.loc 19 1638 5 view .LVU2727
1639:Veno-Echo.cpp ****     if (input > limit)
 9888              		.loc 19 1639 5 view .LVU2728
 9889 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 9890 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9891 0a58 6EDC     		bgt	.L538
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9892              		.loc 19 1641 10 view .LVU2729
 9893 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 9894 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 9895 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9896 0a66 00F1C080 		bmi	.L539
 9897 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 9898              	.LVL672:
 9899              	.L513:
1646:Veno-Echo.cpp ****     return returnval;   
 9900              		.loc 19 1646 5 view .LVU2730
1646:Veno-Echo.cpp ****     return returnval;   
 9901              		.loc 19 1646 5 is_stmt 0 view .LVU2731
 9902              	.LBE1472:
 9903              	.LBE1475:
 9904              	.LBB1476:
 9905              	.LBB1477:
1639:Veno-Echo.cpp ****     if (input > limit)
 9906              		.loc 19 1639 5 view .LVU2732
 9907 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 9908              	.LBE1477:
 9909              	.LBE1476:
 521:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 9910              		.loc 19 521 30 view .LVU2733
 9911 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 9912              		.loc 19 522 9 is_stmt 1 view .LVU2734
 9913              	.LVL673:
 9914              	.LBB1480:
 9915              	.LBI1476:
1636:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 9916              		.loc 19 1636 7 view .LVU2735
 9917              	.LBB1478:
1638:Veno-Echo.cpp ****     float returnval{};
 9918              		.loc 19 1638 5 view .LVU2736
1639:Veno-Echo.cpp ****     if (input > limit)
 9919              		.loc 19 1639 5 view .LVU2737
 9920 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 9921 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 309


 9922 0a7e 58DC     		bgt	.L540
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9923              		.loc 19 1641 10 view .LVU2738
 9924 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9925              		.loc 19 1642 19 is_stmt 0 view .LVU2739
 9926 0a84 F4EE477A 		vcmp.f32	s15, s14
 9927 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9928 0a8c 48BF     		it	mi
 9929 0a8e F0EE477A 		vmovmi.f32	s15, s14
 9930              	.LVL674:
 9931              	.L514:
1646:Veno-Echo.cpp ****     return returnval;   
 9932              		.loc 19 1646 5 is_stmt 1 view .LVU2740
1646:Veno-Echo.cpp ****     return returnval;   
 9933              		.loc 19 1646 5 is_stmt 0 view .LVU2741
 9934              	.LBE1478:
 9935              	.LBE1480:
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 9936              		.loc 19 525 27 view .LVU2742
 9937 0a92 3E4D     		ldr	r5, .L575+72
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 9938              		.loc 19 526 27 view .LVU2743
 9939 0a94 3E4C     		ldr	r4, .L575+76
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 9940              		.loc 19 525 27 view .LVU2744
 9941 0a96 2846     		mov	r0, r5
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 9942              		.loc 19 522 30 view .LVU2745
 9943 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 9944              		.loc 19 525 9 is_stmt 1 view .LVU2746
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 9945              		.loc 19 525 27 is_stmt 0 view .LVU2747
 9946 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9947              	.LVL675:
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 9948              		.loc 19 526 9 is_stmt 1 view .LVU2748
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 9949              		.loc 19 526 27 is_stmt 0 view .LVU2749
 9950 0aa0 DFED297A 		vldr.32	s15, .L575+4
 9951 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 9952 0aa8 2046     		mov	r0, r4
 9953 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 9954 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9955              	.LVL676:
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 9956              		.loc 19 528 9 is_stmt 1 view .LVU2750
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 9957              		.loc 19 528 9 is_stmt 0 view .LVU2751
 9958              	.LBE1485:
 9959              	.LBE1815:
 9960              	.LBE1835:
 9961              	.LBE1846:
 9962              		.loc 9 56 27 is_stmt 1 view .LVU2752
 9963              	.LBB1847:
 9964              	.LBB1836:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 310


 9965              	.LBB1816:
 9966              	.LBB1486:
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 9967              		.loc 19 528 51 is_stmt 0 view .LVU2753
 9968 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
 9969 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 9970              		.loc 19 531 55 view .LVU2754
 9971 0aba 0EA9     		add	r1, sp, #56
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9972              		.loc 19 529 51 view .LVU2755
 9973 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 9974              		.loc 19 531 55 view .LVU2756
 9975 0ac0 10AA     		add	r2, sp, #64
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 9976              		.loc 19 528 51 view .LVU2757
 9977 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 9978              		.loc 19 531 55 view .LVU2758
 9979 0ac6 3348     		ldr	r0, .L575+80
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9980              		.loc 19 529 51 view .LVU2759
 9981 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 9982              		.loc 19 528 58 view .LVU2760
 9983 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9984              		.loc 19 529 9 is_stmt 1 view .LVU2761
 9985              	.LVL677:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9986              		.loc 19 529 9 is_stmt 0 view .LVU2762
 9987              	.LBE1486:
 9988              	.LBE1816:
 9989              	.LBE1836:
 9990              	.LBE1847:
 9991              		.loc 9 56 27 is_stmt 1 view .LVU2763
 9992              	.LBB1848:
 9993              	.LBB1837:
 9994              	.LBB1817:
 9995              	.LBB1487:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9996              		.loc 19 529 58 is_stmt 0 view .LVU2764
 9997 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 9998              		.loc 19 531 9 is_stmt 1 view .LVU2765
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 9999              		.loc 19 531 55 is_stmt 0 view .LVU2766
 10000 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10001              	.LVL678:
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10002              		.loc 19 532 55 view .LVU2767
 10003 0ad8 0FA9     		add	r1, sp, #60
 10004 0ada 11AA     		add	r2, sp, #68
 10005 0adc 2E48     		ldr	r0, .L575+84
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 10006              		.loc 19 531 30 view .LVU2768
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 311


 10007 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10008              		.loc 19 532 9 is_stmt 1 view .LVU2769
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10009              		.loc 19 532 55 is_stmt 0 view .LVU2770
 10010 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10011              	.LVL679:
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 10012              		.loc 19 535 53 view .LVU2771
 10013 0ae6 0EAA     		add	r2, sp, #56
 10014 0ae8 0AA9     		add	r1, sp, #40
 10015 0aea 2C48     		ldr	r0, .L575+88
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10016              		.loc 19 532 30 view .LVU2772
 10017 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 10018              		.loc 19 535 9 is_stmt 1 view .LVU2773
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 10019              		.loc 19 535 53 is_stmt 0 view .LVU2774
 10020 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10021              	.LVL680:
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10022              		.loc 19 536 53 view .LVU2775
 10023 0af4 0FAA     		add	r2, sp, #60
 10024 0af6 0BA9     		add	r1, sp, #44
 10025 0af8 2948     		ldr	r0, .L575+92
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 10026              		.loc 19 535 27 view .LVU2776
 10027 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10028              		.loc 19 536 9 is_stmt 1 view .LVU2777
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10029              		.loc 19 536 53 is_stmt 0 view .LVU2778
 10030 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10031              	.LVL681:
 10032 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10033              		.loc 19 536 27 view .LVU2779
 10034 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 10035              	.LBE1487:
 10036 0b0a FFF721BB 		b	.L512
 10037              	.LVL682:
 10038              	.L536:
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10039              		.loc 19 536 27 view .LVU2780
 10040              	.LBE1817:
 10041              	.LBB1818:
 10042              	.LBB1460:
1640:Veno-Echo.cpp ****         returnval = limit;
 10043              		.loc 19 1640 19 view .LVU2781
 10044 0b0e F0EE477A 		vmov.f32	s15, s14
 10045              	.LVL683:
1640:Veno-Echo.cpp ****         returnval = limit;
 10046              		.loc 19 1640 19 view .LVU2782
 10047 0b12 FFF703BB 		b	.L508
 10048              	.LVL684:
 10049              	.L559:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 312


1640:Veno-Echo.cpp ****         returnval = limit;
 10050              		.loc 19 1640 19 view .LVU2783
 10051              	.LBE1460:
 10052              	.LBE1818:
 556:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 10053              		.loc 19 556 13 is_stmt 1 view .LVU2784
 556:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 10054              		.loc 19 556 18 is_stmt 0 view .LVU2785
 10055 0b16 DBED006A 		vldr.32	s13, [fp]
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10056              		.loc 19 557 18 view .LVU2786
 10057 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 556:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 10058              		.loc 19 556 18 view .LVU2787
 10059 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 10060              	.LVL685:
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10061              		.loc 19 557 13 is_stmt 1 view .LVU2788
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10062              		.loc 19 557 18 is_stmt 0 view .LVU2789
 10063 0b22 30EE070A 		vadd.f32	s0, s0, s14
 10064              	.LVL686:
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10065              		.loc 19 557 18 view .LVU2790
 10066 0b26 FFF72CBB 		b	.L518
 10067              	.LVL687:
 10068              	.L562:
 10069              	.LBB1819:
 10070              	.LBB1686:
 10071              	.LBB1675:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10072              		.loc 18 141 17 view .LVU2791
 10073 0b2a 049B     		ldr	r3, [sp, #16]
 10074 0b2c 83ED00BA 		vstr.32	s22, [r3]
 10075 0b30 CAE4     		b	.L476
 10076              	.LVL688:
 10077              	.L540:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10078              		.loc 18 141 17 view .LVU2792
 10079              	.LBE1675:
 10080              	.LBE1686:
 10081              	.LBE1819:
 10082              	.LBB1820:
 10083              	.LBB1488:
 10084              	.LBB1481:
 10085              	.LBB1479:
1640:Veno-Echo.cpp ****         returnval = limit;
 10086              		.loc 19 1640 19 view .LVU2793
 10087 0b32 F0EE667A 		vmov.f32	s15, s13
 10088              	.LVL689:
1640:Veno-Echo.cpp ****         returnval = limit;
 10089              		.loc 19 1640 19 view .LVU2794
 10090 0b36 ACE7     		b	.L514
 10091              	.LVL690:
 10092              	.L538:
1640:Veno-Echo.cpp ****         returnval = limit;
 10093              		.loc 19 1640 19 view .LVU2795
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 313


 10094              	.LBE1479:
 10095              	.LBE1481:
 10096              	.LBB1482:
 10097              	.LBB1473:
 10098 0b38 B0EE667A 		vmov.f32	s14, s13
 10099              	.LVL691:
1640:Veno-Echo.cpp ****         returnval = limit;
 10100              		.loc 19 1640 19 view .LVU2796
 10101 0b3c 9FED190A 		vldr.32	s0, .L575+96
 10102 0b40 95E7     		b	.L513
 10103              	.L576:
 10104 0b42 00BF     		.align	2
 10105              	.L575:
 10106 0b44 00000000 		.word	.LANCHOR43
 10107 0b48 CDCCCC3D 		.word	1036831949
 10108 0b4c 00000000 		.word	.LANCHOR21
 10109 0b50 00000000 		.word	.LANCHOR22
 10110 0b54 00000000 		.word	.LANCHOR85
 10111 0b58 00000000 		.word	.LANCHOR86
 10112 0b5c 00000000 		.word	.LANCHOR12
 10113 0b60 00000000 		.word	.LANCHOR13
 10114 0b64 00000000 		.word	.LANCHOR83
 10115 0b68 00000000 		.word	.LANCHOR84
 10116 0b6c 00000000 		.word	.LANCHOR91
 10117 0b70 00000000 		.word	.LANCHOR92
 10118 0b74 249F2400 		.word	2400036
 10119 0b78 1C9F2400 		.word	2400028
 10120 0b7c 00000000 		.word	.LANCHOR23
 10121 0b80 00000000 		.word	.LANCHOR24
 10122 0b84 00000000 		.word	.LANCHOR89
 10123 0b88 00000000 		.word	.LANCHOR90
 10124 0b8c 00000000 		.word	.LANCHOR14
 10125 0b90 00000000 		.word	.LANCHOR15
 10126 0b94 00000000 		.word	.LANCHOR87
 10127 0b98 00000000 		.word	.LANCHOR88
 10128 0b9c 00000000 		.word	.LANCHOR93
 10129 0ba0 00000000 		.word	.LANCHOR94
 10130 0ba4 CDCC4C3E 		.word	1045220557
 10131 0ba8 CDCC4CBE 		.word	3192704205
 10132              	.LVL692:
 10133              	.L531:
1640:Veno-Echo.cpp ****         returnval = limit;
 10134              		.loc 19 1640 19 view .LVU2797
 10135              	.LBE1473:
 10136              	.LBE1482:
 10137              	.LBE1488:
 10138              	.LBE1820:
 10139              	.LBB1821:
 10140              	.LBB1748:
 10141              	.LBB1741:
 10142              	.LBB1739:
 10143 0bac F0EE667A 		vmov.f32	s15, s13
 10144              	.LVL693:
1640:Veno-Echo.cpp ****         returnval = limit;
 10145              		.loc 19 1640 19 view .LVU2798
 10146 0bb0 76E6     		b	.L496
 10147              	.LVL694:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 314


 10148              	.L529:
1640:Veno-Echo.cpp ****         returnval = limit;
 10149              		.loc 19 1640 19 view .LVU2799
 10150              	.LBE1739:
 10151              	.LBE1741:
 10152              	.LBB1742:
 10153              	.LBB1733:
 10154 0bb2 B0EE667A 		vmov.f32	s14, s13
 10155              	.LVL695:
1640:Veno-Echo.cpp ****         returnval = limit;
 10156              		.loc 19 1640 19 view .LVU2800
 10157 0bb6 1FED050A 		vldr.32	s0, .L575+96
 10158 0bba 5EE6     		b	.L495
 10159              	.LVL696:
 10160              	.L472:
1640:Veno-Echo.cpp ****         returnval = limit;
 10161              		.loc 19 1640 19 view .LVU2801
 10162              	.LBE1733:
 10163              	.LBE1742:
 10164              	.LBE1748:
 10165              	.LBE1821:
 10166              	.LBB1822:
 10167              	.LBB1687:
 10168              	.LBB1676:
 116:delayline_reverse.h ****                 }
 10169              		.loc 18 116 21 view .LVU2802
 10170 0bbc AB60     		str	r3, [r5, #8]
 10171 0bbe DEE6     		b	.L474
 10172              	.LVL697:
 10173              	.L482:
 116:delayline_reverse.h ****                 }
 10174              		.loc 18 116 21 view .LVU2803
 10175              	.LBE1676:
 10176              	.LBE1687:
 10177              	.LBE1822:
 10178              	.LBB1823:
 10179              	.LBB1713:
 10180              	.LBB1709:
 10181 0bc0 A260     		str	r2, [r4, #8]
 10182 0bc2 B9E6     		b	.L484
 10183              	.LVL698:
 10184              	.L451:
 116:delayline_reverse.h ****                 }
 10185              		.loc 18 116 21 view .LVU2804
 10186              	.LBE1709:
 10187              	.LBE1713:
 10188              	.LBE1823:
 10189              	.LBE1837:
 10190              	.LBE1848:
 577:Veno-Echo.cpp **** }
 10191              		.loc 19 577 1 view .LVU2805
 10192 0bc4 13B0     		add	sp, sp, #76
 10193              		.cfi_remember_state
 10194              		.cfi_def_cfa_offset 92
 10195              		@ sp needed
 10196 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 10197              		.cfi_restore 92
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 315


 10198              		.cfi_restore 93
 10199              		.cfi_restore 90
 10200              		.cfi_restore 91
 10201              		.cfi_restore 88
 10202              		.cfi_restore 89
 10203              		.cfi_restore 86
 10204              		.cfi_restore 87
 10205              		.cfi_restore 84
 10206              		.cfi_restore 85
 10207              		.cfi_restore 82
 10208              		.cfi_restore 83
 10209              		.cfi_restore 80
 10210              		.cfi_restore 81
 10211              		.cfi_def_cfa_offset 36
 10212 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10213              	.LVL699:
 10214              	.L565:
 10215              		.cfi_restore_state
 10216              	.LBB1849:
 10217              	.LBB1838:
 10218              	.LBB1824:
 10219              	.LBB1714:
 10220              	.LBB1710:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10221              		.loc 18 130 17 view .LVU2806
 10222 0bce C2ED007A 		vstr.32	s15, [r2]
 10223 0bd2 E4E4     		b	.L486
 10224              	.L489:
 145:delayline_reverse.h ****                     playinghead_ = false;
 10225              		.loc 18 145 21 view .LVU2807
 10226 0bd4 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10227              		.loc 18 144 21 view .LVU2808
 10228 0bd6 039C     		ldr	r4, [sp, #12]
 10229              	.LVL700:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10230              		.loc 18 144 21 view .LVU2809
 10231 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10232              		.loc 18 145 21 view .LVU2810
 10233 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 10234              		.loc 18 146 21 view .LVU2811
 10235 0bdc 0170     		strb	r1, [r0]
 10236 0bde DEE4     		b	.L486
 10237              	.LVL701:
 10238              	.L530:
 146:delayline_reverse.h ****                 }
 10239              		.loc 18 146 21 view .LVU2812
 10240              	.LBE1710:
 10241              	.LBE1714:
 10242              	.LBE1824:
 10243              	.LBB1825:
 10244              	.LBB1749:
 10245              	.LBB1743:
 10246              	.LBB1734:
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 316


 10247              		.loc 19 1642 19 view .LVU2813
 10248 0be0 B0EE667A 		vmov.f32	s14, s13
 10249              	.LVL702:
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10250              		.loc 19 1642 19 view .LVU2814
 10251 0be4 1FED100A 		vldr.32	s0, .L575+100
 10252 0be8 47E6     		b	.L495
 10253              	.LVL703:
 10254              	.L539:
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10255              		.loc 19 1642 19 view .LVU2815
 10256              	.LBE1734:
 10257              	.LBE1743:
 10258              	.LBE1749:
 10259              	.LBE1825:
 10260              	.LBB1826:
 10261              	.LBB1489:
 10262              	.LBB1483:
 10263              	.LBB1474:
 10264 0bea B0EE667A 		vmov.f32	s14, s13
 10265              	.LVL704:
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10266              		.loc 19 1642 19 view .LVU2816
 10267 0bee 1FED120A 		vldr.32	s0, .L575+100
 10268 0bf2 3CE7     		b	.L513
 10269              	.LVL705:
 10270              	.L453:
1642:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10271              		.loc 19 1642 19 view .LVU2817
 10272              	.LBE1474:
 10273              	.LBE1483:
 10274              	.LBE1489:
 10275              	.LBE1826:
 10276              	.LBE1838:
 10277              	.LBE1849:
 344:Veno-Echo.cpp ****             case 14:
 10278              		.loc 19 344 13 is_stmt 1 view .LVU2818
 345:Veno-Echo.cpp ****                 Update_filterXfade();
 10279              		.loc 19 345 17 view .LVU2819
 345:Veno-Echo.cpp ****                 Update_filterXfade();
 10280              		.loc 19 345 35 is_stmt 0 view .LVU2820
 10281 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 10282              	.LVL706:
 346:Veno-Echo.cpp ****             break;
 10283              		.loc 19 346 13 is_stmt 1 view .LVU2821
 10284 0bf8 FFF739BA 		b	.L452
 10285              	.L456:
 336:Veno-Echo.cpp ****             case 12:
 10286              		.loc 19 336 13 view .LVU2822
 337:Veno-Echo.cpp ****                 Update_width();
 10287              		.loc 19 337 17 view .LVU2823
 337:Veno-Echo.cpp ****                 Update_width();
 10288              		.loc 19 337 29 is_stmt 0 view .LVU2824
 10289 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 10290              	.LVL707:
 338:Veno-Echo.cpp ****             break;
 10291              		.loc 19 338 13 is_stmt 1 view .LVU2825
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 317


 10292 0c00 FFF735BA 		b	.L452
 10293              	.L457:
 332:Veno-Echo.cpp ****             case 11:
 10294              		.loc 19 332 13 view .LVU2826
 333:Veno-Echo.cpp ****                 Update_width_CV();
 10295              		.loc 19 333 17 view .LVU2827
 10296              	.LBB1850:
 10297              	.LBI1850:
1074:Veno-Echo.cpp **** void Update_width_CV()
 10298              		.loc 19 1074 6 view .LVU2828
 10299              	.LBB1851:
1076:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 10300              		.loc 19 1076 5 view .LVU2829
1076:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 10301              		.loc 19 1076 30 is_stmt 0 view .LVU2830
 10302 0c04 0521     		movs	r1, #5
 10303 0c06 2748     		ldr	r0, .L577
 10304 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 10305              	.LVL708:
1076:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 10306              		.loc 19 1076 13 view .LVU2831
 10307 0c0c 264B     		ldr	r3, .L577+4
 10308 0c0e 83ED000A 		vstr.32	s0, [r3]
1077:Veno-Echo.cpp **** }
 10309              		.loc 19 1077 1 view .LVU2832
 10310 0c12 FFF72CBA 		b	.L452
 10311              	.L458:
 10312              	.LBE1851:
 10313              	.LBE1850:
 328:Veno-Echo.cpp ****             case 10:
 10314              		.loc 19 328 13 is_stmt 1 view .LVU2833
 329:Veno-Echo.cpp ****                 Update_drywet();
 10315              		.loc 19 329 17 view .LVU2834
 329:Veno-Echo.cpp ****                 Update_drywet();
 10316              		.loc 19 329 30 is_stmt 0 view .LVU2835
 10317 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 10318              	.LVL709:
 330:Veno-Echo.cpp ****             break;
 10319              		.loc 19 330 13 is_stmt 1 view .LVU2836
 10320 0c1a FFF728BA 		b	.L452
 10321              	.L459:
 324:Veno-Echo.cpp ****             case 9:
 10322              		.loc 19 324 13 view .LVU2837
 325:Veno-Echo.cpp ****                 Update_drywet_CV();
 10323              		.loc 19 325 17 view .LVU2838
 10324              	.LBB1852:
 10325              	.LBI1852:
 980:Veno-Echo.cpp **** void Update_drywet_CV()
 10326              		.loc 19 980 6 view .LVU2839
 10327              	.LBB1853:
 982:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 10328              		.loc 19 982 5 view .LVU2840
 982:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 10329              		.loc 19 982 32 is_stmt 0 view .LVU2841
 10330 0c1e 0421     		movs	r1, #4
 10331 0c20 2048     		ldr	r0, .L577
 10332 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 318


 10333              	.LVL710:
 982:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 10334              		.loc 19 982 15 view .LVU2842
 10335 0c26 214B     		ldr	r3, .L577+8
 10336 0c28 83ED000A 		vstr.32	s0, [r3]
 983:Veno-Echo.cpp **** }
 10337              		.loc 19 983 1 view .LVU2843
 10338 0c2c FFF71FBA 		b	.L452
 10339              	.L460:
 10340              	.LBE1853:
 10341              	.LBE1852:
 320:Veno-Echo.cpp ****             case 8:
 10342              		.loc 19 320 13 is_stmt 1 view .LVU2844
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 10343              		.loc 19 321 17 view .LVU2845
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 10344              		.loc 19 321 33 is_stmt 0 view .LVU2846
 10345 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 10346              	.LVL711:
 322:Veno-Echo.cpp ****             break;
 10347              		.loc 19 322 13 is_stmt 1 view .LVU2847
 10348 0c34 FFF71BBA 		b	.L452
 10349              	.L461:
 316:Veno-Echo.cpp ****             case 7:
 10350              		.loc 19 316 13 view .LVU2848
 317:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 10351              		.loc 19 317 17 view .LVU2849
 10352              	.LBB1854:
 10353              	.LBI1854:
 947:Veno-Echo.cpp **** void Update_feedbackR_CV()
 10354              		.loc 19 947 6 view .LVU2850
 10355              	.LBB1855:
 949:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 10356              		.loc 19 949 5 view .LVU2851
 949:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 10357              		.loc 19 949 35 is_stmt 0 view .LVU2852
 10358 0c38 0321     		movs	r1, #3
 10359 0c3a 1A48     		ldr	r0, .L577
 10360 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 10361              	.LVL712:
 949:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 10362              		.loc 19 949 18 view .LVU2853
 10363 0c40 1B4B     		ldr	r3, .L577+12
 10364 0c42 83ED000A 		vstr.32	s0, [r3]
 950:Veno-Echo.cpp **** }
 10365              		.loc 19 950 1 view .LVU2854
 10366 0c46 FFF712BA 		b	.L452
 10367              	.L462:
 10368              	.LBE1855:
 10369              	.LBE1854:
 312:Veno-Echo.cpp ****             case 6:
 10370              		.loc 19 312 13 is_stmt 1 view .LVU2855
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 10371              		.loc 19 313 17 view .LVU2856
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 10372              		.loc 19 313 33 is_stmt 0 view .LVU2857
 10373 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 319


 10374              	.LVL713:
 314:Veno-Echo.cpp ****             break;
 10375              		.loc 19 314 13 is_stmt 1 view .LVU2858
 10376 0c4e FFF70EBA 		b	.L452
 10377              	.L463:
 308:Veno-Echo.cpp ****             case 5:
 10378              		.loc 19 308 13 view .LVU2859
 309:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 10379              		.loc 19 309 17 view .LVU2860
 10380              	.LBB1856:
 10381              	.LBI1856:
 913:Veno-Echo.cpp **** void Update_feedbackL_CV()
 10382              		.loc 19 913 6 view .LVU2861
 10383              	.LBB1857:
 915:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 10384              		.loc 19 915 5 view .LVU2862
 915:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 10385              		.loc 19 915 35 is_stmt 0 view .LVU2863
 10386 0c52 0221     		movs	r1, #2
 10387 0c54 1348     		ldr	r0, .L577
 10388 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 10389              	.LVL714:
 915:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 10390              		.loc 19 915 18 view .LVU2864
 10391 0c5a 164B     		ldr	r3, .L577+16
 10392 0c5c 83ED000A 		vstr.32	s0, [r3]
 916:Veno-Echo.cpp **** }
 10393              		.loc 19 916 1 view .LVU2865
 10394 0c60 FFF705BA 		b	.L452
 10395              	.L464:
 10396              	.LBE1857:
 10397              	.LBE1856:
 304:Veno-Echo.cpp ****             case 4:
 10398              		.loc 19 304 13 is_stmt 1 view .LVU2866
 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 10399              		.loc 19 305 17 view .LVU2867
 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 10400              		.loc 19 305 34 is_stmt 0 view .LVU2868
 10401 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 10402              	.LVL715:
 306:Veno-Echo.cpp ****             break;
 10403              		.loc 19 306 13 is_stmt 1 view .LVU2869
 10404 0c68 FFF701BA 		b	.L452
 10405              	.L465:
 300:Veno-Echo.cpp ****             case 3:
 10406              		.loc 19 300 13 view .LVU2870
 301:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 10407              		.loc 19 301 17 view .LVU2871
 10408              	.LBB1858:
 10409              	.LBI1858:
 851:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 10410              		.loc 19 851 6 view .LVU2872
 10411              	.LBB1859:
 853:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 10412              		.loc 19 853 5 view .LVU2873
 853:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 10413              		.loc 19 853 36 is_stmt 0 view .LVU2874
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 320


 10414 0c6c 0121     		movs	r1, #1
 10415 0c6e 0D48     		ldr	r0, .L577
 10416 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 10417              	.LVL716:
 853:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 10418              		.loc 19 853 19 view .LVU2875
 10419 0c74 104B     		ldr	r3, .L577+20
 10420 0c76 83ED000A 		vstr.32	s0, [r3]
 854:Veno-Echo.cpp **** }
 10421              		.loc 19 854 1 view .LVU2876
 10422 0c7a FFF7F8B9 		b	.L452
 10423              	.L466:
 10424              	.LBE1859:
 10425              	.LBE1858:
 296:Veno-Echo.cpp ****             case 2:
 10426              		.loc 19 296 13 is_stmt 1 view .LVU2877
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 10427              		.loc 19 297 17 view .LVU2878
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 10428              		.loc 19 297 34 is_stmt 0 view .LVU2879
 10429 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 10430              	.LVL717:
 298:Veno-Echo.cpp ****             break;
 10431              		.loc 19 298 13 is_stmt 1 view .LVU2880
 10432 0c82 FFF7F4B9 		b	.L452
 10433              	.L467:
 292:Veno-Echo.cpp ****             case 1:
 10434              		.loc 19 292 13 view .LVU2881
 293:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 10435              		.loc 19 293 17 view .LVU2882
 10436              	.LBB1860:
 10437              	.LBI1860:
 787:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 10438              		.loc 19 787 6 view .LVU2883
 10439              	.LBB1861:
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 10440              		.loc 19 789 5 view .LVU2884
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 10441              		.loc 19 789 36 is_stmt 0 view .LVU2885
 10442 0c86 0021     		movs	r1, #0
 10443 0c88 0648     		ldr	r0, .L577
 10444 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 10445              	.LVL718:
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 10446              		.loc 19 789 19 view .LVU2886
 10447 0c8e 0B4B     		ldr	r3, .L577+24
 10448 0c90 83ED000A 		vstr.32	s0, [r3]
 790:Veno-Echo.cpp **** }
 10449              		.loc 19 790 1 view .LVU2887
 10450 0c94 FFF7EBB9 		b	.L452
 10451              	.L468:
 10452              	.LBE1861:
 10453              	.LBE1860:
 287:Veno-Echo.cpp ****             case 0:
 10454              		.loc 19 287 13 is_stmt 1 view .LVU2888
 288:Veno-Echo.cpp ****                 Update_Buttons();
 10455              		.loc 19 288 17 view .LVU2889
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 321


 288:Veno-Echo.cpp ****                 Update_Buttons();
 10456              		.loc 19 288 31 is_stmt 0 view .LVU2890
 10457 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 10458              	.LVL719:
 289:Veno-Echo.cpp ****                 GetModCV();
 10459              		.loc 19 289 17 is_stmt 1 view .LVU2891
 289:Veno-Echo.cpp ****                 GetModCV();
 10460              		.loc 19 289 25 is_stmt 0 view .LVU2892
 10461 0c9c FFF7FEFF 		bl	_Z8GetModCVv
 10462              	.LVL720:
 290:Veno-Echo.cpp ****             break;
 10463              		.loc 19 290 13 is_stmt 1 view .LVU2893
 10464 0ca0 FFF7E5B9 		b	.L452
 10465              	.L578:
 10466              		.align	2
 10467              	.L577:
 10468 0ca4 18000000 		.word	.LANCHOR4+24
 10469 0ca8 00000000 		.word	.LANCHOR32
 10470 0cac 00000000 		.word	.LANCHOR25
 10471 0cb0 00000000 		.word	.LANCHOR17
 10472 0cb4 00000000 		.word	.LANCHOR7
 10473 0cb8 00000000 		.word	.LANCHOR6
 10474 0cbc 00000000 		.word	.LANCHOR5
 10475              		.cfi_endproc
 10476              	.LFE4288:
 10478              		.section	.text._Z9HardLimitff,"ax",%progbits
 10479              		.align	1
 10480              		.p2align 2,,3
 10481              		.global	_Z9HardLimitff
 10482              		.syntax unified
 10483              		.thumb
 10484              		.thumb_func
 10485              		.fpu fpv5-d16
 10487              	_Z9HardLimitff:
 10488              	.LVL721:
 10489              	.LFB4315:
1637:Veno-Echo.cpp **** {
 10490              		.loc 19 1637 1 view -0
 10491              		.cfi_startproc
 10492              		@ args = 0, pretend = 0, frame = 0
 10493              		@ frame_needed = 0, uses_anonymous_args = 0
 10494              		@ link register save eliminated.
1638:Veno-Echo.cpp ****     float returnval{};
 10495              		.loc 19 1638 5 view .LVU2895
1639:Veno-Echo.cpp ****     if (input > limit)
 10496              		.loc 19 1639 5 view .LVU2896
 10497 0000 B4EEE00A 		vcmpe.f32	s0, s1
 10498 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10499 0008 07DC     		bgt	.L580
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10500              		.loc 19 1641 10 view .LVU2897
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10501              		.loc 19 1641 28 is_stmt 0 view .LVU2898
 10502 000a F1EE600A 		vneg.f32	s1, s1
 10503              	.LVL722:
1641:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10504              		.loc 19 1641 10 view .LVU2899
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 322


 10505 000e F4EEC00A 		vcmpe.f32	s1, s0
 10506 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1644:Veno-Echo.cpp ****         returnval = input;
 10507              		.loc 19 1644 19 view .LVU2900
 10508 0016 70FE800A 		vselgt.f32	s1, s1, s0
 10509              	.L580:
 10510              	.LVL723:
1646:Veno-Echo.cpp ****     return returnval;   
 10511              		.loc 19 1646 5 is_stmt 1 view .LVU2901
1647:Veno-Echo.cpp **** }
 10512              		.loc 19 1647 1 is_stmt 0 view .LVU2902
 10513 001a B0EE600A 		vmov.f32	s0, s1
 10514              	.LVL724:
1647:Veno-Echo.cpp **** }
 10515              		.loc 19 1647 1 view .LVU2903
 10516 001e 7047     		bx	lr
 10517              		.cfi_endproc
 10518              	.LFE4315:
 10520              		.section	.text._Z10PotCVComboff,"ax",%progbits
 10521              		.align	1
 10522              		.p2align 2,,3
 10523              		.global	_Z10PotCVComboff
 10524              		.syntax unified
 10525              		.thumb
 10526              		.thumb_func
 10527              		.fpu fpv5-d16
 10529              	_Z10PotCVComboff:
 10530              	.LVL725:
 10531              	.LFB4316:
1650:Veno-Echo.cpp **** {
 10532              		.loc 19 1650 1 is_stmt 1 view -0
 10533              		.cfi_startproc
 10534              		@ args = 0, pretend = 0, frame = 0
 10535              		@ frame_needed = 0, uses_anonymous_args = 0
 10536              		@ link register save eliminated.
1651:Veno-Echo.cpp ****     float output{};
 10537              		.loc 19 1651 5 view .LVU2905
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10538              		.loc 19 1652 5 view .LVU2906
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10539              		.loc 19 1652 39 is_stmt 0 view .LVU2907
 10540 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10541              		.loc 19 1652 49 view .LVU2908
 10542 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10543              		.loc 19 1652 12 view .LVU2909
 10544 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10545              		.loc 19 1652 39 view .LVU2910
 10546 000c 77EEE00A 		vsub.f32	s1, s15, s1
 10547              	.LVL726:
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10548              		.loc 19 1652 49 view .LVU2911
 10549 0010 70EEE60A 		vsub.f32	s1, s1, s13
1652:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10550              		.loc 19 1652 12 view .LVU2912
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 323


 10551 0014 A0EE870A 		vfma.f32	s0, s1, s14
 10552              	.LVL727:
1654:Veno-Echo.cpp ****     if(output < 0.0f)
 10553              		.loc 19 1654 5 is_stmt 1 view .LVU2913
 10554 0018 B5EEC00A 		vcmpe.f32	s0, #0
 10555 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10556 0020 06D4     		bmi	.L586
1659:Veno-Echo.cpp ****     if(output > 1.0f)
 10557              		.loc 19 1659 5 view .LVU2914
1661:Veno-Echo.cpp ****         output = 1.0f;
 10558              		.loc 19 1661 16 is_stmt 0 view .LVU2915
 10559 0022 B4EE670A 		vcmp.f32	s0, s15
 10560 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10561 002a 37FE800A 		vselgt.f32	s0, s15, s0
 10562              	.LVL728:
1661:Veno-Echo.cpp ****         output = 1.0f;
 10563              		.loc 19 1661 16 view .LVU2916
 10564 002e 7047     		bx	lr
 10565              	.LVL729:
 10566              	.L586:
1656:Veno-Echo.cpp ****         output = 0.0f;
 10567              		.loc 19 1656 16 view .LVU2917
 10568 0030 9FED010A 		vldr.32	s0, .L588
 10569              	.LVL730:
1664:Veno-Echo.cpp ****     return output;
 10570              		.loc 19 1664 5 is_stmt 1 view .LVU2918
1665:Veno-Echo.cpp **** }
 10571              		.loc 19 1665 1 is_stmt 0 view .LVU2919
 10572 0034 7047     		bx	lr
 10573              	.L589:
 10574 0036 00BF     		.align	2
 10575              	.L588:
 10576 0038 00000000 		.word	0
 10577              		.cfi_endproc
 10578              	.LFE4316:
 10580              		.section	.text._Z16checkPickupStateff11pickupStateb,"ax",%progbits
 10581              		.align	1
 10582              		.p2align 2,,3
 10583              		.global	_Z16checkPickupStateff11pickupStateb
 10584              		.syntax unified
 10585              		.thumb
 10586              		.thumb_func
 10587              		.fpu fpv5-d16
 10589              	_Z16checkPickupStateff11pickupStateb:
 10590              	.LVL731:
 10591              	.LFB4317:
1668:Veno-Echo.cpp **** {
 10592              		.loc 19 1668 1 is_stmt 1 view -0
 10593              		.cfi_startproc
 10594              		@ args = 0, pretend = 0, frame = 0
 10595              		@ frame_needed = 0, uses_anonymous_args = 0
 10596              		@ link register save eliminated.
1669:Veno-Echo.cpp ****     pickupState retval{};
 10597              		.loc 19 1669 5 view .LVU2921
1671:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 10598              		.loc 19 1671 5 view .LVU2922
1668:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 324


 10599              		.loc 19 1668 1 is_stmt 0 view .LVU2923
 10600 0000 F0EE607A 		vmov.f32	s15, s1
1671:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 10601              		.loc 19 1671 5 view .LVU2924
 10602 0004 51B1     		cbz	r1, .L591
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 10603              		.loc 19 1673 9 is_stmt 1 view .LVU2925
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 10604              		.loc 19 1673 31 is_stmt 0 view .LVU2926
 10605 0006 DFED0B0A 		vldr.32	s1, .L596
 10606              	.LVL732:
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 10607              		.loc 19 1673 31 view .LVU2927
 10608 000a 77EEE06A 		vsub.f32	s13, s15, s1
1673:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 10609              		.loc 19 1673 9 view .LVU2928
 10610 000e F4EEC06A 		vcmpe.f32	s13, s0
 10611 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10612 0016 03DD     		ble	.L595
1675:Veno-Echo.cpp ****             retval = BELOW;
 10613              		.loc 19 1675 20 view .LVU2929
 10614 0018 0020     		movs	r0, #0
 10615              	.LVL733:
1712:Veno-Echo.cpp ****     return retval;
 10616              		.loc 19 1712 5 is_stmt 1 view .LVU2930
 10617              		.loc 19 1713 1 is_stmt 0 view .LVU2931
 10618 001a 7047     		bx	lr
 10619              	.LVL734:
 10620              	.L591:
 10621              		.loc 19 1713 1 view .LVU2932
 10622 001c FFF7FEBF 		b	_Z16checkPickupStateff11pickupStateb.part.0
 10623              	.LVL735:
 10624              	.L595:
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 10625              		.loc 19 1678 14 is_stmt 1 view .LVU2933
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 10626              		.loc 19 1678 36 is_stmt 0 view .LVU2934
 10627 0020 77EEA00A 		vadd.f32	s1, s15, s1
1678:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 10628              		.loc 19 1678 14 view .LVU2935
 10629 0024 F4EEC00A 		vcmpe.f32	s1, s0
 10630 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1685:Veno-Echo.cpp ****             retval = PICKEDUP;
 10631              		.loc 19 1685 20 view .LVU2936
 10632 002c 4CBF     		ite	mi
 10633 002e 0120     		movmi	r0, #1
 10634              	.LVL736:
1685:Veno-Echo.cpp ****             retval = PICKEDUP;
 10635              		.loc 19 1685 20 view .LVU2937
 10636 0030 0220     		movpl	r0, #2
 10637 0032 7047     		bx	lr
 10638              	.L597:
 10639              		.align	2
 10640              	.L596:
 10641 0034 0AD7A33B 		.word	1000593162
 10642              		.cfi_endproc
 10643              	.LFE4317:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 325


 10645              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 10646              		.align	1
 10647              		.p2align 2,,3
 10648              		.syntax unified
 10649              		.thumb
 10650              		.thumb_func
 10651              		.fpu fpv5-d16
 10653              	_GLOBAL__sub_I_delMemsL:
 10654              	.LFB4896:
 10655              		.loc 19 1713 1 is_stmt 1 view -0
 10656              		.cfi_startproc
 10657              		@ args = 0, pretend = 0, frame = 0
 10658              		@ frame_needed = 0, uses_anonymous_args = 0
 10659              	.LBB2018:
 10660              	.LBI2018:
 10661              		.loc 19 1713 1 view .LVU2939
 10662              	.LVL737:
 10663              	.LBB2019:
 10664              	.LBB2020:
 10665              	.LBI2020:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 10666              		.loc 2 21 5 view .LVU2940
 10667              	.LBB2021:
 10668              	.LBB2022:
 10669              	.LBI2022:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 10670              		.loc 6 36 5 view .LVU2941
 10671              	.LBE2022:
 10672              	.LBE2021:
 10673              	.LBE2020:
 10674              	.LBE2019:
 10675              	.LBE2018:
 10676              		.loc 19 1713 1 is_stmt 0 view .LVU2942
 10677 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 10678              		.cfi_def_cfa_offset 24
 10679              		.cfi_offset 4, -24
 10680              		.cfi_offset 5, -20
 10681              		.cfi_offset 6, -16
 10682              		.cfi_offset 7, -12
 10683              		.cfi_offset 8, -8
 10684              		.cfi_offset 14, -4
 10685              	.LBB2141:
 10686              	.LBB2137:
 10687              	.LBB2037:
 10688              	.LBB2035:
 10689              	.LBB2027:
 10690              	.LBB2023:
 10691              	.LBB2024:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 10692              		.loc 6 36 35 view .LVU2943
 10693 0004 9448     		ldr	r0, .L600
 10694 0006 0026     		movs	r6, #0
 10695              	.LBE2024:
 10696              	.LBE2023:
 10697              	.LBE2027:
 10698              	.LBE2035:
 10699              	.LBE2037:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 326


 10700              		.file 25 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 10701              		.loc 25 33 18 view .LVU2944
 10702 0008 944C     		ldr	r4, .L600+4
  40:Veno-Echo.cpp **** static Svf LPF_L;
 10703              		.loc 19 40 12 view .LVU2945
 10704 000a 954D     		ldr	r5, .L600+8
 10705              		.loc 25 33 18 view .LVU2946
 10706 000c 2246     		mov	r2, r4
 10707 000e 9549     		ldr	r1, .L600+12
 10708              	.LBB2038:
 10709              	.LBB2036:
 10710              	.LBB2028:
 10711              	.LBB2026:
 10712              	.LBB2025:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 10713              		.loc 6 36 35 view .LVU2947
 10714 0010 4661     		str	r6, [r0, #20]
 10715              	.LVL738:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 10716              		.loc 6 36 35 view .LVU2948
 10717              	.LBE2025:
 10718              	.LBE2026:
 10719              	.LBE2028:
 10720              	.LBB2029:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 327


 10721              	.LBI2029:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 10722              		.loc 5 84 5 is_stmt 1 view .LVU2949
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 10723              		.loc 5 84 5 is_stmt 0 view .LVU2950
 10724              	.LBE2029:
 10725              	.LBB2030:
 10726              	.LBI2030:
 10727              		.file 26 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 328


  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 10728              		.loc 26 83 5 is_stmt 1 view .LVU2951
 10729              	.LBB2031:
 10730              	.LBB2032:
 10731              		.loc 26 83 33 is_stmt 0 view .LVU2952
 10732 0012 0662     		str	r6, [r0, #32]
 10733              	.LVL739:
 10734              		.loc 26 83 33 view .LVU2953
 10735              	.LBE2032:
 10736              	.LBE2031:
 10737              	.LBE2030:
 10738              	.LBB2033:
 10739              	.LBI2033:
  40:../libdaisy/src/hid/usb.h **** 
 10740              		.loc 4 40 5 is_stmt 1 view .LVU2954
  40:../libdaisy/src/hid/usb.h **** 
 10741              		.loc 4 40 5 is_stmt 0 view .LVU2955
 10742              	.LBE2033:
 10743              	.LBB2034:
 10744              	.LBI2034:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 10745              		.loc 3 56 5 is_stmt 1 view .LVU2956
  56:../libdaisy/src/sys/system.h ****     ~System() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 329


 10746              		.loc 3 56 5 is_stmt 0 view .LVU2957
 10747              	.LBE2034:
 10748              	.LBE2036:
 10749              	.LBE2038:
 10750              		.loc 25 33 18 view .LVU2958
 10751 0014 FFF7FEFF 		bl	__aeabi_atexit
 10752              	.LVL740:
 10753              	.LBB2039:
 10754              	.LBI2039:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10755              		.loc 9 21 5 is_stmt 1 view .LVU2959
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10756              		.loc 9 21 5 is_stmt 0 view .LVU2960
 10757              	.LBE2039:
  40:Veno-Echo.cpp **** static Svf LPF_L;
 10758              		.loc 19 40 12 view .LVU2961
 10759 0018 2246     		mov	r2, r4
 10760 001a 2946     		mov	r1, r5
 10761 001c 9248     		ldr	r0, .L600+16
 10762 001e FFF7FEFF 		bl	__aeabi_atexit
 10763              	.LVL741:
 10764              	.LBB2040:
 10765              	.LBI2040:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10766              		.loc 9 21 5 is_stmt 1 view .LVU2962
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10767              		.loc 9 21 5 is_stmt 0 view .LVU2963
 10768              	.LBE2040:
  41:Veno-Echo.cpp **** static Svf LPF_R;
 10769              		.loc 19 41 12 view .LVU2964
 10770 0022 2246     		mov	r2, r4
 10771 0024 2946     		mov	r1, r5
 10772 0026 9148     		ldr	r0, .L600+20
 10773 0028 FFF7FEFF 		bl	__aeabi_atexit
 10774              	.LVL742:
 10775              	.LBB2041:
 10776              	.LBI2041:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10777              		.loc 9 21 5 is_stmt 1 view .LVU2965
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10778              		.loc 9 21 5 is_stmt 0 view .LVU2966
 10779              	.LBE2041:
  42:Veno-Echo.cpp **** static Svf HPF_L;
 10780              		.loc 19 42 12 view .LVU2967
 10781 002c 2246     		mov	r2, r4
 10782 002e 2946     		mov	r1, r5
 10783 0030 8F48     		ldr	r0, .L600+24
 10784 0032 FFF7FEFF 		bl	__aeabi_atexit
 10785              	.LVL743:
 10786              	.LBB2042:
 10787              	.LBI2042:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10788              		.loc 9 21 5 is_stmt 1 view .LVU2968
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10789              		.loc 9 21 5 is_stmt 0 view .LVU2969
 10790              	.LBE2042:
  43:Veno-Echo.cpp **** static Svf HPF_R;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 330


 10791              		.loc 19 43 12 view .LVU2970
 10792 0036 2246     		mov	r2, r4
 10793 0038 2946     		mov	r1, r5
 10794 003a 8E48     		ldr	r0, .L600+28
 10795 003c FFF7FEFF 		bl	__aeabi_atexit
 10796              	.LVL744:
 10797              	.LBB2043:
 10798              	.LBI2043:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10799              		.loc 9 21 5 is_stmt 1 view .LVU2971
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10800              		.loc 9 21 5 is_stmt 0 view .LVU2972
 10801              	.LBE2043:
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
 10802              		.loc 19 45 12 view .LVU2973
 10803 0040 2246     		mov	r2, r4
 10804 0042 2946     		mov	r1, r5
 10805 0044 8C48     		ldr	r0, .L600+32
 10806 0046 FFF7FEFF 		bl	__aeabi_atexit
 10807              	.LVL745:
 10808              	.LBB2044:
 10809              	.LBI2044:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10810              		.loc 9 21 5 is_stmt 1 view .LVU2974
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10811              		.loc 9 21 5 is_stmt 0 view .LVU2975
 10812              	.LBE2044:
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
 10813              		.loc 19 46 12 view .LVU2976
 10814 004a 2246     		mov	r2, r4
 10815 004c 2946     		mov	r1, r5
 10816 004e 8B48     		ldr	r0, .L600+36
 10817 0050 FFF7FEFF 		bl	__aeabi_atexit
 10818              	.LVL746:
 10819              	.LBB2045:
 10820              	.LBI2045:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10821              		.loc 9 21 5 is_stmt 1 view .LVU2977
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10822              		.loc 9 21 5 is_stmt 0 view .LVU2978
 10823              	.LBE2045:
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
 10824              		.loc 19 47 12 view .LVU2979
 10825 0054 2246     		mov	r2, r4
 10826 0056 2946     		mov	r1, r5
 10827 0058 8948     		ldr	r0, .L600+40
 10828 005a FFF7FEFF 		bl	__aeabi_atexit
 10829              	.LVL747:
 10830              	.LBB2046:
 10831              	.LBI2046:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10832              		.loc 9 21 5 is_stmt 1 view .LVU2980
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10833              		.loc 9 21 5 is_stmt 0 view .LVU2981
 10834              	.LBE2046:
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
 10835              		.loc 19 48 12 view .LVU2982
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 331


 10836 005e 2246     		mov	r2, r4
 10837 0060 2946     		mov	r1, r5
 10838 0062 8848     		ldr	r0, .L600+44
 10839 0064 FFF7FEFF 		bl	__aeabi_atexit
 10840              	.LVL748:
 10841              	.LBB2047:
 10842              	.LBI2047:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10843              		.loc 8 15 5 is_stmt 1 view .LVU2983
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10844              		.loc 8 15 5 is_stmt 0 view .LVU2984
 10845              	.LBE2047:
  50:Veno-Echo.cpp **** static Oscillator lfo;
 10846              		.loc 19 50 19 view .LVU2985
 10847 0068 2246     		mov	r2, r4
 10848 006a 8749     		ldr	r1, .L600+48
 10849              	.LBB2048:
 10850              	.LBB2049:
 10851              	.LBB2050:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10852              		.loc 12 45 13 view .LVU2986
 10853 006c 0025     		movs	r5, #0
 10854              	.LBE2050:
 10855              	.LBE2049:
 10856              	.LBE2048:
  50:Veno-Echo.cpp **** static Oscillator lfo;
 10857              		.loc 19 50 19 view .LVU2987
 10858 006e 8748     		ldr	r0, .L600+52
 10859 0070 FFF7FEFF 		bl	__aeabi_atexit
 10860              	.LVL749:
 10861              	.LBB2055:
 10862              	.LBI2048:
  43:envFollow.h   ****     {
 10863              		.loc 12 43 5 is_stmt 1 view .LVU2988
 10864              	.LBB2053:
 10865              	.LBB2051:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10866              		.loc 12 45 9 view .LVU2989
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 10867              		.loc 12 48 11 is_stmt 0 view .LVU2990
 10868 0074 864F     		ldr	r7, .L600+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10869              		.loc 12 45 13 view .LVU2991
 10870 0076 8748     		ldr	r0, .L600+60
 10871              	.LBE2051:
 10872              	.LBE2053:
 10873              	.LBE2055:
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 10874              		.loc 19 51 18 view .LVU2992
 10875 0078 2246     		mov	r2, r4
 10876 007a 8749     		ldr	r1, .L600+64
 10877              	.LBB2056:
 10878              	.LBB2054:
 10879              	.LBB2052:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10880              		.loc 12 45 13 view .LVU2993
 10881 007c 0560     		str	r5, [r0]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 332


  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 10882              		.loc 12 46 9 is_stmt 1 view .LVU2994
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 10883              		.loc 12 46 20 is_stmt 0 view .LVU2995
 10884 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 10885              		.loc 12 47 9 is_stmt 1 view .LVU2996
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 10886              		.loc 12 47 17 is_stmt 0 view .LVU2997
 10887 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 10888              		.loc 12 48 9 is_stmt 1 view .LVU2998
  50:envFollow.h   ****     }  
 10889              		.loc 12 50 21 is_stmt 0 view .LVU2999
 10890 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 10891              		.loc 12 48 11 view .LVU3000
 10892 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 10893              		.loc 12 49 9 is_stmt 1 view .LVU3001
  49:envFollow.h   ****         sample_noDC = 0.0f;
 10894              		.loc 12 49 15 is_stmt 0 view .LVU3002
 10895 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 10896              		.loc 12 50 9 is_stmt 1 view .LVU3003
 10897              	.LVL750:
  50:envFollow.h   ****     }  
 10898              		.loc 12 50 9 is_stmt 0 view .LVU3004
 10899              	.LBE2052:
 10900              	.LBE2054:
 10901              	.LBE2056:
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 10902              		.loc 19 51 18 view .LVU3005
 10903 0088 FFF7FEFF 		bl	__aeabi_atexit
 10904              	.LVL751:
 10905              	.LBB2057:
 10906              	.LBI2057:
  43:envFollow.h   ****     {
 10907              		.loc 12 43 5 is_stmt 1 view .LVU3006
 10908              	.LBB2058:
 10909              	.LBB2059:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10910              		.loc 12 45 9 view .LVU3007
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10911              		.loc 12 45 13 is_stmt 0 view .LVU3008
 10912 008c 8348     		ldr	r0, .L600+68
 10913              	.LBE2059:
 10914              	.LBE2058:
 10915              	.LBE2057:
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
 10916              		.loc 19 53 16 view .LVU3009
 10917 008e DFF8D082 		ldr	r8, .L600+264
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 10918              		.loc 19 51 27 view .LVU3010
 10919 0092 2246     		mov	r2, r4
 10920 0094 8049     		ldr	r1, .L600+64
 10921              	.LBB2062:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 333


 10922              	.LBB2061:
 10923              	.LBB2060:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10924              		.loc 12 45 13 view .LVU3011
 10925 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 10926              		.loc 12 46 9 is_stmt 1 view .LVU3012
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 10927              		.loc 12 46 20 is_stmt 0 view .LVU3013
 10928 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 10929              		.loc 12 47 9 is_stmt 1 view .LVU3014
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 10930              		.loc 12 47 17 is_stmt 0 view .LVU3015
 10931 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 10932              		.loc 12 48 9 is_stmt 1 view .LVU3016
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 10933              		.loc 12 48 11 is_stmt 0 view .LVU3017
 10934 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 10935              		.loc 12 49 9 is_stmt 1 view .LVU3018
  49:envFollow.h   ****         sample_noDC = 0.0f;
 10936              		.loc 12 49 15 is_stmt 0 view .LVU3019
 10937 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 10938              		.loc 12 50 9 is_stmt 1 view .LVU3020
  50:envFollow.h   ****     }  
 10939              		.loc 12 50 21 is_stmt 0 view .LVU3021
 10940 00a0 8560     		str	r5, [r0, #8]	@ float
 10941              	.LVL752:
  50:envFollow.h   ****     }  
 10942              		.loc 12 50 21 view .LVU3022
 10943              	.LBE2060:
 10944              	.LBE2061:
 10945              	.LBE2062:
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 10946              		.loc 19 51 27 view .LVU3023
 10947 00a2 FFF7FEFF 		bl	__aeabi_atexit
 10948              	.LVL753:
 10949              	.LBB2063:
 10950              	.LBI2063:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 10951              		.loc 11 14 5 is_stmt 1 view .LVU3024
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 10952              		.loc 11 14 5 is_stmt 0 view .LVU3025
 10953              	.LBE2063:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
 10954              		.loc 19 56 76 view .LVU3026
 10955 00a6 7E4F     		ldr	r7, .L600+72
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
 10956              		.loc 19 53 16 view .LVU3027
 10957 00a8 2246     		mov	r2, r4
 10958 00aa 4146     		mov	r1, r8
 10959 00ac 7D48     		ldr	r0, .L600+76
 10960 00ae FFF7FEFF 		bl	__aeabi_atexit
 10961              	.LVL754:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 334


 10962              	.LBB2064:
 10963              	.LBI2064:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 10964              		.loc 11 14 5 is_stmt 1 view .LVU3028
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 10965              		.loc 11 14 5 is_stmt 0 view .LVU3029
 10966              	.LBE2064:
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
 10967              		.loc 19 53 29 view .LVU3030
 10968 00b2 2246     		mov	r2, r4
 10969 00b4 4146     		mov	r1, r8
 10970 00b6 7C48     		ldr	r0, .L600+80
 10971 00b8 FFF7FEFF 		bl	__aeabi_atexit
 10972              	.LVL755:
 10973              	.LBB2065:
 10974              	.LBI2065:
  48:delayline_multitap.h ****     {
 10975              		.loc 17 48 5 is_stmt 1 view .LVU3031
  48:delayline_multitap.h ****     {
 10976              		.loc 17 48 5 is_stmt 0 view .LVU3032
 10977              	.LBE2065:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
 10978              		.loc 19 59 80 view .LVU3033
 10979 00bc 7B4D     		ldr	r5, .L600+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
 10980              		.loc 19 56 76 view .LVU3034
 10981 00be 2246     		mov	r2, r4
 10982 00c0 3946     		mov	r1, r7
 10983 00c2 7B48     		ldr	r0, .L600+88
 10984 00c4 FFF7FEFF 		bl	__aeabi_atexit
 10985              	.LVL756:
 10986              	.LBB2066:
 10987              	.LBI2066:
  48:delayline_multitap.h ****     {
 10988              		.loc 17 48 5 is_stmt 1 view .LVU3035
  48:delayline_multitap.h ****     {
 10989              		.loc 17 48 5 is_stmt 0 view .LVU3036
 10990              	.LBE2066:
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 10991              		.loc 19 57 76 view .LVU3037
 10992 00c8 2246     		mov	r2, r4
 10993 00ca 3946     		mov	r1, r7
 10994 00cc 7948     		ldr	r0, .L600+92
 10995 00ce FFF7FEFF 		bl	__aeabi_atexit
 10996              	.LVL757:
 10997              	.LBB2067:
 10998              	.LBI2067:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 10999              		.loc 18 38 5 is_stmt 1 view .LVU3038
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11000              		.loc 18 38 5 is_stmt 0 view .LVU3039
 11001              	.LBE2067:
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
 11002              		.loc 19 98 12 view .LVU3040
 11003 00d2 794F     		ldr	r7, .L600+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
 11004              		.loc 19 59 80 view .LVU3041
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 335


 11005 00d4 2246     		mov	r2, r4
 11006 00d6 2946     		mov	r1, r5
 11007 00d8 7848     		ldr	r0, .L600+100
 11008 00da FFF7FEFF 		bl	__aeabi_atexit
 11009              	.LVL758:
 11010              	.LBB2068:
 11011              	.LBI2068:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11012              		.loc 18 38 5 is_stmt 1 view .LVU3042
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11013              		.loc 18 38 5 is_stmt 0 view .LVU3043
 11014              	.LBE2068:
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11015              		.loc 19 60 80 view .LVU3044
 11016 00de 2246     		mov	r2, r4
 11017 00e0 2946     		mov	r1, r5
 11018 00e2 7748     		ldr	r0, .L600+104
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 11019              		.loc 19 102 11 view .LVU3045
 11020 00e4 774D     		ldr	r5, .L600+108
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11021              		.loc 19 60 80 view .LVU3046
 11022 00e6 FFF7FEFF 		bl	__aeabi_atexit
 11023              	.LVL759:
 11024              	.LBB2069:
 11025              	.LBI2069:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11026              		.loc 16 49 1 is_stmt 1 view .LVU3047
 11027              	.LBB2070:
 11028              	.LBB2071:
 11029              	.LBI2071:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 11030              		.loc 14 40 1 view .LVU3048
 11031              	.LBB2072:
 11032              	.LBB2073:
 11033              	.LBI2073:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11034              		.loc 15 24 5 view .LVU3049
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11035              		.loc 15 24 5 is_stmt 0 view .LVU3050
 11036              	.LBE2073:
 11037              	.LBB2074:
 11038              	.LBI2074:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11039              		.loc 8 15 5 is_stmt 1 view .LVU3051
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11040              		.loc 8 15 5 is_stmt 0 view .LVU3052
 11041              	.LBE2074:
 11042              	.LBE2072:
 11043              	.LBE2071:
 11044              	.LBE2070:
 11045              	.LBE2069:
 11046              	.LBE2137:
 11047              	.LBE2141:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11048              		.loc 16 49 14 is_stmt 1 view .LVU3053
  49:DelayMulti.h  **** ~DelayMulti() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 336


 11049              		.loc 16 49 14 view .LVU3054
 11050              	.LBB2142:
 11051              	.LBB2138:
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
 11052              		.loc 19 98 12 is_stmt 0 view .LVU3055
 11053 00ea 2246     		mov	r2, r4
 11054 00ec 3946     		mov	r1, r7
 11055 00ee 7648     		ldr	r0, .L600+112
 11056 00f0 FFF7FEFF 		bl	__aeabi_atexit
 11057              	.LVL760:
 11058              	.LBB2075:
 11059              	.LBI2075:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11060              		.loc 16 49 1 is_stmt 1 view .LVU3056
 11061              	.LBB2076:
 11062              	.LBB2077:
 11063              	.LBI2077:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 11064              		.loc 14 40 1 view .LVU3057
 11065              	.LBB2078:
 11066              	.LBB2079:
 11067              	.LBI2079:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11068              		.loc 15 24 5 view .LVU3058
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11069              		.loc 15 24 5 is_stmt 0 view .LVU3059
 11070              	.LBE2079:
 11071              	.LBB2080:
 11072              	.LBI2080:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11073              		.loc 8 15 5 is_stmt 1 view .LVU3060
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11074              		.loc 8 15 5 is_stmt 0 view .LVU3061
 11075              	.LBE2080:
 11076              	.LBE2078:
 11077              	.LBE2077:
 11078              	.LBE2076:
 11079              	.LBE2075:
 11080              	.LBE2138:
 11081              	.LBE2142:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11082              		.loc 16 49 14 is_stmt 1 view .LVU3062
  49:DelayMulti.h  **** ~DelayMulti() {}
 11083              		.loc 16 49 14 view .LVU3063
 11084              	.LBB2143:
 11085              	.LBB2139:
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
 11086              		.loc 19 98 19 is_stmt 0 view .LVU3064
 11087 00f4 2246     		mov	r2, r4
 11088 00f6 3946     		mov	r1, r7
 11089 00f8 7448     		ldr	r0, .L600+116
 11090 00fa FFF7FEFF 		bl	__aeabi_atexit
 11091              	.LVL761:
 11092              	.LBB2081:
 11093              	.LBI2081:
  60:LEDs.h        ****     ~ButtonLED() {}
 11094              		.loc 14 60 5 is_stmt 1 view .LVU3065
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 337


 11095              	.LBB2082:
 11096              	.LBB2083:
 11097              	.LBI2083:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11098              		.loc 1 40 5 view .LVU3066
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11099              		.loc 1 40 5 is_stmt 0 view .LVU3067
 11100              	.LBE2083:
 11101              	.LBB2084:
 11102              	.LBI2084:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11103              		.loc 15 24 5 is_stmt 1 view .LVU3068
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11104              		.loc 15 24 5 is_stmt 0 view .LVU3069
 11105              	.LBE2084:
 11106              	.LBE2082:
 11107              	.LBE2081:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 11108              		.loc 19 102 11 view .LVU3070
 11109 00fe 2246     		mov	r2, r4
 11110 0100 2946     		mov	r1, r5
 11111 0102 7348     		ldr	r0, .L600+120
 11112 0104 FFF7FEFF 		bl	__aeabi_atexit
 11113              	.LVL762:
 11114              	.LBB2085:
 11115              	.LBI2085:
  60:LEDs.h        ****     ~ButtonLED() {}
 11116              		.loc 14 60 5 is_stmt 1 view .LVU3071
 11117              	.LBB2086:
 11118              	.LBB2087:
 11119              	.LBI2087:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11120              		.loc 1 40 5 view .LVU3072
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11121              		.loc 1 40 5 is_stmt 0 view .LVU3073
 11122              	.LBE2087:
 11123              	.LBB2088:
 11124              	.LBI2088:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11125              		.loc 15 24 5 is_stmt 1 view .LVU3074
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11126              		.loc 15 24 5 is_stmt 0 view .LVU3075
 11127              	.LBE2088:
 11128              	.LBE2086:
 11129              	.LBE2085:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 11130              		.loc 19 102 18 view .LVU3076
 11131 0108 2246     		mov	r2, r4
 11132 010a 2946     		mov	r1, r5
 11133 010c 7148     		ldr	r0, .L600+124
 11134 010e FFF7FEFF 		bl	__aeabi_atexit
 11135              	.LVL763:
 11136              	.LBB2089:
 11137              	.LBI2089:
  60:LEDs.h        ****     ~ButtonLED() {}
 11138              		.loc 14 60 5 is_stmt 1 view .LVU3077
 11139              	.LBB2090:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 338


 11140              	.LBB2091:
 11141              	.LBI2091:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11142              		.loc 1 40 5 view .LVU3078
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11143              		.loc 1 40 5 is_stmt 0 view .LVU3079
 11144              	.LBE2091:
 11145              	.LBB2092:
 11146              	.LBI2092:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11147              		.loc 15 24 5 is_stmt 1 view .LVU3080
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11148              		.loc 15 24 5 is_stmt 0 view .LVU3081
 11149              	.LBE2092:
 11150              	.LBE2090:
 11151              	.LBE2089:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 11152              		.loc 19 102 25 view .LVU3082
 11153 0112 2246     		mov	r2, r4
 11154 0114 2946     		mov	r1, r5
 11155 0116 7048     		ldr	r0, .L600+128
 11156 0118 FFF7FEFF 		bl	__aeabi_atexit
 11157              	.LVL764:
 11158              	.LBB2093:
 11159              	.LBI2093:
  60:LEDs.h        ****     ~ButtonLED() {}
 11160              		.loc 14 60 5 is_stmt 1 view .LVU3083
 11161              	.LBB2094:
 11162              	.LBB2095:
 11163              	.LBI2095:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11164              		.loc 1 40 5 view .LVU3084
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11165              		.loc 1 40 5 is_stmt 0 view .LVU3085
 11166              	.LBE2095:
 11167              	.LBB2096:
 11168              	.LBI2096:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11169              		.loc 15 24 5 is_stmt 1 view .LVU3086
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11170              		.loc 15 24 5 is_stmt 0 view .LVU3087
 11171              	.LBE2096:
 11172              	.LBE2094:
 11173              	.LBE2093:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 11174              		.loc 19 102 34 view .LVU3088
 11175 011c 2246     		mov	r2, r4
 11176 011e 2946     		mov	r1, r5
 11177 0120 6E48     		ldr	r0, .L600+132
 11178 0122 FFF7FEFF 		bl	__aeabi_atexit
 11179              	.LVL765:
 11180              	.LBB2097:
 11181              	.LBI2097:
  60:LEDs.h        ****     ~ButtonLED() {}
 11182              		.loc 14 60 5 is_stmt 1 view .LVU3089
 11183              	.LBB2098:
 11184              	.LBB2099:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 339


 11185              	.LBI2099:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11186              		.loc 1 40 5 view .LVU3090
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11187              		.loc 1 40 5 is_stmt 0 view .LVU3091
 11188              	.LBE2099:
 11189              	.LBB2100:
 11190              	.LBI2100:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11191              		.loc 15 24 5 is_stmt 1 view .LVU3092
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11192              		.loc 15 24 5 is_stmt 0 view .LVU3093
 11193              	.LBE2100:
 11194              	.LBE2098:
 11195              	.LBE2097:
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 11196              		.loc 19 147 13 view .LVU3094
 11197 0126 6E4F     		ldr	r7, .L600+136
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 11198              		.loc 19 102 44 view .LVU3095
 11199 0128 2246     		mov	r2, r4
 11200 012a 2946     		mov	r1, r5
 11201 012c 6D48     		ldr	r0, .L600+140
 11202 012e FFF7FEFF 		bl	__aeabi_atexit
 11203              	.LVL766:
 11204              	.LBB2101:
 11205              	.LBI2101:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 11206              		.loc 14 40 1 is_stmt 1 view .LVU3096
 11207              	.LBB2102:
 11208              	.LBB2103:
 11209              	.LBI2103:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11210              		.loc 15 24 5 view .LVU3097
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11211              		.loc 15 24 5 is_stmt 0 view .LVU3098
 11212              	.LBE2103:
 11213              	.LBB2104:
 11214              	.LBI2104:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11215              		.loc 8 15 5 is_stmt 1 view .LVU3099
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11216              		.loc 8 15 5 is_stmt 0 view .LVU3100
 11217              	.LBE2104:
 11218              	.LBE2102:
 11219              	.LBE2101:
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11220              		.loc 19 103 10 view .LVU3101
 11221 0132 2246     		mov	r2, r4
 11222 0134 6C49     		ldr	r1, .L600+144
 11223 0136 6D48     		ldr	r0, .L600+148
 11224 0138 FFF7FEFF 		bl	__aeabi_atexit
 11225              	.LVL767:
 11226              	.LBB2105:
 11227              	.LBI2105:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11228              		.loc 7 38 5 is_stmt 1 view .LVU3102
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 340


  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11229              		.loc 7 38 5 is_stmt 0 view .LVU3103
 11230              	.LBE2105:
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 11231              		.loc 19 147 13 view .LVU3104
 11232 013c 2246     		mov	r2, r4
 11233 013e 3946     		mov	r1, r7
 11234 0140 6B48     		ldr	r0, .L600+152
 11235 0142 FFF7FEFF 		bl	__aeabi_atexit
 11236              	.LVL768:
 11237              	.LBB2106:
 11238              	.LBI2106:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11239              		.loc 7 38 5 is_stmt 1 view .LVU3105
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11240              		.loc 7 38 5 is_stmt 0 view .LVU3106
 11241              	.LBE2106:
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 11242              		.loc 19 148 13 view .LVU3107
 11243 0146 2246     		mov	r2, r4
 11244 0148 3946     		mov	r1, r7
 11245 014a 6A48     		ldr	r0, .L600+156
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 11246              		.loc 19 153 18 view .LVU3108
 11247 014c 6A4D     		ldr	r5, .L600+160
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 11248              		.loc 19 148 13 view .LVU3109
 11249 014e FFF7FEFF 		bl	__aeabi_atexit
 11250              	.LVL769:
 11251              	.LBB2107:
 11252              	.LBI2107:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11253              		.loc 7 38 5 is_stmt 1 view .LVU3110
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11254              		.loc 7 38 5 is_stmt 0 view .LVU3111
 11255              	.LBE2107:
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 11256              		.loc 19 150 13 view .LVU3112
 11257 0152 2246     		mov	r2, r4
 11258 0154 3946     		mov	r1, r7
 11259 0156 6948     		ldr	r0, .L600+164
 11260 0158 FFF7FEFF 		bl	__aeabi_atexit
 11261              	.LVL770:
 11262              	.LBB2108:
 11263              	.LBI2108:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11264              		.loc 7 38 5 is_stmt 1 view .LVU3113
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 11265              		.loc 7 38 5 is_stmt 0 view .LVU3114
 11266              	.LBE2108:
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 11267              		.loc 19 151 13 view .LVU3115
 11268 015c 2246     		mov	r2, r4
 11269 015e 3946     		mov	r1, r7
 11270 0160 6748     		ldr	r0, .L600+168
 11271 0162 FFF7FEFF 		bl	__aeabi_atexit
 11272              	.LVL771:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 341


 11273              	.LBB2109:
 11274              	.LBI2109:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11275              		.loc 10 36 5 is_stmt 1 view .LVU3116
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11276              		.loc 10 36 5 is_stmt 0 view .LVU3117
 11277              	.LBE2109:
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 11278              		.loc 19 153 18 view .LVU3118
 11279 0166 2246     		mov	r2, r4
 11280 0168 2946     		mov	r1, r5
 11281 016a 6648     		ldr	r0, .L600+172
 11282 016c FFF7FEFF 		bl	__aeabi_atexit
 11283              	.LVL772:
 11284              	.LBB2110:
 11285              	.LBI2110:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11286              		.loc 10 36 5 is_stmt 1 view .LVU3119
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11287              		.loc 10 36 5 is_stmt 0 view .LVU3120
 11288              	.LBE2110:
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 11289              		.loc 19 154 18 view .LVU3121
 11290 0170 2246     		mov	r2, r4
 11291 0172 2946     		mov	r1, r5
 11292 0174 6448     		ldr	r0, .L600+176
 11293 0176 FFF7FEFF 		bl	__aeabi_atexit
 11294              	.LVL773:
 11295              	.LBB2111:
 11296              	.LBI2111:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11297              		.loc 10 36 5 is_stmt 1 view .LVU3122
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11298              		.loc 10 36 5 is_stmt 0 view .LVU3123
 11299              	.LBE2111:
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
 11300              		.loc 19 156 18 view .LVU3124
 11301 017a 2246     		mov	r2, r4
 11302 017c 2946     		mov	r1, r5
 11303 017e 6348     		ldr	r0, .L600+180
 11304 0180 FFF7FEFF 		bl	__aeabi_atexit
 11305              	.LVL774:
 11306              	.LBB2112:
 11307              	.LBI2112:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11308              		.loc 10 36 5 is_stmt 1 view .LVU3125
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11309              		.loc 10 36 5 is_stmt 0 view .LVU3126
 11310              	.LBE2112:
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 11311              		.loc 19 159 18 view .LVU3127
 11312 0184 2246     		mov	r2, r4
 11313 0186 2946     		mov	r1, r5
 11314 0188 6148     		ldr	r0, .L600+184
 11315 018a FFF7FEFF 		bl	__aeabi_atexit
 11316              	.LVL775:
 11317              	.LBB2113:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 342


 11318              	.LBI2113:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11319              		.loc 10 36 5 is_stmt 1 view .LVU3128
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11320              		.loc 10 36 5 is_stmt 0 view .LVU3129
 11321              	.LBE2113:
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 11322              		.loc 19 160 18 view .LVU3130
 11323 018e 2246     		mov	r2, r4
 11324 0190 2946     		mov	r1, r5
 11325 0192 6048     		ldr	r0, .L600+188
 11326 0194 FFF7FEFF 		bl	__aeabi_atexit
 11327              	.LVL776:
 11328              	.LBB2114:
 11329              	.LBI2114:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11330              		.loc 10 36 5 is_stmt 1 view .LVU3131
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11331              		.loc 10 36 5 is_stmt 0 view .LVU3132
 11332              	.LBE2114:
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 11333              		.loc 19 161 18 view .LVU3133
 11334 0198 2246     		mov	r2, r4
 11335 019a 2946     		mov	r1, r5
 11336 019c 5E48     		ldr	r0, .L600+192
 11337 019e FFF7FEFF 		bl	__aeabi_atexit
 11338              	.LVL777:
 11339              	.LBB2115:
 11340              	.LBI2115:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11341              		.loc 10 36 5 is_stmt 1 view .LVU3134
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11342              		.loc 10 36 5 is_stmt 0 view .LVU3135
 11343              	.LBE2115:
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 11344              		.loc 19 162 18 view .LVU3136
 11345 01a2 2246     		mov	r2, r4
 11346 01a4 2946     		mov	r1, r5
 11347 01a6 5D48     		ldr	r0, .L600+196
 11348 01a8 FFF7FEFF 		bl	__aeabi_atexit
 11349              	.LVL778:
 11350              	.LBB2116:
 11351              	.LBI2116:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11352              		.loc 10 36 5 is_stmt 1 view .LVU3137
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11353              		.loc 10 36 5 is_stmt 0 view .LVU3138
 11354              	.LBE2116:
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 11355              		.loc 19 165 18 view .LVU3139
 11356 01ac 2246     		mov	r2, r4
 11357 01ae 2946     		mov	r1, r5
 11358 01b0 5B48     		ldr	r0, .L600+200
 11359 01b2 FFF7FEFF 		bl	__aeabi_atexit
 11360              	.LVL779:
 11361              	.LBB2117:
 11362              	.LBI2117:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 343


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11363              		.loc 10 36 5 is_stmt 1 view .LVU3140
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11364              		.loc 10 36 5 is_stmt 0 view .LVU3141
 11365              	.LBE2117:
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 11366              		.loc 19 166 18 view .LVU3142
 11367 01b6 2246     		mov	r2, r4
 11368 01b8 2946     		mov	r1, r5
 11369 01ba 5A48     		ldr	r0, .L600+204
 11370 01bc FFF7FEFF 		bl	__aeabi_atexit
 11371              	.LVL780:
 11372              	.LBB2118:
 11373              	.LBI2118:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11374              		.loc 10 36 5 is_stmt 1 view .LVU3143
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11375              		.loc 10 36 5 is_stmt 0 view .LVU3144
 11376              	.LBE2118:
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 11377              		.loc 19 167 18 view .LVU3145
 11378 01c0 2246     		mov	r2, r4
 11379 01c2 2946     		mov	r1, r5
 11380 01c4 5848     		ldr	r0, .L600+208
 11381 01c6 FFF7FEFF 		bl	__aeabi_atexit
 11382              	.LVL781:
 11383              	.LBB2119:
 11384              	.LBI2119:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11385              		.loc 10 36 5 is_stmt 1 view .LVU3146
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11386              		.loc 10 36 5 is_stmt 0 view .LVU3147
 11387              	.LBE2119:
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 11388              		.loc 19 168 18 view .LVU3148
 11389 01ca 2246     		mov	r2, r4
 11390 01cc 2946     		mov	r1, r5
 11391 01ce 5748     		ldr	r0, .L600+212
 11392 01d0 FFF7FEFF 		bl	__aeabi_atexit
 11393              	.LVL782:
 11394              	.LBB2120:
 11395              	.LBI2120:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11396              		.loc 10 36 5 is_stmt 1 view .LVU3149
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11397              		.loc 10 36 5 is_stmt 0 view .LVU3150
 11398              	.LBE2120:
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 11399              		.loc 19 171 18 view .LVU3151
 11400 01d4 2246     		mov	r2, r4
 11401 01d6 2946     		mov	r1, r5
 11402 01d8 5548     		ldr	r0, .L600+216
 11403 01da FFF7FEFF 		bl	__aeabi_atexit
 11404              	.LVL783:
 11405              	.LBB2121:
 11406              	.LBI2121:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 344


 11407              		.loc 10 36 5 is_stmt 1 view .LVU3152
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11408              		.loc 10 36 5 is_stmt 0 view .LVU3153
 11409              	.LBE2121:
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 11410              		.loc 19 172 18 view .LVU3154
 11411 01de 2246     		mov	r2, r4
 11412 01e0 2946     		mov	r1, r5
 11413 01e2 5448     		ldr	r0, .L600+220
 11414 01e4 FFF7FEFF 		bl	__aeabi_atexit
 11415              	.LVL784:
 11416              	.LBB2122:
 11417              	.LBI2122:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11418              		.loc 10 36 5 is_stmt 1 view .LVU3155
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11419              		.loc 10 36 5 is_stmt 0 view .LVU3156
 11420              	.LBE2122:
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 11421              		.loc 19 178 8 view .LVU3157
 11422 01e8 534F     		ldr	r7, .L600+224
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 11423              		.loc 19 174 18 view .LVU3158
 11424 01ea 2246     		mov	r2, r4
 11425 01ec 2946     		mov	r1, r5
 11426 01ee 5348     		ldr	r0, .L600+228
 11427 01f0 FFF7FEFF 		bl	__aeabi_atexit
 11428              	.LVL785:
 11429              	.LBB2123:
 11430              	.LBI2123:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11431              		.loc 10 36 5 is_stmt 1 view .LVU3159
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 11432              		.loc 10 36 5 is_stmt 0 view .LVU3160
 11433              	.LBE2123:
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 11434              		.loc 19 175 18 view .LVU3161
 11435 01f4 2246     		mov	r2, r4
 11436 01f6 2946     		mov	r1, r5
 11437 01f8 5148     		ldr	r0, .L600+232
 11438 01fa FFF7FEFF 		bl	__aeabi_atexit
 11439              	.LVL786:
 11440              	.LBB2124:
 11441              	.LBI2124:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11442              		.loc 1 40 5 is_stmt 1 view .LVU3162
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11443              		.loc 1 40 5 is_stmt 0 view .LVU3163
 11444              	.LBE2124:
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 11445              		.loc 19 178 8 view .LVU3164
 11446 01fe 2246     		mov	r2, r4
 11447 0200 3946     		mov	r1, r7
 11448 0202 5048     		ldr	r0, .L600+236
 11449 0204 FFF7FEFF 		bl	__aeabi_atexit
 11450              	.LVL787:
 11451              	.LBB2125:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 345


 11452              	.LBI2125:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11453              		.loc 1 40 5 is_stmt 1 view .LVU3165
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11454              		.loc 1 40 5 is_stmt 0 view .LVU3166
 11455              	.LBE2125:
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 11456              		.loc 19 179 8 view .LVU3167
 11457 0208 2246     		mov	r2, r4
 11458 020a 3946     		mov	r1, r7
 11459 020c 4E48     		ldr	r0, .L600+240
 11460 020e FFF7FEFF 		bl	__aeabi_atexit
 11461              	.LVL788:
 11462              	.LBB2126:
 11463              	.LBI2126:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11464              		.loc 1 40 5 is_stmt 1 view .LVU3168
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11465              		.loc 1 40 5 is_stmt 0 view .LVU3169
 11466              	.LBE2126:
 182:Veno-Echo.cpp **** Switch Sync;
 11467              		.loc 19 182 8 view .LVU3170
 11468 0212 2246     		mov	r2, r4
 11469 0214 3946     		mov	r1, r7
 11470 0216 4D48     		ldr	r0, .L600+244
 11471 0218 FFF7FEFF 		bl	__aeabi_atexit
 11472              	.LVL789:
 11473              	.LBB2127:
 11474              	.LBI2127:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11475              		.loc 1 40 5 is_stmt 1 view .LVU3171
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11476              		.loc 1 40 5 is_stmt 0 view .LVU3172
 11477              	.LBE2127:
 183:Veno-Echo.cpp **** Switch ClockIn;
 11478              		.loc 19 183 8 view .LVU3173
 11479 021c 2246     		mov	r2, r4
 11480 021e 3946     		mov	r1, r7
 11481 0220 4B48     		ldr	r0, .L600+248
 11482 0222 FFF7FEFF 		bl	__aeabi_atexit
 11483              	.LVL790:
 11484              	.LBB2128:
 11485              	.LBI2128:
  41:taptempo.h    ****     {
 11486              		.loc 13 41 5 is_stmt 1 view .LVU3174
 11487              	.LBB2129:
 11488              	.LBB2130:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 11489              		.loc 13 43 9 view .LVU3175
  46:taptempo.h    ****         lastTapLength_ = 0;
 11490              		.loc 13 46 17 is_stmt 0 view .LVU3176
 11491 0226 5027     		movs	r7, #80
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 11492              		.loc 13 43 18 view .LVU3177
 11493 0228 4A48     		ldr	r0, .L600+252
  45:taptempo.h    ****         mintap_ = 80;
 11494              		.loc 13 45 17 view .LVU3178
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 346


 11495 022a 4FF4FA6C 		mov	ip, #2000
  44:taptempo.h    ****         maxtap_ = 2000;
 11496              		.loc 13 44 24 view .LVU3179
 11497 022e DFF834E1 		ldr	lr, .L600+268
  51:taptempo.h    **** 
 11498              		.loc 13 51 19 view .LVU3180
 11499 0232 4FF07E53 		mov	r3, #1065353216
  48:taptempo.h    ****         lastTime_ = 0;
 11500              		.loc 13 48 16 view .LVU3181
 11501 0236 484D     		ldr	r5, .L600+256
 11502              	.LBE2130:
 11503              	.LBE2129:
 11504              	.LBE2128:
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 11505              		.loc 19 186 10 view .LVU3182
 11506 0238 2246     		mov	r2, r4
 11507              	.LBB2135:
 11508              	.LBB2133:
 11509              	.LBB2131:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 11510              		.loc 13 43 18 view .LVU3183
 11511 023a 0676     		strb	r6, [r0, #24]
  44:taptempo.h    ****         maxtap_ = 2000;
 11512              		.loc 13 44 9 is_stmt 1 view .LVU3184
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 11513              		.loc 13 50 22 is_stmt 0 view .LVU3185
 11514 023c 8660     		str	r6, [r0, #8]
  44:taptempo.h    ****         maxtap_ = 2000;
 11515              		.loc 13 44 24 view .LVU3186
 11516 023e C0F81CE0 		str	lr, [r0, #28]	@ float
  45:taptempo.h    ****         mintap_ = 80;
 11517              		.loc 13 45 9 is_stmt 1 view .LVU3187
  48:taptempo.h    ****         lastTime_ = 0;
 11518              		.loc 13 48 16 is_stmt 0 view .LVU3188
 11519 0242 0562     		str	r5, [r0, #32]	@ float
 11520              	.LBE2131:
 11521              	.LBE2133:
 11522              	.LBE2135:
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 11523              		.loc 19 186 10 view .LVU3189
 11524 0244 4549     		ldr	r1, .L600+260
 11525              	.LBB2136:
 11526              	.LBB2134:
 11527              	.LBB2132:
  51:taptempo.h    **** 
 11528              		.loc 13 51 19 view .LVU3190
 11529 0246 4362     		str	r3, [r0, #36]	@ float
  49:taptempo.h    ****         currentTime_ = 0;
 11530              		.loc 13 49 19 view .LVU3191
 11531 0248 C0E90366 		strd	r6, r6, [r0, #12]
  46:taptempo.h    ****         lastTapLength_ = 0;
 11532              		.loc 13 46 17 view .LVU3192
 11533 024c C0E9007C 		strd	r7, ip, [r0]
  47:taptempo.h    ****         tempo_ = 500.0f;
 11534              		.loc 13 47 9 is_stmt 1 view .LVU3193
  48:taptempo.h    ****         lastTime_ = 0;
 11535              		.loc 13 48 9 view .LVU3194
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 347


  49:taptempo.h    ****         currentTime_ = 0;
 11536              		.loc 13 49 9 view .LVU3195
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 11537              		.loc 13 50 9 view .LVU3196
  51:taptempo.h    **** 
 11538              		.loc 13 51 9 view .LVU3197
 11539              	.LVL791:
  51:taptempo.h    **** 
 11540              		.loc 13 51 9 is_stmt 0 view .LVU3198
 11541              	.LBE2132:
 11542              	.LBE2134:
 11543              	.LBE2136:
 11544              	.LBE2139:
 11545              	.LBE2143:
 11546              		.loc 19 1713 1 view .LVU3199
 11547 0250 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 11548              		.cfi_restore 14
 11549              		.cfi_restore 8
 11550              		.cfi_restore 7
 11551              		.cfi_restore 6
 11552              		.cfi_restore 5
 11553              		.cfi_restore 4
 11554              		.cfi_def_cfa_offset 0
 11555              	.LBB2144:
 11556              	.LBB2140:
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 11557              		.loc 19 186 10 view .LVU3200
 11558 0254 FFF7FEBF 		b	__aeabi_atexit
 11559              	.LVL792:
 11560              	.L601:
 11561              		.align	2
 11562              	.L600:
 11563 0258 00000000 		.word	.LANCHOR4
 11564 025c 00000000 		.word	__dso_handle
 11565 0260 00000000 		.word	_ZN7daisysp3SvfD1Ev
 11566 0264 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 11567 0268 00000000 		.word	.LANCHOR21
 11568 026c 00000000 		.word	.LANCHOR22
 11569 0270 00000000 		.word	.LANCHOR12
 11570 0274 00000000 		.word	.LANCHOR13
 11571 0278 00000000 		.word	.LANCHOR23
 11572 027c 00000000 		.word	.LANCHOR24
 11573 0280 00000000 		.word	.LANCHOR14
 11574 0284 00000000 		.word	.LANCHOR15
 11575 0288 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 11576 028c 00000000 		.word	.LANCHOR40
 11577 0290 17B7D138 		.word	953267991
 11578 0294 00000000 		.word	.LANCHOR97
 11579 0298 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 11580 029c 00000000 		.word	.LANCHOR98
 11581 02a0 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 11582 02a4 00000000 		.word	.LANCHOR75
 11583 02a8 00000000 		.word	.LANCHOR76
 11584 02ac 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 11585 02b0 00000000 		.word	delMemsL
 11586 02b4 00000000 		.word	delMemsR
 11587 02b8 00000000 		.word	_ZN10DelayMultiD1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 348


 11588 02bc 00000000 		.word	delMemsL_REV
 11589 02c0 00000000 		.word	delMemsR_REV
 11590 02c4 00000000 		.word	_ZN9ButtonLEDD1Ev
 11591 02c8 00000000 		.word	.LANCHOR0
 11592 02cc 00000000 		.word	.LANCHOR1
 11593 02d0 00000000 		.word	.LANCHOR61
 11594 02d4 00000000 		.word	.LANCHOR62
 11595 02d8 00000000 		.word	.LANCHOR63
 11596 02dc 00000000 		.word	.LANCHOR64
 11597 02e0 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 11598 02e4 00000000 		.word	.LANCHOR65
 11599 02e8 00000000 		.word	_ZN8TempoLEDD1Ev
 11600 02ec 00000000 		.word	.LANCHOR49
 11601 02f0 00000000 		.word	.LANCHOR69
 11602 02f4 00000000 		.word	.LANCHOR70
 11603 02f8 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 11604 02fc 00000000 		.word	.LANCHOR71
 11605 0300 00000000 		.word	.LANCHOR72
 11606 0304 00000000 		.word	.LANCHOR73
 11607 0308 00000000 		.word	.LANCHOR74
 11608 030c 00000000 		.word	.LANCHOR35
 11609 0310 00000000 		.word	.LANCHOR85
 11610 0314 00000000 		.word	.LANCHOR86
 11611 0318 00000000 		.word	.LANCHOR83
 11612 031c 00000000 		.word	.LANCHOR84
 11613 0320 00000000 		.word	.LANCHOR89
 11614 0324 00000000 		.word	.LANCHOR90
 11615 0328 00000000 		.word	.LANCHOR87
 11616 032c 00000000 		.word	.LANCHOR88
 11617 0330 00000000 		.word	.LANCHOR91
 11618 0334 00000000 		.word	.LANCHOR92
 11619 0338 00000000 		.word	_ZN5daisy6SwitchD1Ev
 11620 033c 00000000 		.word	.LANCHOR93
 11621 0340 00000000 		.word	.LANCHOR94
 11622 0344 00000000 		.word	.LANCHOR66
 11623 0348 00000000 		.word	.LANCHOR67
 11624 034c 00000000 		.word	.LANCHOR68
 11625 0350 00000000 		.word	.LANCHOR47
 11626 0354 00000000 		.word	.LANCHOR50
 11627 0358 0000FA43 		.word	1140457472
 11628 035c 00000000 		.word	_ZN8TaptempoD1Ev
 11629 0360 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 11630 0364 0000A03F 		.word	1067450368
 11631              	.LBE2140:
 11632              	.LBE2144:
 11633              		.cfi_endproc
 11634              	.LFE4896:
 11636              		.section	.init_array,"aw",%init_array
 11637              		.align	2
 11638 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 11639              		.global	AltControls
 11640              		.global	BaseTempo
 11641              		.global	ClockIn
 11642              		.global	Sync
 11643              		.global	ReverseGateR
 11644              		.global	ReverseGateL
 11645              		.global	save_flag
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 349


 11646              		.global	delayR_flag
 11647              		.global	delayL_flag
 11648              		.global	PostFilters
 11649              		.global	ClockInFlag
 11650              		.global	mute
 11651              		.global	shift
 11652              		.global	syncMode
 11653              		.global	modulation_CV_Raw
 11654              		.global	ModDepth
 11655              		.global	div_R
 11656              		.global	div_L
 11657              		.global	filterXfade
 11658              		.global	width_CV
 11659              		.global	width
 11660              		.global	drywet_CV
 11661              		.global	drywet
 11662              		.global	crossfeedback_CV
 11663              		.global	crossfeedback
 11664              		.global	feedbackR_CV
 11665              		.global	feedbackR
 11666              		.global	feedbackL_CV
 11667              		.global	feedbackL
 11668              		.global	delayTimeR_CV
 11669              		.global	delayTimeL_CV
 11670              		.global	tempoLED_BASE
 11671              		.global	Tap_Button
 11672              		.global	Rev_R_sw
 11673              		.global	Rev_L_sw
 11674              		.global	HPF_sw
 11675              		.global	LPF_sw
 11676              		.global	delaysR_REV
 11677              		.global	delaysL_REV
 11678              		.global	delayR
 11679              		.global	delayL
 11680              		.global	delMemsR_REV
 11681              		.global	delMemsL_REV
 11682              		.global	delMemsR
 11683              		.global	delMemsL
 11684              		.section	.bss.AltControls,"aw",%nobits
 11685              		.align	2
 11686              		.set	.LANCHOR16,. + 0
 11689              	AltControls:
 11690 0000 00000000 		.space	32
 11690      00000000 
 11690      00000000 
 11690      00000000 
 11690      00000000 
 11691              		.section	.bss.BaseTempo,"aw",%nobits
 11692              		.align	2
 11693              		.set	.LANCHOR50,. + 0
 11696              	BaseTempo:
 11697 0000 00000000 		.space	40
 11697      00000000 
 11697      00000000 
 11697      00000000 
 11697      00000000 
 11698              		.section	.bss.ClockIn,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 350


 11699              		.align	2
 11700              		.set	.LANCHOR47,. + 0
 11703              	ClockIn:
 11704 0000 00000000 		.space	16
 11704      00000000 
 11704      00000000 
 11704      00000000 
 11705              		.section	.bss.ClockInFlag,"aw",%nobits
 11708              	ClockInFlag:
 11709 0000 00       		.space	1
 11710              		.section	.bss.HPF_sw,"aw",%nobits
 11711              		.align	2
 11712              		.set	.LANCHOR62,. + 0
 11715              	HPF_sw:
 11716 0000 00000000 		.space	52
 11716      00000000 
 11716      00000000 
 11716      00000000 
 11716      00000000 
 11717              		.section	.bss.LPF_sw,"aw",%nobits
 11718              		.align	2
 11719              		.set	.LANCHOR61,. + 0
 11722              	LPF_sw:
 11723 0000 00000000 		.space	52
 11723      00000000 
 11723      00000000 
 11723      00000000 
 11723      00000000 
 11724              		.section	.bss.ModDepth,"aw",%nobits
 11725              		.align	2
 11726              		.set	.LANCHOR36,. + 0
 11729              	ModDepth:
 11730 0000 00000000 		.space	4
 11731              		.section	.bss.PostFilters,"aw",%nobits
 11732              		.set	.LANCHOR43,. + 0
 11735              	PostFilters:
 11736 0000 00       		.space	1
 11737              		.section	.bss.Rev_L_sw,"aw",%nobits
 11738              		.align	2
 11739              		.set	.LANCHOR63,. + 0
 11742              	Rev_L_sw:
 11743 0000 00000000 		.space	52
 11743      00000000 
 11743      00000000 
 11743      00000000 
 11743      00000000 
 11744              		.section	.bss.Rev_R_sw,"aw",%nobits
 11745              		.align	2
 11746              		.set	.LANCHOR64,. + 0
 11749              	Rev_R_sw:
 11750 0000 00000000 		.space	52
 11750      00000000 
 11750      00000000 
 11750      00000000 
 11750      00000000 
 11751              		.section	.bss.ReverseGateL,"aw",%nobits
 11752              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 351


 11753              		.set	.LANCHOR66,. + 0
 11756              	ReverseGateL:
 11757 0000 00000000 		.space	16
 11757      00000000 
 11757      00000000 
 11757      00000000 
 11758              		.section	.bss.ReverseGateR,"aw",%nobits
 11759              		.align	2
 11760              		.set	.LANCHOR67,. + 0
 11763              	ReverseGateR:
 11764 0000 00000000 		.space	16
 11764      00000000 
 11764      00000000 
 11764      00000000 
 11765              		.section	.bss.Sync,"aw",%nobits
 11766              		.align	2
 11767              		.set	.LANCHOR68,. + 0
 11770              	Sync:
 11771 0000 00000000 		.space	16
 11771      00000000 
 11771      00000000 
 11771      00000000 
 11772              		.section	.bss.Tap_Button,"aw",%nobits
 11773              		.align	2
 11774              		.set	.LANCHOR65,. + 0
 11777              	Tap_Button:
 11778 0000 00000000 		.space	52
 11778      00000000 
 11778      00000000 
 11778      00000000 
 11778      00000000 
 11779              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 11780              		.align	2
 11781              		.set	.LANCHOR69,. + 0
 11784              	_ZL10FwdRevLEnv:
 11785 0000 00000000 		.space	56
 11785      00000000 
 11785      00000000 
 11785      00000000 
 11785      00000000 
 11786              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 11787              		.align	2
 11788              		.set	.LANCHOR70,. + 0
 11791              	_ZL10FwdRevREnv:
 11792 0000 00000000 		.space	56
 11792      00000000 
 11792      00000000 
 11792      00000000 
 11792      00000000 
 11793              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 11794              		.align	2
 11795              		.set	.LANCHOR83,. + 0
 11798              	_ZL10HPF_LXfade:
 11799 0000 00000000 		.space	8
 11799      00000000 
 11800              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 11801              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 352


 11802              		.set	.LANCHOR14,. + 0
 11805              	_ZL10HPF_L_post:
 11806 0000 00000000 		.space	76
 11806      00000000 
 11806      00000000 
 11806      00000000 
 11806      00000000 
 11807              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 11808              		.align	2
 11809              		.set	.LANCHOR84,. + 0
 11812              	_ZL10HPF_RXfade:
 11813 0000 00000000 		.space	8
 11813      00000000 
 11814              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 11815              		.align	2
 11816              		.set	.LANCHOR15,. + 0
 11819              	_ZL10HPF_R_post:
 11820 0000 00000000 		.space	76
 11820      00000000 
 11820      00000000 
 11820      00000000 
 11820      00000000 
 11821              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 11822              		.align	2
 11823              		.set	.LANCHOR85,. + 0
 11826              	_ZL10LPF_LXfade:
 11827 0000 00000000 		.space	8
 11827      00000000 
 11828              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 11829              		.align	2
 11830              		.set	.LANCHOR23,. + 0
 11833              	_ZL10LPF_L_post:
 11834 0000 00000000 		.space	76
 11834      00000000 
 11834      00000000 
 11834      00000000 
 11834      00000000 
 11835              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 11836              		.align	2
 11837              		.set	.LANCHOR86,. + 0
 11840              	_ZL10LPF_RXfade:
 11841 0000 00000000 		.space	8
 11841      00000000 
 11842              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 11843              		.align	2
 11844              		.set	.LANCHOR24,. + 0
 11847              	_ZL10LPF_R_post:
 11848 0000 00000000 		.space	76
 11848      00000000 
 11848      00000000 
 11848      00000000 
 11848      00000000 
 11849              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 11850              		.align	2
 11851              		.set	.LANCHOR35,. + 0
 11854              	_ZL10WidthXfade:
 11855 0000 00000000 		.space	8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 353


 11855      00000000 
 11856              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 11857              		.align	2
 11858              		.set	.LANCHOR75,. + 0
 11861              	_ZL11DcBlock_LFB:
 11862 0000 00000000 		.space	12
 11862      00000000 
 11862      00000000 
 11863              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 11864              		.align	2
 11865              		.set	.LANCHOR76,. + 0
 11868              	_ZL11DcBlock_RFB:
 11869 0000 00000000 		.space	12
 11869      00000000 
 11869      00000000 
 11870              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 11871              		.align	2
 11872              		.set	.LANCHOR91,. + 0
 11875              	_ZL11FilterMix_L:
 11876 0000 00000000 		.space	8
 11876      00000000 
 11877              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 11878              		.align	2
 11879              		.set	.LANCHOR92,. + 0
 11882              	_ZL11FilterMix_R:
 11883 0000 00000000 		.space	8
 11883      00000000 
 11884              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 11885              		.align	2
 11886              		.set	.LANCHOR73,. + 0
 11889              	_ZL12FwdRevLXfade:
 11890 0000 00000000 		.space	8
 11890      00000000 
 11891              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 11892              		.align	2
 11893              		.set	.LANCHOR74,. + 0
 11896              	_ZL12FwdRevRXfade:
 11897 0000 00000000 		.space	8
 11897      00000000 
 11898              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 11899              		.align	2
 11900              		.set	.LANCHOR87,. + 0
 11903              	_ZL15HPF_LXfade_post:
 11904 0000 00000000 		.space	8
 11904      00000000 
 11905              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 11906              		.align	2
 11907              		.set	.LANCHOR88,. + 0
 11910              	_ZL15HPF_RXfade_post:
 11911 0000 00000000 		.space	8
 11911      00000000 
 11912              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 11913              		.align	2
 11914              		.set	.LANCHOR89,. + 0
 11917              	_ZL15LPF_LXfade_post:
 11918 0000 00000000 		.space	8
 11918      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 354


 11919              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 11920              		.align	2
 11921              		.set	.LANCHOR90,. + 0
 11924              	_ZL15LPF_RXfade_post:
 11925 0000 00000000 		.space	8
 11925      00000000 
 11926              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 11927              		.align	2
 11928              		.set	.LANCHOR93,. + 0
 11931              	_ZL16FilterMix_L_post:
 11932 0000 00000000 		.space	8
 11932      00000000 
 11933              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 11934              		.align	2
 11935              		.set	.LANCHOR94,. + 0
 11938              	_ZL16FilterMix_R_post:
 11939 0000 00000000 		.space	8
 11939      00000000 
 11940              		.section	.bss._ZL2hw,"aw",%nobits
 11941              		.align	2
 11942              		.set	.LANCHOR4,. + 0
 11945              	_ZL2hw:
 11946 0000 00000000 		.space	60
 11946      00000000 
 11946      00000000 
 11946      00000000 
 11946      00000000 
 11947              		.section	.bss._ZL3lfo,"aw",%nobits
 11948              		.align	2
 11949              		.set	.LANCHOR40,. + 0
 11952              	_ZL3lfo:
 11953 0000 00000000 		.space	40
 11953      00000000 
 11953      00000000 
 11953      00000000 
 11953      00000000 
 11954              		.section	.bss._ZL5HPF_L,"aw",%nobits
 11955              		.align	2
 11956              		.set	.LANCHOR12,. + 0
 11959              	_ZL5HPF_L:
 11960 0000 00000000 		.space	76
 11960      00000000 
 11960      00000000 
 11960      00000000 
 11960      00000000 
 11961              		.section	.bss._ZL5HPF_R,"aw",%nobits
 11962              		.align	2
 11963              		.set	.LANCHOR13,. + 0
 11966              	_ZL5HPF_R:
 11967 0000 00000000 		.space	76
 11967      00000000 
 11967      00000000 
 11967      00000000 
 11967      00000000 
 11968              		.section	.bss._ZL5LPF_L,"aw",%nobits
 11969              		.align	2
 11970              		.set	.LANCHOR21,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 355


 11973              	_ZL5LPF_L:
 11974 0000 00000000 		.space	76
 11974      00000000 
 11974      00000000 
 11974      00000000 
 11974      00000000 
 11975              		.section	.bss._ZL5LPF_R,"aw",%nobits
 11976              		.align	2
 11977              		.set	.LANCHOR22,. + 0
 11980              	_ZL5LPF_R:
 11981 0000 00000000 		.space	76
 11981      00000000 
 11981      00000000 
 11981      00000000 
 11981      00000000 
 11982              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 11983              		.align	2
 11984              		.set	.LANCHOR72,. + 0
 11987              	_ZL7HPF_Env:
 11988 0000 00000000 		.space	56
 11988      00000000 
 11988      00000000 
 11988      00000000 
 11988      00000000 
 11989              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 11990              		.align	2
 11991              		.set	.LANCHOR71,. + 0
 11994              	_ZL7LPF_Env:
 11995 0000 00000000 		.space	56
 11995      00000000 
 11995      00000000 
 11995      00000000 
 11995      00000000 
 11996              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 11997              		.align	2
 11998              		.set	.LANCHOR97,. + 0
 12001              	_ZL7LeftEnv:
 12002 0000 00000000 		.space	24
 12002      00000000 
 12002      00000000 
 12002      00000000 
 12002      00000000 
 12003              		.section	.bss._ZL8RightEnv,"aw",%nobits
 12004              		.align	2
 12005              		.set	.LANCHOR98,. + 0
 12008              	_ZL8RightEnv:
 12009 0000 00000000 		.space	24
 12009      00000000 
 12009      00000000 
 12009      00000000 
 12009      00000000 
 12010              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 12011              		.align	2
 12012              		.set	.LANCHOR45,. + 0
 12015              	_ZZ10Update_ModvE13modulation_CV:
 12016 0000 00000000 		.space	4
 12017              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 356


 12018              		.align	2
 12019              		.set	.LANCHOR46,. + 0
 12022              	_ZZ10Update_ModvE17ModDepth_Filtered:
 12023 0000 00000000 		.space	4
 12024              		.section	.bss._ZZ11UpdateClockvE10divCounter,"aw",%nobits
 12025              		.align	2
 12026              		.set	.LANCHOR48,. + 0
 12029              	_ZZ11UpdateClockvE10divCounter:
 12030 0000 00000000 		.space	4
 12031              		.section	.bss._ZZ12Update_widthvE14width_Pot_Last,"aw",%nobits
 12032              		.align	2
 12033              		.set	.LANCHOR33,. + 0
 12036              	_ZZ12Update_widthvE14width_Pot_Last:
 12037 0000 00000000 		.space	4
 12038              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 12039              		.set	.LANCHOR31,. + 0
 12042              	_ZZ13Update_drywetvE10Res_pickup:
 12043 0000 00       		.space	1
 12044              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 12045              		.align	2
 12046              		.set	.LANCHOR27,. + 0
 12049              	_ZZ13Update_drywetvE11drywet_Last:
 12050 0000 00000000 		.space	4
 12051              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 12052              		.set	.LANCHOR28,. + 0
 12055              	_ZZ13Update_drywetvE13drywet_pickup:
 12056 0000 00       		.space	1
 12057              		.section	.bss._ZZ13Update_drywetvE8Res_Last,"aw",%nobits
 12058              		.align	2
 12059              		.set	.LANCHOR30,. + 0
 12062              	_ZZ13Update_drywetvE8Res_Last:
 12063 0000 00000000 		.space	4
 12064              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 12065              		.set	.LANCHOR26,. + 0
 12068              	_ZZ13Update_drywetvE9lastShift:
 12069 0000 00       		.space	1
 12070              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 12071              		.align	2
 12072              		.set	.LANCHOR78,. + 0
 12075              	_ZZ14Update_ButtonsvE11buttonstate:
 12076 0000 00000000 		.space	4
 12077              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 12078              		.align	2
 12079              		.set	.LANCHOR79,. + 0
 12082              	_ZZ14Update_ButtonsvE9resetTime:
 12083 0000 00000000 		.space	4
 12084              		.section	.bss._ZZ16Update_feedbackLvE18feedbackL_Pot_Last,"aw",%nobits
 12085              		.align	2
 12086              		.set	.LANCHOR9,. + 0
 12089              	_ZZ16Update_feedbackLvE18feedbackL_Pot_Last:
 12090 0000 00000000 		.space	4
 12091              		.section	.bss._ZZ16Update_feedbackLvE8HPCutoff,"aw",%nobits
 12092              		.align	2
 12093              		.set	.LANCHOR11,. + 0
 12096              	_ZZ16Update_feedbackLvE8HPCutoff:
 12097 0000 00000000 		.space	4
 12098              		.section	.bss._ZZ16Update_feedbackRvE18feedbackR_Pot_Last,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 357


 12099              		.align	2
 12100              		.set	.LANCHOR18,. + 0
 12103              	_ZZ16Update_feedbackRvE18feedbackR_Pot_Last:
 12104 0000 00000000 		.space	4
 12105              		.section	.bss._ZZ16Update_feedbackRvE8LPCutoff,"aw",%nobits
 12106              		.align	2
 12107              		.set	.LANCHOR20,. + 0
 12110              	_ZZ16Update_feedbackRvE8LPCutoff:
 12111 0000 00000000 		.space	4
 12112              		.section	.bss._ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last,"aw",%nobits
 12113              		.align	2
 12114              		.set	.LANCHOR60,. + 0
 12117              	_ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last:
 12118 0000 00000000 		.space	4
 12119              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 12120              		.align	2
 12121              		.set	.LANCHOR59,. + 0
 12124              	_ZZ17Update_DelayTimeLvE8counterL:
 12125 0000 00000000 		.space	4
 12126              		.section	.bss._ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last,"aw",%nobits
 12127              		.align	2
 12128              		.set	.LANCHOR57,. + 0
 12131              	_ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last:
 12132 0000 00000000 		.space	4
 12133              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 12134              		.align	2
 12135              		.set	.LANCHOR56,. + 0
 12138              	_ZZ17Update_DelayTimeRvE8counterR:
 12139 0000 00000000 		.space	4
 12140              		.section	.bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last,"aw",%nobits
 12141              		.align	2
 12142              		.set	.LANCHOR41,. + 0
 12145              	_ZZ18Update_filterXfadevE20filterXfade_Pot_Last:
 12146 0000 00000000 		.space	4
 12147              		.section	.bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last,"aw",%nobits
 12148              		.align	2
 12149              		.set	.LANCHOR37,. + 0
 12152              	_ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:
 12153 0000 00000000 		.space	4
 12154              		.section	.bss._ZZ20Update_crossfeedbackvE7modRate,"aw",%nobits
 12155              		.align	2
 12156              		.set	.LANCHOR39,. + 0
 12159              	_ZZ20Update_crossfeedbackvE7modRate:
 12160 0000 00000000 		.space	4
 12161              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 12162              		.align	2
 12163              		.set	.LANCHOR95,. + 0
 12166              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 12167 0000 00000000 		.space	4
 12168              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 12169              		.align	2
 12170              		.set	.LANCHOR96,. + 0
 12173              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 12174 0000 00000000 		.space	4
 12175              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 12176              		.align	2
 12177              		.set	.LANCHOR81,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 358


 12180              	_ZZL13AudioCallbackPfS_jE7Counter:
 12181 0000 00000000 		.space	4
 12182              		.section	.bss.crossfeedback,"aw",%nobits
 12183              		.align	2
 12184              		.set	.LANCHOR38,. + 0
 12187              	crossfeedback:
 12188 0000 00000000 		.space	4
 12189              		.section	.bss.crossfeedback_CV,"aw",%nobits
 12190              		.align	2
 12193              	crossfeedback_CV:
 12194 0000 00000000 		.space	4
 12195              		.section	.bss.delayL,"aw",%nobits
 12196              		.align	2
 12197              		.set	.LANCHOR0,. + 0
 12200              	delayL:
 12201 0000 00000000 		.space	284
 12201      00000000 
 12201      00000000 
 12201      00000000 
 12201      00000000 
 12202              		.section	.bss.delayR,"aw",%nobits
 12203              		.align	2
 12204              		.set	.LANCHOR1,. + 0
 12207              	delayR:
 12208 0000 00000000 		.space	284
 12208      00000000 
 12208      00000000 
 12208      00000000 
 12208      00000000 
 12209              		.section	.bss.delayTimeL_CV,"aw",%nobits
 12210              		.align	2
 12211              		.set	.LANCHOR5,. + 0
 12214              	delayTimeL_CV:
 12215 0000 00000000 		.space	4
 12216              		.section	.bss.delayTimeR_CV,"aw",%nobits
 12217              		.align	2
 12218              		.set	.LANCHOR6,. + 0
 12221              	delayTimeR_CV:
 12222 0000 00000000 		.space	4
 12223              		.section	.bss.delaysL_REV,"aw",%nobits
 12224              		.align	2
 12225              		.set	.LANCHOR2,. + 0
 12228              	delaysL_REV:
 12229 0000 00000000 		.space	8
 12229      00000000 
 12230              		.section	.bss.delaysR_REV,"aw",%nobits
 12231              		.align	2
 12232              		.set	.LANCHOR3,. + 0
 12235              	delaysR_REV:
 12236 0000 00000000 		.space	8
 12236      00000000 
 12237              		.section	.bss.div_L,"aw",%nobits
 12238              		.set	.LANCHOR52,. + 0
 12241              	div_L:
 12242 0000 00       		.space	1
 12243              		.section	.bss.div_R,"aw",%nobits
 12244              		.set	.LANCHOR53,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 359


 12247              	div_R:
 12248 0000 00       		.space	1
 12249              		.section	.bss.drywet_CV,"aw",%nobits
 12250              		.align	2
 12251              		.set	.LANCHOR25,. + 0
 12254              	drywet_CV:
 12255 0000 00000000 		.space	4
 12256              		.section	.bss.feedbackL,"aw",%nobits
 12257              		.align	2
 12258              		.set	.LANCHOR10,. + 0
 12261              	feedbackL:
 12262 0000 00000000 		.space	4
 12263              		.section	.bss.feedbackL_CV,"aw",%nobits
 12264              		.align	2
 12265              		.set	.LANCHOR7,. + 0
 12268              	feedbackL_CV:
 12269 0000 00000000 		.space	4
 12270              		.section	.bss.feedbackR,"aw",%nobits
 12271              		.align	2
 12272              		.set	.LANCHOR19,. + 0
 12275              	feedbackR:
 12276 0000 00000000 		.space	4
 12277              		.section	.bss.feedbackR_CV,"aw",%nobits
 12278              		.align	2
 12279              		.set	.LANCHOR17,. + 0
 12282              	feedbackR_CV:
 12283 0000 00000000 		.space	4
 12284              		.section	.bss.filterXfade,"aw",%nobits
 12285              		.align	2
 12286              		.set	.LANCHOR42,. + 0
 12289              	filterXfade:
 12290 0000 00000000 		.space	4
 12291              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 12292              		.align	2
 12293              		.set	.LANCHOR44,. + 0
 12296              	modulation_CV_Raw:
 12297 0000 00000000 		.space	4
 12298              		.section	.bss.mute,"aw",%nobits
 12299              		.set	.LANCHOR80,. + 0
 12302              	mute:
 12303 0000 00       		.space	1
 12304              		.section	.bss.save_flag,"aw",%nobits
 12305              		.align	2
 12306              		.set	.LANCHOR82,. + 0
 12309              	save_flag:
 12310 0000 00       		.space	1
 12311              		.section	.bss.shift,"aw",%nobits
 12312              		.set	.LANCHOR8,. + 0
 12315              	shift:
 12316 0000 00       		.space	1
 12317              		.section	.bss.syncMode,"aw",%nobits
 12318              		.set	.LANCHOR51,. + 0
 12321              	syncMode:
 12322 0000 00       		.space	1
 12323              		.section	.bss.tempoLED_BASE,"aw",%nobits
 12324              		.align	2
 12325              		.set	.LANCHOR49,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 360


 12328              	tempoLED_BASE:
 12329 0000 00000000 		.space	68
 12329      00000000 
 12329      00000000 
 12329      00000000 
 12329      00000000 
 12330              		.section	.bss.width_CV,"aw",%nobits
 12331              		.align	2
 12332              		.set	.LANCHOR32,. + 0
 12335              	width_CV:
 12336 0000 00000000 		.space	4
 12337              		.section	.data.delayL_flag,"aw"
 12338              		.set	.LANCHOR54,. + 0
 12341              	delayL_flag:
 12342 0000 01       		.byte	1
 12343              		.section	.data.delayR_flag,"aw"
 12344              		.set	.LANCHOR55,. + 0
 12347              	delayR_flag:
 12348 0000 01       		.byte	1
 12349              		.section	.data.drywet,"aw"
 12350              		.align	2
 12351              		.set	.LANCHOR29,. + 0
 12354              	drywet:
 12355 0000 0000003F 		.word	1056964608
 12356              		.section	.data.width,"aw"
 12357              		.align	2
 12358              		.set	.LANCHOR34,. + 0
 12361              	width:
 12362 0000 0000803F 		.word	1065353216
 12363              		.section	.rodata.CSWTCH.249,"a"
 12364              		.align	2
 12365              		.set	.LANCHOR58,. + 0
 12368              	CSWTCH.249:
 12369 0000 0000C03F 		.word	1069547520
 12370 0004 00000040 		.word	1073741824
 12371 0008 00004040 		.word	1077936128
 12372              		.section	.rodata._ZL18defaultAltControls,"a"
 12373              		.align	2
 12374              		.set	.LANCHOR77,. + 0
 12377              	_ZL18defaultAltControls:
 12378 0000 00650148 		.word	1208050944
 12379 0004 0000803F 		.word	1065353216
 12380 0008 00000000 		.word	0
 12381 000c 9A99A140 		.word	1084332442
 12382 0010 00004843 		.word	1128792064
 12383 0014 00803B46 		.word	1178304512
 12384 0018 00000000 		.word	0
 12385 001c 00000000 		.word	0
 12386              		.section	.sdram_bss,"aw"
 12387              		.align	2
 12390              	delMemsR_REV:
 12391 0000 00000000 		.space	2400040
 12391      00000000 
 12391      00000000 
 12391      00000000 
 12391      00000000 
 12394              	delMemsL_REV:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 361


 12395 249f28 00000000 		.space	2400040
 12395      00000000 
 12395      00000000 
 12395      00000000 
 12395      00000000 
 12398              	delMemsR:
 12399 493e50 00000000 		.space	6912136
 12399      00000000 
 12399      00000000 
 12399      00000000 
 12399      00000000 
 12402              	delMemsL:
 12403 b2b6d8 00000000 		.space	6912136
 12403      00000000 
 12403      00000000 
 12403      00000000 
 12403      00000000 
 12404              		.text
 12405              	.Letext0:
 12406              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 12407              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 12408              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 12409              		.file 30 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 12410              		.file 31 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 12411              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 12412              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12413              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12414              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12415              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12416              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12417              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12418              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12419              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12420              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12421              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12422              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12423              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12424              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12425              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12426              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12427              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12428              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12429              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12430              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12431              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12432              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12433              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 12434              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 12435              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 12436              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 12437              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 12438              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12439              		.file 60 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 12440              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 12441              		.file 62 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 12442              		.file 63 "../libdaisy/src/daisy_core.h"
 12443              		.file 64 "../libdaisy/src/per/tim.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 362


 12444              		.file 65 "../libdaisy/src/per/sai.h"
 12445              		.file 66 "../libdaisy/src/util/wav_format.h"
 12446              		.file 67 "../libdaisy/src/per/qspi.h"
 12447              		.file 68 "../libdaisy/src/per/gpio.h"
 12448              		.file 69 "../libdaisy/src/dev/sdram.h"
 12449              		.file 70 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 12450              		.file 71 "<built-in>"
 12451              		.file 72 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 12452              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 12453              		.file 74 "../libdaisy/src/util/oled_fonts.h"
 12454              		.file 75 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 12455              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 12456              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 12457              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 12458              		.file 79 "../libdaisy/src/util/sd_diskio.h"
 12459              		.file 80 "../libdaisy/src/sys/fatfs.h"
 12460              		.file 81 "../DaisySP/Source/Control/adenv.h"
 12461              		.file 82 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 12462              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 12463              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 12464              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 12465              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 12466              		.file 87 "QSPI_Settings.h"
 12467              		.file 88 "scale.h"
 12468              		.file 89 "constants.h"
 12469              		.file 90 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 363


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:303    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:337    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:376    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:401    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:426    .text._Z16checkPickupStateff11pickupStateb.part.0:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:433    .text._Z16checkPickupStateff11pickupStateb.part.0:0000000000000000 _Z16checkPickupStateff11pickupStateb.part.0
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:491    .text._Z16checkPickupStateff11pickupStateb.part.0:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:496    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:504    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1067   .text._Z10InitDelaysf:000000000000018c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12402  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12398  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12394  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12390  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1093   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1101   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1126   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 364


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1132   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1140   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1165   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1171   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1179   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1204   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1210   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1218   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1426   .text._Z16Update_feedbackLv:00000000000000d8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1450   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1458   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1483   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1489   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1497   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1704   .text._Z16Update_feedbackRv:00000000000000d8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1728   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1736   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1761   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1767   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:1775   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2377   .text._Z13Update_drywetv:0000000000000230 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2410   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2418   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2443   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2449   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2457   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2658   .text._Z12Update_widthv:00000000000000bc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2678   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2686   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2855   .text._Z20Update_crossfeedbackv:0000000000000084 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2870   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:2878   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3010   .text._Z18Update_filterXfadev:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3026   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3034   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3064   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3072   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3080   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3234   .text._Z10Update_Modv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3246   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3254   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3365   .text._Z11UpdateClockv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3380   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3388   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3460   .text._Z19Update_BaseTempoLEDv:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3469   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3477   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 _Z11SetTempoDivfP9TempoDivs
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3697   .text._Z11SetTempoDivfP9TempoDivs:0000000000000108 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3714   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:3722   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:4075   .text._Z17Update_DelayTimeRv:0000000000000140 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:4098   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:4106   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:4571   .text._Z17Update_DelayTimeLv:0000000000000188 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:4597   .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:4605   .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:4635   .text._Z11GetTapRatio9TapRatios:000000000000001c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 365


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:4640   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:4648   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:5345   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:5384   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:5392   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6270   .text.startup.main:0000000000000348 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6304   .text.startup.main:00000000000003c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6674   .text.startup.main:00000000000005b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:7344   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6692   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6700   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6762   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6773   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6781   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6884   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6896   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:6904   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:7311   .text._Z14Update_Buttonsv:00000000000001a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:7337   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:7456   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:7471   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:7500   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:7511   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:8647   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:8703   .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:9329   .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:9351   .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10106  .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10143  .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10468  .text._ZL13AudioCallbackPfS_j:0000000000000ca4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10479  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10487  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10521  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10529  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10576  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10581  .text._Z16checkPickupStateff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10589  .text._Z16checkPickupStateff11pickupStateb:0000000000000000 _Z16checkPickupStateff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10641  .text._Z16checkPickupStateff11pickupStateb:0000000000000034 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10646  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:10653  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11563  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000258 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11637  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11689  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11696  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11703  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11770  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11763  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11756  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12309  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12347  .data.delayR_flag:0000000000000000 delayR_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12341  .data.delayL_flag:0000000000000000 delayL_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11735  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11708  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12302  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12315  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12321  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12296  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 366


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11729  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12247  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12241  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12289  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12335  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12361  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12254  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12354  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12193  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12187  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12282  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12275  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12268  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12261  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12221  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12214  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12328  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11777  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11749  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11742  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11715  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11722  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12235  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12228  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12207  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12200  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11685  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11692  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11699  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11709  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11711  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11718  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11725  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11736  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11738  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11745  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11752  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11759  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11766  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11773  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11780  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11784  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11787  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11791  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11794  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11798  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11801  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11805  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11808  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11812  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11815  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11819  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11822  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11826  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11829  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11833  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11836  .bss._ZL10LPF_RXfade:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 367


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11840  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11843  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11847  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11850  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11854  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11857  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11861  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11864  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11868  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11871  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11875  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11878  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11882  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11885  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11889  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11892  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11896  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11899  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11903  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11906  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11910  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11913  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11917  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11920  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11924  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11927  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11931  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11934  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11938  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11941  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11945  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11948  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11952  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11955  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11959  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11962  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11966  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11969  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11973  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11976  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11980  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11983  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11987  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11990  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11994  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:11997  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12001  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12004  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12008  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12011  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12015  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12018  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12022  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12025  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12029  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 _ZZ11UpdateClockvE10divCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12032  .bss._ZZ12Update_widthvE14width_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12036  .bss._ZZ12Update_widthvE14width_Pot_Last:0000000000000000 _ZZ12Update_widthvE14width_Pot_Last
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 368


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12042  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12043  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12045  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12049  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12055  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12056  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12058  .bss._ZZ13Update_drywetvE8Res_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12062  .bss._ZZ13Update_drywetvE8Res_Last:0000000000000000 _ZZ13Update_drywetvE8Res_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12068  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12069  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12071  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12075  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12078  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12082  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12085  .bss._ZZ16Update_feedbackLvE18feedbackL_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12089  .bss._ZZ16Update_feedbackLvE18feedbackL_Pot_Last:0000000000000000 _ZZ16Update_feedbackLvE18feedbackL_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12092  .bss._ZZ16Update_feedbackLvE8HPCutoff:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12096  .bss._ZZ16Update_feedbackLvE8HPCutoff:0000000000000000 _ZZ16Update_feedbackLvE8HPCutoff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12099  .bss._ZZ16Update_feedbackRvE18feedbackR_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12103  .bss._ZZ16Update_feedbackRvE18feedbackR_Pot_Last:0000000000000000 _ZZ16Update_feedbackRvE18feedbackR_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12106  .bss._ZZ16Update_feedbackRvE8LPCutoff:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12110  .bss._ZZ16Update_feedbackRvE8LPCutoff:0000000000000000 _ZZ16Update_feedbackRvE8LPCutoff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12113  .bss._ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12117  .bss._ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last:0000000000000000 _ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12120  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12124  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12127  .bss._ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12131  .bss._ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last:0000000000000000 _ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12134  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12138  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12141  .bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12145  .bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last:0000000000000000 _ZZ18Update_filterXfadevE20filterXfade_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12148  .bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12152  .bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:0000000000000000 _ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12155  .bss._ZZ20Update_crossfeedbackvE7modRate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12159  .bss._ZZ20Update_crossfeedbackvE7modRate:0000000000000000 _ZZ20Update_crossfeedbackvE7modRate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12162  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12166  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12169  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12173  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12176  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12180  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12183  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12190  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12196  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12203  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12210  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12217  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12224  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12231  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12242  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12248  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12250  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12257  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12264  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12271  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12278  .bss.feedbackR_CV:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 369


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12285  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12292  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12303  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12305  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12316  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12322  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12324  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12331  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12350  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12357  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12364  .rodata.CSWTCH.249:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12368  .rodata.CSWTCH.249:0000000000000000 CSWTCH.249
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12373  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12377  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s:12387  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZN10DelayMulti12SetDelayTimeEf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_Z5scalefff9CurveType
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN10DelayMulti13SetModulationERKf
_ZN5daisy6Switch8DebounceEv
_ZN8TempoLED10resetPhaseEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12getTapLengthEv
_ZN8Taptempo11setTapRatioEf
_ZN10DelayMulti16SetDelayTime_potEfb
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdB7a57.s 			page 370


_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
