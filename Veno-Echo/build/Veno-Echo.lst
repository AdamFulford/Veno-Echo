ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy6GateInD2Ev,"axG",%progbits,_ZN5daisy6GateInD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy6GateInD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy6GateInD2Ev:
  52              	.LVL1:
  53              	.LFB1563:
  54              		.file 2 "../libdaisy/src/hid/gatein.h"
   1:../libdaisy/src/hid/gatein.h **** #pragma once
   2:../libdaisy/src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../libdaisy/src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../libdaisy/src/hid/gatein.h **** #include "per/gpio.h"
   5:../libdaisy/src/hid/gatein.h **** 
   6:../libdaisy/src/hid/gatein.h **** namespace daisy
   7:../libdaisy/src/hid/gatein.h **** {
   8:../libdaisy/src/hid/gatein.h **** /** @file hid_gatein.h */
   9:../libdaisy/src/hid/gatein.h **** /**
  10:../libdaisy/src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  11:../libdaisy/src/hid/gatein.h ****    @author Stephen Hensley
  12:../libdaisy/src/hid/gatein.h ****    @date    March 2020
  13:../libdaisy/src/hid/gatein.h ****    @ingroup controls
  14:../libdaisy/src/hid/gatein.h **** */
  15:../libdaisy/src/hid/gatein.h **** class GateIn
  16:../libdaisy/src/hid/gatein.h **** {
  17:../libdaisy/src/hid/gatein.h ****   public:
  18:../libdaisy/src/hid/gatein.h ****     /** GateIn 
  19:../libdaisy/src/hid/gatein.h ****     Constructor 
  20:../libdaisy/src/hid/gatein.h ****     */
  21:../libdaisy/src/hid/gatein.h ****     GateIn() {}
  22:../libdaisy/src/hid/gatein.h ****     /** GateIn~
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 3


  23:../libdaisy/src/hid/gatein.h ****     Destructor 
  24:../libdaisy/src/hid/gatein.h ****     */
  25:../libdaisy/src/hid/gatein.h ****     ~GateIn() {}
  55              		.loc 2 25 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 25 16 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE1563:
  65              		.weak	_ZN5daisy6GateInD1Ev
  66              		.thumb_set _ZN5daisy6GateInD1Ev,_ZN5daisy6GateInD2Ev
  67 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy9DaisySeedD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy9DaisySeedD2Ev:
  77              	.LVL2:
  78              	.LFB1703:
  79              		.file 3 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  80              		.loc 3 22 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LBB892:
  86              	.LBI892:
  87              		.file 4 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 4


   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  88              		.loc 4 57 5 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 5


  89              		.loc 4 57 5 is_stmt 0 view .LVU6
  90              	.LBE892:
  91              	.LBB893:
  92              	.LBI893:
  93              		.file 5 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  94              		.loc 5 42 5 is_stmt 1 view .LVU7
  95              		.loc 5 42 5 is_stmt 0 view .LVU8
  96              	.LBE893:
  97              	.LBB894:
  98              	.LBI894:
  99              		.file 6 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 6


   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 7


  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 100              		.loc 6 85 5 is_stmt 1 view .LVU9
 101              		.loc 6 85 5 is_stmt 0 view .LVU10
 102              	.LBE894:
 103              	.LBB895:
 104              	.LBI895:
 105              		.file 7 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 8


  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 106              		.loc 7 37 5 is_stmt 1 view .LVU11
 107              		.loc 7 37 5 is_stmt 0 view .LVU12
 108              	.LBE895:
 109              		.loc 3 22 19 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1703:
 114              		.weak	_ZN5daisy9DaisySeedD1Ev
 115              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp4AdsrD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp4AdsrD2Ev:
 126              	.LVL3:
 127              	.LFB1726:
 128              		.file 8 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 9


  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 129              		.loc 8 39 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 39 14 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE1726:
 139              		.weak	_ZN7daisysp4AdsrD1Ev
 140              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp10OscillatorD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp10OscillatorD2Ev:
 151              	.LVL4:
 152              	.LFB3340:
 153              		.file 9 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 154              		.loc 9 16 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 10


 159              		.loc 9 16 20 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE3340:
 164              		.weak	_ZN7daisysp10OscillatorD1Ev
 165              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp3SvfD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp3SvfD2Ev:
 176              	.LVL5:
 177              	.LFB3356:
 178              		.file 10 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 179              		.loc 10 22 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              		.loc 10 22 13 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3356:
 189              		.weak	_ZN7daisysp3SvfD1Ev
 190              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp9CrossFadeD2Ev
 195              		.syntax unified
 196              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 11


 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp9CrossFadeD2Ev:
 201              	.LVL6:
 202              	.LFB3461:
 203              		.file 11 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 204              		.loc 11 37 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 37 19 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3461:
 214              		.weak	_ZN7daisysp9CrossFadeD1Ev
 215              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 12


 219              		.weak	_ZN7daisysp7DcBlockD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp7DcBlockD2Ev:
 226              	.LVL7:
 227              	.LFB3753:
 228              		.file 12 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 229              		.loc 12 15 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 15 16 is_stmt 0 view .LVU23
 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3753:
 239              		.weak	_ZN7daisysp7DcBlockD1Ev
 240              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 241 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN7daisysp9EnvFollowD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN7daisysp9EnvFollowD2Ev:
 251              	.LVL8:
 252              	.LFB3940:
 253              		.file 13 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 13


  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 254              		.loc 13 52 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 52 19 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3940:
 264              		.weak	_ZN7daisysp9EnvFollowD1Ev
 265              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 266 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TaptempoD2Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 14


 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TaptempoD2Ev:
 276              	.LVL9:
 277              	.LFB3947:
 278              		.file 14 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** using namespace daisysp;
  31:taptempo.h    **** 
  32:taptempo.h    **** class Taptempo
  33:taptempo.h    **** {
  34:taptempo.h    ****     private:
  35:taptempo.h    ****         uint32_t mintap_,maxtap_;
  36:taptempo.h    ****         uint32_t currentTime_,currentClockTime_,lastTime_,lastClockTime_,lastTapLength_,tapLength_;
  37:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_,tempo_;
  38:taptempo.h    ****         bool tapflag_;
  39:taptempo.h    ****         float tap_tolerance_,tempoFloat_;
  40:taptempo.h    ****         float tapRatio_;
  41:taptempo.h    ****         int PPQN_;
  42:taptempo.h    **** 
  43:taptempo.h    ****     public:
  44:taptempo.h    **** 
  45:taptempo.h    ****     Taptempo()  //default constructor
  46:taptempo.h    ****     {
  47:taptempo.h    ****         tapflag_ = false;
  48:taptempo.h    ****         tap_tolerance_ = 1.25f;
  49:taptempo.h    ****         maxtap_ = 2000000;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 15


  50:taptempo.h    ****         mintap_ = 80000;
  51:taptempo.h    ****         lastTapLength_ = 0;
  52:taptempo.h    ****         tempo_ = 500000.0f;
  53:taptempo.h    ****         lastTime_ = 0;
  54:taptempo.h    ****         currentTime_ = 0;
  55:taptempo.h    ****         tapRatio_ = 1.0f;
  56:taptempo.h    ****         clockLength_ = 0;
  57:taptempo.h    ****         lastClockLength_ = 0;
  58:taptempo.h    ****         clockThresh_ = 10000; //Us change
  59:taptempo.h    ****         PPQN_=24;
  60:taptempo.h    ****     }
  61:taptempo.h    ****     ~Taptempo() {}
 279              		.loc 14 61 5 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              		.loc 14 61 18 is_stmt 0 view .LVU27
 285 0000 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE3947:
 289              		.weak	_ZN8TaptempoD1Ev
 290              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 291 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 292              		.align	1
 293              		.p2align 2,,3
 294              		.weak	_ZN8TempoLEDD2Ev
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv5-d16
 300              	_ZN8TempoLEDD2Ev:
 301              	.LVL10:
 302              	.LFB3970:
 303              		.file 15 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 16


  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 304              		.loc 15 48 1 is_stmt 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309              	.LBB896:
 310              	.LBI896:
 311              		.file 16 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 312              		.loc 16 16 5 view .LVU29
 313              		.loc 16 16 5 is_stmt 0 view .LVU30
 314              	.LBE896:
 315              	.LBB897:
 316              	.LBI897:
 317              		.file 17 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 17


   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 318              		.loc 17 25 5 is_stmt 1 view .LVU31
 319              		.loc 17 25 5 is_stmt 0 view .LVU32
 320              	.LBE897:
 321              		.loc 15 48 13 view .LVU33
 322 0000 7047     		bx	lr
 323              		.cfi_endproc
 324              	.LFE3970:
 326              		.weak	_ZN8TempoLEDD1Ev
 327              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 328 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 329              		.align	1
 330              		.p2align 2,,3
 331              		.weak	_ZN9ButtonLEDD2Ev
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv5-d16
 337              	_ZN9ButtonLEDD2Ev:
 338              	.LVL11:
 339              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 18


  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 340              		.loc 15 79 5 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345              	.LBB898:
 346              	.LBI898:
 347              		.loc 17 25 5 view .LVU35
 348              		.loc 17 25 5 is_stmt 0 view .LVU36
 349              	.LBE898:
 350              	.LBB899:
 351              	.LBI899:
 352              		.loc 1 41 5 is_stmt 1 view .LVU37
 353              		.loc 1 41 5 is_stmt 0 view .LVU38
 354              	.LBE899:
 355              		.loc 15 79 19 view .LVU39
 356 0000 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE3977:
 360              		.weak	_ZN9ButtonLEDD1Ev
 361              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 362 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 363              		.align	1
 364              		.p2align 2,,3
 365              		.weak	_ZN10DelayMultiD2Ev
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv5-d16
 371              	_ZN10DelayMultiD2Ev:
 372              	.LVL12:
 373              	.LFB3983:
 374              		.file 18 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 19


   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 375              		.loc 18 50 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380              	.LBB900:
 381              	.LBI900:
  48:LEDs.h        **** 
 382              		.loc 15 48 1 view .LVU41
 383              	.LBB901:
 384              	.LBI901:
 385              		.loc 16 16 5 view .LVU42
 386              		.loc 16 16 5 is_stmt 0 view .LVU43
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 20


 387              	.LBE901:
 388              	.LBB902:
 389              	.LBI902:
 390              		.loc 17 25 5 is_stmt 1 view .LVU44
 391              		.loc 17 25 5 is_stmt 0 view .LVU45
 392              	.LBE902:
 393              	.LBE900:
 394              		.loc 18 50 16 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE3983:
 399              		.weak	_ZN10DelayMultiD1Ev
 400              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 401 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 411              	.LVL13:
 412              	.LFB4914:
 413              		.file 19 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 21


  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 414              		.loc 19 52 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 52 27 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4914:
 424              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 425              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 426 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 427              		.align	1
 428              		.p2align 2,,3
 429              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 436              	.LVL14:
 437              	.LFB4917:
 438              		.file 20 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 22


  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 439              		.loc 20 39 5 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444              		.loc 20 39 26 is_stmt 0 view .LVU50
 445 0000 7047     		bx	lr
 446              		.cfi_endproc
 447              	.LFE4917:
 449              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 450              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 451 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 452              		.align	1
 453              		.p2align 2,,3
 454              		.global	_Z10InitDelaysf
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv5-d16
 460              	_Z10InitDelaysf:
 461              	.LVL15:
 462              	.LFB4310:
 463              		.file 21 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 23


  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 24


  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 25


 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** //TempoDivs div_L{};
 127:Veno-Echo.cpp **** //TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** bool PostFilters{false};
 140:Veno-Echo.cpp **** 
 141:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 142:Veno-Echo.cpp **** 
 143:Veno-Echo.cpp **** SaveState saveState{IDLE};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** float DELAYL_DEBUG;
 146:Veno-Echo.cpp **** float DELAYR_DEBUG;
 147:Veno-Echo.cpp **** float PHASE_DEBUG;
 148:Veno-Echo.cpp **** float CLOCK_DEBUG;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 151:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static Adsr LPF_Env;
 154:Veno-Echo.cpp **** static Adsr HPF_Env;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 157:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 158:Veno-Echo.cpp **** 
 159:Veno-Echo.cpp **** static CrossFade WidthXfade;
 160:Veno-Echo.cpp **** 
 161:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 162:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 166:Veno-Echo.cpp **** 
 167:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 168:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 169:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 170:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 171:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 172:Veno-Echo.cpp **** 
 173:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 178:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 179:Veno-Echo.cpp **** 
 180:Veno-Echo.cpp **** //Gate inputs
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 26


 181:Veno-Echo.cpp **** Switch ReverseGateL;
 182:Veno-Echo.cpp **** Switch ReverseGateR;
 183:Veno-Echo.cpp **** 
 184:Veno-Echo.cpp **** //Switch TapButton;
 185:Veno-Echo.cpp **** Switch Sync;
 186:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 187:Veno-Echo.cpp **** GateIn ClockIn;
 188:Veno-Echo.cpp **** //Switch ClockIn;
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** //Tap tempo
 191:Veno-Echo.cpp **** Taptempo BaseTempo; 
 192:Veno-Echo.cpp **** 
 193:Veno-Echo.cpp **** Settings AltControls;
 194:Veno-Echo.cpp **** 
 195:Veno-Echo.cpp **** //default alt control values
 196:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 197:Veno-Echo.cpp **** {
 198:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 199:Veno-Echo.cpp ****     1.0f,   //tapRatio
 200:Veno-Echo.cpp ****     0.0f,   //ModDepth
 201:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 202:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 203:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 204:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 205:Veno-Echo.cpp ****     0.0f,    //filter prepost
 206:Veno-Echo.cpp ****     500000.0f,     //base tempo (in us)
 207:Veno-Echo.cpp ****     0.0f,       //L_Rev
 208:Veno-Echo.cpp ****     0.0f    //R_Rev
 209:Veno-Echo.cpp **** };
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 212:Veno-Echo.cpp **** void Update_DelayTimeL();
 213:Veno-Echo.cpp **** 
 214:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 215:Veno-Echo.cpp **** void Update_DelayTimeR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_feedbackL_CV();
 218:Veno-Echo.cpp **** void Update_feedbackL();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_feedbackR_CV();
 221:Veno-Echo.cpp **** void Update_feedbackR();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_drywet_CV();
 224:Veno-Echo.cpp **** void Update_drywet();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_width_CV();
 227:Veno-Echo.cpp **** void Update_width();
 228:Veno-Echo.cpp **** 
 229:Veno-Echo.cpp **** void Update_crossfeedback();
 230:Veno-Echo.cpp **** void Update_filterXfade();
 231:Veno-Echo.cpp **** 
 232:Veno-Echo.cpp **** void Update_Buttons();
 233:Veno-Echo.cpp **** void Update_DelayBaseTempo();
 234:Veno-Echo.cpp **** void Update_BaseTempoLED();
 235:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 236:Veno-Echo.cpp **** void Update_Mod();
 237:Veno-Echo.cpp **** void GetModCV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 27


 238:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 239:Veno-Echo.cpp **** void UpdateClock();
 240:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 241:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 242:Veno-Echo.cpp **** void TurnOnAllLEDs();
 243:Veno-Echo.cpp **** void ResetAllLEDs();
 244:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 245:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 246:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 247:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 248:Veno-Echo.cpp **** 
 249:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 250:Veno-Echo.cpp **** {
 251:Veno-Echo.cpp **** 
 252:Veno-Echo.cpp **** /*
 253:Veno-Echo.cpp **** static uint32_t funcLength{};
 254:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 255:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 256:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 257:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 258:Veno-Echo.cpp **** 
 259:Veno-Echo.cpp **** */
 260:Veno-Echo.cpp **** 
 261:Veno-Echo.cpp **** static int Counter{};
 262:Veno-Echo.cpp **** 
 263:Veno-Echo.cpp **** /*
 264:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 265:Veno-Echo.cpp **** 
 266:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 267:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 268:Veno-Echo.cpp ****     {
 269:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 270:Veno-Echo.cpp ****     }
 271:Veno-Echo.cpp **** 
 272:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 273:Veno-Echo.cpp ****     {
 274:Veno-Echo.cpp ****         minFuncLength = funcLength;
 275:Veno-Echo.cpp ****     }
 276:Veno-Echo.cpp **** 
 277:Veno-Echo.cpp **** */
 278:Veno-Echo.cpp **** 
 279:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 280:Veno-Echo.cpp **** 
 281:Veno-Echo.cpp ****     /*
 282:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 283:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 284:Veno-Echo.cpp ****         //init timeofCall as current time
 285:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 286:Veno-Echo.cpp **** 
 287:Veno-Echo.cpp ****         //wait for random Dither time
 288:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 289:Veno-Echo.cpp ****         {}
 290:Veno-Echo.cpp ****     */
 291:Veno-Echo.cpp **** 
 292:Veno-Echo.cpp ****         switch (Counter)
 293:Veno-Echo.cpp ****         {
 294:Veno-Echo.cpp ****             case 0:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 28


 295:Veno-Echo.cpp ****                 Update_Buttons();
 296:Veno-Echo.cpp ****                 GetModCV();
 297:Veno-Echo.cpp ****                 //Update_DelayBaseTempo();
 298:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 299:Veno-Echo.cpp ****             break;
 300:Veno-Echo.cpp **** 
 301:Veno-Echo.cpp ****             case 1:
 302:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 303:Veno-Echo.cpp ****             break;
 304:Veno-Echo.cpp **** 
 305:Veno-Echo.cpp ****             case 2:
 306:Veno-Echo.cpp ****                 if(saveState != SAVING)
 307:Veno-Echo.cpp ****                 {
 308:Veno-Echo.cpp ****                     Update_DelayTimeL();
 309:Veno-Echo.cpp ****                 }
 310:Veno-Echo.cpp ****             break;
 311:Veno-Echo.cpp **** 
 312:Veno-Echo.cpp ****             case 3:
 313:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 314:Veno-Echo.cpp ****             break;
 315:Veno-Echo.cpp **** 
 316:Veno-Echo.cpp ****             case 4:
 317:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 318:Veno-Echo.cpp ****                 {
 319:Veno-Echo.cpp ****                     Update_DelayTimeR();
 320:Veno-Echo.cpp ****                 }
 321:Veno-Echo.cpp ****             break;
 322:Veno-Echo.cpp **** 
 323:Veno-Echo.cpp ****             case 5:
 324:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 325:Veno-Echo.cpp ****             break;
 326:Veno-Echo.cpp **** 
 327:Veno-Echo.cpp ****             case 6:
 328:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 329:Veno-Echo.cpp ****                 {
 330:Veno-Echo.cpp ****                     Update_feedbackL();
 331:Veno-Echo.cpp ****                 }
 332:Veno-Echo.cpp ****             break;
 333:Veno-Echo.cpp **** 
 334:Veno-Echo.cpp ****             case 7:
 335:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 336:Veno-Echo.cpp ****             break;
 337:Veno-Echo.cpp **** 
 338:Veno-Echo.cpp ****             case 8:
 339:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 340:Veno-Echo.cpp ****                 {
 341:Veno-Echo.cpp ****                     Update_feedbackR();
 342:Veno-Echo.cpp ****                 }
 343:Veno-Echo.cpp ****             break;
 344:Veno-Echo.cpp **** 
 345:Veno-Echo.cpp ****             case 9:
 346:Veno-Echo.cpp ****                 Update_drywet_CV();
 347:Veno-Echo.cpp ****             break;
 348:Veno-Echo.cpp **** 
 349:Veno-Echo.cpp ****             case 10:
 350:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 351:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 29


 352:Veno-Echo.cpp ****                     Update_drywet();
 353:Veno-Echo.cpp ****                 }
 354:Veno-Echo.cpp ****             break;
 355:Veno-Echo.cpp **** 
 356:Veno-Echo.cpp ****             case 11:
 357:Veno-Echo.cpp ****                 Update_width_CV();
 358:Veno-Echo.cpp ****             break;
 359:Veno-Echo.cpp **** 
 360:Veno-Echo.cpp ****             case 12:
 361:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 362:Veno-Echo.cpp ****                 {
 363:Veno-Echo.cpp ****                     Update_width();
 364:Veno-Echo.cpp ****                 }
 365:Veno-Echo.cpp ****             break;
 366:Veno-Echo.cpp **** 
 367:Veno-Echo.cpp ****             case 13:
 368:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 369:Veno-Echo.cpp ****                 {
 370:Veno-Echo.cpp ****                     Update_crossfeedback();
 371:Veno-Echo.cpp ****                 }
 372:Veno-Echo.cpp ****             break;
 373:Veno-Echo.cpp **** 
 374:Veno-Echo.cpp ****             case 14:
 375:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 376:Veno-Echo.cpp ****                 {
 377:Veno-Echo.cpp ****                     Update_filterXfade();
 378:Veno-Echo.cpp ****                 }
 379:Veno-Echo.cpp ****             break;
 380:Veno-Echo.cpp ****         }
 381:Veno-Echo.cpp **** 
 382:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 383:Veno-Echo.cpp ****     {   
 384:Veno-Echo.cpp ****         UpdateClock(); 
 385:Veno-Echo.cpp ****         Update_Mod();
 386:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 387:Veno-Echo.cpp **** 
 388:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 389:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 391:Veno-Echo.cpp ****         
 392:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 394:Veno-Echo.cpp **** 
 395:Veno-Echo.cpp ****         //set xfade positions      
 396:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 397:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 398:Veno-Echo.cpp ****         
 399:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 400:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 401:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 402:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 403:Veno-Echo.cpp **** 
 404:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 405:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 406:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 407:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 408:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 30


 409:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 410:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 411:Veno-Echo.cpp **** 
 412:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 413:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 414:Veno-Echo.cpp **** 
 415:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 416:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 417:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 418:Veno-Echo.cpp **** 
 419:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 420:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 421:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 422:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 423:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 424:Veno-Echo.cpp **** 
 425:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 426:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 427:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 428:Veno-Echo.cpp **** 
 429:Veno-Echo.cpp ****         //Get combined output from all delay heads
 430:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 431:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 432:Veno-Echo.cpp **** 
 433:Veno-Echo.cpp ****         //Update Base Tempo LED
 434:Veno-Echo.cpp ****         Update_BaseTempoLED();
 435:Veno-Echo.cpp **** 
 436:Veno-Echo.cpp ****         //hard limit
 437:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 438:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 439:Veno-Echo.cpp **** 
 440:Veno-Echo.cpp **** if(!PostFilters)
 441:Veno-Echo.cpp **** {
 442:Veno-Echo.cpp **** //****************************************************************************************
 443:Veno-Echo.cpp ****         //pre filters
 444:Veno-Echo.cpp ****         //process LPF
 445:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 446:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 447:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 448:Veno-Echo.cpp **** 
 449:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 450:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 451:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 452:Veno-Echo.cpp ****         
 453:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 454:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 455:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 456:Veno-Echo.cpp **** 
 457:Veno-Echo.cpp ****         //hard limit
 458:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 459:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 460:Veno-Echo.cpp **** 
 461:Veno-Echo.cpp ****         //process HPF
 462:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 463:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 464:Veno-Echo.cpp **** 
 465:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 31


 466:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 467:Veno-Echo.cpp **** 
 468:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 469:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 470:Veno-Echo.cpp **** 
 471:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 472:Veno-Echo.cpp **** 
 473:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 474:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 475:Veno-Echo.cpp **** 
 476:Veno-Echo.cpp **** //****************************************************************************************
 477:Veno-Echo.cpp **** }
 478:Veno-Echo.cpp **** 
 479:Veno-Echo.cpp **** else
 480:Veno-Echo.cpp **** {
 481:Veno-Echo.cpp ****     /* code */
 482:Veno-Echo.cpp **** }
 483:Veno-Echo.cpp **** 
 484:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 485:Veno-Echo.cpp ****         static float RNegFB{};
 486:Veno-Echo.cpp **** 
 487:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 488:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 489:Veno-Echo.cpp ****             LNegFB = 0.0f;
 490:Veno-Echo.cpp ****         
 491:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 492:Veno-Echo.cpp ****             RNegFB = 0.0f;
 493:Veno-Echo.cpp **** 
 494:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 495:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp ****         //crossfeedback:
 498:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 499:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 500:Veno-Echo.cpp **** 
 501:Veno-Echo.cpp **** 
 502:Veno-Echo.cpp ****         //get envelopes for feedback signals
 503:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 504:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 505:Veno-Echo.cpp **** 
 506:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 507:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 508:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 509:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 510:Veno-Echo.cpp ****             else LNegFB = 0.0;
 511:Veno-Echo.cpp ****             
 512:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 513:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 514:Veno-Echo.cpp ****             else RNegFB = 0.0;
 515:Veno-Echo.cpp **** 
 516:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 517:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 518:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 519:Veno-Echo.cpp ****  
 520:Veno-Echo.cpp ****         //hard limit
 521:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 522:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 32


 523:Veno-Echo.cpp **** 
 524:Veno-Echo.cpp ****         //delayL.Write( DcBlock_LFB.Process(combinedL ) );
 525:Veno-Echo.cpp ****         //delayR.Write( DcBlock_RFB.Process(combinedR ) );
 526:Veno-Echo.cpp **** 
 527:Veno-Echo.cpp ****         delayL.Write(combinedL);
 528:Veno-Echo.cpp ****         delayR.Write(combinedR);
 529:Veno-Echo.cpp **** 
 530:Veno-Echo.cpp ****         // floats for wet dry mix
 531:Veno-Echo.cpp ****         float mixL;
 532:Veno-Echo.cpp ****         float mixR;
 533:Veno-Echo.cpp **** 
 534:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 535:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 536:Veno-Echo.cpp **** 
 537:Veno-Echo.cpp ****         //hard limit
 538:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 539:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 540:Veno-Echo.cpp **** 
 541:Veno-Echo.cpp **** if(PostFilters)
 542:Veno-Echo.cpp **** {
 543:Veno-Echo.cpp ****     //****************************************************************************************
 544:Veno-Echo.cpp ****         //post filters
 545:Veno-Echo.cpp ****         //process LPF
 546:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 547:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 548:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 549:Veno-Echo.cpp **** 
 550:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 551:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 552:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 553:Veno-Echo.cpp ****         
 554:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 555:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 556:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 557:Veno-Echo.cpp **** 
 558:Veno-Echo.cpp ****         //hard limit
 559:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 560:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 561:Veno-Echo.cpp **** 
 562:Veno-Echo.cpp ****         //process HPF
 563:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 564:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 565:Veno-Echo.cpp **** 
 566:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 567:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 568:Veno-Echo.cpp **** 
 569:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 570:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 571:Veno-Echo.cpp **** 
 572:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 573:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 574:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 575:Veno-Echo.cpp **** 
 576:Veno-Echo.cpp ****     //****************************************************************************************
 577:Veno-Echo.cpp **** }
 578:Veno-Echo.cpp **** else
 579:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 33


 580:Veno-Echo.cpp ****     /* code */
 581:Veno-Echo.cpp **** }
 582:Veno-Echo.cpp ****         if(drywet < 0.5f)
 583:Veno-Echo.cpp ****         {
 584:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 585:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 586:Veno-Echo.cpp ****         }
 587:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 588:Veno-Echo.cpp ****         {
 589:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 590:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 591:Veno-Echo.cpp ****         }
 592:Veno-Echo.cpp ****         else
 593:Veno-Echo.cpp ****         {
 594:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 595:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 596:Veno-Echo.cpp ****         }
 597:Veno-Echo.cpp **** 
 598:Veno-Echo.cpp ****         //send mixes to outputs
 599:Veno-Echo.cpp ****         if(mute)
 600:Veno-Echo.cpp ****         {
 601:Veno-Echo.cpp ****             out[i] = 0.0f;
 602:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 603:Veno-Echo.cpp ****         }
 604:Veno-Echo.cpp ****         else
 605:Veno-Echo.cpp ****         {
 606:Veno-Echo.cpp ****             out[i] = mixL;
 607:Veno-Echo.cpp ****             out[i+1] = mixR;
 608:Veno-Echo.cpp ****         }
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp ****         //write to DAC for debug
 611:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 612:Veno-Echo.cpp **** 
 613:Veno-Echo.cpp ****     }
 614:Veno-Echo.cpp **** 
 615:Veno-Echo.cpp **** }
 616:Veno-Echo.cpp **** 
 617:Veno-Echo.cpp **** void InitDelays(float samplerate)
 618:Veno-Echo.cpp **** {
 464              		.loc 21 618 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 16
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 619:Veno-Echo.cpp **** 
 620:Veno-Echo.cpp ****     //Init fwd delays
 621:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 468              		.loc 21 621 5 view .LVU52
 469              	.LBB903:
 470              	.LBI903:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 471              		.loc 19 56 10 view .LVU53
 472              	.LBB904:
 473              	.LBB905:
  57:delayline_multitap.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 34


  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 474              		.loc 19 58 29 view .LVU54
 475 0000 5D4B     		ldr	r3, .L37
 476 0002 5E49     		ldr	r1, .L37+4
 477              	.LBE905:
 478              	.LBE904:
 479              	.LBE903:
 618:Veno-Echo.cpp **** 
 480              		.loc 21 618 1 is_stmt 0 view .LVU55
 481 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 482              		.cfi_def_cfa_offset 20
 483              		.cfi_offset 4, -20
 484              		.cfi_offset 5, -16
 485              		.cfi_offset 6, -12
 486              		.cfi_offset 7, -8
 487              		.cfi_offset 14, -4
 488 0006 A3F18405 		sub	r5, r3, #132
 489 000a 85B0     		sub	sp, sp, #20
 490              		.cfi_def_cfa_offset 40
 491 000c 2846     		mov	r0, r5
 492              	.LVL16:
 493              	.L18:
 494              	.LBB910:
 495              	.LBB909:
 496              	.LBB906:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 497              		.loc 19 60 13 view .LVU56
 498 000e 0022     		movs	r2, #0
 499 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 500              		.loc 19 58 9 is_stmt 1 view .LVU57
  58:delayline_multitap.h ****         {
 501              		.loc 19 58 29 view .LVU58
 502 0014 8B42     		cmp	r3, r1
 503 0016 FAD1     		bne	.L18
 504              	.LBE906:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 505              		.loc 19 63 9 is_stmt 0 view .LVU59
 506 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 507              		.loc 19 64 9 view .LVU60
 508 001a 594C     		ldr	r4, .L37+8
 509 001c 0226     		movs	r6, #2
 510              	.LBB907:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 511              		.loc 19 66 21 view .LVU61
 512 001e 1346     		mov	r3, r2
 513              	.LBE907:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 514              		.loc 19 63 9 view .LVU62
 515 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 516              		.loc 19 64 9 view .LVU63
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 35


 517 0022 2E51     		str	r6, [r5, r4]
 518              	.LVL17:
 519              	.LBB908:
 520              		.loc 19 66 31 is_stmt 1 view .LVU64
 521              	.L19:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 522              		.loc 19 68 13 is_stmt 0 view .LVU65
 523 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 524              		.loc 19 66 9 view .LVU66
 525 0026 0133     		adds	r3, r3, #1
 526              	.LVL18:
  69:delayline_multitap.h ****             frac_[i] = 0;
 527              		.loc 19 69 13 view .LVU67
 528 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 529              		.loc 19 68 13 view .LVU68
 530 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 531              		.loc 19 66 31 view .LVU69
 532 002e 0A68     		ldr	r2, [r1]
 533              		.loc 19 69 13 view .LVU70
 534 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 535              		.loc 19 66 9 is_stmt 1 view .LVU71
 536              	.LVL19:
  66:delayline_multitap.h ****         {
 537              		.loc 19 66 31 view .LVU72
 538 0032 9A42     		cmp	r2, r3
 539 0034 F6D8     		bhi	.L19
 540 0036 534B     		ldr	r3, .L37+12
 541              	.LVL20:
  66:delayline_multitap.h ****         {
 542              		.loc 19 66 31 is_stmt 0 view .LVU73
 543 0038 5349     		ldr	r1, .L37+16
 544 003a A3F18406 		sub	r6, r3, #132
 545 003e 3046     		mov	r0, r6
 546              	.LVL21:
 547              	.L20:
  66:delayline_multitap.h ****         {
 548              		.loc 19 66 31 view .LVU74
 549              	.LBE908:
 550              	.LBE909:
 551              	.LBE910:
 552              	.LBB911:
 553              	.LBB912:
 554              	.LBB913:
  60:delayline_multitap.h ****         }
 555              		.loc 19 60 13 view .LVU75
 556 0040 0022     		movs	r2, #0
 557 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 558              		.loc 19 58 9 is_stmt 1 view .LVU76
  58:delayline_multitap.h ****         {
 559              		.loc 19 58 29 view .LVU77
 560 0046 8B42     		cmp	r3, r1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 36


 561 0048 FAD1     		bne	.L20
 562              	.LBE913:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 563              		.loc 19 63 9 is_stmt 0 view .LVU78
 564 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 565              		.loc 19 64 9 view .LVU79
 566 004c 4C4C     		ldr	r4, .L37+8
 567 004e 0227     		movs	r7, #2
 568              	.LBB914:
  66:delayline_multitap.h ****         {
 569              		.loc 19 66 21 view .LVU80
 570 0050 1346     		mov	r3, r2
 571              	.LBE914:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 572              		.loc 19 63 9 view .LVU81
 573 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 574              		.loc 19 64 9 view .LVU82
 575 0054 3751     		str	r7, [r6, r4]
 576              	.LVL22:
 577              	.LBB915:
  66:delayline_multitap.h ****         {
 578              		.loc 19 66 31 is_stmt 1 view .LVU83
 579              	.L21:
  68:delayline_multitap.h ****             frac_[i] = 0;
 580              		.loc 19 68 13 is_stmt 0 view .LVU84
 581 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 582              		.loc 19 66 9 view .LVU85
 583 0058 0133     		adds	r3, r3, #1
 584              	.LVL23:
 585              		.loc 19 69 13 view .LVU86
 586 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 587              		.loc 19 68 13 view .LVU87
 588 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 589              		.loc 19 66 31 view .LVU88
 590 0060 0A68     		ldr	r2, [r1]
 591              		.loc 19 69 13 view .LVU89
 592 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 593              		.loc 19 66 9 is_stmt 1 view .LVU90
 594              	.LVL24:
  66:delayline_multitap.h ****         {
 595              		.loc 19 66 31 view .LVU91
 596 0064 9A42     		cmp	r2, r3
 597 0066 F6D8     		bhi	.L21
 598              	.LVL25:
  66:delayline_multitap.h ****         {
 599              		.loc 19 66 31 is_stmt 0 view .LVU92
 600              	.LBE915:
 601              	.LBE912:
 602              	.LBE911:
 622:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 623:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 37


 624:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 625:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 603              		.loc 21 625 5 is_stmt 1 view .LVU93
 626:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 604              		.loc 21 626 16 is_stmt 0 view .LVU94
 605 0068 484C     		ldr	r4, .L37+20
 627:Veno-Echo.cpp **** 
 628:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 606              		.loc 21 628 16 view .LVU95
 607 006a 0820     		movs	r0, #8
 625:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 608              		.loc 21 625 16 view .LVU96
 609 006c 484F     		ldr	r7, .L37+24
 610 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 611 0072 3D60     		str	r5, [r7]
 626:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 612              		.loc 21 626 5 is_stmt 1 view .LVU97
 613              	.LBB916:
 614              	.LBB917:
 615              	.LBB918:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 616              		.loc 20 51 9 is_stmt 0 view .LVU98
 617 0074 46F2A815 		movw	r5, #25000
 618              	.LBE918:
 619              	.LBE917:
 620              	.LBE916:
 626:Veno-Echo.cpp **** 
 621              		.loc 21 626 16 view .LVU99
 622 0078 2660     		str	r6, [r4]
 623              		.loc 21 628 5 is_stmt 1 view .LVU100
 624              		.loc 21 628 16 is_stmt 0 view .LVU101
 625 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 626              	.LVL26:
 627              		.loc 21 628 16 view .LVU102
 628 007e 0346     		mov	r3, r0	@ movhi
 629 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 630 0084 3846     		mov	r0, r7
 631 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 632 008a 0299     		ldr	r1, [sp, #8]
 633 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 634              	.LVL27:
 629:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 635              		.loc 21 629 5 is_stmt 1 view .LVU103
 636              		.loc 21 629 16 is_stmt 0 view .LVU104
 637 0090 0920     		movs	r0, #9
 638 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 38


 639              	.LVL28:
 640 0096 0346     		mov	r3, r0	@ movhi
 641 0098 2046     		mov	r0, r4
 642              	.LBB930:
 643              	.LBB925:
 644              	.LBB920:
 645              		.loc 20 51 9 view .LVU105
 646 009a 3E4C     		ldr	r4, .L37+28
 647              	.LBE920:
 648              	.LBE925:
 649              	.LBE930:
 650              		.loc 21 629 16 view .LVU106
 651 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 652 00a0 0399     		ldr	r1, [sp, #12]
 653 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 654 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 655              	.LVL29:
 630:Veno-Echo.cpp **** 
 631:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 632:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 633:Veno-Echo.cpp **** 
 634:Veno-Echo.cpp ****     //Init rev delays
 635:Veno-Echo.cpp ****     delMemsL_REV.Init();
 656              		.loc 21 635 5 is_stmt 1 view .LVU107
 657              	.LBB931:
 658              	.LBI916:
  42:delayline_reverse.h ****     { 
 659              		.loc 20 42 10 view .LVU108
 660              	.LBB926:
 661              	.LBI917:
  48:delayline_reverse.h ****     {
 662              		.loc 20 48 10 view .LVU109
 663              	.LBB921:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 664              		.loc 20 52 9 is_stmt 0 view .LVU110
 665 00aa 3B4A     		ldr	r2, .L37+32
 666 00ac 45F6C050 		movw	r0, #24000
 667 00b0 04F11803 		add	r3, r4, #24
 668 00b4 3949     		ldr	r1, .L37+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 669              		.loc 20 51 9 view .LVU111
 670 00b6 2561     		str	r5, [r4, #16]
 671              		.loc 20 52 9 view .LVU112
 672 00b8 A050     		str	r0, [r4, r2]
 673              	.LVL30:
 674              	.LBB919:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 675              		.loc 20 54 29 is_stmt 1 view .LVU113
 676              	.L22:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 677              		.loc 20 56 13 is_stmt 0 view .LVU114
 678 00ba 0022     		movs	r2, #0
 679 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 680              		.loc 20 54 9 is_stmt 1 view .LVU115
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 39


  54:delayline_reverse.h ****         {
 681              		.loc 20 54 29 view .LVU116
 682 00c0 8B42     		cmp	r3, r1
 683 00c2 FAD1     		bne	.L22
 684              	.LBE919:
 685              	.LBE921:
 686              	.LBE926:
 687              	.LBE931:
 688              	.LBB932:
 689              	.LBB933:
 690              	.LBB934:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 691              		.loc 20 51 9 is_stmt 0 view .LVU117
 692 00c4 3648     		ldr	r0, .L37+40
 693 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 694              		.loc 20 52 9 view .LVU118
 695 00ca 334D     		ldr	r5, .L37+32
 696 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 697              		.loc 20 51 9 view .LVU119
 698 00d0 0161     		str	r1, [r0, #16]
 699              	.LBE934:
 700              	.LBE933:
 701              	.LBE932:
 702              	.LBB957:
 703              	.LBB927:
 704              	.LBB922:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 705              		.loc 20 58 9 view .LVU120
 706 00d2 0021     		movs	r1, #0
 707              	.LBE922:
 708              	.LBE927:
 709              	.LBE957:
 710              	.LBB958:
 711              	.LBB947:
 712              	.LBB937:
  52:delayline_reverse.h ****         
 713              		.loc 20 52 9 view .LVU121
 714 00d4 4651     		str	r6, [r0, r5]
 715              	.LBE937:
 716              	.LBE947:
 717              	.LBE958:
 718              	.LBB959:
 719              	.LBB928:
 720              	.LBB923:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 721              		.loc 20 62 9 view .LVU122
 722 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 723              		.loc 20 64 9 view .LVU123
 724 00d8 324E     		ldr	r6, .L37+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 40


 725 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 726              		.loc 20 62 9 view .LVU124
 727 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 728              		.loc 20 60 9 view .LVU125
 729 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 730              		.loc 20 63 9 view .LVU126
 731 00e2 314D     		ldr	r5, .L37+48
  61:delayline_reverse.h ****         playinghead_ = false;
 732              		.loc 20 61 9 view .LVU127
 733 00e4 6161     		str	r1, [r4, #20]
 734              		.loc 20 64 9 view .LVU128
 735 00e6 A155     		strb	r1, [r4, r6]
 736              	.LVL31:
 737              		.loc 20 64 9 view .LVU129
 738              	.LBE923:
 739              	.LBE928:
 740              	.LBE959:
 636:Veno-Echo.cpp ****     delMemsR_REV.Init();
 741              		.loc 21 636 5 is_stmt 1 view .LVU130
 742              	.LBB960:
 743              	.LBI932:
  42:delayline_reverse.h ****     { 
 744              		.loc 20 42 10 view .LVU131
 745              	.LBB948:
 746              	.LBI933:
  48:delayline_reverse.h ****     {
 747              		.loc 20 48 10 view .LVU132
 748              	.LBB938:
 749              	.LBB935:
  54:delayline_reverse.h ****         {
 750              		.loc 20 54 29 view .LVU133
 751              	.LBE935:
 752              	.LBE938:
 753              	.LBE948:
 754              	.LBE960:
 755              	.LBB961:
 756              	.LBB929:
 757              	.LBB924:
  63:delayline_reverse.h ****         fading_ = false;
 758              		.loc 20 63 9 is_stmt 0 view .LVU134
 759 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 760              		.loc 20 59 9 view .LVU135
 761 00ea C4E90111 		strd	r1, r1, [r4, #4]
 762 00ee 2F49     		ldr	r1, .L37+52
 763              	.LVL32:
 764              	.L23:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 765              		.loc 20 59 9 view .LVU136
 766              	.LBE924:
 767              	.LBE929:
 768              	.LBE961:
 769              	.LBB962:
 770              	.LBB949:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 41


 771              	.LBB939:
 772              	.LBB936:
  56:delayline_reverse.h ****         }
 773              		.loc 20 56 13 view .LVU137
 774 00f0 0022     		movs	r2, #0
 775 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 776              		.loc 20 54 9 is_stmt 1 view .LVU138
  54:delayline_reverse.h ****         {
 777              		.loc 20 54 29 view .LVU139
 778 00f6 8B42     		cmp	r3, r1
 779 00f8 FAD1     		bne	.L23
 780              	.LBE936:
 781              	.LBE939:
 782              	.LBE949:
 783              	.LBE962:
 637:Veno-Echo.cpp **** 
 638:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 639:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 784              		.loc 21 639 21 is_stmt 0 view .LVU140
 785 00fa 2D49     		ldr	r1, .L37+56
 786              	.LBB963:
 787              	.LBB950:
 788              	.LBB940:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 789              		.loc 20 58 9 view .LVU141
 790 00fc 0023     		movs	r3, #0
 791              	.LBE940:
 792              	.LBE950:
 793              	.LBE963:
 794              	.LBB964:
 795              	.LBB965:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 796              		.loc 21 70 15 view .LVU142
 797 00fe DFED2D6A 		vldr.32	s13, .L37+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 798              		.loc 21 70 28 view .LVU143
 799 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 800              		.loc 21 70 53 view .LVU144
 801 0106 9FED2C6A 		vldr.32	s12, .L37+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 802              		.loc 21 70 15 view .LVU145
 803 010a 36EEE77A 		vsub.f32	s14, s13, s15
 804              	.LBE965:
 805              	.LBE964:
 806              	.LBB979:
 807              	.LBB951:
 808              	.LBB941:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 809              		.loc 20 62 9 view .LVU146
 810 010e 2B4D     		ldr	r5, .L37+68
 811              	.LBE941:
 812              	.LBE951:
 813              	.LBE979:
 814              	.LBB980:
 815              	.LBB974:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 42


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 816              		.loc 21 70 53 view .LVU147
 817 0110 67EE867A 		vmul.f32	s15, s15, s12
 818              	.LBE974:
 819              	.LBE980:
 820              	.LBB981:
 821              	.LBB952:
 822              	.LBB942:
 823              		.loc 20 64 9 view .LVU148
 824 0114 234E     		ldr	r6, .L37+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 825              		.loc 20 62 9 view .LVU149
 826 0116 4355     		strb	r3, [r0, r5]
 827              	.LBE942:
 828              	.LBE952:
 829              	.LBE981:
 830              	.LBB982:
 831              	.LBB975:
 832              	.LBB966:
 833              	.LBB967:
 834              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 43


  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 835              		.loc 22 76 31 view .LVU150
 836 0118 B0EEC77A 		vabs.f32	s14, s14
 837              	.LBE967:
 838              	.LBE966:
 839              	.LBE975:
 840              	.LBE982:
 841              	.LBB983:
 842              	.LBB953:
 843              	.LBB943:
  63:delayline_reverse.h ****         fading_ = false;
 844              		.loc 20 63 9 view .LVU151
 845 011c 284D     		ldr	r5, .L37+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 846              		.loc 20 60 9 view .LVU152
 847 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 848              		.loc 20 61 9 view .LVU153
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 44


 849 0120 4361     		str	r3, [r0, #20]
 850              	.LBE943:
 851              	.LBE953:
 852              	.LBE983:
 853              	.LBB984:
 854              	.LBB976:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 855              		.loc 21 70 9 view .LVU154
 856 0122 B4EEE77A 		vcmpe.f32	s14, s15
 857              	.LBE976:
 858              	.LBE984:
 859              	.LBB985:
 860              	.LBB954:
 861              	.LBB944:
 862              		.loc 20 64 9 view .LVU155
 863 0126 8355     		strb	r3, [r0, r6]
 864              	.LVL33:
 865              		.loc 20 64 9 view .LVU156
 866              	.LBE944:
 867              	.LBE954:
 868              	.LBE985:
 869              		.loc 21 639 5 is_stmt 1 view .LVU157
 640:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 870              		.loc 21 640 5 view .LVU158
 639:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 871              		.loc 21 639 21 is_stmt 0 view .LVU159
 872 0128 0C60     		str	r4, [r1]
 873              	.LBB986:
 874              	.LBB955:
 875              	.LBB945:
  63:delayline_reverse.h ****         fading_ = false;
 876              		.loc 20 63 9 view .LVU160
 877 012a 2A60     		str	r2, [r5]	@ float
 878              	.LBE945:
 879              	.LBE955:
 880              	.LBE986:
 881              	.LBB987:
 882              	.LBB977:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 883              		.loc 21 70 9 view .LVU161
 884 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 885              	.LBE977:
 886              	.LBE987:
 887              	.LBB988:
 888              	.LBB956:
 889              	.LBB946:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 890              		.loc 20 59 9 view .LVU162
 891 0130 C0E90133 		strd	r3, r3, [r0, #4]
 892              	.LBE946:
 893              	.LBE956:
 894              	.LBE988:
 895              		.loc 21 640 21 view .LVU163
 896 0134 234B     		ldr	r3, .L37+76
 897 0136 1860     		str	r0, [r3]
 641:Veno-Echo.cpp **** 
 642:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 45


 643:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 898              		.loc 21 643 5 is_stmt 1 view .LVU164
 899              	.LVL34:
 900              	.LBB989:
 901              	.LBI964:
  68:Veno-Echo.cpp ****     {
 902              		.loc 21 68 10 view .LVU165
 903              	.LBB978:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 904              		.loc 21 70 9 view .LVU166
 905              	.LBB969:
 906              	.LBI966:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 907              		.loc 22 75 3 view .LVU167
 908              	.LBB968:
 909              		.loc 22 76 5 view .LVU168
 910              		.loc 22 76 5 is_stmt 0 view .LVU169
 911              	.LBE968:
 912              	.LBE969:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 913              		.loc 21 70 9 view .LVU170
 914 0138 04DD     		ble	.L24
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 915              		.loc 21 73 13 is_stmt 1 view .LVU171
 916              	.LBB970:
 917              	.LBB971:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 918              		.loc 20 72 9 is_stmt 0 view .LVU172
 919 013a 234D     		ldr	r5, .L37+80
 920              	.LBE971:
 921              	.LBE970:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 922              		.loc 21 73 27 view .LVU173
 923 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 924              		.loc 21 74 13 is_stmt 1 view .LVU174
 925              	.LVL35:
 926              	.LBB973:
 927              	.LBI970:
  69:delayline_reverse.h ****     {
 928              		.loc 20 69 17 view .LVU175
 929              	.LBB972:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 930              		.loc 20 71 9 is_stmt 0 view .LVU176
 931 0140 2260     		str	r2, [r4]	@ float
 932              		.loc 20 72 9 view .LVU177
 933 0142 2561     		str	r5, [r4, #16]
 934              	.LVL36:
 935              	.L24:
 936              		.loc 20 72 9 view .LVU178
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 46


 937              	.LBE972:
 938              	.LBE973:
 939              	.LBE978:
 940              	.LBE989:
 644:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 941              		.loc 21 644 5 is_stmt 1 view .LVU179
 942              	.LBB990:
 943              	.LBI990:
  68:Veno-Echo.cpp ****     {
 944              		.loc 21 68 10 view .LVU180
 945              	.LBB991:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 946              		.loc 21 70 9 view .LVU181
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 21 70 28 is_stmt 0 view .LVU182
 948 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 949              	.LVL37:
 950              	.LBB992:
 951              	.LBI992:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 952              		.loc 22 75 3 is_stmt 1 view .LVU183
 953              	.LBB993:
 954              		.loc 22 76 5 view .LVU184
 955              		.loc 22 76 5 is_stmt 0 view .LVU185
 956              	.LBE993:
 957              	.LBE992:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 958              		.loc 21 70 15 view .LVU186
 959 0148 DFED1A6A 		vldr.32	s13, .L37+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 960              		.loc 21 70 53 view .LVU187
 961 014c 9FED1A6A 		vldr.32	s12, .L37+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 962              		.loc 21 70 15 view .LVU188
 963 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 964              		.loc 21 70 53 view .LVU189
 965 0154 67EE867A 		vmul.f32	s15, s15, s12
 966              	.LBB995:
 967              	.LBB994:
 968              		.loc 22 76 31 view .LVU190
 969 0158 B0EEC77A 		vabs.f32	s14, s14
 970              	.LBE994:
 971              	.LBE995:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 972              		.loc 21 70 9 view .LVU191
 973 015c B4EEE77A 		vcmpe.f32	s14, s15
 974 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 975 0164 05DD     		ble	.L17
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 976              		.loc 21 73 13 is_stmt 1 view .LVU192
 977              	.LBB996:
 978              	.LBB997:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 979              		.loc 20 71 9 is_stmt 0 view .LVU193
 980 0166 0021     		movs	r1, #0
 981              		.loc 20 72 9 view .LVU194
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 47


 982 0168 174A     		ldr	r2, .L37+80
 983              	.LBE997:
 984              	.LBE996:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 985              		.loc 21 73 27 view .LVU195
 986 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 987              		.loc 21 74 13 is_stmt 1 view .LVU196
 988              	.LVL38:
 989              	.LBB999:
 990              	.LBI996:
  69:delayline_reverse.h ****     {
 991              		.loc 20 69 17 view .LVU197
 992              	.LBB998:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 993              		.loc 20 71 9 is_stmt 0 view .LVU198
 994 016e 0160     		str	r1, [r0]	@ float
 995              		.loc 20 72 9 view .LVU199
 996 0170 0261     		str	r2, [r0, #16]
 997              	.LVL39:
 998              	.L17:
 999              		.loc 20 72 9 view .LVU200
 1000              	.LBE998:
 1001              	.LBE999:
 1002              	.LBE991:
 1003              	.LBE990:
 645:Veno-Echo.cpp **** 
 646:Veno-Echo.cpp **** }
 1004              		.loc 21 646 1 view .LVU201
 1005 0172 05B0     		add	sp, sp, #20
 1006              		.cfi_def_cfa_offset 20
 1007              		@ sp needed
 1008 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 1009              	.L38:
 1010 0176 00BF     		.align	2
 1011              	.L37:
 1012 0178 84000000 		.word	delMemsL+132
 1013 017c 84786900 		.word	delMemsL+6912132
 1014 0180 84786900 		.word	6912132
 1015 0184 84000000 		.word	delMemsR+132
 1016 0188 84786900 		.word	delMemsR+6912132
 1017 018c 00000000 		.word	.LANCHOR1
 1018 0190 00000000 		.word	.LANCHOR0
 1019 0194 00000000 		.word	delMemsL_REV
 1020 0198 189F2400 		.word	2400024
 1021 019c 189F2400 		.word	delMemsL_REV+2400024
 1022 01a0 00000000 		.word	delMemsR_REV
 1023 01a4 249F2400 		.word	2400036
 1024 01a8 209F2400 		.word	delMemsL_REV+2400032
 1025 01ac 189F2400 		.word	delMemsR_REV+2400024
 1026 01b0 00000000 		.word	.LANCHOR2
 1027 01b4 00409C47 		.word	1201422336
 1028 01b8 0AD7A33B 		.word	1000593162
 1029 01bc 1C9F2400 		.word	2400028
 1030 01c0 209F2400 		.word	delMemsR_REV+2400032
 1031 01c4 00000000 		.word	.LANCHOR3
 1032 01c8 80380100 		.word	80000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 48


 1033              		.cfi_endproc
 1034              	.LFE4310:
 1036              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1037              		.align	1
 1038              		.p2align 2,,3
 1039              		.global	_Z20Update_DelayTimeL_CVv
 1040              		.syntax unified
 1041              		.thumb
 1042              		.thumb_func
 1043              		.fpu fpv5-d16
 1045              	_Z20Update_DelayTimeL_CVv:
 1046              	.LFB4312:
 647:Veno-Echo.cpp **** 
 648:Veno-Echo.cpp **** int main(void)
 649:Veno-Echo.cpp **** {
 650:Veno-Echo.cpp ****     // initialize hardware.
 651:Veno-Echo.cpp ****     hw.Configure();
 652:Veno-Echo.cpp ****     hw.Init();
 653:Veno-Echo.cpp ****     //hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_96KHZ);
 654:Veno-Echo.cpp ****     
 655:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 656:Veno-Echo.cpp **** 
 657:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 658:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 659:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 660:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 661:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 662:Veno-Echo.cpp **** 
 663:Veno-Echo.cpp ****     //Gates
 664:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 665:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 666:Veno-Echo.cpp **** 
 667:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 668:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 669:Veno-Echo.cpp ****     ClockIn.Init(&ClockPin);
 670:Veno-Echo.cpp **** 
 671:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 672:Veno-Echo.cpp ****     
 673:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 674:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 675:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 676:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 677:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 678:Veno-Echo.cpp **** 
 679:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 680:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 681:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 682:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 683:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 684:Veno-Echo.cpp **** 
 685:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 686:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 687:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 688:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 689:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 690:Veno-Echo.cpp **** 
 691:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 49


 692:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 693:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 694:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 695:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 696:Veno-Echo.cpp **** 
 697:Veno-Echo.cpp ****     // set params for CrossFade objects
 698:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 699:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 700:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 701:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 702:Veno-Echo.cpp **** 
 703:Veno-Echo.cpp ****     WidthXfade.Init();
 704:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 705:Veno-Echo.cpp **** 
 706:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 707:Veno-Echo.cpp **** 
 708:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 709:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 710:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 711:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 712:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 713:Veno-Echo.cpp **** 
 714:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 715:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 716:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 717:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 718:Veno-Echo.cpp **** 
 719:Veno-Echo.cpp ****     //setup L and R High Pass filters
 720:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 721:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 722:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 723:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 724:Veno-Echo.cpp **** 
 725:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 726:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 727:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 728:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 729:Veno-Echo.cpp **** 
 730:Veno-Echo.cpp ****     //post filters
 731:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 732:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 733:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 734:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 735:Veno-Echo.cpp **** 
 736:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 737:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 738:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 739:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 740:Veno-Echo.cpp **** 
 741:Veno-Echo.cpp ****     //setup L and R High Pass filters
 742:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 743:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 744:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 745:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 746:Veno-Echo.cpp **** 
 747:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 748:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 50


 749:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 750:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 751:Veno-Echo.cpp **** 
 752:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 753:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 754:Veno-Echo.cpp **** 
 755:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 756:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 757:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 758:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 759:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 760:Veno-Echo.cpp **** 
 761:Veno-Echo.cpp ****     BaseTempo.init(mintap,maxtap,1.25f);  //max 6 second tap
 762:Veno-Echo.cpp **** 
 763:Veno-Echo.cpp ****     //setup tempo indicators
 764:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 765:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 766:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 767:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 768:Veno-Echo.cpp **** 
 769:Veno-Echo.cpp ****     //load settings from flash
 770:Veno-Echo.cpp **** 
 771:Veno-Echo.cpp ****     Settings SavedSettings{LoadSettings()};
 772:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 773:Veno-Echo.cpp ****     //AltControls = defaultAltControls;
 774:Veno-Echo.cpp **** 
 775:Veno-Echo.cpp ****     ApplySettings(SavedSettings);
 776:Veno-Echo.cpp ****     AltControls = SavedSettings;
 777:Veno-Echo.cpp **** 
 778:Veno-Echo.cpp ****     //initialize DAC
 779:Veno-Echo.cpp **** 
 780:Veno-Echo.cpp ****    //ADC
 781:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 782:Veno-Echo.cpp **** 
 783:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 784:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 785:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 786:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 787:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 788:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 789:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 790:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 791:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 792:Veno-Echo.cpp **** 
 793:Veno-Echo.cpp **** 
 794:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 795:Veno-Echo.cpp ****     hw.adc.Start();
 796:Veno-Echo.cpp **** 
 797:Veno-Echo.cpp **** 
 798:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 799:Veno-Echo.cpp ****     // start audio callback
 800:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 801:Veno-Echo.cpp **** 
 802:Veno-Echo.cpp ****     
 803:Veno-Echo.cpp **** 
 804:Veno-Echo.cpp ****      for(;;)
 805:Veno-Echo.cpp ****      {  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 51


 806:Veno-Echo.cpp **** 
 807:Veno-Echo.cpp ****         static uint32_t saveTimer{};
 808:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 809:Veno-Echo.cpp ****        
 810:Veno-Echo.cpp ****         if(save_flag)   //if save_flag is set
 811:Veno-Echo.cpp ****         {
 812:Veno-Echo.cpp ****             save_flag = false;
 813:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 814:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 815:Veno-Echo.cpp ****         }
 816:Veno-Echo.cpp ****         
 817:Veno-Echo.cpp ****         else    //save flag not set
 818:Veno-Echo.cpp ****         {
 819:Veno-Echo.cpp ****            if(saveState == WAITING)    //wait flag set (waiting)
 820:Veno-Echo.cpp ****            {
 821:Veno-Echo.cpp ****                if(System::GetNow() - saveTimer > 1000)  //1second wait to save
 822:Veno-Echo.cpp ****                 {
 823:Veno-Echo.cpp ****                     saveState = SAVING; //stop reading ADCs temporarily
 824:Veno-Echo.cpp ****                     
 825:Veno-Echo.cpp ****                     Settings ToSave{AltControls};   //copy settings
 826:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 827:Veno-Echo.cpp ****                     {
 828:Veno-Echo.cpp ****                     }
 829:Veno-Echo.cpp ****                 }
 830:Veno-Echo.cpp **** 
 831:Veno-Echo.cpp ****                 else{} //still waiting
 832:Veno-Echo.cpp **** 
 833:Veno-Echo.cpp ****            }
 834:Veno-Echo.cpp **** 
 835:Veno-Echo.cpp ****            if(saveState == SAVING)
 836:Veno-Echo.cpp ****            {
 837:Veno-Echo.cpp ****             if(System::GetNow() - saveTimer > 1200) //additional 0.2 second wait
 838:Veno-Echo.cpp ****             {
 839:Veno-Echo.cpp ****                     saveState = IDLE;   //reset saveState
 840:Veno-Echo.cpp ****             }
 841:Veno-Echo.cpp ****             else{} //ADCs paused
 842:Veno-Echo.cpp **** 
 843:Veno-Echo.cpp ****            }
 844:Veno-Echo.cpp **** 
 845:Veno-Echo.cpp ****            else //IDLE - do nothing
 846:Veno-Echo.cpp ****            {
 847:Veno-Echo.cpp ****            }
 848:Veno-Echo.cpp ****         }
 849:Veno-Echo.cpp **** 
 850:Veno-Echo.cpp ****      }
 851:Veno-Echo.cpp **** 
 852:Veno-Echo.cpp **** }
 853:Veno-Echo.cpp **** 
 854:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 855:Veno-Echo.cpp **** {
 1047              		.loc 21 855 1 is_stmt 1 view -0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 856:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1051              		.loc 21 856 5 view .LVU203
 855:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 52


 1052              		.loc 21 855 1 is_stmt 0 view .LVU204
 1053 0000 08B5     		push	{r3, lr}
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 3, -8
 1056              		.cfi_offset 14, -4
 1057              		.loc 21 856 36 view .LVU205
 1058 0002 0021     		movs	r1, #0
 1059 0004 0348     		ldr	r0, .L41
 1060 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1061              	.LVL40:
 1062              		.loc 21 856 19 view .LVU206
 1063 000a 034B     		ldr	r3, .L41+4
 1064 000c 83ED000A 		vstr.32	s0, [r3]
 857:Veno-Echo.cpp **** }
 1065              		.loc 21 857 1 view .LVU207
 1066 0010 08BD     		pop	{r3, pc}
 1067              	.L42:
 1068 0012 00BF     		.align	2
 1069              	.L41:
 1070 0014 18000000 		.word	.LANCHOR4+24
 1071 0018 00000000 		.word	.LANCHOR5
 1072              		.cfi_endproc
 1073              	.LFE4312:
 1075              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1076              		.align	1
 1077              		.p2align 2,,3
 1078              		.global	_Z17Update_DelayTimeLv
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1082              		.fpu fpv5-d16
 1084              	_Z17Update_DelayTimeLv:
 1085              	.LFB4313:
 858:Veno-Echo.cpp **** 
 859:Veno-Echo.cpp **** void Update_DelayTimeL()
 860:Veno-Echo.cpp **** {
 1086              		.loc 21 860 1 is_stmt 1 view -0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 861:Veno-Echo.cpp ****     static bool lastShift{};
 1090              		.loc 21 861 5 view .LVU209
 862:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1091              		.loc 21 862 5 view .LVU210
 863:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1092              		.loc 21 863 5 view .LVU211
 864:Veno-Echo.cpp ****     
 865:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1093              		.loc 21 865 5 view .LVU212
 866:Veno-Echo.cpp **** 
 867:Veno-Echo.cpp ****     //update pot values
 868:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1094              		.loc 21 868 5 view .LVU213
 860:Veno-Echo.cpp ****     static bool lastShift{};
 1095              		.loc 21 860 1 is_stmt 0 view .LVU214
 1096 0000 10B5     		push	{r4, lr}
 1097              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 53


 1098              		.cfi_offset 4, -8
 1099              		.cfi_offset 14, -4
 1100              		.loc 21 868 44 view .LVU215
 1101 0002 0222     		movs	r2, #2
 1102 0004 0721     		movs	r1, #7
 1103 0006 7648     		ldr	r0, .L76
 1104 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1105              	.LVL41:
 869:Veno-Echo.cpp **** 
 870:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 871:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 872:Veno-Echo.cpp ****     static int counterL{};
 873:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1106              		.loc 21 873 26 view .LVU216
 1107 000c 7549     		ldr	r1, .L76+4
 1108              		.loc 21 873 31 view .LVU217
 1109 000e 764B     		ldr	r3, .L76+8
 1110              	.LVL42:
 872:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1111              		.loc 21 872 5 is_stmt 1 view .LVU218
 1112              		.loc 21 873 5 view .LVU219
 1113              		.loc 21 873 26 is_stmt 0 view .LVU220
 1114 0010 0A68     		ldr	r2, [r1]
 1115              	.LBB1000:
 874:Veno-Echo.cpp **** 
 875:Veno-Echo.cpp ****     if (!shift) //default control
 1116              		.loc 21 875 9 view .LVU221
 1117 0012 7648     		ldr	r0, .L76+12
 1118              	.LBE1000:
 873:Veno-Echo.cpp **** 
 1119              		.loc 21 873 26 view .LVU222
 1120 0014 0132     		adds	r2, r2, #1
 1121              	.LBB1073:
 1122              		.loc 21 875 5 view .LVU223
 1123 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1124              	.LBE1073:
 873:Veno-Echo.cpp **** 
 1125              		.loc 21 873 31 view .LVU224
 1126 0018 83FB0243 		smull	r4, r3, r3, r2
 1127 001c D417     		asrs	r4, r2, #31
 1128 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1129 0022 03EB4303 		add	r3, r3, r3, lsl #1
 1130 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
 1131              	.LBB1074:
 1132              	.LBB1001:
 876:Veno-Echo.cpp ****     {
 877:Veno-Echo.cpp ****         static float delayTimeL_new{};
 878:Veno-Echo.cpp ****         //udpate pickup
 879:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1133              		.loc 21 879 19 view .LVU225
 1134 002a 714A     		ldr	r2, .L76+16
 1135              	.LBE1001:
 1136              	.LBE1074:
 873:Veno-Echo.cpp **** 
 1137              		.loc 21 873 14 view .LVU226
 1138 002c 0B60     		str	r3, [r1]
 875:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 54


 1139              		.loc 21 875 5 is_stmt 1 view .LVU227
 1140              	.LBB1075:
 1141 002e 80BB     		cbnz	r0, .L44
 1142              	.LBB1020:
 877:Veno-Echo.cpp ****         //udpate pickup
 1143              		.loc 21 877 9 view .LVU228
 1144              		.loc 21 879 9 view .LVU229
 1145 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1146 0032 0029     		cmp	r1, #0
 1147 0034 38D0     		beq	.L45
 880:Veno-Echo.cpp ****         {
 881:Veno-Echo.cpp ****             lastShift = shift;
 1148              		.loc 21 881 13 view .LVU230
 882:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1149              		.loc 21 882 31 is_stmt 0 view .LVU231
 1150 0036 6F4C     		ldr	r4, .L76+20
 883:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1151              		.loc 21 883 28 view .LVU232
 1152 0038 6F49     		ldr	r1, .L76+24
 881:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1153              		.loc 21 881 23 view .LVU233
 1154 003a 1070     		strb	r0, [r2]
 882:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1155              		.loc 21 882 13 is_stmt 1 view .LVU234
 882:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1156              		.loc 21 882 31 is_stmt 0 view .LVU235
 1157 003c 2070     		strb	r0, [r4]
 1158              		.loc 21 883 13 is_stmt 1 view .LVU236
 1159              		.loc 21 883 28 is_stmt 0 view .LVU237
 1160 003e 81ED000A 		vstr.32	s0, [r1]
 1161              	.L46:
 884:Veno-Echo.cpp ****         } 
 885:Veno-Echo.cpp ****         else    //not a recent shift change
 886:Veno-Echo.cpp ****         {
 887:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 888:Veno-Echo.cpp ****             {
 889:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 890:Veno-Echo.cpp ****                 {
 891:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 892:Veno-Echo.cpp ****                 }
 893:Veno-Echo.cpp ****             }
 894:Veno-Echo.cpp ****         }
 895:Veno-Echo.cpp **** 
 896:Veno-Echo.cpp ****         float delayTimeL{};
 1162              		.loc 21 896 9 is_stmt 1 view .LVU238
 1163              	.LVL43:
 897:Veno-Echo.cpp **** 
 898:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1164              		.loc 21 898 9 view .LVU239
 899:Veno-Echo.cpp ****         {
 900:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 901:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 902:Veno-Echo.cpp ****         }
 903:Veno-Echo.cpp **** 
 904:Veno-Echo.cpp ****         else
 905:Veno-Echo.cpp ****         {
 906:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 55


 1165              		.loc 21 906 13 view .LVU240
 1166              	.LBB1002:
 1167              	.LBI1002:
 907:Veno-Echo.cpp ****         }
 908:Veno-Echo.cpp **** 
 909:Veno-Echo.cpp ****         if(counterL == 0)
 910:Veno-Echo.cpp ****         {
 911:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 912:Veno-Echo.cpp ****             {
 913:Veno-Echo.cpp ****             };
 914:Veno-Echo.cpp ****         }
 915:Veno-Echo.cpp **** 
 916:Veno-Echo.cpp ****     }   //not shift mode
 917:Veno-Echo.cpp **** 
 918:Veno-Echo.cpp ****     else    //shift mode
 919:Veno-Echo.cpp ****     {
 920:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 921:Veno-Echo.cpp **** 
 922:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 923:Veno-Echo.cpp ****         {
 924:Veno-Echo.cpp ****             lastShift = shift;
 925:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 926:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 927:Veno-Echo.cpp ****         }
 928:Veno-Echo.cpp **** 
 929:Veno-Echo.cpp ****         else    //not a recent shift change
 930:Veno-Echo.cpp ****         {
 931:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 932:Veno-Echo.cpp ****             {
 933:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 934:Veno-Echo.cpp ****                 {
 935:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 936:Veno-Echo.cpp ****                 }
 937:Veno-Echo.cpp ****             }
 938:Veno-Echo.cpp ****         }
 939:Veno-Echo.cpp **** 
 940:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 941:Veno-Echo.cpp ****         {
 942:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 943:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 944:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 945:Veno-Echo.cpp ****             //save setting:
 946:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 947:Veno-Echo.cpp ****             save_flag = true;
 948:Veno-Echo.cpp ****         }
 949:Veno-Echo.cpp ****     }
 950:Veno-Echo.cpp ****     
 951:Veno-Echo.cpp **** }
 952:Veno-Echo.cpp **** 
 953:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 954:Veno-Echo.cpp **** {
 955:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 956:Veno-Echo.cpp **** }
 957:Veno-Echo.cpp **** 
 958:Veno-Echo.cpp **** void Update_DelayTimeR()
 959:Veno-Echo.cpp **** {
 960:Veno-Echo.cpp ****     static bool lastShift{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 56


 961:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 962:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 963:Veno-Echo.cpp ****     
 964:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 965:Veno-Echo.cpp **** 
 966:Veno-Echo.cpp ****     //update pot values
 967:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 968:Veno-Echo.cpp **** 
 969:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 970:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 971:Veno-Echo.cpp ****     static int counterR{};
 972:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 973:Veno-Echo.cpp **** 
 974:Veno-Echo.cpp ****     if (!shift) //default control
 975:Veno-Echo.cpp ****     {
 976:Veno-Echo.cpp ****         static float delayTimeR_new{};
 977:Veno-Echo.cpp ****         //udpate pickup
 978:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 979:Veno-Echo.cpp ****         {
 980:Veno-Echo.cpp ****             lastShift = shift;
 981:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 982:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 983:Veno-Echo.cpp ****         } 
 984:Veno-Echo.cpp ****         else    //not a default shift change
 985:Veno-Echo.cpp ****         {
 986:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 987:Veno-Echo.cpp ****             {
 988:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 989:Veno-Echo.cpp ****                 {
 990:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 991:Veno-Echo.cpp ****                 }
 992:Veno-Echo.cpp ****             }
 993:Veno-Echo.cpp ****         }
 994:Veno-Echo.cpp **** 
 995:Veno-Echo.cpp ****         float delayTimeR{};
 996:Veno-Echo.cpp **** 
 997:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 998:Veno-Echo.cpp ****         {
 999:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
1000:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
1001:Veno-Echo.cpp ****         }
1002:Veno-Echo.cpp **** 
1003:Veno-Echo.cpp ****         else
1004:Veno-Echo.cpp ****         {
1005:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
1006:Veno-Echo.cpp ****         }
1007:Veno-Echo.cpp **** 
1008:Veno-Echo.cpp ****         if(counterR == 0)
1009:Veno-Echo.cpp ****         {
1010:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
1011:Veno-Echo.cpp ****             {
1012:Veno-Echo.cpp ****             };
1013:Veno-Echo.cpp **** 
1014:Veno-Echo.cpp ****         }
1015:Veno-Echo.cpp ****     }   //not shift mode
1016:Veno-Echo.cpp **** 
1017:Veno-Echo.cpp ****     else    //shift mode
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 57


1018:Veno-Echo.cpp ****     {
1019:Veno-Echo.cpp **** 
1020:Veno-Echo.cpp ****         static float tapRatio_new{};
1021:Veno-Echo.cpp **** 
1022:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1023:Veno-Echo.cpp ****         {
1024:Veno-Echo.cpp ****             lastShift = shift;
1025:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
1026:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
1027:Veno-Echo.cpp ****         }
1028:Veno-Echo.cpp **** 
1029:Veno-Echo.cpp ****         else    //not a recent shift change
1030:Veno-Echo.cpp ****         {
1031:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
1032:Veno-Echo.cpp ****             {
1033:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
1034:Veno-Echo.cpp ****                 {
1035:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
1036:Veno-Echo.cpp ****                 }
1037:Veno-Echo.cpp ****             }
1038:Veno-Echo.cpp ****         }
1039:Veno-Echo.cpp **** 
1040:Veno-Echo.cpp ****         if(tapRatio_pickup)
1041:Veno-Echo.cpp ****         {
1042:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1043:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1044:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1045:Veno-Echo.cpp ****             //save setting:
1046:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1047:Veno-Echo.cpp ****             save_flag = true;
1048:Veno-Echo.cpp ****         }
1049:Veno-Echo.cpp ****     }
1050:Veno-Echo.cpp ****     
1051:Veno-Echo.cpp **** }
1052:Veno-Echo.cpp **** void Update_feedbackL_CV()
1053:Veno-Echo.cpp **** {
1054:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
1055:Veno-Echo.cpp **** }
1056:Veno-Echo.cpp **** void Update_feedbackL()
1057:Veno-Echo.cpp **** {
1058:Veno-Echo.cpp ****     static bool lastShift{};
1059:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
1060:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
1061:Veno-Echo.cpp **** 
1062:Veno-Echo.cpp ****     static float feedbackL_Last{};
1063:Veno-Echo.cpp **** 
1064:Veno-Echo.cpp ****     //get pot values:
1065:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1066:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
1067:Veno-Echo.cpp **** 
1068:Veno-Echo.cpp ****     if (!shift) //default controls
1069:Veno-Echo.cpp ****     {   
1070:Veno-Echo.cpp ****         static float feedbackL_new{};
1071:Veno-Echo.cpp ****         //update pickup
1072:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1073:Veno-Echo.cpp ****         {
1074:Veno-Echo.cpp ****             lastShift = shift;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 58


1075:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1076:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1077:Veno-Echo.cpp ****         } 
1078:Veno-Echo.cpp ****         else    //not a default shift change
1079:Veno-Echo.cpp ****         {
1080:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1081:Veno-Echo.cpp ****             {
1082:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1083:Veno-Echo.cpp ****                 {
1084:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1085:Veno-Echo.cpp ****                 }
1086:Veno-Echo.cpp ****             }
1087:Veno-Echo.cpp ****         }
1088:Veno-Echo.cpp **** 
1089:Veno-Echo.cpp ****         float feedbackL_combo{};
1090:Veno-Echo.cpp **** 
1091:Veno-Echo.cpp ****         if(feedbackL_pickup)
1092:Veno-Echo.cpp ****         {
1093:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1094:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1095:Veno-Echo.cpp ****         }
1096:Veno-Echo.cpp **** 
1097:Veno-Echo.cpp ****         else
1098:Veno-Echo.cpp ****         {
1099:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1100:Veno-Echo.cpp ****         }
1101:Veno-Echo.cpp ****   
1102:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1103:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1104:Veno-Echo.cpp ****     }
1105:Veno-Echo.cpp ****     else    //alternate controls
1106:Veno-Echo.cpp ****     {
1107:Veno-Echo.cpp ****         static float HPCutoff_new{};
1108:Veno-Echo.cpp **** 
1109:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1110:Veno-Echo.cpp ****         {
1111:Veno-Echo.cpp ****             lastShift = shift;
1112:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1113:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1114:Veno-Echo.cpp ****         }
1115:Veno-Echo.cpp **** 
1116:Veno-Echo.cpp ****         else    //not a recent shift change
1117:Veno-Echo.cpp ****         {
1118:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1119:Veno-Echo.cpp ****             {
1120:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1121:Veno-Echo.cpp ****                 {
1122:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1123:Veno-Echo.cpp ****                 }
1124:Veno-Echo.cpp ****             }
1125:Veno-Echo.cpp ****         }
1126:Veno-Echo.cpp **** 
1127:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1128:Veno-Echo.cpp ****         {
1129:Veno-Echo.cpp ****             float HPCutoff{};
1130:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1131:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 59


1132:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1133:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1134:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1135:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1136:Veno-Echo.cpp ****             save_flag = true;
1137:Veno-Echo.cpp ****         }
1138:Veno-Echo.cpp ****     }
1139:Veno-Echo.cpp **** }
1140:Veno-Echo.cpp **** 
1141:Veno-Echo.cpp **** void Update_feedbackR_CV()
1142:Veno-Echo.cpp **** {
1143:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1144:Veno-Echo.cpp **** }
1145:Veno-Echo.cpp **** 
1146:Veno-Echo.cpp **** void Update_feedbackR()
1147:Veno-Echo.cpp **** {
1148:Veno-Echo.cpp ****     static bool lastShift{};
1149:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1150:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1151:Veno-Echo.cpp **** 
1152:Veno-Echo.cpp ****     static float feedbackR_Last{};
1153:Veno-Echo.cpp **** 
1154:Veno-Echo.cpp ****     //get pot values:
1155:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1156:Veno-Echo.cpp **** 
1157:Veno-Echo.cpp ****     if (!shift) //default controls
1158:Veno-Echo.cpp ****     {   
1159:Veno-Echo.cpp ****         static float feedbackR_new{};
1160:Veno-Echo.cpp ****         //update pickup
1161:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1162:Veno-Echo.cpp ****         {
1163:Veno-Echo.cpp ****             lastShift = shift;
1164:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1165:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1166:Veno-Echo.cpp ****         } 
1167:Veno-Echo.cpp ****         else    //not a recent shift change
1168:Veno-Echo.cpp ****         {
1169:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1170:Veno-Echo.cpp ****             {
1171:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1172:Veno-Echo.cpp ****                 {
1173:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1174:Veno-Echo.cpp ****                 }
1175:Veno-Echo.cpp ****             }
1176:Veno-Echo.cpp ****         }
1177:Veno-Echo.cpp **** 
1178:Veno-Echo.cpp ****         float feedbackR_combo{};
1179:Veno-Echo.cpp ****         
1180:Veno-Echo.cpp ****         if(feedbackR_pickup)
1181:Veno-Echo.cpp ****         {
1182:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1183:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1184:Veno-Echo.cpp ****         }
1185:Veno-Echo.cpp **** 
1186:Veno-Echo.cpp ****         else
1187:Veno-Echo.cpp ****         {
1188:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 60


1189:Veno-Echo.cpp ****         }
1190:Veno-Echo.cpp **** 
1191:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1192:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1193:Veno-Echo.cpp ****     }
1194:Veno-Echo.cpp ****     else    //alternate controls
1195:Veno-Echo.cpp ****     {
1196:Veno-Echo.cpp **** 
1197:Veno-Echo.cpp ****         static float LPCutoff_new{};
1198:Veno-Echo.cpp **** 
1199:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1200:Veno-Echo.cpp ****         {
1201:Veno-Echo.cpp ****             lastShift = shift;
1202:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1203:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1204:Veno-Echo.cpp ****         }
1205:Veno-Echo.cpp **** 
1206:Veno-Echo.cpp ****         else    //not a recent shift change
1207:Veno-Echo.cpp ****         {
1208:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1209:Veno-Echo.cpp ****             {
1210:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1211:Veno-Echo.cpp ****                 {
1212:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1213:Veno-Echo.cpp ****                 }
1214:Veno-Echo.cpp ****             }
1215:Veno-Echo.cpp ****         }
1216:Veno-Echo.cpp **** 
1217:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1218:Veno-Echo.cpp ****         {
1219:Veno-Echo.cpp ****             float LPCutoff{};
1220:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1221:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1222:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1223:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1224:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1225:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1226:Veno-Echo.cpp ****             save_flag = true;
1227:Veno-Echo.cpp ****         }
1228:Veno-Echo.cpp ****     }
1229:Veno-Echo.cpp **** }
1230:Veno-Echo.cpp **** 
1231:Veno-Echo.cpp **** void Update_drywet_CV()
1232:Veno-Echo.cpp **** {
1233:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1234:Veno-Echo.cpp **** }
1235:Veno-Echo.cpp **** 
1236:Veno-Echo.cpp **** void Update_drywet()
1237:Veno-Echo.cpp **** {
1238:Veno-Echo.cpp ****     static bool lastShift{};
1239:Veno-Echo.cpp ****     static bool drywet_pickup{};
1240:Veno-Echo.cpp ****     static bool Res_pickup{};
1241:Veno-Echo.cpp **** 
1242:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1243:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1244:Veno-Echo.cpp **** 
1245:Veno-Echo.cpp ****     //get pot values:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 61


1246:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1247:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1248:Veno-Echo.cpp **** 
1249:Veno-Echo.cpp ****     if (!shift) //default controls
1250:Veno-Echo.cpp ****     {   
1251:Veno-Echo.cpp **** 
1252:Veno-Echo.cpp ****         static float drywet_new{};
1253:Veno-Echo.cpp **** 
1254:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1255:Veno-Echo.cpp ****         {
1256:Veno-Echo.cpp ****             lastShift = shift;
1257:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1258:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1259:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1260:Veno-Echo.cpp ****         } 
1261:Veno-Echo.cpp ****         
1262:Veno-Echo.cpp ****         else    //not a recent shift change
1263:Veno-Echo.cpp ****         {
1264:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1265:Veno-Echo.cpp ****             {
1266:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1267:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1268:Veno-Echo.cpp ****                 {
1269:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1270:Veno-Echo.cpp ****                 }
1271:Veno-Echo.cpp ****             }
1272:Veno-Echo.cpp **** 
1273:Veno-Echo.cpp ****         }
1274:Veno-Echo.cpp ****         
1275:Veno-Echo.cpp ****         float drywetcombo{};
1276:Veno-Echo.cpp **** 
1277:Veno-Echo.cpp ****         if (drywet_pickup)
1278:Veno-Echo.cpp ****         {
1279:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1280:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1281:Veno-Echo.cpp ****         }
1282:Veno-Echo.cpp **** 
1283:Veno-Echo.cpp ****         else
1284:Veno-Echo.cpp ****         {
1285:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1286:Veno-Echo.cpp ****         }
1287:Veno-Echo.cpp **** 
1288:Veno-Echo.cpp ****         float drywetTarget{};
1289:Veno-Echo.cpp **** 
1290:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1291:Veno-Echo.cpp ****         {
1292:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1293:Veno-Echo.cpp ****         }
1294:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1295:Veno-Echo.cpp ****         {
1296:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1297:Veno-Echo.cpp ****         }
1298:Veno-Echo.cpp ****         else
1299:Veno-Echo.cpp ****         {
1300:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1301:Veno-Echo.cpp ****         }
1302:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 62


1303:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1304:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1305:Veno-Echo.cpp ****     }
1306:Veno-Echo.cpp ****     else    //alternate controls
1307:Veno-Echo.cpp ****     {
1308:Veno-Echo.cpp ****         static float Res_new{};
1309:Veno-Echo.cpp **** 
1310:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1311:Veno-Echo.cpp ****         {
1312:Veno-Echo.cpp ****             lastShift = shift;
1313:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1314:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1315:Veno-Echo.cpp ****         }
1316:Veno-Echo.cpp **** 
1317:Veno-Echo.cpp ****         else    //not a recent shift change
1318:Veno-Echo.cpp ****         {
1319:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1320:Veno-Echo.cpp ****             {
1321:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1322:Veno-Echo.cpp ****                 {
1323:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1324:Veno-Echo.cpp ****                 }
1325:Veno-Echo.cpp ****             }
1326:Veno-Echo.cpp ****         }
1327:Veno-Echo.cpp **** 
1328:Veno-Echo.cpp ****         if(Res_pickup)
1329:Veno-Echo.cpp ****         {
1330:Veno-Echo.cpp ****             float Res{};
1331:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1332:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1333:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1334:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1335:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1336:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1337:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1338:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1339:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1340:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1341:Veno-Echo.cpp ****             save_flag = true;
1342:Veno-Echo.cpp ****         }
1343:Veno-Echo.cpp ****     }
1344:Veno-Echo.cpp **** }
1345:Veno-Echo.cpp **** 
1346:Veno-Echo.cpp **** void Update_width_CV()
1347:Veno-Echo.cpp **** {
1348:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1349:Veno-Echo.cpp **** }
1350:Veno-Echo.cpp **** 
1351:Veno-Echo.cpp **** void Update_width()
1352:Veno-Echo.cpp **** {
1353:Veno-Echo.cpp ****     static bool lastShift{};
1354:Veno-Echo.cpp ****     static bool width_pickup{};
1355:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1356:Veno-Echo.cpp **** 
1357:Veno-Echo.cpp ****     static float width_Last{};
1358:Veno-Echo.cpp **** 
1359:Veno-Echo.cpp ****     //get pot values:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 63


1360:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1361:Veno-Echo.cpp **** 
1362:Veno-Echo.cpp ****     if (!shift) //default controls
1363:Veno-Echo.cpp ****     {   
1364:Veno-Echo.cpp ****         static float width_new{};
1365:Veno-Echo.cpp ****         //update pickup
1366:Veno-Echo.cpp ****         if (shift != lastShift)
1367:Veno-Echo.cpp ****         {
1368:Veno-Echo.cpp ****             lastShift = shift;
1369:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1370:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1371:Veno-Echo.cpp ****         }
1372:Veno-Echo.cpp **** 
1373:Veno-Echo.cpp ****         else
1374:Veno-Echo.cpp ****         {
1375:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1376:Veno-Echo.cpp ****             {
1377:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1378:Veno-Echo.cpp ****                 {
1379:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1380:Veno-Echo.cpp ****                 }
1381:Veno-Echo.cpp ****             }
1382:Veno-Echo.cpp **** 
1383:Veno-Echo.cpp ****         }
1384:Veno-Echo.cpp **** 
1385:Veno-Echo.cpp ****         float widthTarget{};
1386:Veno-Echo.cpp **** 
1387:Veno-Echo.cpp ****         if(width_pickup)
1388:Veno-Echo.cpp ****         {
1389:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1390:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1391:Veno-Echo.cpp ****         }
1392:Veno-Echo.cpp **** 
1393:Veno-Echo.cpp ****         else
1394:Veno-Echo.cpp ****         {        
1395:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1396:Veno-Echo.cpp ****         }
1397:Veno-Echo.cpp ****             
1398:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1399:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1400:Veno-Echo.cpp ****     }
1401:Veno-Echo.cpp **** 
1402:Veno-Echo.cpp ****     else    //alternate controls
1403:Veno-Echo.cpp ****     {
1404:Veno-Echo.cpp ****         static float ModDepth_new{};
1405:Veno-Echo.cpp **** 
1406:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1407:Veno-Echo.cpp ****         {
1408:Veno-Echo.cpp ****             lastShift = shift;
1409:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1410:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1411:Veno-Echo.cpp ****         }
1412:Veno-Echo.cpp **** 
1413:Veno-Echo.cpp ****         else    //not a recent shift change
1414:Veno-Echo.cpp ****         {
1415:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1416:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 64


1417:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1418:Veno-Echo.cpp ****                 {
1419:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1420:Veno-Echo.cpp ****                 }
1421:Veno-Echo.cpp ****             }
1422:Veno-Echo.cpp ****         }
1423:Veno-Echo.cpp **** 
1424:Veno-Echo.cpp ****         if(ModDepth_pickup)
1425:Veno-Echo.cpp ****         {
1426:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1427:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1428:Veno-Echo.cpp ****             save_flag = true;
1429:Veno-Echo.cpp ****         }
1430:Veno-Echo.cpp ****     }
1431:Veno-Echo.cpp **** }
1432:Veno-Echo.cpp **** 
1433:Veno-Echo.cpp **** void Update_crossfeedback()
1434:Veno-Echo.cpp **** {
1435:Veno-Echo.cpp ****     static bool lastShift{};
1436:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1437:Veno-Echo.cpp ****     static bool modRate_pickup{};
1438:Veno-Echo.cpp **** 
1439:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1440:Veno-Echo.cpp **** 
1441:Veno-Echo.cpp ****     //get pot values:
1442:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1443:Veno-Echo.cpp **** 
1444:Veno-Echo.cpp ****     if (!shift) //default controls
1445:Veno-Echo.cpp ****     {   
1446:Veno-Echo.cpp ****         static float crossfeedback_new{};
1447:Veno-Echo.cpp ****         //update pickup
1448:Veno-Echo.cpp ****         if (shift != lastShift)
1449:Veno-Echo.cpp ****         {
1450:Veno-Echo.cpp ****             lastShift = shift;
1451:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1452:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1453:Veno-Echo.cpp ****         }
1454:Veno-Echo.cpp **** 
1455:Veno-Echo.cpp ****         else
1456:Veno-Echo.cpp ****         {
1457:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1458:Veno-Echo.cpp ****             {
1459:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1460:Veno-Echo.cpp ****                 {
1461:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1462:Veno-Echo.cpp ****                 }
1463:Veno-Echo.cpp ****             }
1464:Veno-Echo.cpp ****         }
1465:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1466:Veno-Echo.cpp **** 
1467:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1468:Veno-Echo.cpp ****         {
1469:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1470:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1471:Veno-Echo.cpp ****         }
1472:Veno-Echo.cpp **** 
1473:Veno-Echo.cpp ****         else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 65


1474:Veno-Echo.cpp ****         {
1475:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1476:Veno-Echo.cpp ****         }
1477:Veno-Echo.cpp **** 
1478:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1479:Veno-Echo.cpp ****     }
1480:Veno-Echo.cpp ****     else    //alternate controls
1481:Veno-Echo.cpp ****     {
1482:Veno-Echo.cpp ****         static float modRate_new{};
1483:Veno-Echo.cpp **** 
1484:Veno-Echo.cpp ****         if (shift != lastShift)
1485:Veno-Echo.cpp ****         {
1486:Veno-Echo.cpp ****             lastShift = shift;
1487:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1488:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1489:Veno-Echo.cpp ****         }
1490:Veno-Echo.cpp **** 
1491:Veno-Echo.cpp ****         else
1492:Veno-Echo.cpp ****         {
1493:Veno-Echo.cpp ****             if(!modRate_pickup)
1494:Veno-Echo.cpp ****             {
1495:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1496:Veno-Echo.cpp ****                 {
1497:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1498:Veno-Echo.cpp ****                 }
1499:Veno-Echo.cpp ****             }
1500:Veno-Echo.cpp ****         }
1501:Veno-Echo.cpp **** 
1502:Veno-Echo.cpp ****         if(modRate_pickup)
1503:Veno-Echo.cpp ****         {
1504:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1505:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1506:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1507:Veno-Echo.cpp ****             save_flag = true;
1508:Veno-Echo.cpp ****         }
1509:Veno-Echo.cpp ****     }
1510:Veno-Echo.cpp **** }
1511:Veno-Echo.cpp **** 
1512:Veno-Echo.cpp **** void Update_filterXfade()
1513:Veno-Echo.cpp **** {
1514:Veno-Echo.cpp ****     static bool lastShift{};
1515:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1516:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1517:Veno-Echo.cpp **** 
1518:Veno-Echo.cpp ****     static float filterXfade_last{};
1519:Veno-Echo.cpp **** 
1520:Veno-Echo.cpp ****     //get pot values:
1521:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1522:Veno-Echo.cpp **** 
1523:Veno-Echo.cpp ****     if (!shift) //default controls
1524:Veno-Echo.cpp ****     {   
1525:Veno-Echo.cpp ****         static float filterXfade_new{};
1526:Veno-Echo.cpp ****         //update pickup
1527:Veno-Echo.cpp ****         if (shift != lastShift)
1528:Veno-Echo.cpp ****         {
1529:Veno-Echo.cpp ****             lastShift = shift;
1530:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 66


1531:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1532:Veno-Echo.cpp ****         }
1533:Veno-Echo.cpp **** 
1534:Veno-Echo.cpp ****         else
1535:Veno-Echo.cpp ****         {
1536:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1537:Veno-Echo.cpp ****             {
1538:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1539:Veno-Echo.cpp ****                 {
1540:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1541:Veno-Echo.cpp ****                 }
1542:Veno-Echo.cpp ****             }
1543:Veno-Echo.cpp ****         }
1544:Veno-Echo.cpp **** 
1545:Veno-Echo.cpp ****         float filterXfadeTarget{};
1546:Veno-Echo.cpp **** 
1547:Veno-Echo.cpp ****         if(filterXfade_pickup)
1548:Veno-Echo.cpp ****         {
1549:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1550:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1551:Veno-Echo.cpp ****         }
1552:Veno-Echo.cpp **** 
1553:Veno-Echo.cpp ****         else
1554:Veno-Echo.cpp ****         {
1555:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1556:Veno-Echo.cpp ****         }
1557:Veno-Echo.cpp **** 
1558:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1559:Veno-Echo.cpp ****     }
1560:Veno-Echo.cpp ****     else    //alternate controls
1561:Veno-Echo.cpp ****     {
1562:Veno-Echo.cpp **** 
1563:Veno-Echo.cpp ****         static float PostFilters_new{};
1564:Veno-Echo.cpp **** 
1565:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1566:Veno-Echo.cpp ****         {
1567:Veno-Echo.cpp ****             lastShift = shift;
1568:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1569:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1570:Veno-Echo.cpp ****         }
1571:Veno-Echo.cpp **** 
1572:Veno-Echo.cpp ****         else    //not a recent shift change
1573:Veno-Echo.cpp ****         {
1574:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1575:Veno-Echo.cpp ****             {
1576:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1577:Veno-Echo.cpp ****                 {
1578:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1579:Veno-Echo.cpp ****                 }
1580:Veno-Echo.cpp ****             }
1581:Veno-Echo.cpp ****         }
1582:Veno-Echo.cpp ****         
1583:Veno-Echo.cpp ****         if(PostFilters_pickup)
1584:Veno-Echo.cpp ****         {
1585:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1586:Veno-Echo.cpp ****             {
1587:Veno-Echo.cpp ****                 PostFilters = false;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 67


1588:Veno-Echo.cpp ****             }
1589:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1590:Veno-Echo.cpp ****             {
1591:Veno-Echo.cpp ****                 PostFilters = true;
1592:Veno-Echo.cpp ****             }
1593:Veno-Echo.cpp ****             else
1594:Veno-Echo.cpp ****             {
1595:Veno-Echo.cpp ****               //do nothing
1596:Veno-Echo.cpp ****             }
1597:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1598:Veno-Echo.cpp ****             save_flag = true;
1599:Veno-Echo.cpp ****         }  
1600:Veno-Echo.cpp ****     }
1601:Veno-Echo.cpp **** }
1602:Veno-Echo.cpp **** 
1603:Veno-Echo.cpp **** void GetModCV()
1604:Veno-Echo.cpp **** {
1605:Veno-Echo.cpp ****     //get modulation CV input
1606:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1607:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1608:Veno-Echo.cpp **** }
1609:Veno-Echo.cpp **** 
1610:Veno-Echo.cpp **** void Update_Mod()
1611:Veno-Echo.cpp **** {    
1612:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1613:Veno-Echo.cpp ****     static float modulation_CV{};
1614:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1615:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1616:Veno-Echo.cpp ****     //calculate InternalMod
1617:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1618:Veno-Echo.cpp ****     //apply modulation to delay lines
1619:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1620:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1621:Veno-Echo.cpp **** }
1622:Veno-Echo.cpp **** 
1623:Veno-Echo.cpp **** void UpdateClock() //called every sample
1624:Veno-Echo.cpp **** {
1625:Veno-Echo.cpp ****     static int divCounter{};
1626:Veno-Echo.cpp ****     //ClockIn.Debounce();
1627:Veno-Echo.cpp **** 
1628:Veno-Echo.cpp ****     //if clock in pulse received
1629:Veno-Echo.cpp ****     if (ClockIn.Trig())    
1630:Veno-Echo.cpp ****     {   
1631:Veno-Echo.cpp ****         //if clock in range
1632:Veno-Echo.cpp ****         if(BaseTempo.clock())
1633:Veno-Echo.cpp ****         {
1634:Veno-Echo.cpp ****             //update with new clock time
1635:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq (Hz)
1636:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
1637:Veno-Echo.cpp ****             save_flag = true;
1638:Veno-Echo.cpp ****         } 
1639:Veno-Echo.cpp ****         //clock time outside of range
1640:Veno-Echo.cpp ****         else
1641:Veno-Echo.cpp ****         {}
1642:Veno-Echo.cpp ****     }
1643:Veno-Echo.cpp **** }
1644:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 68


1645:Veno-Echo.cpp **** void Update_Buttons()
1646:Veno-Echo.cpp **** {  
1647:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1648:Veno-Echo.cpp ****     static uint32_t resetTime{};
1649:Veno-Echo.cpp ****     static int buttonstate{};
1650:Veno-Echo.cpp **** 
1651:Veno-Echo.cpp ****     Rev_L_sw.update();
1652:Veno-Echo.cpp ****     Rev_R_sw.update();
1653:Veno-Echo.cpp ****     LPF_sw.update();
1654:Veno-Echo.cpp ****     HPF_sw.update();
1655:Veno-Echo.cpp ****     Tap_Button.update();
1656:Veno-Echo.cpp **** 
1657:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1658:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1659:Veno-Echo.cpp ****     //TapButton.Debounce();
1660:Veno-Echo.cpp ****     Sync.Debounce();
1661:Veno-Echo.cpp ****     //ClockIn.Debounce();
1662:Veno-Echo.cpp ****     //gate inputs
1663:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1664:Veno-Echo.cpp ****     {
1665:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1666:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1667:Veno-Echo.cpp ****         {
1668:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1669:Veno-Echo.cpp ****         }
1670:Veno-Echo.cpp ****         else
1671:Veno-Echo.cpp ****         {
1672:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1673:Veno-Echo.cpp ****         }
1674:Veno-Echo.cpp ****         save_flag = true;
1675:Veno-Echo.cpp ****     }
1676:Veno-Echo.cpp **** 
1677:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1678:Veno-Echo.cpp ****     {
1679:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1680:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1681:Veno-Echo.cpp ****         {
1682:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1683:Veno-Echo.cpp ****         }
1684:Veno-Echo.cpp ****         else
1685:Veno-Echo.cpp ****         {
1686:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1687:Veno-Echo.cpp ****         }
1688:Veno-Echo.cpp ****         save_flag = true;
1689:Veno-Echo.cpp ****     }
1690:Veno-Echo.cpp **** 
1691:Veno-Echo.cpp ****     //buttons
1692:Veno-Echo.cpp **** 
1693:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1694:Veno-Echo.cpp ****     {
1695:Veno-Echo.cpp ****         buttonstate += 1;
1696:Veno-Echo.cpp ****         if (buttonstate == 3)
1697:Veno-Echo.cpp ****         {
1698:Veno-Echo.cpp ****             resetTime = System::GetNow();
1699:Veno-Echo.cpp ****         }
1700:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1701:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 69


1702:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1703:Veno-Echo.cpp ****         }
1704:Veno-Echo.cpp ****         else
1705:Veno-Echo.cpp ****         {
1706:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1707:Veno-Echo.cpp ****         }
1708:Veno-Echo.cpp ****         save_flag = true;
1709:Veno-Echo.cpp ****     }
1710:Veno-Echo.cpp **** 
1711:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1712:Veno-Echo.cpp ****     {
1713:Veno-Echo.cpp ****         buttonstate -= 1;
1714:Veno-Echo.cpp ****     }
1715:Veno-Echo.cpp **** 
1716:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1717:Veno-Echo.cpp ****     {
1718:Veno-Echo.cpp ****         buttonstate += 1;
1719:Veno-Echo.cpp ****         if (buttonstate == 3)
1720:Veno-Echo.cpp ****         {
1721:Veno-Echo.cpp ****             resetTime = System::GetNow();
1722:Veno-Echo.cpp ****         }
1723:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1724:Veno-Echo.cpp ****         {
1725:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1726:Veno-Echo.cpp ****         }
1727:Veno-Echo.cpp ****         else
1728:Veno-Echo.cpp ****         {
1729:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1730:Veno-Echo.cpp ****         }
1731:Veno-Echo.cpp ****         save_flag = true;
1732:Veno-Echo.cpp ****     }
1733:Veno-Echo.cpp **** 
1734:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1735:Veno-Echo.cpp ****     {
1736:Veno-Echo.cpp ****         buttonstate -= 1;
1737:Veno-Echo.cpp ****     }
1738:Veno-Echo.cpp **** 
1739:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1740:Veno-Echo.cpp ****     {
1741:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1742:Veno-Echo.cpp ****         {
1743:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1744:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
1745:Veno-Echo.cpp ****             save_flag = true;
1746:Veno-Echo.cpp ****         }
1747:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1748:Veno-Echo.cpp ****         
1749:Veno-Echo.cpp **** 
1750:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1751:Veno-Echo.cpp ****         buttonstate += 1;
1752:Veno-Echo.cpp ****         
1753:Veno-Echo.cpp ****         if (buttonstate == 3)
1754:Veno-Echo.cpp ****         {
1755:Veno-Echo.cpp ****             resetTime = System::GetNow();
1756:Veno-Echo.cpp ****         }
1757:Veno-Echo.cpp **** 
1758:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 70


1759:Veno-Echo.cpp **** 
1760:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1761:Veno-Echo.cpp ****     {
1762:Veno-Echo.cpp ****         shift = false;
1763:Veno-Echo.cpp ****         buttonstate -= 1;
1764:Veno-Echo.cpp ****         mute = false;
1765:Veno-Echo.cpp ****     }
1766:Veno-Echo.cpp **** 
1767:Veno-Echo.cpp ****     if (Tap_Button.getState())
1768:Veno-Echo.cpp ****     {
1769:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1770:Veno-Echo.cpp ****         {
1771:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1772:Veno-Echo.cpp ****         } 
1773:Veno-Echo.cpp ****     }
1774:Veno-Echo.cpp **** 
1775:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1776:Veno-Echo.cpp ****     {
1777:Veno-Echo.cpp **** 
1778:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1779:Veno-Echo.cpp ****             {
1780:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1781:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1782:Veno-Echo.cpp ****                 ResetAllLEDs();
1783:Veno-Echo.cpp ****                 //don't let reset or shift update
1784:Veno-Echo.cpp ****                 shift = false;
1785:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1786:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1787:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1788:Veno-Echo.cpp ****                 save_flag = true;
1789:Veno-Echo.cpp ****             }
1790:Veno-Echo.cpp ****     } 
1791:Veno-Echo.cpp **** 
1792:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1793:Veno-Echo.cpp **** }
1794:Veno-Echo.cpp **** 
1795:Veno-Echo.cpp **** void Update_DelayBaseTempo() // called every 15 samples
1796:Veno-Echo.cpp **** {
1797:Veno-Echo.cpp ****     uint32_t newTempo{BaseTempo.getDelayLength()};
1798:Veno-Echo.cpp ****     delayL.SetBaseTempo(newTempo);
1799:Veno-Echo.cpp ****     delayR.SetBaseTempo(newTempo);
1800:Veno-Echo.cpp **** }
1801:Veno-Echo.cpp **** 
1802:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1803:Veno-Echo.cpp **** {    
1804:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1805:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1806:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
1807:Veno-Echo.cpp ****     //DELAYR_DEBUG = delayR.GetDelayTime();
1808:Veno-Echo.cpp ****     //CLOCK_DEBUG = BaseTempo.getDelayLength();
1809:Veno-Echo.cpp **** }
1810:Veno-Echo.cpp **** 
1811:Veno-Echo.cpp **** void Update_BaseTempoLED()
1812:Veno-Echo.cpp **** {
1813:Veno-Echo.cpp ****     tempoLED_BASE.update();
1814:Veno-Echo.cpp **** 
1815:Veno-Echo.cpp ****     static int phaseCounter{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 71


1816:Veno-Echo.cpp **** 
1817:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1818:Veno-Echo.cpp ****     {
1819:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1820:Veno-Echo.cpp ****     }
1821:Veno-Echo.cpp **** 
1822:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1823:Veno-Echo.cpp ****     //update base phase for both delay lines
1824:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1825:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1826:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
1827:Veno-Echo.cpp **** }
1828:Veno-Echo.cpp **** 
1829:Veno-Echo.cpp **** 
1830:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1831:Veno-Echo.cpp **** {
1832:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1833:Veno-Echo.cpp ****     {
1834:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1835:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1836:Veno-Echo.cpp ****     }
1837:Veno-Echo.cpp ****     else
1838:Veno-Echo.cpp ****     {
1839:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1840:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1841:Veno-Echo.cpp ****     }
1842:Veno-Echo.cpp **** 
1843:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1844:Veno-Echo.cpp ****     {
1845:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1846:Veno-Echo.cpp ****     }
1847:Veno-Echo.cpp ****     else
1848:Veno-Echo.cpp ****     {
1849:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1850:Veno-Echo.cpp ****     }
1851:Veno-Echo.cpp **** 
1852:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1853:Veno-Echo.cpp ****     {
1854:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1855:Veno-Echo.cpp ****     }
1856:Veno-Echo.cpp ****     else
1857:Veno-Echo.cpp ****     {
1858:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1859:Veno-Echo.cpp ****     }
1860:Veno-Echo.cpp **** 
1861:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1862:Veno-Echo.cpp ****     {
1863:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1864:Veno-Echo.cpp ****     }
1865:Veno-Echo.cpp ****     else
1866:Veno-Echo.cpp ****     {
1867:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1868:Veno-Echo.cpp ****     }
1869:Veno-Echo.cpp **** 
1870:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1871:Veno-Echo.cpp ****     {
1872:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 72


1873:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1874:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1875:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1876:Veno-Echo.cpp ****     }
1877:Veno-Echo.cpp ****     else
1878:Veno-Echo.cpp ****     {
1879:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1880:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1881:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1882:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1883:Veno-Echo.cpp ****     }
1884:Veno-Echo.cpp ****     
1885:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1886:Veno-Echo.cpp ****     {
1887:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1888:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1889:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1890:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1891:Veno-Echo.cpp ****     }
1892:Veno-Echo.cpp ****     else
1893:Veno-Echo.cpp ****     {
1894:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1895:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1896:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1897:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1898:Veno-Echo.cpp **** 
1899:Veno-Echo.cpp ****     }
1900:Veno-Echo.cpp **** 
1901:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1902:Veno-Echo.cpp ****     {
1903:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1904:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1905:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1906:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1907:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1908:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1909:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1910:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1911:Veno-Echo.cpp ****     }
1912:Veno-Echo.cpp **** 
1913:Veno-Echo.cpp ****     else
1914:Veno-Echo.cpp ****     {
1915:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1916:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1917:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1918:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1919:Veno-Echo.cpp ****     }
1920:Veno-Echo.cpp **** 
1921:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1922:Veno-Echo.cpp ****     {
1923:Veno-Echo.cpp ****         PostFilters = false;
1924:Veno-Echo.cpp ****     }
1925:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1926:Veno-Echo.cpp ****     {
1927:Veno-Echo.cpp ****         PostFilters = true;
1928:Veno-Echo.cpp ****     }
1929:Veno-Echo.cpp ****     else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 73


1930:Veno-Echo.cpp ****     {
1931:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1932:Veno-Echo.cpp ****     }
1933:Veno-Echo.cpp **** 
1934:Veno-Echo.cpp ****     //if between min and max tap length
1935:Veno-Echo.cpp ****     if( (setting.tapLength >= static_cast<float> (mintap)) 
1936:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
1937:Veno-Echo.cpp ****     {
1938:Veno-Echo.cpp ****         BaseTempo.setTapLength(setting.tapLength);
1939:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1940:Veno-Echo.cpp ****     }
1941:Veno-Echo.cpp **** 
1942:Veno-Echo.cpp ****     else
1943:Veno-Echo.cpp ****     {
1944:Veno-Echo.cpp ****         BaseTempo.setTapLength(defaultAltControls.tapLength);
1945:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1946:Veno-Echo.cpp ****     }
1947:Veno-Echo.cpp **** 
1948:Veno-Echo.cpp ****     if((setting.L_Rev > 0.49f)) //if more than half
1949:Veno-Echo.cpp ****     {
1950:Veno-Echo.cpp ****         Rev_L_sw.turnON();
1951:Veno-Echo.cpp ****     }
1952:Veno-Echo.cpp ****     else    //default OFF
1953:Veno-Echo.cpp ****     {
1954:Veno-Echo.cpp ****         Rev_L_sw.turnOFF();
1955:Veno-Echo.cpp ****     }
1956:Veno-Echo.cpp **** 
1957:Veno-Echo.cpp ****     if((setting.R_Rev > 0.49f)) //if more than half
1958:Veno-Echo.cpp ****     {
1959:Veno-Echo.cpp ****         Rev_R_sw.turnON();
1960:Veno-Echo.cpp ****     }
1961:Veno-Echo.cpp ****     else    //default OFF
1962:Veno-Echo.cpp ****     {
1963:Veno-Echo.cpp ****         Rev_R_sw.turnOFF();
1964:Veno-Echo.cpp ****     }
1965:Veno-Echo.cpp **** 
1966:Veno-Echo.cpp **** }
1967:Veno-Echo.cpp **** 
1968:Veno-Echo.cpp **** void TurnOnAllLEDs()
1969:Veno-Echo.cpp **** {
1970:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1971:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1972:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1973:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1974:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1975:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1976:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1977:Veno-Echo.cpp **** }
1978:Veno-Echo.cpp **** 
1979:Veno-Echo.cpp **** void ResetAllLEDs()
1980:Veno-Echo.cpp **** {
1981:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1982:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1983:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1984:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1985:Veno-Echo.cpp ****     {
1986:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 74


1987:Veno-Echo.cpp ****     }
1988:Veno-Echo.cpp ****     else
1989:Veno-Echo.cpp ****     {
1990:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1991:Veno-Echo.cpp ****     }
1992:Veno-Echo.cpp **** 
1993:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1994:Veno-Echo.cpp ****     {
1995:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1996:Veno-Echo.cpp ****     }
1997:Veno-Echo.cpp ****     else
1998:Veno-Echo.cpp ****     {
1999:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
2000:Veno-Echo.cpp ****     }
2001:Veno-Echo.cpp ****     
2002:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
2003:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
2004:Veno-Echo.cpp **** }
2005:Veno-Echo.cpp **** 
2006:Veno-Echo.cpp **** float HardLimit(float input, float limit)
2007:Veno-Echo.cpp **** {
2008:Veno-Echo.cpp ****     float returnval{};
2009:Veno-Echo.cpp ****     if (input > limit)
2010:Veno-Echo.cpp ****         returnval = limit;
2011:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2012:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2013:Veno-Echo.cpp ****     else
2014:Veno-Echo.cpp ****         returnval = input;
2015:Veno-Echo.cpp **** 
2016:Veno-Echo.cpp ****     return returnval;   
2017:Veno-Echo.cpp **** }
2018:Veno-Echo.cpp **** 
2019:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1168              		.loc 21 2019 7 view .LVU241
 1169              	.LBB1003:
2020:Veno-Echo.cpp **** {
2021:Veno-Echo.cpp ****     float output{};
 1170              		.loc 21 2021 5 view .LVU242
2022:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1171              		.loc 21 2022 5 view .LVU243
 1172              	.LBE1003:
 1173              	.LBE1002:
 906:Veno-Echo.cpp ****         }
 1174              		.loc 21 906 36 is_stmt 0 view .LVU244
 1175 0042 6E49     		ldr	r1, .L76+28
 1176              	.LBB1007:
 1177              	.LBB1004:
 1178              		.loc 21 2022 39 view .LVU245
 1179 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1180              		.loc 21 2022 49 view .LVU246
 1181 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1182              	.LBE1004:
 1183              	.LBE1007:
 906:Veno-Echo.cpp ****         }
 1184              		.loc 21 906 36 view .LVU247
 1185 004c 6C4A     		ldr	r2, .L76+32
 1186              	.LBB1008:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 75


 1187              	.LBB1005:
 1188              		.loc 21 2022 39 view .LVU248
 1189 004e 91ED007A 		vldr.32	s14, [r1]
 1190              		.loc 21 2022 12 view .LVU249
 1191 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1192 0056 D2ED007A 		vldr.32	s15, [r2]
 1193              		.loc 21 2022 39 view .LVU250
 1194 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1195              		.loc 21 2022 49 view .LVU251
 1196 005e 37EE657A 		vsub.f32	s14, s14, s11
 1197              		.loc 21 2022 12 view .LVU252
 1198 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1199              	.LVL44:
2023:Veno-Echo.cpp **** 
2024:Veno-Echo.cpp ****     if(output < 0.0f)
 1200              		.loc 21 2024 5 is_stmt 1 view .LVU253
 1201 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1202 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1203 006e 00F1B180 		bmi	.L74
2025:Veno-Echo.cpp ****     {
2026:Veno-Echo.cpp ****         output = 0.0f;
2027:Veno-Echo.cpp ****     }
2028:Veno-Echo.cpp **** 
2029:Veno-Echo.cpp ****     if(output > 1.0f)
 1204              		.loc 21 2029 5 view .LVU254
2030:Veno-Echo.cpp ****     {
2031:Veno-Echo.cpp ****         output = 1.0f;
 1205              		.loc 21 2031 16 is_stmt 0 view .LVU255
 1206 0072 F4EE667A 		vcmp.f32	s15, s13
 1207 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1208 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1209              	.LVL45:
 1210              	.L51:
 1211              		.loc 21 2031 16 view .LVU256
 1212              	.LBE1005:
 1213              	.LBE1008:
 909:Veno-Echo.cpp ****         {
 1214              		.loc 21 909 9 is_stmt 1 view .LVU257
 1215 007e 93B9     		cbnz	r3, .L43
 911:Veno-Echo.cpp ****             {
 1216              		.loc 21 911 13 view .LVU258
 911:Veno-Echo.cpp ****             {
 1217              		.loc 21 911 35 is_stmt 0 view .LVU259
 1218 0080 604B     		ldr	r3, .L76+36
 1219 0082 B0EE670A 		vmov.f32	s0, s15
 1220              	.LVL46:
 911:Veno-Echo.cpp ****             {
 1221              		.loc 21 911 35 view .LVU260
 1222 0086 6048     		ldr	r0, .L76+40
 1223 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1224              	.LBE1020:
 1225              	.LBE1075:
 951:Veno-Echo.cpp **** 
 1226              		.loc 21 951 1 view .LVU261
 1227 008a BDE81040 		pop	{r4, lr}
 1228              		.cfi_remember_state
 1229              		.cfi_restore 14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 76


 1230              		.cfi_restore 4
 1231              		.cfi_def_cfa_offset 0
 1232              	.LBB1076:
 1233              	.LBB1021:
 911:Veno-Echo.cpp ****             {
 1234              		.loc 21 911 35 view .LVU262
 1235 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1236              	.LVL47:
 1237              	.L44:
 1238              		.cfi_restore_state
 911:Veno-Echo.cpp ****             {
 1239              		.loc 21 911 35 view .LVU263
 1240              	.LBE1021:
 1241              	.LBB1022:
 920:Veno-Echo.cpp **** 
 1242              		.loc 21 920 9 is_stmt 1 view .LVU264
 922:Veno-Echo.cpp ****         {
 1243              		.loc 21 922 9 view .LVU265
 1244 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1245 0094 002B     		cmp	r3, #0
 1246 0096 3CD1     		bne	.L54
 924:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1247              		.loc 21 924 13 view .LVU266
 924:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1248              		.loc 21 924 23 is_stmt 0 view .LVU267
 1249 0098 0124     		movs	r4, #1
 925:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1250              		.loc 21 925 34 view .LVU268
 1251 009a 5C48     		ldr	r0, .L76+44
 926:Veno-Echo.cpp ****         }
 1252              		.loc 21 926 31 view .LVU269
 1253 009c 5C49     		ldr	r1, .L76+48
 924:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1254              		.loc 21 924 23 view .LVU270
 1255 009e 1470     		strb	r4, [r2]
 925:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1256              		.loc 21 925 13 is_stmt 1 view .LVU271
 925:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1257              		.loc 21 925 34 is_stmt 0 view .LVU272
 1258 00a0 0370     		strb	r3, [r0]
 926:Veno-Echo.cpp ****         }
 1259              		.loc 21 926 13 is_stmt 1 view .LVU273
 926:Veno-Echo.cpp ****         }
 1260              		.loc 21 926 31 is_stmt 0 view .LVU274
 1261 00a2 81ED000A 		vstr.32	s0, [r1]
 1262              	.L43:
 926:Veno-Echo.cpp ****         }
 1263              		.loc 21 926 31 view .LVU275
 1264              	.LBE1022:
 1265              	.LBE1076:
 951:Veno-Echo.cpp **** 
 1266              		.loc 21 951 1 view .LVU276
 1267 00a6 10BD     		pop	{r4, pc}
 1268              	.L45:
 1269              	.LBB1077:
 1270              	.LBB1070:
 887:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 77


 1271              		.loc 21 887 13 is_stmt 1 view .LVU277
 887:Veno-Echo.cpp ****             {
 1272              		.loc 21 887 16 is_stmt 0 view .LVU278
 1273 00a8 524A     		ldr	r2, .L76+20
 887:Veno-Echo.cpp ****             {
 1274              		.loc 21 887 13 view .LVU279
 1275 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1276 00ac 79B9     		cbnz	r1, .L47
 889:Veno-Echo.cpp ****                 {
 1277              		.loc 21 889 17 is_stmt 1 view .LVU280
 1278              	.LVL48:
 1279              	.LBB1009:
 1280              	.LBI1009:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1281              		.loc 22 75 3 view .LVU281
 1282              	.LBB1010:
 1283              		.loc 22 76 5 view .LVU282
 1284              		.loc 22 76 5 is_stmt 0 view .LVU283
 1285              	.LBE1010:
 1286              	.LBE1009:
 889:Veno-Echo.cpp ****                 {
 1287              		.loc 21 889 23 view .LVU284
 1288 00ae 5249     		ldr	r1, .L76+24
 889:Veno-Echo.cpp ****                 {
 1289              		.loc 21 889 17 view .LVU285
 1290 00b0 9FED587A 		vldr.32	s14, .L76+52
 889:Veno-Echo.cpp ****                 {
 1291              		.loc 21 889 23 view .LVU286
 1292 00b4 D1ED007A 		vldr.32	s15, [r1]
 1293 00b8 70EE677A 		vsub.f32	s15, s0, s15
 1294              	.LBB1012:
 1295              	.LBB1011:
 1296              		.loc 22 76 31 view .LVU287
 1297 00bc F0EEE77A 		vabs.f32	s15, s15
 1298              	.LBE1011:
 1299              	.LBE1012:
 889:Veno-Echo.cpp ****                 {
 1300              		.loc 21 889 17 view .LVU288
 1301 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1302 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1303 00c8 BBDD     		ble	.L46
 891:Veno-Echo.cpp ****                 }
 1304              		.loc 21 891 21 is_stmt 1 view .LVU289
 891:Veno-Echo.cpp ****                 }
 1305              		.loc 21 891 39 is_stmt 0 view .LVU290
 1306 00ca 0121     		movs	r1, #1
 1307 00cc 1170     		strb	r1, [r2]
 1308              	.L47:
 896:Veno-Echo.cpp **** 
 1309              		.loc 21 896 9 is_stmt 1 view .LVU291
 1310              	.LVL49:
 898:Veno-Echo.cpp ****         {
 1311              		.loc 21 898 9 view .LVU292
 900:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1312              		.loc 21 900 13 view .LVU293
 1313              	.LBB1013:
 1314              	.LBI1013:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 78


2019:Veno-Echo.cpp **** {
 1315              		.loc 21 2019 7 view .LVU294
 1316              	.LBB1014:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1317              		.loc 21 2021 5 view .LVU295
2022:Veno-Echo.cpp **** 
 1318              		.loc 21 2022 5 view .LVU296
 1319              	.LBE1014:
 1320              	.LBE1013:
 900:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1321              		.loc 21 900 36 is_stmt 0 view .LVU297
 1322 00ce 4B4A     		ldr	r2, .L76+28
 1323              	.LBB1017:
 1324              	.LBB1015:
2022:Veno-Echo.cpp **** 
 1325              		.loc 21 2022 39 view .LVU298
 1326 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
2022:Veno-Echo.cpp **** 
 1327              		.loc 21 2022 49 view .LVU299
 1328 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
2022:Veno-Echo.cpp **** 
 1329              		.loc 21 2022 39 view .LVU300
 1330 00d8 D2ED007A 		vldr.32	s15, [r2]
2022:Veno-Echo.cpp **** 
 1331              		.loc 21 2022 12 view .LVU301
 1332 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
2022:Veno-Echo.cpp **** 
 1333              		.loc 21 2022 39 view .LVU302
 1334 00e0 77EE677A 		vsub.f32	s15, s14, s15
2022:Veno-Echo.cpp **** 
 1335              		.loc 21 2022 49 view .LVU303
 1336 00e4 77EEC67A 		vsub.f32	s15, s15, s12
2022:Veno-Echo.cpp **** 
 1337              		.loc 21 2022 12 view .LVU304
 1338 00e8 B0EE406A 		vmov.f32	s12, s0
 1339 00ec A7EEA66A 		vfma.f32	s12, s15, s13
2024:Veno-Echo.cpp ****     {
 1340              		.loc 21 2024 5 view .LVU305
 1341 00f0 B5EEC06A 		vcmpe.f32	s12, #0
2022:Veno-Echo.cpp **** 
 1342              		.loc 21 2022 12 view .LVU306
 1343 00f4 F0EE467A 		vmov.f32	s15, s12
 1344              	.LVL50:
2024:Veno-Echo.cpp ****     {
 1345              		.loc 21 2024 5 is_stmt 1 view .LVU307
 1346 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1347 00fc 6DD4     		bmi	.L75
2029:Veno-Echo.cpp ****     {
 1348              		.loc 21 2029 5 view .LVU308
 1349              		.loc 21 2031 16 is_stmt 0 view .LVU309
 1350 00fe F4EE477A 		vcmp.f32	s15, s14
 1351 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1352 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1353              	.L49:
 1354              	.LVL51:
2032:Veno-Echo.cpp ****     }
2033:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 79


2034:Veno-Echo.cpp ****     return output;
 1355              		.loc 21 2034 5 is_stmt 1 view .LVU310
 1356              		.loc 21 2034 5 is_stmt 0 view .LVU311
 1357              	.LBE1015:
 1358              	.LBE1017:
 901:Veno-Echo.cpp ****         }
 1359              		.loc 21 901 13 is_stmt 1 view .LVU312
 901:Veno-Echo.cpp ****         }
 1360              		.loc 21 901 29 is_stmt 0 view .LVU313
 1361 010a 3D4A     		ldr	r2, .L76+32
 1362 010c 82ED000A 		vstr.32	s0, [r2]
 1363 0110 B5E7     		b	.L51
 1364              	.LVL52:
 1365              	.L54:
 901:Veno-Echo.cpp ****         }
 1366              		.loc 21 901 29 view .LVU314
 1367              	.LBE1070:
 1368              	.LBB1071:
 931:Veno-Echo.cpp ****             {
 1369              		.loc 21 931 13 is_stmt 1 view .LVU315
 931:Veno-Echo.cpp ****             {
 1370              		.loc 21 931 16 is_stmt 0 view .LVU316
 1371 0112 3E4B     		ldr	r3, .L76+44
 931:Veno-Echo.cpp ****             {
 1372              		.loc 21 931 13 view .LVU317
 1373 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1374 0116 7AB9     		cbnz	r2, .L55
 933:Veno-Echo.cpp ****                 {
 1375              		.loc 21 933 17 is_stmt 1 view .LVU318
 1376              	.LVL53:
 1377              	.LBB1023:
 1378              	.LBI1023:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1379              		.loc 22 75 3 view .LVU319
 1380              	.LBB1024:
 1381              		.loc 22 76 5 view .LVU320
 1382              		.loc 22 76 5 is_stmt 0 view .LVU321
 1383              	.LBE1024:
 1384              	.LBE1023:
 933:Veno-Echo.cpp ****                 {
 1385              		.loc 21 933 23 view .LVU322
 1386 0118 3D4A     		ldr	r2, .L76+48
 933:Veno-Echo.cpp ****                 {
 1387              		.loc 21 933 17 view .LVU323
 1388 011a 9FED3E7A 		vldr.32	s14, .L76+52
 933:Veno-Echo.cpp ****                 {
 1389              		.loc 21 933 23 view .LVU324
 1390 011e D2ED007A 		vldr.32	s15, [r2]
 1391 0122 70EE677A 		vsub.f32	s15, s0, s15
 1392              	.LBB1026:
 1393              	.LBB1025:
 1394              		.loc 22 76 31 view .LVU325
 1395 0126 F0EEE77A 		vabs.f32	s15, s15
 1396              	.LBE1025:
 1397              	.LBE1026:
 933:Veno-Echo.cpp ****                 {
 1398              		.loc 21 933 17 view .LVU326
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 80


 1399 012a F4EEC77A 		vcmpe.f32	s15, s14
 1400 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1401 0132 B8DD     		ble	.L43
 935:Veno-Echo.cpp ****                 }
 1402              		.loc 21 935 21 is_stmt 1 view .LVU327
 935:Veno-Echo.cpp ****                 }
 1403              		.loc 21 935 42 is_stmt 0 view .LVU328
 1404 0134 0122     		movs	r2, #1
 1405 0136 1A70     		strb	r2, [r3]
 1406              	.L55:
 940:Veno-Echo.cpp ****         {
 1407              		.loc 21 940 9 is_stmt 1 view .LVU329
 1408              	.LBB1027:
 942:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1409              		.loc 21 942 13 view .LVU330
 942:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1410              		.loc 21 942 38 is_stmt 0 view .LVU331
 1411 0138 0120     		movs	r0, #1
 1412 013a 9FED371A 		vldr.32	s2, .L76+56
 1413 013e DFED370A 		vldr.32	s1, .L76+60
 1414 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1415              	.LVL54:
 1416              	.LBB1028:
 1417              	.LBB1029:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1418              		.loc 21 70 28 view .LVU332
 1419 0146 364B     		ldr	r3, .L76+64
 1420              	.LVL55:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1421              		.loc 21 70 28 view .LVU333
 1422              	.LBE1029:
 1423              	.LBE1028:
 943:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1424              		.loc 21 943 13 is_stmt 1 view .LVU334
 1425              	.LBB1043:
 1426              	.LBI1028:
  68:Veno-Echo.cpp ****     {
 1427              		.loc 21 68 10 view .LVU335
 1428              	.LBB1041:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1429              		.loc 21 70 9 view .LVU336
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1430              		.loc 21 70 53 is_stmt 0 view .LVU337
 1431 0148 DFED326A 		vldr.32	s13, .L76+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1432              		.loc 21 70 28 view .LVU338
 1433 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1434              	.LVL56:
 1435              	.LBB1030:
 1436              	.LBI1030:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1437              		.loc 22 75 3 is_stmt 1 view .LVU339
 1438              	.LBB1031:
 1439              		.loc 22 76 5 view .LVU340
 1440              		.loc 22 76 5 is_stmt 0 view .LVU341
 1441              	.LBE1031:
 1442              	.LBE1030:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 81


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1443              		.loc 21 70 15 view .LVU342
 1444 0150 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1445              		.loc 21 70 53 view .LVU343
 1446 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1447              	.LBB1033:
 1448              	.LBB1032:
 1449              		.loc 22 76 31 view .LVU344
 1450 0158 B0EEC77A 		vabs.f32	s14, s14
 1451              	.LBE1032:
 1452              	.LBE1033:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1453              		.loc 21 70 9 view .LVU345
 1454 015c B4EEE77A 		vcmpe.f32	s14, s15
 1455 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1456 0164 0DDD     		ble	.L63
  74:Veno-Echo.cpp ****             //del -> Reset();
 1457              		.loc 21 74 29 view .LVU346
 1458 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1459              	.LBB1034:
 1460              	.LBB1035:
 1461              		.loc 20 72 9 view .LVU347
 1462 016a 2E4C     		ldr	r4, .L76+68
 1463              	.LBE1035:
 1464              	.LBE1034:
 1465              	.LBE1041:
 1466              	.LBE1043:
 943:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1467              		.loc 21 943 37 view .LVU348
 1468 016c 1968     		ldr	r1, [r3]
 1469              	.LBB1044:
 1470              	.LBB1042:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1471              		.loc 21 73 13 is_stmt 1 view .LVU349
 1472              	.LBB1038:
 1473              	.LBB1036:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1474              		.loc 20 71 9 is_stmt 0 view .LVU350
 1475 016e 0020     		movs	r0, #0
 1476              	.LBE1036:
 1477              	.LBE1038:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1478              		.loc 21 73 27 view .LVU351
 1479 0170 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1480              		.loc 21 74 13 is_stmt 1 view .LVU352
 1481              	.LVL57:
 1482              	.LBB1039:
 1483              	.LBI1034:
  69:delayline_reverse.h ****     {
 1484              		.loc 20 69 17 view .LVU353
  69:delayline_reverse.h ****     {
 1485              		.loc 20 69 17 is_stmt 0 view .LVU354
 1486              	.LBE1039:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1487              		.loc 21 74 29 view .LVU355
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 82


 1488 0174 17EE902A 		vmov	r2, s15	@ int
 1489              	.LBB1040:
 1490              	.LBB1037:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1491              		.loc 20 71 9 view .LVU356
 1492 0178 0860     		str	r0, [r1]	@ float
 1493              		.loc 20 72 9 view .LVU357
 1494 017a A242     		cmp	r2, r4
 1495 017c 28BF     		it	cs
 1496 017e 2246     		movcs	r2, r4
 1497 0180 0A61     		str	r2, [r1, #16]
 1498              	.LVL58:
 1499              	.L63:
 1500              		.loc 20 72 9 view .LVU358
 1501              	.LBE1037:
 1502              	.LBE1040:
 1503              	.LBE1042:
 1504              	.LBE1044:
 944:Veno-Echo.cpp ****             //save setting:
 1505              		.loc 21 944 13 is_stmt 1 view .LVU359
 1506              	.LBB1045:
 1507              	.LBI1045:
  68:Veno-Echo.cpp ****     {
 1508              		.loc 21 68 10 view .LVU360
 1509              	.LBB1046:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1510              		.loc 21 70 9 view .LVU361
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1511              		.loc 21 70 28 is_stmt 0 view .LVU362
 1512 0182 294B     		ldr	r3, .L76+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1513              		.loc 21 70 53 view .LVU363
 1514 0184 DFED236A 		vldr.32	s13, .L76+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1515              		.loc 21 70 28 view .LVU364
 1516 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1517              	.LVL59:
 1518              	.LBB1047:
 1519              	.LBI1047:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1520              		.loc 22 75 3 is_stmt 1 view .LVU365
 1521              	.LBB1048:
 1522              		.loc 22 76 5 view .LVU366
 1523              		.loc 22 76 5 is_stmt 0 view .LVU367
 1524              	.LBE1048:
 1525              	.LBE1047:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1526              		.loc 21 70 15 view .LVU368
 1527 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1528              		.loc 21 70 53 view .LVU369
 1529 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1530              	.LBB1050:
 1531              	.LBB1049:
 1532              		.loc 22 76 31 view .LVU370
 1533 0194 B0EEC77A 		vabs.f32	s14, s14
 1534              	.LBE1049:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 83


 1535              	.LBE1050:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1536              		.loc 21 70 9 view .LVU371
 1537 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1538 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1539 01a0 0DDD     		ble	.L57
  74:Veno-Echo.cpp ****             //del -> Reset();
 1540              		.loc 21 74 29 view .LVU372
 1541 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1542              	.LBB1051:
 1543              	.LBB1052:
 1544              		.loc 20 72 9 view .LVU373
 1545 01a6 1F4C     		ldr	r4, .L76+68
 1546              	.LBE1052:
 1547              	.LBE1051:
 1548              	.LBE1046:
 1549              	.LBE1045:
 944:Veno-Echo.cpp ****             //save setting:
 1550              		.loc 21 944 37 view .LVU374
 1551 01a8 1968     		ldr	r1, [r3]
 1552              	.LBB1059:
 1553              	.LBB1058:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1554              		.loc 21 73 13 is_stmt 1 view .LVU375
 1555              	.LBB1055:
 1556              	.LBB1053:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1557              		.loc 20 71 9 is_stmt 0 view .LVU376
 1558 01aa 0020     		movs	r0, #0
 1559              	.LBE1053:
 1560              	.LBE1055:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1561              		.loc 21 73 27 view .LVU377
 1562 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1563              		.loc 21 74 13 is_stmt 1 view .LVU378
 1564              	.LVL60:
 1565              	.LBB1056:
 1566              	.LBI1051:
  69:delayline_reverse.h ****     {
 1567              		.loc 20 69 17 view .LVU379
  69:delayline_reverse.h ****     {
 1568              		.loc 20 69 17 is_stmt 0 view .LVU380
 1569              	.LBE1056:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1570              		.loc 21 74 29 view .LVU381
 1571 01b0 17EE902A 		vmov	r2, s15	@ int
 1572              	.LBB1057:
 1573              	.LBB1054:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1574              		.loc 20 71 9 view .LVU382
 1575 01b4 0860     		str	r0, [r1]	@ float
 1576              		.loc 20 72 9 view .LVU383
 1577 01b6 A242     		cmp	r2, r4
 1578 01b8 28BF     		it	cs
 1579 01ba 2246     		movcs	r2, r4
 1580 01bc 0A61     		str	r2, [r1, #16]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 84


 1581              	.LVL61:
 1582              	.L57:
 1583              		.loc 20 72 9 view .LVU384
 1584              	.LBE1054:
 1585              	.LBE1057:
 1586              	.LBE1058:
 1587              	.LBE1059:
 946:Veno-Echo.cpp ****             save_flag = true;
 1588              		.loc 21 946 13 is_stmt 1 view .LVU385
 946:Veno-Echo.cpp ****             save_flag = true;
 1589              		.loc 21 946 35 is_stmt 0 view .LVU386
 1590 01be 1B49     		ldr	r1, .L76+76
 1591              	.LBB1060:
 1592              	.LBB1061:
 1593              	.LBB1062:
 1594              	.LBB1063:
 1595              	.LBB1064:
 1596              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 85


  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 86


  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 87


 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 88


 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 89


 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 90


 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 91


 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 1597              		.loc 23 397 18 view .LVU387
 1598 01c0 0122     		movs	r2, #1
 1599 01c2 1B4B     		ldr	r3, .L76+80
 1600              	.LBE1064:
 1601              	.LBE1063:
 1602              	.LBE1062:
 1603              	.LBE1061:
 1604              	.LBE1060:
 946:Veno-Echo.cpp ****             save_flag = true;
 1605              		.loc 21 946 35 view .LVU388
 1606 01c4 81ED000A 		vstr.32	s0, [r1]
 947:Veno-Echo.cpp ****         }
 1607              		.loc 21 947 13 is_stmt 1 view .LVU389
 1608              	.LVL62:
 1609              	.LBB1069:
 1610              	.LBI1060:
 1611              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 92


  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
 1612              		.loc 24 80 5 view .LVU390
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 93


 1613              	.LBB1068:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 1614              		.loc 24 81 7 view .LVU391
 1615              	.LBB1067:
 1616              	.LBI1062:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1617              		.loc 23 288 7 view .LVU392
 1618              	.LBB1066:
 1619              	.LBI1063:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1620              		.loc 23 390 7 view .LVU393
 1621              	.LBB1065:
 1622              		.loc 23 397 18 is_stmt 0 view .LVU394
 1623 01c8 BFF35B8F 		dmb	ish
 1624 01cc 1A70     		strb	r2, [r3]
 1625 01ce BFF35B8F 		dmb	ish
 1626              	.LVL63:
 1627              		.loc 23 397 18 view .LVU395
 1628              	.LBE1065:
 1629              	.LBE1066:
 1630              	.LBE1067:
 1631              	.LBE1068:
 1632              	.LBE1069:
 1633              	.LBE1027:
 1634              	.LBE1071:
 1635              	.LBE1077:
 951:Veno-Echo.cpp **** 
 1636              		.loc 21 951 1 view .LVU396
 1637 01d2 10BD     		pop	{r4, pc}
 1638              	.LVL64:
 1639              	.L74:
 1640              	.LBB1078:
 1641              	.LBB1072:
 1642              	.LBB1018:
 1643              	.LBB1006:
2026:Veno-Echo.cpp ****     }
 1644              		.loc 21 2026 16 view .LVU397
 1645 01d4 DFED177A 		vldr.32	s15, .L76+84
 1646              	.LVL65:
2026:Veno-Echo.cpp ****     }
 1647              		.loc 21 2026 16 view .LVU398
 1648 01d8 51E7     		b	.L51
 1649              	.LVL66:
 1650              	.L75:
2026:Veno-Echo.cpp ****     }
 1651              		.loc 21 2026 16 view .LVU399
 1652              	.LBE1006:
 1653              	.LBE1018:
 1654              	.LBB1019:
 1655              	.LBB1016:
 1656 01da DFED167A 		vldr.32	s15, .L76+84
 1657 01de 94E7     		b	.L49
 1658              	.L77:
 1659              		.align	2
 1660              	.L76:
 1661 01e0 18000000 		.word	.LANCHOR4+24
 1662 01e4 00000000 		.word	.LANCHOR6
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 94


 1663 01e8 ABAAAA2A 		.word	715827883
 1664 01ec 00000000 		.word	.LANCHOR7
 1665 01f0 00000000 		.word	.LANCHOR8
 1666 01f4 00000000 		.word	.LANCHOR9
 1667 01f8 00000000 		.word	.LANCHOR10
 1668 01fc 00000000 		.word	.LANCHOR5
 1669 0200 00000000 		.word	.LANCHOR11
 1670 0204 00000000 		.word	.LANCHOR12
 1671 0208 00000000 		.word	.LANCHOR0
 1672 020c 00000000 		.word	.LANCHOR13
 1673 0210 00000000 		.word	.LANCHOR14
 1674 0214 0AD7A33B 		.word	1000593162
 1675 0218 0050C346 		.word	1187205120
 1676 021c 00606A48 		.word	1214930944
 1677 0220 00000000 		.word	.LANCHOR2
 1678 0224 BF270900 		.word	599999
 1679 0228 00000000 		.word	.LANCHOR3
 1680 022c 00000000 		.word	.LANCHOR15
 1681 0230 00000000 		.word	.LANCHOR16
 1682 0234 00000000 		.word	0
 1683              	.LBE1016:
 1684              	.LBE1019:
 1685              	.LBE1072:
 1686              	.LBE1078:
 1687              		.cfi_endproc
 1688              	.LFE4313:
 1690              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1691              		.align	1
 1692              		.p2align 2,,3
 1693              		.global	_Z20Update_DelayTimeR_CVv
 1694              		.syntax unified
 1695              		.thumb
 1696              		.thumb_func
 1697              		.fpu fpv5-d16
 1699              	_Z20Update_DelayTimeR_CVv:
 1700              	.LFB4314:
 954:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1701              		.loc 21 954 1 is_stmt 1 view -0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
 1704              		@ frame_needed = 0, uses_anonymous_args = 0
 955:Veno-Echo.cpp **** }
 1705              		.loc 21 955 5 view .LVU401
 954:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1706              		.loc 21 954 1 is_stmt 0 view .LVU402
 1707 0000 08B5     		push	{r3, lr}
 1708              		.cfi_def_cfa_offset 8
 1709              		.cfi_offset 3, -8
 1710              		.cfi_offset 14, -4
 955:Veno-Echo.cpp **** }
 1711              		.loc 21 955 36 view .LVU403
 1712 0002 0121     		movs	r1, #1
 1713 0004 0348     		ldr	r0, .L80
 1714 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1715              	.LVL67:
 955:Veno-Echo.cpp **** }
 1716              		.loc 21 955 19 view .LVU404
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 95


 1717 000a 034B     		ldr	r3, .L80+4
 1718 000c 83ED000A 		vstr.32	s0, [r3]
 956:Veno-Echo.cpp **** 
 1719              		.loc 21 956 1 view .LVU405
 1720 0010 08BD     		pop	{r3, pc}
 1721              	.L81:
 1722 0012 00BF     		.align	2
 1723              	.L80:
 1724 0014 18000000 		.word	.LANCHOR4+24
 1725 0018 00000000 		.word	.LANCHOR17
 1726              		.cfi_endproc
 1727              	.LFE4314:
 1729              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1730              		.align	1
 1731              		.p2align 2,,3
 1732              		.global	_Z17Update_DelayTimeRv
 1733              		.syntax unified
 1734              		.thumb
 1735              		.thumb_func
 1736              		.fpu fpv5-d16
 1738              	_Z17Update_DelayTimeRv:
 1739              	.LFB4315:
 959:Veno-Echo.cpp ****     static bool lastShift{};
 1740              		.loc 21 959 1 is_stmt 1 view -0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 960:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1744              		.loc 21 960 5 view .LVU407
 961:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1745              		.loc 21 961 5 view .LVU408
 962:Veno-Echo.cpp ****     
 1746              		.loc 21 962 5 view .LVU409
 964:Veno-Echo.cpp **** 
 1747              		.loc 21 964 5 view .LVU410
 967:Veno-Echo.cpp **** 
 1748              		.loc 21 967 5 view .LVU411
 959:Veno-Echo.cpp ****     static bool lastShift{};
 1749              		.loc 21 959 1 is_stmt 0 view .LVU412
 1750 0000 10B5     		push	{r4, lr}
 1751              		.cfi_def_cfa_offset 8
 1752              		.cfi_offset 4, -8
 1753              		.cfi_offset 14, -4
 967:Veno-Echo.cpp **** 
 1754              		.loc 21 967 44 view .LVU413
 1755 0002 0622     		movs	r2, #6
 1756 0004 0721     		movs	r1, #7
 1757 0006 6948     		ldr	r0, .L112
 959:Veno-Echo.cpp ****     static bool lastShift{};
 1758              		.loc 21 959 1 view .LVU414
 1759 0008 2DED028B 		vpush.64	{d8}
 1760              		.cfi_def_cfa_offset 16
 1761              		.cfi_offset 80, -16
 1762              		.cfi_offset 81, -12
 967:Veno-Echo.cpp **** 
 1763              		.loc 21 967 44 view .LVU415
 1764 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 96


 1765              	.LVL68:
 972:Veno-Echo.cpp **** 
 1766              		.loc 21 972 26 view .LVU416
 1767 0010 6749     		ldr	r1, .L112+4
 972:Veno-Echo.cpp **** 
 1768              		.loc 21 972 31 view .LVU417
 1769 0012 684B     		ldr	r3, .L112+8
 1770              	.LVL69:
 971:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1771              		.loc 21 971 5 is_stmt 1 view .LVU418
 972:Veno-Echo.cpp **** 
 1772              		.loc 21 972 5 view .LVU419
 972:Veno-Echo.cpp **** 
 1773              		.loc 21 972 26 is_stmt 0 view .LVU420
 1774 0014 0A68     		ldr	r2, [r1]
 1775              	.LBB1079:
 974:Veno-Echo.cpp ****     {
 1776              		.loc 21 974 9 view .LVU421
 1777 0016 6848     		ldr	r0, .L112+12
 1778              	.LBE1079:
 972:Veno-Echo.cpp **** 
 1779              		.loc 21 972 26 view .LVU422
 1780 0018 0132     		adds	r2, r2, #1
 1781              	.LBB1128:
 974:Veno-Echo.cpp ****     {
 1782              		.loc 21 974 5 view .LVU423
 1783 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1784              	.LBE1128:
 972:Veno-Echo.cpp **** 
 1785              		.loc 21 972 31 view .LVU424
 1786 001c 83FB0243 		smull	r4, r3, r3, r2
 1787 0020 D417     		asrs	r4, r2, #31
 1788 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1789 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1790 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1791              	.LBB1129:
 1792              	.LBB1080:
 978:Veno-Echo.cpp ****         {
 1793              		.loc 21 978 19 view .LVU425
 1794 002e 634A     		ldr	r2, .L112+16
 1795              	.LBE1080:
 1796              	.LBE1129:
 972:Veno-Echo.cpp **** 
 1797              		.loc 21 972 14 view .LVU426
 1798 0030 0B60     		str	r3, [r1]
 974:Veno-Echo.cpp ****     {
 1799              		.loc 21 974 5 is_stmt 1 view .LVU427
 1800              	.LBB1130:
 1801 0032 90BB     		cbnz	r0, .L83
 1802              	.LBB1099:
 976:Veno-Echo.cpp ****         //udpate pickup
 1803              		.loc 21 976 9 view .LVU428
 978:Veno-Echo.cpp ****         {
 1804              		.loc 21 978 9 view .LVU429
 1805 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1806 0036 0029     		cmp	r1, #0
 1807 0038 3CD0     		beq	.L84
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 97


 980:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1808              		.loc 21 980 13 view .LVU430
 981:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1809              		.loc 21 981 31 is_stmt 0 view .LVU431
 1810 003a 614C     		ldr	r4, .L112+20
 982:Veno-Echo.cpp ****         } 
 1811              		.loc 21 982 28 view .LVU432
 1812 003c 6149     		ldr	r1, .L112+24
 980:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1813              		.loc 21 980 23 view .LVU433
 1814 003e 1070     		strb	r0, [r2]
 981:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1815              		.loc 21 981 13 is_stmt 1 view .LVU434
 981:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1816              		.loc 21 981 31 is_stmt 0 view .LVU435
 1817 0040 2070     		strb	r0, [r4]
 982:Veno-Echo.cpp ****         } 
 1818              		.loc 21 982 13 is_stmt 1 view .LVU436
 982:Veno-Echo.cpp ****         } 
 1819              		.loc 21 982 28 is_stmt 0 view .LVU437
 1820 0042 81ED000A 		vstr.32	s0, [r1]
 1821              	.L85:
 995:Veno-Echo.cpp **** 
 1822              		.loc 21 995 9 is_stmt 1 view .LVU438
 1823              	.LVL70:
 997:Veno-Echo.cpp ****         {
 1824              		.loc 21 997 9 view .LVU439
1005:Veno-Echo.cpp ****         }
 1825              		.loc 21 1005 13 view .LVU440
 1826              	.LBB1081:
 1827              	.LBI1081:
2019:Veno-Echo.cpp **** {
 1828              		.loc 21 2019 7 view .LVU441
 1829              	.LBB1082:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1830              		.loc 21 2021 5 view .LVU442
2022:Veno-Echo.cpp **** 
 1831              		.loc 21 2022 5 view .LVU443
 1832              	.LBE1082:
 1833              	.LBE1081:
1005:Veno-Echo.cpp ****         }
 1834              		.loc 21 1005 36 is_stmt 0 view .LVU444
 1835 0046 6049     		ldr	r1, .L112+28
 1836              	.LBB1086:
 1837              	.LBB1083:
2022:Veno-Echo.cpp **** 
 1838              		.loc 21 2022 39 view .LVU445
 1839 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
2022:Veno-Echo.cpp **** 
 1840              		.loc 21 2022 49 view .LVU446
 1841 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1842              	.LBE1083:
 1843              	.LBE1086:
1005:Veno-Echo.cpp ****         }
 1844              		.loc 21 1005 36 view .LVU447
 1845 0050 5E4A     		ldr	r2, .L112+32
 1846              	.LBB1087:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 98


 1847              	.LBB1084:
2022:Veno-Echo.cpp **** 
 1848              		.loc 21 2022 39 view .LVU448
 1849 0052 91ED007A 		vldr.32	s14, [r1]
2022:Veno-Echo.cpp **** 
 1850              		.loc 21 2022 12 view .LVU449
 1851 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1852 005a D2ED007A 		vldr.32	s15, [r2]
2022:Veno-Echo.cpp **** 
 1853              		.loc 21 2022 39 view .LVU450
 1854 005e 36EEC77A 		vsub.f32	s14, s13, s14
2022:Veno-Echo.cpp **** 
 1855              		.loc 21 2022 49 view .LVU451
 1856 0062 37EE657A 		vsub.f32	s14, s14, s11
2022:Veno-Echo.cpp **** 
 1857              		.loc 21 2022 12 view .LVU452
 1858 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1859              	.LVL71:
2024:Veno-Echo.cpp ****     {
 1860              		.loc 21 2024 5 is_stmt 1 view .LVU453
 1861 006a F5EEC07A 		vcmpe.f32	s15, #0
 1862 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1863 0072 00F18C80 		bmi	.L110
2029:Veno-Echo.cpp ****     {
 1864              		.loc 21 2029 5 view .LVU454
2031:Veno-Echo.cpp ****     }
 1865              		.loc 21 2031 16 is_stmt 0 view .LVU455
 1866 0076 F4EE667A 		vcmp.f32	s15, s13
 1867 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1868 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1869              	.LVL72:
 1870              	.L90:
2031:Veno-Echo.cpp ****     }
 1871              		.loc 21 2031 16 view .LVU456
 1872              	.LBE1084:
 1873              	.LBE1087:
1008:Veno-Echo.cpp ****         {
 1874              		.loc 21 1008 9 is_stmt 1 view .LVU457
 1875 0082 A3B9     		cbnz	r3, .L82
1010:Veno-Echo.cpp ****             {
 1876              		.loc 21 1010 13 view .LVU458
1010:Veno-Echo.cpp ****             {
 1877              		.loc 21 1010 35 is_stmt 0 view .LVU459
 1878 0084 524B     		ldr	r3, .L112+36
 1879 0086 B0EE670A 		vmov.f32	s0, s15
 1880              	.LVL73:
1010:Veno-Echo.cpp ****             {
 1881              		.loc 21 1010 35 view .LVU460
 1882 008a 5248     		ldr	r0, .L112+40
 1883 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1884              	.LBE1099:
 1885              	.LBE1130:
1051:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1886              		.loc 21 1051 1 view .LVU461
 1887 008e BDEC028B 		vldm	sp!, {d8}
 1888              		.cfi_remember_state
 1889              		.cfi_restore 80
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 99


 1890              		.cfi_restore 81
 1891              		.cfi_def_cfa_offset 8
 1892 0092 BDE81040 		pop	{r4, lr}
 1893              		.cfi_restore 14
 1894              		.cfi_restore 4
 1895              		.cfi_def_cfa_offset 0
 1896              	.LBB1131:
 1897              	.LBB1100:
1010:Veno-Echo.cpp ****             {
 1898              		.loc 21 1010 35 view .LVU462
 1899 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1900              	.LVL74:
 1901              	.L83:
 1902              		.cfi_restore_state
1010:Veno-Echo.cpp ****             {
 1903              		.loc 21 1010 35 view .LVU463
 1904              	.LBE1100:
 1905              	.LBB1101:
1020:Veno-Echo.cpp **** 
 1906              		.loc 21 1020 9 is_stmt 1 view .LVU464
1022:Veno-Echo.cpp ****         {
 1907              		.loc 21 1022 9 view .LVU465
 1908 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1909 009c 002B     		cmp	r3, #0
 1910 009e 3ED1     		bne	.L93
1024:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1911              		.loc 21 1024 13 view .LVU466
1024:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1912              		.loc 21 1024 23 is_stmt 0 view .LVU467
 1913 00a0 0124     		movs	r4, #1
1025:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1914              		.loc 21 1025 29 view .LVU468
 1915 00a2 4D48     		ldr	r0, .L112+44
1026:Veno-Echo.cpp ****         }
 1916              		.loc 21 1026 26 view .LVU469
 1917 00a4 4D49     		ldr	r1, .L112+48
1024:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1918              		.loc 21 1024 23 view .LVU470
 1919 00a6 1470     		strb	r4, [r2]
1025:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1920              		.loc 21 1025 13 is_stmt 1 view .LVU471
1025:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1921              		.loc 21 1025 29 is_stmt 0 view .LVU472
 1922 00a8 0370     		strb	r3, [r0]
1026:Veno-Echo.cpp ****         }
 1923              		.loc 21 1026 13 is_stmt 1 view .LVU473
1026:Veno-Echo.cpp ****         }
 1924              		.loc 21 1026 26 is_stmt 0 view .LVU474
 1925 00aa 81ED000A 		vstr.32	s0, [r1]
 1926              	.L82:
1026:Veno-Echo.cpp ****         }
 1927              		.loc 21 1026 26 view .LVU475
 1928              	.LBE1101:
 1929              	.LBE1131:
1051:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1930              		.loc 21 1051 1 view .LVU476
 1931 00ae BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 100


 1932              		.cfi_remember_state
 1933              		.cfi_restore 80
 1934              		.cfi_restore 81
 1935              		.cfi_def_cfa_offset 8
 1936 00b2 10BD     		pop	{r4, pc}
 1937              	.L84:
 1938              		.cfi_restore_state
 1939              	.LBB1132:
 1940              	.LBB1124:
 986:Veno-Echo.cpp ****             {
 1941              		.loc 21 986 13 is_stmt 1 view .LVU477
 986:Veno-Echo.cpp ****             {
 1942              		.loc 21 986 16 is_stmt 0 view .LVU478
 1943 00b4 424A     		ldr	r2, .L112+20
 986:Veno-Echo.cpp ****             {
 1944              		.loc 21 986 13 view .LVU479
 1945 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1946 00b8 79B9     		cbnz	r1, .L86
 988:Veno-Echo.cpp ****                 {
 1947              		.loc 21 988 17 is_stmt 1 view .LVU480
 1948              	.LVL75:
 1949              	.LBB1088:
 1950              	.LBI1088:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1951              		.loc 22 75 3 view .LVU481
 1952              	.LBB1089:
 1953              		.loc 22 76 5 view .LVU482
 1954              		.loc 22 76 5 is_stmt 0 view .LVU483
 1955              	.LBE1089:
 1956              	.LBE1088:
 988:Veno-Echo.cpp ****                 {
 1957              		.loc 21 988 23 view .LVU484
 1958 00ba 4249     		ldr	r1, .L112+24
 988:Veno-Echo.cpp ****                 {
 1959              		.loc 21 988 17 view .LVU485
 1960 00bc 9FED487A 		vldr.32	s14, .L112+52
 988:Veno-Echo.cpp ****                 {
 1961              		.loc 21 988 23 view .LVU486
 1962 00c0 D1ED007A 		vldr.32	s15, [r1]
 1963 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1964              	.LBB1091:
 1965              	.LBB1090:
 1966              		.loc 22 76 31 view .LVU487
 1967 00c8 F0EEE77A 		vabs.f32	s15, s15
 1968              	.LBE1090:
 1969              	.LBE1091:
 988:Veno-Echo.cpp ****                 {
 1970              		.loc 21 988 17 view .LVU488
 1971 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1972 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1973 00d4 B7DD     		ble	.L85
 990:Veno-Echo.cpp ****                 }
 1974              		.loc 21 990 21 is_stmt 1 view .LVU489
 990:Veno-Echo.cpp ****                 }
 1975              		.loc 21 990 39 is_stmt 0 view .LVU490
 1976 00d6 0121     		movs	r1, #1
 1977 00d8 1170     		strb	r1, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 101


 1978              	.L86:
 995:Veno-Echo.cpp **** 
 1979              		.loc 21 995 9 is_stmt 1 view .LVU491
 1980              	.LVL76:
 997:Veno-Echo.cpp ****         {
 1981              		.loc 21 997 9 view .LVU492
 999:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1982              		.loc 21 999 13 view .LVU493
 1983              	.LBB1092:
 1984              	.LBI1092:
2019:Veno-Echo.cpp **** {
 1985              		.loc 21 2019 7 view .LVU494
 1986              	.LBB1093:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1987              		.loc 21 2021 5 view .LVU495
2022:Veno-Echo.cpp **** 
 1988              		.loc 21 2022 5 view .LVU496
 1989              	.LBE1093:
 1990              	.LBE1092:
 999:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1991              		.loc 21 999 36 is_stmt 0 view .LVU497
 1992 00da 3B4A     		ldr	r2, .L112+28
 1993              	.LBB1096:
 1994              	.LBB1094:
2022:Veno-Echo.cpp **** 
 1995              		.loc 21 2022 39 view .LVU498
 1996 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2022:Veno-Echo.cpp **** 
 1997              		.loc 21 2022 49 view .LVU499
 1998 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2022:Veno-Echo.cpp **** 
 1999              		.loc 21 2022 39 view .LVU500
 2000 00e4 D2ED007A 		vldr.32	s15, [r2]
2022:Veno-Echo.cpp **** 
 2001              		.loc 21 2022 12 view .LVU501
 2002 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2022:Veno-Echo.cpp **** 
 2003              		.loc 21 2022 39 view .LVU502
 2004 00ec 77EE677A 		vsub.f32	s15, s14, s15
2022:Veno-Echo.cpp **** 
 2005              		.loc 21 2022 49 view .LVU503
 2006 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2022:Veno-Echo.cpp **** 
 2007              		.loc 21 2022 12 view .LVU504
 2008 00f4 B0EE406A 		vmov.f32	s12, s0
 2009 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2024:Veno-Echo.cpp ****     {
 2010              		.loc 21 2024 5 view .LVU505
 2011 00fc B5EEC06A 		vcmpe.f32	s12, #0
2022:Veno-Echo.cpp **** 
 2012              		.loc 21 2022 12 view .LVU506
 2013 0100 F0EE467A 		vmov.f32	s15, s12
 2014              	.LVL77:
2024:Veno-Echo.cpp ****     {
 2015              		.loc 21 2024 5 is_stmt 1 view .LVU507
 2016 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2017 0108 44D4     		bmi	.L111
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 102


2029:Veno-Echo.cpp ****     {
 2018              		.loc 21 2029 5 view .LVU508
2031:Veno-Echo.cpp ****     }
 2019              		.loc 21 2031 16 is_stmt 0 view .LVU509
 2020 010a F4EE477A 		vcmp.f32	s15, s14
 2021 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2022 0112 77FE277A 		vselgt.f32	s15, s14, s15
 2023              	.L88:
 2024              	.LVL78:
 2025              		.loc 21 2034 5 is_stmt 1 view .LVU510
 2026              		.loc 21 2034 5 is_stmt 0 view .LVU511
 2027              	.LBE1094:
 2028              	.LBE1096:
1000:Veno-Echo.cpp ****         }
 2029              		.loc 21 1000 13 is_stmt 1 view .LVU512
1000:Veno-Echo.cpp ****         }
 2030              		.loc 21 1000 29 is_stmt 0 view .LVU513
 2031 0116 2D4A     		ldr	r2, .L112+32
 2032 0118 82ED000A 		vstr.32	s0, [r2]
 2033 011c B1E7     		b	.L90
 2034              	.LVL79:
 2035              	.L93:
1000:Veno-Echo.cpp ****         }
 2036              		.loc 21 1000 29 view .LVU514
 2037              	.LBE1124:
 2038              	.LBB1125:
1031:Veno-Echo.cpp ****             {
 2039              		.loc 21 1031 13 is_stmt 1 view .LVU515
1031:Veno-Echo.cpp ****             {
 2040              		.loc 21 1031 16 is_stmt 0 view .LVU516
 2041 011e 2E4B     		ldr	r3, .L112+44
1031:Veno-Echo.cpp ****             {
 2042              		.loc 21 1031 13 view .LVU517
 2043 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2044 0122 7AB9     		cbnz	r2, .L94
1033:Veno-Echo.cpp ****                 {
 2045              		.loc 21 1033 17 is_stmt 1 view .LVU518
 2046              	.LVL80:
 2047              	.LBB1102:
 2048              	.LBI1102:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2049              		.loc 22 75 3 view .LVU519
 2050              	.LBB1103:
 2051              		.loc 22 76 5 view .LVU520
 2052              		.loc 22 76 5 is_stmt 0 view .LVU521
 2053              	.LBE1103:
 2054              	.LBE1102:
1033:Veno-Echo.cpp ****                 {
 2055              		.loc 21 1033 23 view .LVU522
 2056 0124 2D4A     		ldr	r2, .L112+48
1033:Veno-Echo.cpp ****                 {
 2057              		.loc 21 1033 17 view .LVU523
 2058 0126 9FED2E7A 		vldr.32	s14, .L112+52
1033:Veno-Echo.cpp ****                 {
 2059              		.loc 21 1033 23 view .LVU524
 2060 012a D2ED007A 		vldr.32	s15, [r2]
 2061 012e 70EE677A 		vsub.f32	s15, s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 103


 2062              	.LBB1105:
 2063              	.LBB1104:
 2064              		.loc 22 76 31 view .LVU525
 2065 0132 F0EEE77A 		vabs.f32	s15, s15
 2066              	.LBE1104:
 2067              	.LBE1105:
1033:Veno-Echo.cpp ****                 {
 2068              		.loc 21 1033 17 view .LVU526
 2069 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2070 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2071 013e B6DD     		ble	.L82
1035:Veno-Echo.cpp ****                 }
 2072              		.loc 21 1035 21 is_stmt 1 view .LVU527
1035:Veno-Echo.cpp ****                 }
 2073              		.loc 21 1035 37 is_stmt 0 view .LVU528
 2074 0140 0122     		movs	r2, #1
 2075 0142 1A70     		strb	r2, [r3]
 2076              	.L94:
1040:Veno-Echo.cpp ****         {
 2077              		.loc 21 1040 9 is_stmt 1 view .LVU529
 2078              	.LBB1106:
1042:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2079              		.loc 21 1042 13 view .LVU530
 2080              	.LVL81:
1043:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2081              		.loc 21 1043 13 view .LVU531
1043:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2082              		.loc 21 1043 61 is_stmt 0 view .LVU532
 2083 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2084 0148 0020     		movs	r0, #0
 2085 014a 9FED261A 		vldr.32	s2, .L112+56
 2086 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2087              	.LVL82:
 2088              	.LBB1107:
 2089              	.LBI1107:
 2090              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 104


  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 105


  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 106


 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 107


 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 108


 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 109


 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 110


 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 111


 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 112


 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 113


 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 114


 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 115


 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 116


 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 117


 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 118


 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 119


 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 120


 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 121


 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 122


1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 123


1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 124


1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 125


1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 126


1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 127


1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 128


1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 129


1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 130


1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 131


1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 132


1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 133


1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 134


1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2091              		.loc 25 1756 3 is_stmt 1 view .LVU533
 2092              	.LBB1108:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2093              		.loc 25 1757 5 view .LVU534
 2094              		.loc 25 1757 28 is_stmt 0 view .LVU535
 2095 0152 B8FE400A 		vrinta.f32	s0, s0
 2096              	.LVL83:
 2097              		.loc 25 1757 28 view .LVU536
 2098              	.LBE1108:
 2099              	.LBE1107:
1044:Veno-Echo.cpp ****             //save setting:
 2100              		.loc 21 1044 13 is_stmt 1 view .LVU537
 2101              	.LBB1109:
 2102              	.LBI1109:
2035:Veno-Echo.cpp **** }
2036:Veno-Echo.cpp **** 
2037:Veno-Echo.cpp **** //checks pickup state of primary controls
2038:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2039:Veno-Echo.cpp **** {
2040:Veno-Echo.cpp ****     bool retval{};
2041:Veno-Echo.cpp ****     
2042:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
2043:Veno-Echo.cpp ****     {
2044:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2045:Veno-Echo.cpp ****         {
2046:Veno-Echo.cpp ****             retval = false;
2047:Veno-Echo.cpp ****         }
2048:Veno-Echo.cpp ****         else
2049:Veno-Echo.cpp ****         {
2050:Veno-Echo.cpp ****             retval = true;
2051:Veno-Echo.cpp ****         }
2052:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 135


2053:Veno-Echo.cpp **** 
2054:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2055:Veno-Echo.cpp ****     {
2056:Veno-Echo.cpp ****     if(!lastState) //if not picked up
2057:Veno-Echo.cpp ****     {
2058:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2059:Veno-Echo.cpp ****         {
2060:Veno-Echo.cpp ****             retval = true;
2061:Veno-Echo.cpp ****         }
2062:Veno-Echo.cpp **** 
2063:Veno-Echo.cpp ****         else
2064:Veno-Echo.cpp ****         {
2065:Veno-Echo.cpp ****             retval = false;
2066:Veno-Echo.cpp ****         }
2067:Veno-Echo.cpp **** 
2068:Veno-Echo.cpp ****     }
2069:Veno-Echo.cpp ****     else    //previous state is picked up
2070:Veno-Echo.cpp ****     {
2071:Veno-Echo.cpp ****         retval = true;  //always return true
2072:Veno-Echo.cpp ****     }
2073:Veno-Echo.cpp **** 
2074:Veno-Echo.cpp ****     }
2075:Veno-Echo.cpp ****     return retval;
2076:Veno-Echo.cpp **** 
2077:Veno-Echo.cpp **** }
2078:Veno-Echo.cpp **** 
2079:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2080:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2081:Veno-Echo.cpp **** {
2082:Veno-Echo.cpp ****     pickupState retval{};
2083:Veno-Echo.cpp **** 
2084:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
2085:Veno-Echo.cpp ****     {
2086:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
2087:Veno-Echo.cpp ****         {
2088:Veno-Echo.cpp ****             retval = BELOW;
2089:Veno-Echo.cpp ****         }
2090:Veno-Echo.cpp ****         
2091:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
2092:Veno-Echo.cpp ****         {
2093:Veno-Echo.cpp ****             retval = ABOVE;
2094:Veno-Echo.cpp ****         }
2095:Veno-Echo.cpp **** 
2096:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
2097:Veno-Echo.cpp ****         {
2098:Veno-Echo.cpp ****             retval = PICKEDUP;
2099:Veno-Echo.cpp ****         }
2100:Veno-Echo.cpp ****     }
2101:Veno-Echo.cpp **** 
2102:Veno-Echo.cpp ****     else    //not a recent shift change
2103:Veno-Echo.cpp ****     {
2104:Veno-Echo.cpp ****         switch(lastState)
2105:Veno-Echo.cpp ****         {
2106:Veno-Echo.cpp ****             case BELOW:
2107:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
2108:Veno-Echo.cpp ****                 retval = PICKEDUP;
2109:Veno-Echo.cpp ****             else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 136


2110:Veno-Echo.cpp ****                 retval = lastState;
2111:Veno-Echo.cpp ****             break;
2112:Veno-Echo.cpp **** 
2113:Veno-Echo.cpp ****             case ABOVE:
2114:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2115:Veno-Echo.cpp ****                 retval = PICKEDUP;
2116:Veno-Echo.cpp ****             else
2117:Veno-Echo.cpp ****                 retval = lastState;
2118:Veno-Echo.cpp ****             break;
2119:Veno-Echo.cpp ****             case PICKEDUP:
2120:Veno-Echo.cpp ****                 retval = lastState;
2121:Veno-Echo.cpp ****             break;
2122:Veno-Echo.cpp ****         }
2123:Veno-Echo.cpp ****     }
2124:Veno-Echo.cpp ****     
2125:Veno-Echo.cpp ****     return retval;
2126:Veno-Echo.cpp **** }
2127:Veno-Echo.cpp **** 
2128:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2103              		.loc 21 2128 8 view .LVU538
 2104              	.LBB1110:
2129:Veno-Echo.cpp **** {
2130:Veno-Echo.cpp **** double retVal{};
 2105              		.loc 21 2130 1 view .LVU539
2131:Veno-Echo.cpp ****     switch(ratio)
 2106              		.loc 21 2131 5 view .LVU540
 2107              	.LBE1110:
 2108              	.LBE1109:
1043:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2109              		.loc 21 1043 130 is_stmt 0 view .LVU541
 2110 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2111 015a 17EE903A 		vmov	r3, s15	@ int
 2112 015e 013B     		subs	r3, r3, #1
 2113 0160 DBB2     		uxtb	r3, r3
 2114 0162 022B     		cmp	r3, #2
 2115 0164 19D9     		bls	.L98
 2116 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2117              	.L99:
 2118              	.LVL84:
 2119              	.LBB1112:
 2120              	.LBB1111:
2132:Veno-Echo.cpp ****     {
2133:Veno-Echo.cpp ****         case QUARTER:
2134:Veno-Echo.cpp ****         retVal = 1.0;
2135:Veno-Echo.cpp ****         break;
2136:Veno-Echo.cpp **** 
2137:Veno-Echo.cpp ****         case DOTTED_EIGHT:
2138:Veno-Echo.cpp ****         retVal = 3.0/2.0;
2139:Veno-Echo.cpp ****         break;
2140:Veno-Echo.cpp **** 
2141:Veno-Echo.cpp ****         case EIGHT:
2142:Veno-Echo.cpp ****         retVal = 2.0;
2143:Veno-Echo.cpp ****         break;
2144:Veno-Echo.cpp **** 
2145:Veno-Echo.cpp ****         case TWELVE:
2146:Veno-Echo.cpp ****         retVal = 3.0;
2147:Veno-Echo.cpp ****         break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 137


2148:Veno-Echo.cpp **** 
2149:Veno-Echo.cpp ****         default:
2150:Veno-Echo.cpp ****         retVal = 1.0;
2151:Veno-Echo.cpp ****         break;
2152:Veno-Echo.cpp ****     }
2153:Veno-Echo.cpp **** 
2154:Veno-Echo.cpp **** return retVal;
 2121              		.loc 21 2154 1 is_stmt 1 view .LVU542
 2122              		.loc 21 2154 1 is_stmt 0 view .LVU543
 2123              	.LBE1111:
 2124              	.LBE1112:
1044:Veno-Echo.cpp ****             //save setting:
 2125              		.loc 21 1044 34 view .LVU544
 2126 016a B0EE480A 		vmov.f32	s0, s16
 2127              	.LVL85:
1044:Veno-Echo.cpp ****             //save setting:
 2128              		.loc 21 1044 34 view .LVU545
 2129 016e 1E48     		ldr	r0, .L112+60
 2130 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2131              	.LVL86:
1046:Veno-Echo.cpp ****             save_flag = true;
 2132              		.loc 21 1046 13 is_stmt 1 view .LVU546
1046:Veno-Echo.cpp ****             save_flag = true;
 2133              		.loc 21 1046 13 is_stmt 0 view .LVU547
 2134              	.LBE1106:
 2135              	.LBE1125:
 2136              	.LBE1132:
2130:Veno-Echo.cpp ****     switch(ratio)
 2137              		.loc 21 2130 1 is_stmt 1 view .LVU548
2131:Veno-Echo.cpp ****     {
 2138              		.loc 21 2131 5 view .LVU549
 2139              		.loc 21 2154 1 view .LVU550
 2140              	.LBB1133:
 2141              	.LBB1126:
 2142              	.LBB1123:
1046:Veno-Echo.cpp ****             save_flag = true;
 2143              		.loc 21 1046 34 is_stmt 0 view .LVU551
 2144 0174 1D49     		ldr	r1, .L112+64
 2145              	.LBB1113:
 2146              	.LBB1114:
 2147              	.LBB1115:
 2148              	.LBB1116:
 2149              	.LBB1117:
 2150              		.loc 23 397 18 view .LVU552
 2151 0176 1E4B     		ldr	r3, .L112+68
 2152 0178 0122     		movs	r2, #1
 2153              	.LBE1117:
 2154              	.LBE1116:
 2155              	.LBE1115:
 2156              	.LBE1114:
 2157              	.LBE1113:
1046:Veno-Echo.cpp ****             save_flag = true;
 2158              		.loc 21 1046 34 view .LVU553
 2159 017a 81ED018A 		vstr.32	s16, [r1, #4]
1047:Veno-Echo.cpp ****         }
 2160              		.loc 21 1047 13 is_stmt 1 view .LVU554
 2161              	.LVL87:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 138


 2162              	.LBB1122:
 2163              	.LBI1113:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2164              		.loc 24 80 5 view .LVU555
 2165              	.LBB1121:
 2166              		.loc 24 81 7 view .LVU556
 2167              	.LBB1120:
 2168              	.LBI1115:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2169              		.loc 23 288 7 view .LVU557
 2170              	.LBB1119:
 2171              	.LBI1116:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2172              		.loc 23 390 7 view .LVU558
 2173              	.LBB1118:
 2174              		.loc 23 397 18 is_stmt 0 view .LVU559
 2175 017e BFF35B8F 		dmb	ish
 2176 0182 1A70     		strb	r2, [r3]
 2177 0184 BFF35B8F 		dmb	ish
 2178              	.LVL88:
 2179              		.loc 23 397 18 view .LVU560
 2180              	.LBE1118:
 2181              	.LBE1119:
 2182              	.LBE1120:
 2183              	.LBE1121:
 2184              	.LBE1122:
 2185              	.LBE1123:
 2186              	.LBE1126:
 2187              	.LBE1133:
1051:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2188              		.loc 21 1051 1 view .LVU561
 2189 0188 BDEC028B 		vldm	sp!, {d8}
 2190              		.cfi_remember_state
 2191              		.cfi_restore 80
 2192              		.cfi_restore 81
 2193              		.cfi_def_cfa_offset 8
 2194 018c 10BD     		pop	{r4, pc}
 2195              	.LVL89:
 2196              	.L110:
 2197              		.cfi_restore_state
 2198              	.LBB1134:
 2199              	.LBB1127:
 2200              	.LBB1097:
 2201              	.LBB1085:
2026:Veno-Echo.cpp ****     }
 2202              		.loc 21 2026 16 view .LVU562
 2203 018e DFED157A 		vldr.32	s15, .L112+56
 2204              	.LVL90:
2026:Veno-Echo.cpp ****     }
 2205              		.loc 21 2026 16 view .LVU563
 2206 0192 76E7     		b	.L90
 2207              	.LVL91:
 2208              	.L111:
2026:Veno-Echo.cpp ****     }
 2209              		.loc 21 2026 16 view .LVU564
 2210              	.LBE1085:
 2211              	.LBE1097:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 139


 2212              	.LBB1098:
 2213              	.LBB1095:
 2214 0194 DFED137A 		vldr.32	s15, .L112+56
 2215 0198 BDE7     		b	.L88
 2216              	.LVL92:
 2217              	.L98:
2026:Veno-Echo.cpp ****     }
 2218              		.loc 21 2026 16 view .LVU565
 2219 019a 164A     		ldr	r2, .L112+72
 2220 019c 02EBC303 		add	r3, r2, r3, lsl #3
 2221 01a0 93ED008B 		vldr.64	d8, [r3]
 2222 01a4 B7EEC88B 		vcvt.f32.f64	s16, d8
 2223 01a8 DFE7     		b	.L99
 2224              	.L113:
 2225 01aa 00BF     		.align	2
 2226              	.L112:
 2227 01ac 18000000 		.word	.LANCHOR4+24
 2228 01b0 00000000 		.word	.LANCHOR18
 2229 01b4 ABAAAA2A 		.word	715827883
 2230 01b8 00000000 		.word	.LANCHOR7
 2231 01bc 00000000 		.word	.LANCHOR19
 2232 01c0 00000000 		.word	.LANCHOR20
 2233 01c4 00000000 		.word	.LANCHOR21
 2234 01c8 00000000 		.word	.LANCHOR17
 2235 01cc 00000000 		.word	.LANCHOR22
 2236 01d0 00000000 		.word	.LANCHOR12
 2237 01d4 00000000 		.word	.LANCHOR1
 2238 01d8 00000000 		.word	.LANCHOR23
 2239 01dc 00000000 		.word	.LANCHOR24
 2240 01e0 0AD7A33B 		.word	1000593162
 2241 01e4 00000000 		.word	0
 2242 01e8 00000000 		.word	.LANCHOR26
 2243 01ec 00000000 		.word	.LANCHOR15
 2244 01f0 00000000 		.word	.LANCHOR16
 2245 01f4 00000000 		.word	.LANCHOR25
 2246              	.LBE1095:
 2247              	.LBE1098:
 2248              	.LBE1127:
 2249              	.LBE1134:
 2250              		.cfi_endproc
 2251              	.LFE4315:
 2253              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2254              		.align	1
 2255              		.p2align 2,,3
 2256              		.global	_Z19Update_feedbackL_CVv
 2257              		.syntax unified
 2258              		.thumb
 2259              		.thumb_func
 2260              		.fpu fpv5-d16
 2262              	_Z19Update_feedbackL_CVv:
 2263              	.LFB4316:
1053:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2264              		.loc 21 1053 1 is_stmt 1 view -0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 0, uses_anonymous_args = 0
1054:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 140


 2268              		.loc 21 1054 5 view .LVU567
1053:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2269              		.loc 21 1053 1 is_stmt 0 view .LVU568
 2270 0000 08B5     		push	{r3, lr}
 2271              		.cfi_def_cfa_offset 8
 2272              		.cfi_offset 3, -8
 2273              		.cfi_offset 14, -4
1054:Veno-Echo.cpp **** }
 2274              		.loc 21 1054 35 view .LVU569
 2275 0002 0221     		movs	r1, #2
 2276 0004 0348     		ldr	r0, .L116
 2277 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2278              	.LVL93:
1054:Veno-Echo.cpp **** }
 2279              		.loc 21 1054 18 view .LVU570
 2280 000a 034B     		ldr	r3, .L116+4
 2281 000c 83ED000A 		vstr.32	s0, [r3]
1055:Veno-Echo.cpp **** void Update_feedbackL()
 2282              		.loc 21 1055 1 view .LVU571
 2283 0010 08BD     		pop	{r3, pc}
 2284              	.L117:
 2285 0012 00BF     		.align	2
 2286              	.L116:
 2287 0014 18000000 		.word	.LANCHOR4+24
 2288 0018 00000000 		.word	.LANCHOR27
 2289              		.cfi_endproc
 2290              	.LFE4316:
 2292              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2293              		.align	1
 2294              		.p2align 2,,3
 2295              		.global	_Z16Update_feedbackLv
 2296              		.syntax unified
 2297              		.thumb
 2298              		.thumb_func
 2299              		.fpu fpv5-d16
 2301              	_Z16Update_feedbackLv:
 2302              	.LFB4317:
1057:Veno-Echo.cpp ****     static bool lastShift{};
 2303              		.loc 21 1057 1 is_stmt 1 view -0
 2304              		.cfi_startproc
 2305              		@ args = 0, pretend = 0, frame = 0
 2306              		@ frame_needed = 0, uses_anonymous_args = 0
1058:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2307              		.loc 21 1058 5 view .LVU573
1059:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2308              		.loc 21 1059 5 view .LVU574
1060:Veno-Echo.cpp **** 
 2309              		.loc 21 1060 5 view .LVU575
1062:Veno-Echo.cpp **** 
 2310              		.loc 21 1062 5 view .LVU576
1066:Veno-Echo.cpp **** 
 2311              		.loc 21 1066 5 view .LVU577
1066:Veno-Echo.cpp **** 
 2312              		.loc 21 1066 43 is_stmt 0 view .LVU578
 2313 0000 0122     		movs	r2, #1
 2314 0002 0721     		movs	r1, #7
 2315 0004 6548     		ldr	r0, .L146
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 141


1057:Veno-Echo.cpp ****     static bool lastShift{};
 2316              		.loc 21 1057 1 view .LVU579
 2317 0006 10B5     		push	{r4, lr}
 2318              		.cfi_def_cfa_offset 8
 2319              		.cfi_offset 4, -8
 2320              		.cfi_offset 14, -4
 2321 0008 2DED028B 		vpush.64	{d8}
 2322              		.cfi_def_cfa_offset 16
 2323              		.cfi_offset 80, -16
 2324              		.cfi_offset 81, -12
1066:Veno-Echo.cpp **** 
 2325              		.loc 21 1066 43 view .LVU580
 2326 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2327              	.LVL94:
 2328              	.LBB1135:
1068:Veno-Echo.cpp ****     {   
 2329              		.loc 21 1068 9 view .LVU581
 2330 0010 634B     		ldr	r3, .L146+4
 2331              	.LVL95:
1068:Veno-Echo.cpp ****     {   
 2332              		.loc 21 1068 9 view .LVU582
 2333              	.LBE1135:
1068:Veno-Echo.cpp ****     {   
 2334              		.loc 21 1068 5 is_stmt 1 view .LVU583
 2335              	.LBB1180:
 2336              	.LBB1136:
1072:Veno-Echo.cpp ****         {
 2337              		.loc 21 1072 19 is_stmt 0 view .LVU584
 2338 0012 644A     		ldr	r2, .L146+8
 2339              	.LBE1136:
1068:Veno-Echo.cpp ****     {   
 2340              		.loc 21 1068 5 view .LVU585
 2341 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2342 0016 002B     		cmp	r3, #0
 2343 0018 3DD1     		bne	.L119
 2344              	.LBB1159:
1070:Veno-Echo.cpp ****         //update pickup
 2345              		.loc 21 1070 9 is_stmt 1 view .LVU586
1072:Veno-Echo.cpp ****         {
 2346              		.loc 21 1072 9 view .LVU587
 2347 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2348 001c 0029     		cmp	r1, #0
 2349 001e 47D0     		beq	.L120
1074:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2350              		.loc 21 1074 13 view .LVU588
1075:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2351              		.loc 21 1075 30 is_stmt 0 view .LVU589
 2352 0020 6148     		ldr	r0, .L146+12
1076:Veno-Echo.cpp ****         } 
 2353              		.loc 21 1076 27 view .LVU590
 2354 0022 6249     		ldr	r1, .L146+16
1074:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2355              		.loc 21 1074 23 view .LVU591
 2356 0024 1370     		strb	r3, [r2]
1075:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2357              		.loc 21 1075 13 is_stmt 1 view .LVU592
1075:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 142


 2358              		.loc 21 1075 30 is_stmt 0 view .LVU593
 2359 0026 0370     		strb	r3, [r0]
1076:Veno-Echo.cpp ****         } 
 2360              		.loc 21 1076 13 is_stmt 1 view .LVU594
1076:Veno-Echo.cpp ****         } 
 2361              		.loc 21 1076 27 is_stmt 0 view .LVU595
 2362 0028 81ED000A 		vstr.32	s0, [r1]
 2363              	.L121:
1089:Veno-Echo.cpp **** 
 2364              		.loc 21 1089 9 is_stmt 1 view .LVU596
 2365              	.LVL96:
1091:Veno-Echo.cpp ****         {
 2366              		.loc 21 1091 9 view .LVU597
1099:Veno-Echo.cpp ****         }
 2367              		.loc 21 1099 13 view .LVU598
 2368              	.LBB1137:
 2369              	.LBI1137:
2019:Veno-Echo.cpp **** {
 2370              		.loc 21 2019 7 view .LVU599
 2371              	.LBB1138:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2372              		.loc 21 2021 5 view .LVU600
2022:Veno-Echo.cpp **** 
 2373              		.loc 21 2022 5 view .LVU601
 2374              	.LBE1138:
 2375              	.LBE1137:
1099:Veno-Echo.cpp ****         }
 2376              		.loc 21 1099 41 is_stmt 0 view .LVU602
 2377 002c 604A     		ldr	r2, .L146+20
 2378              	.LBB1142:
 2379              	.LBB1139:
2022:Veno-Echo.cpp **** 
 2380              		.loc 21 2022 39 view .LVU603
 2381 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2022:Veno-Echo.cpp **** 
 2382              		.loc 21 2022 49 view .LVU604
 2383 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2384              	.LBE1139:
 2385              	.LBE1142:
1099:Veno-Echo.cpp ****         }
 2386              		.loc 21 1099 41 view .LVU605
 2387 0036 5F4B     		ldr	r3, .L146+24
 2388              	.LBB1143:
 2389              	.LBB1140:
2022:Veno-Echo.cpp **** 
 2390              		.loc 21 2022 39 view .LVU606
 2391 0038 92ED007A 		vldr.32	s14, [r2]
2022:Veno-Echo.cpp **** 
 2392              		.loc 21 2022 12 view .LVU607
 2393 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2394 0040 D3ED007A 		vldr.32	s15, [r3]
2022:Veno-Echo.cpp **** 
 2395              		.loc 21 2022 39 view .LVU608
 2396 0044 36EEC77A 		vsub.f32	s14, s13, s14
2022:Veno-Echo.cpp **** 
 2397              		.loc 21 2022 49 view .LVU609
 2398 0048 37EE657A 		vsub.f32	s14, s14, s11
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 143


2022:Veno-Echo.cpp **** 
 2399              		.loc 21 2022 12 view .LVU610
 2400 004c E7EE067A 		vfma.f32	s15, s14, s12
 2401              	.LVL97:
2024:Veno-Echo.cpp ****     {
 2402              		.loc 21 2024 5 is_stmt 1 view .LVU611
 2403 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2404 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2405 0058 00F19A80 		bmi	.L144
2029:Veno-Echo.cpp ****     {
 2406              		.loc 21 2029 5 view .LVU612
2031:Veno-Echo.cpp ****     }
 2407              		.loc 21 2031 16 is_stmt 0 view .LVU613
 2408 005c F4EE667A 		vcmp.f32	s15, s13
 2409 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2410 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2411              	.LVL98:
 2412              	.L126:
2031:Veno-Echo.cpp ****     }
 2413              		.loc 21 2031 16 view .LVU614
 2414              	.LBE1140:
 2415              	.LBE1143:
1102:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2416              		.loc 21 1102 9 is_stmt 1 view .LVU615
1102:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2417              		.loc 21 1102 37 is_stmt 0 view .LVU616
 2418 0068 B0EE670A 		vmov.f32	s0, s15
 2419              	.LVL99:
1102:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2420              		.loc 21 1102 37 view .LVU617
 2421 006c 0020     		movs	r0, #0
 2422 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2423 0072 DFED510A 		vldr.32	s1, .L146+28
 2424 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2425              	.LVL100:
1103:Veno-Echo.cpp ****     }
 2426              		.loc 21 1103 9 is_stmt 1 view .LVU618
 2427              	.LBB1144:
 2428              	.LBI1144:
 2429              		.file 26 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 144


  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 145


  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 146


 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2430              		.loc 26 135 13 view .LVU619
 2431              	.LBB1145:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2432              		.loc 26 137 5 view .LVU620
 2433              		.loc 26 137 9 is_stmt 0 view .LVU621
 2434 007a 504B     		ldr	r3, .L146+32
 2435 007c 9FED507A 		vldr.32	s14, .L146+36
 2436 0080 D3ED007A 		vldr.32	s15, [r3]
 2437              		.loc 26 137 24 view .LVU622
 2438 0084 30EE670A 		vsub.f32	s0, s0, s15
 2439              	.LVL101:
 2440              		.loc 26 137 24 view .LVU623
 2441              	.LBE1145:
 2442              	.LBE1144:
 2443              	.LBE1159:
 2444              	.LBE1180:
1139:Veno-Echo.cpp **** 
 2445              		.loc 21 1139 1 view .LVU624
 2446 0088 BDEC028B 		vldm	sp!, {d8}
 2447              		.cfi_remember_state
 2448              		.cfi_restore 80
 2449              		.cfi_restore 81
 2450              		.cfi_def_cfa_offset 8
 2451              	.LBB1181:
 2452              	.LBB1160:
 2453              	.LBB1147:
 2454              	.LBB1146:
 2455              		.loc 26 137 9 view .LVU625
 2456 008c E0EE077A 		vfma.f32	s15, s0, s14
 2457 0090 C3ED007A 		vstr.32	s15, [r3]
 2458              	.LBE1146:
 2459              	.LBE1147:
 2460              	.LBE1160:
 2461              	.LBE1181:
1139:Veno-Echo.cpp **** 
 2462              		.loc 21 1139 1 view .LVU626
 2463 0094 10BD     		pop	{r4, pc}
 2464              	.LVL102:
 2465              	.L119:
 2466              		.cfi_restore_state
 2467              	.LBB1182:
 2468              	.LBB1161:
1107:Veno-Echo.cpp **** 
 2469              		.loc 21 1107 9 is_stmt 1 view .LVU627
1109:Veno-Echo.cpp ****         {
 2470              		.loc 21 1109 9 view .LVU628
 2471 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2472 0098 002B     		cmp	r3, #0
 2473 009a 3ED1     		bne	.L129
1111:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2474              		.loc 21 1111 13 view .LVU629
1111:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 147


 2475              		.loc 21 1111 23 is_stmt 0 view .LVU630
 2476 009c 0124     		movs	r4, #1
1112:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2477              		.loc 21 1112 29 view .LVU631
 2478 009e 4948     		ldr	r0, .L146+40
1113:Veno-Echo.cpp ****         }
 2479              		.loc 21 1113 26 view .LVU632
 2480 00a0 4949     		ldr	r1, .L146+44
1111:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2481              		.loc 21 1111 23 view .LVU633
 2482 00a2 1470     		strb	r4, [r2]
1112:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2483              		.loc 21 1112 13 is_stmt 1 view .LVU634
1112:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2484              		.loc 21 1112 29 is_stmt 0 view .LVU635
 2485 00a4 0370     		strb	r3, [r0]
1113:Veno-Echo.cpp ****         }
 2486              		.loc 21 1113 13 is_stmt 1 view .LVU636
1113:Veno-Echo.cpp ****         }
 2487              		.loc 21 1113 26 is_stmt 0 view .LVU637
 2488 00a6 81ED000A 		vstr.32	s0, [r1]
 2489              	.L118:
1113:Veno-Echo.cpp ****         }
 2490              		.loc 21 1113 26 view .LVU638
 2491              	.LBE1161:
 2492              	.LBE1182:
1139:Veno-Echo.cpp **** 
 2493              		.loc 21 1139 1 view .LVU639
 2494 00aa BDEC028B 		vldm	sp!, {d8}
 2495              		.cfi_remember_state
 2496              		.cfi_restore 80
 2497              		.cfi_restore 81
 2498              		.cfi_def_cfa_offset 8
 2499 00ae 10BD     		pop	{r4, pc}
 2500              	.L120:
 2501              		.cfi_restore_state
 2502              	.LBB1183:
 2503              	.LBB1177:
1080:Veno-Echo.cpp ****             {
 2504              		.loc 21 1080 13 is_stmt 1 view .LVU640
1080:Veno-Echo.cpp ****             {
 2505              		.loc 21 1080 16 is_stmt 0 view .LVU641
 2506 00b0 3D4B     		ldr	r3, .L146+12
1080:Veno-Echo.cpp ****             {
 2507              		.loc 21 1080 13 view .LVU642
 2508 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2509 00b4 7AB9     		cbnz	r2, .L122
1082:Veno-Echo.cpp ****                 {
 2510              		.loc 21 1082 17 is_stmt 1 view .LVU643
 2511              	.LVL103:
 2512              	.LBB1148:
 2513              	.LBI1148:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2514              		.loc 22 75 3 view .LVU644
 2515              	.LBB1149:
 2516              		.loc 22 76 5 view .LVU645
 2517              		.loc 22 76 5 is_stmt 0 view .LVU646
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 148


 2518              	.LBE1149:
 2519              	.LBE1148:
1082:Veno-Echo.cpp ****                 {
 2520              		.loc 21 1082 23 view .LVU647
 2521 00b6 3D4A     		ldr	r2, .L146+16
1082:Veno-Echo.cpp ****                 {
 2522              		.loc 21 1082 17 view .LVU648
 2523 00b8 9FED447A 		vldr.32	s14, .L146+48
1082:Veno-Echo.cpp ****                 {
 2524              		.loc 21 1082 23 view .LVU649
 2525 00bc D2ED007A 		vldr.32	s15, [r2]
 2526 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2527              	.LBB1151:
 2528              	.LBB1150:
 2529              		.loc 22 76 31 view .LVU650
 2530 00c4 F0EEE77A 		vabs.f32	s15, s15
 2531              	.LBE1150:
 2532              	.LBE1151:
1082:Veno-Echo.cpp ****                 {
 2533              		.loc 21 1082 17 view .LVU651
 2534 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2535 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2536 00d0 ACDD     		ble	.L121
1084:Veno-Echo.cpp ****                 }
 2537              		.loc 21 1084 21 is_stmt 1 view .LVU652
1084:Veno-Echo.cpp ****                 }
 2538              		.loc 21 1084 38 is_stmt 0 view .LVU653
 2539 00d2 0122     		movs	r2, #1
 2540 00d4 1A70     		strb	r2, [r3]
 2541              	.L122:
1089:Veno-Echo.cpp **** 
 2542              		.loc 21 1089 9 is_stmt 1 view .LVU654
 2543              	.LVL104:
1091:Veno-Echo.cpp ****         {
 2544              		.loc 21 1091 9 view .LVU655
1093:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2545              		.loc 21 1093 13 view .LVU656
 2546              	.LBB1152:
 2547              	.LBI1152:
2019:Veno-Echo.cpp **** {
 2548              		.loc 21 2019 7 view .LVU657
 2549              	.LBB1153:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2550              		.loc 21 2021 5 view .LVU658
2022:Veno-Echo.cpp **** 
 2551              		.loc 21 2022 5 view .LVU659
 2552              	.LBE1153:
 2553              	.LBE1152:
1093:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2554              		.loc 21 1093 41 is_stmt 0 view .LVU660
 2555 00d6 364B     		ldr	r3, .L146+20
 2556              	.LBB1156:
 2557              	.LBB1154:
2022:Veno-Echo.cpp **** 
 2558              		.loc 21 2022 39 view .LVU661
 2559 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2022:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 149


 2560              		.loc 21 2022 49 view .LVU662
 2561 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2022:Veno-Echo.cpp **** 
 2562              		.loc 21 2022 39 view .LVU663
 2563 00e0 D3ED007A 		vldr.32	s15, [r3]
2022:Veno-Echo.cpp **** 
 2564              		.loc 21 2022 12 view .LVU664
 2565 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2022:Veno-Echo.cpp **** 
 2566              		.loc 21 2022 39 view .LVU665
 2567 00e8 77EE677A 		vsub.f32	s15, s14, s15
2022:Veno-Echo.cpp **** 
 2568              		.loc 21 2022 49 view .LVU666
 2569 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2022:Veno-Echo.cpp **** 
 2570              		.loc 21 2022 12 view .LVU667
 2571 00f0 B0EE406A 		vmov.f32	s12, s0
 2572 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2024:Veno-Echo.cpp ****     {
 2573              		.loc 21 2024 5 view .LVU668
 2574 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2022:Veno-Echo.cpp **** 
 2575              		.loc 21 2022 12 view .LVU669
 2576 00fc F0EE467A 		vmov.f32	s15, s12
 2577              	.LVL105:
2024:Veno-Echo.cpp ****     {
 2578              		.loc 21 2024 5 is_stmt 1 view .LVU670
 2579 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2580 0104 47D4     		bmi	.L145
2029:Veno-Echo.cpp ****     {
 2581              		.loc 21 2029 5 view .LVU671
2031:Veno-Echo.cpp ****     }
 2582              		.loc 21 2031 16 is_stmt 0 view .LVU672
 2583 0106 F4EE477A 		vcmp.f32	s15, s14
 2584 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2585 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2586              	.L124:
 2587              	.LVL106:
2034:Veno-Echo.cpp **** }
 2588              		.loc 21 2034 5 is_stmt 1 view .LVU673
2034:Veno-Echo.cpp **** }
 2589              		.loc 21 2034 5 is_stmt 0 view .LVU674
 2590              	.LBE1154:
 2591              	.LBE1156:
1094:Veno-Echo.cpp ****         }
 2592              		.loc 21 1094 13 is_stmt 1 view .LVU675
1094:Veno-Echo.cpp ****         }
 2593              		.loc 21 1094 28 is_stmt 0 view .LVU676
 2594 0112 284B     		ldr	r3, .L146+24
 2595 0114 83ED000A 		vstr.32	s0, [r3]
 2596 0118 A6E7     		b	.L126
 2597              	.LVL107:
 2598              	.L129:
1094:Veno-Echo.cpp ****         }
 2599              		.loc 21 1094 28 view .LVU677
 2600              	.LBE1177:
 2601              	.LBB1178:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 150


1118:Veno-Echo.cpp ****             {
 2602              		.loc 21 1118 13 is_stmt 1 view .LVU678
1118:Veno-Echo.cpp ****             {
 2603              		.loc 21 1118 16 is_stmt 0 view .LVU679
 2604 011a 2A4B     		ldr	r3, .L146+40
1118:Veno-Echo.cpp ****             {
 2605              		.loc 21 1118 13 view .LVU680
 2606 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2607 011e 7AB9     		cbnz	r2, .L131
1120:Veno-Echo.cpp ****                 {
 2608              		.loc 21 1120 17 is_stmt 1 view .LVU681
 2609              	.LVL108:
 2610              	.LBB1162:
 2611              	.LBI1162:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2612              		.loc 22 75 3 view .LVU682
 2613              	.LBB1163:
 2614              		.loc 22 76 5 view .LVU683
 2615              		.loc 22 76 5 is_stmt 0 view .LVU684
 2616              	.LBE1163:
 2617              	.LBE1162:
1120:Veno-Echo.cpp ****                 {
 2618              		.loc 21 1120 23 view .LVU685
 2619 0120 294A     		ldr	r2, .L146+44
1120:Veno-Echo.cpp ****                 {
 2620              		.loc 21 1120 17 view .LVU686
 2621 0122 9FED2A7A 		vldr.32	s14, .L146+48
1120:Veno-Echo.cpp ****                 {
 2622              		.loc 21 1120 23 view .LVU687
 2623 0126 D2ED007A 		vldr.32	s15, [r2]
 2624 012a 70EE677A 		vsub.f32	s15, s0, s15
 2625              	.LBB1165:
 2626              	.LBB1164:
 2627              		.loc 22 76 31 view .LVU688
 2628 012e F0EEE77A 		vabs.f32	s15, s15
 2629              	.LBE1164:
 2630              	.LBE1165:
1120:Veno-Echo.cpp ****                 {
 2631              		.loc 21 1120 17 view .LVU689
 2632 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2633 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2634 013a B6DD     		ble	.L118
1122:Veno-Echo.cpp ****                 }
 2635              		.loc 21 1122 21 is_stmt 1 view .LVU690
1122:Veno-Echo.cpp ****                 }
 2636              		.loc 21 1122 37 is_stmt 0 view .LVU691
 2637 013c 0122     		movs	r2, #1
 2638 013e 1A70     		strb	r2, [r3]
 2639              	.L131:
1127:Veno-Echo.cpp ****         {
 2640              		.loc 21 1127 9 is_stmt 1 view .LVU692
 2641              	.LBB1166:
1129:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2642              		.loc 21 1129 13 view .LVU693
 2643              	.LVL109:
1130:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2644              		.loc 21 1130 13 view .LVU694
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 151


1130:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2645              		.loc 21 1130 29 is_stmt 0 view .LVU695
 2646 0140 9FED231A 		vldr.32	s2, .L146+52
 2647 0144 0120     		movs	r0, #1
 2648 0146 DFED230A 		vldr.32	s1, .L146+56
 2649 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2650              	.LVL110:
1130:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2651              		.loc 21 1130 29 view .LVU696
 2652 014e B0EE408A 		vmov.f32	s16, s0
 2653              	.LVL111:
1131:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2654              		.loc 21 1131 13 is_stmt 1 view .LVU697
1131:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2655              		.loc 21 1131 26 is_stmt 0 view .LVU698
 2656 0152 2148     		ldr	r0, .L146+60
 2657 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2658              	.LVL112:
1132:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2659              		.loc 21 1132 13 is_stmt 1 view .LVU699
1132:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2660              		.loc 21 1132 26 is_stmt 0 view .LVU700
 2661 0158 2048     		ldr	r0, .L146+64
 2662 015a B0EE480A 		vmov.f32	s0, s16
 2663 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2664              	.LVL113:
1133:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2665              		.loc 21 1133 13 is_stmt 1 view .LVU701
1133:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2666              		.loc 21 1133 31 is_stmt 0 view .LVU702
 2667 0162 B0EE480A 		vmov.f32	s0, s16
 2668 0166 1E48     		ldr	r0, .L146+68
 2669 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2670              	.LVL114:
1134:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2671              		.loc 21 1134 13 is_stmt 1 view .LVU703
1134:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2672              		.loc 21 1134 31 is_stmt 0 view .LVU704
 2673 016c B0EE480A 		vmov.f32	s0, s16
 2674 0170 1C48     		ldr	r0, .L146+72
 2675 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2676              	.LVL115:
1135:Veno-Echo.cpp ****             save_flag = true;
 2677              		.loc 21 1135 13 is_stmt 1 view .LVU705
1135:Veno-Echo.cpp ****             save_flag = true;
 2678              		.loc 21 1135 35 is_stmt 0 view .LVU706
 2679 0176 1C49     		ldr	r1, .L146+76
 2680              	.LBB1167:
 2681              	.LBB1168:
 2682              	.LBB1169:
 2683              	.LBB1170:
 2684              	.LBB1171:
 2685              		.loc 23 397 18 view .LVU707
 2686 0178 1C4B     		ldr	r3, .L146+80
 2687 017a 0122     		movs	r2, #1
 2688              	.LBE1171:
 2689              	.LBE1170:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 152


 2690              	.LBE1169:
 2691              	.LBE1168:
 2692              	.LBE1167:
1135:Veno-Echo.cpp ****             save_flag = true;
 2693              		.loc 21 1135 35 view .LVU708
 2694 017c 81ED048A 		vstr.32	s16, [r1, #16]
1136:Veno-Echo.cpp ****         }
 2695              		.loc 21 1136 13 is_stmt 1 view .LVU709
 2696              	.LVL116:
 2697              	.LBB1176:
 2698              	.LBI1167:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2699              		.loc 24 80 5 view .LVU710
 2700              	.LBB1175:
 2701              		.loc 24 81 7 view .LVU711
 2702              	.LBB1174:
 2703              	.LBI1169:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2704              		.loc 23 288 7 view .LVU712
 2705              	.LBB1173:
 2706              	.LBI1170:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2707              		.loc 23 390 7 view .LVU713
 2708              	.LBB1172:
 2709              		.loc 23 397 18 is_stmt 0 view .LVU714
 2710 0180 BFF35B8F 		dmb	ish
 2711 0184 1A70     		strb	r2, [r3]
 2712 0186 BFF35B8F 		dmb	ish
 2713              	.LVL117:
 2714              		.loc 23 397 18 view .LVU715
 2715              	.LBE1172:
 2716              	.LBE1173:
 2717              	.LBE1174:
 2718              	.LBE1175:
 2719              	.LBE1176:
 2720              	.LBE1166:
 2721              	.LBE1178:
 2722              	.LBE1183:
1139:Veno-Echo.cpp **** 
 2723              		.loc 21 1139 1 view .LVU716
 2724 018a BDEC028B 		vldm	sp!, {d8}
 2725              		.cfi_remember_state
 2726              		.cfi_restore 80
 2727              		.cfi_restore 81
 2728              		.cfi_def_cfa_offset 8
 2729              	.LVL118:
1139:Veno-Echo.cpp **** 
 2730              		.loc 21 1139 1 view .LVU717
 2731 018e 10BD     		pop	{r4, pc}
 2732              	.LVL119:
 2733              	.L144:
 2734              		.cfi_restore_state
 2735              	.LBB1184:
 2736              	.LBB1179:
 2737              	.LBB1157:
 2738              	.LBB1141:
2026:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 153


 2739              		.loc 21 2026 16 view .LVU718
 2740 0190 DFED097A 		vldr.32	s15, .L146+28
 2741              	.LVL120:
2026:Veno-Echo.cpp ****     }
 2742              		.loc 21 2026 16 view .LVU719
 2743 0194 68E7     		b	.L126
 2744              	.LVL121:
 2745              	.L145:
2026:Veno-Echo.cpp ****     }
 2746              		.loc 21 2026 16 view .LVU720
 2747              	.LBE1141:
 2748              	.LBE1157:
 2749              	.LBB1158:
 2750              	.LBB1155:
 2751 0196 DFED087A 		vldr.32	s15, .L146+28
 2752 019a BAE7     		b	.L124
 2753              	.L147:
 2754              		.align	2
 2755              	.L146:
 2756 019c 18000000 		.word	.LANCHOR4+24
 2757 01a0 00000000 		.word	.LANCHOR7
 2758 01a4 00000000 		.word	.LANCHOR28
 2759 01a8 00000000 		.word	.LANCHOR29
 2760 01ac 00000000 		.word	.LANCHOR30
 2761 01b0 00000000 		.word	.LANCHOR27
 2762 01b4 00000000 		.word	.LANCHOR31
 2763 01b8 00000000 		.word	0
 2764 01bc 00000000 		.word	.LANCHOR32
 2765 01c0 6F12033D 		.word	1023611503
 2766 01c4 00000000 		.word	.LANCHOR33
 2767 01c8 00000000 		.word	.LANCHOR34
 2768 01cc 0AD7A33B 		.word	1000593162
 2769 01d0 00004844 		.word	1145569280
 2770 01d4 0000C842 		.word	1120403456
 2771 01d8 00000000 		.word	.LANCHOR35
 2772 01dc 00000000 		.word	.LANCHOR36
 2773 01e0 00000000 		.word	.LANCHOR37
 2774 01e4 00000000 		.word	.LANCHOR38
 2775 01e8 00000000 		.word	.LANCHOR15
 2776 01ec 00000000 		.word	.LANCHOR16
 2777              	.LBE1155:
 2778              	.LBE1158:
 2779              	.LBE1179:
 2780              	.LBE1184:
 2781              		.cfi_endproc
 2782              	.LFE4317:
 2784              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2785              		.align	1
 2786              		.p2align 2,,3
 2787              		.global	_Z19Update_feedbackR_CVv
 2788              		.syntax unified
 2789              		.thumb
 2790              		.thumb_func
 2791              		.fpu fpv5-d16
 2793              	_Z19Update_feedbackR_CVv:
 2794              	.LFB4318:
1142:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 154


 2795              		.loc 21 1142 1 is_stmt 1 view -0
 2796              		.cfi_startproc
 2797              		@ args = 0, pretend = 0, frame = 0
 2798              		@ frame_needed = 0, uses_anonymous_args = 0
1143:Veno-Echo.cpp **** }
 2799              		.loc 21 1143 5 view .LVU722
1142:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2800              		.loc 21 1142 1 is_stmt 0 view .LVU723
 2801 0000 08B5     		push	{r3, lr}
 2802              		.cfi_def_cfa_offset 8
 2803              		.cfi_offset 3, -8
 2804              		.cfi_offset 14, -4
1143:Veno-Echo.cpp **** }
 2805              		.loc 21 1143 35 view .LVU724
 2806 0002 0321     		movs	r1, #3
 2807 0004 0348     		ldr	r0, .L150
 2808 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2809              	.LVL122:
1143:Veno-Echo.cpp **** }
 2810              		.loc 21 1143 18 view .LVU725
 2811 000a 034B     		ldr	r3, .L150+4
 2812 000c 83ED000A 		vstr.32	s0, [r3]
1144:Veno-Echo.cpp **** 
 2813              		.loc 21 1144 1 view .LVU726
 2814 0010 08BD     		pop	{r3, pc}
 2815              	.L151:
 2816 0012 00BF     		.align	2
 2817              	.L150:
 2818 0014 18000000 		.word	.LANCHOR4+24
 2819 0018 00000000 		.word	.LANCHOR39
 2820              		.cfi_endproc
 2821              	.LFE4318:
 2823              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2824              		.align	1
 2825              		.p2align 2,,3
 2826              		.global	_Z16Update_feedbackRv
 2827              		.syntax unified
 2828              		.thumb
 2829              		.thumb_func
 2830              		.fpu fpv5-d16
 2832              	_Z16Update_feedbackRv:
 2833              	.LFB4319:
1147:Veno-Echo.cpp ****     static bool lastShift{};
 2834              		.loc 21 1147 1 is_stmt 1 view -0
 2835              		.cfi_startproc
 2836              		@ args = 0, pretend = 0, frame = 0
 2837              		@ frame_needed = 0, uses_anonymous_args = 0
1148:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2838              		.loc 21 1148 5 view .LVU728
1149:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2839              		.loc 21 1149 5 view .LVU729
1150:Veno-Echo.cpp **** 
 2840              		.loc 21 1150 5 view .LVU730
1152:Veno-Echo.cpp **** 
 2841              		.loc 21 1152 5 view .LVU731
1155:Veno-Echo.cpp **** 
 2842              		.loc 21 1155 5 view .LVU732
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 155


1155:Veno-Echo.cpp **** 
 2843              		.loc 21 1155 43 is_stmt 0 view .LVU733
 2844 0000 0422     		movs	r2, #4
 2845 0002 0721     		movs	r1, #7
 2846 0004 6548     		ldr	r0, .L180
1147:Veno-Echo.cpp ****     static bool lastShift{};
 2847              		.loc 21 1147 1 view .LVU734
 2848 0006 10B5     		push	{r4, lr}
 2849              		.cfi_def_cfa_offset 8
 2850              		.cfi_offset 4, -8
 2851              		.cfi_offset 14, -4
 2852 0008 2DED028B 		vpush.64	{d8}
 2853              		.cfi_def_cfa_offset 16
 2854              		.cfi_offset 80, -16
 2855              		.cfi_offset 81, -12
1155:Veno-Echo.cpp **** 
 2856              		.loc 21 1155 43 view .LVU735
 2857 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2858              	.LVL123:
 2859              	.LBB1185:
1157:Veno-Echo.cpp ****     {   
 2860              		.loc 21 1157 9 view .LVU736
 2861 0010 634B     		ldr	r3, .L180+4
 2862              	.LVL124:
1157:Veno-Echo.cpp ****     {   
 2863              		.loc 21 1157 9 view .LVU737
 2864              	.LBE1185:
1157:Veno-Echo.cpp ****     {   
 2865              		.loc 21 1157 5 is_stmt 1 view .LVU738
 2866              	.LBB1230:
 2867              	.LBB1186:
1161:Veno-Echo.cpp ****         {
 2868              		.loc 21 1161 19 is_stmt 0 view .LVU739
 2869 0012 644A     		ldr	r2, .L180+8
 2870              	.LBE1186:
1157:Veno-Echo.cpp ****     {   
 2871              		.loc 21 1157 5 view .LVU740
 2872 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2873 0016 002B     		cmp	r3, #0
 2874 0018 3DD1     		bne	.L153
 2875              	.LBB1209:
1159:Veno-Echo.cpp ****         //update pickup
 2876              		.loc 21 1159 9 is_stmt 1 view .LVU741
1161:Veno-Echo.cpp ****         {
 2877              		.loc 21 1161 9 view .LVU742
 2878 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2879 001c 0029     		cmp	r1, #0
 2880 001e 47D0     		beq	.L154
1163:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2881              		.loc 21 1163 13 view .LVU743
1164:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2882              		.loc 21 1164 30 is_stmt 0 view .LVU744
 2883 0020 6148     		ldr	r0, .L180+12
1165:Veno-Echo.cpp ****         } 
 2884              		.loc 21 1165 27 view .LVU745
 2885 0022 6249     		ldr	r1, .L180+16
1163:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 156


 2886              		.loc 21 1163 23 view .LVU746
 2887 0024 1370     		strb	r3, [r2]
1164:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2888              		.loc 21 1164 13 is_stmt 1 view .LVU747
1164:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2889              		.loc 21 1164 30 is_stmt 0 view .LVU748
 2890 0026 0370     		strb	r3, [r0]
1165:Veno-Echo.cpp ****         } 
 2891              		.loc 21 1165 13 is_stmt 1 view .LVU749
1165:Veno-Echo.cpp ****         } 
 2892              		.loc 21 1165 27 is_stmt 0 view .LVU750
 2893 0028 81ED000A 		vstr.32	s0, [r1]
 2894              	.L155:
1178:Veno-Echo.cpp ****         
 2895              		.loc 21 1178 9 is_stmt 1 view .LVU751
 2896              	.LVL125:
1180:Veno-Echo.cpp ****         {
 2897              		.loc 21 1180 9 view .LVU752
1188:Veno-Echo.cpp ****         }
 2898              		.loc 21 1188 13 view .LVU753
 2899              	.LBB1187:
 2900              	.LBI1187:
2019:Veno-Echo.cpp **** {
 2901              		.loc 21 2019 7 view .LVU754
 2902              	.LBB1188:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2903              		.loc 21 2021 5 view .LVU755
2022:Veno-Echo.cpp **** 
 2904              		.loc 21 2022 5 view .LVU756
 2905              	.LBE1188:
 2906              	.LBE1187:
1188:Veno-Echo.cpp ****         }
 2907              		.loc 21 1188 41 is_stmt 0 view .LVU757
 2908 002c 604A     		ldr	r2, .L180+20
 2909              	.LBB1192:
 2910              	.LBB1189:
2022:Veno-Echo.cpp **** 
 2911              		.loc 21 2022 39 view .LVU758
 2912 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2022:Veno-Echo.cpp **** 
 2913              		.loc 21 2022 49 view .LVU759
 2914 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2915              	.LBE1189:
 2916              	.LBE1192:
1188:Veno-Echo.cpp ****         }
 2917              		.loc 21 1188 41 view .LVU760
 2918 0036 5F4B     		ldr	r3, .L180+24
 2919              	.LBB1193:
 2920              	.LBB1190:
2022:Veno-Echo.cpp **** 
 2921              		.loc 21 2022 39 view .LVU761
 2922 0038 92ED007A 		vldr.32	s14, [r2]
2022:Veno-Echo.cpp **** 
 2923              		.loc 21 2022 12 view .LVU762
 2924 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2925 0040 D3ED007A 		vldr.32	s15, [r3]
2022:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 157


 2926              		.loc 21 2022 39 view .LVU763
 2927 0044 36EEC77A 		vsub.f32	s14, s13, s14
2022:Veno-Echo.cpp **** 
 2928              		.loc 21 2022 49 view .LVU764
 2929 0048 37EE657A 		vsub.f32	s14, s14, s11
2022:Veno-Echo.cpp **** 
 2930              		.loc 21 2022 12 view .LVU765
 2931 004c E7EE067A 		vfma.f32	s15, s14, s12
 2932              	.LVL126:
2024:Veno-Echo.cpp ****     {
 2933              		.loc 21 2024 5 is_stmt 1 view .LVU766
 2934 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2935 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2936 0058 00F19A80 		bmi	.L178
2029:Veno-Echo.cpp ****     {
 2937              		.loc 21 2029 5 view .LVU767
2031:Veno-Echo.cpp ****     }
 2938              		.loc 21 2031 16 is_stmt 0 view .LVU768
 2939 005c F4EE667A 		vcmp.f32	s15, s13
 2940 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2941 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2942              	.LVL127:
 2943              	.L160:
2031:Veno-Echo.cpp ****     }
 2944              		.loc 21 2031 16 view .LVU769
 2945              	.LBE1190:
 2946              	.LBE1193:
1191:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2947              		.loc 21 1191 9 is_stmt 1 view .LVU770
1191:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2948              		.loc 21 1191 37 is_stmt 0 view .LVU771
 2949 0068 B0EE670A 		vmov.f32	s0, s15
 2950              	.LVL128:
1191:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2951              		.loc 21 1191 37 view .LVU772
 2952 006c 0020     		movs	r0, #0
 2953 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2954 0072 DFED510A 		vldr.32	s1, .L180+28
 2955 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2956              	.LVL129:
1192:Veno-Echo.cpp ****     }
 2957              		.loc 21 1192 9 is_stmt 1 view .LVU773
 2958              	.LBB1194:
 2959              	.LBI1194:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2960              		.loc 26 135 13 view .LVU774
 2961              	.LBB1195:
 2962              		.loc 26 137 5 view .LVU775
 2963              		.loc 26 137 9 is_stmt 0 view .LVU776
 2964 007a 504B     		ldr	r3, .L180+32
 2965 007c 9FED507A 		vldr.32	s14, .L180+36
 2966 0080 D3ED007A 		vldr.32	s15, [r3]
 2967              		.loc 26 137 24 view .LVU777
 2968 0084 30EE670A 		vsub.f32	s0, s0, s15
 2969              	.LVL130:
 2970              		.loc 26 137 24 view .LVU778
 2971              	.LBE1195:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 158


 2972              	.LBE1194:
 2973              	.LBE1209:
 2974              	.LBE1230:
1229:Veno-Echo.cpp **** 
 2975              		.loc 21 1229 1 view .LVU779
 2976 0088 BDEC028B 		vldm	sp!, {d8}
 2977              		.cfi_remember_state
 2978              		.cfi_restore 80
 2979              		.cfi_restore 81
 2980              		.cfi_def_cfa_offset 8
 2981              	.LBB1231:
 2982              	.LBB1210:
 2983              	.LBB1197:
 2984              	.LBB1196:
 2985              		.loc 26 137 9 view .LVU780
 2986 008c E0EE077A 		vfma.f32	s15, s0, s14
 2987 0090 C3ED007A 		vstr.32	s15, [r3]
 2988              	.LBE1196:
 2989              	.LBE1197:
 2990              	.LBE1210:
 2991              	.LBE1231:
1229:Veno-Echo.cpp **** 
 2992              		.loc 21 1229 1 view .LVU781
 2993 0094 10BD     		pop	{r4, pc}
 2994              	.LVL131:
 2995              	.L153:
 2996              		.cfi_restore_state
 2997              	.LBB1232:
 2998              	.LBB1211:
1197:Veno-Echo.cpp **** 
 2999              		.loc 21 1197 9 is_stmt 1 view .LVU782
1199:Veno-Echo.cpp ****         {
 3000              		.loc 21 1199 10 view .LVU783
 3001 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3002 0098 002B     		cmp	r3, #0
 3003 009a 3ED1     		bne	.L163
1201:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 3004              		.loc 21 1201 13 view .LVU784
1201:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 3005              		.loc 21 1201 23 is_stmt 0 view .LVU785
 3006 009c 0124     		movs	r4, #1
1202:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 3007              		.loc 21 1202 29 view .LVU786
 3008 009e 4948     		ldr	r0, .L180+40
1203:Veno-Echo.cpp ****         }
 3009              		.loc 21 1203 26 view .LVU787
 3010 00a0 4949     		ldr	r1, .L180+44
1201:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 3011              		.loc 21 1201 23 view .LVU788
 3012 00a2 1470     		strb	r4, [r2]
1202:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 3013              		.loc 21 1202 13 is_stmt 1 view .LVU789
1202:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 3014              		.loc 21 1202 29 is_stmt 0 view .LVU790
 3015 00a4 0370     		strb	r3, [r0]
1203:Veno-Echo.cpp ****         }
 3016              		.loc 21 1203 13 is_stmt 1 view .LVU791
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 159


1203:Veno-Echo.cpp ****         }
 3017              		.loc 21 1203 26 is_stmt 0 view .LVU792
 3018 00a6 81ED000A 		vstr.32	s0, [r1]
 3019              	.L152:
1203:Veno-Echo.cpp ****         }
 3020              		.loc 21 1203 26 view .LVU793
 3021              	.LBE1211:
 3022              	.LBE1232:
1229:Veno-Echo.cpp **** 
 3023              		.loc 21 1229 1 view .LVU794
 3024 00aa BDEC028B 		vldm	sp!, {d8}
 3025              		.cfi_remember_state
 3026              		.cfi_restore 80
 3027              		.cfi_restore 81
 3028              		.cfi_def_cfa_offset 8
 3029 00ae 10BD     		pop	{r4, pc}
 3030              	.L154:
 3031              		.cfi_restore_state
 3032              	.LBB1233:
 3033              	.LBB1227:
1169:Veno-Echo.cpp ****             {
 3034              		.loc 21 1169 13 is_stmt 1 view .LVU795
1169:Veno-Echo.cpp ****             {
 3035              		.loc 21 1169 16 is_stmt 0 view .LVU796
 3036 00b0 3D4B     		ldr	r3, .L180+12
1169:Veno-Echo.cpp ****             {
 3037              		.loc 21 1169 13 view .LVU797
 3038 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3039 00b4 7AB9     		cbnz	r2, .L156
1171:Veno-Echo.cpp ****                 {
 3040              		.loc 21 1171 17 is_stmt 1 view .LVU798
 3041              	.LVL132:
 3042              	.LBB1198:
 3043              	.LBI1198:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3044              		.loc 22 75 3 view .LVU799
 3045              	.LBB1199:
 3046              		.loc 22 76 5 view .LVU800
 3047              		.loc 22 76 5 is_stmt 0 view .LVU801
 3048              	.LBE1199:
 3049              	.LBE1198:
1171:Veno-Echo.cpp ****                 {
 3050              		.loc 21 1171 23 view .LVU802
 3051 00b6 3D4A     		ldr	r2, .L180+16
1171:Veno-Echo.cpp ****                 {
 3052              		.loc 21 1171 17 view .LVU803
 3053 00b8 9FED447A 		vldr.32	s14, .L180+48
1171:Veno-Echo.cpp ****                 {
 3054              		.loc 21 1171 23 view .LVU804
 3055 00bc D2ED007A 		vldr.32	s15, [r2]
 3056 00c0 70EE677A 		vsub.f32	s15, s0, s15
 3057              	.LBB1201:
 3058              	.LBB1200:
 3059              		.loc 22 76 31 view .LVU805
 3060 00c4 F0EEE77A 		vabs.f32	s15, s15
 3061              	.LBE1200:
 3062              	.LBE1201:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 160


1171:Veno-Echo.cpp ****                 {
 3063              		.loc 21 1171 17 view .LVU806
 3064 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 3065 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3066 00d0 ACDD     		ble	.L155
1173:Veno-Echo.cpp ****                 }
 3067              		.loc 21 1173 21 is_stmt 1 view .LVU807
1173:Veno-Echo.cpp ****                 }
 3068              		.loc 21 1173 38 is_stmt 0 view .LVU808
 3069 00d2 0122     		movs	r2, #1
 3070 00d4 1A70     		strb	r2, [r3]
 3071              	.L156:
1178:Veno-Echo.cpp ****         
 3072              		.loc 21 1178 9 is_stmt 1 view .LVU809
 3073              	.LVL133:
1180:Veno-Echo.cpp ****         {
 3074              		.loc 21 1180 9 view .LVU810
1182:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3075              		.loc 21 1182 13 view .LVU811
 3076              	.LBB1202:
 3077              	.LBI1202:
2019:Veno-Echo.cpp **** {
 3078              		.loc 21 2019 7 view .LVU812
 3079              	.LBB1203:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3080              		.loc 21 2021 5 view .LVU813
2022:Veno-Echo.cpp **** 
 3081              		.loc 21 2022 5 view .LVU814
 3082              	.LBE1203:
 3083              	.LBE1202:
1182:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3084              		.loc 21 1182 41 is_stmt 0 view .LVU815
 3085 00d6 364B     		ldr	r3, .L180+20
 3086              	.LBB1206:
 3087              	.LBB1204:
2022:Veno-Echo.cpp **** 
 3088              		.loc 21 2022 39 view .LVU816
 3089 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2022:Veno-Echo.cpp **** 
 3090              		.loc 21 2022 49 view .LVU817
 3091 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2022:Veno-Echo.cpp **** 
 3092              		.loc 21 2022 39 view .LVU818
 3093 00e0 D3ED007A 		vldr.32	s15, [r3]
2022:Veno-Echo.cpp **** 
 3094              		.loc 21 2022 12 view .LVU819
 3095 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2022:Veno-Echo.cpp **** 
 3096              		.loc 21 2022 39 view .LVU820
 3097 00e8 77EE677A 		vsub.f32	s15, s14, s15
2022:Veno-Echo.cpp **** 
 3098              		.loc 21 2022 49 view .LVU821
 3099 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2022:Veno-Echo.cpp **** 
 3100              		.loc 21 2022 12 view .LVU822
 3101 00f0 B0EE406A 		vmov.f32	s12, s0
 3102 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 161


2024:Veno-Echo.cpp ****     {
 3103              		.loc 21 2024 5 view .LVU823
 3104 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2022:Veno-Echo.cpp **** 
 3105              		.loc 21 2022 12 view .LVU824
 3106 00fc F0EE467A 		vmov.f32	s15, s12
 3107              	.LVL134:
2024:Veno-Echo.cpp ****     {
 3108              		.loc 21 2024 5 is_stmt 1 view .LVU825
 3109 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3110 0104 47D4     		bmi	.L179
2029:Veno-Echo.cpp ****     {
 3111              		.loc 21 2029 5 view .LVU826
2031:Veno-Echo.cpp ****     }
 3112              		.loc 21 2031 16 is_stmt 0 view .LVU827
 3113 0106 F4EE477A 		vcmp.f32	s15, s14
 3114 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3115 010e 77FE277A 		vselgt.f32	s15, s14, s15
 3116              	.L158:
 3117              	.LVL135:
2034:Veno-Echo.cpp **** }
 3118              		.loc 21 2034 5 is_stmt 1 view .LVU828
2034:Veno-Echo.cpp **** }
 3119              		.loc 21 2034 5 is_stmt 0 view .LVU829
 3120              	.LBE1204:
 3121              	.LBE1206:
1183:Veno-Echo.cpp ****         }
 3122              		.loc 21 1183 13 is_stmt 1 view .LVU830
1183:Veno-Echo.cpp ****         }
 3123              		.loc 21 1183 28 is_stmt 0 view .LVU831
 3124 0112 284B     		ldr	r3, .L180+24
 3125 0114 83ED000A 		vstr.32	s0, [r3]
 3126 0118 A6E7     		b	.L160
 3127              	.LVL136:
 3128              	.L163:
1183:Veno-Echo.cpp ****         }
 3129              		.loc 21 1183 28 view .LVU832
 3130              	.LBE1227:
 3131              	.LBB1228:
1208:Veno-Echo.cpp ****             {
 3132              		.loc 21 1208 13 is_stmt 1 view .LVU833
1208:Veno-Echo.cpp ****             {
 3133              		.loc 21 1208 16 is_stmt 0 view .LVU834
 3134 011a 2A4B     		ldr	r3, .L180+40
1208:Veno-Echo.cpp ****             {
 3135              		.loc 21 1208 13 view .LVU835
 3136 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3137 011e 7AB9     		cbnz	r2, .L165
1210:Veno-Echo.cpp ****                 {
 3138              		.loc 21 1210 17 is_stmt 1 view .LVU836
 3139              	.LVL137:
 3140              	.LBB1212:
 3141              	.LBI1212:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3142              		.loc 22 75 3 view .LVU837
 3143              	.LBB1213:
 3144              		.loc 22 76 5 view .LVU838
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 162


 3145              		.loc 22 76 5 is_stmt 0 view .LVU839
 3146              	.LBE1213:
 3147              	.LBE1212:
1210:Veno-Echo.cpp ****                 {
 3148              		.loc 21 1210 23 view .LVU840
 3149 0120 294A     		ldr	r2, .L180+44
1210:Veno-Echo.cpp ****                 {
 3150              		.loc 21 1210 17 view .LVU841
 3151 0122 9FED2A7A 		vldr.32	s14, .L180+48
1210:Veno-Echo.cpp ****                 {
 3152              		.loc 21 1210 23 view .LVU842
 3153 0126 D2ED007A 		vldr.32	s15, [r2]
 3154 012a 70EE677A 		vsub.f32	s15, s0, s15
 3155              	.LBB1215:
 3156              	.LBB1214:
 3157              		.loc 22 76 31 view .LVU843
 3158 012e F0EEE77A 		vabs.f32	s15, s15
 3159              	.LBE1214:
 3160              	.LBE1215:
1210:Veno-Echo.cpp ****                 {
 3161              		.loc 21 1210 17 view .LVU844
 3162 0132 F4EEC77A 		vcmpe.f32	s15, s14
 3163 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3164 013a B6DD     		ble	.L152
1212:Veno-Echo.cpp ****                 }
 3165              		.loc 21 1212 21 is_stmt 1 view .LVU845
1212:Veno-Echo.cpp ****                 }
 3166              		.loc 21 1212 37 is_stmt 0 view .LVU846
 3167 013c 0122     		movs	r2, #1
 3168 013e 1A70     		strb	r2, [r3]
 3169              	.L165:
1217:Veno-Echo.cpp ****         {
 3170              		.loc 21 1217 9 is_stmt 1 view .LVU847
 3171              	.LBB1216:
1219:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3172              		.loc 21 1219 13 view .LVU848
 3173              	.LVL138:
1220:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3174              		.loc 21 1220 13 view .LVU849
1220:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3175              		.loc 21 1220 29 is_stmt 0 view .LVU850
 3176 0140 9FED231A 		vldr.32	s2, .L180+52
 3177 0144 0120     		movs	r0, #1
 3178 0146 DFED230A 		vldr.32	s1, .L180+56
 3179 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 3180              	.LVL139:
1220:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3181              		.loc 21 1220 29 view .LVU851
 3182 014e B0EE408A 		vmov.f32	s16, s0
 3183              	.LVL140:
1221:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3184              		.loc 21 1221 13 is_stmt 1 view .LVU852
1221:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3185              		.loc 21 1221 26 is_stmt 0 view .LVU853
 3186 0152 2148     		ldr	r0, .L180+60
 3187 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3188              	.LVL141:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 163


1222:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3189              		.loc 21 1222 13 is_stmt 1 view .LVU854
1222:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3190              		.loc 21 1222 26 is_stmt 0 view .LVU855
 3191 0158 2048     		ldr	r0, .L180+64
 3192 015a B0EE480A 		vmov.f32	s0, s16
 3193 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3194              	.LVL142:
1223:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3195              		.loc 21 1223 13 is_stmt 1 view .LVU856
1223:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3196              		.loc 21 1223 31 is_stmt 0 view .LVU857
 3197 0162 B0EE480A 		vmov.f32	s0, s16
 3198 0166 1E48     		ldr	r0, .L180+68
 3199 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3200              	.LVL143:
1224:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3201              		.loc 21 1224 13 is_stmt 1 view .LVU858
1224:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3202              		.loc 21 1224 31 is_stmt 0 view .LVU859
 3203 016c B0EE480A 		vmov.f32	s0, s16
 3204 0170 1C48     		ldr	r0, .L180+72
 3205 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3206              	.LVL144:
1225:Veno-Echo.cpp ****             save_flag = true;
 3207              		.loc 21 1225 13 is_stmt 1 view .LVU860
1225:Veno-Echo.cpp ****             save_flag = true;
 3208              		.loc 21 1225 35 is_stmt 0 view .LVU861
 3209 0176 1C49     		ldr	r1, .L180+76
 3210              	.LBB1217:
 3211              	.LBB1218:
 3212              	.LBB1219:
 3213              	.LBB1220:
 3214              	.LBB1221:
 3215              		.loc 23 397 18 view .LVU862
 3216 0178 1C4B     		ldr	r3, .L180+80
 3217 017a 0122     		movs	r2, #1
 3218              	.LBE1221:
 3219              	.LBE1220:
 3220              	.LBE1219:
 3221              	.LBE1218:
 3222              	.LBE1217:
1225:Veno-Echo.cpp ****             save_flag = true;
 3223              		.loc 21 1225 35 view .LVU863
 3224 017c 81ED058A 		vstr.32	s16, [r1, #20]
1226:Veno-Echo.cpp ****         }
 3225              		.loc 21 1226 13 is_stmt 1 view .LVU864
 3226              	.LVL145:
 3227              	.LBB1226:
 3228              	.LBI1217:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3229              		.loc 24 80 5 view .LVU865
 3230              	.LBB1225:
 3231              		.loc 24 81 7 view .LVU866
 3232              	.LBB1224:
 3233              	.LBI1219:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 164


 3234              		.loc 23 288 7 view .LVU867
 3235              	.LBB1223:
 3236              	.LBI1220:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3237              		.loc 23 390 7 view .LVU868
 3238              	.LBB1222:
 3239              		.loc 23 397 18 is_stmt 0 view .LVU869
 3240 0180 BFF35B8F 		dmb	ish
 3241 0184 1A70     		strb	r2, [r3]
 3242 0186 BFF35B8F 		dmb	ish
 3243              	.LVL146:
 3244              		.loc 23 397 18 view .LVU870
 3245              	.LBE1222:
 3246              	.LBE1223:
 3247              	.LBE1224:
 3248              	.LBE1225:
 3249              	.LBE1226:
 3250              	.LBE1216:
 3251              	.LBE1228:
 3252              	.LBE1233:
1229:Veno-Echo.cpp **** 
 3253              		.loc 21 1229 1 view .LVU871
 3254 018a BDEC028B 		vldm	sp!, {d8}
 3255              		.cfi_remember_state
 3256              		.cfi_restore 80
 3257              		.cfi_restore 81
 3258              		.cfi_def_cfa_offset 8
 3259              	.LVL147:
1229:Veno-Echo.cpp **** 
 3260              		.loc 21 1229 1 view .LVU872
 3261 018e 10BD     		pop	{r4, pc}
 3262              	.LVL148:
 3263              	.L178:
 3264              		.cfi_restore_state
 3265              	.LBB1234:
 3266              	.LBB1229:
 3267              	.LBB1207:
 3268              	.LBB1191:
2026:Veno-Echo.cpp ****     }
 3269              		.loc 21 2026 16 view .LVU873
 3270 0190 DFED097A 		vldr.32	s15, .L180+28
 3271              	.LVL149:
2026:Veno-Echo.cpp ****     }
 3272              		.loc 21 2026 16 view .LVU874
 3273 0194 68E7     		b	.L160
 3274              	.LVL150:
 3275              	.L179:
2026:Veno-Echo.cpp ****     }
 3276              		.loc 21 2026 16 view .LVU875
 3277              	.LBE1191:
 3278              	.LBE1207:
 3279              	.LBB1208:
 3280              	.LBB1205:
 3281 0196 DFED087A 		vldr.32	s15, .L180+28
 3282 019a BAE7     		b	.L158
 3283              	.L181:
 3284              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 165


 3285              	.L180:
 3286 019c 18000000 		.word	.LANCHOR4+24
 3287 01a0 00000000 		.word	.LANCHOR7
 3288 01a4 00000000 		.word	.LANCHOR40
 3289 01a8 00000000 		.word	.LANCHOR41
 3290 01ac 00000000 		.word	.LANCHOR42
 3291 01b0 00000000 		.word	.LANCHOR39
 3292 01b4 00000000 		.word	.LANCHOR43
 3293 01b8 00000000 		.word	0
 3294 01bc 00000000 		.word	.LANCHOR44
 3295 01c0 6F12033D 		.word	1023611503
 3296 01c4 00000000 		.word	.LANCHOR45
 3297 01c8 00000000 		.word	.LANCHOR46
 3298 01cc 0AD7A33B 		.word	1000593162
 3299 01d0 00803B46 		.word	1178304512
 3300 01d4 0080BB44 		.word	1153138688
 3301 01d8 00000000 		.word	.LANCHOR47
 3302 01dc 00000000 		.word	.LANCHOR48
 3303 01e0 00000000 		.word	.LANCHOR49
 3304 01e4 00000000 		.word	.LANCHOR50
 3305 01e8 00000000 		.word	.LANCHOR15
 3306 01ec 00000000 		.word	.LANCHOR16
 3307              	.LBE1205:
 3308              	.LBE1208:
 3309              	.LBE1229:
 3310              	.LBE1234:
 3311              		.cfi_endproc
 3312              	.LFE4319:
 3314              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3315              		.align	1
 3316              		.p2align 2,,3
 3317              		.global	_Z16Update_drywet_CVv
 3318              		.syntax unified
 3319              		.thumb
 3320              		.thumb_func
 3321              		.fpu fpv5-d16
 3323              	_Z16Update_drywet_CVv:
 3324              	.LFB4320:
1232:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3325              		.loc 21 1232 1 is_stmt 1 view -0
 3326              		.cfi_startproc
 3327              		@ args = 0, pretend = 0, frame = 0
 3328              		@ frame_needed = 0, uses_anonymous_args = 0
1233:Veno-Echo.cpp **** }
 3329              		.loc 21 1233 5 view .LVU877
1232:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3330              		.loc 21 1232 1 is_stmt 0 view .LVU878
 3331 0000 08B5     		push	{r3, lr}
 3332              		.cfi_def_cfa_offset 8
 3333              		.cfi_offset 3, -8
 3334              		.cfi_offset 14, -4
1233:Veno-Echo.cpp **** }
 3335              		.loc 21 1233 32 view .LVU879
 3336 0002 0421     		movs	r1, #4
 3337 0004 0348     		ldr	r0, .L184
 3338 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3339              	.LVL151:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 166


1233:Veno-Echo.cpp **** }
 3340              		.loc 21 1233 15 view .LVU880
 3341 000a 034B     		ldr	r3, .L184+4
 3342 000c 83ED000A 		vstr.32	s0, [r3]
1234:Veno-Echo.cpp **** 
 3343              		.loc 21 1234 1 view .LVU881
 3344 0010 08BD     		pop	{r3, pc}
 3345              	.L185:
 3346 0012 00BF     		.align	2
 3347              	.L184:
 3348 0014 18000000 		.word	.LANCHOR4+24
 3349 0018 00000000 		.word	.LANCHOR51
 3350              		.cfi_endproc
 3351              	.LFE4320:
 3353              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3354              		.align	1
 3355              		.p2align 2,,3
 3356              		.global	_Z13Update_drywetv
 3357              		.syntax unified
 3358              		.thumb
 3359              		.thumb_func
 3360              		.fpu fpv5-d16
 3362              	_Z13Update_drywetv:
 3363              	.LFB4321:
1237:Veno-Echo.cpp ****     static bool lastShift{};
 3364              		.loc 21 1237 1 is_stmt 1 view -0
 3365              		.cfi_startproc
 3366              		@ args = 0, pretend = 0, frame = 0
 3367              		@ frame_needed = 0, uses_anonymous_args = 0
1238:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3368              		.loc 21 1238 5 view .LVU883
1239:Veno-Echo.cpp ****     static bool Res_pickup{};
 3369              		.loc 21 1239 5 view .LVU884
1240:Veno-Echo.cpp **** 
 3370              		.loc 21 1240 5 view .LVU885
1242:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3371              		.loc 21 1242 5 view .LVU886
1247:Veno-Echo.cpp **** 
 3372              		.loc 21 1247 5 view .LVU887
1247:Veno-Echo.cpp **** 
 3373              		.loc 21 1247 40 is_stmt 0 view .LVU888
 3374 0000 0522     		movs	r2, #5
 3375 0002 0721     		movs	r1, #7
 3376 0004 8248     		ldr	r0, .L219+24
1237:Veno-Echo.cpp ****     static bool lastShift{};
 3377              		.loc 21 1237 1 view .LVU889
 3378 0006 10B5     		push	{r4, lr}
 3379              		.cfi_def_cfa_offset 8
 3380              		.cfi_offset 4, -8
 3381              		.cfi_offset 14, -4
 3382 0008 2DED028B 		vpush.64	{d8}
 3383              		.cfi_def_cfa_offset 16
 3384              		.cfi_offset 80, -16
 3385              		.cfi_offset 81, -12
1247:Veno-Echo.cpp **** 
 3386              		.loc 21 1247 40 view .LVU890
 3387 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 167


 3388              	.LVL152:
 3389              	.LBB1235:
1249:Veno-Echo.cpp ****     {   
 3390              		.loc 21 1249 9 view .LVU891
 3391 0010 804B     		ldr	r3, .L219+28
 3392              	.LVL153:
1249:Veno-Echo.cpp ****     {   
 3393              		.loc 21 1249 9 view .LVU892
 3394              	.LBE1235:
1249:Veno-Echo.cpp ****     {   
 3395              		.loc 21 1249 5 is_stmt 1 view .LVU893
 3396              	.LBB1278:
 3397              	.LBB1236:
1254:Veno-Echo.cpp ****         {
 3398              		.loc 21 1254 19 is_stmt 0 view .LVU894
 3399 0012 814A     		ldr	r2, .L219+32
 3400              	.LBE1236:
1249:Veno-Echo.cpp ****     {   
 3401              		.loc 21 1249 5 view .LVU895
 3402 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3403 0016 B3BB     		cbnz	r3, .L187
 3404              	.LBB1257:
1252:Veno-Echo.cpp **** 
 3405              		.loc 21 1252 9 is_stmt 1 view .LVU896
1254:Veno-Echo.cpp ****         {
 3406              		.loc 21 1254 9 view .LVU897
 3407 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3408 001a 0029     		cmp	r1, #0
 3409 001c 40D0     		beq	.L188
1256:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3410              		.loc 21 1256 13 view .LVU898
1258:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3411              		.loc 21 1258 27 is_stmt 0 view .LVU899
 3412 001e 7F48     		ldr	r0, .L219+36
1259:Veno-Echo.cpp ****         } 
 3413              		.loc 21 1259 24 view .LVU900
 3414 0020 7F49     		ldr	r1, .L219+40
1256:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3415              		.loc 21 1256 23 view .LVU901
 3416 0022 1370     		strb	r3, [r2]
1258:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3417              		.loc 21 1258 13 is_stmt 1 view .LVU902
1258:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3418              		.loc 21 1258 27 is_stmt 0 view .LVU903
 3419 0024 0370     		strb	r3, [r0]
1259:Veno-Echo.cpp ****         } 
 3420              		.loc 21 1259 13 is_stmt 1 view .LVU904
1259:Veno-Echo.cpp ****         } 
 3421              		.loc 21 1259 24 is_stmt 0 view .LVU905
 3422 0026 81ED000A 		vstr.32	s0, [r1]
 3423              	.L189:
1275:Veno-Echo.cpp **** 
 3424              		.loc 21 1275 9 is_stmt 1 view .LVU906
 3425              	.LVL154:
1277:Veno-Echo.cpp ****         {
 3426              		.loc 21 1277 9 view .LVU907
1285:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 168


 3427              		.loc 21 1285 13 view .LVU908
 3428              	.LBB1237:
 3429              	.LBI1237:
2019:Veno-Echo.cpp **** {
 3430              		.loc 21 2019 7 view .LVU909
 3431              	.LBB1238:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3432              		.loc 21 2021 5 view .LVU910
2022:Veno-Echo.cpp **** 
 3433              		.loc 21 2022 5 view .LVU911
 3434              	.LBE1238:
 3435              	.LBE1237:
1285:Veno-Echo.cpp ****         }
 3436              		.loc 21 1285 37 is_stmt 0 view .LVU912
 3437 002a 7E4A     		ldr	r2, .L219+44
 3438              	.LBB1241:
 3439              	.LBB1239:
2022:Veno-Echo.cpp **** 
 3440              		.loc 21 2022 39 view .LVU913
 3441 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2022:Veno-Echo.cpp **** 
 3442              		.loc 21 2022 49 view .LVU914
 3443 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3444              	.LBE1239:
 3445              	.LBE1241:
1285:Veno-Echo.cpp ****         }
 3446              		.loc 21 1285 37 view .LVU915
 3447 0034 7C4B     		ldr	r3, .L219+48
 3448              	.LBB1242:
 3449              	.LBB1240:
2022:Veno-Echo.cpp **** 
 3450              		.loc 21 2022 39 view .LVU916
 3451 0036 92ED007A 		vldr.32	s14, [r2]
2022:Veno-Echo.cpp **** 
 3452              		.loc 21 2022 12 view .LVU917
 3453 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3454 003e D3ED007A 		vldr.32	s15, [r3]
2022:Veno-Echo.cpp **** 
 3455              		.loc 21 2022 39 view .LVU918
 3456 0042 36EEC77A 		vsub.f32	s14, s13, s14
2022:Veno-Echo.cpp **** 
 3457              		.loc 21 2022 49 view .LVU919
 3458 0046 37EE657A 		vsub.f32	s14, s14, s11
2022:Veno-Echo.cpp **** 
 3459              		.loc 21 2022 12 view .LVU920
 3460 004a E7EE067A 		vfma.f32	s15, s14, s12
 3461              	.LVL155:
2024:Veno-Echo.cpp ****     {
 3462              		.loc 21 2024 5 is_stmt 1 view .LVU921
 3463 004e F5EEC07A 		vcmpe.f32	s15, #0
 3464 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3465 0056 00F1C180 		bmi	.L206
2029:Veno-Echo.cpp ****     {
 3466              		.loc 21 2029 5 view .LVU922
 3467 005a F4EEE67A 		vcmpe.f32	s15, s13
 3468 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3469 0062 40F3C680 		ble	.L212
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 169


 3470              	.LVL156:
 3471              	.L197:
2029:Veno-Echo.cpp ****     {
 3472              		.loc 21 2029 5 is_stmt 0 view .LVU923
 3473              	.LBE1240:
 3474              	.LBE1242:
1292:Veno-Echo.cpp ****         }
 3475              		.loc 21 1292 26 view .LVU924
 3476 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3477              	.LVL157:
 3478              	.L196:
1304:Veno-Echo.cpp ****     }
 3479              		.loc 21 1304 9 is_stmt 1 view .LVU925
 3480              	.LBB1243:
 3481              	.LBI1243:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3482              		.loc 26 135 13 view .LVU926
 3483              	.LBB1244:
 3484              		.loc 26 137 5 view .LVU927
 3485              		.loc 26 137 9 is_stmt 0 view .LVU928
 3486 006a 704B     		ldr	r3, .L219+52
 3487 006c 9FED707A 		vldr.32	s14, .L219+56
 3488 0070 D3ED007A 		vldr.32	s15, [r3]
 3489              		.loc 26 137 24 view .LVU929
 3490 0074 30EE670A 		vsub.f32	s0, s0, s15
 3491              	.LVL158:
 3492              		.loc 26 137 24 view .LVU930
 3493              	.LBE1244:
 3494              	.LBE1243:
 3495              	.LBE1257:
 3496              	.LBE1278:
1344:Veno-Echo.cpp **** 
 3497              		.loc 21 1344 1 view .LVU931
 3498 0078 BDEC028B 		vldm	sp!, {d8}
 3499              		.cfi_remember_state
 3500              		.cfi_restore 80
 3501              		.cfi_restore 81
 3502              		.cfi_def_cfa_offset 8
 3503              	.LBB1279:
 3504              	.LBB1258:
 3505              	.LBB1246:
 3506              	.LBB1245:
 3507              		.loc 26 137 9 view .LVU932
 3508 007c E0EE077A 		vfma.f32	s15, s0, s14
 3509 0080 C3ED007A 		vstr.32	s15, [r3]
 3510              	.LBE1245:
 3511              	.LBE1246:
 3512              	.LBE1258:
 3513              	.LBE1279:
1344:Veno-Echo.cpp **** 
 3514              		.loc 21 1344 1 view .LVU933
 3515 0084 10BD     		pop	{r4, pc}
 3516              	.LVL159:
 3517              	.L187:
 3518              		.cfi_restore_state
 3519              	.LBB1280:
 3520              	.LBB1259:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 170


1308:Veno-Echo.cpp **** 
 3521              		.loc 21 1308 9 is_stmt 1 view .LVU934
1310:Veno-Echo.cpp ****         {
 3522              		.loc 21 1310 9 view .LVU935
 3523 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3524 0088 002B     		cmp	r3, #0
 3525 008a 58D1     		bne	.L201
1312:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3526              		.loc 21 1312 13 view .LVU936
1312:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3527              		.loc 21 1312 23 is_stmt 0 view .LVU937
 3528 008c 0124     		movs	r4, #1
1313:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3529              		.loc 21 1313 24 view .LVU938
 3530 008e 6948     		ldr	r0, .L219+60
1314:Veno-Echo.cpp ****         }
 3531              		.loc 21 1314 21 view .LVU939
 3532 0090 6949     		ldr	r1, .L219+64
1312:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3533              		.loc 21 1312 23 view .LVU940
 3534 0092 1470     		strb	r4, [r2]
1313:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3535              		.loc 21 1313 13 is_stmt 1 view .LVU941
1313:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3536              		.loc 21 1313 24 is_stmt 0 view .LVU942
 3537 0094 0370     		strb	r3, [r0]
1314:Veno-Echo.cpp ****         }
 3538              		.loc 21 1314 13 is_stmt 1 view .LVU943
1314:Veno-Echo.cpp ****         }
 3539              		.loc 21 1314 21 is_stmt 0 view .LVU944
 3540 0096 81ED000A 		vstr.32	s0, [r1]
 3541              	.L186:
1314:Veno-Echo.cpp ****         }
 3542              		.loc 21 1314 21 view .LVU945
 3543              	.LBE1259:
 3544              	.LBE1280:
1344:Veno-Echo.cpp **** 
 3545              		.loc 21 1344 1 view .LVU946
 3546 009a BDEC028B 		vldm	sp!, {d8}
 3547              		.cfi_remember_state
 3548              		.cfi_restore 80
 3549              		.cfi_restore 81
 3550              		.cfi_def_cfa_offset 8
 3551 009e 10BD     		pop	{r4, pc}
 3552              	.L188:
 3553              		.cfi_restore_state
 3554              	.LBB1281:
 3555              	.LBB1275:
1264:Veno-Echo.cpp ****             {
 3556              		.loc 21 1264 13 is_stmt 1 view .LVU947
1264:Veno-Echo.cpp ****             {
 3557              		.loc 21 1264 16 is_stmt 0 view .LVU948
 3558 00a0 5E4B     		ldr	r3, .L219+36
1264:Veno-Echo.cpp ****             {
 3559              		.loc 21 1264 13 view .LVU949
 3560 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3561 00a4 7AB9     		cbnz	r2, .L190
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 171


1267:Veno-Echo.cpp ****                 {
 3562              		.loc 21 1267 17 is_stmt 1 view .LVU950
 3563              	.LVL160:
 3564              	.LBB1247:
 3565              	.LBI1247:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3566              		.loc 22 75 3 view .LVU951
 3567              	.LBB1248:
 3568              		.loc 22 76 5 view .LVU952
 3569              		.loc 22 76 5 is_stmt 0 view .LVU953
 3570              	.LBE1248:
 3571              	.LBE1247:
1267:Veno-Echo.cpp ****                 {
 3572              		.loc 21 1267 23 view .LVU954
 3573 00a6 5E4A     		ldr	r2, .L219+40
1267:Veno-Echo.cpp ****                 {
 3574              		.loc 21 1267 17 view .LVU955
 3575 00a8 9FED647A 		vldr.32	s14, .L219+68
1267:Veno-Echo.cpp ****                 {
 3576              		.loc 21 1267 23 view .LVU956
 3577 00ac D2ED007A 		vldr.32	s15, [r2]
 3578 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3579              	.LBB1250:
 3580              	.LBB1249:
 3581              		.loc 22 76 31 view .LVU957
 3582 00b4 F0EEE77A 		vabs.f32	s15, s15
 3583              	.LBE1249:
 3584              	.LBE1250:
1267:Veno-Echo.cpp ****                 {
 3585              		.loc 21 1267 17 view .LVU958
 3586 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3587 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3588 00c0 B3DD     		ble	.L189
1269:Veno-Echo.cpp ****                 }
 3589              		.loc 21 1269 21 is_stmt 1 view .LVU959
1269:Veno-Echo.cpp ****                 }
 3590              		.loc 21 1269 35 is_stmt 0 view .LVU960
 3591 00c2 0122     		movs	r2, #1
 3592 00c4 1A70     		strb	r2, [r3]
 3593              	.L190:
1275:Veno-Echo.cpp **** 
 3594              		.loc 21 1275 9 is_stmt 1 view .LVU961
 3595              	.LVL161:
1277:Veno-Echo.cpp ****         {
 3596              		.loc 21 1277 9 view .LVU962
1279:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3597              		.loc 21 1279 13 view .LVU963
 3598              	.LBB1251:
 3599              	.LBI1251:
2019:Veno-Echo.cpp **** {
 3600              		.loc 21 2019 7 view .LVU964
 3601              	.LBB1252:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3602              		.loc 21 2021 5 view .LVU965
2022:Veno-Echo.cpp **** 
 3603              		.loc 21 2022 5 view .LVU966
 3604              	.LBE1252:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 172


 3605              	.LBE1251:
1279:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3606              		.loc 21 1279 37 is_stmt 0 view .LVU967
 3607 00c6 574B     		ldr	r3, .L219+44
 3608              	.LBB1255:
 3609              	.LBB1253:
2022:Veno-Echo.cpp **** 
 3610              		.loc 21 2022 39 view .LVU968
 3611 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
2022:Veno-Echo.cpp **** 
 3612              		.loc 21 2022 49 view .LVU969
 3613 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2022:Veno-Echo.cpp **** 
 3614              		.loc 21 2022 39 view .LVU970
 3615 00d0 D3ED007A 		vldr.32	s15, [r3]
2022:Veno-Echo.cpp **** 
 3616              		.loc 21 2022 12 view .LVU971
 3617 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
2022:Veno-Echo.cpp **** 
 3618              		.loc 21 2022 39 view .LVU972
 3619 00d8 77EE677A 		vsub.f32	s15, s14, s15
2022:Veno-Echo.cpp **** 
 3620              		.loc 21 2022 49 view .LVU973
 3621 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2022:Veno-Echo.cpp **** 
 3622              		.loc 21 2022 12 view .LVU974
 3623 00e0 B0EE406A 		vmov.f32	s12, s0
 3624 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2024:Veno-Echo.cpp ****     {
 3625              		.loc 21 2024 5 view .LVU975
 3626 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2022:Veno-Echo.cpp **** 
 3627              		.loc 21 2022 12 view .LVU976
 3628 00ec F0EE467A 		vmov.f32	s15, s12
 3629              	.LVL162:
2024:Veno-Echo.cpp ****     {
 3630              		.loc 21 2024 5 is_stmt 1 view .LVU977
 3631 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3632 00f4 75D4     		bmi	.L217
2029:Veno-Echo.cpp ****     {
 3633              		.loc 21 2029 5 view .LVU978
 3634 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3635 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3636 00fe 75DD     		ble	.L218
2031:Veno-Echo.cpp ****     }
 3637              		.loc 21 2031 16 is_stmt 0 view .LVU979
 3638 0100 F0EE477A 		vmov.f32	s15, s14
 3639 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3640              	.LVL163:
 3641              	.L192:
2034:Veno-Echo.cpp **** }
 3642              		.loc 21 2034 5 is_stmt 1 view .LVU980
2034:Veno-Echo.cpp **** }
 3643              		.loc 21 2034 5 is_stmt 0 view .LVU981
 3644              	.LBE1253:
 3645              	.LBE1255:
1280:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 173


 3646              		.loc 21 1280 13 is_stmt 1 view .LVU982
1280:Veno-Echo.cpp ****         }
 3647              		.loc 21 1280 25 is_stmt 0 view .LVU983
 3648 0108 474B     		ldr	r3, .L219+48
 3649 010a 83ED000A 		vstr.32	s0, [r3]
 3650              	.LVL164:
 3651              	.L193:
1288:Veno-Echo.cpp **** 
 3652              		.loc 21 1288 9 is_stmt 1 view .LVU984
1290:Veno-Echo.cpp ****         {
 3653              		.loc 21 1290 9 view .LVU985
 3654 010e 9FED3A5B 		vldr.64	d5, .L219
 3655 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3656 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3657 011a A4DA     		bge	.L197
1294:Veno-Echo.cpp ****         {
 3658              		.loc 21 1294 14 view .LVU986
 3659 011c 9FED385B 		vldr.64	d5, .L219+8
 3660 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3661 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3662 0128 58D9     		bls	.L206
1300:Veno-Echo.cpp ****         }
 3663              		.loc 21 1300 13 view .LVU987
1300:Veno-Echo.cpp ****         }
 3664              		.loc 21 1300 33 is_stmt 0 view .LVU988
 3665 012a B0EE670A 		vmov.f32	s0, s15
 3666              	.LVL165:
1300:Veno-Echo.cpp ****         }
 3667              		.loc 21 1300 33 view .LVU989
 3668 012e 0020     		movs	r0, #0
 3669 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3670 0134 DFED420A 		vldr.32	s1, .L219+72
 3671 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3672              	.LVL166:
1300:Veno-Echo.cpp ****         }
 3673              		.loc 21 1300 33 view .LVU990
 3674 013c 95E7     		b	.L196
 3675              	.LVL167:
 3676              	.L201:
1300:Veno-Echo.cpp ****         }
 3677              		.loc 21 1300 33 view .LVU991
 3678              	.LBE1275:
 3679              	.LBB1276:
1319:Veno-Echo.cpp ****             {
 3680              		.loc 21 1319 13 is_stmt 1 view .LVU992
1319:Veno-Echo.cpp ****             {
 3681              		.loc 21 1319 16 is_stmt 0 view .LVU993
 3682 013e 3D4B     		ldr	r3, .L219+60
1319:Veno-Echo.cpp ****             {
 3683              		.loc 21 1319 13 view .LVU994
 3684 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3685 0142 7AB9     		cbnz	r2, .L203
1321:Veno-Echo.cpp ****                 {
 3686              		.loc 21 1321 17 is_stmt 1 view .LVU995
 3687              	.LVL168:
 3688              	.LBB1260:
 3689              	.LBI1260:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 174


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3690              		.loc 22 75 3 view .LVU996
 3691              	.LBB1261:
 3692              		.loc 22 76 5 view .LVU997
 3693              		.loc 22 76 5 is_stmt 0 view .LVU998
 3694              	.LBE1261:
 3695              	.LBE1260:
1321:Veno-Echo.cpp ****                 {
 3696              		.loc 21 1321 23 view .LVU999
 3697 0144 3C4A     		ldr	r2, .L219+64
1321:Veno-Echo.cpp ****                 {
 3698              		.loc 21 1321 17 view .LVU1000
 3699 0146 9FED3D7A 		vldr.32	s14, .L219+68
1321:Veno-Echo.cpp ****                 {
 3700              		.loc 21 1321 23 view .LVU1001
 3701 014a D2ED007A 		vldr.32	s15, [r2]
 3702 014e 70EE677A 		vsub.f32	s15, s0, s15
 3703              	.LBB1263:
 3704              	.LBB1262:
 3705              		.loc 22 76 31 view .LVU1002
 3706 0152 F0EEE77A 		vabs.f32	s15, s15
 3707              	.LBE1262:
 3708              	.LBE1263:
1321:Veno-Echo.cpp ****                 {
 3709              		.loc 21 1321 17 view .LVU1003
 3710 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3711 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3712 015e 9CDD     		ble	.L186
1323:Veno-Echo.cpp ****                 }
 3713              		.loc 21 1323 21 is_stmt 1 view .LVU1004
1323:Veno-Echo.cpp ****                 }
 3714              		.loc 21 1323 32 is_stmt 0 view .LVU1005
 3715 0160 0122     		movs	r2, #1
 3716 0162 1A70     		strb	r2, [r3]
 3717              	.L203:
1328:Veno-Echo.cpp ****         {
 3718              		.loc 21 1328 9 is_stmt 1 view .LVU1006
 3719              	.LBB1264:
1330:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3720              		.loc 21 1330 13 view .LVU1007
 3721              	.LVL169:
1331:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3722              		.loc 21 1331 13 view .LVU1008
1331:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3723              		.loc 21 1331 24 is_stmt 0 view .LVU1009
 3724 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3725 0168 DFED350A 		vldr.32	s1, .L219+72
 3726 016c 0020     		movs	r0, #0
 3727 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3728              	.LVL170:
1331:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3729              		.loc 21 1331 24 view .LVU1010
 3730 0172 B0EE408A 		vmov.f32	s16, s0
 3731              	.LVL171:
1332:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3732              		.loc 21 1332 13 is_stmt 1 view .LVU1011
1332:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 175


 3733              		.loc 21 1332 25 is_stmt 0 view .LVU1012
 3734 0176 3348     		ldr	r0, .L219+76
 3735 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3736              	.LVL172:
1333:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3737              		.loc 21 1333 13 is_stmt 1 view .LVU1013
1333:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3738              		.loc 21 1333 25 is_stmt 0 view .LVU1014
 3739 017c 3248     		ldr	r0, .L219+80
 3740 017e B0EE480A 		vmov.f32	s0, s16
 3741 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3742              	.LVL173:
1334:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3743              		.loc 21 1334 13 is_stmt 1 view .LVU1015
1334:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3744              		.loc 21 1334 25 is_stmt 0 view .LVU1016
 3745 0186 B0EE480A 		vmov.f32	s0, s16
 3746 018a 3048     		ldr	r0, .L219+84
 3747 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3748              	.LVL174:
1335:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3749              		.loc 21 1335 13 is_stmt 1 view .LVU1017
1335:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3750              		.loc 21 1335 25 is_stmt 0 view .LVU1018
 3751 0190 B0EE480A 		vmov.f32	s0, s16
 3752 0194 2E48     		ldr	r0, .L219+88
 3753 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3754              	.LVL175:
1336:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3755              		.loc 21 1336 13 is_stmt 1 view .LVU1019
1336:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3756              		.loc 21 1336 30 is_stmt 0 view .LVU1020
 3757 019a B0EE480A 		vmov.f32	s0, s16
 3758 019e 2D48     		ldr	r0, .L219+92
 3759 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3760              	.LVL176:
1337:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3761              		.loc 21 1337 13 is_stmt 1 view .LVU1021
1337:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3762              		.loc 21 1337 30 is_stmt 0 view .LVU1022
 3763 01a4 B0EE480A 		vmov.f32	s0, s16
 3764 01a8 2B48     		ldr	r0, .L219+96
 3765 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3766              	.LVL177:
1338:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3767              		.loc 21 1338 13 is_stmt 1 view .LVU1023
1338:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3768              		.loc 21 1338 30 is_stmt 0 view .LVU1024
 3769 01ae B0EE480A 		vmov.f32	s0, s16
 3770 01b2 2A48     		ldr	r0, .L219+100
 3771 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3772              	.LVL178:
1339:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3773              		.loc 21 1339 13 is_stmt 1 view .LVU1025
1339:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3774              		.loc 21 1339 30 is_stmt 0 view .LVU1026
 3775 01b8 B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 176


 3776 01bc 2848     		ldr	r0, .L219+104
 3777 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3778              	.LVL179:
1340:Veno-Echo.cpp ****             save_flag = true;
 3779              		.loc 21 1340 13 is_stmt 1 view .LVU1027
1340:Veno-Echo.cpp ****             save_flag = true;
 3780              		.loc 21 1340 35 is_stmt 0 view .LVU1028
 3781 01c2 2849     		ldr	r1, .L219+108
 3782              	.LBB1265:
 3783              	.LBB1266:
 3784              	.LBB1267:
 3785              	.LBB1268:
 3786              	.LBB1269:
 3787              		.loc 23 397 18 view .LVU1029
 3788 01c4 284B     		ldr	r3, .L219+112
 3789 01c6 0122     		movs	r2, #1
 3790              	.LBE1269:
 3791              	.LBE1268:
 3792              	.LBE1267:
 3793              	.LBE1266:
 3794              	.LBE1265:
1340:Veno-Echo.cpp ****             save_flag = true;
 3795              		.loc 21 1340 35 view .LVU1030
 3796 01c8 81ED068A 		vstr.32	s16, [r1, #24]
1341:Veno-Echo.cpp ****         }
 3797              		.loc 21 1341 13 is_stmt 1 view .LVU1031
 3798              	.LVL180:
 3799              	.LBB1274:
 3800              	.LBI1265:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3801              		.loc 24 80 5 view .LVU1032
 3802              	.LBB1273:
 3803              		.loc 24 81 7 view .LVU1033
 3804              	.LBB1272:
 3805              	.LBI1267:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3806              		.loc 23 288 7 view .LVU1034
 3807              	.LBB1271:
 3808              	.LBI1268:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3809              		.loc 23 390 7 view .LVU1035
 3810              	.LBB1270:
 3811              		.loc 23 397 18 is_stmt 0 view .LVU1036
 3812 01cc BFF35B8F 		dmb	ish
 3813 01d0 1A70     		strb	r2, [r3]
 3814 01d2 BFF35B8F 		dmb	ish
 3815              	.LVL181:
 3816              		.loc 23 397 18 view .LVU1037
 3817              	.LBE1270:
 3818              	.LBE1271:
 3819              	.LBE1272:
 3820              	.LBE1273:
 3821              	.LBE1274:
 3822              	.LBE1264:
 3823              	.LBE1276:
 3824              	.LBE1281:
1344:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 177


 3825              		.loc 21 1344 1 view .LVU1038
 3826 01d6 BDEC028B 		vldm	sp!, {d8}
 3827              		.cfi_remember_state
 3828              		.cfi_restore 80
 3829              		.cfi_restore 81
 3830              		.cfi_def_cfa_offset 8
 3831              	.LVL182:
1344:Veno-Echo.cpp **** 
 3832              		.loc 21 1344 1 view .LVU1039
 3833 01da 10BD     		pop	{r4, pc}
 3834              	.LVL183:
 3835              	.L206:
 3836              		.cfi_restore_state
 3837              	.LBB1282:
 3838              	.LBB1277:
1296:Veno-Echo.cpp ****         }
 3839              		.loc 21 1296 26 view .LVU1040
 3840 01dc 9FED180A 		vldr.32	s0, .L219+72
 3841              	.LVL184:
1296:Veno-Echo.cpp ****         }
 3842              		.loc 21 1296 26 view .LVU1041
 3843 01e0 43E7     		b	.L196
 3844              	.LVL185:
 3845              	.L217:
 3846              	.LBB1256:
 3847              	.LBB1254:
1296:Veno-Echo.cpp ****         }
 3848              		.loc 21 1296 26 view .LVU1042
 3849 01e2 9FED096B 		vldr.64	d6, .L219+16
 3850              	.LVL186:
2026:Veno-Echo.cpp ****     }
 3851              		.loc 21 2026 16 view .LVU1043
 3852 01e6 DFED167A 		vldr.32	s15, .L219+72
 3853              	.LVL187:
2026:Veno-Echo.cpp ****     }
 3854              		.loc 21 2026 16 view .LVU1044
 3855 01ea 8DE7     		b	.L192
 3856              	.LVL188:
 3857              	.L218:
2026:Veno-Echo.cpp ****     }
 3858              		.loc 21 2026 16 view .LVU1045
 3859 01ec B7EEE76A 		vcvt.f64.f32	d6, s15
 3860              	.LVL189:
2026:Veno-Echo.cpp ****     }
 3861              		.loc 21 2026 16 view .LVU1046
 3862 01f0 8AE7     		b	.L192
 3863              	.LVL190:
 3864              	.L212:
2026:Veno-Echo.cpp ****     }
 3865              		.loc 21 2026 16 view .LVU1047
 3866 01f2 B7EEE76A 		vcvt.f64.f32	d6, s15
 3867 01f6 8AE7     		b	.L193
 3868              	.L220:
 3869              		.align	3
 3870              	.L219:
 3871 01f8 5C8FC2F5 		.word	4123168604
 3872 01fc 285CEF3F 		.word	1072651304
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 178


 3873 0200 7B14AE47 		.word	1202590843
 3874 0204 E17A943F 		.word	1066695393
 3875 0208 00000000 		.word	0
 3876 020c 00000000 		.word	0
 3877 0210 18000000 		.word	.LANCHOR4+24
 3878 0214 00000000 		.word	.LANCHOR7
 3879 0218 00000000 		.word	.LANCHOR52
 3880 021c 00000000 		.word	.LANCHOR53
 3881 0220 00000000 		.word	.LANCHOR54
 3882 0224 00000000 		.word	.LANCHOR51
 3883 0228 00000000 		.word	.LANCHOR55
 3884 022c 00000000 		.word	.LANCHOR56
 3885 0230 6F12833C 		.word	1015222895
 3886 0234 00000000 		.word	.LANCHOR57
 3887 0238 00000000 		.word	.LANCHOR58
 3888 023c 0AD7A33B 		.word	1000593162
 3889 0240 00000000 		.word	0
 3890 0244 00000000 		.word	.LANCHOR47
 3891 0248 00000000 		.word	.LANCHOR48
 3892 024c 00000000 		.word	.LANCHOR35
 3893 0250 00000000 		.word	.LANCHOR36
 3894 0254 00000000 		.word	.LANCHOR49
 3895 0258 00000000 		.word	.LANCHOR50
 3896 025c 00000000 		.word	.LANCHOR37
 3897 0260 00000000 		.word	.LANCHOR38
 3898 0264 00000000 		.word	.LANCHOR15
 3899 0268 00000000 		.word	.LANCHOR16
 3900              	.LBE1254:
 3901              	.LBE1256:
 3902              	.LBE1277:
 3903              	.LBE1282:
 3904              		.cfi_endproc
 3905              	.LFE4321:
 3907              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3908              		.align	1
 3909              		.p2align 2,,3
 3910              		.global	_Z15Update_width_CVv
 3911              		.syntax unified
 3912              		.thumb
 3913              		.thumb_func
 3914              		.fpu fpv5-d16
 3916              	_Z15Update_width_CVv:
 3917              	.LFB4322:
1347:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3918              		.loc 21 1347 1 is_stmt 1 view -0
 3919              		.cfi_startproc
 3920              		@ args = 0, pretend = 0, frame = 0
 3921              		@ frame_needed = 0, uses_anonymous_args = 0
1348:Veno-Echo.cpp **** }
 3922              		.loc 21 1348 5 view .LVU1049
1347:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3923              		.loc 21 1347 1 is_stmt 0 view .LVU1050
 3924 0000 08B5     		push	{r3, lr}
 3925              		.cfi_def_cfa_offset 8
 3926              		.cfi_offset 3, -8
 3927              		.cfi_offset 14, -4
1348:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 179


 3928              		.loc 21 1348 30 view .LVU1051
 3929 0002 0521     		movs	r1, #5
 3930 0004 0348     		ldr	r0, .L223
 3931 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3932              	.LVL191:
1348:Veno-Echo.cpp **** }
 3933              		.loc 21 1348 13 view .LVU1052
 3934 000a 034B     		ldr	r3, .L223+4
 3935 000c 83ED000A 		vstr.32	s0, [r3]
1349:Veno-Echo.cpp **** 
 3936              		.loc 21 1349 1 view .LVU1053
 3937 0010 08BD     		pop	{r3, pc}
 3938              	.L224:
 3939 0012 00BF     		.align	2
 3940              	.L223:
 3941 0014 18000000 		.word	.LANCHOR4+24
 3942 0018 00000000 		.word	.LANCHOR59
 3943              		.cfi_endproc
 3944              	.LFE4322:
 3946              		.section	.text._Z12Update_widthv,"ax",%progbits
 3947              		.align	1
 3948              		.p2align 2,,3
 3949              		.global	_Z12Update_widthv
 3950              		.syntax unified
 3951              		.thumb
 3952              		.thumb_func
 3953              		.fpu fpv5-d16
 3955              	_Z12Update_widthv:
 3956              	.LFB4323:
1352:Veno-Echo.cpp ****     static bool lastShift{};
 3957              		.loc 21 1352 1 is_stmt 1 view -0
 3958              		.cfi_startproc
 3959              		@ args = 0, pretend = 0, frame = 0
 3960              		@ frame_needed = 0, uses_anonymous_args = 0
1353:Veno-Echo.cpp ****     static bool width_pickup{};
 3961              		.loc 21 1353 5 view .LVU1055
1354:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3962              		.loc 21 1354 5 view .LVU1056
1355:Veno-Echo.cpp **** 
 3963              		.loc 21 1355 5 view .LVU1057
1357:Veno-Echo.cpp **** 
 3964              		.loc 21 1357 5 view .LVU1058
1360:Veno-Echo.cpp **** 
 3965              		.loc 21 1360 5 view .LVU1059
1360:Veno-Echo.cpp **** 
 3966              		.loc 21 1360 39 is_stmt 0 view .LVU1060
 3967 0000 0722     		movs	r2, #7
 3968 0002 6348     		ldr	r0, .L254
 3969 0004 1146     		mov	r1, r2
1352:Veno-Echo.cpp ****     static bool lastShift{};
 3970              		.loc 21 1352 1 view .LVU1061
 3971 0006 10B5     		push	{r4, lr}
 3972              		.cfi_def_cfa_offset 8
 3973              		.cfi_offset 4, -8
 3974              		.cfi_offset 14, -4
 3975 0008 2DED028B 		vpush.64	{d8}
 3976              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 180


 3977              		.cfi_offset 80, -16
 3978              		.cfi_offset 81, -12
1360:Veno-Echo.cpp **** 
 3979              		.loc 21 1360 39 view .LVU1062
 3980 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3981              	.LVL192:
 3982              	.LBB1283:
1362:Veno-Echo.cpp ****     {   
 3983              		.loc 21 1362 9 view .LVU1063
 3984 0010 604B     		ldr	r3, .L254+4
 3985              	.LBE1283:
1360:Veno-Echo.cpp **** 
 3986              		.loc 21 1360 39 view .LVU1064
 3987 0012 B0EE408A 		vmov.f32	s16, s0
 3988              	.LVL193:
1362:Veno-Echo.cpp ****     {   
 3989              		.loc 21 1362 5 is_stmt 1 view .LVU1065
 3990              	.LBB1338:
 3991              	.LBB1284:
1366:Veno-Echo.cpp ****         {
 3992              		.loc 21 1366 19 is_stmt 0 view .LVU1066
 3993 0016 604A     		ldr	r2, .L254+8
 3994              	.LBE1284:
1362:Veno-Echo.cpp ****     {   
 3995              		.loc 21 1362 5 view .LVU1067
 3996 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3997 001a 002B     		cmp	r3, #0
 3998 001c 3ED1     		bne	.L226
 3999              	.LBB1313:
1364:Veno-Echo.cpp ****         //update pickup
 4000              		.loc 21 1364 9 is_stmt 1 view .LVU1068
1366:Veno-Echo.cpp ****         {
 4001              		.loc 21 1366 9 view .LVU1069
 4002 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4003 0020 0029     		cmp	r1, #0
 4004 0022 48D0     		beq	.L227
1368:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 4005              		.loc 21 1368 13 view .LVU1070
1369:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 4006              		.loc 21 1369 26 is_stmt 0 view .LVU1071
 4007 0024 5D48     		ldr	r0, .L254+12
1370:Veno-Echo.cpp ****         }
 4008              		.loc 21 1370 23 view .LVU1072
 4009 0026 5E49     		ldr	r1, .L254+16
1368:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 4010              		.loc 21 1368 23 view .LVU1073
 4011 0028 1370     		strb	r3, [r2]
1369:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 4012              		.loc 21 1369 13 is_stmt 1 view .LVU1074
1369:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 4013              		.loc 21 1369 26 is_stmt 0 view .LVU1075
 4014 002a 0370     		strb	r3, [r0]
1370:Veno-Echo.cpp ****         }
 4015              		.loc 21 1370 13 is_stmt 1 view .LVU1076
1370:Veno-Echo.cpp ****         }
 4016              		.loc 21 1370 23 is_stmt 0 view .LVU1077
 4017 002c 81ED000A 		vstr.32	s0, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 181


 4018              	.L228:
1385:Veno-Echo.cpp **** 
 4019              		.loc 21 1385 9 is_stmt 1 view .LVU1078
 4020              	.LVL194:
1387:Veno-Echo.cpp ****         {
 4021              		.loc 21 1387 9 view .LVU1079
1395:Veno-Echo.cpp ****         }
 4022              		.loc 21 1395 13 view .LVU1080
 4023              	.LBB1285:
 4024              	.LBI1285:
2019:Veno-Echo.cpp **** {
 4025              		.loc 21 2019 7 view .LVU1081
 4026              	.LBB1286:
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4027              		.loc 21 2021 5 view .LVU1082
2022:Veno-Echo.cpp **** 
 4028              		.loc 21 2022 5 view .LVU1083
 4029              	.LBE1286:
 4030              	.LBE1285:
1395:Veno-Echo.cpp ****         }
 4031              		.loc 21 1395 32 is_stmt 0 view .LVU1084
 4032 0030 5C4A     		ldr	r2, .L254+20
 4033              	.LBB1290:
 4034              	.LBB1287:
2022:Veno-Echo.cpp **** 
 4035              		.loc 21 2022 39 view .LVU1085
 4036 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2022:Veno-Echo.cpp **** 
 4037              		.loc 21 2022 49 view .LVU1086
 4038 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 4039              	.LBE1287:
 4040              	.LBE1290:
1395:Veno-Echo.cpp ****         }
 4041              		.loc 21 1395 32 view .LVU1087
 4042 003a 5B4B     		ldr	r3, .L254+24
 4043              	.LBB1291:
 4044              	.LBB1288:
2022:Veno-Echo.cpp **** 
 4045              		.loc 21 2022 39 view .LVU1088
 4046 003c D2ED007A 		vldr.32	s15, [r2]
2022:Veno-Echo.cpp **** 
 4047              		.loc 21 2022 12 view .LVU1089
 4048 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 4049 0044 93ED000A 		vldr.32	s0, [r3]
 4050              	.LVL195:
2022:Veno-Echo.cpp **** 
 4051              		.loc 21 2022 39 view .LVU1090
 4052 0048 77EE677A 		vsub.f32	s15, s14, s15
2022:Veno-Echo.cpp **** 
 4053              		.loc 21 2022 49 view .LVU1091
 4054 004c 77EEC67A 		vsub.f32	s15, s15, s12
2022:Veno-Echo.cpp **** 
 4055              		.loc 21 2022 12 view .LVU1092
 4056 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 4057              	.LVL196:
2024:Veno-Echo.cpp ****     {
 4058              		.loc 21 2024 5 is_stmt 1 view .LVU1093
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 182


 4059 0054 B5EEC00A 		vcmpe.f32	s0, #0
 4060 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4061 005c 00F19180 		bmi	.L252
2029:Veno-Echo.cpp ****     {
 4062              		.loc 21 2029 5 view .LVU1094
2031:Veno-Echo.cpp ****     }
 4063              		.loc 21 2031 16 is_stmt 0 view .LVU1095
 4064 0060 B4EE470A 		vcmp.f32	s0, s14
 4065 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4066 0068 37FE000A 		vselgt.f32	s0, s14, s0
 4067              	.LVL197:
 4068              	.L234:
2034:Veno-Echo.cpp **** }
 4069              		.loc 21 2034 5 is_stmt 1 view .LVU1096
2034:Veno-Echo.cpp **** }
 4070              		.loc 21 2034 5 is_stmt 0 view .LVU1097
 4071              	.LBE1288:
 4072              	.LBE1291:
1395:Veno-Echo.cpp ****         }
 4073              		.loc 21 1395 32 view .LVU1098
 4074 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 4075 0070 0020     		movs	r0, #0
 4076 0072 9FED4E1A 		vldr.32	s2, .L254+28
 4077 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4078              	.LVL198:
 4079              	.L233:
1398:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 4080              		.loc 21 1398 13 is_stmt 1 view .LVU1099
 4081              	.LBB1292:
 4082              	.LBI1292:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4083              		.loc 26 135 13 view .LVU1100
 4084              	.LBB1293:
 4085              		.loc 26 137 5 view .LVU1101
 4086              		.loc 26 137 9 is_stmt 0 view .LVU1102
 4087 007a 4D4B     		ldr	r3, .L254+32
 4088 007c 9FED4D7A 		vldr.32	s14, .L254+36
 4089 0080 D3ED007A 		vldr.32	s15, [r3]
 4090              	.LBE1293:
 4091              	.LBE1292:
 4092              	.LBB1296:
 4093              	.LBB1297:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 183


  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 4094              		.loc 11 60 42 view .LVU1103
 4095 0084 4C4A     		ldr	r2, .L254+40
 4096              	.LBE1297:
 4097              	.LBE1296:
 4098              	.LBB1299:
 4099              	.LBB1294:
 4100              		.loc 26 137 24 view .LVU1104
 4101 0086 30EE670A 		vsub.f32	s0, s0, s15
 4102              	.LVL199:
 4103              		.loc 26 137 24 view .LVU1105
 4104              	.LBE1294:
 4105              	.LBE1299:
 4106              	.LBE1313:
 4107              	.LBE1338:
1431:Veno-Echo.cpp **** 
 4108              		.loc 21 1431 1 view .LVU1106
 4109 008a BDEC028B 		vldm	sp!, {d8}
 4110              		.cfi_remember_state
 4111              		.cfi_restore 80
 4112              		.cfi_restore 81
 4113              		.cfi_def_cfa_offset 8
 4114              	.LVL200:
 4115              	.LBB1339:
 4116              	.LBB1314:
 4117              	.LBB1300:
 4118              	.LBB1295:
 4119              		.loc 26 137 9 view .LVU1107
 4120 008e E0EE077A 		vfma.f32	s15, s0, s14
 4121 0092 C3ED007A 		vstr.32	s15, [r3]
 4122              	.LVL201:
 4123              		.loc 26 137 9 view .LVU1108
 4124              	.LBE1295:
 4125              	.LBE1300:
1399:Veno-Echo.cpp ****     }
 4126              		.loc 21 1399 13 is_stmt 1 view .LVU1109
 4127              	.LBB1301:
 4128              	.LBI1296:
 4129              		.loc 11 60 17 view .LVU1110
 4130              	.LBB1298:
 4131              		.loc 11 60 37 view .LVU1111
 4132              		.loc 11 60 42 is_stmt 0 view .LVU1112
 4133 0096 C2ED007A 		vstr.32	s15, [r2]
 4134              	.LBE1298:
 4135              	.LBE1301:
 4136              	.LBE1314:
 4137              	.LBE1339:
1431:Veno-Echo.cpp **** 
 4138              		.loc 21 1431 1 view .LVU1113
 4139 009a 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 184


 4140              	.LVL202:
 4141              	.L226:
 4142              		.cfi_restore_state
 4143              	.LBB1340:
 4144              	.LBB1315:
1404:Veno-Echo.cpp **** 
 4145              		.loc 21 1404 9 is_stmt 1 view .LVU1114
1406:Veno-Echo.cpp ****         {
 4146              		.loc 21 1406 9 view .LVU1115
 4147 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4148 009e 002B     		cmp	r3, #0
 4149 00a0 43D1     		bne	.L237
1408:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4150              		.loc 21 1408 13 view .LVU1116
1408:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4151              		.loc 21 1408 23 is_stmt 0 view .LVU1117
 4152 00a2 0124     		movs	r4, #1
1409:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4153              		.loc 21 1409 29 view .LVU1118
 4154 00a4 4548     		ldr	r0, .L254+44
1410:Veno-Echo.cpp ****         }
 4155              		.loc 21 1410 26 view .LVU1119
 4156 00a6 4649     		ldr	r1, .L254+48
1408:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4157              		.loc 21 1408 23 view .LVU1120
 4158 00a8 1470     		strb	r4, [r2]
1409:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4159              		.loc 21 1409 13 is_stmt 1 view .LVU1121
1409:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4160              		.loc 21 1409 29 is_stmt 0 view .LVU1122
 4161 00aa 0370     		strb	r3, [r0]
1410:Veno-Echo.cpp ****         }
 4162              		.loc 21 1410 13 is_stmt 1 view .LVU1123
1410:Veno-Echo.cpp ****         }
 4163              		.loc 21 1410 26 is_stmt 0 view .LVU1124
 4164 00ac 81ED000A 		vstr.32	s0, [r1]
 4165              	.L225:
1410:Veno-Echo.cpp ****         }
 4166              		.loc 21 1410 26 view .LVU1125
 4167              	.LBE1315:
 4168              	.LBE1340:
1431:Veno-Echo.cpp **** 
 4169              		.loc 21 1431 1 view .LVU1126
 4170 00b0 BDEC028B 		vldm	sp!, {d8}
 4171              		.cfi_remember_state
 4172              		.cfi_restore 80
 4173              		.cfi_restore 81
 4174              		.cfi_def_cfa_offset 8
 4175 00b4 10BD     		pop	{r4, pc}
 4176              	.L227:
 4177              		.cfi_restore_state
 4178              	.LBB1341:
 4179              	.LBB1335:
1375:Veno-Echo.cpp ****             {
 4180              		.loc 21 1375 13 is_stmt 1 view .LVU1127
1375:Veno-Echo.cpp ****             {
 4181              		.loc 21 1375 16 is_stmt 0 view .LVU1128
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 185


 4182 00b6 394B     		ldr	r3, .L254+12
1375:Veno-Echo.cpp ****             {
 4183              		.loc 21 1375 13 view .LVU1129
 4184 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4185 00ba 7AB9     		cbnz	r2, .L229
1377:Veno-Echo.cpp ****                 {
 4186              		.loc 21 1377 17 is_stmt 1 view .LVU1130
 4187              	.LVL203:
 4188              	.LBB1302:
 4189              	.LBI1302:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4190              		.loc 22 75 3 view .LVU1131
 4191              	.LBB1303:
 4192              		.loc 22 76 5 view .LVU1132
 4193              		.loc 22 76 5 is_stmt 0 view .LVU1133
 4194              	.LBE1303:
 4195              	.LBE1302:
1377:Veno-Echo.cpp ****                 {
 4196              		.loc 21 1377 23 view .LVU1134
 4197 00bc 384A     		ldr	r2, .L254+16
1377:Veno-Echo.cpp ****                 {
 4198              		.loc 21 1377 17 view .LVU1135
 4199 00be 9FED417A 		vldr.32	s14, .L254+52
1377:Veno-Echo.cpp ****                 {
 4200              		.loc 21 1377 23 view .LVU1136
 4201 00c2 D2ED007A 		vldr.32	s15, [r2]
 4202 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4203              	.LBB1305:
 4204              	.LBB1304:
 4205              		.loc 22 76 31 view .LVU1137
 4206 00ca F0EEE77A 		vabs.f32	s15, s15
 4207              	.LBE1304:
 4208              	.LBE1305:
1377:Veno-Echo.cpp ****                 {
 4209              		.loc 21 1377 17 view .LVU1138
 4210 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4211 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4212 00d6 ABDD     		ble	.L228
1379:Veno-Echo.cpp ****                 }
 4213              		.loc 21 1379 21 is_stmt 1 view .LVU1139
1379:Veno-Echo.cpp ****                 }
 4214              		.loc 21 1379 34 is_stmt 0 view .LVU1140
 4215 00d8 0122     		movs	r2, #1
 4216 00da 1A70     		strb	r2, [r3]
 4217              	.L229:
1385:Veno-Echo.cpp **** 
 4218              		.loc 21 1385 9 is_stmt 1 view .LVU1141
 4219              	.LVL204:
1387:Veno-Echo.cpp ****         {
 4220              		.loc 21 1387 9 view .LVU1142
1389:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4221              		.loc 21 1389 13 view .LVU1143
 4222              	.LBB1306:
 4223              	.LBI1306:
2019:Veno-Echo.cpp **** {
 4224              		.loc 21 2019 7 view .LVU1144
 4225              	.LBB1307:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 186


2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4226              		.loc 21 2021 5 view .LVU1145
2022:Veno-Echo.cpp **** 
 4227              		.loc 21 2022 5 view .LVU1146
 4228              	.LBE1307:
 4229              	.LBE1306:
1389:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4230              		.loc 21 1389 32 is_stmt 0 view .LVU1147
 4231 00dc 314B     		ldr	r3, .L254+20
 4232              	.LBB1310:
 4233              	.LBB1308:
2022:Veno-Echo.cpp **** 
 4234              		.loc 21 2022 39 view .LVU1148
 4235 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2022:Veno-Echo.cpp **** 
 4236              		.loc 21 2022 49 view .LVU1149
 4237 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2022:Veno-Echo.cpp **** 
 4238              		.loc 21 2022 39 view .LVU1150
 4239 00e6 D3ED007A 		vldr.32	s15, [r3]
2022:Veno-Echo.cpp **** 
 4240              		.loc 21 2022 12 view .LVU1151
 4241 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4242 00ee B0EE480A 		vmov.f32	s0, s16
 4243              	.LVL205:
2022:Veno-Echo.cpp **** 
 4244              		.loc 21 2022 39 view .LVU1152
 4245 00f2 77EE677A 		vsub.f32	s15, s14, s15
2022:Veno-Echo.cpp **** 
 4246              		.loc 21 2022 49 view .LVU1153
 4247 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2022:Veno-Echo.cpp **** 
 4248              		.loc 21 2022 12 view .LVU1154
 4249 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4250              	.LVL206:
2024:Veno-Echo.cpp ****     {
 4251              		.loc 21 2024 5 is_stmt 1 view .LVU1155
 4252 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4253 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4254 0106 3FD4     		bmi	.L253
2029:Veno-Echo.cpp ****     {
 4255              		.loc 21 2029 5 view .LVU1156
2031:Veno-Echo.cpp ****     }
 4256              		.loc 21 2031 16 is_stmt 0 view .LVU1157
 4257 0108 B4EE470A 		vcmp.f32	s0, s14
 4258 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4259 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4260              	.LVL207:
 4261              	.L231:
2034:Veno-Echo.cpp **** }
 4262              		.loc 21 2034 5 is_stmt 1 view .LVU1158
2034:Veno-Echo.cpp **** }
 4263              		.loc 21 2034 5 is_stmt 0 view .LVU1159
 4264              	.LBE1308:
 4265              	.LBE1310:
1389:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4266              		.loc 21 1389 32 view .LVU1160
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 187


 4267 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4268 0118 0020     		movs	r0, #0
 4269 011a 9FED241A 		vldr.32	s2, .L254+28
 4270 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4271              	.LVL208:
1390:Veno-Echo.cpp ****         }
 4272              		.loc 21 1390 24 view .LVU1161
 4273 0122 214B     		ldr	r3, .L254+24
 4274              	.LVL209:
1390:Veno-Echo.cpp ****         }
 4275              		.loc 21 1390 13 is_stmt 1 view .LVU1162
1390:Veno-Echo.cpp ****         }
 4276              		.loc 21 1390 24 is_stmt 0 view .LVU1163
 4277 0124 83ED008A 		vstr.32	s16, [r3]
 4278 0128 A7E7     		b	.L233
 4279              	.LVL210:
 4280              	.L237:
1390:Veno-Echo.cpp ****         }
 4281              		.loc 21 1390 24 view .LVU1164
 4282              	.LBE1335:
 4283              	.LBB1336:
1415:Veno-Echo.cpp ****             {
 4284              		.loc 21 1415 13 is_stmt 1 view .LVU1165
1415:Veno-Echo.cpp ****             {
 4285              		.loc 21 1415 16 is_stmt 0 view .LVU1166
 4286 012a 244B     		ldr	r3, .L254+44
1415:Veno-Echo.cpp ****             {
 4287              		.loc 21 1415 13 view .LVU1167
 4288 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4289 012e 7AB9     		cbnz	r2, .L239
1417:Veno-Echo.cpp ****                 {
 4290              		.loc 21 1417 17 is_stmt 1 view .LVU1168
 4291              	.LVL211:
 4292              	.LBB1316:
 4293              	.LBI1316:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4294              		.loc 22 75 3 view .LVU1169
 4295              	.LBB1317:
 4296              		.loc 22 76 5 view .LVU1170
 4297              		.loc 22 76 5 is_stmt 0 view .LVU1171
 4298              	.LBE1317:
 4299              	.LBE1316:
1417:Veno-Echo.cpp ****                 {
 4300              		.loc 21 1417 23 view .LVU1172
 4301 0130 234A     		ldr	r2, .L254+48
1417:Veno-Echo.cpp ****                 {
 4302              		.loc 21 1417 17 view .LVU1173
 4303 0132 9FED247A 		vldr.32	s14, .L254+52
1417:Veno-Echo.cpp ****                 {
 4304              		.loc 21 1417 23 view .LVU1174
 4305 0136 D2ED007A 		vldr.32	s15, [r2]
 4306 013a 70EE677A 		vsub.f32	s15, s0, s15
 4307              	.LBB1319:
 4308              	.LBB1318:
 4309              		.loc 22 76 31 view .LVU1175
 4310 013e F0EEE77A 		vabs.f32	s15, s15
 4311              	.LBE1318:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 188


 4312              	.LBE1319:
1417:Veno-Echo.cpp ****                 {
 4313              		.loc 21 1417 17 view .LVU1176
 4314 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4315 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4316 014a B1DD     		ble	.L225
1419:Veno-Echo.cpp ****                 }
 4317              		.loc 21 1419 21 is_stmt 1 view .LVU1177
1419:Veno-Echo.cpp ****                 }
 4318              		.loc 21 1419 37 is_stmt 0 view .LVU1178
 4319 014c 0122     		movs	r2, #1
 4320 014e 1A70     		strb	r2, [r3]
 4321              	.L239:
1424:Veno-Echo.cpp ****         {
 4322              		.loc 21 1424 9 is_stmt 1 view .LVU1179
1426:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4323              		.loc 21 1426 13 view .LVU1180
1426:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4324              		.loc 21 1426 29 is_stmt 0 view .LVU1181
 4325 0150 B0EE480A 		vmov.f32	s0, s16
 4326              	.LVL212:
1426:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4327              		.loc 21 1426 29 view .LVU1182
 4328 0154 0020     		movs	r0, #0
 4329 0156 9FED1C1A 		vldr.32	s2, .L254+56
 4330 015a DFED140A 		vldr.32	s1, .L254+28
 4331 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4332              	.LVL213:
1426:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4333              		.loc 21 1426 22 view .LVU1183
 4334 0162 1A48     		ldr	r0, .L254+60
 4335              	.LBB1320:
 4336              	.LBB1321:
 4337              	.LBB1322:
 4338              	.LBB1323:
 4339              	.LBB1324:
 4340              		.loc 23 397 18 view .LVU1184
 4341 0164 0122     		movs	r2, #1
 4342              	.LBE1324:
 4343              	.LBE1323:
 4344              	.LBE1322:
 4345              	.LBE1321:
 4346              	.LBE1320:
1427:Veno-Echo.cpp ****             save_flag = true;
 4347              		.loc 21 1427 34 view .LVU1185
 4348 0166 1A49     		ldr	r1, .L254+64
 4349              	.LBB1333:
 4350              	.LBB1331:
 4351              	.LBB1329:
 4352              	.LBB1327:
 4353              	.LBB1325:
 4354              		.loc 23 397 18 view .LVU1186
 4355 0168 1A4B     		ldr	r3, .L254+68
 4356              	.LBE1325:
 4357              	.LBE1327:
 4358              	.LBE1329:
 4359              	.LBE1331:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 189


 4360              	.LBE1333:
1426:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4361              		.loc 21 1426 22 view .LVU1187
 4362 016a 80ED000A 		vstr.32	s0, [r0]
1427:Veno-Echo.cpp ****             save_flag = true;
 4363              		.loc 21 1427 13 is_stmt 1 view .LVU1188
1427:Veno-Echo.cpp ****             save_flag = true;
 4364              		.loc 21 1427 34 is_stmt 0 view .LVU1189
 4365 016e 81ED020A 		vstr.32	s0, [r1, #8]
1428:Veno-Echo.cpp ****         }
 4366              		.loc 21 1428 13 is_stmt 1 view .LVU1190
 4367              	.LVL214:
 4368              	.LBB1334:
 4369              	.LBI1320:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4370              		.loc 24 80 5 view .LVU1191
 4371              	.LBB1332:
 4372              		.loc 24 81 7 view .LVU1192
 4373              	.LBB1330:
 4374              	.LBI1322:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4375              		.loc 23 288 7 view .LVU1193
 4376              	.LBB1328:
 4377              	.LBI1323:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4378              		.loc 23 390 7 view .LVU1194
 4379              	.LBB1326:
 4380              		.loc 23 397 18 is_stmt 0 view .LVU1195
 4381 0172 BFF35B8F 		dmb	ish
 4382 0176 1A70     		strb	r2, [r3]
 4383 0178 BFF35B8F 		dmb	ish
 4384              	.LVL215:
 4385              		.loc 23 397 18 view .LVU1196
 4386              	.LBE1326:
 4387              	.LBE1328:
 4388              	.LBE1330:
 4389              	.LBE1332:
 4390              	.LBE1334:
 4391              	.LBE1336:
 4392              	.LBE1341:
1431:Veno-Echo.cpp **** 
 4393              		.loc 21 1431 1 view .LVU1197
 4394 017c BDEC028B 		vldm	sp!, {d8}
 4395              		.cfi_remember_state
 4396              		.cfi_restore 80
 4397              		.cfi_restore 81
 4398              		.cfi_def_cfa_offset 8
 4399              	.LVL216:
1431:Veno-Echo.cpp **** 
 4400              		.loc 21 1431 1 view .LVU1198
 4401 0180 10BD     		pop	{r4, pc}
 4402              	.LVL217:
 4403              	.L252:
 4404              		.cfi_restore_state
 4405              	.LBB1342:
 4406              	.LBB1337:
 4407              	.LBB1311:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 190


 4408              	.LBB1289:
2026:Veno-Echo.cpp ****     }
 4409              		.loc 21 2026 16 view .LVU1199
 4410 0182 9FED0A0A 		vldr.32	s0, .L254+28
 4411              	.LVL218:
2026:Veno-Echo.cpp ****     }
 4412              		.loc 21 2026 16 view .LVU1200
 4413 0186 71E7     		b	.L234
 4414              	.LVL219:
 4415              	.L253:
2026:Veno-Echo.cpp ****     }
 4416              		.loc 21 2026 16 view .LVU1201
 4417              	.LBE1289:
 4418              	.LBE1311:
 4419              	.LBB1312:
 4420              	.LBB1309:
 4421 0188 9FED080A 		vldr.32	s0, .L254+28
 4422              	.LVL220:
2026:Veno-Echo.cpp ****     }
 4423              		.loc 21 2026 16 view .LVU1202
 4424 018c C2E7     		b	.L231
 4425              	.L255:
 4426 018e 00BF     		.align	2
 4427              	.L254:
 4428 0190 18000000 		.word	.LANCHOR4+24
 4429 0194 00000000 		.word	.LANCHOR7
 4430 0198 00000000 		.word	.LANCHOR60
 4431 019c 00000000 		.word	.LANCHOR61
 4432 01a0 00000000 		.word	.LANCHOR62
 4433 01a4 00000000 		.word	.LANCHOR59
 4434 01a8 00000000 		.word	.LANCHOR63
 4435 01ac 00000000 		.word	0
 4436 01b0 00000000 		.word	.LANCHOR64
 4437 01b4 6F12033D 		.word	1023611503
 4438 01b8 00000000 		.word	.LANCHOR65
 4439 01bc 00000000 		.word	.LANCHOR66
 4440 01c0 00000000 		.word	.LANCHOR67
 4441 01c4 0AD7A33B 		.word	1000593162
 4442 01c8 0000FA43 		.word	1140457472
 4443 01cc 00000000 		.word	.LANCHOR68
 4444 01d0 00000000 		.word	.LANCHOR15
 4445 01d4 00000000 		.word	.LANCHOR16
 4446              	.LBE1309:
 4447              	.LBE1312:
 4448              	.LBE1337:
 4449              	.LBE1342:
 4450              		.cfi_endproc
 4451              	.LFE4323:
 4453              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4454              		.align	1
 4455              		.p2align 2,,3
 4456              		.global	_Z20Update_crossfeedbackv
 4457              		.syntax unified
 4458              		.thumb
 4459              		.thumb_func
 4460              		.fpu fpv5-d16
 4462              	_Z20Update_crossfeedbackv:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 191


 4463              	.LFB4324:
1434:Veno-Echo.cpp ****     static bool lastShift{};
 4464              		.loc 21 1434 1 is_stmt 1 view -0
 4465              		.cfi_startproc
 4466              		@ args = 0, pretend = 0, frame = 0
 4467              		@ frame_needed = 0, uses_anonymous_args = 0
1435:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4468              		.loc 21 1435 5 view .LVU1204
1436:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4469              		.loc 21 1436 5 view .LVU1205
1437:Veno-Echo.cpp **** 
 4470              		.loc 21 1437 5 view .LVU1206
1439:Veno-Echo.cpp **** 
 4471              		.loc 21 1439 5 view .LVU1207
1442:Veno-Echo.cpp **** 
 4472              		.loc 21 1442 5 view .LVU1208
1442:Veno-Echo.cpp **** 
 4473              		.loc 21 1442 47 is_stmt 0 view .LVU1209
 4474 0000 0022     		movs	r2, #0
 4475 0002 0721     		movs	r1, #7
 4476 0004 4548     		ldr	r0, .L271
1434:Veno-Echo.cpp ****     static bool lastShift{};
 4477              		.loc 21 1434 1 view .LVU1210
 4478 0006 10B5     		push	{r4, lr}
 4479              		.cfi_def_cfa_offset 8
 4480              		.cfi_offset 4, -8
 4481              		.cfi_offset 14, -4
 4482 0008 2DED028B 		vpush.64	{d8}
 4483              		.cfi_def_cfa_offset 16
 4484              		.cfi_offset 80, -16
 4485              		.cfi_offset 81, -12
1442:Veno-Echo.cpp **** 
 4486              		.loc 21 1442 47 view .LVU1211
 4487 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4488              	.LVL221:
 4489              	.LBB1343:
1444:Veno-Echo.cpp ****     {   
 4490              		.loc 21 1444 9 view .LVU1212
 4491 0010 434B     		ldr	r3, .L271+4
 4492              	.LBE1343:
1442:Veno-Echo.cpp **** 
 4493              		.loc 21 1442 47 view .LVU1213
 4494 0012 B0EE408A 		vmov.f32	s16, s0
 4495              	.LVL222:
1444:Veno-Echo.cpp ****     {   
 4496              		.loc 21 1444 5 is_stmt 1 view .LVU1214
 4497              	.LBB1381:
 4498              	.LBB1344:
1448:Veno-Echo.cpp ****         {
 4499              		.loc 21 1448 19 is_stmt 0 view .LVU1215
 4500 0016 434A     		ldr	r2, .L271+8
 4501              	.LBE1344:
1444:Veno-Echo.cpp ****     {   
 4502              		.loc 21 1444 5 view .LVU1216
 4503 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4504 001a FBB9     		cbnz	r3, .L257
 4505              	.LBB1353:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 192


1446:Veno-Echo.cpp ****         //update pickup
 4506              		.loc 21 1446 9 is_stmt 1 view .LVU1217
1448:Veno-Echo.cpp ****         {
 4507              		.loc 21 1448 9 view .LVU1218
 4508 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4509 001e 49B3     		cbz	r1, .L258
1450:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4510              		.loc 21 1450 13 view .LVU1219
1451:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4511              		.loc 21 1451 34 is_stmt 0 view .LVU1220
 4512 0020 4148     		ldr	r0, .L271+12
1452:Veno-Echo.cpp ****         }
 4513              		.loc 21 1452 31 view .LVU1221
 4514 0022 4249     		ldr	r1, .L271+16
1450:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4515              		.loc 21 1450 23 view .LVU1222
 4516 0024 1370     		strb	r3, [r2]
1451:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4517              		.loc 21 1451 13 is_stmt 1 view .LVU1223
1451:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4518              		.loc 21 1451 34 is_stmt 0 view .LVU1224
 4519 0026 0370     		strb	r3, [r0]
1452:Veno-Echo.cpp ****         }
 4520              		.loc 21 1452 13 is_stmt 1 view .LVU1225
1452:Veno-Echo.cpp ****         }
 4521              		.loc 21 1452 31 is_stmt 0 view .LVU1226
 4522 0028 81ED000A 		vstr.32	s0, [r1]
 4523              	.L259:
1465:Veno-Echo.cpp **** 
 4524              		.loc 21 1465 9 is_stmt 1 view .LVU1227
 4525              	.LVL223:
1467:Veno-Echo.cpp ****         {
 4526              		.loc 21 1467 9 view .LVU1228
1475:Veno-Echo.cpp ****         }
 4527              		.loc 21 1475 13 view .LVU1229
1475:Veno-Echo.cpp ****         }
 4528              		.loc 21 1475 40 is_stmt 0 view .LVU1230
 4529 002c 404B     		ldr	r3, .L271+20
 4530 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4531 0032 0020     		movs	r0, #0
 4532 0034 DFED3F0A 		vldr.32	s1, .L271+24
 4533 0038 93ED000A 		vldr.32	s0, [r3]
 4534              	.LVL224:
1475:Veno-Echo.cpp ****         }
 4535              		.loc 21 1475 40 view .LVU1231
 4536 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4537              	.LVL225:
 4538              	.L267:
1478:Veno-Echo.cpp ****     }
 4539              		.loc 21 1478 9 is_stmt 1 view .LVU1232
 4540              	.LBB1345:
 4541              	.LBI1345:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4542              		.loc 26 135 13 view .LVU1233
 4543              	.LBB1346:
 4544              		.loc 26 137 5 view .LVU1234
 4545              		.loc 26 137 9 is_stmt 0 view .LVU1235
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 193


 4546 0040 3D4B     		ldr	r3, .L271+28
 4547 0042 9FED3E7A 		vldr.32	s14, .L271+32
 4548 0046 D3ED007A 		vldr.32	s15, [r3]
 4549              		.loc 26 137 24 view .LVU1236
 4550 004a 30EE670A 		vsub.f32	s0, s0, s15
 4551              	.LVL226:
 4552              		.loc 26 137 24 view .LVU1237
 4553              	.LBE1346:
 4554              	.LBE1345:
 4555              	.LBE1353:
 4556              	.LBE1381:
1510:Veno-Echo.cpp **** 
 4557              		.loc 21 1510 1 view .LVU1238
 4558 004e BDEC028B 		vldm	sp!, {d8}
 4559              		.cfi_remember_state
 4560              		.cfi_restore 80
 4561              		.cfi_restore 81
 4562              		.cfi_def_cfa_offset 8
 4563              	.LVL227:
 4564              	.LBB1382:
 4565              	.LBB1354:
 4566              	.LBB1348:
 4567              	.LBB1347:
 4568              		.loc 26 137 9 view .LVU1239
 4569 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4570 0056 C3ED007A 		vstr.32	s15, [r3]
 4571              	.LBE1347:
 4572              	.LBE1348:
 4573              	.LBE1354:
 4574              	.LBE1382:
1510:Veno-Echo.cpp **** 
 4575              		.loc 21 1510 1 view .LVU1240
 4576 005a 10BD     		pop	{r4, pc}
 4577              	.LVL228:
 4578              	.L257:
 4579              		.cfi_restore_state
 4580              	.LBB1383:
 4581              	.LBB1355:
1482:Veno-Echo.cpp **** 
 4582              		.loc 21 1482 9 is_stmt 1 view .LVU1241
1484:Veno-Echo.cpp ****         {
 4583              		.loc 21 1484 9 view .LVU1242
 4584 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4585 005e 4BBB     		cbnz	r3, .L263
1486:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4586              		.loc 21 1486 13 view .LVU1243
1486:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4587              		.loc 21 1486 23 is_stmt 0 view .LVU1244
 4588 0060 0124     		movs	r4, #1
1487:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4589              		.loc 21 1487 28 view .LVU1245
 4590 0062 3748     		ldr	r0, .L271+36
1488:Veno-Echo.cpp ****         }
 4591              		.loc 21 1488 25 view .LVU1246
 4592 0064 3749     		ldr	r1, .L271+40
1486:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4593              		.loc 21 1486 23 view .LVU1247
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 194


 4594 0066 1470     		strb	r4, [r2]
1487:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4595              		.loc 21 1487 13 is_stmt 1 view .LVU1248
1487:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4596              		.loc 21 1487 28 is_stmt 0 view .LVU1249
 4597 0068 0370     		strb	r3, [r0]
1488:Veno-Echo.cpp ****         }
 4598              		.loc 21 1488 13 is_stmt 1 view .LVU1250
1488:Veno-Echo.cpp ****         }
 4599              		.loc 21 1488 25 is_stmt 0 view .LVU1251
 4600 006a 81ED000A 		vstr.32	s0, [r1]
 4601              	.L256:
1488:Veno-Echo.cpp ****         }
 4602              		.loc 21 1488 25 view .LVU1252
 4603              	.LBE1355:
 4604              	.LBE1383:
1510:Veno-Echo.cpp **** 
 4605              		.loc 21 1510 1 view .LVU1253
 4606 006e BDEC028B 		vldm	sp!, {d8}
 4607              		.cfi_remember_state
 4608              		.cfi_restore 80
 4609              		.cfi_restore 81
 4610              		.cfi_def_cfa_offset 8
 4611 0072 10BD     		pop	{r4, pc}
 4612              	.L258:
 4613              		.cfi_restore_state
 4614              	.LBB1384:
 4615              	.LBB1379:
1457:Veno-Echo.cpp ****             {
 4616              		.loc 21 1457 13 is_stmt 1 view .LVU1254
1457:Veno-Echo.cpp ****             {
 4617              		.loc 21 1457 16 is_stmt 0 view .LVU1255
 4618 0074 2C4B     		ldr	r3, .L271+12
1457:Veno-Echo.cpp ****             {
 4619              		.loc 21 1457 13 view .LVU1256
 4620 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4621 0078 7AB9     		cbnz	r2, .L260
1459:Veno-Echo.cpp ****                 {
 4622              		.loc 21 1459 17 is_stmt 1 view .LVU1257
 4623              	.LVL229:
 4624              	.LBB1349:
 4625              	.LBI1349:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4626              		.loc 22 75 3 view .LVU1258
 4627              	.LBB1350:
 4628              		.loc 22 76 5 view .LVU1259
 4629              		.loc 22 76 5 is_stmt 0 view .LVU1260
 4630              	.LBE1350:
 4631              	.LBE1349:
1459:Veno-Echo.cpp ****                 {
 4632              		.loc 21 1459 23 view .LVU1261
 4633 007a 2C4A     		ldr	r2, .L271+16
1459:Veno-Echo.cpp ****                 {
 4634              		.loc 21 1459 17 view .LVU1262
 4635 007c 9FED327A 		vldr.32	s14, .L271+44
1459:Veno-Echo.cpp ****                 {
 4636              		.loc 21 1459 23 view .LVU1263
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 195


 4637 0080 D2ED007A 		vldr.32	s15, [r2]
 4638 0084 70EE677A 		vsub.f32	s15, s0, s15
 4639              	.LBB1352:
 4640              	.LBB1351:
 4641              		.loc 22 76 31 view .LVU1264
 4642 0088 F0EEE77A 		vabs.f32	s15, s15
 4643              	.LBE1351:
 4644              	.LBE1352:
1459:Veno-Echo.cpp ****                 {
 4645              		.loc 21 1459 17 view .LVU1265
 4646 008c F4EEC77A 		vcmpe.f32	s15, s14
 4647 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4648 0094 CADD     		ble	.L259
1461:Veno-Echo.cpp ****                 }
 4649              		.loc 21 1461 21 is_stmt 1 view .LVU1266
1461:Veno-Echo.cpp ****                 }
 4650              		.loc 21 1461 42 is_stmt 0 view .LVU1267
 4651 0096 0122     		movs	r2, #1
 4652 0098 1A70     		strb	r2, [r3]
 4653              	.L260:
1465:Veno-Echo.cpp **** 
 4654              		.loc 21 1465 9 is_stmt 1 view .LVU1268
 4655              	.LVL230:
1467:Veno-Echo.cpp ****         {
 4656              		.loc 21 1467 9 view .LVU1269
1469:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4657              		.loc 21 1469 13 view .LVU1270
1469:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4658              		.loc 21 1469 40 is_stmt 0 view .LVU1271
 4659 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4660 009e 0020     		movs	r0, #0
 4661 00a0 B0EE480A 		vmov.f32	s0, s16
 4662              	.LVL231:
1469:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4663              		.loc 21 1469 40 view .LVU1272
 4664 00a4 DFED230A 		vldr.32	s1, .L271+24
 4665 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4666              	.LVL232:
1470:Veno-Echo.cpp ****         }
 4667              		.loc 21 1470 32 view .LVU1273
 4668 00ac 204B     		ldr	r3, .L271+20
 4669              	.LVL233:
1470:Veno-Echo.cpp ****         }
 4670              		.loc 21 1470 13 is_stmt 1 view .LVU1274
1470:Veno-Echo.cpp ****         }
 4671              		.loc 21 1470 32 is_stmt 0 view .LVU1275
 4672 00ae 83ED008A 		vstr.32	s16, [r3]
 4673 00b2 C5E7     		b	.L267
 4674              	.LVL234:
 4675              	.L263:
1470:Veno-Echo.cpp ****         }
 4676              		.loc 21 1470 32 view .LVU1276
 4677              	.LBE1379:
 4678              	.LBB1380:
1493:Veno-Echo.cpp ****             {
 4679              		.loc 21 1493 13 is_stmt 1 view .LVU1277
1493:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 196


 4680              		.loc 21 1493 16 is_stmt 0 view .LVU1278
 4681 00b4 224B     		ldr	r3, .L271+36
1493:Veno-Echo.cpp ****             {
 4682              		.loc 21 1493 13 view .LVU1279
 4683 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4684 00b8 7AB9     		cbnz	r2, .L265
1495:Veno-Echo.cpp ****                 {
 4685              		.loc 21 1495 17 is_stmt 1 view .LVU1280
 4686              	.LVL235:
 4687              	.LBB1356:
 4688              	.LBI1356:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4689              		.loc 22 75 3 view .LVU1281
 4690              	.LBB1357:
 4691              		.loc 22 76 5 view .LVU1282
 4692              		.loc 22 76 5 is_stmt 0 view .LVU1283
 4693              	.LBE1357:
 4694              	.LBE1356:
1495:Veno-Echo.cpp ****                 {
 4695              		.loc 21 1495 23 view .LVU1284
 4696 00ba 224A     		ldr	r2, .L271+40
1495:Veno-Echo.cpp ****                 {
 4697              		.loc 21 1495 17 view .LVU1285
 4698 00bc 9FED227A 		vldr.32	s14, .L271+44
1495:Veno-Echo.cpp ****                 {
 4699              		.loc 21 1495 23 view .LVU1286
 4700 00c0 D2ED007A 		vldr.32	s15, [r2]
 4701 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4702              	.LBB1359:
 4703              	.LBB1358:
 4704              		.loc 22 76 31 view .LVU1287
 4705 00c8 F0EEE77A 		vabs.f32	s15, s15
 4706              	.LBE1358:
 4707              	.LBE1359:
1495:Veno-Echo.cpp ****                 {
 4708              		.loc 21 1495 17 view .LVU1288
 4709 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4710 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4711 00d4 CBDD     		ble	.L256
1497:Veno-Echo.cpp ****                 }
 4712              		.loc 21 1497 21 is_stmt 1 view .LVU1289
1497:Veno-Echo.cpp ****                 }
 4713              		.loc 21 1497 36 is_stmt 0 view .LVU1290
 4714 00d6 0122     		movs	r2, #1
 4715 00d8 1A70     		strb	r2, [r3]
 4716              	.L265:
1502:Veno-Echo.cpp ****         {
 4717              		.loc 21 1502 9 is_stmt 1 view .LVU1291
 4718              	.LBB1360:
1504:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4719              		.loc 21 1504 13 view .LVU1292
 4720              	.LBB1361:
 4721              	.LBB1362:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 197


  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4722              		.loc 9 60 20 is_stmt 0 view .LVU1293
 4723 00da 1C4C     		ldr	r4, .L271+48
 4724              	.LBE1362:
 4725              	.LBE1361:
1504:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4726              		.loc 21 1504 32 view .LVU1294
 4727 00dc B0EE480A 		vmov.f32	s0, s16
 4728              	.LVL236:
1504:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4729              		.loc 21 1504 32 view .LVU1295
 4730 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4731 00e4 0020     		movs	r0, #0
 4732 00e6 DFED1A0A 		vldr.32	s1, .L271+52
 4733 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4734              	.LVL237:
 4735              	.LBB1366:
 4736              	.LBB1363:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 198


  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4737              		.loc 9 61 34 view .LVU1296
 4738 00ee 2046     		mov	r0, r4
 4739              	.LBE1363:
 4740              	.LBE1366:
1504:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4741              		.loc 21 1504 32 view .LVU1297
 4742 00f0 B0EE408A 		vmov.f32	s16, s0
 4743              	.LVL238:
1505:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4744              		.loc 21 1505 13 is_stmt 1 view .LVU1298
 4745              	.LBB1367:
 4746              	.LBI1361:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4747              		.loc 9 58 17 view .LVU1299
 4748              	.LBB1364:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4749              		.loc 9 60 9 view .LVU1300
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4750              		.loc 9 60 20 is_stmt 0 view .LVU1301
 4751 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4752              		.loc 9 61 9 is_stmt 1 view .LVU1302
 4753              		.loc 9 61 34 is_stmt 0 view .LVU1303
 4754 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4755              	.LVL239:
 4756              		.loc 9 61 34 view .LVU1304
 4757              	.LBE1364:
 4758              	.LBE1367:
1506:Veno-Echo.cpp ****             save_flag = true;
 4759              		.loc 21 1506 33 view .LVU1305
 4760 00fc 1549     		ldr	r1, .L271+56
 4761              	.LBB1368:
 4762              	.LBB1369:
 4763              	.LBB1370:
 4764              	.LBB1371:
 4765              	.LBB1372:
 4766              		.loc 23 397 18 view .LVU1306
 4767 00fe 164B     		ldr	r3, .L271+60
 4768 0100 0122     		movs	r2, #1
 4769              	.LBE1372:
 4770              	.LBE1371:
 4771              	.LBE1370:
 4772              	.LBE1369:
 4773              	.LBE1368:
1506:Veno-Echo.cpp ****             save_flag = true;
 4774              		.loc 21 1506 33 view .LVU1307
 4775 0102 81ED038A 		vstr.32	s16, [r1, #12]
 4776              	.LBB1377:
 4777              	.LBB1365:
 4778              		.loc 9 61 20 view .LVU1308
 4779 0106 84ED060A 		vstr.32	s0, [r4, #24]
 4780              	.LVL240:
 4781              		.loc 9 61 20 view .LVU1309
 4782              	.LBE1365:
 4783              	.LBE1377:
1506:Veno-Echo.cpp ****             save_flag = true;
 4784              		.loc 21 1506 13 is_stmt 1 view .LVU1310
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 199


1507:Veno-Echo.cpp ****         }
 4785              		.loc 21 1507 13 view .LVU1311
 4786              	.LBB1378:
 4787              	.LBI1368:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4788              		.loc 24 80 5 view .LVU1312
 4789              	.LBB1376:
 4790              		.loc 24 81 7 view .LVU1313
 4791              	.LBB1375:
 4792              	.LBI1370:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4793              		.loc 23 288 7 view .LVU1314
 4794              	.LBB1374:
 4795              	.LBI1371:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4796              		.loc 23 390 7 view .LVU1315
 4797              	.LBB1373:
 4798              		.loc 23 397 18 is_stmt 0 view .LVU1316
 4799 010a BFF35B8F 		dmb	ish
 4800 010e 1A70     		strb	r2, [r3]
 4801 0110 BFF35B8F 		dmb	ish
 4802              	.LVL241:
 4803              		.loc 23 397 18 view .LVU1317
 4804              	.LBE1373:
 4805              	.LBE1374:
 4806              	.LBE1375:
 4807              	.LBE1376:
 4808              	.LBE1378:
 4809              	.LBE1360:
 4810              	.LBE1380:
 4811              	.LBE1384:
1510:Veno-Echo.cpp **** 
 4812              		.loc 21 1510 1 view .LVU1318
 4813 0114 BDEC028B 		vldm	sp!, {d8}
 4814              		.cfi_restore 80
 4815              		.cfi_restore 81
 4816              		.cfi_def_cfa_offset 8
 4817              	.LVL242:
1510:Veno-Echo.cpp **** 
 4818              		.loc 21 1510 1 view .LVU1319
 4819 0118 10BD     		pop	{r4, pc}
 4820              	.L272:
 4821 011a 00BF     		.align	2
 4822              	.L271:
 4823 011c 18000000 		.word	.LANCHOR4+24
 4824 0120 00000000 		.word	.LANCHOR7
 4825 0124 00000000 		.word	.LANCHOR69
 4826 0128 00000000 		.word	.LANCHOR70
 4827 012c 00000000 		.word	.LANCHOR71
 4828 0130 00000000 		.word	.LANCHOR75
 4829 0134 00000000 		.word	0
 4830 0138 00000000 		.word	.LANCHOR72
 4831 013c 6F12033D 		.word	1023611503
 4832 0140 00000000 		.word	.LANCHOR73
 4833 0144 00000000 		.word	.LANCHOR74
 4834 0148 0AD7A33B 		.word	1000593162
 4835 014c 00000000 		.word	.LANCHOR76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 200


 4836 0150 CDCCCC3D 		.word	1036831949
 4837 0154 00000000 		.word	.LANCHOR15
 4838 0158 00000000 		.word	.LANCHOR16
 4839              		.cfi_endproc
 4840              	.LFE4324:
 4842              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4843              		.align	1
 4844              		.p2align 2,,3
 4845              		.global	_Z18Update_filterXfadev
 4846              		.syntax unified
 4847              		.thumb
 4848              		.thumb_func
 4849              		.fpu fpv5-d16
 4851              	_Z18Update_filterXfadev:
 4852              	.LFB4325:
1513:Veno-Echo.cpp ****     static bool lastShift{};
 4853              		.loc 21 1513 1 is_stmt 1 view -0
 4854              		.cfi_startproc
 4855              		@ args = 0, pretend = 0, frame = 0
 4856              		@ frame_needed = 0, uses_anonymous_args = 0
1514:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4857              		.loc 21 1514 5 view .LVU1321
1515:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4858              		.loc 21 1515 5 view .LVU1322
1516:Veno-Echo.cpp **** 
 4859              		.loc 21 1516 5 view .LVU1323
1518:Veno-Echo.cpp **** 
 4860              		.loc 21 1518 5 view .LVU1324
1521:Veno-Echo.cpp **** 
 4861              		.loc 21 1521 5 view .LVU1325
1521:Veno-Echo.cpp **** 
 4862              		.loc 21 1521 45 is_stmt 0 view .LVU1326
 4863 0000 0322     		movs	r2, #3
 4864 0002 0721     		movs	r1, #7
 4865 0004 4648     		ldr	r0, .L295
1513:Veno-Echo.cpp ****     static bool lastShift{};
 4866              		.loc 21 1513 1 view .LVU1327
 4867 0006 10B5     		push	{r4, lr}
 4868              		.cfi_def_cfa_offset 8
 4869              		.cfi_offset 4, -8
 4870              		.cfi_offset 14, -4
 4871 0008 2DED028B 		vpush.64	{d8}
 4872              		.cfi_def_cfa_offset 16
 4873              		.cfi_offset 80, -16
 4874              		.cfi_offset 81, -12
1521:Veno-Echo.cpp **** 
 4875              		.loc 21 1521 45 view .LVU1328
 4876 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4877              	.LVL243:
 4878              	.LBB1385:
1523:Veno-Echo.cpp ****     {   
 4879              		.loc 21 1523 9 view .LVU1329
 4880 0010 444B     		ldr	r3, .L295+4
 4881              	.LBE1385:
1521:Veno-Echo.cpp **** 
 4882              		.loc 21 1521 45 view .LVU1330
 4883 0012 B0EE408A 		vmov.f32	s16, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 201


 4884              	.LVL244:
1523:Veno-Echo.cpp ****     {   
 4885              		.loc 21 1523 5 is_stmt 1 view .LVU1331
 4886              	.LBB1415:
 4887              	.LBB1386:
1527:Veno-Echo.cpp ****         {
 4888              		.loc 21 1527 19 is_stmt 0 view .LVU1332
 4889 0016 444A     		ldr	r2, .L295+8
 4890              	.LBE1386:
1523:Veno-Echo.cpp ****     {   
 4891              		.loc 21 1523 5 view .LVU1333
 4892 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4893 001a FBB9     		cbnz	r3, .L274
 4894              	.LBB1395:
1525:Veno-Echo.cpp ****         //update pickup
 4895              		.loc 21 1525 9 is_stmt 1 view .LVU1334
1527:Veno-Echo.cpp ****         {
 4896              		.loc 21 1527 9 view .LVU1335
 4897 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4898 001e 49B3     		cbz	r1, .L275
1529:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4899              		.loc 21 1529 13 view .LVU1336
1530:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4900              		.loc 21 1530 32 is_stmt 0 view .LVU1337
 4901 0020 4248     		ldr	r0, .L295+12
1531:Veno-Echo.cpp ****         }
 4902              		.loc 21 1531 29 view .LVU1338
 4903 0022 4349     		ldr	r1, .L295+16
1529:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4904              		.loc 21 1529 23 view .LVU1339
 4905 0024 1370     		strb	r3, [r2]
1530:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4906              		.loc 21 1530 13 is_stmt 1 view .LVU1340
1530:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4907              		.loc 21 1530 32 is_stmt 0 view .LVU1341
 4908 0026 0370     		strb	r3, [r0]
1531:Veno-Echo.cpp ****         }
 4909              		.loc 21 1531 13 is_stmt 1 view .LVU1342
1531:Veno-Echo.cpp ****         }
 4910              		.loc 21 1531 29 is_stmt 0 view .LVU1343
 4911 0028 81ED000A 		vstr.32	s0, [r1]
 4912              	.L276:
1545:Veno-Echo.cpp **** 
 4913              		.loc 21 1545 9 is_stmt 1 view .LVU1344
 4914              	.LVL245:
1547:Veno-Echo.cpp ****         {
 4915              		.loc 21 1547 9 view .LVU1345
1555:Veno-Echo.cpp ****         }
 4916              		.loc 21 1555 13 view .LVU1346
1555:Veno-Echo.cpp ****         }
 4917              		.loc 21 1555 38 is_stmt 0 view .LVU1347
 4918 002c 414B     		ldr	r3, .L295+20
 4919 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4920 0032 0120     		movs	r0, #1
 4921 0034 DFED400A 		vldr.32	s1, .L295+24
 4922 0038 93ED000A 		vldr.32	s0, [r3]
 4923              	.LVL246:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 202


1555:Veno-Echo.cpp ****         }
 4924              		.loc 21 1555 38 view .LVU1348
 4925 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4926              	.LVL247:
 4927              	.L286:
1558:Veno-Echo.cpp ****     }
 4928              		.loc 21 1558 9 is_stmt 1 view .LVU1349
 4929              	.LBB1387:
 4930              	.LBI1387:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4931              		.loc 26 135 13 view .LVU1350
 4932              	.LBB1388:
 4933              		.loc 26 137 5 view .LVU1351
 4934              		.loc 26 137 9 is_stmt 0 view .LVU1352
 4935 0040 3E4B     		ldr	r3, .L295+28
 4936 0042 9FED3F7A 		vldr.32	s14, .L295+32
 4937 0046 D3ED007A 		vldr.32	s15, [r3]
 4938              		.loc 26 137 24 view .LVU1353
 4939 004a 30EE670A 		vsub.f32	s0, s0, s15
 4940              	.LVL248:
 4941              		.loc 26 137 24 view .LVU1354
 4942              	.LBE1388:
 4943              	.LBE1387:
 4944              	.LBE1395:
 4945              	.LBE1415:
1601:Veno-Echo.cpp **** 
 4946              		.loc 21 1601 1 view .LVU1355
 4947 004e BDEC028B 		vldm	sp!, {d8}
 4948              		.cfi_remember_state
 4949              		.cfi_restore 80
 4950              		.cfi_restore 81
 4951              		.cfi_def_cfa_offset 8
 4952              	.LVL249:
 4953              	.LBB1416:
 4954              	.LBB1396:
 4955              	.LBB1390:
 4956              	.LBB1389:
 4957              		.loc 26 137 9 view .LVU1356
 4958 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4959 0056 C3ED007A 		vstr.32	s15, [r3]
 4960              	.LBE1389:
 4961              	.LBE1390:
 4962              	.LBE1396:
 4963              	.LBE1416:
1601:Veno-Echo.cpp **** 
 4964              		.loc 21 1601 1 view .LVU1357
 4965 005a 10BD     		pop	{r4, pc}
 4966              	.LVL250:
 4967              	.L274:
 4968              		.cfi_restore_state
 4969              	.LBB1417:
 4970              	.LBB1397:
1563:Veno-Echo.cpp **** 
 4971              		.loc 21 1563 9 is_stmt 1 view .LVU1358
1565:Veno-Echo.cpp ****         {
 4972              		.loc 21 1565 9 view .LVU1359
 4973 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 203


 4974 005e 4BBB     		cbnz	r3, .L280
1567:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4975              		.loc 21 1567 13 view .LVU1360
1567:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4976              		.loc 21 1567 23 is_stmt 0 view .LVU1361
 4977 0060 0124     		movs	r4, #1
1568:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4978              		.loc 21 1568 32 view .LVU1362
 4979 0062 3848     		ldr	r0, .L295+36
1569:Veno-Echo.cpp ****         }
 4980              		.loc 21 1569 29 view .LVU1363
 4981 0064 3849     		ldr	r1, .L295+40
1567:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4982              		.loc 21 1567 23 view .LVU1364
 4983 0066 1470     		strb	r4, [r2]
1568:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4984              		.loc 21 1568 13 is_stmt 1 view .LVU1365
1568:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4985              		.loc 21 1568 32 is_stmt 0 view .LVU1366
 4986 0068 0370     		strb	r3, [r0]
1569:Veno-Echo.cpp ****         }
 4987              		.loc 21 1569 13 is_stmt 1 view .LVU1367
1569:Veno-Echo.cpp ****         }
 4988              		.loc 21 1569 29 is_stmt 0 view .LVU1368
 4989 006a 81ED000A 		vstr.32	s0, [r1]
 4990              	.L273:
1569:Veno-Echo.cpp ****         }
 4991              		.loc 21 1569 29 view .LVU1369
 4992              	.LBE1397:
 4993              	.LBE1417:
1601:Veno-Echo.cpp **** 
 4994              		.loc 21 1601 1 view .LVU1370
 4995 006e BDEC028B 		vldm	sp!, {d8}
 4996              		.cfi_remember_state
 4997              		.cfi_restore 80
 4998              		.cfi_restore 81
 4999              		.cfi_def_cfa_offset 8
 5000 0072 10BD     		pop	{r4, pc}
 5001              	.L275:
 5002              		.cfi_restore_state
 5003              	.LBB1418:
 5004              	.LBB1412:
1536:Veno-Echo.cpp ****             {
 5005              		.loc 21 1536 13 is_stmt 1 view .LVU1371
1536:Veno-Echo.cpp ****             {
 5006              		.loc 21 1536 16 is_stmt 0 view .LVU1372
 5007 0074 2D4B     		ldr	r3, .L295+12
1536:Veno-Echo.cpp ****             {
 5008              		.loc 21 1536 13 view .LVU1373
 5009 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5010 0078 7AB9     		cbnz	r2, .L277
1538:Veno-Echo.cpp ****                 {
 5011              		.loc 21 1538 17 is_stmt 1 view .LVU1374
 5012              	.LVL251:
 5013              	.LBB1391:
 5014              	.LBI1391:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 204


 5015              		.loc 22 75 3 view .LVU1375
 5016              	.LBB1392:
 5017              		.loc 22 76 5 view .LVU1376
 5018              		.loc 22 76 5 is_stmt 0 view .LVU1377
 5019              	.LBE1392:
 5020              	.LBE1391:
1538:Veno-Echo.cpp ****                 {
 5021              		.loc 21 1538 23 view .LVU1378
 5022 007a 2D4A     		ldr	r2, .L295+16
1538:Veno-Echo.cpp ****                 {
 5023              		.loc 21 1538 17 view .LVU1379
 5024 007c 9FED337A 		vldr.32	s14, .L295+44
1538:Veno-Echo.cpp ****                 {
 5025              		.loc 21 1538 23 view .LVU1380
 5026 0080 D2ED007A 		vldr.32	s15, [r2]
 5027 0084 70EE677A 		vsub.f32	s15, s0, s15
 5028              	.LBB1394:
 5029              	.LBB1393:
 5030              		.loc 22 76 31 view .LVU1381
 5031 0088 F0EEE77A 		vabs.f32	s15, s15
 5032              	.LBE1393:
 5033              	.LBE1394:
1538:Veno-Echo.cpp ****                 {
 5034              		.loc 21 1538 17 view .LVU1382
 5035 008c F4EEC77A 		vcmpe.f32	s15, s14
 5036 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5037 0094 CADD     		ble	.L276
1540:Veno-Echo.cpp ****                 }
 5038              		.loc 21 1540 21 is_stmt 1 view .LVU1383
1540:Veno-Echo.cpp ****                 }
 5039              		.loc 21 1540 40 is_stmt 0 view .LVU1384
 5040 0096 0122     		movs	r2, #1
 5041 0098 1A70     		strb	r2, [r3]
 5042              	.L277:
1545:Veno-Echo.cpp **** 
 5043              		.loc 21 1545 9 is_stmt 1 view .LVU1385
 5044              	.LVL252:
1547:Veno-Echo.cpp ****         {
 5045              		.loc 21 1547 9 view .LVU1386
1549:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5046              		.loc 21 1549 13 view .LVU1387
1549:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5047              		.loc 21 1549 38 is_stmt 0 view .LVU1388
 5048 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 5049 009e 0120     		movs	r0, #1
 5050 00a0 B0EE480A 		vmov.f32	s0, s16
 5051              	.LVL253:
1549:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5052              		.loc 21 1549 38 view .LVU1389
 5053 00a4 DFED240A 		vldr.32	s1, .L295+24
 5054 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5055              	.LVL254:
1550:Veno-Echo.cpp ****         }
 5056              		.loc 21 1550 30 view .LVU1390
 5057 00ac 214B     		ldr	r3, .L295+20
 5058              	.LVL255:
1550:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 205


 5059              		.loc 21 1550 13 is_stmt 1 view .LVU1391
1550:Veno-Echo.cpp ****         }
 5060              		.loc 21 1550 30 is_stmt 0 view .LVU1392
 5061 00ae 83ED008A 		vstr.32	s16, [r3]
 5062 00b2 C5E7     		b	.L286
 5063              	.LVL256:
 5064              	.L280:
1550:Veno-Echo.cpp ****         }
 5065              		.loc 21 1550 30 view .LVU1393
 5066              	.LBE1412:
 5067              	.LBB1413:
1574:Veno-Echo.cpp ****             {
 5068              		.loc 21 1574 13 is_stmt 1 view .LVU1394
1574:Veno-Echo.cpp ****             {
 5069              		.loc 21 1574 16 is_stmt 0 view .LVU1395
 5070 00b4 234B     		ldr	r3, .L295+36
1574:Veno-Echo.cpp ****             {
 5071              		.loc 21 1574 13 view .LVU1396
 5072 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5073 00b8 7AB9     		cbnz	r2, .L282
1576:Veno-Echo.cpp ****                 {
 5074              		.loc 21 1576 17 is_stmt 1 view .LVU1397
 5075              	.LVL257:
 5076              	.LBB1398:
 5077              	.LBI1398:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5078              		.loc 22 75 3 view .LVU1398
 5079              	.LBB1399:
 5080              		.loc 22 76 5 view .LVU1399
 5081              		.loc 22 76 5 is_stmt 0 view .LVU1400
 5082              	.LBE1399:
 5083              	.LBE1398:
1576:Veno-Echo.cpp ****                 {
 5084              		.loc 21 1576 23 view .LVU1401
 5085 00ba 234A     		ldr	r2, .L295+40
1576:Veno-Echo.cpp ****                 {
 5086              		.loc 21 1576 17 view .LVU1402
 5087 00bc 9FED237A 		vldr.32	s14, .L295+44
1576:Veno-Echo.cpp ****                 {
 5088              		.loc 21 1576 23 view .LVU1403
 5089 00c0 D2ED007A 		vldr.32	s15, [r2]
 5090 00c4 70EE677A 		vsub.f32	s15, s0, s15
 5091              	.LBB1401:
 5092              	.LBB1400:
 5093              		.loc 22 76 31 view .LVU1404
 5094 00c8 F0EEE77A 		vabs.f32	s15, s15
 5095              	.LBE1400:
 5096              	.LBE1401:
1576:Veno-Echo.cpp ****                 {
 5097              		.loc 21 1576 17 view .LVU1405
 5098 00cc F4EEC77A 		vcmpe.f32	s15, s14
 5099 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5100 00d4 CBDD     		ble	.L273
1578:Veno-Echo.cpp ****                 }
 5101              		.loc 21 1578 21 is_stmt 1 view .LVU1406
1578:Veno-Echo.cpp ****                 }
 5102              		.loc 21 1578 40 is_stmt 0 view .LVU1407
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 206


 5103 00d6 0122     		movs	r2, #1
 5104 00d8 1A70     		strb	r2, [r3]
 5105              	.L282:
1583:Veno-Echo.cpp ****         {
 5106              		.loc 21 1583 9 is_stmt 1 view .LVU1408
1585:Veno-Echo.cpp ****             {
 5107              		.loc 21 1585 13 view .LVU1409
 5108 00da DFED1D7A 		vldr.32	s15, .L295+48
 5109 00de B4EEE78A 		vcmpe.f32	s16, s15
 5110 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5111 00e6 0FD5     		bpl	.L294
1587:Veno-Echo.cpp ****             }
 5112              		.loc 21 1587 17 view .LVU1410
1587:Veno-Echo.cpp ****             }
 5113              		.loc 21 1587 29 is_stmt 0 view .LVU1411
 5114 00e8 1A4B     		ldr	r3, .L295+52
 5115 00ea 0022     		movs	r2, #0
 5116 00ec 1A70     		strb	r2, [r3]
 5117              	.L284:
1597:Veno-Echo.cpp ****             save_flag = true;
 5118              		.loc 21 1597 13 is_stmt 1 view .LVU1412
1597:Veno-Echo.cpp ****             save_flag = true;
 5119              		.loc 21 1597 39 is_stmt 0 view .LVU1413
 5120 00ee 1A49     		ldr	r1, .L295+56
 5121              	.LBB1402:
 5122              	.LBB1403:
 5123              	.LBB1404:
 5124              	.LBB1405:
 5125              	.LBB1406:
 5126              		.loc 23 397 18 view .LVU1414
 5127 00f0 0122     		movs	r2, #1
 5128 00f2 1A4B     		ldr	r3, .L295+60
 5129              	.LBE1406:
 5130              	.LBE1405:
 5131              	.LBE1404:
 5132              	.LBE1403:
 5133              	.LBE1402:
1597:Veno-Echo.cpp ****             save_flag = true;
 5134              		.loc 21 1597 39 view .LVU1415
 5135 00f4 81ED078A 		vstr.32	s16, [r1, #28]
1598:Veno-Echo.cpp ****         }  
 5136              		.loc 21 1598 13 is_stmt 1 view .LVU1416
 5137              	.LVL258:
 5138              	.LBB1411:
 5139              	.LBI1402:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5140              		.loc 24 80 5 view .LVU1417
 5141              	.LBB1410:
 5142              		.loc 24 81 7 view .LVU1418
 5143              	.LBB1409:
 5144              	.LBI1404:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5145              		.loc 23 288 7 view .LVU1419
 5146              	.LBB1408:
 5147              	.LBI1405:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5148              		.loc 23 390 7 view .LVU1420
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 207


 5149              	.LBB1407:
 5150              		.loc 23 397 18 is_stmt 0 view .LVU1421
 5151 00f8 BFF35B8F 		dmb	ish
 5152 00fc 1A70     		strb	r2, [r3]
 5153 00fe BFF35B8F 		dmb	ish
 5154              	.LVL259:
 5155              		.loc 23 397 18 view .LVU1422
 5156              	.LBE1407:
 5157              	.LBE1408:
 5158              	.LBE1409:
 5159              	.LBE1410:
 5160              	.LBE1411:
 5161              	.LBE1413:
 5162              	.LBE1418:
1601:Veno-Echo.cpp **** 
 5163              		.loc 21 1601 1 view .LVU1423
 5164 0102 BDEC028B 		vldm	sp!, {d8}
 5165              		.cfi_remember_state
 5166              		.cfi_restore 80
 5167              		.cfi_restore 81
 5168              		.cfi_def_cfa_offset 8
 5169 0106 10BD     		pop	{r4, pc}
 5170              	.L294:
 5171              		.cfi_restore_state
 5172              	.LBB1419:
 5173              	.LBB1414:
1589:Veno-Echo.cpp ****             {
 5174              		.loc 21 1589 18 is_stmt 1 view .LVU1424
 5175 0108 DFED157A 		vldr.32	s15, .L295+64
 5176 010c B4EEE78A 		vcmpe.f32	s16, s15
 5177 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5178 0114 EBDD     		ble	.L284
1591:Veno-Echo.cpp ****             }
 5179              		.loc 21 1591 17 view .LVU1425
1591:Veno-Echo.cpp ****             }
 5180              		.loc 21 1591 29 is_stmt 0 view .LVU1426
 5181 0116 0F4B     		ldr	r3, .L295+52
 5182 0118 0122     		movs	r2, #1
 5183 011a 1A70     		strb	r2, [r3]
 5184 011c E7E7     		b	.L284
 5185              	.L296:
 5186 011e 00BF     		.align	2
 5187              	.L295:
 5188 0120 18000000 		.word	.LANCHOR4+24
 5189 0124 00000000 		.word	.LANCHOR7
 5190 0128 00000000 		.word	.LANCHOR77
 5191 012c 00000000 		.word	.LANCHOR78
 5192 0130 00000000 		.word	.LANCHOR79
 5193 0134 00000000 		.word	.LANCHOR84
 5194 0138 00000000 		.word	0
 5195 013c 00000000 		.word	.LANCHOR80
 5196 0140 6F12033D 		.word	1023611503
 5197 0144 00000000 		.word	.LANCHOR81
 5198 0148 00000000 		.word	.LANCHOR82
 5199 014c 0AD7A33B 		.word	1000593162
 5200 0150 6666E63E 		.word	1055286886
 5201 0154 00000000 		.word	.LANCHOR83
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 208


 5202 0158 00000000 		.word	.LANCHOR15
 5203 015c 00000000 		.word	.LANCHOR16
 5204 0160 CDCC0C3F 		.word	1057803469
 5205              	.LBE1414:
 5206              	.LBE1419:
 5207              		.cfi_endproc
 5208              	.LFE4325:
 5210              		.section	.text._Z8GetModCVv,"ax",%progbits
 5211              		.align	1
 5212              		.p2align 2,,3
 5213              		.global	_Z8GetModCVv
 5214              		.syntax unified
 5215              		.thumb
 5216              		.thumb_func
 5217              		.fpu fpv5-d16
 5219              	_Z8GetModCVv:
 5220              	.LFB4326:
1604:Veno-Echo.cpp ****     //get modulation CV input
 5221              		.loc 21 1604 1 is_stmt 1 view -0
 5222              		.cfi_startproc
 5223              		@ args = 0, pretend = 0, frame = 0
 5224              		@ frame_needed = 0, uses_anonymous_args = 0
1606:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5225              		.loc 21 1606 5 view .LVU1428
1604:Veno-Echo.cpp ****     //get modulation CV input
 5226              		.loc 21 1604 1 is_stmt 0 view .LVU1429
 5227 0000 08B5     		push	{r3, lr}
 5228              		.cfi_def_cfa_offset 8
 5229              		.cfi_offset 3, -8
 5230              		.cfi_offset 14, -4
1606:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5231              		.loc 21 1606 30 view .LVU1430
 5232 0002 0621     		movs	r1, #6
 5233 0004 0648     		ldr	r0, .L299
 5234 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5235              	.LVL260:
 5236 000a 0020     		movs	r0, #0
 5237 000c 9FED051A 		vldr.32	s2, .L299+4
 5238 0010 DFED050A 		vldr.32	s1, .L299+8
 5239 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5240              	.LVL261:
1606:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5241              		.loc 21 1606 23 view .LVU1431
 5242 0018 044B     		ldr	r3, .L299+12
 5243 001a 83ED000A 		vstr.32	s0, [r3]
1608:Veno-Echo.cpp **** 
 5244              		.loc 21 1608 1 view .LVU1432
 5245 001e 08BD     		pop	{r3, pc}
 5246              	.L300:
 5247              		.align	2
 5248              	.L299:
 5249 0020 18000000 		.word	.LANCHOR4+24
 5250 0024 00004843 		.word	1128792064
 5251 0028 000048C3 		.word	3276275712
 5252 002c 00000000 		.word	.LANCHOR85
 5253              		.cfi_endproc
 5254              	.LFE4326:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 209


 5256              		.section	.text._Z10Update_Modv,"ax",%progbits
 5257              		.align	1
 5258              		.p2align 2,,3
 5259              		.global	_Z10Update_Modv
 5260              		.syntax unified
 5261              		.thumb
 5262              		.thumb_func
 5263              		.fpu fpv5-d16
 5265              	_Z10Update_Modv:
 5266              	.LFB4327:
1611:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5267              		.loc 21 1611 1 is_stmt 1 view -0
 5268              		.cfi_startproc
 5269              		@ args = 0, pretend = 0, frame = 0
 5270              		@ frame_needed = 0, uses_anonymous_args = 0
1612:Veno-Echo.cpp ****     static float modulation_CV{};
 5271              		.loc 21 1612 5 view .LVU1434
1613:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 5272              		.loc 21 1613 5 view .LVU1435
1614:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5273              		.loc 21 1614 5 view .LVU1436
 5274              	.LVL262:
 5275              	.LBB1420:
 5276              	.LBI1420:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5277              		.loc 26 135 13 view .LVU1437
 5278              	.LBB1421:
 5279              		.loc 26 137 5 view .LVU1438
 5280              	.LBE1421:
 5281              	.LBE1420:
1611:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5282              		.loc 21 1611 1 is_stmt 0 view .LVU1439
 5283 0000 38B5     		push	{r3, r4, r5, lr}
 5284              		.cfi_def_cfa_offset 16
 5285              		.cfi_offset 3, -16
 5286              		.cfi_offset 4, -12
 5287              		.cfi_offset 5, -8
 5288              		.cfi_offset 14, -4
1614:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5289              		.loc 21 1614 13 view .LVU1440
 5290 0002 154A     		ldr	r2, .L303
 5291              	.LBB1428:
 5292              	.LBB1422:
 5293              		.loc 26 137 9 view .LVU1441
 5294 0004 154C     		ldr	r4, .L303+4
 5295              	.LBE1422:
 5296              	.LBE1428:
 5297              	.LBB1429:
 5298              	.LBB1430:
 5299 0006 164D     		ldr	r5, .L303+8
 5300              	.LBE1430:
 5301              	.LBE1429:
1615:Veno-Echo.cpp ****     //calculate InternalMod
 5302              		.loc 21 1615 13 view .LVU1442
 5303 0008 164B     		ldr	r3, .L303+12
 5304              	.LBB1436:
 5305              	.LBB1423:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 210


 5306              		.loc 26 137 9 view .LVU1443
 5307 000a 94ED007A 		vldr.32	s14, [r4]
 5308              	.LBE1423:
 5309              	.LBE1436:
 5310              	.LBB1437:
 5311              	.LBB1431:
 5312 000e D5ED007A 		vldr.32	s15, [r5]
 5313              	.LBE1431:
 5314              	.LBE1437:
 5315              	.LBB1438:
 5316              	.LBB1424:
 5317              		.loc 26 137 24 view .LVU1444
 5318 0012 92ED006A 		vldr.32	s12, [r2]
 5319              	.LBE1424:
 5320              	.LBE1438:
 5321              	.LBB1439:
 5322              	.LBB1432:
 5323 0016 D3ED006A 		vldr.32	s13, [r3]
 5324              	.LBE1432:
 5325              	.LBE1439:
 5326              	.LBB1440:
 5327              	.LBB1425:
 5328 001a 36EE476A 		vsub.f32	s12, s12, s14
 5329              		.loc 26 137 9 view .LVU1445
 5330 001e DFED125A 		vldr.32	s11, .L303+16
 5331              	.LBE1425:
 5332              	.LBE1440:
 5333              	.LBB1441:
 5334              	.LBB1433:
 5335              		.loc 26 137 24 view .LVU1446
 5336 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5337              	.LBE1433:
 5338              	.LBE1441:
1617:Veno-Echo.cpp ****     //apply modulation to delay lines
 5339              		.loc 21 1617 34 view .LVU1447
 5340 0026 1148     		ldr	r0, .L303+20
 5341              	.LBB1442:
 5342              	.LBB1426:
 5343              		.loc 26 137 9 view .LVU1448
 5344 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5345              	.LBE1426:
 5346              	.LBE1442:
 5347              	.LBB1443:
 5348              	.LBB1434:
 5349 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5350              	.LBE1434:
 5351              	.LBE1443:
 5352              	.LBB1444:
 5353              	.LBB1427:
 5354 0030 84ED007A 		vstr.32	s14, [r4]
 5355              	.LVL263:
 5356              		.loc 26 137 9 view .LVU1449
 5357              	.LBE1427:
 5358              	.LBE1444:
1615:Veno-Echo.cpp ****     //calculate InternalMod
 5359              		.loc 21 1615 5 is_stmt 1 view .LVU1450
 5360              	.LBB1445:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 211


 5361              	.LBI1429:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5362              		.loc 26 135 13 view .LVU1451
 5363              	.LBB1435:
 5364              		.loc 26 137 5 view .LVU1452
 5365              		.loc 26 137 9 is_stmt 0 view .LVU1453
 5366 0034 C5ED007A 		vstr.32	s15, [r5]
 5367              	.LVL264:
 5368              		.loc 26 137 9 view .LVU1454
 5369              	.LBE1435:
 5370              	.LBE1445:
1617:Veno-Echo.cpp ****     //apply modulation to delay lines
 5371              		.loc 21 1617 5 is_stmt 1 view .LVU1455
1617:Veno-Echo.cpp ****     //apply modulation to delay lines
 5372              		.loc 21 1617 34 is_stmt 0 view .LVU1456
 5373 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5374              	.LVL265:
1619:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5375              		.loc 21 1619 5 is_stmt 1 view .LVU1457
1619:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5376              		.loc 21 1619 40 is_stmt 0 view .LVU1458
 5377 003c 95ED007A 		vldr.32	s14, [r5]
 5378 0040 D4ED007A 		vldr.32	s15, [r4]
 5379              	.LBB1446:
 5380              	.LBB1447:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5381              		.loc 18 69 43 view .LVU1459
 5382 0044 0A4A     		ldr	r2, .L303+24
 5383              	.LBE1447:
 5384              	.LBE1446:
1619:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5385              		.loc 21 1619 40 view .LVU1460
 5386 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5387              	.LBB1450:
 5388              	.LBI1446:
 5389              		.loc 18 69 6 is_stmt 1 view .LVU1461
 5390              	.LVL266:
 5391              	.LBB1448:
 5392              		.loc 18 69 38 view .LVU1462
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 212


 5393              	.LBE1448:
 5394              	.LBE1450:
 5395              	.LBB1451:
 5396              	.LBB1452:
 5397              		.loc 18 69 43 is_stmt 0 view .LVU1463
 5398 004a 0A4B     		ldr	r3, .L303+28
 5399              	.LBE1452:
 5400              	.LBE1451:
 5401              	.LBB1454:
 5402              	.LBB1449:
 5403 004c C2ED3E7A 		vstr.32	s15, [r2, #248]
 5404              	.LBE1449:
 5405              	.LBE1454:
1620:Veno-Echo.cpp **** }
 5406              		.loc 21 1620 5 is_stmt 1 view .LVU1464
 5407              	.LVL267:
 5408              	.LBB1455:
 5409              	.LBI1451:
 5410              		.loc 18 69 6 view .LVU1465
 5411              	.LBB1453:
 5412              		.loc 18 69 38 view .LVU1466
 5413              		.loc 18 69 43 is_stmt 0 view .LVU1467
 5414 0050 C3ED3E7A 		vstr.32	s15, [r3, #248]
 5415              	.LBE1453:
 5416              	.LBE1455:
1621:Veno-Echo.cpp **** 
 5417              		.loc 21 1621 1 view .LVU1468
 5418 0054 38BD     		pop	{r3, r4, r5, pc}
 5419              	.L304:
 5420 0056 00BF     		.align	2
 5421              	.L303:
 5422 0058 00000000 		.word	.LANCHOR85
 5423 005c 00000000 		.word	.LANCHOR86
 5424 0060 00000000 		.word	.LANCHOR87
 5425 0064 00000000 		.word	.LANCHOR68
 5426 0068 0AD7233C 		.word	1008981770
 5427 006c 00000000 		.word	.LANCHOR76
 5428 0070 00000000 		.word	.LANCHOR0
 5429 0074 00000000 		.word	.LANCHOR1
 5430              		.cfi_endproc
 5431              	.LFE4327:
 5433              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5434              		.align	1
 5435              		.p2align 2,,3
 5436              		.global	_Z11UpdateClockv
 5437              		.syntax unified
 5438              		.thumb
 5439              		.thumb_func
 5440              		.fpu fpv5-d16
 5442              	_Z11UpdateClockv:
 5443              	.LFB4328:
1624:Veno-Echo.cpp ****     static int divCounter{};
 5444              		.loc 21 1624 1 is_stmt 1 view -0
 5445              		.cfi_startproc
 5446              		@ args = 0, pretend = 0, frame = 0
 5447              		@ frame_needed = 0, uses_anonymous_args = 0
1625:Veno-Echo.cpp ****     //ClockIn.Debounce();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 213


 5448              		.loc 21 1625 5 view .LVU1470
1629:Veno-Echo.cpp ****     {   
 5449              		.loc 21 1629 5 view .LVU1471
1624:Veno-Echo.cpp ****     static int divCounter{};
 5450              		.loc 21 1624 1 is_stmt 0 view .LVU1472
 5451 0000 08B5     		push	{r3, lr}
 5452              		.cfi_def_cfa_offset 8
 5453              		.cfi_offset 3, -8
 5454              		.cfi_offset 14, -4
1629:Veno-Echo.cpp ****     {   
 5455              		.loc 21 1629 21 view .LVU1473
 5456 0002 0F48     		ldr	r0, .L314
 5457 0004 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 5458              	.LVL268:
1629:Veno-Echo.cpp ****     {   
 5459              		.loc 21 1629 5 view .LVU1474
 5460 0008 00B9     		cbnz	r0, .L313
 5461              	.L305:
1643:Veno-Echo.cpp **** 
 5462              		.loc 21 1643 1 view .LVU1475
 5463 000a 08BD     		pop	{r3, pc}
 5464              	.L313:
1632:Veno-Echo.cpp ****         {
 5465              		.loc 21 1632 9 is_stmt 1 view .LVU1476
1632:Veno-Echo.cpp ****         {
 5466              		.loc 21 1632 27 is_stmt 0 view .LVU1477
 5467 000c 0D48     		ldr	r0, .L314+4
 5468 000e FFF7FEFF 		bl	_ZN8Taptempo5clockEv
 5469              	.LVL269:
1632:Veno-Echo.cpp ****         {
 5470              		.loc 21 1632 9 view .LVU1478
 5471 0012 0028     		cmp	r0, #0
 5472 0014 F9D0     		beq	.L305
 5473              	.LBB1463:
 5474              	.LBI1463:
1623:Veno-Echo.cpp **** {
 5475              		.loc 21 1623 6 is_stmt 1 view .LVU1479
 5476              	.LBB1464:
1635:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 5477              		.loc 21 1635 13 view .LVU1480
1635:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 5478              		.loc 21 1635 35 is_stmt 0 view .LVU1481
 5479 0016 0B48     		ldr	r0, .L314+4
 5480 0018 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5481              	.LVL270:
 5482 001c 0A48     		ldr	r0, .L314+8
 5483 001e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 5484              	.LVL271:
1636:Veno-Echo.cpp ****             save_flag = true;
 5485              		.loc 21 1636 13 is_stmt 1 view .LVU1482
1636:Veno-Echo.cpp ****             save_flag = true;
 5486              		.loc 21 1636 59 is_stmt 0 view .LVU1483
 5487 0022 0848     		ldr	r0, .L314+4
 5488 0024 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5489              	.LVL272:
1636:Veno-Echo.cpp ****             save_flag = true;
 5490              		.loc 21 1636 35 view .LVU1484
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 214


 5491 0028 0849     		ldr	r1, .L314+12
 5492              	.LBB1465:
 5493              	.LBB1466:
 5494              	.LBB1467:
 5495              	.LBB1468:
 5496              		.loc 23 397 18 view .LVU1485
 5497 002a 0122     		movs	r2, #1
 5498 002c 084B     		ldr	r3, .L314+16
 5499              	.LBE1468:
 5500              	.LBE1467:
 5501              	.LBE1466:
 5502              	.LBE1465:
1636:Veno-Echo.cpp ****             save_flag = true;
 5503              		.loc 21 1636 35 view .LVU1486
 5504 002e 81ED080A 		vstr.32	s0, [r1, #32]
1637:Veno-Echo.cpp ****         } 
 5505              		.loc 21 1637 13 is_stmt 1 view .LVU1487
 5506              	.LVL273:
 5507              	.LBB1472:
 5508              	.LBI1465:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5509              		.loc 24 80 5 view .LVU1488
 5510              	.LBE1472:
 5511              	.LBE1464:
 5512              	.LBE1463:
 5513              		.loc 24 81 7 view .LVU1489
 5514              	.LBB1475:
 5515              	.LBB1474:
 5516              	.LBB1473:
 5517              	.LBB1471:
 5518              	.LBI1466:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5519              		.loc 23 288 7 view .LVU1490
 5520              	.LBB1470:
 5521              	.LBI1467:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5522              		.loc 23 390 7 view .LVU1491
 5523              	.LBB1469:
 5524              		.loc 23 397 18 is_stmt 0 view .LVU1492
 5525 0032 BFF35B8F 		dmb	ish
 5526 0036 1A70     		strb	r2, [r3]
 5527 0038 BFF35B8F 		dmb	ish
 5528              	.LVL274:
 5529              		.loc 23 397 18 view .LVU1493
 5530              	.LBE1469:
 5531              	.LBE1470:
 5532              	.LBE1471:
 5533              	.LBE1473:
 5534              	.LBE1474:
 5535              	.LBE1475:
1643:Veno-Echo.cpp **** 
 5536              		.loc 21 1643 1 view .LVU1494
 5537 003c 08BD     		pop	{r3, pc}
 5538              	.L315:
 5539 003e 00BF     		.align	2
 5540              	.L314:
 5541 0040 00000000 		.word	.LANCHOR88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 215


 5542 0044 00000000 		.word	.LANCHOR26
 5543 0048 00000000 		.word	.LANCHOR89
 5544 004c 00000000 		.word	.LANCHOR15
 5545 0050 00000000 		.word	.LANCHOR16
 5546              		.cfi_endproc
 5547              	.LFE4328:
 5549              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5550              		.align	1
 5551              		.p2align 2,,3
 5552              		.global	_Z21Update_DelayBaseTempov
 5553              		.syntax unified
 5554              		.thumb
 5555              		.thumb_func
 5556              		.fpu fpv5-d16
 5558              	_Z21Update_DelayBaseTempov:
 5559              	.LFB4330:
1796:Veno-Echo.cpp ****     uint32_t newTempo{BaseTempo.getDelayLength()};
 5560              		.loc 21 1796 1 is_stmt 1 view -0
 5561              		.cfi_startproc
 5562              		@ args = 0, pretend = 0, frame = 0
 5563              		@ frame_needed = 0, uses_anonymous_args = 0
1797:Veno-Echo.cpp ****     delayL.SetBaseTempo(newTempo);
 5564              		.loc 21 1797 5 view .LVU1496
1796:Veno-Echo.cpp ****     uint32_t newTempo{BaseTempo.getDelayLength()};
 5565              		.loc 21 1796 1 is_stmt 0 view .LVU1497
 5566 0000 08B5     		push	{r3, lr}
 5567              		.cfi_def_cfa_offset 8
 5568              		.cfi_offset 3, -8
 5569              		.cfi_offset 14, -4
1797:Veno-Echo.cpp ****     delayL.SetBaseTempo(newTempo);
 5570              		.loc 21 1797 47 view .LVU1498
 5571 0002 0548     		ldr	r0, .L318
 5572 0004 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5573              	.LVL275:
 5574              	.LBB1476:
 5575              	.LBB1477:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const uint32_t& tempo){baseTempo_ = tempo;}
 5576              		.loc 18 71 53 view .LVU1499
 5577 0008 044A     		ldr	r2, .L318+4
 5578              	.LVL276:
 5579              		.loc 18 71 53 view .LVU1500
 5580              	.LBE1477:
 5581              	.LBE1476:
1798:Veno-Echo.cpp ****     delayR.SetBaseTempo(newTempo);
 5582              		.loc 21 1798 5 is_stmt 1 view .LVU1501
 5583              	.LBB1480:
 5584              	.LBI1476:
 5585              		.loc 18 71 6 view .LVU1502
 5586              	.LBB1478:
 5587              		.loc 18 71 42 view .LVU1503
 5588              	.LBE1478:
 5589              	.LBE1480:
 5590              	.LBB1481:
 5591              	.LBB1482:
 5592              		.loc 18 71 53 is_stmt 0 view .LVU1504
 5593 000a 054B     		ldr	r3, .L318+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 216


 5594              	.LBE1482:
 5595              	.LBE1481:
 5596              	.LBB1484:
 5597              	.LBB1479:
 5598 000c C2F81401 		str	r0, [r2, #276]
 5599              	.LBE1479:
 5600              	.LBE1484:
1799:Veno-Echo.cpp **** }
 5601              		.loc 21 1799 5 is_stmt 1 view .LVU1505
 5602              	.LVL277:
 5603              	.LBB1485:
 5604              	.LBI1481:
 5605              		.loc 18 71 6 view .LVU1506
 5606              	.LBB1483:
 5607              		.loc 18 71 42 view .LVU1507
 5608              		.loc 18 71 53 is_stmt 0 view .LVU1508
 5609 0010 C3F81401 		str	r0, [r3, #276]
 5610              	.LVL278:
 5611              		.loc 18 71 53 view .LVU1509
 5612              	.LBE1483:
 5613              	.LBE1485:
1800:Veno-Echo.cpp **** 
 5614              		.loc 21 1800 1 view .LVU1510
 5615 0014 08BD     		pop	{r3, pc}
 5616              	.L319:
 5617 0016 00BF     		.align	2
 5618              	.L318:
 5619 0018 00000000 		.word	.LANCHOR26
 5620 001c 00000000 		.word	.LANCHOR0
 5621 0020 00000000 		.word	.LANCHOR1
 5622              		.cfi_endproc
 5623              	.LFE4330:
 5625              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5626              		.align	1
 5627              		.p2align 2,,3
 5628              		.global	_Z21Update_DelayTempoLEDsv
 5629              		.syntax unified
 5630              		.thumb
 5631              		.thumb_func
 5632              		.fpu fpv5-d16
 5634              	_Z21Update_DelayTempoLEDsv:
 5635              	.LFB4331:
1803:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5636              		.loc 21 1803 1 is_stmt 1 view -0
 5637              		.cfi_startproc
 5638              		@ args = 0, pretend = 0, frame = 0
 5639              		@ frame_needed = 0, uses_anonymous_args = 0
1804:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5640              		.loc 21 1804 5 view .LVU1512
1803:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5641              		.loc 21 1803 1 is_stmt 0 view .LVU1513
 5642 0000 10B5     		push	{r4, lr}
 5643              		.cfi_def_cfa_offset 8
 5644              		.cfi_offset 4, -8
 5645              		.cfi_offset 14, -4
1804:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5646              		.loc 21 1804 26 view .LVU1514
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 217


 5647 0002 054C     		ldr	r4, .L322
 5648 0004 0548     		ldr	r0, .L322+4
 5649 0006 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5650 0008 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5651              	.LVL279:
1805:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5652              		.loc 21 1805 5 is_stmt 1 view .LVU1515
1805:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5653              		.loc 21 1805 26 is_stmt 0 view .LVU1516
 5654 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5655 000e 0448     		ldr	r0, .L322+8
1809:Veno-Echo.cpp **** 
 5656              		.loc 21 1809 1 view .LVU1517
 5657 0010 BDE81040 		pop	{r4, lr}
 5658              		.cfi_restore 14
 5659              		.cfi_restore 4
 5660              		.cfi_def_cfa_offset 0
1805:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5661              		.loc 21 1805 26 view .LVU1518
 5662 0014 FFF7FEBF 		b	_ZN10DelayMulti14updateTempoLEDEb
 5663              	.LVL280:
 5664              	.L323:
 5665              		.align	2
 5666              	.L322:
 5667 0018 00000000 		.word	.LANCHOR12
 5668 001c 00000000 		.word	.LANCHOR0
 5669 0020 00000000 		.word	.LANCHOR1
 5670              		.cfi_endproc
 5671              	.LFE4331:
 5673              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5674              		.align	1
 5675              		.p2align 2,,3
 5676              		.global	_Z19Update_BaseTempoLEDv
 5677              		.syntax unified
 5678              		.thumb
 5679              		.thumb_func
 5680              		.fpu fpv5-d16
 5682              	_Z19Update_BaseTempoLEDv:
 5683              	.LFB4332:
1812:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5684              		.loc 21 1812 1 is_stmt 1 view -0
 5685              		.cfi_startproc
 5686              		@ args = 0, pretend = 0, frame = 0
 5687              		@ frame_needed = 0, uses_anonymous_args = 0
1813:Veno-Echo.cpp **** 
 5688              		.loc 21 1813 5 view .LVU1520
1813:Veno-Echo.cpp **** 
 5689              		.loc 21 1813 25 is_stmt 0 view .LVU1521
 5690 0000 1848     		ldr	r0, .L328
1812:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5691              		.loc 21 1812 1 view .LVU1522
 5692 0002 08B5     		push	{r3, lr}
 5693              		.cfi_def_cfa_offset 8
 5694              		.cfi_offset 3, -8
 5695              		.cfi_offset 14, -4
1813:Veno-Echo.cpp **** 
 5696              		.loc 21 1813 25 view .LVU1523
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 218


 5697 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5698              	.LVL281:
1815:Veno-Echo.cpp **** 
 5699              		.loc 21 1815 5 is_stmt 1 view .LVU1524
1817:Veno-Echo.cpp ****     {
 5700              		.loc 21 1817 5 view .LVU1525
1817:Veno-Echo.cpp ****     {
 5701              		.loc 21 1817 27 is_stmt 0 view .LVU1526
 5702 0008 1648     		ldr	r0, .L328
 5703 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5704              	.LVL282:
1817:Veno-Echo.cpp ****     {
 5705              		.loc 21 1817 5 view .LVU1527
 5706 000e D0B9     		cbnz	r0, .L325
 5707 0010 154B     		ldr	r3, .L328+4
 5708 0012 1B68     		ldr	r3, [r3]
 5709              	.L326:
1822:Veno-Echo.cpp ****     //update base phase for both delay lines
 5710              		.loc 21 1822 5 is_stmt 1 view .LVU1528
 5711              	.LVL283:
 5712              	.LBB1486:
 5713              	.LBI1486:
  71:LEDs.h        **** 
 5714              		.loc 15 71 7 view .LVU1529
 5715              	.LBB1487:
  71:LEDs.h        **** 
 5716              		.loc 15 71 20 view .LVU1530
  71:LEDs.h        **** 
 5717              		.loc 15 71 20 is_stmt 0 view .LVU1531
 5718              	.LBE1487:
 5719              	.LBE1486:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 219


  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5720              		.loc 16 92 31 is_stmt 1 view .LVU1532
 5721              	.LBB1489:
 5722              	.LBB1488:
  71:LEDs.h        **** 
 5723              		.loc 15 71 41 is_stmt 0 view .LVU1533
 5724 0014 134A     		ldr	r2, .L328
 5725              	.LBE1488:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 220


 5726              	.LBE1489:
1822:Veno-Echo.cpp ****     //update base phase for both delay lines
 5727              		.loc 21 1822 50 view .LVU1534
 5728 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1822:Veno-Echo.cpp ****     //update base phase for both delay lines
 5729              		.loc 21 1822 73 view .LVU1535
 5730 001a 07EE903A 		vmov	s15, r3	@ int
1822:Veno-Echo.cpp ****     //update base phase for both delay lines
 5731              		.loc 21 1822 55 view .LVU1536
 5732 001e DFED136A 		vldr.32	s13, .L328+8
1822:Veno-Echo.cpp ****     //update base phase for both delay lines
 5733              		.loc 21 1822 50 view .LVU1537
 5734 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1822:Veno-Echo.cpp ****     //update base phase for both delay lines
 5735              		.loc 21 1822 73 view .LVU1538
 5736 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5737              	.LBB1490:
 5738              	.LBB1491:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5739              		.loc 18 72 54 view .LVU1539
 5740 002a 1149     		ldr	r1, .L328+12
 5741              	.LBE1491:
 5742              	.LBE1490:
1822:Veno-Echo.cpp ****     //update base phase for both delay lines
 5743              		.loc 21 1822 50 view .LVU1540
 5744 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5745              	.LBB1493:
 5746              	.LBB1494:
 5747              		.loc 18 72 54 view .LVU1541
 5748 0030 104A     		ldr	r2, .L328+16
 5749              	.LBE1494:
 5750              	.LBE1493:
1826:Veno-Echo.cpp **** }
 5751              		.loc 21 1826 17 view .LVU1542
 5752 0032 114B     		ldr	r3, .L328+20
1822:Veno-Echo.cpp ****     //update base phase for both delay lines
 5753              		.loc 21 1822 55 view .LVU1543
 5754 0034 A7EEA67A 		vfma.f32	s14, s15, s13
 5755              	.LVL284:
1824:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5756              		.loc 21 1824 5 is_stmt 1 view .LVU1544
 5757              	.LBB1496:
 5758              	.LBI1490:
 5759              		.loc 18 72 6 view .LVU1545
 5760              	.LBB1492:
 5761              		.loc 18 72 43 view .LVU1546
 5762              		.loc 18 72 54 is_stmt 0 view .LVU1547
 5763 0038 81ED487A 		vstr.32	s14, [r1, #288]
 5764              	.LBE1492:
 5765              	.LBE1496:
1825:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
 5766              		.loc 21 1825 5 is_stmt 1 view .LVU1548
 5767              	.LVL285:
 5768              	.LBB1497:
 5769              	.LBI1493:
 5770              		.loc 18 72 6 view .LVU1549
 5771              	.LBB1495:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 221


 5772              		.loc 18 72 43 view .LVU1550
 5773              		.loc 18 72 54 is_stmt 0 view .LVU1551
 5774 003c 82ED487A 		vstr.32	s14, [r2, #288]
 5775              	.LBE1495:
 5776              	.LBE1497:
1826:Veno-Echo.cpp **** }
 5777              		.loc 21 1826 5 is_stmt 1 view .LVU1552
1826:Veno-Echo.cpp **** }
 5778              		.loc 21 1826 17 is_stmt 0 view .LVU1553
 5779 0040 83ED007A 		vstr.32	s14, [r3]
 5780              	.LVL286:
1827:Veno-Echo.cpp **** 
 5781              		.loc 21 1827 1 view .LVU1554
 5782 0044 08BD     		pop	{r3, pc}
 5783              	.LVL287:
 5784              	.L325:
1819:Veno-Echo.cpp ****     }
 5785              		.loc 21 1819 9 is_stmt 1 view .LVU1555
1819:Veno-Echo.cpp ****     }
 5786              		.loc 21 1819 38 is_stmt 0 view .LVU1556
 5787 0046 0849     		ldr	r1, .L328+4
1819:Veno-Echo.cpp ****     }
 5788              		.loc 21 1819 43 view .LVU1557
 5789 0048 0C4B     		ldr	r3, .L328+24
1819:Veno-Echo.cpp ****     }
 5790              		.loc 21 1819 38 view .LVU1558
 5791 004a 0A68     		ldr	r2, [r1]
 5792 004c 0132     		adds	r2, r2, #1
1819:Veno-Echo.cpp ****     }
 5793              		.loc 21 1819 43 view .LVU1559
 5794 004e 83FB0203 		smull	r0, r3, r3, r2
 5795 0052 A3EBE273 		sub	r3, r3, r2, asr #31
 5796 0056 03EB4303 		add	r3, r3, r3, lsl #1
 5797 005a A2EB4303 		sub	r3, r2, r3, lsl #1
1819:Veno-Echo.cpp ****     }
 5798              		.loc 21 1819 22 view .LVU1560
 5799 005e 0B60     		str	r3, [r1]
 5800 0060 D8E7     		b	.L326
 5801              	.L329:
 5802 0062 00BF     		.align	2
 5803              	.L328:
 5804 0064 00000000 		.word	.LANCHOR89
 5805 0068 00000000 		.word	.LANCHOR90
 5806 006c 920A863F 		.word	1065749138
 5807 0070 00000000 		.word	.LANCHOR0
 5808 0074 00000000 		.word	.LANCHOR1
 5809 0078 00000000 		.word	.LANCHOR91
 5810 007c ABAAAA2A 		.word	715827883
 5811              		.cfi_endproc
 5812              	.LFE4332:
 5814              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5815              		.align	1
 5816              		.p2align 2,,3
 5817              		.global	_Z13ApplySettingsRK8Settings
 5818              		.syntax unified
 5819              		.thumb
 5820              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 222


 5821              		.fpu fpv5-d16
 5823              	_Z13ApplySettingsRK8Settings:
 5824              	.LVL288:
 5825              	.LFB4333:
1831:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5826              		.loc 21 1831 1 is_stmt 1 view -0
 5827              		.cfi_startproc
 5828              		@ args = 0, pretend = 0, frame = 0
 5829              		@ frame_needed = 0, uses_anonymous_args = 0
1832:Veno-Echo.cpp ****     {
 5830              		.loc 21 1832 5 view .LVU1562
 5831 0000 9FEDDA7A 		vldr.32	s14, .L415
1832:Veno-Echo.cpp ****     {
 5832              		.loc 21 1832 17 is_stmt 0 view .LVU1563
 5833 0004 D0ED007A 		vldr.32	s15, [r0]
1832:Veno-Echo.cpp ****     {
 5834              		.loc 21 1832 5 view .LVU1564
 5835 0008 F4EEC77A 		vcmpe.f32	s15, s14
1831:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5836              		.loc 21 1831 1 view .LVU1565
 5837 000c 38B5     		push	{r3, r4, r5, lr}
 5838              		.cfi_def_cfa_offset 16
 5839              		.cfi_offset 3, -16
 5840              		.cfi_offset 4, -12
 5841              		.cfi_offset 5, -8
 5842              		.cfi_offset 14, -4
1832:Veno-Echo.cpp ****     {
 5843              		.loc 21 1832 5 view .LVU1566
 5844 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1831:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5845              		.loc 21 1831 1 view .LVU1567
 5846 0012 0446     		mov	r4, r0
 5847              	.LBB1498:
 5848              	.LBB1499:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5849              		.loc 21 70 28 view .LVU1568
 5850 0014 D64B     		ldr	r3, .L415+4
 5851              	.LBE1499:
 5852              	.LBE1498:
1832:Veno-Echo.cpp ****     {
 5853              		.loc 21 1832 5 view .LVU1569
 5854 0016 C0F23281 		blt	.L331
1832:Veno-Echo.cpp ****     {
 5855              		.loc 21 1832 43 discriminator 1 view .LVU1570
 5856 001a 9FEDD67A 		vldr.32	s14, .L415+8
 5857 001e F4EEC77A 		vcmpe.f32	s15, s14
 5858 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5859 0026 00F22A81 		bhi	.L331
1834:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5860              		.loc 21 1834 9 is_stmt 1 view .LVU1571
 5861              	.LVL289:
 5862              	.LBB1513:
 5863              	.LBI1498:
  68:Veno-Echo.cpp ****     {
 5864              		.loc 21 68 10 view .LVU1572
 5865              	.LBB1511:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 223


 5866              		.loc 21 70 9 view .LVU1573
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5867              		.loc 21 70 28 is_stmt 0 view .LVU1574
 5868 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5869              	.LVL290:
 5870              	.LBB1500:
 5871              	.LBI1500:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5872              		.loc 22 75 3 is_stmt 1 view .LVU1575
 5873              	.LBB1501:
 5874              		.loc 22 76 5 view .LVU1576
 5875              		.loc 22 76 5 is_stmt 0 view .LVU1577
 5876              	.LBE1501:
 5877              	.LBE1500:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5878              		.loc 21 70 53 view .LVU1578
 5879 002e 9FEDD26A 		vldr.32	s12, .L415+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5880              		.loc 21 70 15 view .LVU1579
 5881 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5882              		.loc 21 70 53 view .LVU1580
 5883 0036 27EE067A 		vmul.f32	s14, s14, s12
 5884              	.LBB1503:
 5885              	.LBB1502:
 5886              		.loc 22 76 31 view .LVU1581
 5887 003a F0EEE66A 		vabs.f32	s13, s13
 5888              	.LBE1502:
 5889              	.LBE1503:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5890              		.loc 21 70 9 view .LVU1582
 5891 003e F4EEC76A 		vcmpe.f32	s13, s14
 5892 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5893 0046 0FDD     		ble	.L334
  74:Veno-Echo.cpp ****             //del -> Reset();
 5894              		.loc 21 74 29 view .LVU1583
 5895 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5896              	.LBB1504:
 5897              	.LBB1505:
 5898              		.loc 20 72 9 view .LVU1584
 5899 004c CB4D     		ldr	r5, .L415+16
 5900              	.LBE1505:
 5901              	.LBE1504:
 5902              	.LBE1511:
 5903              	.LBE1513:
1834:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5904              		.loc 21 1834 33 view .LVU1585
 5905 004e 1968     		ldr	r1, [r3]
 5906              	.LBB1514:
 5907              	.LBB1512:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5908              		.loc 21 73 13 is_stmt 1 view .LVU1586
 5909              	.LBB1508:
 5910              	.LBB1506:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5911              		.loc 20 71 9 is_stmt 0 view .LVU1587
 5912 0050 0020     		movs	r0, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 224


 5913              	.LVL291:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5914              		.loc 20 71 9 view .LVU1588
 5915              	.LBE1506:
 5916              	.LBE1508:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5917              		.loc 21 73 27 view .LVU1589
 5918 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5919              		.loc 21 74 13 is_stmt 1 view .LVU1590
 5920              	.LVL292:
 5921              	.LBB1509:
 5922              	.LBI1504:
  69:delayline_reverse.h ****     {
 5923              		.loc 20 69 17 view .LVU1591
  69:delayline_reverse.h ****     {
 5924              		.loc 20 69 17 is_stmt 0 view .LVU1592
 5925              	.LBE1509:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5926              		.loc 21 74 29 view .LVU1593
 5927 0056 17EE102A 		vmov	r2, s14	@ int
 5928              	.LBB1510:
 5929              	.LBB1507:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5930              		.loc 20 71 9 view .LVU1594
 5931 005a 0860     		str	r0, [r1]	@ float
 5932 005c D4ED007A 		vldr.32	s15, [r4]
 5933              	.LVL293:
 5934              		.loc 20 72 9 view .LVU1595
 5935 0060 AA42     		cmp	r2, r5
 5936 0062 28BF     		it	cs
 5937 0064 2A46     		movcs	r2, r5
 5938 0066 0A61     		str	r2, [r1, #16]
 5939              	.LVL294:
 5940              	.L334:
 5941              		.loc 20 72 9 view .LVU1596
 5942              	.LBE1507:
 5943              	.LBE1510:
 5944              	.LBE1512:
 5945              	.LBE1514:
1835:Veno-Echo.cpp ****     }
 5946              		.loc 21 1835 9 is_stmt 1 view .LVU1597
 5947              	.LBB1515:
 5948              	.LBI1515:
  68:Veno-Echo.cpp ****     {
 5949              		.loc 21 68 10 view .LVU1598
 5950              	.LBB1516:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5951              		.loc 21 70 9 view .LVU1599
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5952              		.loc 21 70 28 is_stmt 0 view .LVU1600
 5953 0068 C54B     		ldr	r3, .L415+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5954              		.loc 21 70 53 view .LVU1601
 5955 006a 9FEDC36A 		vldr.32	s12, .L415+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5956              		.loc 21 70 28 view .LVU1602
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 225


 5957 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5958              	.LVL295:
 5959              	.LBB1517:
 5960              	.LBI1517:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5961              		.loc 22 75 3 is_stmt 1 view .LVU1603
 5962              	.LBB1518:
 5963              		.loc 22 76 5 view .LVU1604
 5964              		.loc 22 76 5 is_stmt 0 view .LVU1605
 5965              	.LBE1518:
 5966              	.LBE1517:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5967              		.loc 21 70 15 view .LVU1606
 5968 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5969              		.loc 21 70 53 view .LVU1607
 5970 0076 27EE067A 		vmul.f32	s14, s14, s12
 5971              	.LBB1520:
 5972              	.LBB1519:
 5973              		.loc 22 76 31 view .LVU1608
 5974 007a F0EEE66A 		vabs.f32	s13, s13
 5975              	.LBE1519:
 5976              	.LBE1520:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5977              		.loc 21 70 9 view .LVU1609
 5978 007e F4EEC76A 		vcmpe.f32	s13, s14
 5979 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5980 0086 00F3D381 		bgt	.L410
 5981              	.LVL296:
 5982              	.L337:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5983              		.loc 21 70 9 view .LVU1610
 5984              	.LBE1516:
 5985              	.LBE1515:
1843:Veno-Echo.cpp ****     {
 5986              		.loc 21 1843 5 is_stmt 1 view .LVU1611
 5987 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1843:Veno-Echo.cpp ****     {
 5988              		.loc 21 1843 17 is_stmt 0 view .LVU1612
 5989 008e 94ED010A 		vldr.32	s0, [r4, #4]
1843:Veno-Echo.cpp ****     {
 5990              		.loc 21 1843 5 view .LVU1613
 5991 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5992 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5993 009a 06DB     		blt	.L342
1843:Veno-Echo.cpp ****     {
 5994              		.loc 21 1843 35 discriminator 1 view .LVU1614
 5995 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5996 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5997 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5998 00a8 01D9     		bls	.L407
 5999              	.L342:
1849:Veno-Echo.cpp ****     }
 6000              		.loc 21 1849 9 is_stmt 1 view .LVU1615
1849:Veno-Echo.cpp ****     }
 6001              		.loc 21 1849 30 is_stmt 0 view .LVU1616
 6002 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 226


 6003              	.L407:
 6004 00ae B548     		ldr	r0, .L415+24
 6005 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 6006              	.LVL297:
1852:Veno-Echo.cpp ****     {
 6007              		.loc 21 1852 5 is_stmt 1 view .LVU1617
1852:Veno-Echo.cpp ****     {
 6008              		.loc 21 1852 17 is_stmt 0 view .LVU1618
 6009 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1852:Veno-Echo.cpp ****     {
 6010              		.loc 21 1852 5 view .LVU1619
 6011 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 6012 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6013 00c0 C0F2B381 		blt	.L402
1852:Veno-Echo.cpp ****     {
 6014              		.loc 21 1852 42 discriminator 1 view .LVU1620
 6015 00c4 DFEDB06A 		vldr.32	s13, .L415+28
1858:Veno-Echo.cpp ****     }
 6016              		.loc 21 1858 18 discriminator 1 view .LVU1621
 6017 00c8 9FEDB07A 		vldr.32	s14, .L415+32
 6018 00cc F4EEE67A 		vcmpe.f32	s15, s13
 6019 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6020 00d4 88BF     		it	hi
 6021 00d6 F0EE477A 		vmovhi.f32	s15, s14
 6022              	.L346:
1861:Veno-Echo.cpp ****     {
 6023              		.loc 21 1861 17 view .LVU1622
 6024 00da 94ED030A 		vldr.32	s0, [r4, #12]
1861:Veno-Echo.cpp ****     {
 6025              		.loc 21 1861 5 view .LVU1623
 6026 00de 9FEDAC7A 		vldr.32	s14, .L415+36
 6027 00e2 AC4B     		ldr	r3, .L415+40
 6028 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 6029              	.LBB1531:
 6030              	.LBB1532:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6031              		.loc 9 60 20 view .LVU1624
 6032 00e8 AB4D     		ldr	r5, .L415+44
 6033 00ea C3ED007A 		vstr.32	s15, [r3]
 6034              	.LBE1532:
 6035              	.LBE1531:
1861:Veno-Echo.cpp ****     {
 6036              		.loc 21 1861 5 is_stmt 1 view .LVU1625
 6037 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6038 00f2 06DB     		blt	.L349
1861:Veno-Echo.cpp ****     {
 6039              		.loc 21 1861 40 is_stmt 0 discriminator 1 view .LVU1626
 6040 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6041 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6042 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6043 0100 01D9     		bls	.L408
 6044              	.L349:
1867:Veno-Echo.cpp ****     }
 6045              		.loc 21 1867 9 is_stmt 1 view .LVU1627
 6046              	.LVL298:
 6047              	.LBB1533:
 6048              	.LBI1533:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 227


  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6049              		.loc 9 58 17 view .LVU1628
 6050              	.LBB1534:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6051              		.loc 9 60 9 view .LVU1629
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6052              		.loc 9 60 20 is_stmt 0 view .LVU1630
 6053 0102 9FEDA60A 		vldr.32	s0, .L415+48
 6054              	.LVL299:
 6055              	.L408:
 6056              		.loc 9 61 34 view .LVU1631
 6057 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6058              		.loc 9 60 20 view .LVU1632
 6059 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6060              		.loc 9 61 9 is_stmt 1 view .LVU1633
 6061              		.loc 9 61 34 is_stmt 0 view .LVU1634
 6062 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6063              	.LVL300:
 6064              	.LBE1534:
 6065              	.LBE1533:
1870:Veno-Echo.cpp ****     {
 6066              		.loc 21 1870 5 view .LVU1635
 6067 0110 DFEDA37A 		vldr.32	s15, .L415+52
 6068              	.LBB1536:
 6069              	.LBB1535:
 6070              		.loc 9 61 20 view .LVU1636
 6071 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6072              	.LBE1535:
 6073              	.LBE1536:
1870:Veno-Echo.cpp ****     {
 6074              		.loc 21 1870 5 is_stmt 1 view .LVU1637
1870:Veno-Echo.cpp ****     {
 6075              		.loc 21 1870 17 is_stmt 0 view .LVU1638
 6076 0118 94ED050A 		vldr.32	s0, [r4, #20]
1870:Veno-Echo.cpp ****     {
 6077              		.loc 21 1870 5 view .LVU1639
 6078 011c B4EEE70A 		vcmpe.f32	s0, s15
 6079 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6080 0124 07DB     		blt	.L353
1870:Veno-Echo.cpp ****     {
 6081              		.loc 21 1870 40 discriminator 1 view .LVU1640
 6082 0126 DFED9F7A 		vldr.32	s15, .L415+56
 6083 012a B4EEE70A 		vcmpe.f32	s0, s15
 6084 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6085 0132 40F26781 		bls	.L411
 6086              	.L353:
1879:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6087              		.loc 21 1879 9 is_stmt 1 view .LVU1641
1879:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6088              		.loc 21 1879 22 is_stmt 0 view .LVU1642
 6089 0136 9FED9B0A 		vldr.32	s0, .L415+56
 6090 013a 9B48     		ldr	r0, .L415+60
 6091 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6092              	.LVL301:
1880:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6093              		.loc 21 1880 9 is_stmt 1 view .LVU1643
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 228


1880:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6094              		.loc 21 1880 22 is_stmt 0 view .LVU1644
 6095 0140 9FED980A 		vldr.32	s0, .L415+56
 6096 0144 9948     		ldr	r0, .L415+64
 6097 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6098              	.LVL302:
1881:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6099              		.loc 21 1881 9 is_stmt 1 view .LVU1645
1881:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6100              		.loc 21 1881 27 is_stmt 0 view .LVU1646
 6101 014a 9FED960A 		vldr.32	s0, .L415+56
 6102 014e 9848     		ldr	r0, .L415+68
 6103 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6104              	.LVL303:
1882:Veno-Echo.cpp ****     }
 6105              		.loc 21 1882 9 is_stmt 1 view .LVU1647
1882:Veno-Echo.cpp ****     }
 6106              		.loc 21 1882 27 is_stmt 0 view .LVU1648
 6107 0154 9FED930A 		vldr.32	s0, .L415+56
 6108 0158 9648     		ldr	r0, .L415+72
 6109 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6110              	.LVL304:
 6111              	.L356:
1885:Veno-Echo.cpp ****     {
 6112              		.loc 21 1885 5 is_stmt 1 view .LVU1649
1885:Veno-Echo.cpp ****     {
 6113              		.loc 21 1885 17 is_stmt 0 view .LVU1650
 6114 015e 94ED040A 		vldr.32	s0, [r4, #16]
1885:Veno-Echo.cpp ****     {
 6115              		.loc 21 1885 5 view .LVU1651
 6116 0162 DFED957A 		vldr.32	s15, .L415+76
 6117 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6118 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6119 016e 07DB     		blt	.L357
1885:Veno-Echo.cpp ****     {
 6120              		.loc 21 1885 40 discriminator 1 view .LVU1652
 6121 0170 DFED927A 		vldr.32	s15, .L415+80
 6122 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6123 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6124 017c 40F2E380 		bls	.L412
 6125              	.L357:
1894:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6126              		.loc 21 1894 9 is_stmt 1 view .LVU1653
1894:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6127              		.loc 21 1894 22 is_stmt 0 view .LVU1654
 6128 0180 9FED8F0A 		vldr.32	s0, .L415+84
 6129 0184 8F48     		ldr	r0, .L415+88
 6130 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6131              	.LVL305:
1895:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6132              		.loc 21 1895 9 is_stmt 1 view .LVU1655
1895:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6133              		.loc 21 1895 22 is_stmt 0 view .LVU1656
 6134 018a 9FED8D0A 		vldr.32	s0, .L415+84
 6135 018e 8E48     		ldr	r0, .L415+92
 6136 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6137              	.LVL306:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 229


1896:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6138              		.loc 21 1896 9 is_stmt 1 view .LVU1657
1896:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6139              		.loc 21 1896 27 is_stmt 0 view .LVU1658
 6140 0194 9FED8A0A 		vldr.32	s0, .L415+84
 6141 0198 8C48     		ldr	r0, .L415+96
 6142 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6143              	.LVL307:
1897:Veno-Echo.cpp **** 
 6144              		.loc 21 1897 9 is_stmt 1 view .LVU1659
1897:Veno-Echo.cpp **** 
 6145              		.loc 21 1897 27 is_stmt 0 view .LVU1660
 6146 019e 9FED880A 		vldr.32	s0, .L415+84
 6147 01a2 8B48     		ldr	r0, .L415+100
 6148 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6149              	.LVL308:
 6150              	.L360:
1901:Veno-Echo.cpp ****     {
 6151              		.loc 21 1901 5 is_stmt 1 view .LVU1661
1901:Veno-Echo.cpp ****     {
 6152              		.loc 21 1901 17 is_stmt 0 view .LVU1662
 6153 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1901:Veno-Echo.cpp ****     {
 6154              		.loc 21 1901 5 view .LVU1663
 6155 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6156 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6157 01b4 07DB     		blt	.L361
1901:Veno-Echo.cpp ****     {
 6158              		.loc 21 1901 38 discriminator 1 view .LVU1664
 6159 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6160 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6161 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6162 01c2 40F29980 		bls	.L413
 6163              	.L361:
1915:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6164              		.loc 21 1915 9 is_stmt 1 view .LVU1665
1915:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6165              		.loc 21 1915 26 is_stmt 0 view .LVU1666
 6166 01c6 9FED710A 		vldr.32	s0, .L415+32
 6167 01ca 7948     		ldr	r0, .L415+68
 6168 01cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6169              	.LVL309:
1916:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6170              		.loc 21 1916 9 is_stmt 1 view .LVU1667
1916:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6171              		.loc 21 1916 26 is_stmt 0 view .LVU1668
 6172 01d0 9FED6E0A 		vldr.32	s0, .L415+32
 6173 01d4 7D48     		ldr	r0, .L415+96
 6174 01d6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6175              	.LVL310:
1917:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6176              		.loc 21 1917 9 is_stmt 1 view .LVU1669
1917:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6177              		.loc 21 1917 26 is_stmt 0 view .LVU1670
 6178 01da 9FED6C0A 		vldr.32	s0, .L415+32
 6179 01de 7548     		ldr	r0, .L415+72
 6180 01e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 230


 6181              	.LVL311:
1918:Veno-Echo.cpp ****     }
 6182              		.loc 21 1918 9 is_stmt 1 view .LVU1671
1918:Veno-Echo.cpp ****     }
 6183              		.loc 21 1918 26 is_stmt 0 view .LVU1672
 6184 01e4 9FED690A 		vldr.32	s0, .L415+32
 6185 01e8 7948     		ldr	r0, .L415+100
 6186 01ea FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6187              	.LVL312:
 6188              	.L364:
1921:Veno-Echo.cpp ****     {
 6189              		.loc 21 1921 5 is_stmt 1 view .LVU1673
1921:Veno-Echo.cpp ****     {
 6190              		.loc 21 1921 16 is_stmt 0 view .LVU1674
 6191 01ee D4ED077A 		vldr.32	s15, [r4, #28]
1921:Veno-Echo.cpp ****     {
 6192              		.loc 21 1921 5 view .LVU1675
 6193 01f2 9FED787A 		vldr.32	s14, .L415+104
1927:Veno-Echo.cpp ****     }
 6194              		.loc 21 1927 21 view .LVU1676
 6195 01f6 784B     		ldr	r3, .L415+108
1921:Veno-Echo.cpp ****     {
 6196              		.loc 21 1921 5 view .LVU1677
 6197 01f8 F4EEC77A 		vcmpe.f32	s15, s14
 6198 01fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6199 0200 06D4     		bmi	.L368
1925:Veno-Echo.cpp ****     {
 6200              		.loc 21 1925 14 is_stmt 1 view .LVU1678
 6201 0202 9FED767A 		vldr.32	s14, .L415+112
 6202 0206 F4EEC77A 		vcmpe.f32	s15, s14
 6203 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6204 020e 70DC     		bgt	.L414
 6205              	.L368:
1923:Veno-Echo.cpp ****     }
 6206              		.loc 21 1923 9 view .LVU1679
1923:Veno-Echo.cpp ****     }
 6207              		.loc 21 1923 21 is_stmt 0 view .LVU1680
 6208 0210 0022     		movs	r2, #0
 6209 0212 1A70     		strb	r2, [r3]
 6210              	.L367:
1935:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6211              		.loc 21 1935 5 is_stmt 1 view .LVU1681
1935:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6212              		.loc 21 1935 18 is_stmt 0 view .LVU1682
 6213 0214 94ED080A 		vldr.32	s0, [r4, #32]
1935:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6214              		.loc 21 1935 5 view .LVU1683
 6215 0218 DFED717A 		vldr.32	s15, .L415+116
 6216 021c B4EEE70A 		vcmpe.f32	s0, s15
 6217 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6218 0224 06DB     		blt	.L370
1936:Veno-Echo.cpp ****     {
 6219              		.loc 21 1936 9 view .LVU1684
 6220 0226 DFED6F7A 		vldr.32	s15, .L415+120
 6221 022a B4EEE70A 		vcmpe.f32	s0, s15
 6222 022e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6223 0232 01D9     		bls	.L409
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 231


 6224              	.L370:
1944:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6225              		.loc 21 1944 9 is_stmt 1 view .LVU1685
1944:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6226              		.loc 21 1944 31 is_stmt 0 view .LVU1686
 6227 0234 9FED6C0A 		vldr.32	s0, .L415+124
 6228              	.L409:
 6229 0238 5248     		ldr	r0, .L415+24
 6230 023a FFF7FEFF 		bl	_ZN8Taptempo12setTapLengthEf
 6231              	.LVL313:
1945:Veno-Echo.cpp ****     }
 6232              		.loc 21 1945 9 is_stmt 1 view .LVU1687
1945:Veno-Echo.cpp ****     }
 6233              		.loc 21 1945 31 is_stmt 0 view .LVU1688
 6234 023e 5148     		ldr	r0, .L415+24
 6235 0240 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6236              	.LVL314:
 6237 0244 6948     		ldr	r0, .L415+128
 6238 0246 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6239              	.LVL315:
1948:Veno-Echo.cpp ****     {
 6240              		.loc 21 1948 5 is_stmt 1 view .LVU1689
 6241 024a DFED697A 		vldr.32	s15, .L415+132
 6242 024e 94ED097A 		vldr.32	s14, [r4, #36]
1950:Veno-Echo.cpp ****     }
 6243              		.loc 21 1950 24 is_stmt 0 view .LVU1690
 6244 0252 6848     		ldr	r0, .L415+136
1948:Veno-Echo.cpp ****     {
 6245              		.loc 21 1948 5 view .LVU1691
 6246 0254 B4EEE77A 		vcmpe.f32	s14, s15
 6247 0258 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6248 025c 42DD     		ble	.L404
1950:Veno-Echo.cpp ****     }
 6249              		.loc 21 1950 9 is_stmt 1 view .LVU1692
1950:Veno-Echo.cpp ****     }
 6250              		.loc 21 1950 24 is_stmt 0 view .LVU1693
 6251 025e FFF7FEFF 		bl	_ZN9ButtonLED6turnONEv
 6252              	.LVL316:
 6253              	.L376:
1957:Veno-Echo.cpp ****     {
 6254              		.loc 21 1957 5 is_stmt 1 view .LVU1694
 6255 0262 DFED637A 		vldr.32	s15, .L415+132
 6256 0266 94ED0A7A 		vldr.32	s14, [r4, #40]
1959:Veno-Echo.cpp ****     }
 6257              		.loc 21 1959 24 is_stmt 0 view .LVU1695
 6258 026a 6348     		ldr	r0, .L415+140
1957:Veno-Echo.cpp ****     {
 6259              		.loc 21 1957 5 view .LVU1696
 6260 026c B4EEE77A 		vcmpe.f32	s14, s15
 6261 0270 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6262 0274 39DD     		ble	.L405
1959:Veno-Echo.cpp ****     }
 6263              		.loc 21 1959 9 is_stmt 1 view .LVU1697
1966:Veno-Echo.cpp **** 
 6264              		.loc 21 1966 1 is_stmt 0 view .LVU1698
 6265 0276 BDE83840 		pop	{r3, r4, r5, lr}
 6266              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 232


 6267              		.cfi_restore 14
 6268              		.cfi_restore 5
 6269              		.cfi_restore 4
 6270              		.cfi_restore 3
 6271              		.cfi_def_cfa_offset 0
 6272              	.LVL317:
1959:Veno-Echo.cpp ****     }
 6273              		.loc 21 1959 24 view .LVU1699
 6274 027a FFF7FEBF 		b	_ZN9ButtonLED6turnONEv
 6275              	.LVL318:
 6276              	.L331:
 6277              		.cfi_restore_state
1839:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6278              		.loc 21 1839 9 is_stmt 1 view .LVU1700
 6279              	.LBB1537:
 6280              	.LBI1537:
  68:Veno-Echo.cpp ****     {
 6281              		.loc 21 68 10 view .LVU1701
 6282              	.LBB1538:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6283              		.loc 21 70 9 view .LVU1702
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6284              		.loc 21 70 28 is_stmt 0 view .LVU1703
 6285 027e D3ED017A 		vldr.32	s15, [r3, #4]
 6286              	.LVL319:
 6287              	.LBB1539:
 6288              	.LBI1539:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6289              		.loc 22 75 3 is_stmt 1 view .LVU1704
 6290              	.LBB1540:
 6291              		.loc 22 76 5 view .LVU1705
 6292              		.loc 22 76 5 is_stmt 0 view .LVU1706
 6293              	.LBE1540:
 6294              	.LBE1539:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6295              		.loc 21 70 15 view .LVU1707
 6296 0282 DFED5E6A 		vldr.32	s13, .L415+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6297              		.loc 21 70 53 view .LVU1708
 6298 0286 9FED3C6A 		vldr.32	s12, .L415+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6299              		.loc 21 70 15 view .LVU1709
 6300 028a 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6301              		.loc 21 70 53 view .LVU1710
 6302 028e 67EE867A 		vmul.f32	s15, s15, s12
 6303              	.LBB1542:
 6304              	.LBB1541:
 6305              		.loc 22 76 31 view .LVU1711
 6306 0292 B0EEC77A 		vabs.f32	s14, s14
 6307              	.LBE1541:
 6308              	.LBE1542:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6309              		.loc 21 70 9 view .LVU1712
 6310 0296 B4EEE77A 		vcmpe.f32	s14, s15
 6311 029a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6312 029e 06DD     		ble	.L338
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 233


 6313              	.LBE1538:
 6314              	.LBE1537:
1839:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6315              		.loc 21 1839 33 view .LVU1713
 6316 02a0 1A68     		ldr	r2, [r3]
 6317              	.LBB1548:
 6318              	.LBB1547:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6319              		.loc 21 73 13 is_stmt 1 view .LVU1714
 6320              	.LBB1543:
 6321              	.LBB1544:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6322              		.loc 20 71 9 is_stmt 0 view .LVU1715
 6323 02a2 0021     		movs	r1, #0
 6324              		.loc 20 72 9 view .LVU1716
 6325 02a4 5648     		ldr	r0, .L415+148
 6326              	.LVL320:
 6327              		.loc 20 72 9 view .LVU1717
 6328              	.LBE1544:
 6329              	.LBE1543:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6330              		.loc 21 73 27 view .LVU1718
 6331 02a6 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6332              		.loc 21 74 13 is_stmt 1 view .LVU1719
 6333              	.LVL321:
 6334              	.LBB1546:
 6335              	.LBI1543:
  69:delayline_reverse.h ****     {
 6336              		.loc 20 69 17 view .LVU1720
 6337              	.LBB1545:
 6338              		.loc 20 72 9 is_stmt 0 view .LVU1721
 6339 02aa 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6340              		.loc 20 71 9 view .LVU1722
 6341 02ac 1160     		str	r1, [r2]	@ float
 6342              	.LVL322:
 6343              	.L338:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6344              		.loc 20 71 9 view .LVU1723
 6345              	.LBE1545:
 6346              	.LBE1546:
 6347              	.LBE1547:
 6348              	.LBE1548:
1840:Veno-Echo.cpp ****     }
 6349              		.loc 21 1840 9 is_stmt 1 view .LVU1724
 6350              	.LBB1549:
 6351              	.LBI1549:
  68:Veno-Echo.cpp ****     {
 6352              		.loc 21 68 10 view .LVU1725
 6353              	.LBB1550:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6354              		.loc 21 70 9 view .LVU1726
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6355              		.loc 21 70 28 is_stmt 0 view .LVU1727
 6356 02ae 344B     		ldr	r3, .L415+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 234


 6357              		.loc 21 70 15 view .LVU1728
 6358 02b0 DFED526A 		vldr.32	s13, .L415+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6359              		.loc 21 70 28 view .LVU1729
 6360 02b4 D3ED017A 		vldr.32	s15, [r3, #4]
 6361              	.LVL323:
 6362              	.LBB1551:
 6363              	.LBI1551:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6364              		.loc 22 75 3 is_stmt 1 view .LVU1730
 6365              	.LBB1552:
 6366              		.loc 22 76 5 view .LVU1731
 6367              		.loc 22 76 5 is_stmt 0 view .LVU1732
 6368              	.LBE1552:
 6369              	.LBE1551:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6370              		.loc 21 70 53 view .LVU1733
 6371 02b8 9FED2F6A 		vldr.32	s12, .L415+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6372              		.loc 21 70 15 view .LVU1734
 6373 02bc 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6374              		.loc 21 70 53 view .LVU1735
 6375 02c0 67EE867A 		vmul.f32	s15, s15, s12
 6376              	.LBB1554:
 6377              	.LBB1553:
 6378              		.loc 22 76 31 view .LVU1736
 6379 02c4 B0EEC77A 		vabs.f32	s14, s14
 6380              	.LBE1553:
 6381              	.LBE1554:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6382              		.loc 21 70 9 view .LVU1737
 6383 02c8 B4EEE77A 		vcmpe.f32	s14, s15
 6384 02cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6385 02d0 7FF7DBAE 		ble	.L337
 6386              	.LBE1550:
 6387              	.LBE1549:
1840:Veno-Echo.cpp ****     }
 6388              		.loc 21 1840 33 view .LVU1738
 6389 02d4 1A68     		ldr	r2, [r3]
 6390              	.LBB1560:
 6391              	.LBB1559:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6392              		.loc 21 73 13 is_stmt 1 view .LVU1739
 6393              	.LBB1555:
 6394              	.LBB1556:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6395              		.loc 20 71 9 is_stmt 0 view .LVU1740
 6396 02d6 0021     		movs	r1, #0
 6397              		.loc 20 72 9 view .LVU1741
 6398 02d8 4948     		ldr	r0, .L415+148
 6399              	.LBE1556:
 6400              	.LBE1555:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6401              		.loc 21 73 27 view .LVU1742
 6402 02da C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 235


 6403              		.loc 21 74 13 is_stmt 1 view .LVU1743
 6404              	.LVL324:
 6405              	.LBB1558:
 6406              	.LBI1555:
  69:delayline_reverse.h ****     {
 6407              		.loc 20 69 17 view .LVU1744
 6408              	.LBB1557:
 6409              		.loc 20 72 9 is_stmt 0 view .LVU1745
 6410 02de 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6411              		.loc 20 71 9 view .LVU1746
 6412 02e0 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6413              		.loc 20 73 5 view .LVU1747
 6414 02e2 D2E6     		b	.L337
 6415              	.LVL325:
 6416              	.L404:
 6417              		.loc 20 73 5 view .LVU1748
 6418              	.LBE1557:
 6419              	.LBE1558:
 6420              	.LBE1559:
 6421              	.LBE1560:
1954:Veno-Echo.cpp ****     }
 6422              		.loc 21 1954 9 is_stmt 1 view .LVU1749
1954:Veno-Echo.cpp ****     }
 6423              		.loc 21 1954 25 is_stmt 0 view .LVU1750
 6424 02e4 FFF7FEFF 		bl	_ZN9ButtonLED7turnOFFEv
 6425              	.LVL326:
 6426 02e8 BBE7     		b	.L376
 6427              	.L405:
1963:Veno-Echo.cpp ****     }
 6428              		.loc 21 1963 9 is_stmt 1 view .LVU1751
1966:Veno-Echo.cpp **** 
 6429              		.loc 21 1966 1 is_stmt 0 view .LVU1752
 6430 02ea BDE83840 		pop	{r3, r4, r5, lr}
 6431              		.cfi_remember_state
 6432              		.cfi_restore 14
 6433              		.cfi_restore 5
 6434              		.cfi_restore 4
 6435              		.cfi_restore 3
 6436              		.cfi_def_cfa_offset 0
 6437              	.LVL327:
1963:Veno-Echo.cpp ****     }
 6438              		.loc 21 1963 25 view .LVU1753
 6439 02ee FFF7FEBF 		b	_ZN9ButtonLED7turnOFFEv
 6440              	.LVL328:
 6441              	.L414:
 6442              		.cfi_restore_state
1927:Veno-Echo.cpp ****     }
 6443              		.loc 21 1927 9 is_stmt 1 view .LVU1754
1927:Veno-Echo.cpp ****     }
 6444              		.loc 21 1927 21 is_stmt 0 view .LVU1755
 6445 02f2 0122     		movs	r2, #1
 6446 02f4 1A70     		strb	r2, [r3]
 6447 02f6 8DE7     		b	.L367
 6448              	.L413:
1903:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 236


 6449              		.loc 21 1903 9 is_stmt 1 view .LVU1756
1903:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6450              		.loc 21 1903 21 is_stmt 0 view .LVU1757
 6451 02f8 2B48     		ldr	r0, .L415+60
 6452 02fa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6453              	.LVL329:
1904:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6454              		.loc 21 1904 9 is_stmt 1 view .LVU1758
1904:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6455              		.loc 21 1904 21 is_stmt 0 view .LVU1759
 6456 02fe 94ED060A 		vldr.32	s0, [r4, #24]
 6457 0302 3048     		ldr	r0, .L415+88
 6458 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6459              	.LVL330:
1905:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6460              		.loc 21 1905 9 is_stmt 1 view .LVU1760
1905:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6461              		.loc 21 1905 21 is_stmt 0 view .LVU1761
 6462 0308 94ED060A 		vldr.32	s0, [r4, #24]
 6463 030c 2748     		ldr	r0, .L415+64
 6464 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6465              	.LVL331:
1906:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6466              		.loc 21 1906 9 is_stmt 1 view .LVU1762
1906:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6467              		.loc 21 1906 21 is_stmt 0 view .LVU1763
 6468 0312 94ED060A 		vldr.32	s0, [r4, #24]
 6469 0316 2C48     		ldr	r0, .L415+92
 6470 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6471              	.LVL332:
1907:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6472              		.loc 21 1907 9 is_stmt 1 view .LVU1764
1907:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6473              		.loc 21 1907 26 is_stmt 0 view .LVU1765
 6474 031c 94ED060A 		vldr.32	s0, [r4, #24]
 6475 0320 2348     		ldr	r0, .L415+68
 6476 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6477              	.LVL333:
1908:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6478              		.loc 21 1908 9 is_stmt 1 view .LVU1766
1908:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6479              		.loc 21 1908 26 is_stmt 0 view .LVU1767
 6480 0326 94ED060A 		vldr.32	s0, [r4, #24]
 6481 032a 2848     		ldr	r0, .L415+96
 6482 032c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6483              	.LVL334:
1909:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6484              		.loc 21 1909 9 is_stmt 1 view .LVU1768
1909:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6485              		.loc 21 1909 26 is_stmt 0 view .LVU1769
 6486 0330 94ED060A 		vldr.32	s0, [r4, #24]
 6487 0334 1F48     		ldr	r0, .L415+72
 6488 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6489              	.LVL335:
1910:Veno-Echo.cpp ****     }
 6490              		.loc 21 1910 9 is_stmt 1 view .LVU1770
1910:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 237


 6491              		.loc 21 1910 26 is_stmt 0 view .LVU1771
 6492 033a 94ED060A 		vldr.32	s0, [r4, #24]
 6493 033e 2448     		ldr	r0, .L415+100
 6494 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6495              	.LVL336:
 6496 0344 53E7     		b	.L364
 6497              	.L412:
1887:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6498              		.loc 21 1887 9 is_stmt 1 view .LVU1772
1887:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6499              		.loc 21 1887 22 is_stmt 0 view .LVU1773
 6500 0346 1F48     		ldr	r0, .L415+88
 6501 0348 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6502              	.LVL337:
1888:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6503              		.loc 21 1888 9 is_stmt 1 view .LVU1774
1888:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6504              		.loc 21 1888 22 is_stmt 0 view .LVU1775
 6505 034c 94ED040A 		vldr.32	s0, [r4, #16]
 6506 0350 1D48     		ldr	r0, .L415+92
 6507 0352 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6508              	.LVL338:
1889:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6509              		.loc 21 1889 9 is_stmt 1 view .LVU1776
1889:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6510              		.loc 21 1889 27 is_stmt 0 view .LVU1777
 6511 0356 94ED040A 		vldr.32	s0, [r4, #16]
 6512 035a 1C48     		ldr	r0, .L415+96
 6513 035c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6514              	.LVL339:
1890:Veno-Echo.cpp ****     }
 6515              		.loc 21 1890 9 is_stmt 1 view .LVU1778
1890:Veno-Echo.cpp ****     }
 6516              		.loc 21 1890 27 is_stmt 0 view .LVU1779
 6517 0360 94ED040A 		vldr.32	s0, [r4, #16]
 6518 0364 1A48     		ldr	r0, .L415+100
 6519 0366 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6520              	.LVL340:
 6521 036a 1DE7     		b	.L360
 6522              	.L416:
 6523              		.align	2
 6524              	.L415:
 6525 036c 0050C346 		.word	1187205120
 6526 0370 00000000 		.word	.LANCHOR2
 6527 0374 00606A48 		.word	1214930944
 6528 0378 0AD7A33B 		.word	1000593162
 6529 037c BF270900 		.word	599999
 6530 0380 00000000 		.word	.LANCHOR3
 6531 0384 00000000 		.word	.LANCHOR26
 6532 0388 0000FA43 		.word	1140457472
 6533 038c 00000000 		.word	0
 6534 0390 CDCCCC3D 		.word	1036831949
 6535 0394 00000000 		.word	.LANCHOR68
 6536 0398 00000000 		.word	.LANCHOR76
 6537 039c 9A99A140 		.word	1084332442
 6538 03a0 0080BB44 		.word	1153138688
 6539 03a4 00803B46 		.word	1178304512
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 238


 6540 03a8 00000000 		.word	.LANCHOR47
 6541 03ac 00000000 		.word	.LANCHOR48
 6542 03b0 00000000 		.word	.LANCHOR49
 6543 03b4 00000000 		.word	.LANCHOR50
 6544 03b8 0000C842 		.word	1120403456
 6545 03bc 00004844 		.word	1145569280
 6546 03c0 00004843 		.word	1128792064
 6547 03c4 00000000 		.word	.LANCHOR35
 6548 03c8 00000000 		.word	.LANCHOR36
 6549 03cc 00000000 		.word	.LANCHOR37
 6550 03d0 00000000 		.word	.LANCHOR38
 6551 03d4 6666E63E 		.word	1055286886
 6552 03d8 00000000 		.word	.LANCHOR83
 6553 03dc CDCC0C3F 		.word	1057803469
 6554 03e0 00409C46 		.word	1184645120
 6555 03e4 001BB74A 		.word	1253513984
 6556 03e8 0024F448 		.word	1223959552
 6557 03ec 00000000 		.word	.LANCHOR89
 6558 03f0 48E1FA3E 		.word	1056629064
 6559 03f4 00000000 		.word	.LANCHOR92
 6560 03f8 00000000 		.word	.LANCHOR93
 6561 03fc 00650148 		.word	1208050944
 6562 0400 94050200 		.word	132500
 6563              	.L411:
1872:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6564              		.loc 21 1872 9 is_stmt 1 view .LVU1780
1872:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6565              		.loc 21 1872 22 is_stmt 0 view .LVU1781
 6566 0404 1248     		ldr	r0, .L417
 6567 0406 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6568              	.LVL341:
1873:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6569              		.loc 21 1873 9 is_stmt 1 view .LVU1782
1873:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6570              		.loc 21 1873 22 is_stmt 0 view .LVU1783
 6571 040a 94ED050A 		vldr.32	s0, [r4, #20]
 6572 040e 1148     		ldr	r0, .L417+4
 6573 0410 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6574              	.LVL342:
1874:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6575              		.loc 21 1874 9 is_stmt 1 view .LVU1784
1874:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6576              		.loc 21 1874 27 is_stmt 0 view .LVU1785
 6577 0414 94ED050A 		vldr.32	s0, [r4, #20]
 6578 0418 0F48     		ldr	r0, .L417+8
 6579 041a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6580              	.LVL343:
1875:Veno-Echo.cpp ****     }
 6581              		.loc 21 1875 9 is_stmt 1 view .LVU1786
1875:Veno-Echo.cpp ****     }
 6582              		.loc 21 1875 27 is_stmt 0 view .LVU1787
 6583 041e 94ED050A 		vldr.32	s0, [r4, #20]
 6584 0422 0E48     		ldr	r0, .L417+12
 6585 0424 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6586              	.LVL344:
 6587 0428 99E6     		b	.L356
 6588              	.L402:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 239


1858:Veno-Echo.cpp ****     }
 6589              		.loc 21 1858 18 view .LVU1788
 6590 042a DFED0D7A 		vldr.32	s15, .L417+16
 6591 042e 54E6     		b	.L346
 6592              	.LVL345:
 6593              	.L410:
 6594              	.LBB1561:
 6595              	.LBB1529:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6596              		.loc 21 74 29 view .LVU1789
 6597 0430 BCEEE77A 		vcvt.u32.f32	s14, s15
 6598              	.LBB1521:
 6599              	.LBB1522:
  72:delayline_reverse.h ****     }
 6600              		.loc 20 72 9 view .LVU1790
 6601 0434 0B4D     		ldr	r5, .L417+20
 6602              	.LBE1522:
 6603              	.LBE1521:
 6604              	.LBE1529:
 6605              	.LBE1561:
1835:Veno-Echo.cpp ****     }
 6606              		.loc 21 1835 33 view .LVU1791
 6607 0436 1968     		ldr	r1, [r3]
 6608              	.LBB1562:
 6609              	.LBB1530:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6610              		.loc 21 73 13 is_stmt 1 view .LVU1792
 6611              	.LBB1526:
 6612              	.LBB1523:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6613              		.loc 20 71 9 is_stmt 0 view .LVU1793
 6614 0438 0020     		movs	r0, #0
 6615              	.LBE1523:
 6616              	.LBE1526:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6617              		.loc 21 73 27 view .LVU1794
 6618 043a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6619              		.loc 21 74 29 view .LVU1795
 6620 043e 17EE102A 		vmov	r2, s14	@ int
 6621              	.LBB1527:
 6622              	.LBB1524:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6623              		.loc 20 71 9 view .LVU1796
 6624 0442 0860     		str	r0, [r1]	@ float
 6625              	.LVL346:
  72:delayline_reverse.h ****     }
 6626              		.loc 20 72 9 view .LVU1797
 6627 0444 AA42     		cmp	r2, r5
 6628 0446 28BF     		it	cs
 6629 0448 2A46     		movcs	r2, r5
 6630              	.LBE1524:
 6631              	.LBE1527:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6632              		.loc 21 74 13 is_stmt 1 view .LVU1798
 6633              	.LVL347:
 6634              	.LBB1528:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 240


 6635              	.LBI1521:
  69:delayline_reverse.h ****     {
 6636              		.loc 20 69 17 view .LVU1799
 6637              	.LBB1525:
  72:delayline_reverse.h ****     }
 6638              		.loc 20 72 9 is_stmt 0 view .LVU1800
 6639 044a 0A61     		str	r2, [r1, #16]
 6640              		.loc 20 73 5 view .LVU1801
 6641 044c 1DE6     		b	.L337
 6642              	.L418:
 6643 044e 00BF     		.align	2
 6644              	.L417:
 6645 0450 00000000 		.word	.LANCHOR47
 6646 0454 00000000 		.word	.LANCHOR48
 6647 0458 00000000 		.word	.LANCHOR49
 6648 045c 00000000 		.word	.LANCHOR50
 6649 0460 00000000 		.word	0
 6650 0464 BF270900 		.word	599999
 6651              	.LBE1525:
 6652              	.LBE1528:
 6653              	.LBE1530:
 6654              	.LBE1562:
 6655              		.cfi_endproc
 6656              	.LFE4333:
 6658              		.section	.text.startup.main,"ax",%progbits
 6659              		.align	1
 6660              		.p2align 2,,3
 6661              		.global	main
 6662              		.syntax unified
 6663              		.thumb
 6664              		.thumb_func
 6665              		.fpu fpv5-d16
 6667              	main:
 6668              	.LFB4311:
 649:Veno-Echo.cpp ****     // initialize hardware.
 6669              		.loc 21 649 1 is_stmt 1 view -0
 6670              		.cfi_startproc
 6671              		@ Volatile: function does not return.
 6672              		@ args = 0, pretend = 0, frame = 328
 6673              		@ frame_needed = 0, uses_anonymous_args = 0
 651:Veno-Echo.cpp ****     hw.Init();
 6674              		.loc 21 651 5 view .LVU1803
 649:Veno-Echo.cpp ****     // initialize hardware.
 6675              		.loc 21 649 1 is_stmt 0 view .LVU1804
 6676 0000 80B5     		push	{r7, lr}
 6677              		.cfi_def_cfa_offset 8
 6678              		.cfi_offset 7, -8
 6679              		.cfi_offset 14, -4
 651:Veno-Echo.cpp ****     hw.Init();
 6680              		.loc 21 651 17 view .LVU1805
 6681 0002 CF48     		ldr	r0, .L429
 649:Veno-Echo.cpp ****     // initialize hardware.
 6682              		.loc 21 649 1 view .LVU1806
 6683 0004 D4B0     		sub	sp, sp, #336
 6684              		.cfi_def_cfa_offset 344
 651:Veno-Echo.cpp ****     hw.Init();
 6685              		.loc 21 651 17 view .LVU1807
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 241


 6686 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6687              	.LVL348:
 652:Veno-Echo.cpp ****     //hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_96KHZ);
 6688              		.loc 21 652 5 is_stmt 1 view .LVU1808
 652:Veno-Echo.cpp ****     //hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_96KHZ);
 6689              		.loc 21 652 12 is_stmt 0 view .LVU1809
 6690 000a 0021     		movs	r1, #0
 6691 000c CC48     		ldr	r0, .L429
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6692              		.loc 21 657 16 view .LVU1810
 6693 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 652:Veno-Echo.cpp ****     //hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_96KHZ);
 6694              		.loc 21 652 12 view .LVU1811
 6695 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6696              	.LVL349:
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6697              		.loc 21 657 5 is_stmt 1 view .LVU1812
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6698              		.loc 21 657 16 is_stmt 0 view .LVU1813
 6699 0016 1D20     		movs	r0, #29
 6700 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6701              	.LVL350:
 6702 001c 0346     		mov	r3, r0	@ movhi
 6703 001e 0620     		movs	r0, #6
 664:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6704              		.loc 21 664 22 view .LVU1814
 6705 0020 0224     		movs	r4, #2
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6706              		.loc 21 657 16 view .LVU1815
 6707 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 6708 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6709              	.LVL351:
 6710 002a 0346     		mov	r3, r0	@ movhi
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6711              		.loc 21 657 80 view .LVU1816
 6712 002c C448     		ldr	r0, .L429
 6713              	.LBB1563:
 6714              	.LBB1564:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6715              		.loc 11 64 50 view .LVU1817
 6716 002e 4FF00108 		mov	r8, #1
 6717              	.LBE1564:
 6718              	.LBE1563:
 6719              	.LBB1567:
 6720              	.LBB1568:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 242


  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6721              		.loc 8 58 57 view .LVU1818
 6722 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6723              	.LBE1568:
 6724              	.LBE1567:
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6725              		.loc 21 657 16 view .LVU1819
 6726 0036 ADF81030 		strh	r3, [sp, #16]	@ movhi
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6727              		.loc 21 657 80 view .LVU1820
 6728 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6729              	.LVL352:
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6730              		.loc 21 657 16 view .LVU1821
 6731 003e 0123     		movs	r3, #1
 6732 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6733 0044 BF48     		ldr	r0, .L429+4
 673:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6734              		.loc 21 673 20 view .LVU1822
 6735 0046 C04F     		ldr	r7, .L429+8
 6736              	.LBB1571:
 6737              	.LBB1572:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6738              		.loc 8 54 63 view .LVU1823
 6739 0048 C04D     		ldr	r5, .L429+12
 6740              	.LBE1572:
 6741              	.LBE1571:
 679:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6742              		.loc 21 679 20 view .LVU1824
 6743 004a C14E     		ldr	r6, .L429+16
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6744              		.loc 21 657 16 view .LVU1825
 6745 004c DDE90312 		ldrd	r1, r2, [sp, #12]
 6746 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6747              	.LVL353:
 658:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6748              		.loc 21 658 5 is_stmt 1 view .LVU1826
 658:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6749              		.loc 21 658 16 is_stmt 0 view .LVU1827
 6750 0054 1E20     		movs	r0, #30
 6751 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6752              	.LVL354:
 6753 005a 0346     		mov	r3, r0	@ movhi
 6754 005c 0720     		movs	r0, #7
 6755 005e ADF81430 		strh	r3, [sp, #20]	@ movhi
 6756 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6757              	.LVL355:
 6758 0066 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 243


 658:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6759              		.loc 21 658 80 view .LVU1828
 6760 0068 B548     		ldr	r0, .L429
 658:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6761              		.loc 21 658 16 view .LVU1829
 6762 006a ADF81830 		strh	r3, [sp, #24]	@ movhi
 658:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6763              		.loc 21 658 80 view .LVU1830
 6764 006e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6765              	.LVL356:
 658:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6766              		.loc 21 658 16 view .LVU1831
 6767 0072 0123     		movs	r3, #1
 6768 0074 80EE080A 		vdiv.f32	s0, s0, s16
 6769 0078 B648     		ldr	r0, .L429+20
 6770 007a DDE90512 		ldrd	r1, r2, [sp, #20]
 6771 007e FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6772              	.LVL357:
 659:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6773              		.loc 21 659 5 is_stmt 1 view .LVU1832
 659:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6774              		.loc 21 659 18 is_stmt 0 view .LVU1833
 6775 0082 0A20     		movs	r0, #10
 6776 0084 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6777              	.LVL358:
 6778 0088 0346     		mov	r3, r0	@ movhi
 6779 008a 0220     		movs	r0, #2
 6780 008c ADF81C30 		strh	r3, [sp, #28]	@ movhi
 6781 0090 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6782              	.LVL359:
 6783 0094 0346     		mov	r3, r0	@ movhi
 659:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6784              		.loc 21 659 85 view .LVU1834
 6785 0096 AA48     		ldr	r0, .L429
 659:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6786              		.loc 21 659 18 view .LVU1835
 6787 0098 ADF82030 		strh	r3, [sp, #32]	@ movhi
 659:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6788              		.loc 21 659 85 view .LVU1836
 6789 009c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6790              	.LVL360:
 659:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6791              		.loc 21 659 18 view .LVU1837
 6792 00a0 0023     		movs	r3, #0
 6793 00a2 80EE080A 		vdiv.f32	s0, s0, s16
 6794 00a6 AC48     		ldr	r0, .L429+24
 6795 00a8 DDE90712 		ldrd	r1, r2, [sp, #28]
 6796 00ac FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6797              	.LVL361:
 660:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6798              		.loc 21 660 5 is_stmt 1 view .LVU1838
 660:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6799              		.loc 21 660 18 is_stmt 0 view .LVU1839
 6800 00b0 0B20     		movs	r0, #11
 6801 00b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6802              	.LVL362:
 6803 00b6 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 244


 6804 00b8 0320     		movs	r0, #3
 6805 00ba ADF82430 		strh	r3, [sp, #36]	@ movhi
 6806 00be FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6807              	.LVL363:
 6808 00c2 0346     		mov	r3, r0	@ movhi
 660:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6809              		.loc 21 660 85 view .LVU1840
 6810 00c4 9E48     		ldr	r0, .L429
 660:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6811              		.loc 21 660 18 view .LVU1841
 6812 00c6 ADF82830 		strh	r3, [sp, #40]	@ movhi
 660:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6813              		.loc 21 660 85 view .LVU1842
 6814 00ca FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6815              	.LVL364:
 660:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6816              		.loc 21 660 18 view .LVU1843
 6817 00ce 0023     		movs	r3, #0
 6818 00d0 80EE080A 		vdiv.f32	s0, s0, s16
 6819 00d4 A148     		ldr	r0, .L429+28
 6820 00d6 DDE90912 		ldrd	r1, r2, [sp, #36]
 6821 00da FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6822              	.LVL365:
 661:Veno-Echo.cpp **** 
 6823              		.loc 21 661 5 is_stmt 1 view .LVU1844
 661:Veno-Echo.cpp **** 
 6824              		.loc 21 661 20 is_stmt 0 view .LVU1845
 6825 00de 1820     		movs	r0, #24
 6826 00e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6827              	.LVL366:
 6828 00e4 0346     		mov	r3, r0	@ movhi
 6829 00e6 0420     		movs	r0, #4
 6830 00e8 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6831 00ec FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6832              	.LVL367:
 6833 00f0 0346     		mov	r3, r0	@ movhi
 661:Veno-Echo.cpp **** 
 6834              		.loc 21 661 93 view .LVU1846
 6835 00f2 9348     		ldr	r0, .L429
 661:Veno-Echo.cpp **** 
 6836              		.loc 21 661 20 view .LVU1847
 6837 00f4 ADF83030 		strh	r3, [sp, #48]	@ movhi
 661:Veno-Echo.cpp **** 
 6838              		.loc 21 661 93 view .LVU1848
 6839 00f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6840              	.LVL368:
 661:Veno-Echo.cpp **** 
 6841              		.loc 21 661 20 view .LVU1849
 6842 00fc 2346     		mov	r3, r4
 6843 00fe 80EE080A 		vdiv.f32	s0, s0, s16
 6844 0102 9748     		ldr	r0, .L429+32
 6845 0104 DDE90B12 		ldrd	r1, r2, [sp, #44]
 6846 0108 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6847              	.LVL369:
 664:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6848              		.loc 21 664 5 is_stmt 1 view .LVU1850
 664:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 245


 6849              		.loc 21 664 22 is_stmt 0 view .LVU1851
 6850 010c 0020     		movs	r0, #0
 6851 010e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6852              	.LVL370:
 6853 0112 0346     		mov	r3, r0	@ movhi
 664:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6854              		.loc 21 664 55 view .LVU1852
 6855 0114 8A48     		ldr	r0, .L429
 664:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6856              		.loc 21 664 22 view .LVU1853
 6857 0116 ADF83430 		strh	r3, [sp, #52]	@ movhi
 664:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6858              		.loc 21 664 55 view .LVU1854
 6859 011a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6860              	.LVL371:
 664:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6861              		.loc 21 664 22 view .LVU1855
 6862 011e 0D99     		ldr	r1, [sp, #52]
 6863 0120 80EE080A 		vdiv.f32	s0, s0, s16
 6864 0124 4246     		mov	r2, r8
 6865 0126 4346     		mov	r3, r8
 6866 0128 8E48     		ldr	r0, .L429+36
 6867 012a 0094     		str	r4, [sp]
 6868 012c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6869              	.LVL372:
 665:Veno-Echo.cpp **** 
 6870              		.loc 21 665 5 is_stmt 1 view .LVU1856
 665:Veno-Echo.cpp **** 
 6871              		.loc 21 665 22 is_stmt 0 view .LVU1857
 6872 0130 4046     		mov	r0, r8
 6873 0132 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6874              	.LVL373:
 6875 0136 0346     		mov	r3, r0	@ movhi
 665:Veno-Echo.cpp **** 
 6876              		.loc 21 665 55 view .LVU1858
 6877 0138 8148     		ldr	r0, .L429
 665:Veno-Echo.cpp **** 
 6878              		.loc 21 665 22 view .LVU1859
 6879 013a ADF83830 		strh	r3, [sp, #56]	@ movhi
 665:Veno-Echo.cpp **** 
 6880              		.loc 21 665 55 view .LVU1860
 6881 013e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6882              	.LVL374:
 665:Veno-Echo.cpp **** 
 6883              		.loc 21 665 22 view .LVU1861
 6884 0142 4246     		mov	r2, r8
 6885 0144 80EE080A 		vdiv.f32	s0, s0, s16
 6886 0148 0E99     		ldr	r1, [sp, #56]
 6887 014a 4346     		mov	r3, r8
 6888 014c 8648     		ldr	r0, .L429+40
 6889 014e 0094     		str	r4, [sp]
 6890              	.LBB1575:
 6891              	.LBB1576:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6892              		.loc 8 54 63 view .LVU1862
 6893 0150 4FF07C54 		mov	r4, #1056964608
 6894              	.LBE1576:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 246


 6895              	.LBE1575:
 665:Veno-Echo.cpp **** 
 6896              		.loc 21 665 22 view .LVU1863
 6897 0154 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6898              	.LVL375:
 668:Veno-Echo.cpp ****     ClockIn.Init(&ClockPin);
 6899              		.loc 21 668 5 is_stmt 1 view .LVU1864
 668:Veno-Echo.cpp ****     ClockIn.Init(&ClockPin);
 6900              		.loc 21 668 14 is_stmt 0 view .LVU1865
 6901 0158 1720     		movs	r0, #23
 6902 015a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6903              	.LVL376:
 6904 015e 0346     		mov	r3, r0	@ movhi
 668:Veno-Echo.cpp ****     ClockIn.Init(&ClockPin);
 6905              		.loc 21 668 48 view .LVU1866
 6906 0160 7748     		ldr	r0, .L429
 668:Veno-Echo.cpp ****     ClockIn.Init(&ClockPin);
 6907              		.loc 21 668 14 view .LVU1867
 6908 0162 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 668:Veno-Echo.cpp ****     ClockIn.Init(&ClockPin);
 6909              		.loc 21 668 48 view .LVU1868
 6910 0166 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6911              	.LVL377:
 668:Veno-Echo.cpp ****     ClockIn.Init(&ClockPin);
 6912              		.loc 21 668 14 view .LVU1869
 6913 016a 0F99     		ldr	r1, [sp, #60]
 6914 016c 80EE080A 		vdiv.f32	s0, s0, s16
 6915 0170 7E48     		ldr	r0, .L429+44
 6916 0172 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6917              	.LVL378:
 669:Veno-Echo.cpp **** 
 6918              		.loc 21 669 5 is_stmt 1 view .LVU1870
 669:Veno-Echo.cpp **** 
 6919              		.loc 21 669 17 is_stmt 0 view .LVU1871
 6920 0176 7E49     		ldr	r1, .L429+48
 6921 0178 7E48     		ldr	r0, .L429+52
 6922 017a FFF7FEFF 		bl	_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
 6923              	.LVL379:
 673:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6924              		.loc 21 673 5 is_stmt 1 view .LVU1872
 673:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6925              		.loc 21 673 20 is_stmt 0 view .LVU1873
 6926 017e 7048     		ldr	r0, .L429
 6927 0180 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6928              	.LVL380:
 6929 0184 3846     		mov	r0, r7
 6930 0186 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6931              	.LVL381:
 674:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6932              		.loc 21 674 5 is_stmt 1 view .LVU1874
 6933              	.LBB1579:
 6934              	.LBI1575:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6935              		.loc 8 54 17 view .LVU1875
 6936              	.LBB1577:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6937              		.loc 8 54 48 view .LVU1876
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 247


 6938              	.LBE1577:
 6939              	.LBE1579:
 679:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6940              		.loc 21 679 20 is_stmt 0 view .LVU1877
 6941 018a 6D48     		ldr	r0, .L429
 6942              	.LBB1580:
 6943              	.LBB1569:
 6944              		.loc 8 58 57 view .LVU1878
 6945 018c C7ED008A 		vstr.32	s17, [r7]
 6946              	.LBE1569:
 6947              	.LBE1580:
 6948              	.LBB1581:
 6949              	.LBB1578:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6950              		.loc 8 54 63 view .LVU1879
 6951 0190 BC60     		str	r4, [r7, #8]	@ float
 6952              	.LVL382:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6953              		.loc 8 54 63 view .LVU1880
 6954              	.LBE1578:
 6955              	.LBE1581:
 675:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6956              		.loc 21 675 5 is_stmt 1 view .LVU1881
 6957              	.LBB1582:
 6958              	.LBI1571:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6959              		.loc 8 54 17 view .LVU1882
 6960              	.LBB1573:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6961              		.loc 8 54 48 view .LVU1883
 6962              	.LBE1573:
 6963              	.LBE1582:
 6964              	.LBB1583:
 6965              	.LBB1584:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6966              		.loc 8 54 63 is_stmt 0 view .LVU1884
 6967 0192 7C61     		str	r4, [r7, #20]	@ float
 6968              	.LBE1584:
 6969              	.LBE1583:
 6970              	.LBB1586:
 6971              	.LBB1574:
 6972 0194 FD60     		str	r5, [r7, #12]	@ float
 6973              	.LVL383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6974              		.loc 8 54 63 view .LVU1885
 6975              	.LBE1574:
 6976              	.LBE1586:
 676:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6977              		.loc 21 676 5 is_stmt 1 view .LVU1886
 6978              	.LBB1587:
 6979              	.LBI1583:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6980              		.loc 8 54 17 view .LVU1887
 6981              	.LBB1585:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6982              		.loc 8 54 48 view .LVU1888
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 248


 6983              		.loc 8 54 48 is_stmt 0 view .LVU1889
 6984              	.LBE1585:
 6985              	.LBE1587:
 677:Veno-Echo.cpp **** 
 6986              		.loc 21 677 5 is_stmt 1 view .LVU1890
 6987              	.LBB1588:
 6988              	.LBI1567:
 6989              		.loc 8 58 17 view .LVU1891
 6990              	.LBB1570:
 6991              		.loc 8 58 52 view .LVU1892
 6992              		.loc 8 58 52 is_stmt 0 view .LVU1893
 6993              	.LBE1570:
 6994              	.LBE1588:
 679:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6995              		.loc 21 679 5 is_stmt 1 view .LVU1894
 679:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6996              		.loc 21 679 20 is_stmt 0 view .LVU1895
 6997 0196 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6998              	.LVL384:
 685:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6999              		.loc 21 685 17 view .LVU1896
 7000 019a 774F     		ldr	r7, .L429+56
 679:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7001              		.loc 21 679 20 view .LVU1897
 7002 019c 3046     		mov	r0, r6
 7003 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7004              	.LVL385:
 680:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 7005              		.loc 21 680 5 is_stmt 1 view .LVU1898
 7006              	.LBB1589:
 7007              	.LBI1589:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7008              		.loc 8 54 17 view .LVU1899
 7009              	.LBB1590:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7010              		.loc 8 54 48 view .LVU1900
 7011              	.LBE1590:
 7012              	.LBE1589:
 685:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7013              		.loc 21 685 17 is_stmt 0 view .LVU1901
 7014 01a2 6748     		ldr	r0, .L429
 7015              	.LBB1592:
 7016              	.LBB1593:
 7017              		.loc 8 58 57 view .LVU1902
 7018 01a4 C6ED008A 		vstr.32	s17, [r6]
 7019              	.LBE1593:
 7020              	.LBE1592:
 7021              	.LBB1595:
 7022              	.LBB1591:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7023              		.loc 8 54 63 view .LVU1903
 7024 01a8 B460     		str	r4, [r6, #8]	@ float
 7025              	.LVL386:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7026              		.loc 8 54 63 view .LVU1904
 7027              	.LBE1591:
 7028              	.LBE1595:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 249


 681:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7029              		.loc 21 681 5 is_stmt 1 view .LVU1905
 7030              	.LBB1596:
 7031              	.LBI1596:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7032              		.loc 8 54 17 view .LVU1906
 7033              	.LBB1597:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7034              		.loc 8 54 48 view .LVU1907
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7035              		.loc 8 54 63 is_stmt 0 view .LVU1908
 7036 01aa F560     		str	r5, [r6, #12]	@ float
 7037              	.LVL387:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7038              		.loc 8 54 63 view .LVU1909
 7039              	.LBE1597:
 7040              	.LBE1596:
 682:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 7041              		.loc 21 682 5 is_stmt 1 view .LVU1910
 7042              	.LBB1598:
 7043              	.LBI1598:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7044              		.loc 8 54 17 view .LVU1911
 7045              	.LBB1599:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7046              		.loc 8 54 48 view .LVU1912
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7047              		.loc 8 54 63 is_stmt 0 view .LVU1913
 7048 01ac 7461     		str	r4, [r6, #20]	@ float
 7049              	.LVL388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7050              		.loc 8 54 63 view .LVU1914
 7051              	.LBE1599:
 7052              	.LBE1598:
 683:Veno-Echo.cpp **** 
 7053              		.loc 21 683 5 is_stmt 1 view .LVU1915
 7054              	.LBB1600:
 7055              	.LBI1592:
 7056              		.loc 8 58 17 view .LVU1916
 7057              	.LBB1594:
 7058              		.loc 8 58 52 view .LVU1917
 7059              		.loc 8 58 52 is_stmt 0 view .LVU1918
 7060              	.LBE1594:
 7061              	.LBE1600:
 685:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7062              		.loc 21 685 5 is_stmt 1 view .LVU1919
 685:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7063              		.loc 21 685 17 is_stmt 0 view .LVU1920
 7064 01ae FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7065              	.LVL389:
 691:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7066              		.loc 21 691 17 view .LVU1921
 7067 01b2 724E     		ldr	r6, .L429+60
 685:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7068              		.loc 21 685 17 view .LVU1922
 7069 01b4 3846     		mov	r0, r7
 7070 01b6 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 250


 7071              	.LVL390:
 686:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7072              		.loc 21 686 5 is_stmt 1 view .LVU1923
 7073              	.LBB1601:
 7074              	.LBI1601:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7075              		.loc 8 54 17 view .LVU1924
 7076              	.LBB1602:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7077              		.loc 8 54 48 view .LVU1925
 7078              	.LBE1602:
 7079              	.LBE1601:
 691:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7080              		.loc 21 691 17 is_stmt 0 view .LVU1926
 7081 01ba 6148     		ldr	r0, .L429
 7082              	.LBB1604:
 7083              	.LBB1605:
 7084              		.loc 8 58 57 view .LVU1927
 7085 01bc C7ED008A 		vstr.32	s17, [r7]
 7086              	.LBE1605:
 7087              	.LBE1604:
 7088              	.LBB1607:
 7089              	.LBB1603:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7090              		.loc 8 54 63 view .LVU1928
 7091 01c0 BD60     		str	r5, [r7, #8]	@ float
 7092              	.LVL391:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7093              		.loc 8 54 63 view .LVU1929
 7094              	.LBE1603:
 7095              	.LBE1607:
 687:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7096              		.loc 21 687 5 is_stmt 1 view .LVU1930
 7097              	.LBB1608:
 7098              	.LBI1608:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7099              		.loc 8 54 17 view .LVU1931
 7100              	.LBB1609:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7101              		.loc 8 54 48 view .LVU1932
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7102              		.loc 8 54 63 is_stmt 0 view .LVU1933
 7103 01c2 FD60     		str	r5, [r7, #12]	@ float
 7104              	.LVL392:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7105              		.loc 8 54 63 view .LVU1934
 7106              	.LBE1609:
 7107              	.LBE1608:
 688:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7108              		.loc 21 688 5 is_stmt 1 view .LVU1935
 7109              	.LBB1610:
 7110              	.LBI1610:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7111              		.loc 8 54 17 view .LVU1936
 7112              	.LBB1611:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7113              		.loc 8 54 48 view .LVU1937
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 251


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7114              		.loc 8 54 63 is_stmt 0 view .LVU1938
 7115 01c4 7D61     		str	r5, [r7, #20]	@ float
 7116              	.LVL393:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7117              		.loc 8 54 63 view .LVU1939
 7118              	.LBE1611:
 7119              	.LBE1610:
 689:Veno-Echo.cpp **** 
 7120              		.loc 21 689 5 is_stmt 1 view .LVU1940
 7121              	.LBB1612:
 7122              	.LBI1604:
 7123              		.loc 8 58 17 view .LVU1941
 7124              	.LBB1606:
 7125              		.loc 8 58 52 view .LVU1942
 7126              		.loc 8 58 52 is_stmt 0 view .LVU1943
 7127              	.LBE1606:
 7128              	.LBE1612:
 691:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7129              		.loc 21 691 5 is_stmt 1 view .LVU1944
 691:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7130              		.loc 21 691 17 is_stmt 0 view .LVU1945
 7131 01c6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7132              	.LVL394:
 7133 01ca 3046     		mov	r0, r6
 710:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7134              		.loc 21 710 17 view .LVU1946
 7135 01cc 9FED6C8A 		vldr.32	s16, .L429+64
 691:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7136              		.loc 21 691 17 view .LVU1947
 7137 01d0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7138              	.LVL395:
 692:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7139              		.loc 21 692 5 is_stmt 1 view .LVU1948
 7140              	.LBB1613:
 7141              	.LBI1613:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7142              		.loc 8 54 17 view .LVU1949
 7143              	.LBB1614:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7144              		.loc 8 54 48 view .LVU1950
 7145              	.LBE1614:
 7146              	.LBE1613:
 7147              	.LBB1616:
 7148              	.LBB1617:
 7149              	.LBB1618:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7150              		.loc 11 45 16 is_stmt 0 view .LVU1951
 7151 01d4 6B49     		ldr	r1, .L429+68
 7152              	.LBE1618:
 7153              	.LBE1617:
 7154              	.LBE1616:
 7155              	.LBB1623:
 7156              	.LBB1624:
 7157              	.LBB1625:
 7158 01d6 6C4A     		ldr	r2, .L429+72
 7159              	.LBE1625:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 252


 7160              	.LBE1624:
 7161              	.LBE1623:
 7162              	.LBB1630:
 7163              	.LBB1631:
 7164              	.LBB1632:
 7165 01d8 6C4B     		ldr	r3, .L429+76
 7166              	.LBE1632:
 7167              	.LBE1631:
 7168              	.LBE1630:
 7169              	.LBB1637:
 7170              	.LBB1621:
 7171              	.LBB1619:
 7172 01da 0C60     		str	r4, [r1]	@ float
 7173              	.LBE1619:
 7174              	.LBE1621:
 7175              	.LBE1637:
 7176              	.LBB1638:
 7177              	.LBB1628:
 7178              	.LBB1626:
 7179 01dc 1460     		str	r4, [r2]	@ float
 7180              	.LBE1626:
 7181              	.LBE1628:
 7182              	.LBE1638:
 7183              	.LBB1639:
 7184              	.LBB1635:
 7185              	.LBB1633:
 7186 01de 1C60     		str	r4, [r3]	@ float
 7187              	.LBE1633:
 7188              	.LBE1635:
 7189              	.LBE1639:
 7190              	.LBB1640:
 7191              	.LBB1565:
 7192              		.loc 11 64 50 view .LVU1952
 7193 01e0 81F80480 		strb	r8, [r1, #4]
 7194              	.LBE1565:
 7195              	.LBE1640:
 7196              	.LBB1641:
 7197              	.LBB1642:
 7198 01e4 82F80480 		strb	r8, [r2, #4]
 7199              	.LBE1642:
 7200              	.LBE1641:
 7201              	.LBB1644:
 7202              	.LBB1645:
 7203 01e8 83F80480 		strb	r8, [r3, #4]
 7204              	.LBE1645:
 7205              	.LBE1644:
 706:Veno-Echo.cpp **** 
 7206              		.loc 21 706 15 view .LVU1953
 7207 01ec 5448     		ldr	r0, .L429
 7208              	.LBB1647:
 7209              	.LBB1648:
 7210              		.loc 8 58 57 view .LVU1954
 7211 01ee C6ED008A 		vstr.32	s17, [r6]
 7212              	.LBE1648:
 7213              	.LBE1647:
 7214              	.LBB1650:
 7215              	.LBB1615:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 253


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7216              		.loc 8 54 63 view .LVU1955
 7217 01f2 B560     		str	r5, [r6, #8]	@ float
 7218              	.LVL396:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7219              		.loc 8 54 63 view .LVU1956
 7220              	.LBE1615:
 7221              	.LBE1650:
 693:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7222              		.loc 21 693 5 is_stmt 1 view .LVU1957
 7223              	.LBB1651:
 7224              	.LBI1651:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7225              		.loc 8 54 17 view .LVU1958
 7226              	.LBB1652:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7227              		.loc 8 54 48 view .LVU1959
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7228              		.loc 8 54 63 is_stmt 0 view .LVU1960
 7229 01f4 F560     		str	r5, [r6, #12]	@ float
 7230              	.LVL397:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7231              		.loc 8 54 63 view .LVU1961
 7232              	.LBE1652:
 7233              	.LBE1651:
 694:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7234              		.loc 21 694 5 is_stmt 1 view .LVU1962
 7235              	.LBB1653:
 7236              	.LBI1653:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7237              		.loc 8 54 17 view .LVU1963
 7238              	.LBB1654:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7239              		.loc 8 54 48 view .LVU1964
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7240              		.loc 8 54 63 is_stmt 0 view .LVU1965
 7241 01f6 7561     		str	r5, [r6, #20]	@ float
 7242              	.LVL398:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7243              		.loc 8 54 63 view .LVU1966
 7244              	.LBE1654:
 7245              	.LBE1653:
 695:Veno-Echo.cpp **** 
 7246              		.loc 21 695 5 is_stmt 1 view .LVU1967
 7247              	.LBB1655:
 7248              	.LBI1647:
 7249              		.loc 8 58 17 view .LVU1968
 7250              	.LBB1649:
 7251              		.loc 8 58 52 view .LVU1969
 7252              		.loc 8 58 52 is_stmt 0 view .LVU1970
 7253              	.LBE1649:
 7254              	.LBE1655:
 698:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7255              		.loc 21 698 5 is_stmt 1 view .LVU1971
 7256              	.LBB1656:
 7257              	.LBI1616:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 254


 7258              		.loc 11 51 17 view .LVU1972
 7259              	.LBE1656:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7260              		.loc 11 51 26 view .LVU1973
 7261              	.LBB1657:
 7262              	.LBB1622:
 7263              	.LBI1617:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7264              		.loc 11 43 17 view .LVU1974
 7265              	.LBB1620:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7266              		.loc 11 45 9 view .LVU1975
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7267              		.loc 11 46 9 view .LVU1976
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7268              		.loc 11 46 9 is_stmt 0 view .LVU1977
 7269              	.LBE1620:
 7270              	.LBE1622:
 7271              	.LBE1657:
 699:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7272              		.loc 21 699 5 is_stmt 1 view .LVU1978
 7273              	.LBB1658:
 7274              	.LBI1563:
 7275              		.loc 11 64 17 view .LVU1979
 7276              	.LBB1566:
 7277              		.loc 11 64 43 view .LVU1980
 7278              		.loc 11 64 43 is_stmt 0 view .LVU1981
 7279              	.LBE1566:
 7280              	.LBE1658:
 700:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7281              		.loc 21 700 5 is_stmt 1 view .LVU1982
 7282              	.LBB1659:
 7283              	.LBI1623:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7284              		.loc 11 51 17 view .LVU1983
 7285              	.LBE1659:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7286              		.loc 11 51 26 view .LVU1984
 7287              	.LBB1660:
 7288              	.LBB1629:
 7289              	.LBI1624:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7290              		.loc 11 43 17 view .LVU1985
 7291              	.LBB1627:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7292              		.loc 11 45 9 view .LVU1986
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7293              		.loc 11 46 9 view .LVU1987
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7294              		.loc 11 46 9 is_stmt 0 view .LVU1988
 7295              	.LBE1627:
 7296              	.LBE1629:
 7297              	.LBE1660:
 701:Veno-Echo.cpp **** 
 7298              		.loc 21 701 5 is_stmt 1 view .LVU1989
 7299              	.LBB1661:
 7300              	.LBI1641:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 255


 7301              		.loc 11 64 17 view .LVU1990
 7302              	.LBB1643:
 7303              		.loc 11 64 43 view .LVU1991
 7304              		.loc 11 64 43 is_stmt 0 view .LVU1992
 7305              	.LBE1643:
 7306              	.LBE1661:
 703:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7307              		.loc 21 703 5 is_stmt 1 view .LVU1993
 7308              	.LBB1662:
 7309              	.LBI1630:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7310              		.loc 11 51 17 view .LVU1994
 7311              	.LBE1662:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7312              		.loc 11 51 26 view .LVU1995
 7313              	.LBB1663:
 7314              	.LBB1636:
 7315              	.LBI1631:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7316              		.loc 11 43 17 view .LVU1996
 7317              	.LBB1634:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7318              		.loc 11 45 9 view .LVU1997
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7319              		.loc 11 46 9 view .LVU1998
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7320              		.loc 11 46 9 is_stmt 0 view .LVU1999
 7321              	.LBE1634:
 7322              	.LBE1636:
 7323              	.LBE1663:
 704:Veno-Echo.cpp **** 
 7324              		.loc 21 704 5 is_stmt 1 view .LVU2000
 7325              	.LBB1664:
 7326              	.LBI1644:
 7327              		.loc 11 64 17 view .LVU2001
 7328              	.LBB1646:
 7329              		.loc 11 64 43 view .LVU2002
 7330              		.loc 11 64 43 is_stmt 0 view .LVU2003
 7331              	.LBE1646:
 7332              	.LBE1664:
 706:Veno-Echo.cpp **** 
 7333              		.loc 21 706 5 is_stmt 1 view .LVU2004
 706:Veno-Echo.cpp **** 
 7334              		.loc 21 706 15 is_stmt 0 view .LVU2005
 7335 01f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7336              	.LVL399:
 7337 01fc FFF7FEFF 		bl	_Z10InitDelaysf
 7338              	.LVL400:
 709:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7339              		.loc 21 709 5 is_stmt 1 view .LVU2006
 709:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7340              		.loc 21 709 15 is_stmt 0 view .LVU2007
 7341 0200 4F48     		ldr	r0, .L429
 7342 0202 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7343              	.LVL401:
 7344 0206 6248     		ldr	r0, .L429+80
 7345 0208 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 256


 7346              	.LVL402:
 710:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7347              		.loc 21 710 5 is_stmt 1 view .LVU2008
 710:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7348              		.loc 21 710 17 is_stmt 0 view .LVU2009
 7349 020c B0EE480A 		vmov.f32	s0, s16
 7350 0210 5F48     		ldr	r0, .L429+80
 7351 0212 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7352              	.LVL403:
 711:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7353              		.loc 21 711 5 is_stmt 1 view .LVU2010
 711:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7354              		.loc 21 711 18 is_stmt 0 view .LVU2011
 7355 0216 9FED5F0A 		vldr.32	s0, .L429+84
 7356 021a 5D48     		ldr	r0, .L429+80
 7357 021c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7358              	.LVL404:
 712:Veno-Echo.cpp **** 
 7359              		.loc 21 712 5 is_stmt 1 view .LVU2012
 712:Veno-Echo.cpp **** 
 7360              		.loc 21 712 19 is_stmt 0 view .LVU2013
 7361 0220 9FED5D0A 		vldr.32	s0, .L429+88
 7362 0224 5A48     		ldr	r0, .L429+80
 7363 0226 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7364              	.LVL405:
 714:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7365              		.loc 21 714 5 is_stmt 1 view .LVU2014
 714:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7366              		.loc 21 714 15 is_stmt 0 view .LVU2015
 7367 022a 4548     		ldr	r0, .L429
 7368 022c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7369              	.LVL406:
 7370 0230 5A48     		ldr	r0, .L429+92
 7371 0232 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7372              	.LVL407:
 715:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7373              		.loc 21 715 5 is_stmt 1 view .LVU2016
 715:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7374              		.loc 21 715 17 is_stmt 0 view .LVU2017
 7375 0236 B0EE480A 		vmov.f32	s0, s16
 7376 023a 5848     		ldr	r0, .L429+92
 7377 023c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7378              	.LVL408:
 716:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7379              		.loc 21 716 5 is_stmt 1 view .LVU2018
 716:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7380              		.loc 21 716 18 is_stmt 0 view .LVU2019
 7381 0240 9FED540A 		vldr.32	s0, .L429+84
 7382 0244 5548     		ldr	r0, .L429+92
 7383 0246 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7384              	.LVL409:
 717:Veno-Echo.cpp **** 
 7385              		.loc 21 717 5 is_stmt 1 view .LVU2020
 717:Veno-Echo.cpp **** 
 7386              		.loc 21 717 19 is_stmt 0 view .LVU2021
 7387 024a 9FED530A 		vldr.32	s0, .L429+88
 7388 024e 5348     		ldr	r0, .L429+92
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 257


 7389 0250 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7390              	.LVL410:
 720:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7391              		.loc 21 720 5 is_stmt 1 view .LVU2022
 720:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7392              		.loc 21 720 15 is_stmt 0 view .LVU2023
 7393 0254 3A48     		ldr	r0, .L429
 7394 0256 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7395              	.LVL411:
 7396 025a 5148     		ldr	r0, .L429+96
 7397 025c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7398              	.LVL412:
 721:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7399              		.loc 21 721 5 is_stmt 1 view .LVU2024
 721:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7400              		.loc 21 721 17 is_stmt 0 view .LVU2025
 7401 0260 B0EE480A 		vmov.f32	s0, s16
 7402 0264 4E48     		ldr	r0, .L429+96
 7403 0266 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7404              	.LVL413:
 722:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7405              		.loc 21 722 5 is_stmt 1 view .LVU2026
 722:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7406              		.loc 21 722 18 is_stmt 0 view .LVU2027
 7407 026a 9FED530A 		vldr.32	s0, .L429+120
 7408 026e 4C48     		ldr	r0, .L429+96
 7409 0270 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7410              	.LVL414:
 723:Veno-Echo.cpp **** 
 7411              		.loc 21 723 5 is_stmt 1 view .LVU2028
 723:Veno-Echo.cpp **** 
 7412              		.loc 21 723 19 is_stmt 0 view .LVU2029
 7413 0274 9FED480A 		vldr.32	s0, .L429+88
 7414 0278 4948     		ldr	r0, .L429+96
 7415 027a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7416              	.LVL415:
 725:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7417              		.loc 21 725 5 is_stmt 1 view .LVU2030
 725:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7418              		.loc 21 725 15 is_stmt 0 view .LVU2031
 7419 027e 3048     		ldr	r0, .L429
 7420 0280 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7421              	.LVL416:
 7422 0284 4748     		ldr	r0, .L429+100
 7423 0286 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7424              	.LVL417:
 726:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7425              		.loc 21 726 5 is_stmt 1 view .LVU2032
 726:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7426              		.loc 21 726 17 is_stmt 0 view .LVU2033
 7427 028a B0EE480A 		vmov.f32	s0, s16
 7428 028e 4548     		ldr	r0, .L429+100
 7429 0290 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7430              	.LVL418:
 727:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7431              		.loc 21 727 5 is_stmt 1 view .LVU2034
 727:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 258


 7432              		.loc 21 727 18 is_stmt 0 view .LVU2035
 7433 0294 9FED480A 		vldr.32	s0, .L429+120
 7434 0298 4248     		ldr	r0, .L429+100
 7435 029a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7436              	.LVL419:
 728:Veno-Echo.cpp **** 
 7437              		.loc 21 728 5 is_stmt 1 view .LVU2036
 728:Veno-Echo.cpp **** 
 7438              		.loc 21 728 19 is_stmt 0 view .LVU2037
 7439 029e 9FED3E0A 		vldr.32	s0, .L429+88
 7440 02a2 4048     		ldr	r0, .L429+100
 7441 02a4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7442              	.LVL420:
 731:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7443              		.loc 21 731 5 is_stmt 1 view .LVU2038
 731:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7444              		.loc 21 731 20 is_stmt 0 view .LVU2039
 7445 02a8 2548     		ldr	r0, .L429
 7446 02aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7447              	.LVL421:
 7448 02ae 3E48     		ldr	r0, .L429+104
 7449 02b0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7450              	.LVL422:
 732:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7451              		.loc 21 732 5 is_stmt 1 view .LVU2040
 732:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7452              		.loc 21 732 22 is_stmt 0 view .LVU2041
 7453 02b4 B0EE480A 		vmov.f32	s0, s16
 7454 02b8 3B48     		ldr	r0, .L429+104
 7455 02ba FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7456              	.LVL423:
 733:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7457              		.loc 21 733 5 is_stmt 1 view .LVU2042
 733:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7458              		.loc 21 733 23 is_stmt 0 view .LVU2043
 7459 02be 9FED350A 		vldr.32	s0, .L429+84
 7460 02c2 3948     		ldr	r0, .L429+104
 7461 02c4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7462              	.LVL424:
 734:Veno-Echo.cpp **** 
 7463              		.loc 21 734 5 is_stmt 1 view .LVU2044
 734:Veno-Echo.cpp **** 
 7464              		.loc 21 734 24 is_stmt 0 view .LVU2045
 7465 02c8 9FED330A 		vldr.32	s0, .L429+88
 7466 02cc 3648     		ldr	r0, .L429+104
 7467 02ce FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7468              	.LVL425:
 736:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7469              		.loc 21 736 5 is_stmt 1 view .LVU2046
 736:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7470              		.loc 21 736 20 is_stmt 0 view .LVU2047
 7471 02d2 1B48     		ldr	r0, .L429
 7472 02d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7473              	.LVL426:
 7474 02d8 3448     		ldr	r0, .L429+108
 7475 02da FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7476              	.LVL427:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 259


 737:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7477              		.loc 21 737 5 is_stmt 1 view .LVU2048
 737:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7478              		.loc 21 737 22 is_stmt 0 view .LVU2049
 7479 02de B0EE480A 		vmov.f32	s0, s16
 7480 02e2 3248     		ldr	r0, .L429+108
 7481 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7482              	.LVL428:
 738:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7483              		.loc 21 738 5 is_stmt 1 view .LVU2050
 738:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7484              		.loc 21 738 23 is_stmt 0 view .LVU2051
 7485 02e8 9FED2A0A 		vldr.32	s0, .L429+84
 7486 02ec 2F48     		ldr	r0, .L429+108
 7487 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7488              	.LVL429:
 739:Veno-Echo.cpp **** 
 7489              		.loc 21 739 5 is_stmt 1 view .LVU2052
 739:Veno-Echo.cpp **** 
 7490              		.loc 21 739 24 is_stmt 0 view .LVU2053
 7491 02f2 9FED290A 		vldr.32	s0, .L429+88
 7492 02f6 2D48     		ldr	r0, .L429+108
 7493 02f8 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7494              	.LVL430:
 742:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7495              		.loc 21 742 5 is_stmt 1 view .LVU2054
 742:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7496              		.loc 21 742 20 is_stmt 0 view .LVU2055
 7497 02fc 1048     		ldr	r0, .L429
 7498 02fe FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7499              	.LVL431:
 7500 0302 2B48     		ldr	r0, .L429+112
 7501 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7502              	.LVL432:
 743:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7503              		.loc 21 743 5 is_stmt 1 view .LVU2056
 743:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7504              		.loc 21 743 22 is_stmt 0 view .LVU2057
 7505 0308 B0EE480A 		vmov.f32	s0, s16
 7506 030c 2848     		ldr	r0, .L429+112
 7507 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7508              	.LVL433:
 744:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7509              		.loc 21 744 5 is_stmt 1 view .LVU2058
 744:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7510              		.loc 21 744 23 is_stmt 0 view .LVU2059
 7511 0312 9FED290A 		vldr.32	s0, .L429+120
 7512 0316 2648     		ldr	r0, .L429+112
 7513 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7514              	.LVL434:
 745:Veno-Echo.cpp **** 
 7515              		.loc 21 745 5 is_stmt 1 view .LVU2060
 745:Veno-Echo.cpp **** 
 7516              		.loc 21 745 24 is_stmt 0 view .LVU2061
 7517 031c 9FED1E0A 		vldr.32	s0, .L429+88
 7518 0320 2348     		ldr	r0, .L429+112
 7519 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 260


 7520              	.LVL435:
 747:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7521              		.loc 21 747 5 is_stmt 1 view .LVU2062
 747:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7522              		.loc 21 747 20 is_stmt 0 view .LVU2063
 7523 0326 0648     		ldr	r0, .L429
 7524 0328 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7525              	.LVL436:
 7526 032c 2148     		ldr	r0, .L429+116
 7527 032e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7528              	.LVL437:
 748:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7529              		.loc 21 748 5 is_stmt 1 view .LVU2064
 748:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7530              		.loc 21 748 22 is_stmt 0 view .LVU2065
 7531 0332 B0EE480A 		vmov.f32	s0, s16
 7532 0336 1F48     		ldr	r0, .L429+116
 7533 0338 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7534              	.LVL438:
 7535 033c 3EE0     		b	.L430
 7536              	.L431:
 7537 033e 00BF     		.align	2
 7538              	.L429:
 7539 0340 00000000 		.word	.LANCHOR4
 7540 0344 00000000 		.word	.LANCHOR94
 7541 0348 00000000 		.word	.LANCHOR101
 7542 034c 0AD7233C 		.word	1008981770
 7543 0350 00000000 		.word	.LANCHOR102
 7544 0354 00000000 		.word	.LANCHOR95
 7545 0358 00000000 		.word	.LANCHOR92
 7546 035c 00000000 		.word	.LANCHOR93
 7547 0360 00000000 		.word	.LANCHOR96
 7548 0364 00000000 		.word	.LANCHOR97
 7549 0368 00000000 		.word	.LANCHOR98
 7550 036c 00000000 		.word	.LANCHOR99
 7551 0370 00000000 		.word	.LANCHOR100
 7552 0374 00000000 		.word	.LANCHOR88
 7553 0378 00000000 		.word	.LANCHOR103
 7554 037c 00000000 		.word	.LANCHOR104
 7555 0380 00000000 		.word	0
 7556 0384 00000000 		.word	.LANCHOR105
 7557 0388 00000000 		.word	.LANCHOR106
 7558 038c 00000000 		.word	.LANCHOR65
 7559 0390 00000000 		.word	.LANCHOR47
 7560 0394 00803B46 		.word	1178304512
 7561 0398 3333333F 		.word	1060320051
 7562 039c 00000000 		.word	.LANCHOR48
 7563 03a0 00000000 		.word	.LANCHOR35
 7564 03a4 00000000 		.word	.LANCHOR36
 7565 03a8 00000000 		.word	.LANCHOR49
 7566 03ac 00000000 		.word	.LANCHOR50
 7567 03b0 00000000 		.word	.LANCHOR37
 7568 03b4 00000000 		.word	.LANCHOR38
 7569 03b8 00004843 		.word	1128792064
 7570              	.L430:
 749:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7571              		.loc 21 749 5 is_stmt 1 view .LVU2066
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 261


 749:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7572              		.loc 21 749 23 is_stmt 0 view .LVU2067
 7573 03bc 1FED020A 		vldr.32	s0, .L429+120
 7574 03c0 9948     		ldr	r0, .L432
 7575 03c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7576              	.LVL439:
 750:Veno-Echo.cpp **** 
 7577              		.loc 21 750 5 is_stmt 1 view .LVU2068
 750:Veno-Echo.cpp **** 
 7578              		.loc 21 750 24 is_stmt 0 view .LVU2069
 7579 03c6 9FED990A 		vldr.32	s0, .L432+4
 7580 03ca 9748     		ldr	r0, .L432
 7581 03cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7582              	.LVL440:
 752:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7583              		.loc 21 752 5 is_stmt 1 view .LVU2070
 752:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7584              		.loc 21 752 21 is_stmt 0 view .LVU2071
 7585 03d0 9748     		ldr	r0, .L432+8
 7586 03d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7587              	.LVL441:
 7588 03d6 9748     		ldr	r0, .L432+12
 7589 03d8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7590              	.LVL442:
 753:Veno-Echo.cpp **** 
 7591              		.loc 21 753 5 is_stmt 1 view .LVU2072
 753:Veno-Echo.cpp **** 
 7592              		.loc 21 753 21 is_stmt 0 view .LVU2073
 7593 03dc 9448     		ldr	r0, .L432+8
 7594 03de FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7595              	.LVL443:
 7596 03e2 9548     		ldr	r0, .L432+16
 7597 03e4 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7598              	.LVL444:
 756:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7599              		.loc 21 756 5 is_stmt 1 view .LVU2074
 756:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7600              		.loc 21 756 13 is_stmt 0 view .LVU2075
 7601 03e8 9148     		ldr	r0, .L432+8
 7602 03ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7603              	.LVL445:
 7604 03ee F0EE407A 		vmov.f32	s15, s0
 7605              	.LVL446:
 7606              	.LBB1665:
 7607              	.LBI1665:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7608              		.loc 9 42 10 is_stmt 1 view .LVU2076
 7609              	.LBB1666:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7610              		.loc 9 44 9 view .LVU2077
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7611              		.loc 9 44 20 is_stmt 0 view .LVU2078
 7612 03f2 924F     		ldr	r7, .L432+20
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7613              		.loc 9 46 20 view .LVU2079
 7614 03f4 9FED920A 		vldr.32	s0, .L432+24
 7615              	.LVL447:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 262


  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7616              		.loc 9 45 27 view .LVU2080
 7617 03f8 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7618              		.loc 9 49 34 view .LVU2081
 7619 03fc 3846     		mov	r0, r7
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7620              		.loc 9 47 20 view .LVU2082
 7621 03fe 7C60     		str	r4, [r7, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7622              		.loc 9 44 20 view .LVU2083
 7623 0400 C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7624              		.loc 9 45 9 is_stmt 1 view .LVU2084
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7625              		.loc 9 48 20 is_stmt 0 view .LVU2085
 7626 0404 87ED058A 		vstr.32	s16, [r7, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7627              		.loc 9 46 20 view .LVU2086
 7628 0408 87ED020A 		vstr.32	s0, [r7, #8]
 7629 040c 8D4C     		ldr	r4, .L432+28
 7630 040e 8E4D     		ldr	r5, .L432+32
 7631 0410 8E4E     		ldr	r6, .L432+36
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7632              		.loc 9 45 20 view .LVU2087
 7633 0412 87ED047A 		vstr.32	s14, [r7, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7634              		.loc 9 46 9 is_stmt 1 view .LVU2088
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7635              		.loc 9 47 9 view .LVU2089
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7636              		.loc 9 48 9 view .LVU2090
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7637              		.loc 9 49 9 view .LVU2091
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7638              		.loc 9 49 34 is_stmt 0 view .LVU2092
 7639 0416 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7640              	.LVL448:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7641              		.loc 9 52 20 view .LVU2093
 7642 041a 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7643              		.loc 9 49 34 view .LVU2094
 7644 041e F0EE407A 		vmov.f32	s15, s0
 7645              	.LBE1666:
 7646              	.LBE1665:
 7647              	.LBB1669:
 7648              	.LBB1670:
 7649              		.loc 9 61 34 view .LVU2095
 7650 0422 3846     		mov	r0, r7
 7651              	.LBE1670:
 7652              	.LBE1669:
 7653              	.LBB1674:
 7654              	.LBB1675:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 263


  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7655              		.loc 9 72 19 view .LVU2096
 7656 0424 87F80080 		strb	r8, [r7]
 7657              	.LBE1675:
 7658              	.LBE1674:
 7659              	.LBB1677:
 7660              	.LBB1667:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7661              		.loc 9 52 20 view .LVU2097
 7662 0428 BB84     		strh	r3, [r7, #36]	@ movhi
 7663              	.LBE1667:
 7664              	.LBE1677:
 7665              	.LBB1678:
 7666              	.LBB1671:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7667              		.loc 9 61 34 view .LVU2098
 7668 042a B0EE680A 		vmov.f32	s0, s17
 7669              	.LBE1671:
 7670              	.LBE1678:
 7671              	.LBB1679:
 7672              	.LBB1668:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7673              		.loc 9 49 20 view .LVU2099
 7674 042e C7ED067A 		vstr.32	s15, [r7, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7675              		.loc 9 50 9 is_stmt 1 view .LVU2100
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7676              		.loc 9 51 9 view .LVU2101
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7677              		.loc 9 52 9 view .LVU2102
 7678              	.LVL449:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7679              		.loc 9 52 9 is_stmt 0 view .LVU2103
 7680              	.LBE1668:
 7681              	.LBE1679:
 757:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7682              		.loc 21 757 5 is_stmt 1 view .LVU2104
 7683              	.LBB1680:
 7684              	.LBI1674:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7685              		.loc 9 70 17 view .LVU2105
 7686              	.LBB1676:
 7687              		.loc 9 72 9 view .LVU2106
 7688              		.loc 9 72 9 is_stmt 0 view .LVU2107
 7689              	.LBE1676:
 7690              	.LBE1680:
 758:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7691              		.loc 21 758 5 is_stmt 1 view .LVU2108
 7692              	.LBB1681:
 7693              	.LBI1669:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 264


  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7694              		.loc 9 58 17 view .LVU2109
 7695              	.LBB1672:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7696              		.loc 9 60 9 view .LVU2110
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7697              		.loc 9 61 9 view .LVU2111
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7698              		.loc 9 60 20 is_stmt 0 view .LVU2112
 7699 0432 C7ED028A 		vstr.32	s17, [r7, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7700              		.loc 9 61 34 view .LVU2113
 7701 0436 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7702              	.LVL450:
 7703 043a F0EE407A 		vmov.f32	s15, s0
 7704              	.LBE1672:
 7705              	.LBE1681:
 761:Veno-Echo.cpp **** 
 7706              		.loc 21 761 19 view .LVU2114
 7707 043e 844A     		ldr	r2, .L432+40
 7708 0440 44F62061 		movw	r1, #20000
 7709 0444 B7EE040A 		vmov.f32	s0, #1.25e+0
 7710 0448 8248     		ldr	r0, .L432+44
 7711              	.LBB1682:
 7712              	.LBB1683:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7713              		.loc 9 67 46 view .LVU2115
 7714 044a C7ED018A 		vstr.32	s17, [r7, #4]
 7715              	.LBE1683:
 7716              	.LBE1682:
 7717              	.LBB1685:
 7718              	.LBB1673:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7719              		.loc 9 61 20 view .LVU2116
 7720 044e C7ED067A 		vstr.32	s15, [r7, #24]
 7721              	.LVL451:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7722              		.loc 9 61 20 view .LVU2117
 7723              	.LBE1673:
 7724              	.LBE1685:
 759:Veno-Echo.cpp **** 
 7725              		.loc 21 759 5 is_stmt 1 view .LVU2118
 7726              	.LBB1686:
 7727              	.LBI1682:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7728              		.loc 9 67 17 view .LVU2119
 7729              	.LBB1684:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7730              		.loc 9 67 41 view .LVU2120
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7731              		.loc 9 67 41 is_stmt 0 view .LVU2121
 7732              	.LBE1684:
 7733              	.LBE1686:
 761:Veno-Echo.cpp **** 
 7734              		.loc 21 761 5 is_stmt 1 view .LVU2122
 761:Veno-Echo.cpp **** 
 7735              		.loc 21 761 19 is_stmt 0 view .LVU2123
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 265


 7736 0452 FFF7FEFF 		bl	_ZN8Taptempo4initEmmf
 7737              	.LVL452:
 765:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7738              		.loc 21 765 5 is_stmt 1 view .LVU2124
 765:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7739              		.loc 21 765 23 is_stmt 0 view .LVU2125
 7740 0456 1820     		movs	r0, #24
 776:Veno-Echo.cpp **** 
 7741              		.loc 21 776 17 view .LVU2126
 7742 0458 1CAF     		add	r7, sp, #112
 765:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7743              		.loc 21 765 23 view .LVU2127
 7744 045a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7745              	.LVL453:
 7746 045e 0346     		mov	r3, r0	@ movhi
 7747 0460 7348     		ldr	r0, .L432+8
 7748 0462 ADF84030 		strh	r3, [sp, #64]	@ movhi
 7749 0466 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7750              	.LVL454:
 7751 046a 1099     		ldr	r1, [sp, #64]
 7752 046c 7A48     		ldr	r0, .L432+48
 7753 046e FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7754              	.LVL455:
 766:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7755              		.loc 21 766 5 is_stmt 1 view .LVU2128
 766:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7756              		.loc 21 766 27 is_stmt 0 view .LVU2129
 7757 0472 7848     		ldr	r0, .L432+44
 7758 0474 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7759              	.LVL456:
 7760 0478 7748     		ldr	r0, .L432+48
 7761 047a FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7762              	.LVL457:
 767:Veno-Echo.cpp **** 
 7763              		.loc 21 767 5 is_stmt 1 view .LVU2130
 767:Veno-Echo.cpp **** 
 7764              		.loc 21 767 29 is_stmt 0 view .LVU2131
 7765 047e 7648     		ldr	r0, .L432+48
 7766 0480 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7767              	.LVL458:
 771:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7768              		.loc 21 771 5 is_stmt 1 view .LVU2132
 771:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7769              		.loc 21 771 41 is_stmt 0 view .LVU2133
 7770 0484 1CA8     		add	r0, sp, #112
 7771 0486 FFF7FEFF 		bl	_Z12LoadSettingsv
 7772              	.LVL459:
 775:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7773              		.loc 21 775 5 is_stmt 1 view .LVU2134
 775:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7774              		.loc 21 775 18 is_stmt 0 view .LVU2135
 7775 048a 1CA8     		add	r0, sp, #112
 7776 048c FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7777              	.LVL460:
 776:Veno-Echo.cpp **** 
 7778              		.loc 21 776 5 is_stmt 1 view .LVU2136
 776:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 266


 7779              		.loc 21 776 17 is_stmt 0 view .LVU2137
 7780 0490 DFF8D0C1 		ldr	ip, .L432+60
 7781 0494 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7782 0496 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7783 049a 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7784 049c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7785 04a0 97E80700 		ldm	r7, {r0, r1, r2}
 7786 04a4 8CE80700 		stm	ip, {r0, r1, r2}
 781:Veno-Echo.cpp **** 
 7787              		.loc 21 781 5 is_stmt 1 view .LVU2138
 783:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7788              		.loc 21 783 5 view .LVU2139
 783:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7789              		.loc 21 783 28 is_stmt 0 view .LVU2140
 7790 04a8 0F20     		movs	r0, #15
 7791 04aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7792              	.LVL461:
 7793 04ae 0346     		mov	r3, r0	@ movhi
 7794 04b0 32A8     		add	r0, sp, #200
 7795 04b2 ADF84430 		strh	r3, [sp, #68]	@ movhi
 7796 04b6 1199     		ldr	r1, [sp, #68]
 7797 04b8 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7798              	.LVL462:
 784:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7799              		.loc 21 784 5 is_stmt 1 view .LVU2141
 784:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7800              		.loc 21 784 28 is_stmt 0 view .LVU2142
 7801 04bc 1020     		movs	r0, #16
 7802 04be FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7803              	.LVL463:
 7804 04c2 0346     		mov	r3, r0	@ movhi
 7805 04c4 0DF1D900 		add	r0, sp, #217
 7806 04c8 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7807 04cc 1299     		ldr	r1, [sp, #72]
 7808 04ce FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7809              	.LVL464:
 785:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7810              		.loc 21 785 5 is_stmt 1 view .LVU2143
 785:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7811              		.loc 21 785 28 is_stmt 0 view .LVU2144
 7812 04d2 1120     		movs	r0, #17
 7813 04d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7814              	.LVL465:
 7815 04d8 0346     		mov	r3, r0	@ movhi
 7816 04da 0DF1EA00 		add	r0, sp, #234
 7817 04de ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7818 04e2 1399     		ldr	r1, [sp, #76]
 7819 04e4 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7820              	.LVL466:
 786:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7821              		.loc 21 786 5 is_stmt 1 view .LVU2145
 786:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7822              		.loc 21 786 28 is_stmt 0 view .LVU2146
 7823 04e8 1220     		movs	r0, #18
 7824 04ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7825              	.LVL467:
 7826 04ee 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 267


 7827 04f0 0DF1FB00 		add	r0, sp, #251
 7828 04f4 ADF85030 		strh	r3, [sp, #80]	@ movhi
 7829 04f8 1499     		ldr	r1, [sp, #80]
 7830 04fa FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7831              	.LVL468:
 787:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7832              		.loc 21 787 5 is_stmt 1 view .LVU2147
 787:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7833              		.loc 21 787 28 is_stmt 0 view .LVU2148
 7834 04fe 1320     		movs	r0, #19
 7835 0500 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7836              	.LVL469:
 7837 0504 0346     		mov	r3, r0	@ movhi
 7838 0506 43A8     		add	r0, sp, #268
 7839 0508 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7840 050c 1599     		ldr	r1, [sp, #84]
 7841 050e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7842              	.LVL470:
 788:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7843              		.loc 21 788 5 is_stmt 1 view .LVU2149
 788:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7844              		.loc 21 788 28 is_stmt 0 view .LVU2150
 7845 0512 1420     		movs	r0, #20
 7846 0514 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7847              	.LVL471:
 7848 0518 0346     		mov	r3, r0	@ movhi
 7849 051a 0DF21D10 		addw	r0, sp, #285
 7850 051e ADF85830 		strh	r3, [sp, #88]	@ movhi
 7851 0522 1699     		ldr	r1, [sp, #88]
 7852 0524 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7853              	.LVL472:
 790:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7854              		.loc 21 790 5 is_stmt 1 view .LVU2151
 790:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7855              		.loc 21 790 28 is_stmt 0 view .LVU2152
 7856 0528 1620     		movs	r0, #22
 7857 052a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7858              	.LVL473:
 7859 052e 0346     		mov	r3, r0	@ movhi
 7860 0530 0DF59770 		add	r0, sp, #302
 7861 0534 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7862 0538 1799     		ldr	r1, [sp, #92]
 7863 053a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7864              	.LVL474:
 791:Veno-Echo.cpp **** 
 7865              		.loc 21 791 5 is_stmt 1 view .LVU2153
 791:Veno-Echo.cpp **** 
 7866              		.loc 21 791 25 is_stmt 0 view .LVU2154
 7867 053e 1920     		movs	r0, #25
 7868 0540 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7869              	.LVL475:
 7870 0544 0346     		mov	r3, r0	@ movhi
 7871 0546 0E20     		movs	r0, #14
 7872 0548 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7873 054c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7874              	.LVL476:
 7875 0550 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 268


 7876 0552 0D20     		movs	r0, #13
 7877 0554 ADF86430 		strh	r3, [sp, #100]	@ movhi
 7878 0558 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7879              	.LVL477:
 7880 055c 0346     		mov	r3, r0	@ movhi
 7881 055e 0C20     		movs	r0, #12
 7882 0560 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7883 0564 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7884              	.LVL478:
 7885 0568 BDF86810 		ldrh	r1, [sp, #104]
 7886 056c 0822     		movs	r2, #8
 7887 056e 199B     		ldr	r3, [sp, #100]
 7888 0570 ADF80010 		strh	r1, [sp]	@ movhi
 7889 0574 ADF80400 		strh	r0, [sp, #4]	@ movhi
 7890 0578 1899     		ldr	r1, [sp, #96]
 7891 057a ADF86C00 		strh	r0, [sp, #108]	@ movhi
 7892 057e 0DF23F10 		addw	r0, sp, #319
 7893 0582 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7894              	.LVL479:
 794:Veno-Echo.cpp ****     hw.adc.Start();
 7895              		.loc 21 794 5 is_stmt 1 view .LVU2155
 794:Veno-Echo.cpp ****     hw.adc.Start();
 7896              		.loc 21 794 16 is_stmt 0 view .LVU2156
 7897 0586 32A9     		add	r1, sp, #200
 7898 0588 0623     		movs	r3, #6
 7899 058a 0822     		movs	r2, #8
 7900 058c 3348     		ldr	r0, .L432+52
 7901 058e FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7902              	.LVL480:
 795:Veno-Echo.cpp **** 
 7903              		.loc 21 795 5 is_stmt 1 view .LVU2157
 795:Veno-Echo.cpp **** 
 7904              		.loc 21 795 17 is_stmt 0 view .LVU2158
 7905 0592 3248     		ldr	r0, .L432+52
 7906 0594 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7907              	.LVL481:
 798:Veno-Echo.cpp ****     // start audio callback
 7908              		.loc 21 798 5 is_stmt 1 view .LVU2159
 798:Veno-Echo.cpp ****     // start audio callback
 7909              		.loc 21 798 25 is_stmt 0 view .LVU2160
 7910 0598 4146     		mov	r1, r8
 7911 059a 2548     		ldr	r0, .L432+8
 7912 059c FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7913              	.LVL482:
 800:Veno-Echo.cpp **** 
 7914              		.loc 21 800 5 is_stmt 1 view .LVU2161
 800:Veno-Echo.cpp **** 
 7915              		.loc 21 800 18 is_stmt 0 view .LVU2162
 7916 05a0 2F49     		ldr	r1, .L432+56
 7917 05a2 2348     		ldr	r0, .L432+8
 7918 05a4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7919              	.LVL483:
 7920              	.L420:
 804:Veno-Echo.cpp ****      {  
 7921              		.loc 21 804 6 is_stmt 1 view .LVU2163
 7922              	.LBB1687:
 807:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 269


 7923              		.loc 21 807 9 view .LVU2164
 810:Veno-Echo.cpp ****         {
 7924              		.loc 21 810 9 view .LVU2165
 7925              	.LBB1688:
 7926              	.LBB1689:
 7927              	.LBI1689:
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7928              		.loc 24 87 5 view .LVU2166
 7929              	.LBE1689:
 7930              	.LBE1688:
 7931              	.LBE1687:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7932              		.loc 24 88 7 view .LVU2167
 7933              	.LBB1720:
 7934              	.LBB1717:
 7935              	.LBB1695:
 7936              	.LBB1690:
 7937              	.LBI1690:
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 7938              		.loc 23 413 7 view .LVU2168
 7939              		.loc 23 413 7 is_stmt 0 view .LVU2169
 7940              	.LBE1690:
 7941              	.LBE1695:
 812:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 7942              		.loc 21 812 13 is_stmt 1 view .LVU2170
 7943              	.LBB1696:
 7944              	.LBI1696:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 7945              		.loc 24 80 5 view .LVU2171
 7946              	.LBE1696:
 7947              	.LBE1717:
 7948              	.LBE1720:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 7949              		.loc 24 81 7 view .LVU2172
 7950              	.LBB1721:
 7951              	.LBB1718:
 7952              	.LBB1705:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 270


 7953              	.LBB1697:
 7954              	.LBI1697:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7955              		.loc 23 288 7 view .LVU2173
 7956              	.LBB1698:
 7957              	.LBI1698:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7958              		.loc 23 390 7 view .LVU2174
 7959              	.LBE1698:
 7960              	.LBE1697:
 7961              	.LBE1705:
 7962              	.LBB1706:
 819:Veno-Echo.cpp ****            {
 7963              		.loc 21 819 12 view .LVU2175
 7964              	.LBE1706:
 7965              	.LBB1711:
 7966              	.LBB1693:
 7967              	.LBB1691:
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7968              		.loc 23 419 24 is_stmt 0 view .LVU2176
 7969 05a8 BFF35B8F 		dmb	ish
 7970 05ac 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7971              	.LBE1691:
 7972              	.LBE1693:
 7973              	.LBE1711:
 7974              	.LBB1712:
 7975              	.LBB1703:
 7976              	.LBB1701:
 7977              	.LBB1699:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7978              		.loc 23 397 18 view .LVU2177
 7979 05ae 0021     		movs	r1, #0
 7980              	.LBE1699:
 7981              	.LBE1701:
 7982              	.LBE1703:
 7983              	.LBE1712:
 813:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7984              		.loc 21 813 23 view .LVU2178
 7985 05b0 0122     		movs	r2, #1
 7986              	.LBB1713:
 7987              	.LBB1694:
 7988              	.LBB1692:
 7989              		.loc 23 419 24 view .LVU2179
 7990 05b2 BFF35B8F 		dmb	ish
 7991              	.LBE1692:
 7992              	.LBE1694:
 7993              	.LBE1713:
 810:Veno-Echo.cpp ****         {
 7994              		.loc 21 810 9 view .LVU2180
 7995 05b6 4BB1     		cbz	r3, .L421
 7996              	.LBB1714:
 7997              	.LBB1704:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 271


 7998              	.LBB1702:
 7999              	.LBB1700:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8000              		.loc 23 397 18 view .LVU2181
 8001 05b8 BFF35B8F 		dmb	ish
 8002 05bc 2170     		strb	r1, [r4]
 8003 05be BFF35B8F 		dmb	ish
 8004              	.LVL484:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8005              		.loc 23 397 18 view .LVU2182
 8006              	.LBE1700:
 8007              	.LBE1702:
 8008              	.LBE1704:
 8009              	.LBE1714:
 813:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 8010              		.loc 21 813 13 is_stmt 1 view .LVU2183
 813:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 8011              		.loc 21 813 23 is_stmt 0 view .LVU2184
 8012 05c2 2A70     		strb	r2, [r5]
 814:Veno-Echo.cpp ****         }
 8013              		.loc 21 814 13 is_stmt 1 view .LVU2185
 814:Veno-Echo.cpp ****         }
 8014              		.loc 21 814 39 is_stmt 0 view .LVU2186
 8015 05c4 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8016              	.LVL485:
 814:Veno-Echo.cpp ****         }
 8017              		.loc 21 814 23 view .LVU2187
 8018 05c8 3060     		str	r0, [r6]
 8019 05ca EDE7     		b	.L420
 8020              	.LVL486:
 8021              	.L421:
 8022              	.LBB1715:
 8023              	.LBB1707:
 819:Veno-Echo.cpp ****            {
 8024              		.loc 21 819 25 view .LVU2188
 8025 05cc 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 819:Veno-Echo.cpp ****            {
 8026              		.loc 21 819 12 view .LVU2189
 8027 05ce 012B     		cmp	r3, #1
 8028 05d0 0BD0     		beq	.L428
 8029              	.L423:
 8030              	.LBE1707:
 835:Veno-Echo.cpp ****            {
 8031              		.loc 21 835 12 is_stmt 1 view .LVU2190
 8032 05d2 022B     		cmp	r3, #2
 8033 05d4 E8D1     		bne	.L420
 837:Veno-Echo.cpp ****             {
 8034              		.loc 21 837 13 view .LVU2191
 837:Veno-Echo.cpp ****             {
 8035              		.loc 21 837 30 is_stmt 0 view .LVU2192
 8036 05d6 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8037              	.LVL487:
 839:Veno-Echo.cpp ****             }
 8038              		.loc 21 839 21 is_stmt 1 view .LVU2193
 837:Veno-Echo.cpp ****             {
 8039              		.loc 21 837 33 is_stmt 0 view .LVU2194
 8040 05da 3368     		ldr	r3, [r6]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 272


 839:Veno-Echo.cpp ****             }
 8041              		.loc 21 839 31 view .LVU2195
 8042 05dc 0022     		movs	r2, #0
 837:Veno-Echo.cpp ****             {
 8043              		.loc 21 837 33 view .LVU2196
 8044 05de C01A     		subs	r0, r0, r3
 837:Veno-Echo.cpp ****             {
 8045              		.loc 21 837 13 view .LVU2197
 8046 05e0 B0F5966F 		cmp	r0, #1200
 8047 05e4 E0D9     		bls	.L420
 839:Veno-Echo.cpp ****             }
 8048              		.loc 21 839 31 view .LVU2198
 8049 05e6 2A70     		strb	r2, [r5]
 8050 05e8 DEE7     		b	.L420
 8051              	.L428:
 8052              	.LBE1715:
 8053              	.LBE1718:
 8054              	.LBE1721:
 821:Veno-Echo.cpp ****                 {
 8055              		.loc 21 821 16 is_stmt 1 view .LVU2199
 8056              	.LBB1722:
 8057              	.LBB1719:
 8058              	.LBB1716:
 8059              	.LBB1710:
 8060              	.LBB1708:
 821:Veno-Echo.cpp ****                 {
 8061              		.loc 21 821 33 is_stmt 0 view .LVU2200
 8062 05ea FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8063              	.LVL488:
 821:Veno-Echo.cpp ****                 {
 8064              		.loc 21 821 36 view .LVU2201
 8065 05ee 3368     		ldr	r3, [r6]
 8066 05f0 C01A     		subs	r0, r0, r3
 821:Veno-Echo.cpp ****                 {
 8067              		.loc 21 821 16 view .LVU2202
 8068 05f2 B0F57A7F 		cmp	r0, #1000
 8069 05f6 01D8     		bhi	.L424
 8070              	.L427:
 8071 05f8 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8072 05fa EAE7     		b	.L423
 8073              	.L424:
 8074              	.LBB1709:
 823:Veno-Echo.cpp ****                     
 8075              		.loc 21 823 21 is_stmt 1 view .LVU2203
 825:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8076              		.loc 21 825 30 is_stmt 0 view .LVU2204
 8077 05fc DFF864C0 		ldr	ip, .L432+60
 8078 0600 27AF     		add	r7, sp, #156
 823:Veno-Echo.cpp ****                     
 8079              		.loc 21 823 31 view .LVU2205
 8080 0602 4FF0020E 		mov	lr, #2
 825:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8081              		.loc 21 825 30 view .LVU2206
 8082 0606 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8083 060a 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8084 060c BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8085 0610 0FC7     		stmia	r7!, {r0, r1, r2, r3}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 273


 8086 0612 9CE80700 		ldm	ip, {r0, r1, r2}
 8087 0616 87E80700 		stm	r7, {r0, r1, r2}
 826:Veno-Echo.cpp ****                     {
 8088              		.loc 21 826 37 view .LVU2207
 8089 061a 27A8     		add	r0, sp, #156
 823:Veno-Echo.cpp ****                     
 8090              		.loc 21 823 31 view .LVU2208
 8091 061c 85F800E0 		strb	lr, [r5]
 825:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8092              		.loc 21 825 21 is_stmt 1 view .LVU2209
 826:Veno-Echo.cpp ****                     {
 8093              		.loc 21 826 21 view .LVU2210
 826:Veno-Echo.cpp ****                     {
 8094              		.loc 21 826 37 is_stmt 0 view .LVU2211
 8095 0620 FFF7FEFF 		bl	_Z12SaveSettingsRK8Settings
 8096              	.LVL489:
 8097 0624 E8E7     		b	.L427
 8098              	.L433:
 8099 0626 00BF     		.align	2
 8100              	.L432:
 8101 0628 00000000 		.word	.LANCHOR38
 8102 062c 3333333F 		.word	1060320051
 8103 0630 00000000 		.word	.LANCHOR4
 8104 0634 00000000 		.word	.LANCHOR107
 8105 0638 00000000 		.word	.LANCHOR108
 8106 063c 00000000 		.word	.LANCHOR76
 8107 0640 0000C842 		.word	1120403456
 8108 0644 00000000 		.word	.LANCHOR16
 8109 0648 00000000 		.word	.LANCHOR109
 8110 064c 00000000 		.word	.LANCHOR110
 8111 0650 808D5B00 		.word	6000000
 8112 0654 00000000 		.word	.LANCHOR26
 8113 0658 00000000 		.word	.LANCHOR89
 8114 065c 18000000 		.word	.LANCHOR4+24
 8115 0660 00000000 		.word	_ZL13AudioCallbackPfS_j
 8116 0664 00000000 		.word	.LANCHOR15
 8117              	.LBE1709:
 8118              	.LBE1708:
 8119              	.LBE1710:
 8120              	.LBE1716:
 8121              	.LBE1719:
 8122              	.LBE1722:
 8123              		.cfi_endproc
 8124              	.LFE4311:
 8126              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8127              		.align	1
 8128              		.p2align 2,,3
 8129              		.global	_Z13TurnOnAllLEDsv
 8130              		.syntax unified
 8131              		.thumb
 8132              		.thumb_func
 8133              		.fpu fpv5-d16
 8135              	_Z13TurnOnAllLEDsv:
 8136              	.LFB4334:
1969:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8137              		.loc 21 1969 1 is_stmt 1 view -0
 8138              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 274


 8139              		@ args = 0, pretend = 0, frame = 0
 8140              		@ frame_needed = 0, uses_anonymous_args = 0
1970:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8141              		.loc 21 1970 5 view .LVU2213
1969:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8142              		.loc 21 1969 1 is_stmt 0 view .LVU2214
 8143 0000 08B5     		push	{r3, lr}
 8144              		.cfi_def_cfa_offset 8
 8145              		.cfi_offset 3, -8
 8146              		.cfi_offset 14, -4
1970:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8147              		.loc 21 1970 26 view .LVU2215
 8148 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8149 0006 1148     		ldr	r0, .L436
 8150 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8151              	.LVL490:
1971:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8152              		.loc 21 1971 5 is_stmt 1 view .LVU2216
1971:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8153              		.loc 21 1971 28 is_stmt 0 view .LVU2217
 8154 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8155 0010 0F48     		ldr	r0, .L436+4
 8156 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8157              	.LVL491:
1972:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8158              		.loc 21 1972 5 is_stmt 1 view .LVU2218
1972:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8159              		.loc 21 1972 28 is_stmt 0 view .LVU2219
 8160 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8161 001a 0E48     		ldr	r0, .L436+8
 8162 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8163              	.LVL492:
1973:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8164              		.loc 21 1973 5 is_stmt 1 view .LVU2220
1973:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8165              		.loc 21 1973 21 is_stmt 0 view .LVU2221
 8166 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8167 0024 0C48     		ldr	r0, .L436+12
 8168 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8169              	.LVL493:
1974:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8170              		.loc 21 1974 5 is_stmt 1 view .LVU2222
1974:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8171              		.loc 21 1974 21 is_stmt 0 view .LVU2223
 8172 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8173 002e 0B48     		ldr	r0, .L436+16
 8174 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8175              	.LVL494:
1975:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8176              		.loc 21 1975 5 is_stmt 1 view .LVU2224
1975:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8177              		.loc 21 1975 19 is_stmt 0 view .LVU2225
 8178 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8179 0038 0948     		ldr	r0, .L436+20
 8180 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8181              	.LVL495:
1976:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 275


 8182              		.loc 21 1976 5 is_stmt 1 view .LVU2226
1976:Veno-Echo.cpp **** }
 8183              		.loc 21 1976 19 is_stmt 0 view .LVU2227
 8184 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8185 0042 0848     		ldr	r0, .L436+24
1977:Veno-Echo.cpp **** 
 8186              		.loc 21 1977 1 view .LVU2228
 8187 0044 BDE80840 		pop	{r3, lr}
 8188              		.cfi_restore 14
 8189              		.cfi_restore 3
 8190              		.cfi_def_cfa_offset 0
1976:Veno-Echo.cpp **** }
 8191              		.loc 21 1976 19 view .LVU2229
 8192 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8193              	.LVL496:
 8194              	.L437:
 8195              		.align	2
 8196              	.L436:
 8197 004c 00000000 		.word	.LANCHOR89
 8198 0050 04000000 		.word	.LANCHOR0+4
 8199 0054 04000000 		.word	.LANCHOR1+4
 8200 0058 00000000 		.word	.LANCHOR92
 8201 005c 00000000 		.word	.LANCHOR93
 8202 0060 00000000 		.word	.LANCHOR94
 8203 0064 00000000 		.word	.LANCHOR95
 8204              		.cfi_endproc
 8205              	.LFE4334:
 8207              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8208              		.align	1
 8209              		.p2align 2,,3
 8210              		.global	_Z12ResetAllLEDsv
 8211              		.syntax unified
 8212              		.thumb
 8213              		.thumb_func
 8214              		.fpu fpv5-d16
 8216              	_Z12ResetAllLEDsv:
 8217              	.LFB4335:
1980:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8218              		.loc 21 1980 1 is_stmt 1 view -0
 8219              		.cfi_startproc
 8220              		@ args = 0, pretend = 0, frame = 0
 8221              		@ frame_needed = 0, uses_anonymous_args = 0
1981:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8222              		.loc 21 1981 5 view .LVU2231
1980:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8223              		.loc 21 1980 1 is_stmt 0 view .LVU2232
 8224 0000 08B5     		push	{r3, lr}
 8225              		.cfi_def_cfa_offset 8
 8226              		.cfi_offset 3, -8
 8227              		.cfi_offset 14, -4
1981:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8228              		.loc 21 1981 26 view .LVU2233
 8229 0002 9FED1E0A 		vldr.32	s0, .L445
 8230 0006 1E48     		ldr	r0, .L445+4
 8231 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8232              	.LVL497:
1982:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 276


 8233              		.loc 21 1982 5 is_stmt 1 view .LVU2234
1982:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8234              		.loc 21 1982 28 is_stmt 0 view .LVU2235
 8235 000c 9FED1B0A 		vldr.32	s0, .L445
 8236 0010 1C48     		ldr	r0, .L445+8
 8237 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8238              	.LVL498:
1983:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8239              		.loc 21 1983 5 is_stmt 1 view .LVU2236
1983:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8240              		.loc 21 1983 28 is_stmt 0 view .LVU2237
 8241 0016 1C48     		ldr	r0, .L445+12
 8242 0018 9FED180A 		vldr.32	s0, .L445
 8243 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8244              	.LVL499:
1984:Veno-Echo.cpp ****     {
 8245              		.loc 21 1984 5 is_stmt 1 view .LVU2238
1984:Veno-Echo.cpp ****     {
 8246              		.loc 21 1984 26 is_stmt 0 view .LVU2239
 8247 0020 1A48     		ldr	r0, .L445+16
 8248 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8249              	.LVL500:
1984:Veno-Echo.cpp ****     {
 8250              		.loc 21 1984 5 view .LVU2240
 8251 0026 C8B9     		cbnz	r0, .L439
1986:Veno-Echo.cpp ****     }
 8252              		.loc 21 1986 9 is_stmt 1 view .LVU2241
1986:Veno-Echo.cpp ****     }
 8253              		.loc 21 1986 25 is_stmt 0 view .LVU2242
 8254 0028 1848     		ldr	r0, .L445+16
 8255 002a 9FED140A 		vldr.32	s0, .L445
 8256 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8257              	.LVL501:
1993:Veno-Echo.cpp ****     {
 8258              		.loc 21 1993 5 is_stmt 1 view .LVU2243
1993:Veno-Echo.cpp ****     {
 8259              		.loc 21 1993 26 is_stmt 0 view .LVU2244
 8260 0032 1748     		ldr	r0, .L445+20
 8261 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8262              	.LVL502:
1993:Veno-Echo.cpp ****     {
 8263              		.loc 21 1993 5 view .LVU2245
 8264 0038 D0B9     		cbnz	r0, .L441
 8265              	.L444:
1995:Veno-Echo.cpp ****     }
 8266              		.loc 21 1995 9 is_stmt 1 view .LVU2246
1995:Veno-Echo.cpp ****     }
 8267              		.loc 21 1995 25 is_stmt 0 view .LVU2247
 8268 003a 9FED100A 		vldr.32	s0, .L445
 8269 003e 1448     		ldr	r0, .L445+20
 8270 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8271              	.LVL503:
 8272              	.L442:
2002:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8273              		.loc 21 2002 5 is_stmt 1 view .LVU2248
2002:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8274              		.loc 21 2002 19 is_stmt 0 view .LVU2249
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 277


 8275 0044 9FED0D0A 		vldr.32	s0, .L445
 8276 0048 1248     		ldr	r0, .L445+24
 8277 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8278              	.LVL504:
2003:Veno-Echo.cpp **** }
 8279              		.loc 21 2003 5 is_stmt 1 view .LVU2250
2003:Veno-Echo.cpp **** }
 8280              		.loc 21 2003 19 is_stmt 0 view .LVU2251
 8281 004e 9FED0B0A 		vldr.32	s0, .L445
 8282 0052 1148     		ldr	r0, .L445+28
2004:Veno-Echo.cpp **** 
 8283              		.loc 21 2004 1 view .LVU2252
 8284 0054 BDE80840 		pop	{r3, lr}
 8285              		.cfi_remember_state
 8286              		.cfi_restore 14
 8287              		.cfi_restore 3
 8288              		.cfi_def_cfa_offset 0
2003:Veno-Echo.cpp **** }
 8289              		.loc 21 2003 19 view .LVU2253
 8290 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8291              	.LVL505:
 8292              	.L439:
 8293              		.cfi_restore_state
1990:Veno-Echo.cpp ****     }
 8294              		.loc 21 1990 8 is_stmt 1 view .LVU2254
1990:Veno-Echo.cpp ****     }
 8295              		.loc 21 1990 24 is_stmt 0 view .LVU2255
 8296 005c 0B48     		ldr	r0, .L445+16
 8297 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8298 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8299              	.LVL506:
1993:Veno-Echo.cpp ****     {
 8300              		.loc 21 1993 5 is_stmt 1 view .LVU2256
1993:Veno-Echo.cpp ****     {
 8301              		.loc 21 1993 26 is_stmt 0 view .LVU2257
 8302 0066 0A48     		ldr	r0, .L445+20
 8303 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8304              	.LVL507:
1993:Veno-Echo.cpp ****     {
 8305              		.loc 21 1993 5 view .LVU2258
 8306 006c 0028     		cmp	r0, #0
 8307 006e E4D0     		beq	.L444
 8308              	.L441:
1999:Veno-Echo.cpp ****     }
 8309              		.loc 21 1999 9 is_stmt 1 view .LVU2259
1999:Veno-Echo.cpp ****     }
 8310              		.loc 21 1999 25 is_stmt 0 view .LVU2260
 8311 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8312 0074 0648     		ldr	r0, .L445+20
 8313 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8314              	.LVL508:
 8315 007a E3E7     		b	.L442
 8316              	.L446:
 8317              		.align	2
 8318              	.L445:
 8319 007c 00000000 		.word	0
 8320 0080 00000000 		.word	.LANCHOR89
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 278


 8321 0084 04000000 		.word	.LANCHOR0+4
 8322 0088 04000000 		.word	.LANCHOR1+4
 8323 008c 00000000 		.word	.LANCHOR92
 8324 0090 00000000 		.word	.LANCHOR93
 8325 0094 00000000 		.word	.LANCHOR94
 8326 0098 00000000 		.word	.LANCHOR95
 8327              		.cfi_endproc
 8328              	.LFE4335:
 8330              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8331              		.align	1
 8332              		.p2align 2,,3
 8333              		.global	_Z14Update_Buttonsv
 8334              		.syntax unified
 8335              		.thumb
 8336              		.thumb_func
 8337              		.fpu fpv5-d16
 8339              	_Z14Update_Buttonsv:
 8340              	.LFB4329:
1646:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8341              		.loc 21 1646 1 is_stmt 1 view -0
 8342              		.cfi_startproc
 8343              		@ args = 0, pretend = 0, frame = 0
 8344              		@ frame_needed = 0, uses_anonymous_args = 0
1647:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8345              		.loc 21 1647 5 view .LVU2262
1648:Veno-Echo.cpp ****     static int buttonstate{};
 8346              		.loc 21 1648 5 view .LVU2263
1649:Veno-Echo.cpp **** 
 8347              		.loc 21 1649 5 view .LVU2264
1651:Veno-Echo.cpp ****     Rev_R_sw.update();
 8348              		.loc 21 1651 5 view .LVU2265
1646:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8349              		.loc 21 1646 1 is_stmt 0 view .LVU2266
 8350 0000 70B5     		push	{r4, r5, r6, lr}
 8351              		.cfi_def_cfa_offset 16
 8352              		.cfi_offset 4, -16
 8353              		.cfi_offset 5, -12
 8354              		.cfi_offset 6, -8
 8355              		.cfi_offset 14, -4
1651:Veno-Echo.cpp ****     Rev_R_sw.update();
 8356              		.loc 21 1651 20 view .LVU2267
 8357 0002 9848     		ldr	r0, .L502
 8358 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8359              	.LVL509:
1652:Veno-Echo.cpp ****     LPF_sw.update();
 8360              		.loc 21 1652 5 is_stmt 1 view .LVU2268
1652:Veno-Echo.cpp ****     LPF_sw.update();
 8361              		.loc 21 1652 20 is_stmt 0 view .LVU2269
 8362 0008 9748     		ldr	r0, .L502+4
 8363 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8364              	.LVL510:
1653:Veno-Echo.cpp ****     HPF_sw.update();
 8365              		.loc 21 1653 5 is_stmt 1 view .LVU2270
1653:Veno-Echo.cpp ****     HPF_sw.update();
 8366              		.loc 21 1653 18 is_stmt 0 view .LVU2271
 8367 000e 9748     		ldr	r0, .L502+8
 8368 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 279


 8369              	.LVL511:
1654:Veno-Echo.cpp ****     Tap_Button.update();
 8370              		.loc 21 1654 5 is_stmt 1 view .LVU2272
1657:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8371              		.loc 21 1657 26 is_stmt 0 view .LVU2273
 8372 0014 964C     		ldr	r4, .L502+12
1654:Veno-Echo.cpp ****     Tap_Button.update();
 8373              		.loc 21 1654 18 view .LVU2274
 8374 0016 9748     		ldr	r0, .L502+16
 8375 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8376              	.LVL512:
1655:Veno-Echo.cpp **** 
 8377              		.loc 21 1655 5 is_stmt 1 view .LVU2275
1655:Veno-Echo.cpp **** 
 8378              		.loc 21 1655 22 is_stmt 0 view .LVU2276
 8379 001c 9648     		ldr	r0, .L502+20
 8380 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8381              	.LVL513:
1657:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8382              		.loc 21 1657 5 is_stmt 1 view .LVU2277
1657:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8383              		.loc 21 1657 26 is_stmt 0 view .LVU2278
 8384 0022 2046     		mov	r0, r4
 8385 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8386              	.LVL514:
1658:Veno-Echo.cpp ****     //TapButton.Debounce();
 8387              		.loc 21 1658 5 is_stmt 1 view .LVU2279
1658:Veno-Echo.cpp ****     //TapButton.Debounce();
 8388              		.loc 21 1658 26 is_stmt 0 view .LVU2280
 8389 0028 9448     		ldr	r0, .L502+24
 8390 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8391              	.LVL515:
1660:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8392              		.loc 21 1660 5 is_stmt 1 view .LVU2281
1660:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8393              		.loc 21 1660 18 is_stmt 0 view .LVU2282
 8394 002e 9448     		ldr	r0, .L502+28
 8395 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8396              	.LVL516:
1663:Veno-Echo.cpp ****     {
 8397              		.loc 21 1663 5 is_stmt 1 view .LVU2283
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 280


  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 8398              		.loc 1 69 38 view .LVU2284
1663:Veno-Echo.cpp ****     {
 8399              		.loc 21 1663 5 is_stmt 0 view .LVU2285
 8400 0034 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8401 0036 7F2B     		cmp	r3, #127
 8402 0038 00F0DC80 		beq	.L494
 8403              	.L448:
1677:Veno-Echo.cpp ****     {
 8404              		.loc 21 1677 5 is_stmt 1 view .LVU2286
 8405              	.LVL517:
 8406              		.loc 1 69 38 view .LVU2287
1677:Veno-Echo.cpp ****     {
 8407              		.loc 21 1677 32 is_stmt 0 view .LVU2288
 8408 003c 8F4B     		ldr	r3, .L502+24
1677:Veno-Echo.cpp ****     {
 8409              		.loc 21 1677 5 view .LVU2289
 8410 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8411 0040 7F2B     		cmp	r3, #127
 8412 0042 00F0BE80 		beq	.L495
 8413              	.L450:
1693:Veno-Echo.cpp ****     {
 8414              		.loc 21 1693 5 is_stmt 1 view .LVU2290
1693:Veno-Echo.cpp ****     {
 8415              		.loc 21 1693 28 is_stmt 0 view .LVU2291
 8416 0046 8748     		ldr	r0, .L502
1695:Veno-Echo.cpp ****         if (buttonstate == 3)
 8417              		.loc 21 1695 21 view .LVU2292
 8418 0048 8E4C     		ldr	r4, .L502+32
1693:Veno-Echo.cpp ****     {
 8419              		.loc 21 1693 28 view .LVU2293
 8420 004a FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8421              	.LVL518:
1693:Veno-Echo.cpp ****     {
 8422              		.loc 21 1693 5 view .LVU2294
 8423 004e D0B1     		cbz	r0, .L452
1695:Veno-Echo.cpp ****         if (buttonstate == 3)
 8424              		.loc 21 1695 9 is_stmt 1 view .LVU2295
1695:Veno-Echo.cpp ****         if (buttonstate == 3)
 8425              		.loc 21 1695 21 is_stmt 0 view .LVU2296
 8426 0050 2368     		ldr	r3, [r4]
 8427 0052 0133     		adds	r3, r3, #1
1696:Veno-Echo.cpp ****         {
 8428              		.loc 21 1696 9 view .LVU2297
 8429 0054 032B     		cmp	r3, #3
1695:Veno-Echo.cpp ****         if (buttonstate == 3)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 281


 8430              		.loc 21 1695 21 view .LVU2298
 8431 0056 2360     		str	r3, [r4]
1696:Veno-Echo.cpp ****         {
 8432              		.loc 21 1696 9 is_stmt 1 view .LVU2299
 8433 0058 00F0E580 		beq	.L496
 8434              	.L453:
1700:Veno-Echo.cpp ****         {
 8435              		.loc 21 1700 9 view .LVU2300
1700:Veno-Echo.cpp ****         {
 8436              		.loc 21 1700 29 is_stmt 0 view .LVU2301
 8437 005c 8148     		ldr	r0, .L502
 8438 005e FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8439              	.LVL519:
1706:Veno-Echo.cpp ****         }
 8440              		.loc 21 1706 31 view .LVU2302
 8441 0062 F7EE007A 		vmov.f32	s15, #1.0e+0
 8442 0066 9FED887A 		vldr.32	s14, .L502+36
 8443 006a 0028     		cmp	r0, #0
 8444 006c 8749     		ldr	r1, .L502+40
 8445              	.LBB1723:
 8446              	.LBB1724:
 8447              	.LBB1725:
 8448              	.LBB1726:
 8449              	.LBB1727:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8450              		.loc 23 397 18 view .LVU2303
 8451 006e 4FF00102 		mov	r2, #1
 8452 0072 874B     		ldr	r3, .L502+44
 8453              	.LBE1727:
 8454              	.LBE1726:
 8455              	.LBE1725:
 8456              	.LBE1724:
 8457              	.LBE1723:
1706:Veno-Echo.cpp ****         }
 8458              		.loc 21 1706 31 view .LVU2304
 8459 0074 47FE277A 		vseleq.f32	s15, s14, s15
 8460 0078 C1ED097A 		vstr.32	s15, [r1, #36]
1708:Veno-Echo.cpp ****     }
 8461              		.loc 21 1708 9 is_stmt 1 view .LVU2305
 8462              	.LVL520:
 8463              	.LBB1732:
 8464              	.LBI1723:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8465              		.loc 24 80 5 view .LVU2306
 8466              	.LBB1731:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8467              		.loc 24 81 7 view .LVU2307
 8468              	.LBB1730:
 8469              	.LBI1725:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8470              		.loc 23 288 7 view .LVU2308
 8471              	.LBB1729:
 8472              	.LBI1726:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8473              		.loc 23 390 7 view .LVU2309
 8474              	.LBB1728:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 282


 8475              		.loc 23 397 18 is_stmt 0 view .LVU2310
 8476 007c BFF35B8F 		dmb	ish
 8477 0080 1A70     		strb	r2, [r3]
 8478 0082 BFF35B8F 		dmb	ish
 8479              	.LVL521:
 8480              	.L452:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8481              		.loc 23 397 18 view .LVU2311
 8482              	.LBE1728:
 8483              	.LBE1729:
 8484              	.LBE1730:
 8485              	.LBE1731:
 8486              	.LBE1732:
1711:Veno-Echo.cpp ****     {
 8487              		.loc 21 1711 5 is_stmt 1 view .LVU2312
1711:Veno-Echo.cpp ****     {
 8488              		.loc 21 1711 29 is_stmt 0 view .LVU2313
 8489 0086 7748     		ldr	r0, .L502
 8490 0088 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8491              	.LVL522:
1711:Veno-Echo.cpp ****     {
 8492              		.loc 21 1711 5 view .LVU2314
 8493 008c 10B1     		cbz	r0, .L455
1713:Veno-Echo.cpp ****     }
 8494              		.loc 21 1713 9 is_stmt 1 view .LVU2315
1713:Veno-Echo.cpp ****     }
 8495              		.loc 21 1713 21 is_stmt 0 view .LVU2316
 8496 008e 2368     		ldr	r3, [r4]
 8497 0090 013B     		subs	r3, r3, #1
 8498 0092 2360     		str	r3, [r4]
 8499              	.L455:
1716:Veno-Echo.cpp ****     {
 8500              		.loc 21 1716 5 is_stmt 1 view .LVU2317
1716:Veno-Echo.cpp ****     {
 8501              		.loc 21 1716 28 is_stmt 0 view .LVU2318
 8502 0094 7448     		ldr	r0, .L502+4
 8503 0096 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8504              	.LVL523:
1716:Veno-Echo.cpp ****     {
 8505              		.loc 21 1716 5 view .LVU2319
 8506 009a D0B1     		cbz	r0, .L456
1718:Veno-Echo.cpp ****         if (buttonstate == 3)
 8507              		.loc 21 1718 9 is_stmt 1 view .LVU2320
1718:Veno-Echo.cpp ****         if (buttonstate == 3)
 8508              		.loc 21 1718 21 is_stmt 0 view .LVU2321
 8509 009c 2368     		ldr	r3, [r4]
 8510 009e 0133     		adds	r3, r3, #1
1719:Veno-Echo.cpp ****         {
 8511              		.loc 21 1719 9 view .LVU2322
 8512 00a0 032B     		cmp	r3, #3
1718:Veno-Echo.cpp ****         if (buttonstate == 3)
 8513              		.loc 21 1718 21 view .LVU2323
 8514 00a2 2360     		str	r3, [r4]
1719:Veno-Echo.cpp ****         {
 8515              		.loc 21 1719 9 is_stmt 1 view .LVU2324
 8516 00a4 00F0C480 		beq	.L497
 8517              	.L457:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 283


1723:Veno-Echo.cpp ****         {
 8518              		.loc 21 1723 9 view .LVU2325
1723:Veno-Echo.cpp ****         {
 8519              		.loc 21 1723 29 is_stmt 0 view .LVU2326
 8520 00a8 6F48     		ldr	r0, .L502+4
 8521 00aa FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8522              	.LVL524:
1729:Veno-Echo.cpp ****         }
 8523              		.loc 21 1729 31 view .LVU2327
 8524 00ae F7EE007A 		vmov.f32	s15, #1.0e+0
 8525 00b2 9FED757A 		vldr.32	s14, .L502+36
 8526 00b6 0028     		cmp	r0, #0
 8527 00b8 7449     		ldr	r1, .L502+40
 8528              	.LBB1733:
 8529              	.LBB1734:
 8530              	.LBB1735:
 8531              	.LBB1736:
 8532              	.LBB1737:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8533              		.loc 23 397 18 view .LVU2328
 8534 00ba 4FF00102 		mov	r2, #1
 8535 00be 744B     		ldr	r3, .L502+44
 8536              	.LBE1737:
 8537              	.LBE1736:
 8538              	.LBE1735:
 8539              	.LBE1734:
 8540              	.LBE1733:
1729:Veno-Echo.cpp ****         }
 8541              		.loc 21 1729 31 view .LVU2329
 8542 00c0 47FE277A 		vseleq.f32	s15, s14, s15
 8543 00c4 C1ED0A7A 		vstr.32	s15, [r1, #40]
1731:Veno-Echo.cpp ****     }
 8544              		.loc 21 1731 9 is_stmt 1 view .LVU2330
 8545              	.LVL525:
 8546              	.LBB1742:
 8547              	.LBI1733:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8548              		.loc 24 80 5 view .LVU2331
 8549              	.LBB1741:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8550              		.loc 24 81 7 view .LVU2332
 8551              	.LBB1740:
 8552              	.LBI1735:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8553              		.loc 23 288 7 view .LVU2333
 8554              	.LBB1739:
 8555              	.LBI1736:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8556              		.loc 23 390 7 view .LVU2334
 8557              	.LBB1738:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8558              		.loc 23 397 18 is_stmt 0 view .LVU2335
 8559 00c8 BFF35B8F 		dmb	ish
 8560 00cc 1A70     		strb	r2, [r3]
 8561 00ce BFF35B8F 		dmb	ish
 8562              	.LVL526:
 8563              	.L456:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 284


 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8564              		.loc 23 397 18 view .LVU2336
 8565              	.LBE1738:
 8566              	.LBE1739:
 8567              	.LBE1740:
 8568              	.LBE1741:
 8569              	.LBE1742:
1734:Veno-Echo.cpp ****     {
 8570              		.loc 21 1734 5 is_stmt 1 view .LVU2337
1734:Veno-Echo.cpp ****     {
 8571              		.loc 21 1734 29 is_stmt 0 view .LVU2338
 8572 00d2 6548     		ldr	r0, .L502+4
 8573 00d4 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8574              	.LVL527:
1734:Veno-Echo.cpp ****     {
 8575              		.loc 21 1734 5 view .LVU2339
 8576 00d8 10B1     		cbz	r0, .L459
1736:Veno-Echo.cpp ****     }
 8577              		.loc 21 1736 9 is_stmt 1 view .LVU2340
1736:Veno-Echo.cpp ****     }
 8578              		.loc 21 1736 21 is_stmt 0 view .LVU2341
 8579 00da 2368     		ldr	r3, [r4]
 8580 00dc 013B     		subs	r3, r3, #1
 8581 00de 2360     		str	r3, [r4]
 8582              	.L459:
1739:Veno-Echo.cpp ****     {
 8583              		.loc 21 1739 5 is_stmt 1 view .LVU2342
1739:Veno-Echo.cpp ****     {
 8584              		.loc 21 1739 30 is_stmt 0 view .LVU2343
 8585 00e0 6548     		ldr	r0, .L502+20
 8586 00e2 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8587              	.LVL528:
1739:Veno-Echo.cpp ****     {
 8588              		.loc 21 1739 5 view .LVU2344
 8589 00e6 0028     		cmp	r0, #0
 8590 00e8 55D1     		bne	.L498
 8591              	.L461:
1760:Veno-Echo.cpp ****     {
 8592              		.loc 21 1760 5 is_stmt 1 view .LVU2345
1760:Veno-Echo.cpp ****     {
 8593              		.loc 21 1760 31 is_stmt 0 view .LVU2346
 8594 00ea 6348     		ldr	r0, .L502+20
 8595 00ec FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8596              	.LVL529:
1760:Veno-Echo.cpp ****     {
 8597              		.loc 21 1760 5 view .LVU2347
 8598 00f0 38B1     		cbz	r0, .L464
1762:Veno-Echo.cpp ****         buttonstate -= 1;
 8599              		.loc 21 1762 9 is_stmt 1 view .LVU2348
1763:Veno-Echo.cpp ****         mute = false;
 8600              		.loc 21 1763 21 is_stmt 0 view .LVU2349
 8601 00f2 2368     		ldr	r3, [r4]
1762:Veno-Echo.cpp ****         buttonstate -= 1;
 8602              		.loc 21 1762 15 view .LVU2350
 8603 00f4 0022     		movs	r2, #0
 8604 00f6 6748     		ldr	r0, .L502+48
1763:Veno-Echo.cpp ****         mute = false;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 285


 8605              		.loc 21 1763 21 view .LVU2351
 8606 00f8 013B     		subs	r3, r3, #1
1764:Veno-Echo.cpp ****     }
 8607              		.loc 21 1764 14 view .LVU2352
 8608 00fa 6749     		ldr	r1, .L502+52
1762:Veno-Echo.cpp ****         buttonstate -= 1;
 8609              		.loc 21 1762 15 view .LVU2353
 8610 00fc 0270     		strb	r2, [r0]
1763:Veno-Echo.cpp ****         mute = false;
 8611              		.loc 21 1763 9 is_stmt 1 view .LVU2354
1763:Veno-Echo.cpp ****         mute = false;
 8612              		.loc 21 1763 21 is_stmt 0 view .LVU2355
 8613 00fe 2360     		str	r3, [r4]
1764:Veno-Echo.cpp ****     }
 8614              		.loc 21 1764 9 is_stmt 1 view .LVU2356
1764:Veno-Echo.cpp ****     }
 8615              		.loc 21 1764 14 is_stmt 0 view .LVU2357
 8616 0100 0A70     		strb	r2, [r1]
 8617              	.L464:
1767:Veno-Echo.cpp ****     {
 8618              		.loc 21 1767 5 is_stmt 1 view .LVU2358
1767:Veno-Echo.cpp ****     {
 8619              		.loc 21 1767 28 is_stmt 0 view .LVU2359
 8620 0102 5D48     		ldr	r0, .L502+20
 8621 0104 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8622              	.LVL530:
1767:Veno-Echo.cpp ****     {
 8623              		.loc 21 1767 5 view .LVU2360
 8624 0108 60B9     		cbnz	r0, .L499
 8625              	.L466:
1775:Veno-Echo.cpp ****     {
 8626              		.loc 21 1775 5 is_stmt 1 view .LVU2361
 8627 010a 2368     		ldr	r3, [r4]
 8628 010c 032B     		cmp	r3, #3
 8629 010e 16D0     		beq	.L500
 8630              	.L469:
1792:Veno-Echo.cpp **** }
 8631              		.loc 21 1792 5 view .LVU2362
 8632              	.LBB1743:
 8633              	.LBI1743:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8634              		.loc 1 75 17 view .LVU2363
 8635              	.LVL531:
 8636              	.LBB1744:
 8637              		.loc 1 75 35 view .LVU2364
 8638              	.LBE1744:
 8639              	.LBE1743:
1792:Veno-Echo.cpp **** }
 8640              		.loc 21 1792 31 is_stmt 0 view .LVU2365
 8641 0110 5B4B     		ldr	r3, .L502+28
1792:Veno-Echo.cpp **** }
 8642              		.loc 21 1792 14 view .LVU2366
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 286


 8643 0112 624A     		ldr	r2, .L502+56
 8644              	.LBB1746:
 8645              	.LBB1745:
 8646              		.loc 1 75 52 view .LVU2367
 8647 0114 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8648 0116 A3F1FF03 		sub	r3, #255
 8649 011a B3FA83F3 		clz	r3, r3
 8650 011e 5B09     		lsrs	r3, r3, #5
 8651 0120 1370     		strb	r3, [r2]
 8652              	.LBE1745:
 8653              	.LBE1746:
1793:Veno-Echo.cpp **** 
 8654              		.loc 21 1793 1 view .LVU2368
 8655 0122 70BD     		pop	{r4, r5, r6, pc}
 8656              	.LVL532:
 8657              	.L499:
1769:Veno-Echo.cpp ****         {
 8658              		.loc 21 1769 9 is_stmt 1 view .LVU2369
1769:Veno-Echo.cpp ****         {
 8659              		.loc 21 1769 29 is_stmt 0 view .LVU2370
 8660 0124 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8661              	.LVL533:
1769:Veno-Echo.cpp ****         {
 8662              		.loc 21 1769 32 view .LVU2371
 8663 0128 5D4B     		ldr	r3, .L502+60
 8664 012a 1B68     		ldr	r3, [r3]
 8665 012c C01A     		subs	r0, r0, r3
1769:Veno-Echo.cpp ****         {
 8666              		.loc 21 1769 9 view .LVU2372
 8667 012e 3228     		cmp	r0, #50
 8668 0130 EBD9     		bls	.L466
1771:Veno-Echo.cpp ****         } 
 8669              		.loc 21 1771 13 is_stmt 1 view .LVU2373
1771:Veno-Echo.cpp ****         } 
 8670              		.loc 21 1771 19 is_stmt 0 view .LVU2374
 8671 0132 584B     		ldr	r3, .L502+48
 8672 0134 0122     		movs	r2, #1
 8673 0136 1A70     		strb	r2, [r3]
1775:Veno-Echo.cpp ****     {
 8674              		.loc 21 1775 5 is_stmt 1 view .LVU2375
 8675 0138 2368     		ldr	r3, [r4]
 8676 013a 032B     		cmp	r3, #3
 8677 013c E8D1     		bne	.L469
 8678              	.L500:
1778:Veno-Echo.cpp ****             {
 8679              		.loc 21 1778 13 view .LVU2376
1778:Veno-Echo.cpp ****             {
 8680              		.loc 21 1778 36 is_stmt 0 view .LVU2377
 8681 013e 594E     		ldr	r6, .L502+64
1778:Veno-Echo.cpp ****             {
 8682              		.loc 21 1778 33 view .LVU2378
 8683 0140 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8684              	.LVL534:
1778:Veno-Echo.cpp ****             {
 8685              		.loc 21 1778 13 view .LVU2379
 8686 0144 40F6B833 		movw	r3, #3000
1778:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 287


 8687              		.loc 21 1778 36 view .LVU2380
 8688 0148 3268     		ldr	r2, [r6]
 8689 014a 801A     		subs	r0, r0, r2
1778:Veno-Echo.cpp ****             {
 8690              		.loc 21 1778 13 view .LVU2381
 8691 014c 9842     		cmp	r0, r3
 8692 014e DFD9     		bls	.L469
1780:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8693              		.loc 21 1780 17 is_stmt 1 view .LVU2382
1780:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8694              		.loc 21 1780 32 is_stmt 0 view .LVU2383
 8695 0150 4448     		ldr	r0, .L502
 8696 0152 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8697              	.LVL535:
1781:Veno-Echo.cpp ****                 ResetAllLEDs();
 8698              		.loc 21 1781 17 is_stmt 1 view .LVU2384
1781:Veno-Echo.cpp ****                 ResetAllLEDs();
 8699              		.loc 21 1781 32 is_stmt 0 view .LVU2385
 8700 0156 4448     		ldr	r0, .L502+4
 8701 0158 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8702              	.LVL536:
1782:Veno-Echo.cpp ****                 //don't let reset or shift update
 8703              		.loc 21 1782 17 is_stmt 1 view .LVU2386
1786:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8704              		.loc 21 1786 29 is_stmt 0 view .LVU2387
 8705 015c 524D     		ldr	r5, .L502+68
1782:Veno-Echo.cpp ****                 //don't let reset or shift update
 8706              		.loc 21 1782 29 view .LVU2388
 8707 015e FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8708              	.LVL537:
1784:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8709              		.loc 21 1784 17 is_stmt 1 view .LVU2389
1784:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8710              		.loc 21 1784 23 is_stmt 0 view .LVU2390
 8711 0162 4C4B     		ldr	r3, .L502+48
 8712 0164 0022     		movs	r2, #0
1785:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8713              		.loc 21 1785 30 view .LVU2391
 8714 0166 5048     		ldr	r0, .L502+68
1786:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8715              		.loc 21 1786 29 view .LVU2392
 8716 0168 484C     		ldr	r4, .L502+40
1784:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8717              		.loc 21 1784 23 view .LVU2393
 8718 016a 1A70     		strb	r2, [r3]
1785:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8719              		.loc 21 1785 17 is_stmt 1 view .LVU2394
1785:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8720              		.loc 21 1785 30 is_stmt 0 view .LVU2395
 8721 016c FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8722              	.LVL538:
1786:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8723              		.loc 21 1786 17 is_stmt 1 view .LVU2396
1786:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8724              		.loc 21 1786 29 is_stmt 0 view .LVU2397
 8725 0170 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8726 0172 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 288


 8727 0174 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8728 0176 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8729 0178 95E80700 		ldm	r5, {r0, r1, r2}
 8730 017c 84E80700 		stm	r4, {r0, r1, r2}
1787:Veno-Echo.cpp ****                 save_flag = true;
 8731              		.loc 21 1787 17 is_stmt 1 view .LVU2398
1787:Veno-Echo.cpp ****                 save_flag = true;
 8732              		.loc 21 1787 43 is_stmt 0 view .LVU2399
 8733 0180 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8734              	.LVL539:
 8735              	.LBB1747:
 8736              	.LBB1748:
 8737              	.LBB1749:
 8738              	.LBB1750:
 8739              	.LBB1751:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8740              		.loc 23 397 18 view .LVU2400
 8741 0184 424B     		ldr	r3, .L502+44
 8742 0186 0122     		movs	r2, #1
 8743              	.LBE1751:
 8744              	.LBE1750:
 8745              	.LBE1749:
 8746              	.LBE1748:
 8747              	.LBE1747:
1787:Veno-Echo.cpp ****                 save_flag = true;
 8748              		.loc 21 1787 27 view .LVU2401
 8749 0188 3060     		str	r0, [r6]
1788:Veno-Echo.cpp ****             }
 8750              		.loc 21 1788 17 is_stmt 1 view .LVU2402
 8751              	.LVL540:
 8752              	.LBB1756:
 8753              	.LBI1747:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8754              		.loc 24 80 5 view .LVU2403
 8755              	.LBB1755:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8756              		.loc 24 81 7 view .LVU2404
 8757              	.LBB1754:
 8758              	.LBI1749:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8759              		.loc 23 288 7 view .LVU2405
 8760              	.LBB1753:
 8761              	.LBI1750:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8762              		.loc 23 390 7 view .LVU2406
 8763              	.LBB1752:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8764              		.loc 23 397 18 is_stmt 0 view .LVU2407
 8765 018a BFF35B8F 		dmb	ish
 8766 018e 1A70     		strb	r2, [r3]
 8767 0190 BFF35B8F 		dmb	ish
 8768              	.LVL541:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8769              		.loc 23 397 18 view .LVU2408
 8770              	.LBE1752:
 8771              	.LBE1753:
 8772              	.LBE1754:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 289


  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8773              		.loc 24 81 35 view .LVU2409
 8774 0194 BCE7     		b	.L469
 8775              	.LVL542:
 8776              	.L498:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8777              		.loc 24 81 35 view .LVU2410
 8778              	.LBE1755:
 8779              	.LBE1756:
1741:Veno-Echo.cpp ****         {
 8780              		.loc 21 1741 9 is_stmt 1 view .LVU2411
1741:Veno-Echo.cpp ****         {
 8781              		.loc 21 1741 25 is_stmt 0 view .LVU2412
 8782 0196 4548     		ldr	r0, .L502+72
 8783 0198 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8784              	.LVL543:
1741:Veno-Echo.cpp ****         {
 8785              		.loc 21 1741 9 view .LVU2413
 8786 019c 0028     		cmp	r0, #0
 8787 019e 4CD1     		bne	.L501
 8788              	.L462:
1747:Veno-Echo.cpp ****         
 8789              		.loc 21 1747 9 is_stmt 1 view .LVU2414
1747:Veno-Echo.cpp ****         
 8790              		.loc 21 1747 33 is_stmt 0 view .LVU2415
 8791 01a0 4348     		ldr	r0, .L502+76
 8792 01a2 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8793              	.LVL544:
1750:Veno-Echo.cpp ****         buttonstate += 1;
 8794              		.loc 21 1750 9 is_stmt 1 view .LVU2416
1750:Veno-Echo.cpp ****         buttonstate += 1;
 8795              		.loc 21 1750 35 is_stmt 0 view .LVU2417
 8796 01a6 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8797              	.LVL545:
1751:Veno-Echo.cpp ****         
 8798              		.loc 21 1751 21 view .LVU2418
 8799 01aa 2368     		ldr	r3, [r4]
1750:Veno-Echo.cpp ****         buttonstate += 1;
 8800              		.loc 21 1750 19 view .LVU2419
 8801 01ac 3C4A     		ldr	r2, .L502+60
1751:Veno-Echo.cpp ****         
 8802              		.loc 21 1751 21 view .LVU2420
 8803 01ae 0133     		adds	r3, r3, #1
1750:Veno-Echo.cpp ****         buttonstate += 1;
 8804              		.loc 21 1750 19 view .LVU2421
 8805 01b0 1060     		str	r0, [r2]
1751:Veno-Echo.cpp ****         
 8806              		.loc 21 1751 9 is_stmt 1 view .LVU2422
1753:Veno-Echo.cpp ****         {
 8807              		.loc 21 1753 9 is_stmt 0 view .LVU2423
 8808 01b2 032B     		cmp	r3, #3
1751:Veno-Echo.cpp ****         
 8809              		.loc 21 1751 21 view .LVU2424
 8810 01b4 2360     		str	r3, [r4]
1753:Veno-Echo.cpp ****         {
 8811              		.loc 21 1753 9 is_stmt 1 view .LVU2425
 8812 01b6 98D1     		bne	.L461
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 290


1755:Veno-Echo.cpp ****         }
 8813              		.loc 21 1755 13 view .LVU2426
1755:Veno-Echo.cpp ****         }
 8814              		.loc 21 1755 39 is_stmt 0 view .LVU2427
 8815 01b8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8816              	.LVL546:
1755:Veno-Echo.cpp ****         }
 8817              		.loc 21 1755 23 view .LVU2428
 8818 01bc 394B     		ldr	r3, .L502+64
 8819 01be 1860     		str	r0, [r3]
 8820 01c0 93E7     		b	.L461
 8821              	.L495:
1679:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8822              		.loc 21 1679 9 is_stmt 1 view .LVU2429
1679:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8823              		.loc 21 1679 24 is_stmt 0 view .LVU2430
 8824 01c2 2948     		ldr	r0, .L502+4
 8825 01c4 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8826              	.LVL547:
1680:Veno-Echo.cpp ****         {
 8827              		.loc 21 1680 9 is_stmt 1 view .LVU2431
1680:Veno-Echo.cpp ****         {
 8828              		.loc 21 1680 29 is_stmt 0 view .LVU2432
 8829 01c8 2748     		ldr	r0, .L502+4
 8830 01ca FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8831              	.LVL548:
1686:Veno-Echo.cpp ****         }
 8832              		.loc 21 1686 31 view .LVU2433
 8833 01ce F7EE007A 		vmov.f32	s15, #1.0e+0
 8834 01d2 9FED2D7A 		vldr.32	s14, .L502+36
 8835 01d6 0028     		cmp	r0, #0
 8836 01d8 2C49     		ldr	r1, .L502+40
 8837              	.LBB1757:
 8838              	.LBB1758:
 8839              	.LBB1759:
 8840              	.LBB1760:
 8841              	.LBB1761:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8842              		.loc 23 397 18 view .LVU2434
 8843 01da 4FF00102 		mov	r2, #1
 8844 01de 2C4B     		ldr	r3, .L502+44
 8845              	.LBE1761:
 8846              	.LBE1760:
 8847              	.LBE1759:
 8848              	.LBE1758:
 8849              	.LBE1757:
1686:Veno-Echo.cpp ****         }
 8850              		.loc 21 1686 31 view .LVU2435
 8851 01e0 47FE277A 		vseleq.f32	s15, s14, s15
 8852 01e4 C1ED0A7A 		vstr.32	s15, [r1, #40]
1688:Veno-Echo.cpp ****     }
 8853              		.loc 21 1688 9 is_stmt 1 view .LVU2436
 8854              	.LVL549:
 8855              	.LBB1766:
 8856              	.LBI1757:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8857              		.loc 24 80 5 view .LVU2437
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 291


 8858              	.LBB1765:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8859              		.loc 24 81 7 view .LVU2438
 8860              	.LBB1764:
 8861              	.LBI1759:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8862              		.loc 23 288 7 view .LVU2439
 8863              	.LBB1763:
 8864              	.LBI1760:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8865              		.loc 23 390 7 view .LVU2440
 8866              	.LBB1762:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8867              		.loc 23 397 18 is_stmt 0 view .LVU2441
 8868 01e8 BFF35B8F 		dmb	ish
 8869 01ec 1A70     		strb	r2, [r3]
 8870 01ee BFF35B8F 		dmb	ish
 8871              	.LVL550:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8872              		.loc 23 397 18 view .LVU2442
 8873              	.LBE1762:
 8874              	.LBE1763:
 8875              	.LBE1764:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8876              		.loc 24 81 35 view .LVU2443
 8877 01f2 28E7     		b	.L450
 8878              	.LVL551:
 8879              	.L494:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8880              		.loc 24 81 35 view .LVU2444
 8881              	.LBE1765:
 8882              	.LBE1766:
1665:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8883              		.loc 21 1665 9 is_stmt 1 view .LVU2445
1665:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8884              		.loc 21 1665 24 is_stmt 0 view .LVU2446
 8885 01f4 1B48     		ldr	r0, .L502
 8886 01f6 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8887              	.LVL552:
1666:Veno-Echo.cpp ****         {
 8888              		.loc 21 1666 9 is_stmt 1 view .LVU2447
1666:Veno-Echo.cpp ****         {
 8889              		.loc 21 1666 29 is_stmt 0 view .LVU2448
 8890 01fa 1A48     		ldr	r0, .L502
 8891 01fc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8892              	.LVL553:
1672:Veno-Echo.cpp ****         }
 8893              		.loc 21 1672 31 view .LVU2449
 8894 0200 F7EE007A 		vmov.f32	s15, #1.0e+0
 8895 0204 9FED207A 		vldr.32	s14, .L502+36
 8896 0208 0028     		cmp	r0, #0
 8897 020a 2049     		ldr	r1, .L502+40
 8898              	.LBB1767:
 8899              	.LBB1768:
 8900              	.LBB1769:
 8901              	.LBB1770:
 8902              	.LBB1771:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 292


 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8903              		.loc 23 397 18 view .LVU2450
 8904 020c 4FF00102 		mov	r2, #1
 8905 0210 1F4B     		ldr	r3, .L502+44
 8906              	.LBE1771:
 8907              	.LBE1770:
 8908              	.LBE1769:
 8909              	.LBE1768:
 8910              	.LBE1767:
1672:Veno-Echo.cpp ****         }
 8911              		.loc 21 1672 31 view .LVU2451
 8912 0212 47FE277A 		vseleq.f32	s15, s14, s15
 8913 0216 C1ED097A 		vstr.32	s15, [r1, #36]
1674:Veno-Echo.cpp ****     }
 8914              		.loc 21 1674 9 is_stmt 1 view .LVU2452
 8915              	.LVL554:
 8916              	.LBB1776:
 8917              	.LBI1767:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8918              		.loc 24 80 5 view .LVU2453
 8919              	.LBB1775:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8920              		.loc 24 81 7 view .LVU2454
 8921              	.LBB1774:
 8922              	.LBI1769:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8923              		.loc 23 288 7 view .LVU2455
 8924              	.LBB1773:
 8925              	.LBI1770:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8926              		.loc 23 390 7 view .LVU2456
 8927              	.LBB1772:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8928              		.loc 23 397 18 is_stmt 0 view .LVU2457
 8929 021a BFF35B8F 		dmb	ish
 8930 021e 1A70     		strb	r2, [r3]
 8931 0220 BFF35B8F 		dmb	ish
 8932              	.LVL555:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8933              		.loc 23 397 18 view .LVU2458
 8934              	.LBE1772:
 8935              	.LBE1773:
 8936              	.LBE1774:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8937              		.loc 24 81 35 view .LVU2459
 8938 0224 0AE7     		b	.L448
 8939              	.LVL556:
 8940              	.L496:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8941              		.loc 24 81 35 view .LVU2460
 8942              	.LBE1775:
 8943              	.LBE1776:
1698:Veno-Echo.cpp ****         }
 8944              		.loc 21 1698 13 is_stmt 1 view .LVU2461
1698:Veno-Echo.cpp ****         }
 8945              		.loc 21 1698 39 is_stmt 0 view .LVU2462
 8946 0226 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 293


 8947              	.LVL557:
1698:Veno-Echo.cpp ****         }
 8948              		.loc 21 1698 23 view .LVU2463
 8949 022a 1E4B     		ldr	r3, .L502+64
 8950 022c 1860     		str	r0, [r3]
 8951 022e 15E7     		b	.L453
 8952              	.L497:
1721:Veno-Echo.cpp ****         }
 8953              		.loc 21 1721 13 is_stmt 1 view .LVU2464
1721:Veno-Echo.cpp ****         }
 8954              		.loc 21 1721 39 is_stmt 0 view .LVU2465
 8955 0230 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8956              	.LVL558:
1721:Veno-Echo.cpp ****         }
 8957              		.loc 21 1721 23 view .LVU2466
 8958 0234 1B4B     		ldr	r3, .L502+64
 8959 0236 1860     		str	r0, [r3]
 8960 0238 36E7     		b	.L457
 8961              	.L501:
1743:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8962              		.loc 21 1743 13 is_stmt 1 view .LVU2467
1743:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8963              		.loc 21 1743 35 is_stmt 0 view .LVU2468
 8964 023a 1C48     		ldr	r0, .L502+72
 8965 023c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8966              	.LVL559:
 8967 0240 1B48     		ldr	r0, .L502+76
 8968 0242 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8969              	.LVL560:
1744:Veno-Echo.cpp ****             save_flag = true;
 8970              		.loc 21 1744 13 is_stmt 1 view .LVU2469
1744:Veno-Echo.cpp ****             save_flag = true;
 8971              		.loc 21 1744 59 is_stmt 0 view .LVU2470
 8972 0246 1948     		ldr	r0, .L502+72
 8973 0248 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 8974              	.LVL561:
1744:Veno-Echo.cpp ****             save_flag = true;
 8975              		.loc 21 1744 35 view .LVU2471
 8976 024c 0F49     		ldr	r1, .L502+40
 8977              	.LBB1777:
 8978              	.LBB1778:
 8979              	.LBB1779:
 8980              	.LBB1780:
 8981              	.LBB1781:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8982              		.loc 23 397 18 view .LVU2472
 8983 024e 0122     		movs	r2, #1
 8984 0250 0F4B     		ldr	r3, .L502+44
 8985              	.LBE1781:
 8986              	.LBE1780:
 8987              	.LBE1779:
 8988              	.LBE1778:
 8989              	.LBE1777:
1744:Veno-Echo.cpp ****             save_flag = true;
 8990              		.loc 21 1744 35 view .LVU2473
 8991 0252 81ED080A 		vstr.32	s0, [r1, #32]
1745:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 294


 8992              		.loc 21 1745 13 is_stmt 1 view .LVU2474
 8993              	.LVL562:
 8994              	.LBB1786:
 8995              	.LBI1777:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8996              		.loc 24 80 5 view .LVU2475
 8997              	.LBB1785:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8998              		.loc 24 81 7 view .LVU2476
 8999              	.LBB1784:
 9000              	.LBI1779:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 9001              		.loc 23 288 7 view .LVU2477
 9002              	.LBB1783:
 9003              	.LBI1780:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 9004              		.loc 23 390 7 view .LVU2478
 9005              	.LBB1782:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 9006              		.loc 23 397 18 is_stmt 0 view .LVU2479
 9007 0256 BFF35B8F 		dmb	ish
 9008 025a 1A70     		strb	r2, [r3]
 9009 025c BFF35B8F 		dmb	ish
 9010              	.LVL563:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 9011              		.loc 23 397 18 view .LVU2480
 9012              	.LBE1782:
 9013              	.LBE1783:
 9014              	.LBE1784:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 9015              		.loc 24 81 35 view .LVU2481
 9016 0260 9EE7     		b	.L462
 9017              	.L503:
 9018 0262 00BF     		.align	2
 9019              	.L502:
 9020 0264 00000000 		.word	.LANCHOR92
 9021 0268 00000000 		.word	.LANCHOR93
 9022 026c 00000000 		.word	.LANCHOR94
 9023 0270 00000000 		.word	.LANCHOR97
 9024 0274 00000000 		.word	.LANCHOR95
 9025 0278 00000000 		.word	.LANCHOR96
 9026 027c 00000000 		.word	.LANCHOR98
 9027 0280 00000000 		.word	.LANCHOR99
 9028 0284 00000000 		.word	.LANCHOR111
 9029 0288 00000000 		.word	0
 9030 028c 00000000 		.word	.LANCHOR15
 9031 0290 00000000 		.word	.LANCHOR16
 9032 0294 00000000 		.word	.LANCHOR7
 9033 0298 00000000 		.word	.LANCHOR114
 9034 029c 00000000 		.word	.LANCHOR12
 9035 02a0 00000000 		.word	.LANCHOR113
 9036 02a4 00000000 		.word	.LANCHOR112
 9037 02a8 00000000 		.word	.LANCHOR115
 9038 02ac 00000000 		.word	.LANCHOR26
 9039 02b0 00000000 		.word	.LANCHOR89
 9040              	.LBE1785:
 9041              	.LBE1786:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 295


 9042              		.cfi_endproc
 9043              	.LFE4329:
 9045              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 9046              		.align	1
 9047              		.p2align 2,,3
 9048              		.syntax unified
 9049              		.thumb
 9050              		.thumb_func
 9051              		.fpu fpv5-d16
 9053              	_ZL13AudioCallbackPfS_j:
 9054              	.LVL564:
 9055              	.LFB4309:
 250:Veno-Echo.cpp **** 
 9056              		.loc 21 250 1 is_stmt 1 view -0
 9057              		.cfi_startproc
 9058              		@ args = 0, pretend = 0, frame = 80
 9059              		@ frame_needed = 0, uses_anonymous_args = 0
 261:Veno-Echo.cpp **** 
 9060              		.loc 21 261 1 view .LVU2483
 279:Veno-Echo.cpp **** 
 9061              		.loc 21 279 1 view .LVU2484
 279:Veno-Echo.cpp **** 
 9062              		.loc 21 279 20 is_stmt 0 view .LVU2485
 9063 0000 DFF890C0 		ldr	ip, .L645+12
 279:Veno-Echo.cpp **** 
 9064              		.loc 21 279 25 view .LVU2486
 9065 0004 204B     		ldr	r3, .L645
 250:Veno-Echo.cpp **** 
 9066              		.loc 21 250 1 view .LVU2487
 9067 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9068              		.cfi_def_cfa_offset 36
 9069              		.cfi_offset 4, -36
 9070              		.cfi_offset 5, -32
 9071              		.cfi_offset 6, -28
 9072              		.cfi_offset 7, -24
 9073              		.cfi_offset 8, -20
 9074              		.cfi_offset 9, -16
 9075              		.cfi_offset 10, -12
 9076              		.cfi_offset 11, -8
 9077              		.cfi_offset 14, -4
 279:Veno-Echo.cpp **** 
 9078              		.loc 21 279 20 view .LVU2488
 9079 000a DCF80040 		ldr	r4, [ip]
 250:Veno-Echo.cpp **** 
 9080              		.loc 21 250 1 view .LVU2489
 9081 000e 1546     		mov	r5, r2
 9082 0010 0646     		mov	r6, r0
 9083 0012 0F46     		mov	r7, r1
 279:Veno-Echo.cpp **** 
 9084              		.loc 21 279 20 view .LVU2490
 9085 0014 0134     		adds	r4, r4, #1
 279:Veno-Echo.cpp **** 
 9086              		.loc 21 279 25 view .LVU2491
 9087 0016 83FB0432 		smull	r3, r2, r3, r4
 9088              	.LVL565:
 279:Veno-Echo.cpp **** 
 9089              		.loc 21 279 25 view .LVU2492
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 296


 9090 001a E317     		asrs	r3, r4, #31
 9091 001c 2244     		add	r2, r2, r4
 9092 001e C3EBE203 		rsb	r3, r3, r2, asr #3
 9093 0022 C3EB0313 		rsb	r3, r3, r3, lsl #4
 9094 0026 E31A     		subs	r3, r4, r3
 250:Veno-Echo.cpp **** 
 9095              		.loc 21 250 1 view .LVU2493
 9096 0028 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 9097              		.cfi_def_cfa_offset 92
 9098              		.cfi_offset 80, -92
 9099              		.cfi_offset 81, -88
 9100              		.cfi_offset 82, -84
 9101              		.cfi_offset 83, -80
 9102              		.cfi_offset 84, -76
 9103              		.cfi_offset 85, -72
 9104              		.cfi_offset 86, -68
 9105              		.cfi_offset 87, -64
 9106              		.cfi_offset 88, -60
 9107              		.cfi_offset 89, -56
 9108              		.cfi_offset 90, -52
 9109              		.cfi_offset 91, -48
 9110              		.cfi_offset 92, -44
 9111              		.cfi_offset 93, -40
 279:Veno-Echo.cpp **** 
 9112              		.loc 21 279 9 view .LVU2494
 9113 002c CCF80030 		str	r3, [ip]
 292:Veno-Echo.cpp ****         {
 9114              		.loc 21 292 9 is_stmt 1 view .LVU2495
 250:Veno-Echo.cpp **** 
 9115              		.loc 21 250 1 is_stmt 0 view .LVU2496
 9116 0030 95B0     		sub	sp, sp, #84
 9117              		.cfi_def_cfa_offset 176
 9118 0032 0E2B     		cmp	r3, #14
 9119 0034 17D8     		bhi	.L505
 9120 0036 DFE813F0 		tbh	[pc, r3, lsl #1]
 9121              	.L507:
 9122 003a 9C05     		.2byte	(.L521-.L507)/2
 9123 003c 0F00     		.2byte	(.L520-.L507)/2
 9124 003e A405     		.2byte	(.L519-.L507)/2
 9125 0040 AD05     		.2byte	(.L518-.L507)/2
 9126 0042 B605     		.2byte	(.L517-.L507)/2
 9127 0044 F705     		.2byte	(.L516-.L507)/2
 9128 0046 0006     		.2byte	(.L515-.L507)/2
 9129 0048 0906     		.2byte	(.L514-.L507)/2
 9130 004a 1206     		.2byte	(.L513-.L507)/2
 9131 004c 1B06     		.2byte	(.L512-.L507)/2
 9132 004e 2406     		.2byte	(.L511-.L507)/2
 9133 0050 2D06     		.2byte	(.L510-.L507)/2
 9134 0052 3606     		.2byte	(.L509-.L507)/2
 9135 0054 3F06     		.2byte	(.L508-.L507)/2
 9136 0056 9305     		.2byte	(.L506-.L507)/2
 9137              		.p2align 1
 9138              	.L520:
 301:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 9139              		.loc 21 301 13 is_stmt 1 view .LVU2497
 302:Veno-Echo.cpp ****             break;
 9140              		.loc 21 302 17 view .LVU2498
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 297


 9141              	.LBB1879:
 9142              	.LBI1879:
 854:Veno-Echo.cpp **** {
 9143              		.loc 21 854 6 view .LVU2499
 9144              	.LBB1880:
 856:Veno-Echo.cpp **** }
 9145              		.loc 21 856 5 view .LVU2500
 856:Veno-Echo.cpp **** }
 9146              		.loc 21 856 36 is_stmt 0 view .LVU2501
 9147 0058 0021     		movs	r1, #0
 9148              	.LVL566:
 856:Veno-Echo.cpp **** }
 9149              		.loc 21 856 36 view .LVU2502
 9150 005a 0C48     		ldr	r0, .L645+4
 9151              	.LVL567:
 856:Veno-Echo.cpp **** }
 9152              		.loc 21 856 36 view .LVU2503
 9153 005c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9154              	.LVL568:
 856:Veno-Echo.cpp **** }
 9155              		.loc 21 856 19 view .LVU2504
 9156 0060 0B4B     		ldr	r3, .L645+8
 9157 0062 83ED000A 		vstr.32	s0, [r3]
 9158              	.L505:
 9159              	.LVL569:
 856:Veno-Echo.cpp **** }
 9160              		.loc 21 856 19 view .LVU2505
 9161              	.LBE1880:
 9162              	.LBE1879:
 9163              	.LBB1881:
 382:Veno-Echo.cpp ****     {   
 9164              		.loc 21 382 25 is_stmt 1 discriminator 1 view .LVU2506
 9165 0066 002D     		cmp	r5, #0
 9166 0068 00F05C85 		beq	.L504
 382:Veno-Echo.cpp ****     {   
 9167              		.loc 21 382 25 is_stmt 0 view .LVU2507
 9168 006c 0023     		movs	r3, #0
 9169 006e 013D     		subs	r5, r5, #1
 9170              	.LVL570:
 382:Veno-Echo.cpp ****     {   
 9171              		.loc 21 382 25 view .LVU2508
 9172 0070 DFF82480 		ldr	r8, .L645+16
 9173 0074 B346     		mov	fp, r6
 9174 0076 0293     		str	r3, [sp, #8]
 9175 0078 25F00103 		bic	r3, r5, #1
 9176 007c DFF81C90 		ldr	r9, .L645+20
 9177 0080 0097     		str	r7, [sp]
 9178 0082 0593     		str	r3, [sp, #20]
 9179 0084 5AE1     		b	.L577
 9180              	.L646:
 9181 0086 00BF     		.align	2
 9182              	.L645:
 9183 0088 89888888 		.word	-2004318071
 9184 008c 18000000 		.word	.LANCHOR4+24
 9185 0090 00000000 		.word	.LANCHOR5
 9186 0094 00000000 		.word	.LANCHOR116
 9187 0098 00000000 		.word	.LANCHOR131
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 298


 9188 009c 00000000 		.word	.LANCHOR132
 9189              	.LVL571:
 9190              	.L644:
 9191              	.LBB1882:
 9192              	.LBB1883:
 9193              	.LBB1884:
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9194              		.loc 21 2011 10 is_stmt 1 view .LVU2509
 9195 00a0 B8EE007A 		vmov.f32	s14, #-2.0e+0
2012:Veno-Echo.cpp ****     else
 9196              		.loc 21 2012 19 is_stmt 0 view .LVU2510
 9197 00a4 F4EE477A 		vcmp.f32	s15, s14
 9198 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9199 00ac 48BF     		it	mi
 9200 00ae F0EE477A 		vmovmi.f32	s15, s14
 9201              	.LVL572:
 9202              	.L543:
2016:Veno-Echo.cpp **** }
 9203              		.loc 21 2016 5 is_stmt 1 view .LVU2511
2016:Veno-Echo.cpp **** }
 9204              		.loc 21 2016 5 is_stmt 0 view .LVU2512
 9205              	.LBE1884:
 9206              	.LBE1883:
 9207              	.LBB1887:
 9208              	.LBB1888:
2009:Veno-Echo.cpp ****         returnval = limit;
 9209              		.loc 21 2009 5 view .LVU2513
 9210 00b2 B0EE007A 		vmov.f32	s14, #2.0e+0
 9211              	.LBE1888:
 9212              	.LBE1887:
 438:Veno-Echo.cpp **** 
 9213              		.loc 21 438 34 view .LVU2514
 9214 00b6 9DED090A 		vldr.32	s0, [sp, #36]
 437:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9215              		.loc 21 437 23 view .LVU2515
 9216 00ba CDED087A 		vstr.32	s15, [sp, #32]
 438:Veno-Echo.cpp **** 
 9217              		.loc 21 438 9 is_stmt 1 view .LVU2516
 9218              	.LVL573:
 9219              	.LBB1892:
 9220              	.LBI1887:
2006:Veno-Echo.cpp **** {
 9221              		.loc 21 2006 7 view .LVU2517
 9222              	.LBB1889:
2008:Veno-Echo.cpp ****     if (input > limit)
 9223              		.loc 21 2008 5 view .LVU2518
2009:Veno-Echo.cpp ****         returnval = limit;
 9224              		.loc 21 2009 5 view .LVU2519
 9225 00be B4EEC70A 		vcmpe.f32	s0, s14
 9226 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9227 00c6 00F36C84 		bgt	.L581
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9228              		.loc 21 2011 10 view .LVU2520
 9229 00ca B8EE007A 		vmov.f32	s14, #-2.0e+0
 9230              	.LBE1889:
 9231              	.LBE1892:
 9232              	.LBB1893:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 299


 440:Veno-Echo.cpp **** {
 9233              		.loc 21 440 1 is_stmt 0 view .LVU2521
 9234 00ce DB4B     		ldr	r3, .L647
 9235 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9236              	.LBE1893:
 9237              	.LBB1915:
 9238              	.LBB1890:
2012:Veno-Echo.cpp ****     else
 9239              		.loc 21 2012 19 view .LVU2522
 9240 00d2 B4EE470A 		vcmp.f32	s0, s14
 9241 00d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9242 00da 48BF     		it	mi
 9243 00dc B0EE470A 		vmovmi.f32	s0, s14
 9244              	.LVL574:
2016:Veno-Echo.cpp **** }
 9245              		.loc 21 2016 5 is_stmt 1 view .LVU2523
2016:Veno-Echo.cpp **** }
 9246              		.loc 21 2016 5 is_stmt 0 view .LVU2524
 9247              	.LBE1890:
 9248              	.LBE1915:
 438:Veno-Echo.cpp **** 
 9249              		.loc 21 438 23 view .LVU2525
 9250 00e0 8DED090A 		vstr.32	s0, [sp, #36]
 440:Veno-Echo.cpp **** {
 9251              		.loc 21 440 1 is_stmt 1 view .LVU2526
 9252              	.LBB1916:
 9253 00e4 002B     		cmp	r3, #0
 9254 00e6 00F06584 		beq	.L641
 9255              	.L547:
 9256              	.LBE1916:
 484:Veno-Echo.cpp ****         static float RNegFB{};
 9257              		.loc 21 484 9 view .LVU2527
 485:Veno-Echo.cpp **** 
 9258              		.loc 21 485 9 view .LVU2528
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9259              		.loc 21 488 9 view .LVU2529
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9260              		.loc 21 488 22 is_stmt 0 view .LVU2530
 9261 00ea D54B     		ldr	r3, .L647+4
 9262              	.LBB1917:
 9263              	.LBB1918:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9264              		.loc 13 57 16 view .LVU2531
 9265 00ec D8ED042A 		vldr.32	s5, [r8, #16]
 9266              	.LBE1918:
 9267              	.LBE1917:
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9268              		.loc 21 488 22 view .LVU2532
 9269 00f0 D3ED004A 		vldr.32	s9, [r3]
 9270 00f4 D34B     		ldr	r3, .L647+8
 9271              	.LBB1930:
 9272              	.LBB1919:
 9273              		.loc 13 57 37 view .LVU2533
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 300


 9274 00f6 98ED006A 		vldr.32	s12, [r8]
 9275              	.LBE1919:
 9276              	.LBE1930:
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9277              		.loc 21 488 22 view .LVU2534
 9278 00fa 93ED007A 		vldr.32	s14, [r3]
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9279              		.loc 21 491 22 view .LVU2535
 9280 00fe D24B     		ldr	r3, .L647+12
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9281              		.loc 21 488 9 view .LVU2536
 9282 0100 F4EEC74A 		vcmpe.f32	s9, s14
 9283              	.LBB1931:
 9284              	.LBB1932:
 9285              		.loc 13 57 16 view .LVU2537
 9286 0104 D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9287              		.loc 13 65 20 view .LVU2538
 9288 0108 99ED054A 		vldr.32	s8, [r9, #20]
 9289              		.loc 13 65 53 view .LVU2539
 9290 010c 99ED032A 		vldr.32	s4, [r9, #12]
 9291              	.LBE1932:
 9292              	.LBE1931:
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9293              		.loc 21 488 9 view .LVU2540
 9294 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9295              	.LBB1941:
 9296              	.LBB1920:
 9297              		.loc 13 65 20 view .LVU2541
 9298 0114 98ED053A 		vldr.32	s6, [r8, #20]
 9299              		.loc 13 65 53 view .LVU2542
 9300 0118 98ED031A 		vldr.32	s2, [r8, #12]
 9301              	.LBE1920:
 9302              	.LBE1941:
 507:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9303              		.loc 21 507 13 view .LVU2543
 9304 011c DFEDCB1A 		vldr.32	s3, .L647+16
 9305 0120 58BF     		it	pl
 9306 0122 74EEC74A 		vsubpl.f32	s9, s9, s14
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9307              		.loc 21 491 9 is_stmt 1 view .LVU2544
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9308              		.loc 21 491 22 is_stmt 0 view .LVU2545
 9309 0126 93ED007A 		vldr.32	s14, [r3]
 9310 012a C94B     		ldr	r3, .L647+20
 9311 012c D3ED006A 		vldr.32	s13, [r3]
 494:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9312              		.loc 21 494 15 view .LVU2546
 9313 0130 67EEA44A 		vmul.f32	s9, s15, s9
 9314              	.LBB1942:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 301


 9315              	.LBB1933:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9316              		.loc 13 57 37 view .LVU2547
 9317 0134 D9ED007A 		vldr.32	s15, [r9]
 9318              	.LBE1933:
 9319              	.LBE1942:
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9320              		.loc 21 491 9 view .LVU2548
 9321 0138 B4EEE67A 		vcmpe.f32	s14, s13
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9322              		.loc 21 498 36 view .LVU2549
 9323 013c C54B     		ldr	r3, .L647+24
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9324              		.loc 21 491 9 view .LVU2550
 9325 013e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9326 0142 58BF     		it	pl
 9327 0144 37EE667A 		vsubpl.f32	s14, s14, s13
 494:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9328              		.loc 21 494 9 is_stmt 1 view .LVU2551
 9329              	.LVL575:
 495:Veno-Echo.cpp **** 
 9330              		.loc 21 495 9 view .LVU2552
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9331              		.loc 21 498 36 is_stmt 0 view .LVU2553
 9332 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 495:Veno-Echo.cpp **** 
 9333              		.loc 21 495 15 view .LVU2554
 9334 014c 20EE070A 		vmul.f32	s0, s0, s14
 9335              	.LVL576:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9336              		.loc 21 498 9 is_stmt 1 view .LVU2555
 9337              	.LBB1943:
 9338              	.LBB1921:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9339              		.loc 13 57 33 is_stmt 0 view .LVU2556
 9340 0150 36EEE25A 		vsub.f32	s10, s13, s5
 9341              	.LBE1921:
 9342              	.LBE1943:
 9343              	.LBB1944:
 9344              	.LBB1934:
 9345 0154 76EEE35A 		vsub.f32	s11, s13, s7
 9346              	.LBE1934:
 9347              	.LBE1944:
 9348              	.LBB1945:
 9349              	.LBB1922:
 9350              		.loc 13 65 45 view .LVU2557
 9351 0158 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9352              		.loc 13 57 37 view .LVU2558
 9353 015c 25EE065A 		vmul.f32	s10, s10, s12
 9354              	.LBE1922:
 9355              	.LBE1945:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9356              		.loc 21 498 36 view .LVU2559
 9357 0160 93ED006A 		vldr.32	s12, [r3]
 9358              	.LBB1946:
 9359              	.LBB1935:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 302


  57:envFollow.h   ****         sample_noDC = sample - avg;
 9360              		.loc 13 57 37 view .LVU2560
 9361 0164 65EEA75A 		vmul.f32	s11, s11, s15
 9362              		.loc 13 65 45 view .LVU2561
 9363 0168 76EEC47A 		vsub.f32	s15, s13, s8
 9364              	.LBE1935:
 9365              	.LBE1946:
 9366              	.LBB1947:
 9367              	.LBB1923:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9368              		.loc 13 57 28 view .LVU2562
 9369 016c A4EEA25A 		vfma.f32	s10, s9, s5
 9370              	.LBE1923:
 9371              	.LBE1947:
 9372              	.LBB1948:
 9373              	.LBB1936:
 9374 0170 E0EE235A 		vfma.f32	s11, s0, s7
 9375              		.loc 13 65 53 view .LVU2563
 9376 0174 67EE827A 		vmul.f32	s15, s15, s4
 9377              	.LBE1936:
 9378              	.LBE1948:
 9379              	.LBB1949:
 9380              	.LBB1924:
 9381 0178 27EE017A 		vmul.f32	s14, s14, s2
 9382              	.LBE1924:
 9383              	.LBE1949:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9384              		.loc 21 498 36 view .LVU2564
 9385 017c 76EEC66A 		vsub.f32	s13, s13, s12
 9386              	.LBB1950:
 9387              	.LBB1925:
  58:envFollow.h   **** 
 9388              		.loc 13 58 30 view .LVU2565
 9389 0180 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9390              		.loc 13 57 13 view .LVU2566
 9391 0184 88ED005A 		vstr.32	s10, [r8]
 9392              	.LBE1925:
 9393              	.LBE1950:
 9394              	.LBB1951:
 9395              	.LBB1937:
  58:envFollow.h   **** 
 9396              		.loc 13 58 30 view .LVU2567
 9397 0188 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9398              		.loc 13 57 13 view .LVU2568
 9399 018c C9ED005A 		vstr.32	s11, [r9]
 9400              	.LBE1937:
 9401              	.LBE1951:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9402              		.loc 21 498 89 view .LVU2569
 9403 0190 66EE005A 		vmul.f32	s11, s12, s0
 9404              	.LBB1952:
 9405              	.LBB1926:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9406              		.loc 13 61 27 view .LVU2570
 9407 0194 F0EEC23A 		vabs.f32	s7, s4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 303


  58:envFollow.h   **** 
 9408              		.loc 13 58 21 view .LVU2571
 9409 0198 88ED022A 		vstr.32	s4, [r8, #8]
 9410              	.LBE1926:
 9411              	.LBE1952:
 9412              	.LBB1953:
 9413              	.LBB1938:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9414              		.loc 13 61 27 view .LVU2572
 9415 019c B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9416              		.loc 13 58 21 view .LVU2573
 9417 01a0 C9ED022A 		vstr.32	s5, [r9, #8]
 9418              	.LBE1938:
 9419              	.LBE1953:
 499:Veno-Echo.cpp **** 
 9420              		.loc 21 499 89 view .LVU2574
 9421 01a4 26EE246A 		vmul.f32	s12, s12, s9
 9422              	.LBB1954:
 9423              	.LBB1927:
 9424              		.loc 13 65 40 view .LVU2575
 9425 01a8 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9426              		.loc 13 61 20 view .LVU2576
 9427 01ac C8ED013A 		vstr.32	s7, [r8, #4]
 9428              	.LBE1927:
 9429              	.LBE1954:
 9430              	.LBB1955:
 9431              	.LBB1939:
 9432              		.loc 13 65 40 view .LVU2577
 9433 01b0 E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9434              		.loc 13 61 20 view .LVU2578
 9435 01b4 89ED015A 		vstr.32	s10, [r9, #4]
 9436              	.LBE1939:
 9437              	.LBE1955:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9438              		.loc 21 498 15 view .LVU2579
 9439 01b8 E6EEA45A 		vfma.f32	s11, s13, s9
 9440              	.LVL577:
 499:Veno-Echo.cpp **** 
 9441              		.loc 21 499 9 is_stmt 1 view .LVU2580
 499:Veno-Echo.cpp **** 
 9442              		.loc 21 499 15 is_stmt 0 view .LVU2581
 9443 01bc A6EE806A 		vfma.f32	s12, s13, s0
 9444              	.LVL578:
 503:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9445              		.loc 21 503 9 is_stmt 1 view .LVU2582
 9446              	.LBB1956:
 9447              	.LBI1917:
  54:envFollow.h   ****     {
 9448              		.loc 13 54 11 view .LVU2583
 9449              	.LBB1928:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9450              		.loc 13 57 9 view .LVU2584
  58:envFollow.h   **** 
 9451              		.loc 13 58 9 view .LVU2585
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 304


  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9452              		.loc 13 61 9 view .LVU2586
 9453              		.loc 13 65 9 view .LVU2587
 9454              	.LBE1928:
 9455              	.LBE1956:
 507:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9456              		.loc 21 507 13 is_stmt 0 view .LVU2588
 9457 01c0 B4EEE17A 		vcmpe.f32	s14, s3
 9458              	.LBB1957:
 9459              	.LBB1929:
 9460              		.loc 13 65 17 view .LVU2589
 9461 01c4 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9462              		.loc 13 67 9 is_stmt 1 view .LVU2590
 9463              	.LVL579:
 9464              		.loc 13 67 9 is_stmt 0 view .LVU2591
 9465              	.LBE1929:
 9466              	.LBE1957:
 504:Veno-Echo.cpp **** 
 9467              		.loc 21 504 9 is_stmt 1 view .LVU2592
 9468              	.LBB1958:
 9469              	.LBI1931:
  54:envFollow.h   ****     {
 9470              		.loc 13 54 11 view .LVU2593
 9471              	.LBB1940:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9472              		.loc 13 57 9 view .LVU2594
  58:envFollow.h   **** 
 9473              		.loc 13 58 9 view .LVU2595
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9474              		.loc 13 61 9 view .LVU2596
  65:envFollow.h   **** 
 9475              		.loc 13 65 9 view .LVU2597
  65:envFollow.h   **** 
 9476              		.loc 13 65 17 is_stmt 0 view .LVU2598
 9477 01c8 C9ED037A 		vstr.32	s15, [r9, #12]
 9478              		.loc 13 67 9 is_stmt 1 view .LVU2599
 9479              	.LVL580:
 9480              		.loc 13 67 9 is_stmt 0 view .LVU2600
 9481              	.LBE1940:
 9482              	.LBE1958:
 507:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9483              		.loc 21 507 13 is_stmt 1 view .LVU2601
 9484 01cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9485 01d0 C0F2E483 		blt	.L633
 508:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9486              		.loc 21 508 17 view .LVU2602
 508:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9487              		.loc 21 508 32 is_stmt 0 view .LVU2603
 9488 01d4 37EE617A 		vsub.f32	s14, s14, s3
 9489              	.LVL581:
 508:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9490              		.loc 21 508 47 view .LVU2604
 9491 01d8 F0EE086A 		vmov.f32	s13, #3.0e+0
 9492 01dc 27EE267A 		vmul.f32	s14, s14, s13
 9493              	.L553:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 305


 512:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9494              		.loc 21 512 13 view .LVU2605
 9495 01e0 DFED9A6A 		vldr.32	s13, .L647+16
 9496 01e4 974B     		ldr	r3, .L647+8
 9497 01e6 F4EEE67A 		vcmpe.f32	s15, s13
 9498 01ea 83ED007A 		vstr.32	s14, [r3]
 512:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9499              		.loc 21 512 13 is_stmt 1 view .LVU2606
 9500 01ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9501 01f2 C0F2D083 		blt	.L634
 513:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9502              		.loc 21 513 17 view .LVU2607
 513:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9503              		.loc 21 513 32 is_stmt 0 view .LVU2608
 9504 01f6 77EEE67A 		vsub.f32	s15, s15, s13
 9505              	.LVL582:
 513:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9506              		.loc 21 513 47 view .LVU2609
 9507 01fa B0EE087A 		vmov.f32	s14, #3.0e+0
 9508 01fe 67EE877A 		vmul.f32	s15, s15, s14
 9509              	.L555:
 9510 0202 934B     		ldr	r3, .L647+20
 517:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9511              		.loc 21 517 42 view .LVU2610
 9512 0204 78EEA58A 		vadd.f32	s17, s17, s11
 9513              	.LVL583:
 518:Veno-Echo.cpp ****  
 9514              		.loc 21 518 42 view .LVU2611
 9515 0208 38EE066A 		vadd.f32	s12, s16, s12
 9516              	.LVL584:
 518:Veno-Echo.cpp ****  
 9517              		.loc 21 518 42 view .LVU2612
 9518 020c C3ED007A 		vstr.32	s15, [r3]
 517:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9519              		.loc 21 517 9 is_stmt 1 view .LVU2613
 518:Veno-Echo.cpp ****  
 9520              		.loc 21 518 9 view .LVU2614
 521:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9521              		.loc 21 521 9 view .LVU2615
 9522              	.LVL585:
 9523              	.LBB1959:
 9524              	.LBI1959:
2006:Veno-Echo.cpp **** {
 9525              		.loc 21 2006 7 view .LVU2616
 9526              	.LBB1960:
2008:Veno-Echo.cpp ****     if (input > limit)
 9527              		.loc 21 2008 5 view .LVU2617
2009:Veno-Echo.cpp ****         returnval = limit;
 9528              		.loc 21 2009 5 view .LVU2618
 9529 0210 F0EE007A 		vmov.f32	s15, #2.0e+0
 9530 0214 F4EEE78A 		vcmpe.f32	s17, s15
 9531 0218 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9532 021c 00F35D84 		bgt	.L587
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9533              		.loc 21 2011 10 view .LVU2619
 9534 0220 F8EE007A 		vmov.f32	s15, #-2.0e+0
2012:Veno-Echo.cpp ****     else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 306


 9535              		.loc 21 2012 19 is_stmt 0 view .LVU2620
 9536 0224 F4EE678A 		vcmp.f32	s17, s15
 9537 0228 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9538 022c 48BF     		it	mi
 9539 022e F0EE678A 		vmovmi.f32	s17, s15
 9540              	.LVL586:
 9541              	.L557:
2016:Veno-Echo.cpp **** }
 9542              		.loc 21 2016 5 is_stmt 1 view .LVU2621
2016:Veno-Echo.cpp **** }
 9543              		.loc 21 2016 5 is_stmt 0 view .LVU2622
 9544              	.LBE1960:
 9545              	.LBE1959:
 9546              	.LBB1962:
 9547              	.LBB1963:
2009:Veno-Echo.cpp ****         returnval = limit;
 9548              		.loc 21 2009 5 view .LVU2623
 9549 0232 F0EE007A 		vmov.f32	s15, #2.0e+0
 9550              	.LBE1963:
 9551              	.LBE1962:
 521:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9552              		.loc 21 521 19 view .LVU2624
 9553 0236 CDED0A8A 		vstr.32	s17, [sp, #40]
 522:Veno-Echo.cpp **** 
 9554              		.loc 21 522 9 is_stmt 1 view .LVU2625
 9555              	.LVL587:
 9556              	.LBB1966:
 9557              	.LBI1962:
2006:Veno-Echo.cpp **** {
 9558              		.loc 21 2006 7 view .LVU2626
 9559              	.LBB1964:
2008:Veno-Echo.cpp ****     if (input > limit)
 9560              		.loc 21 2008 5 view .LVU2627
2009:Veno-Echo.cpp ****         returnval = limit;
 9561              		.loc 21 2009 5 view .LVU2628
 9562 023a B4EEE76A 		vcmpe.f32	s12, s15
 9563 023e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9564 0242 00F34684 		bgt	.L588
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9565              		.loc 21 2011 10 view .LVU2629
 9566 0246 F8EE007A 		vmov.f32	s15, #-2.0e+0
2012:Veno-Echo.cpp ****     else
 9567              		.loc 21 2012 19 is_stmt 0 view .LVU2630
 9568 024a B4EE676A 		vcmp.f32	s12, s15
 9569 024e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9570 0252 48BF     		it	mi
 9571 0254 B0EE676A 		vmovmi.f32	s12, s15
 9572              	.LVL588:
 9573              	.L559:
2016:Veno-Echo.cpp **** }
 9574              		.loc 21 2016 5 is_stmt 1 view .LVU2631
2016:Veno-Echo.cpp **** }
 9575              		.loc 21 2016 5 is_stmt 0 view .LVU2632
 9576              	.LBE1964:
 9577              	.LBE1966:
 527:Veno-Echo.cpp ****         delayR.Write(combinedR);
 9578              		.loc 21 527 21 view .LVU2633
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 307


 9579 0258 0AA9     		add	r1, sp, #40
 9580 025a 7F48     		ldr	r0, .L647+28
 522:Veno-Echo.cpp **** 
 9581              		.loc 21 522 19 view .LVU2634
 9582 025c 8DED0B6A 		vstr.32	s12, [sp, #44]
 527:Veno-Echo.cpp ****         delayR.Write(combinedR);
 9583              		.loc 21 527 9 is_stmt 1 view .LVU2635
 527:Veno-Echo.cpp ****         delayR.Write(combinedR);
 9584              		.loc 21 527 21 is_stmt 0 view .LVU2636
 9585 0260 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9586              	.LVL589:
 528:Veno-Echo.cpp **** 
 9587              		.loc 21 528 9 is_stmt 1 view .LVU2637
 528:Veno-Echo.cpp **** 
 9588              		.loc 21 528 21 is_stmt 0 view .LVU2638
 9589 0264 0BA9     		add	r1, sp, #44
 9590 0266 7D48     		ldr	r0, .L647+32
 9591 0268 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9592              	.LVL590:
 531:Veno-Echo.cpp ****         float mixR;
 9593              		.loc 21 531 9 is_stmt 1 view .LVU2639
 532:Veno-Echo.cpp **** 
 9594              		.loc 21 532 9 view .LVU2640
 534:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9595              		.loc 21 534 9 view .LVU2641
 534:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9596              		.loc 21 534 53 is_stmt 0 view .LVU2642
 9597 026c 09AA     		add	r2, sp, #36
 9598 026e 08A9     		add	r1, sp, #32
 9599 0270 7B48     		ldr	r0, .L647+36
 9600 0272 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9601              	.LVL591:
 535:Veno-Echo.cpp **** 
 9602              		.loc 21 535 53 view .LVU2643
 9603 0276 08AA     		add	r2, sp, #32
 9604 0278 09A9     		add	r1, sp, #36
 9605 027a 7948     		ldr	r0, .L647+36
 534:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9606              		.loc 21 534 81 view .LVU2644
 9607 027c 8DED0C0A 		vstr.32	s0, [sp, #48]
 535:Veno-Echo.cpp **** 
 9608              		.loc 21 535 9 is_stmt 1 view .LVU2645
 535:Veno-Echo.cpp **** 
 9609              		.loc 21 535 53 is_stmt 0 view .LVU2646
 9610 0280 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9611              	.LVL592:
 9612              	.LBB1967:
 9613              	.LBB1968:
2009:Veno-Echo.cpp ****         returnval = limit;
 9614              		.loc 21 2009 5 view .LVU2647
 9615 0284 B0EE007A 		vmov.f32	s14, #2.0e+0
 9616              	.LBE1968:
 9617              	.LBE1967:
 538:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9618              		.loc 21 538 38 view .LVU2648
 9619 0288 DDED0C7A 		vldr.32	s15, [sp, #48]
 538:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 308


 9620              		.loc 21 538 9 is_stmt 1 view .LVU2649
 9621              	.LVL593:
 9622              	.LBB1971:
 9623              	.LBI1967:
2006:Veno-Echo.cpp **** {
 9624              		.loc 21 2006 7 view .LVU2650
 9625              	.LBB1969:
2008:Veno-Echo.cpp ****     if (input > limit)
 9626              		.loc 21 2008 5 view .LVU2651
2009:Veno-Echo.cpp ****         returnval = limit;
 9627              		.loc 21 2009 5 view .LVU2652
 9628 028c F4EEC77A 		vcmpe.f32	s15, s14
 9629 0290 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9630 0294 00F32584 		bgt	.L589
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9631              		.loc 21 2011 10 view .LVU2653
 9632 0298 B8EE007A 		vmov.f32	s14, #-2.0e+0
2012:Veno-Echo.cpp ****     else
 9633              		.loc 21 2012 19 is_stmt 0 view .LVU2654
 9634 029c F4EE477A 		vcmp.f32	s15, s14
 9635 02a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9636 02a4 48BF     		it	mi
 9637 02a6 F0EE477A 		vmovmi.f32	s15, s14
 9638              	.LVL594:
 9639              	.L561:
2016:Veno-Echo.cpp **** }
 9640              		.loc 21 2016 5 is_stmt 1 view .LVU2655
2016:Veno-Echo.cpp **** }
 9641              		.loc 21 2016 5 is_stmt 0 view .LVU2656
 9642              	.LBE1969:
 9643              	.LBE1971:
 9644              	.LBB1972:
 9645              	.LBB1973:
2009:Veno-Echo.cpp ****         returnval = limit;
 9646              		.loc 21 2009 5 view .LVU2657
 9647 02aa B0EE007A 		vmov.f32	s14, #2.0e+0
 9648              	.LBE1973:
 9649              	.LBE1972:
 538:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9650              		.loc 21 538 27 view .LVU2658
 9651 02ae CDED0C7A 		vstr.32	s15, [sp, #48]
 539:Veno-Echo.cpp **** 
 9652              		.loc 21 539 9 is_stmt 1 view .LVU2659
 9653              	.LVL595:
 9654              	.LBB1977:
 9655              	.LBI1972:
2006:Veno-Echo.cpp **** {
 9656              		.loc 21 2006 7 view .LVU2660
 9657              	.LBB1974:
2008:Veno-Echo.cpp ****     if (input > limit)
 9658              		.loc 21 2008 5 view .LVU2661
2009:Veno-Echo.cpp ****         returnval = limit;
 9659              		.loc 21 2009 5 view .LVU2662
 9660 02b2 B4EEC70A 		vcmpe.f32	s0, s14
 9661 02b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9662 02ba 00F3D382 		bgt	.L590
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 309


 9663              		.loc 21 2011 10 view .LVU2663
 9664 02be B8EE007A 		vmov.f32	s14, #-2.0e+0
 9665              	.LBE1974:
 9666              	.LBE1977:
 9667              	.LBB1978:
 541:Veno-Echo.cpp **** {
 9668              		.loc 21 541 1 is_stmt 0 view .LVU2664
 9669 02c2 5E4B     		ldr	r3, .L647
 9670 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9671              	.LBE1978:
 9672              	.LBB2001:
 9673              	.LBB1975:
2012:Veno-Echo.cpp ****     else
 9674              		.loc 21 2012 19 view .LVU2665
 9675 02c6 B4EE470A 		vcmp.f32	s0, s14
 9676 02ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9677 02ce 48BF     		it	mi
 9678 02d0 B0EE470A 		vmovmi.f32	s0, s14
 9679              	.LVL596:
2016:Veno-Echo.cpp **** }
 9680              		.loc 21 2016 5 is_stmt 1 view .LVU2666
2016:Veno-Echo.cpp **** }
 9681              		.loc 21 2016 5 is_stmt 0 view .LVU2667
 9682              	.LBE1975:
 9683              	.LBE2001:
 539:Veno-Echo.cpp **** 
 9684              		.loc 21 539 27 view .LVU2668
 9685 02d4 8DED0D0A 		vstr.32	s0, [sp, #52]
 541:Veno-Echo.cpp **** {
 9686              		.loc 21 541 1 is_stmt 1 view .LVU2669
 9687              	.LBB2002:
 9688 02d8 002B     		cmp	r3, #0
 9689 02da 40F0CC82 		bne	.L642
 9690              	.LVL597:
 9691              	.L565:
 541:Veno-Echo.cpp **** {
 9692              		.loc 21 541 1 is_stmt 0 view .LVU2670
 9693              	.LBE2002:
 582:Veno-Echo.cpp ****         {
 9694              		.loc 21 582 9 is_stmt 1 view .LVU2671
 582:Veno-Echo.cpp ****         {
 9695              		.loc 21 582 19 is_stmt 0 view .LVU2672
 9696 02de 614B     		ldr	r3, .L647+40
 582:Veno-Echo.cpp ****         {
 9697              		.loc 21 582 9 view .LVU2673
 9698 02e0 F6EE006A 		vmov.f32	s13, #5.0e-1
 582:Veno-Echo.cpp ****         {
 9699              		.loc 21 582 19 view .LVU2674
 9700 02e4 93ED007A 		vldr.32	s14, [r3]
 582:Veno-Echo.cpp ****         {
 9701              		.loc 21 582 9 view .LVU2675
 9702 02e8 B4EEE67A 		vcmpe.f32	s14, s13
 9703 02ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9704 02f0 40F18F82 		bpl	.L635
 584:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9705              		.loc 21 584 13 is_stmt 1 view .LVU2676
 584:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 310


 9706              		.loc 21 584 34 is_stmt 0 view .LVU2677
 9707 02f4 37EE077A 		vadd.f32	s14, s14, s14
 584:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9708              		.loc 21 584 18 view .LVU2678
 9709 02f8 9BED006A 		vldr.32	s12, [fp]
 585:Veno-Echo.cpp ****         }
 9710              		.loc 21 585 18 view .LVU2679
 9711 02fc DBED016A 		vldr.32	s13, [fp, #4]
 584:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9712              		.loc 21 584 18 view .LVU2680
 9713 0300 A7EE276A 		vfma.f32	s12, s14, s15
 585:Veno-Echo.cpp ****         }
 9714              		.loc 21 585 18 view .LVU2681
 9715 0304 E7EE006A 		vfma.f32	s13, s14, s0
 584:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9716              		.loc 21 584 18 view .LVU2682
 9717 0308 F0EE467A 		vmov.f32	s15, s12
 9718              	.LVL598:
 585:Veno-Echo.cpp ****         }
 9719              		.loc 21 585 13 is_stmt 1 view .LVU2683
 585:Veno-Echo.cpp ****         }
 9720              		.loc 21 585 18 is_stmt 0 view .LVU2684
 9721 030c B0EE660A 		vmov.f32	s0, s13
 9722              	.LVL599:
 9723              	.L571:
 599:Veno-Echo.cpp ****         {
 9724              		.loc 21 599 9 is_stmt 1 view .LVU2685
 9725 0310 554B     		ldr	r3, .L647+44
 9726 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9727 0314 002B     		cmp	r3, #0
 9728 0316 00F07682 		beq	.L574
 601:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9729              		.loc 21 601 13 view .LVU2686
 601:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9730              		.loc 21 601 20 is_stmt 0 view .LVU2687
 9731 031a 0023     		movs	r3, #0
 9732 031c 009A     		ldr	r2, [sp]
 9733 031e 1360     		str	r3, [r2]	@ float
 602:Veno-Echo.cpp ****         }
 9734              		.loc 21 602 13 is_stmt 1 view .LVU2688
 602:Veno-Echo.cpp ****         }
 9735              		.loc 21 602 22 is_stmt 0 view .LVU2689
 9736 0320 5360     		str	r3, [r2, #4]	@ float
 9737              	.L575:
 9738              	.LBE1882:
 382:Veno-Echo.cpp ****     {   
 9739              		.loc 21 382 5 is_stmt 1 discriminator 2 view .LVU2690
 9740 0322 009B     		ldr	r3, [sp]
 9741 0324 0BF1080B 		add	fp, fp, #8
 382:Veno-Echo.cpp ****     {   
 9742              		.loc 21 382 35 is_stmt 0 discriminator 2 view .LVU2691
 9743 0328 029A     		ldr	r2, [sp, #8]
 382:Veno-Echo.cpp ****     {   
 9744              		.loc 21 382 25 discriminator 2 view .LVU2692
 9745 032a 0599     		ldr	r1, [sp, #20]
 9746 032c 0833     		adds	r3, r3, #8
 9747 032e 8A42     		cmp	r2, r1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 311


 9748 0330 0093     		str	r3, [sp]
 382:Veno-Echo.cpp ****     {   
 9749              		.loc 21 382 35 discriminator 2 view .LVU2693
 9750 0332 02F10203 		add	r3, r2, #2
 9751              	.LVL600:
 382:Veno-Echo.cpp ****     {   
 9752              		.loc 21 382 25 is_stmt 1 discriminator 2 view .LVU2694
 9753 0336 00F0F583 		beq	.L504
 9754 033a 0293     		str	r3, [sp, #8]
 9755              	.LVL601:
 9756              	.L577:
 9757              	.LBB2289:
 384:Veno-Echo.cpp ****         Update_Mod();
 9758              		.loc 21 384 9 view .LVU2695
 384:Veno-Echo.cpp ****         Update_Mod();
 9759              		.loc 21 384 20 is_stmt 0 view .LVU2696
 9760 033c FFF7FEFF 		bl	_Z11UpdateClockv
 9761              	.LVL602:
 385:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 9762              		.loc 21 385 9 is_stmt 1 view .LVU2697
 9763              	.LBB2003:
 9764              	.LBB2004:
 9765              	.LBB2005:
 9766              	.LBB2006:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 312


 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 313


 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9767              		.loc 20 174 71 is_stmt 0 view .LVU2698
 9768 0340 DFF898A1 		ldr	r10, .L647+160
 9769              	.LBE2006:
 9770              	.LBE2005:
 9771              	.LBE2004:
 9772              	.LBE2003:
 385:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 9773              		.loc 21 385 19 view .LVU2699
 9774 0344 FFF7FEFF 		bl	_Z10Update_Modv
 9775              	.LVL603:
 386:Veno-Echo.cpp **** 
 9776              		.loc 21 386 9 is_stmt 1 view .LVU2700
 9777              	.LBB2058:
 9778              	.LBI2058:
1795:Veno-Echo.cpp **** {
 9779              		.loc 21 1795 6 view .LVU2701
 9780              	.LBB2059:
1797:Veno-Echo.cpp ****     delayL.SetBaseTempo(newTempo);
 9781              		.loc 21 1797 5 view .LVU2702
1797:Veno-Echo.cpp ****     delayL.SetBaseTempo(newTempo);
 9782              		.loc 21 1797 47 is_stmt 0 view .LVU2703
 9783 0348 4848     		ldr	r0, .L647+48
 9784 034a FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 9785              	.LVL604:
 9786              	.LBB2060:
 9787              	.LBB2061:
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 9788              		.loc 18 71 53 view .LVU2704
 9789 034e 424A     		ldr	r2, .L647+28
 9790              	.LBE2061:
 9791              	.LBE2060:
1797:Veno-Echo.cpp ****     delayL.SetBaseTempo(newTempo);
 9792              		.loc 21 1797 47 view .LVU2705
 9793 0350 0346     		mov	r3, r0
 9794              	.LBE2059:
 9795              	.LBE2058:
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9796              		.loc 21 389 51 view .LVU2706
 9797 0352 4748     		ldr	r0, .L647+52
 9798              	.LBB2073:
 9799              	.LBB2041:
 9800              	.LBB2024:
 9801              	.LBB2007:
 9802              		.loc 20 174 46 view .LVU2707
 9803 0354 9FED47AA 		vldr.32	s20, .L647+56
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 314


 9804              		.loc 20 175 77 view .LVU2708
 9805 0358 F7EE00AA 		vmov.f32	s21, #1.0e+0
 9806              	.LVL605:
 9807              		.loc 20 175 77 view .LVU2709
 9808              	.LBE2007:
 9809              	.LBE2024:
 9810              	.LBE2041:
 9811              	.LBE2073:
 9812              	.LBB2074:
 9813              	.LBB2070:
1798:Veno-Echo.cpp ****     delayR.SetBaseTempo(newTempo);
 9814              		.loc 21 1798 5 is_stmt 1 view .LVU2710
 9815              	.LBB2063:
 9816              	.LBI2060:
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 9817              		.loc 18 71 6 view .LVU2711
 9818              	.LBB2062:
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 9819              		.loc 18 71 42 view .LVU2712
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 9820              		.loc 18 71 53 is_stmt 0 view .LVU2713
 9821 035c C2F81431 		str	r3, [r2, #276]
 9822              	.LBE2062:
 9823              	.LBE2063:
1799:Veno-Echo.cpp **** }
 9824              		.loc 21 1799 5 is_stmt 1 view .LVU2714
 9825              	.LVL606:
 9826              	.LBB2064:
 9827              	.LBI2064:
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 9828              		.loc 18 71 6 view .LVU2715
 9829              	.LBB2065:
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 9830              		.loc 18 71 42 view .LVU2716
 9831              	.LBE2065:
 9832              	.LBE2064:
 9833              	.LBE2070:
 9834              	.LBE2074:
 9835              	.LBB2075:
 9836              	.LBB2042:
 9837              	.LBB2025:
 9838              	.LBB2008:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9839              		.loc 20 174 82 is_stmt 0 view .LVU2717
 9840 0360 F6EE028A 		vmov.f32	s17, #5.625e-1
 9841              	.LBE2008:
 9842              	.LBE2025:
 9843              	.LBE2042:
 9844              	.LBE2075:
 9845              	.LBB2076:
 9846              	.LBB2071:
 9847              	.LBB2068:
 9848              	.LBB2066:
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 9849              		.loc 18 71 53 view .LVU2718
 9850 0364 3D4A     		ldr	r2, .L647+32
 9851              	.LBE2066:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 315


 9852              	.LBE2068:
 9853              	.LBE2071:
 9854              	.LBE2076:
 9855              	.LBB2077:
 9856              	.LBB2043:
 9857              	.LBB2026:
 9858              	.LBB2009:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9859              		.loc 20 174 103 view .LVU2719
 9860 0366 DFED449A 		vldr.32	s19, .L647+60
 9861              	.LBE2009:
 9862              	.LBE2026:
 9863              	.LBE2043:
 9864              	.LBE2077:
 9865              	.LBB2078:
 9866              	.LBB2072:
 9867              	.LBB2069:
 9868              	.LBB2067:
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 9869              		.loc 18 71 53 view .LVU2720
 9870 036a C2F81431 		str	r3, [r2, #276]
 9871              	.LVL607:
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 9872              		.loc 18 71 53 view .LVU2721
 9873              	.LBE2067:
 9874              	.LBE2069:
 9875              	.LBE2072:
 9876              	.LBE2078:
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9877              		.loc 21 389 9 is_stmt 1 view .LVU2722
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9878              		.loc 21 389 51 is_stmt 0 view .LVU2723
 9879 036e FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9880              	.LVL608:
 9881 0372 0146     		mov	r1, r0
 9882 0374 4148     		ldr	r0, .L647+64
 9883 0376 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9884              	.LVL609:
 390:Veno-Echo.cpp ****         
 9885              		.loc 21 390 51 view .LVU2724
 9886 037a 4148     		ldr	r0, .L647+68
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9887              		.loc 21 389 51 view .LVU2725
 9888 037c F0EE40BA 		vmov.f32	s23, s0
 9889              	.LVL610:
 390:Veno-Echo.cpp ****         
 9890              		.loc 21 390 9 is_stmt 1 view .LVU2726
 390:Veno-Echo.cpp ****         
 9891              		.loc 21 390 51 is_stmt 0 view .LVU2727
 9892 0380 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9893              	.LVL611:
 390:Veno-Echo.cpp ****         
 9894              		.loc 21 390 51 view .LVU2728
 9895 0384 0146     		mov	r1, r0
 9896 0386 3F48     		ldr	r0, .L647+72
 9897 0388 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9898              	.LVL612:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 316


 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9899              		.loc 21 392 44 view .LVU2729
 9900 038c 3E48     		ldr	r0, .L647+76
 390:Veno-Echo.cpp ****         
 9901              		.loc 21 390 51 view .LVU2730
 9902 038e B0EE409A 		vmov.f32	s18, s0
 9903              	.LVL613:
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9904              		.loc 21 392 9 is_stmt 1 view .LVU2731
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9905              		.loc 21 392 44 is_stmt 0 view .LVU2732
 9906 0392 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9907              	.LVL614:
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9908              		.loc 21 392 44 view .LVU2733
 9909 0396 0146     		mov	r1, r0
 9910 0398 3C48     		ldr	r0, .L647+80
 9911 039a FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9912              	.LVL615:
 393:Veno-Echo.cpp **** 
 9913              		.loc 21 393 44 view .LVU2734
 9914 039e 3C48     		ldr	r0, .L647+84
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9915              		.loc 21 392 44 view .LVU2735
 9916 03a0 B0EE408A 		vmov.f32	s16, s0
 9917              	.LVL616:
 393:Veno-Echo.cpp **** 
 9918              		.loc 21 393 9 is_stmt 1 view .LVU2736
 393:Veno-Echo.cpp **** 
 9919              		.loc 21 393 44 is_stmt 0 view .LVU2737
 9920 03a4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9921              	.LVL617:
 393:Veno-Echo.cpp **** 
 9922              		.loc 21 393 44 view .LVU2738
 9923 03a8 0146     		mov	r1, r0
 9924 03aa 3A48     		ldr	r0, .L647+88
 9925 03ac FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9926              	.LVL618:
 9927              	.LBB2079:
 9928              	.LBB2080:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9929              		.loc 11 60 42 view .LVU2739
 9930 03b0 3948     		ldr	r0, .L647+92
 9931              	.LBE2080:
 9932              	.LBE2079:
 416:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9933              		.loc 21 416 49 view .LVU2740
 9934 03b2 3A4B     		ldr	r3, .L647+96
 393:Veno-Echo.cpp **** 
 9935              		.loc 21 393 44 view .LVU2741
 9936 03b4 F0EE407A 		vmov.f32	s15, s0
 9937              	.LVL619:
 396:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 9938              		.loc 21 396 9 is_stmt 1 view .LVU2742
 9939              	.LBB2082:
 9940              	.LBI2079:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 317


 9941              		.loc 11 60 17 view .LVU2743
 9942              	.LBB2081:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9943              		.loc 11 60 37 view .LVU2744
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9944              		.loc 11 60 42 is_stmt 0 view .LVU2745
 9945 03b8 C0ED00BA 		vstr.32	s23, [r0]
 9946              	.LVL620:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9947              		.loc 11 60 42 view .LVU2746
 9948              	.LBE2081:
 9949              	.LBE2082:
 397:Veno-Echo.cpp ****         
 9950              		.loc 21 397 9 is_stmt 1 view .LVU2747
 9951              	.LBB2083:
 9952              	.LBI2083:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9953              		.loc 11 60 17 view .LVU2748
 9954              	.LBB2084:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9955              		.loc 11 60 37 view .LVU2749
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9956              		.loc 11 60 42 is_stmt 0 view .LVU2750
 9957 03bc 3848     		ldr	r0, .L647+100
 9958              	.LBE2084:
 9959              	.LBE2083:
 416:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9960              		.loc 21 416 49 view .LVU2751
 9961 03be 1D68     		ldr	r5, [r3]
 9962              	.LBB2086:
 9963              	.LBB2085:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9964              		.loc 11 60 42 view .LVU2752
 9965 03c0 80ED009A 		vstr.32	s18, [r0]
 9966              	.LVL621:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9967              		.loc 11 60 42 view .LVU2753
 9968              	.LBE2085:
 9969              	.LBE2086:
 399:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 9970              		.loc 21 399 9 is_stmt 1 view .LVU2754
 9971              	.LBB2087:
 9972              	.LBI2087:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9973              		.loc 11 60 17 view .LVU2755
 9974              	.LBB2088:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9975              		.loc 11 60 37 view .LVU2756
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9976              		.loc 11 60 42 is_stmt 0 view .LVU2757
 9977 03c4 3748     		ldr	r0, .L647+104
 9978              	.LBE2088:
 9979              	.LBE2087:
 9980              	.LBB2090:
 9981              	.LBB2044:
 9982              	.LBB2027:
 9983              	.LBB2010:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 318


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9984              		.loc 20 174 71 view .LVU2758
 9985 03c6 05EB0A02 		add	r2, r5, r10
 9986              	.LBE2010:
 9987              	.LBE2027:
 9988              	.LBE2044:
 9989              	.LBE2090:
 409:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9990              		.loc 21 409 27 view .LVU2759
 9991 03ca 374B     		ldr	r3, .L647+108
 9992              	.LBB2091:
 9993              	.LBB2089:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9994              		.loc 11 60 42 view .LVU2760
 9995 03cc 80ED008A 		vstr.32	s16, [r0]
 9996              	.LVL622:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9997              		.loc 11 60 42 view .LVU2761
 9998              	.LBE2089:
 9999              	.LBE2091:
 400:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 10000              		.loc 21 400 9 is_stmt 1 view .LVU2762
 10001              	.LBB2092:
 10002              	.LBI2092:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10003              		.loc 11 60 17 view .LVU2763
 10004              	.LBB2093:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10005              		.loc 11 60 37 view .LVU2764
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10006              		.loc 11 60 42 is_stmt 0 view .LVU2765
 10007 03d0 3648     		ldr	r0, .L647+112
 10008              	.LBE2093:
 10009              	.LBE2092:
 10010              	.LBB2095:
 10011              	.LBB2045:
 10012              	.LBB2028:
 10013              	.LBB2011:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10014              		.loc 20 174 71 view .LVU2766
 10015 03d2 92ED00BA 		vldr.32	s22, [r2]
 10016              	.LBE2011:
 10017              	.LBE2028:
 10018              	.LBE2045:
 10019              	.LBE2095:
 10020              	.LBB2096:
 10021              	.LBB2094:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10022              		.loc 11 60 42 view .LVU2767
 10023 03d6 80ED008A 		vstr.32	s16, [r0]
 10024              	.LVL623:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10025              		.loc 11 60 42 view .LVU2768
 10026              	.LBE2094:
 10027              	.LBE2096:
 401:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 10028              		.loc 21 401 9 is_stmt 1 view .LVU2769
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 319


 10029              	.LBB2097:
 10030              	.LBI2097:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10031              		.loc 11 60 17 view .LVU2770
 10032              	.LBB2098:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10033              		.loc 11 60 37 view .LVU2771
 10034              	.LBE2098:
 10035              	.LBE2097:
 10036              	.LBB2101:
 10037              	.LBB2102:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10038              		.loc 11 60 42 is_stmt 0 view .LVU2772
 10039 03da 3548     		ldr	r0, .L647+116
 10040              	.LBE2102:
 10041              	.LBE2101:
 10042              	.LBB2105:
 10043              	.LBB2046:
 10044              	.LBB2029:
 10045              	.LBB2012:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10046              		.loc 20 174 46 view .LVU2773
 10047 03dc 2BEE0A0A 		vmul.f32	s0, s22, s20
 10048              	.LVL624:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10049              		.loc 20 174 71 view .LVU2774
 10050 03e0 0492     		str	r2, [sp, #16]
 10051              		.loc 20 175 77 view .LVU2775
 10052 03e2 3AEECBCA 		vsub.f32	s24, s21, s22
 10053              	.LBE2012:
 10054              	.LBE2029:
 10055              	.LBE2046:
 10056              	.LBE2105:
 10057              	.LBB2106:
 10058              	.LBB2103:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10059              		.loc 11 60 42 view .LVU2776
 10060 03e6 80ED008A 		vstr.32	s16, [r0]
 10061              	.LBE2103:
 10062              	.LBE2106:
 10063              	.LBB2107:
 10064              	.LBB2108:
 10065 03ea 3248     		ldr	r0, .L647+120
 10066              	.LBE2108:
 10067              	.LBE2107:
 409:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10068              		.loc 21 409 27 view .LVU2777
 10069 03ec 1B68     		ldr	r3, [r3]	@ float
 10070              	.LBB2111:
 10071              	.LBB2109:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10072              		.loc 11 60 42 view .LVU2778
 10073 03ee 80ED008A 		vstr.32	s16, [r0]
 10074              	.LBE2109:
 10075              	.LBE2111:
 10076              	.LBB2112:
 10077              	.LBB2099:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 320


 10078 03f2 3148     		ldr	r0, .L647+124
 10079              	.LBE2099:
 10080              	.LBE2112:
 10081              	.LBB2113:
 10082              	.LBB2047:
 10083              	.LBB2030:
 10084              	.LBB2013:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10085              		.loc 20 174 98 view .LVU2779
 10086 03f4 9FED319A 		vldr.32	s18, .L647+128
 10087              	.LVL625:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10088              		.loc 20 174 98 view .LVU2780
 10089              	.LBE2013:
 10090              	.LBE2030:
 10091              	.LBE2047:
 10092              	.LBE2113:
 10093              	.LBB2114:
 10094              	.LBB2100:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10095              		.loc 11 60 42 view .LVU2781
 10096 03f8 C0ED007A 		vstr.32	s15, [r0]
 10097              	.LVL626:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10098              		.loc 11 60 42 view .LVU2782
 10099              	.LBE2100:
 10100              	.LBE2114:
 402:Veno-Echo.cpp **** 
 10101              		.loc 21 402 9 is_stmt 1 view .LVU2783
 10102              	.LBB2115:
 10103              	.LBI2115:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10104              		.loc 11 60 17 view .LVU2784
 10105              	.LBB2116:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10106              		.loc 11 60 37 view .LVU2785
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10107              		.loc 11 60 42 is_stmt 0 view .LVU2786
 10108 03fc 3048     		ldr	r0, .L647+132
 10109              	.LBE2116:
 10110              	.LBE2115:
 10111              	.LBB2118:
 10112              	.LBB2048:
 10113              	.LBB2031:
 10114              	.LBB2014:
 162:delayline_reverse.h **** 
 10115              		.loc 20 162 23 view .LVU2787
 10116 03fe D5E90267 		ldrd	r6, r7, [r5, #8]
 10117              	.LBE2014:
 10118              	.LBE2031:
 10119              	.LBE2048:
 10120              	.LBE2118:
 10121              	.LBB2119:
 10122              	.LBB2117:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10123              		.loc 11 60 42 view .LVU2788
 10124 0402 C0ED007A 		vstr.32	s15, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 321


 10125              	.LVL627:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10126              		.loc 11 60 42 view .LVU2789
 10127              	.LBE2117:
 10128              	.LBE2119:
 404:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 10129              		.loc 21 404 9 is_stmt 1 view .LVU2790
 10130              	.LBB2120:
 10131              	.LBI2101:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10132              		.loc 11 60 17 view .LVU2791
 10133              	.LBB2104:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10134              		.loc 11 60 37 view .LVU2792
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10135              		.loc 11 60 37 is_stmt 0 view .LVU2793
 10136              	.LBE2104:
 10137              	.LBE2120:
 405:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 10138              		.loc 21 405 9 is_stmt 1 view .LVU2794
 10139              	.LBB2121:
 10140              	.LBI2107:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10141              		.loc 11 60 17 view .LVU2795
 10142              	.LBB2110:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10143              		.loc 11 60 37 view .LVU2796
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10144              		.loc 11 60 37 is_stmt 0 view .LVU2797
 10145              	.LBE2110:
 10146              	.LBE2121:
 406:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 10147              		.loc 21 406 9 is_stmt 1 view .LVU2798
 10148              	.LBB2122:
 10149              	.LBI2122:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10150              		.loc 11 60 17 view .LVU2799
 10151              	.LBB2123:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10152              		.loc 11 60 37 view .LVU2800
 10153              	.LBE2123:
 10154              	.LBE2122:
 10155              	.LBB2126:
 10156              	.LBB2049:
 10157              	.LBB2032:
 10158              	.LBB2015:
 162:delayline_reverse.h **** 
 10159              		.loc 20 162 11 is_stmt 0 view .LVU2801
 10160 0406 05EB8702 		add	r2, r5, r7, lsl #2
 10161              	.LBE2015:
 10162              	.LBE2032:
 10163              	.LBE2049:
 10164              	.LBE2126:
 10165              	.LBB2127:
 10166              	.LBB2124:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10167              		.loc 11 60 42 view .LVU2802
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 322


 10168 040a 2E48     		ldr	r0, .L647+136
 10169              	.LBE2124:
 10170              	.LBE2127:
 10171              	.LBB2128:
 10172              	.LBB2050:
 10173              	.LBB2033:
 10174              	.LBB2016:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10175              		.loc 20 161 11 view .LVU2803
 10176 040c 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 10177              		.loc 20 162 11 view .LVU2804
 10178 0410 D2ED06DA 		vldr.32	s27, [r2, #24]
 10179              	.LBE2016:
 10180              	.LBE2033:
 10181              	.LBE2050:
 10182              	.LBE2128:
 10183              	.LBB2129:
 10184              	.LBB2130:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10185              		.loc 11 60 42 view .LVU2805
 10186 0414 2C4A     		ldr	r2, .L647+140
 10187              	.LBE2130:
 10188              	.LBE2129:
 10189              	.LBB2133:
 10190              	.LBB2125:
 10191 0416 C0ED007A 		vstr.32	s15, [r0]
 10192              	.LVL628:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10193              		.loc 11 60 42 view .LVU2806
 10194              	.LBE2125:
 10195              	.LBE2133:
 407:Veno-Echo.cpp **** 
 10196              		.loc 21 407 9 is_stmt 1 view .LVU2807
 10197              	.LBB2134:
 10198              	.LBI2134:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10199              		.loc 11 60 17 view .LVU2808
 10200              	.LBB2135:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10201              		.loc 11 60 37 view .LVU2809
 10202              	.LBE2135:
 10203              	.LBE2134:
 10204              	.LBB2138:
 10205              	.LBB2131:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10206              		.loc 11 60 42 is_stmt 0 view .LVU2810
 10207 041a 1360     		str	r3, [r2]	@ float
 10208              	.LBE2131:
 10209              	.LBE2138:
 10210              	.LBB2139:
 10211              	.LBB2140:
 10212 041c 2B4A     		ldr	r2, .L647+144
 10213              	.LBE2140:
 10214              	.LBE2139:
 10215              	.LBB2143:
 10216              	.LBB2136:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 323


 10217 041e 2C48     		ldr	r0, .L647+148
 10218              	.LBE2136:
 10219              	.LBE2143:
 10220              	.LBB2144:
 10221              	.LBB2141:
 10222 0420 1360     		str	r3, [r2]	@ float
 10223              	.LBE2141:
 10224              	.LBE2144:
 10225              	.LBB2145:
 10226              	.LBB2146:
 10227 0422 2C4A     		ldr	r2, .L647+152
 10228              	.LBE2146:
 10229              	.LBE2145:
 10230              	.LBB2148:
 10231              	.LBB2137:
 10232 0424 C0ED007A 		vstr.32	s15, [r0]
 10233              	.LVL629:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10234              		.loc 11 60 42 view .LVU2811
 10235              	.LBE2137:
 10236              	.LBE2148:
 409:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10237              		.loc 21 409 9 is_stmt 1 view .LVU2812
 10238              	.LBB2149:
 10239              	.LBI2129:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10240              		.loc 11 60 17 view .LVU2813
 10241              	.LBB2132:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10242              		.loc 11 60 37 view .LVU2814
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10243              		.loc 11 60 37 is_stmt 0 view .LVU2815
 10244              	.LBE2132:
 10245              	.LBE2149:
 410:Veno-Echo.cpp **** 
 10246              		.loc 21 410 9 is_stmt 1 view .LVU2816
 10247              	.LBB2150:
 10248              	.LBI2139:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10249              		.loc 11 60 17 view .LVU2817
 10250              	.LBB2142:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10251              		.loc 11 60 37 view .LVU2818
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10252              		.loc 11 60 37 is_stmt 0 view .LVU2819
 10253              	.LBE2142:
 10254              	.LBE2150:
 412:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 10255              		.loc 21 412 9 is_stmt 1 view .LVU2820
 10256              	.LBB2151:
 10257              	.LBI2145:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10258              		.loc 11 60 17 view .LVU2821
 10259              	.LBB2147:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10260              		.loc 11 60 37 view .LVU2822
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 324


 10261              		.loc 11 60 42 is_stmt 0 view .LVU2823
 10262 0428 1360     		str	r3, [r2]	@ float
 10263              	.LVL630:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10264              		.loc 11 60 42 view .LVU2824
 10265              	.LBE2147:
 10266              	.LBE2151:
 413:Veno-Echo.cpp **** 
 10267              		.loc 21 413 9 is_stmt 1 view .LVU2825
 10268              	.LBB2152:
 10269              	.LBI2152:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10270              		.loc 11 60 17 view .LVU2826
 10271              	.LBB2153:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10272              		.loc 11 60 37 view .LVU2827
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10273              		.loc 11 60 42 is_stmt 0 view .LVU2828
 10274 042a 2B4A     		ldr	r2, .L647+156
 10275              	.LBE2153:
 10276              	.LBE2152:
 10277              	.LBB2155:
 10278              	.LBB2051:
 10279              	.LBB2034:
 10280              	.LBB2017:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10281              		.loc 20 161 11 view .LVU2829
 10282 042c 91ED06EA 		vldr.32	s28, [r1, #24]
 10283              	.LBE2017:
 10284              	.LBE2034:
 10285              	.LBE2051:
 10286              	.LBE2155:
 10287              	.LBB2156:
 10288              	.LBB2154:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10289              		.loc 11 60 42 view .LVU2830
 10290 0430 1360     		str	r3, [r2]	@ float
 10291              	.LVL631:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10292              		.loc 11 60 42 view .LVU2831
 10293              	.LBE2154:
 10294              	.LBE2156:
 416:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10295              		.loc 21 416 9 is_stmt 1 view .LVU2832
 10296              	.LBB2157:
 10297              	.LBI2003:
  79:Veno-Echo.cpp ****     {
 10298              		.loc 21 79 11 view .LVU2833
 10299              	.LBB2052:
  82:Veno-Echo.cpp ****         return read;
 10300              		.loc 21 82 9 view .LVU2834
 10301              	.LBB2035:
 10302              	.LBI2005:
 159:delayline_reverse.h ****     {
 10303              		.loc 20 159 20 view .LVU2835
 10304              	.LBB2018:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 325


 10305              		.loc 20 174 46 is_stmt 0 view .LVU2836
 10306 0432 FFF7FEFF 		bl	sinf
 10307              	.LVL632:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10308              		.loc 20 174 46 view .LVU2837
 10309 0436 F0EE40BA 		vmov.f32	s23, s0
 10310 043a 51E0     		b	.L648
 10311              	.L649:
 10312              		.align	2
 10313              	.L647:
 10314 043c 00000000 		.word	.LANCHOR83
 10315 0440 00000000 		.word	.LANCHOR32
 10316 0444 00000000 		.word	.LANCHOR129
 10317 0448 00000000 		.word	.LANCHOR44
 10318 044c CDCCCC3E 		.word	1053609165
 10319 0450 00000000 		.word	.LANCHOR130
 10320 0454 00000000 		.word	.LANCHOR72
 10321 0458 00000000 		.word	.LANCHOR0
 10322 045c 00000000 		.word	.LANCHOR1
 10323 0460 00000000 		.word	.LANCHOR65
 10324 0464 00000000 		.word	.LANCHOR56
 10325 0468 00000000 		.word	.LANCHOR114
 10326 046c 00000000 		.word	.LANCHOR26
 10327 0470 00000000 		.word	.LANCHOR92
 10328 0474 DB0FC93F 		.word	1070141403
 10329 0478 E4CB9640 		.word	1083624420
 10330 047c 00000000 		.word	.LANCHOR101
 10331 0480 00000000 		.word	.LANCHOR93
 10332 0484 00000000 		.word	.LANCHOR102
 10333 0488 00000000 		.word	.LANCHOR95
 10334 048c 00000000 		.word	.LANCHOR104
 10335 0490 00000000 		.word	.LANCHOR94
 10336 0494 00000000 		.word	.LANCHOR103
 10337 0498 00000000 		.word	.LANCHOR105
 10338 049c 00000000 		.word	.LANCHOR2
 10339 04a0 00000000 		.word	.LANCHOR106
 10340 04a4 00000000 		.word	.LANCHOR117
 10341 04a8 00000000 		.word	.LANCHOR80
 10342 04ac 00000000 		.word	.LANCHOR118
 10343 04b0 00000000 		.word	.LANCHOR121
 10344 04b4 00000000 		.word	.LANCHOR122
 10345 04b8 00000000 		.word	.LANCHOR119
 10346 04bc 0000803D 		.word	1031798784
 10347 04c0 00000000 		.word	.LANCHOR120
 10348 04c4 00000000 		.word	.LANCHOR123
 10349 04c8 00000000 		.word	.LANCHOR125
 10350 04cc 00000000 		.word	.LANCHOR126
 10351 04d0 00000000 		.word	.LANCHOR124
 10352 04d4 00000000 		.word	.LANCHOR127
 10353 04d8 00000000 		.word	.LANCHOR128
 10354 04dc 209F2400 		.word	2400032
 10355              	.L648:
 10356              	.LVL633:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10357              		.loc 20 174 103 view .LVU2838
 10358 04e0 2BEE290A 		vmul.f32	s0, s22, s19
 10359 04e4 FFF7FEFF 		bl	sinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 326


 10360              	.LVL634:
 10361 04e8 B0EE408A 		vmov.f32	s16, s0
 10362              	.LVL635:
 10363              		.loc 20 175 46 view .LVU2839
 10364 04ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 10365 04f0 FFF7FEFF 		bl	sinf
 10366              	.LVL636:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10367              		.loc 20 174 98 view .LVU2840
 10368 04f4 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10369              		.loc 20 174 82 view .LVU2841
 10370 04f8 ABEEA88A 		vfma.f32	s16, s23, s17
 10371              	.LVL637:
 10372              		.loc 20 175 46 view .LVU2842
 10373 04fc F0EE40BA 		vmov.f32	s23, s0
 10374              		.loc 20 175 112 view .LVU2843
 10375 0500 2CEE290A 		vmul.f32	s0, s24, s19
 10376 0504 FFF7FEFF 		bl	sinf
 10377              	.LVL638:
 10378              		.loc 20 175 107 view .LVU2844
 10379 0508 60EE097A 		vmul.f32	s15, s0, s18
 10380              	.LBE2018:
 10381              	.LBE2035:
 10382              	.LBE2052:
 10383              	.LBE2157:
 417:Veno-Echo.cpp **** 
 10384              		.loc 21 417 49 view .LVU2845
 10385 050c C94B     		ldr	r3, .L650
 10386              	.LBB2158:
 10387              	.LBB2053:
 10388              	.LBB2036:
 10389              	.LBB2019:
 10390              		.loc 20 175 91 view .LVU2846
 10391 050e EBEEA87A 		vfma.f32	s15, s23, s17
 10392              	.LVL639:
 10393              		.loc 20 175 91 view .LVU2847
 10394              	.LBE2019:
 10395              	.LBE2036:
 10396              	.LBE2053:
 10397              	.LBE2158:
 417:Veno-Echo.cpp **** 
 10398              		.loc 21 417 49 view .LVU2848
 10399 0512 1C68     		ldr	r4, [r3]
 10400              	.LBB2159:
 10401              	.LBB2054:
 10402              	.LBB2037:
 10403              	.LBB2020:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10404              		.loc 20 174 9 view .LVU2849
 10405 0514 38EE088A 		vadd.f32	s16, s16, s16
 10406              	.LVL640:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10407              		.loc 20 174 9 view .LVU2850
 10408              	.LBE2020:
 10409              	.LBE2037:
 10410              	.LBE2054:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 327


 10411              	.LBE2159:
 10412              	.LBB2160:
 10413              	.LBB2161:
 10414              	.LBB2162:
 10415              	.LBB2163:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10416              		.loc 20 174 71 view .LVU2851
 10417 0518 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 10418              		.loc 20 162 11 view .LVU2852
 10419 051c D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10420              		.loc 20 174 71 view .LVU2853
 10421 0520 91ED00CA 		vldr.32	s24, [r1]
 10422              	.LBE2163:
 10423              	.LBE2162:
 10424              	.LBE2161:
 10425              	.LBE2160:
 10426              	.LBB2194:
 10427              	.LBB2055:
 10428              	.LBB2038:
 10429              	.LBB2021:
 10430              		.loc 20 175 9 view .LVU2854
 10431 0524 77EEA77A 		vadd.f32	s15, s15, s15
 10432              	.LVL641:
 10433              		.loc 20 175 9 view .LVU2855
 10434              	.LBE2021:
 10435              	.LBE2038:
 10436              	.LBE2055:
 10437              	.LBE2194:
 10438              	.LBB2195:
 10439              	.LBB2184:
 10440              	.LBB2174:
 10441              	.LBB2164:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10442              		.loc 20 161 11 view .LVU2856
 10443 0528 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 10444              		.loc 20 162 11 view .LVU2857
 10445 052c 04EB8303 		add	r3, r4, r3, lsl #2
 10446              		.loc 20 175 77 view .LVU2858
 10447 0530 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10448              		.loc 20 174 46 view .LVU2859
 10449 0534 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10450              		.loc 20 161 11 view .LVU2860
 10451 0538 92ED06DA 		vldr.32	s26, [r2, #24]
 10452              	.LBE2164:
 10453              	.LBE2174:
 10454              	.LBE2184:
 10455              	.LBE2195:
 10456              	.LBB2196:
 10457              	.LBB2056:
 10458              	.LBB2039:
 10459              	.LBB2022:
 176:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 328


 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 10460              		.loc 20 177 44 view .LVU2861
 10461 053c 67EE8E7A 		vmul.f32	s15, s15, s28
 10462              	.LVL642:
 10463              		.loc 20 177 44 view .LVU2862
 10464              	.LBE2022:
 10465              	.LBE2039:
 10466              	.LBE2056:
 10467              	.LBE2196:
 10468              	.LBB2197:
 10469              	.LBB2185:
 10470              	.LBB2175:
 10471              	.LBB2165:
 162:delayline_reverse.h **** 
 10472              		.loc 20 162 11 view .LVU2863
 10473 0540 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10474              		.loc 20 174 71 view .LVU2864
 10475 0544 0391     		str	r1, [sp, #12]
 10476              	.LBE2165:
 10477              	.LBE2175:
 10478              	.LBE2185:
 10479              	.LBE2197:
 10480              	.LBB2198:
 10481              	.LBB2057:
 10482              	.LBB2040:
 10483              	.LBB2023:
 10484              		.loc 20 177 54 view .LVU2865
 10485 0546 EDEE887A 		vfma.f32	s15, s27, s16
 10486              	.LVL643:
 10487              		.loc 20 177 54 view .LVU2866
 10488              	.LBE2023:
 10489              	.LBE2040:
  83:Veno-Echo.cpp ****     }
 10490              		.loc 21 83 9 is_stmt 1 view .LVU2867
  83:Veno-Echo.cpp ****     }
 10491              		.loc 21 83 9 is_stmt 0 view .LVU2868
 10492              	.LBE2057:
 10493              	.LBE2198:
 416:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10494              		.loc 21 416 50 view .LVU2869
 10495 054a CDED067A 		vstr.32	s15, [sp, #24]
 417:Veno-Echo.cpp **** 
 10496              		.loc 21 417 9 is_stmt 1 view .LVU2870
 10497              	.LVL644:
 10498              	.LBB2199:
 10499              	.LBI2160:
  79:Veno-Echo.cpp ****     {
 10500              		.loc 21 79 11 view .LVU2871
 10501              	.LBB2186:
  82:Veno-Echo.cpp ****         return read;
 10502              		.loc 21 82 9 view .LVU2872
 10503              	.LBB2176:
 10504              	.LBI2162:
 159:delayline_reverse.h ****     {
 10505              		.loc 20 159 20 view .LVU2873
 10506              	.LBB2166:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 329


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10507              		.loc 20 174 46 is_stmt 0 view .LVU2874
 10508 054e FFF7FEFF 		bl	sinf
 10509              	.LVL645:
 10510 0552 F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10511              		.loc 20 174 103 view .LVU2875
 10512 0556 2CEE290A 		vmul.f32	s0, s24, s19
 10513 055a FFF7FEFF 		bl	sinf
 10514              	.LVL646:
 10515 055e B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 10516              		.loc 20 175 46 view .LVU2876
 10517 0562 2AEE8A0A 		vmul.f32	s0, s21, s20
 10518 0566 FFF7FEFF 		bl	sinf
 10519              	.LVL647:
 10520 056a F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 10521              		.loc 20 175 112 view .LVU2877
 10522 056e 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10523              		.loc 20 174 98 view .LVU2878
 10524 0572 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 10525              		.loc 20 175 46 view .LVU2879
 10526 0576 F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 10527              		.loc 20 175 112 view .LVU2880
 10528 057a FFF7FEFF 		bl	sinf
 10529              	.LVL648:
 10530              	.LBE2166:
 10531              	.LBE2176:
 10532              	.LBE2186:
 10533              	.LBE2199:
 10534              	.LBB2200:
 10535              	.LBB2201:
 10536              	.LBB2202:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10537              		.loc 20 98 38 view .LVU2881
 10538 057e AE48     		ldr	r0, .L650+4
 10539              	.LBE2202:
 10540              	.LBE2201:
 10541              	.LBE2200:
 10542              	.LBB2225:
 10543              	.LBB2187:
 10544              	.LBB2177:
 10545              	.LBB2167:
 175:delayline_reverse.h **** 
 10546              		.loc 20 175 107 view .LVU2882
 10547 0580 60EE097A 		vmul.f32	s15, s0, s18
 10548              	.LBE2167:
 10549              	.LBE2177:
 10550              	.LBE2187:
 10551              	.LBE2225:
 10552              	.LBB2226:
 10553              	.LBB2214:
 10554              	.LBB2203:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 330


  92:delayline_reverse.h ****         
 10555              		.loc 20 92 57 view .LVU2883
 10556 0584 AD4B     		ldr	r3, .L650+8
 10557              	.LBE2203:
 10558              	.LBE2214:
 10559              	.LBE2226:
 10560              	.LBB2227:
 10561              	.LBB2188:
 10562              	.LBB2178:
 10563              	.LBB2168:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10564              		.loc 20 174 82 view .LVU2884
 10565 0586 ABEEA88A 		vfma.f32	s16, s23, s17
 10566              	.LVL649:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10567              		.loc 20 174 82 view .LVU2885
 10568              	.LBE2168:
 10569              	.LBE2178:
 10570              	.LBE2188:
 10571              	.LBE2227:
 10572              	.LBB2228:
 10573              	.LBB2215:
 10574              	.LBB2204:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10575              		.loc 20 98 38 view .LVU2886
 10576 058a 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10577              		.loc 20 90 15 view .LVU2887
 10578 058c D5F804E0 		ldr	lr, [r5, #4]
 10579              	.LBE2204:
 10580              	.LBE2215:
 10581              	.LBE2228:
 10582              	.LBB2229:
 10583              	.LBB2189:
 10584              	.LBB2179:
 10585              	.LBB2169:
 175:delayline_reverse.h **** 
 10586              		.loc 20 175 91 view .LVU2888
 10587 0590 E9EEA87A 		vfma.f32	s15, s19, s17
 10588              	.LVL650:
 175:delayline_reverse.h **** 
 10589              		.loc 20 175 91 view .LVU2889
 10590              	.LBE2169:
 10591              	.LBE2179:
 10592              	.LBE2189:
 10593              	.LBE2229:
 10594              	.LBB2230:
 10595              	.LBB2216:
 10596              	.LBB2205:
  99:delayline_reverse.h ****  
 10597              		.loc 20 99 38 view .LVU2890
 10598 0594 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10599              		.loc 20 98 50 view .LVU2891
 10600 0596 A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 10601              		.loc 20 92 57 view .LVU2892
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 331


 10602 059a DFF8C4C2 		ldr	ip, .L650+44
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10603              		.loc 20 90 9 view .LVU2893
 10604 059e 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10605              		.loc 20 98 50 view .LVU2894
 10606 05a2 890C     		lsrs	r1, r1, #18
 10607              	.LBE2205:
 10608              	.LBE2216:
 10609              	.LBE2230:
 10610              	.LBB2231:
 10611              	.LBB2190:
 10612              	.LBB2180:
 10613              	.LBB2170:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10614              		.loc 20 174 9 view .LVU2895
 10615 05a4 38EE088A 		vadd.f32	s16, s16, s16
 10616              	.LVL651:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10617              		.loc 20 174 9 view .LVU2896
 10618              	.LBE2170:
 10619              	.LBE2180:
 10620              	.LBE2190:
 10621              	.LBE2231:
 10622              	.LBB2232:
 10623              	.LBB2217:
 10624              	.LBB2206:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10625              		.loc 20 98 50 view .LVU2897
 10626 05a8 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 10627              		.loc 20 92 45 view .LVU2898
 10628 05ac A44E     		ldr	r6, .L650+12
 10629              	.LBE2206:
 10630              	.LBE2217:
 10631              	.LBE2232:
 10632              	.LBB2233:
 10633              	.LBB2191:
 10634              	.LBB2181:
 10635              	.LBB2171:
 175:delayline_reverse.h **** 
 10636              		.loc 20 175 9 view .LVU2899
 10637 05ae 37EEA70A 		vadd.f32	s0, s15, s15
 10638              	.LVL652:
 175:delayline_reverse.h **** 
 10639              		.loc 20 175 9 view .LVU2900
 10640              	.LBE2171:
 10641              	.LBE2181:
 10642              	.LBE2191:
 10643              	.LBE2233:
 420:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10644              		.loc 21 420 26 view .LVU2901
 10645 05b2 DBED007A 		vldr.32	s15, [fp]
 10646              	.LBB2234:
 10647              	.LBB2218:
 10648              	.LBB2207:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 332


 10649              		.loc 20 98 50 view .LVU2902
 10650 05b6 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10651              		.loc 20 92 45 view .LVU2903
 10652 05b8 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 10653              		.loc 20 99 50 view .LVU2904
 10654 05ba A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 10655              		.loc 20 92 57 view .LVU2905
 10656 05be A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10657              		.loc 20 98 9 view .LVU2906
 10658 05c2 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 10659              		.loc 20 99 50 view .LVU2907
 10660 05c4 4FEA9E4E 		lsr	lr, lr, #18
 10661              	.LBE2207:
 10662              	.LBE2218:
 10663              	.LBE2234:
 10664              	.LBB2235:
 10665              	.LBB2192:
 10666              	.LBB2182:
 10667              	.LBB2172:
 10668              		.loc 20 177 44 view .LVU2908
 10669 05c8 20EE0D0A 		vmul.f32	s0, s0, s26
 10670              	.LVL653:
 10671              		.loc 20 177 44 view .LVU2909
 10672              	.LBE2172:
 10673              	.LBE2182:
 10674              	.LBE2192:
 10675              	.LBE2235:
 10676              	.LBB2236:
 10677              	.LBB2219:
 10678              	.LBB2208:
  92:delayline_reverse.h ****         
 10679              		.loc 20 92 57 view .LVU2910
 10680 05cc 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 10681              		.loc 20 99 50 view .LVU2911
 10682 05ce 0CFB1E00 		mls	r0, ip, lr, r0
 10683              	.LBE2208:
 10684              	.LBE2219:
 10685              	.LBE2236:
 10686              	.LBB2237:
 10687              	.LBB2193:
 10688              	.LBB2183:
 10689              	.LBB2173:
 10690              		.loc 20 177 54 view .LVU2912
 10691 05d2 ACEE880A 		vfma.f32	s0, s25, s16
 10692              	.LVL654:
 10693              		.loc 20 177 54 view .LVU2913
 10694              	.LBE2173:
 10695              	.LBE2183:
  83:Veno-Echo.cpp ****     }
 10696              		.loc 21 83 9 is_stmt 1 view .LVU2914
  83:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 333


 10697              		.loc 21 83 9 is_stmt 0 view .LVU2915
 10698              	.LBE2193:
 10699              	.LBE2237:
 10700              	.LBB2238:
 10701              	.LBB2220:
 10702              	.LBB2209:
  92:delayline_reverse.h ****         
 10703              		.loc 20 92 57 view .LVU2916
 10704 05d6 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 10705              		.loc 20 95 43 view .LVU2917
 10706 05da D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10707              		.loc 20 90 9 view .LVU2918
 10708 05de CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 10709              		.loc 20 95 43 view .LVU2919
 10710 05e2 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 10711              		.loc 20 101 36 view .LVU2920
 10712 05e4 DFF864A2 		ldr	r10, .L650+24
  95:delayline_reverse.h **** 
 10713              		.loc 20 95 43 view .LVU2921
 10714 05e8 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 10715              		.loc 20 101 36 view .LVU2922
 10716 05ea 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 10717              		.loc 20 101 45 view .LVU2923
 10718 05ee 07F1FF3A 		add	r10, r7, #-1
 10719              	.LBE2209:
 10720              	.LBE2220:
 10721              	.LBE2238:
 417:Veno-Echo.cpp **** 
 10722              		.loc 21 417 50 view .LVU2924
 10723 05f2 8DED070A 		vstr.32	s0, [sp, #28]
 420:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10724              		.loc 21 420 9 is_stmt 1 view .LVU2925
 10725              	.LVL655:
 10726              	.LBB2239:
 10727              	.LBI2200:
  92:Veno-Echo.cpp ****     {
 10728              		.loc 21 92 10 view .LVU2926
  92:Veno-Echo.cpp ****     {
 10729              		.loc 21 92 10 is_stmt 0 view .LVU2927
 10730              	.LBE2239:
 10731              	.LBE2289:
 10732              	.LBE1881:
  94:Veno-Echo.cpp ****     }
 10733              		.loc 21 94 9 is_stmt 1 view .LVU2928
 10734              	.LBB2301:
 10735              	.LBB2290:
 10736              	.LBB2240:
 10737              	.LBB2221:
 10738              	.LBI2201:
  88:delayline_reverse.h ****     {
 10739              		.loc 20 88 17 view .LVU2929
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 334


 10740              	.LBB2210:
  99:delayline_reverse.h ****  
 10741              		.loc 20 99 9 is_stmt 0 view .LVU2930
 10742 05f6 C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 10743              		.loc 20 95 54 view .LVU2931
 10744 05fa B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 10745              		.loc 20 101 45 view .LVU2932
 10746 05fe AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 10747              		.loc 20 95 54 view .LVU2933
 10748 0602 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 10749              		.loc 20 92 9 view .LVU2934
 10750 0606 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 10751              		.loc 20 101 9 view .LVU2935
 10752 0608 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 10753              		.loc 20 95 9 view .LVU2936
 10754 060a 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 10755              		.loc 20 101 9 view .LVU2937
 10756 060c 40F2DA80 		bls	.L523
 103:delayline_reverse.h ****             {
 10757              		.loc 20 103 17 view .LVU2938
 10758 0610 8C49     		ldr	r1, .L650+16
 103:delayline_reverse.h ****             {
 10759              		.loc 20 103 13 view .LVU2939
 10760 0612 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10761              		.loc 20 103 17 view .LVU2940
 10762 0614 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 10763              		.loc 20 103 13 view .LVU2941
 10764 0616 0028     		cmp	r0, #0
 10765 0618 40F0DA80 		bne	.L638
 107:delayline_reverse.h ****                 {
 10766              		.loc 20 107 21 view .LVU2942
 10767 061c 8A48     		ldr	r0, .L650+20
 105:delayline_reverse.h ****                 
 10768              		.loc 20 105 17 view .LVU2943
 10769 061e 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10770              		.loc 20 110 45 view .LVU2944
 10771 0620 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 10772              		.loc 20 107 17 view .LVU2945
 10773 0622 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10774              		.loc 20 107 21 view .LVU2946
 10775 0624 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 10776              		.loc 20 105 17 view .LVU2947
 10777 0626 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 335


 10778              		.loc 20 107 17 view .LVU2948
 10779 0628 002E     		cmp	r6, #0
 10780 062a 40F07782 		bne	.L525
 110:delayline_reverse.h ****                 }
 10781              		.loc 20 110 21 view .LVU2949
 10782 062e EB60     		str	r3, [r5, #12]
 10783              	.L526:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10784              		.loc 20 130 45 view .LVU2950
 10785 0630 07EE90EA 		vmov	s15, lr	@ int
 10786              	.LVL656:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10787              		.loc 20 130 45 view .LVU2951
 10788 0634 B7EE007A 		vmov.f32	s14, #1.0e+0
 10789 0638 F8EE676A 		vcvt.f32.u32	s13, s15
 10790 063c C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10791              		.loc 20 130 37 view .LVU2952
 10792 0640 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 10793              		.loc 20 131 17 view .LVU2953
 10794 0644 B4EEC7BA 		vcmpe.f32	s22, s14
 10795 0648 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10796 064c 40F3D780 		ble	.L639
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10797              		.loc 20 133 21 view .LVU2954
 10798 0650 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10799              		.loc 20 134 21 view .LVU2955
 10800 0652 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10801              		.loc 20 133 21 view .LVU2956
 10802 0654 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 10803              		.loc 20 135 21 view .LVU2957
 10804 0658 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10805              		.loc 20 134 21 view .LVU2958
 10806 065a 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 10807              		.loc 20 135 21 view .LVU2959
 10808 065c 0370     		strb	r3, [r0]
 10809              	.LVL657:
 10810              	.L529:
 135:delayline_reverse.h ****                 }
 10811              		.loc 20 135 21 view .LVU2960
 10812              	.LBE2210:
 10813              	.LBE2221:
 10814              	.LBE2240:
 421:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10815              		.loc 21 421 9 is_stmt 1 view .LVU2961
 10816              	.LBB2241:
 10817              	.LBB2242:
 10818              	.LBB2243:
  95:delayline_reverse.h **** 
 10819              		.loc 20 95 45 is_stmt 0 view .LVU2962
 10820 065e 2169     		ldr	r1, [r4, #16]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 336


 10821 0660 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 10822              		.loc 20 95 43 view .LVU2963
 10823 0664 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10824              		.loc 20 90 15 view .LVU2964
 10825 0666 6568     		ldr	r5, [r4, #4]
 10826 0668 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 10827              		.loc 20 95 43 view .LVU2965
 10828 066c 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 10829              		.loc 20 92 45 view .LVU2966
 10830 066e 744F     		ldr	r7, .L650+12
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10831              		.loc 20 90 9 view .LVU2967
 10832 0670 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10833              		.loc 20 98 38 view .LVU2968
 10834 0674 704B     		ldr	r3, .L650+4
  95:delayline_reverse.h **** 
 10835              		.loc 20 95 43 view .LVU2969
 10836 0676 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 10837              		.loc 20 92 45 view .LVU2970
 10838 0678 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 10839              		.loc 20 101 45 view .LVU2971
 10840 067a 01F1FF3C 		add	ip, r1, #-1
 10841              	.LBE2243:
 10842              	.LBE2242:
 10843              	.LBE2241:
 421:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10844              		.loc 21 421 26 view .LVU2972
 10845 067e DBED017A 		vldr.32	s15, [fp, #4]
 10846              	.LVL658:
 10847              	.LBB2254:
 10848              	.LBI2241:
  92:Veno-Echo.cpp ****     {
 10849              		.loc 21 92 10 is_stmt 1 view .LVU2973
  92:Veno-Echo.cpp ****     {
 10850              		.loc 21 92 10 is_stmt 0 view .LVU2974
 10851              	.LBE2254:
 10852              	.LBE2290:
 10853              	.LBE2301:
  94:Veno-Echo.cpp ****     }
 10854              		.loc 21 94 9 is_stmt 1 view .LVU2975
 10855              	.LBB2302:
 10856              	.LBB2291:
 10857              	.LBB2255:
 10858              	.LBB2249:
 10859              	.LBI2242:
  88:delayline_reverse.h ****     {
 10860              		.loc 20 88 17 view .LVU2976
 10861              	.LBB2244:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10862              		.loc 20 98 38 is_stmt 0 view .LVU2977
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 337


 10863 0682 D4E90205 		ldrd	r0, r5, [r4, #8]
 10864 0686 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 10865              		.loc 20 99 38 view .LVU2978
 10866 068a 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 10867              		.loc 20 92 57 view .LVU2979
 10868 068c 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 10869              		.loc 20 95 54 view .LVU2980
 10870 0690 B2FBF1F0 		udiv	r0, r2, r1
 10871 0694 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 10872              		.loc 20 101 36 view .LVU2981
 10873 0698 6C49     		ldr	r1, .L650+24
  92:delayline_reverse.h ****         
 10874              		.loc 20 92 57 view .LVU2982
 10875 069a A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 10876              		.loc 20 101 36 view .LVU2983
 10877 069e 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 10878              		.loc 20 92 57 view .LVU2984
 10879 06a0 A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10880              		.loc 20 90 9 view .LVU2985
 10881 06a4 CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 10882              		.loc 20 101 36 view .LVU2986
 10883 06a8 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10884              		.loc 20 92 57 view .LVU2987
 10885 06aa A3FB0762 		umull	r6, r2, r3, r7
 10886 06ae DFF8B0E1 		ldr	lr, .L650+44
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10887              		.loc 20 98 50 view .LVU2988
 10888 06b2 A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 10889              		.loc 20 99 50 view .LVU2989
 10890 06b6 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 10891              		.loc 20 101 45 view .LVU2990
 10892 06ba 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 10893              		.loc 20 92 57 view .LVU2991
 10894 06bc 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 10895              		.loc 20 95 9 view .LVU2992
 10896 06be 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10897              		.loc 20 98 50 view .LVU2993
 10898 06c0 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 10899              		.loc 20 101 45 view .LVU2994
 10900 06c2 ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 10901              		.loc 20 99 50 view .LVU2995
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 338


 10902 06c6 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 10903              		.loc 20 92 57 view .LVU2996
 10904 06c8 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10905              		.loc 20 98 50 view .LVU2997
 10906 06cc 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 10907              		.loc 20 101 9 view .LVU2998
 10908 06d0 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 10909              		.loc 20 99 50 view .LVU2999
 10910 06d2 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10911              		.loc 20 98 9 view .LVU3000
 10912 06d6 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 10913              		.loc 20 99 9 view .LVU3001
 10914 06da E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 10915              		.loc 20 101 9 view .LVU3002
 10916 06dc 51D9     		bls	.L533
 103:delayline_reverse.h ****             {
 10917              		.loc 20 103 17 view .LVU3003
 10918 06de 5949     		ldr	r1, .L650+16
 103:delayline_reverse.h ****             {
 10919              		.loc 20 103 13 view .LVU3004
 10920 06e0 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10921              		.loc 20 103 17 view .LVU3005
 10922 06e2 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 10923              		.loc 20 103 13 view .LVU3006
 10924 06e4 0028     		cmp	r0, #0
 10925 06e6 51D1     		bne	.L640
 107:delayline_reverse.h ****                 {
 10926              		.loc 20 107 21 view .LVU3007
 10927 06e8 5748     		ldr	r0, .L650+20
 105:delayline_reverse.h ****                 
 10928              		.loc 20 105 17 view .LVU3008
 10929 06ea 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10930              		.loc 20 110 45 view .LVU3009
 10931 06ec 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 10932              		.loc 20 107 17 view .LVU3010
 10933 06ee 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10934              		.loc 20 107 21 view .LVU3011
 10935 06f0 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 10936              		.loc 20 105 17 view .LVU3012
 10937 06f2 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 10938              		.loc 20 107 17 view .LVU3013
 10939 06f4 002D     		cmp	r5, #0
 10940 06f6 40F01382 		bne	.L535
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 339


 110:delayline_reverse.h ****                 }
 10941              		.loc 20 110 21 view .LVU3014
 10942 06fa E260     		str	r2, [r4, #12]
 10943              	.L536:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10944              		.loc 20 130 45 view .LVU3015
 10945 06fc DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10946              	.LVL659:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10947              		.loc 20 130 45 view .LVU3016
 10948 0700 B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10949              		.loc 20 130 37 view .LVU3017
 10950 0704 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10951              		.loc 20 130 45 view .LVU3018
 10952 0706 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10953              		.loc 20 130 37 view .LVU3019
 10954 070a D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10955              		.loc 20 130 45 view .LVU3020
 10956 070e C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10957              		.loc 20 130 37 view .LVU3021
 10958 0712 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 10959              		.loc 20 131 17 view .LVU3022
 10960 0716 F4EEC77A 		vcmpe.f32	s15, s14
 10961 071a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10962 071e 40F31282 		ble	.L643
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10963              		.loc 20 133 21 view .LVU3023
 10964 0722 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10965              		.loc 20 134 21 view .LVU3024
 10966 0724 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10967              		.loc 20 133 21 view .LVU3025
 10968 0726 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10969              		.loc 20 135 21 view .LVU3026
 10970 072a 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10971              		.loc 20 134 21 view .LVU3027
 10972 072c 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10973              		.loc 20 135 21 view .LVU3028
 10974 072e 0270     		strb	r2, [r0]
 10975              	.LVL660:
 10976              	.L539:
 135:delayline_reverse.h ****                 }
 10977              		.loc 20 135 21 view .LVU3029
 10978              	.LBE2244:
 10979              	.LBE2249:
 10980              	.LBE2255:
 426:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 340


 10981              		.loc 21 426 9 is_stmt 1 view .LVU3030
 426:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10982              		.loc 21 426 56 is_stmt 0 view .LVU3031
 10983 0730 06AA     		add	r2, sp, #24
 10984 0732 5946     		mov	r1, fp
 10985 0734 4648     		ldr	r0, .L650+28
 10986 0736 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10987              	.LVL661:
 427:Veno-Echo.cpp **** 
 10988              		.loc 21 427 56 view .LVU3032
 10989 073a 18EE101A 		vmov	r1, s16	@ int
 10990 073e 07AA     		add	r2, sp, #28
 10991 0740 4448     		ldr	r0, .L650+32
 426:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10992              		.loc 21 426 56 view .LVU3033
 10993 0742 F0EE408A 		vmov.f32	s17, s0
 10994              	.LVL662:
 427:Veno-Echo.cpp **** 
 10995              		.loc 21 427 9 is_stmt 1 view .LVU3034
 427:Veno-Echo.cpp **** 
 10996              		.loc 21 427 56 is_stmt 0 view .LVU3035
 10997 0746 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10998              	.LVL663:
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10999              		.loc 21 430 46 view .LVU3036
 11000 074a 4348     		ldr	r0, .L650+36
 427:Veno-Echo.cpp **** 
 11001              		.loc 21 427 56 view .LVU3037
 11002 074c B0EE408A 		vmov.f32	s16, s0
 11003              	.LVL664:
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 11004              		.loc 21 430 9 is_stmt 1 view .LVU3038
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 11005              		.loc 21 430 46 is_stmt 0 view .LVU3039
 11006 0750 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 11007              	.LVL665:
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 11008              		.loc 21 430 46 view .LVU3040
 11009 0754 0346     		mov	r3, r0
 431:Veno-Echo.cpp **** 
 11010              		.loc 21 431 46 view .LVU3041
 11011 0756 4148     		ldr	r0, .L650+40
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 11012              		.loc 21 430 45 view .LVU3042
 11013 0758 1B68     		ldr	r3, [r3]	@ float
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 11014              		.loc 21 430 47 view .LVU3043
 11015 075a 0893     		str	r3, [sp, #32]	@ float
 431:Veno-Echo.cpp **** 
 11016              		.loc 21 431 9 is_stmt 1 view .LVU3044
 431:Veno-Echo.cpp **** 
 11017              		.loc 21 431 46 is_stmt 0 view .LVU3045
 11018 075c FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 11019              	.LVL666:
 431:Veno-Echo.cpp **** 
 11020              		.loc 21 431 45 view .LVU3046
 11021 0760 0368     		ldr	r3, [r0]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 341


 431:Veno-Echo.cpp **** 
 11022              		.loc 21 431 47 view .LVU3047
 11023 0762 0993     		str	r3, [sp, #36]	@ float
 434:Veno-Echo.cpp **** 
 11024              		.loc 21 434 9 is_stmt 1 view .LVU3048
 434:Veno-Echo.cpp **** 
 11025              		.loc 21 434 28 is_stmt 0 view .LVU3049
 11026 0764 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 11027              	.LVL667:
 437:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 11028              		.loc 21 437 9 is_stmt 1 view .LVU3050
 11029              	.LBB2256:
 11030              	.LBB1885:
2009:Veno-Echo.cpp ****         returnval = limit;
 11031              		.loc 21 2009 5 is_stmt 0 view .LVU3051
 11032 0768 B0EE007A 		vmov.f32	s14, #2.0e+0
 11033              	.LBE1885:
 11034              	.LBE2256:
 437:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 11035              		.loc 21 437 34 view .LVU3052
 11036 076c DDED087A 		vldr.32	s15, [sp, #32]
 11037              	.LVL668:
 11038              	.LBB2257:
 11039              	.LBI1883:
2006:Veno-Echo.cpp **** {
 11040              		.loc 21 2006 7 is_stmt 1 view .LVU3053
 11041              	.LBB1886:
2008:Veno-Echo.cpp ****     if (input > limit)
 11042              		.loc 21 2008 5 view .LVU3054
2009:Veno-Echo.cpp ****         returnval = limit;
 11043              		.loc 21 2009 5 view .LVU3055
 11044 0770 F4EEC77A 		vcmpe.f32	s15, s14
 11045 0774 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11046 0778 7FF792AC 		ble	.L644
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11047              		.loc 21 2010 19 is_stmt 0 view .LVU3056
 11048 077c F0EE477A 		vmov.f32	s15, s14
 11049              	.LVL669:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11050              		.loc 21 2010 19 view .LVU3057
 11051 0780 97E4     		b	.L543
 11052              	.LVL670:
 11053              	.L533:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11054              		.loc 21 2010 19 view .LVU3058
 11055              	.LBE1886:
 11056              	.LBE2257:
 11057              	.LBB2258:
 11058              	.LBB2250:
 11059              	.LBB2245:
 126:delayline_reverse.h ****         {
 11060              		.loc 20 126 12 view .LVU3059
 11061 0782 304B     		ldr	r3, .L650+16
 126:delayline_reverse.h ****         {
 11062              		.loc 20 126 9 view .LVU3060
 11063 0784 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 342


 11064              		.loc 20 126 12 view .LVU3061
 11065 0786 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 11066              		.loc 20 126 9 view .LVU3062
 11067 0788 002A     		cmp	r2, #0
 11068 078a D1D0     		beq	.L539
 11069              	.L640:
 126:delayline_reverse.h ****         {
 11070              		.loc 20 126 9 view .LVU3063
 11071 078c 2E4A     		ldr	r2, .L650+20
 11072 078e A018     		adds	r0, r4, r2
 11073 0790 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11074              		.loc 20 128 13 view .LVU3064
 11075 0792 002A     		cmp	r2, #0
 11076 0794 B2D0     		beq	.L536
 11077              	.L537:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11078              		.loc 20 141 45 view .LVU3065
 11079 0796 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 11080              	.LVL671:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11081              		.loc 20 141 45 view .LVU3066
 11082 079a B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11083              		.loc 20 141 37 view .LVU3067
 11084 079e 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 11085              		.loc 20 142 17 view .LVU3068
 11086 07a0 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11087              		.loc 20 141 45 view .LVU3069
 11088 07a2 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11089              		.loc 20 141 37 view .LVU3070
 11090 07a6 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11091              		.loc 20 141 45 view .LVU3071
 11092 07aa 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11093              		.loc 20 141 37 view .LVU3072
 11094 07ae 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 11095              		.loc 20 142 17 view .LVU3073
 11096 07b2 F5EEC07A 		vcmpe.f32	s15, #0
 11097 07b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11098 07ba 00F1B881 		bmi	.L542
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11099              		.loc 20 141 17 view .LVU3074
 11100 07be C1ED007A 		vstr.32	s15, [r1]
 11101 07c2 B5E7     		b	.L539
 11102              	.LVL672:
 11103              	.L523:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11104              		.loc 20 141 17 view .LVU3075
 11105              	.LBE2245:
 11106              	.LBE2250:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 343


 11107              	.LBE2258:
 11108              	.LBB2259:
 11109              	.LBB2222:
 11110              	.LBB2211:
 126:delayline_reverse.h ****         {
 11111              		.loc 20 126 12 view .LVU3076
 11112 07c4 1F4A     		ldr	r2, .L650+16
 126:delayline_reverse.h ****         {
 11113              		.loc 20 126 9 view .LVU3077
 11114 07c6 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11115              		.loc 20 126 12 view .LVU3078
 11116 07c8 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 11117              		.loc 20 126 9 view .LVU3079
 11118 07ca 002B     		cmp	r3, #0
 11119 07cc 3FF447AF 		beq	.L529
 11120              	.L638:
 126:delayline_reverse.h ****         {
 11121              		.loc 20 126 9 view .LVU3080
 11122 07d0 1D4B     		ldr	r3, .L650+20
 11123 07d2 E818     		adds	r0, r5, r3
 11124 07d4 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11125              		.loc 20 128 13 view .LVU3081
 11126 07d6 002B     		cmp	r3, #0
 11127 07d8 3FF42AAF 		beq	.L526
 11128              	.L527:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11129              		.loc 20 141 45 view .LVU3082
 11130 07dc 07EE90EA 		vmov	s15, lr	@ int
 11131              	.LVL673:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11132              		.loc 20 141 45 view .LVU3083
 11133 07e0 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 11134              		.loc 20 142 17 view .LVU3084
 11135 07e4 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11136              		.loc 20 141 45 view .LVU3085
 11137 07e6 B8EE677A 		vcvt.f32.u32	s14, s15
 11138 07ea C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11139              		.loc 20 141 37 view .LVU3086
 11140 07ee 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 11141              		.loc 20 142 17 view .LVU3087
 11142 07f2 B5EEC0BA 		vcmpe.f32	s22, #0
 11143 07f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11144 07fa 00F19E81 		bmi	.L532
 11145              	.L639:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11146              		.loc 20 141 17 view .LVU3088
 11147 07fe 049B     		ldr	r3, [sp, #16]
 11148 0800 83ED00BA 		vstr.32	s22, [r3]
 11149 0804 2BE7     		b	.L529
 11150              	.LVL674:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 344


 11151              	.L574:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11152              		.loc 20 141 17 view .LVU3089
 11153              	.LBE2211:
 11154              	.LBE2222:
 11155              	.LBE2259:
 606:Veno-Echo.cpp ****             out[i+1] = mixR;
 11156              		.loc 21 606 13 is_stmt 1 view .LVU3090
 606:Veno-Echo.cpp ****             out[i+1] = mixR;
 11157              		.loc 21 606 20 is_stmt 0 view .LVU3091
 11158 0806 009B     		ldr	r3, [sp]
 11159 0808 C3ED007A 		vstr.32	s15, [r3]
 607:Veno-Echo.cpp ****         }
 11160              		.loc 21 607 13 is_stmt 1 view .LVU3092
 607:Veno-Echo.cpp ****         }
 11161              		.loc 21 607 22 is_stmt 0 view .LVU3093
 11162 080c 83ED010A 		vstr.32	s0, [r3, #4]
 11163 0810 87E5     		b	.L575
 11164              	.LVL675:
 11165              	.L635:
 587:Veno-Echo.cpp ****         {
 11166              		.loc 21 587 14 is_stmt 1 view .LVU3094
 11167 0812 40F36A81 		ble	.L636
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11168              		.loc 21 589 13 view .LVU3095
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11169              		.loc 21 589 24 is_stmt 0 view .LVU3096
 11170 0816 F7EE006A 		vmov.f32	s13, #1.0e+0
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11171              		.loc 21 589 18 view .LVU3097
 11172 081a DBED005A 		vldr.32	s11, [fp]
 590:Veno-Echo.cpp ****         }
 11173              		.loc 21 590 18 view .LVU3098
 11174 081e 9BED016A 		vldr.32	s12, [fp, #4]
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11175              		.loc 21 589 24 view .LVU3099
 11176 0822 36EEC77A 		vsub.f32	s14, s13, s14
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11177              		.loc 21 589 33 view .LVU3100
 11178 0826 37EE077A 		vadd.f32	s14, s14, s14
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11179              		.loc 21 589 18 view .LVU3101
 11180 082a E7EE257A 		vfma.f32	s15, s14, s11
 11181              	.LVL676:
 590:Veno-Echo.cpp ****         }
 11182              		.loc 21 590 13 is_stmt 1 view .LVU3102
 590:Veno-Echo.cpp ****         }
 11183              		.loc 21 590 18 is_stmt 0 view .LVU3103
 11184 082e A7EE060A 		vfma.f32	s0, s14, s12
 11185              	.LVL677:
 590:Veno-Echo.cpp ****         }
 11186              		.loc 21 590 18 view .LVU3104
 11187 0832 6DE5     		b	.L571
 11188              	.L651:
 11189              		.align	2
 11190              	.L650:
 11191 0834 00000000 		.word	.LANCHOR3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 345


 11192 0838 BF270900 		.word	599999
 11193 083c 851DD96F 		.word	1876499845
 11194 0840 C1270900 		.word	600001
 11195 0844 249F2400 		.word	2400036
 11196 0848 1C9F2400 		.word	2400028
 11197 084c 189F2400 		.word	2400024
 11198 0850 00000000 		.word	.LANCHOR105
 11199 0854 00000000 		.word	.LANCHOR106
 11200 0858 00000000 		.word	.LANCHOR0
 11201 085c 00000000 		.word	.LANCHOR1
 11202 0860 C0270900 		.word	600000
 11203              	.LVL678:
 11204              	.L590:
 11205              	.LBB2260:
 541:Veno-Echo.cpp **** {
 11206              		.loc 21 541 1 view .LVU3105
 11207 0864 D44B     		ldr	r3, .L652
 11208              	.LBE2260:
 11209              	.LBB2261:
 11210              	.LBB1976:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11211              		.loc 21 2010 19 view .LVU3106
 11212 0866 B0EE470A 		vmov.f32	s0, s14
 11213              	.LVL679:
2016:Veno-Echo.cpp **** }
 11214              		.loc 21 2016 5 is_stmt 1 view .LVU3107
2016:Veno-Echo.cpp **** }
 11215              		.loc 21 2016 5 is_stmt 0 view .LVU3108
 11216              	.LBE1976:
 11217              	.LBE2261:
 11218              	.LBB2262:
 541:Veno-Echo.cpp **** {
 11219              		.loc 21 541 1 view .LVU3109
 11220 086a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11221              	.LBE2262:
 539:Veno-Echo.cpp **** 
 11222              		.loc 21 539 27 view .LVU3110
 11223 086c 8DED0D0A 		vstr.32	s0, [sp, #52]
 541:Veno-Echo.cpp **** {
 11224              		.loc 21 541 1 is_stmt 1 view .LVU3111
 11225              	.LBB2263:
 11226 0870 002B     		cmp	r3, #0
 11227 0872 3FF434AD 		beq	.L565
 11228              	.L642:
 11229              	.LBB1979:
 547:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11230              		.loc 21 547 9 view .LVU3112
 547:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11231              		.loc 21 547 27 is_stmt 0 view .LVU3113
 11232 0876 9FEDD18A 		vldr.32	s16, .L652+4
 11233              	.LVL680:
 547:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11234              		.loc 21 547 27 view .LVU3114
 11235 087a D14D     		ldr	r5, .L652+8
 11236 087c 27EE880A 		vmul.f32	s0, s15, s16
 548:Veno-Echo.cpp **** 
 11237              		.loc 21 548 27 view .LVU3115
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 346


 11238 0880 D04C     		ldr	r4, .L652+12
 547:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11239              		.loc 21 547 27 view .LVU3116
 11240 0882 2846     		mov	r0, r5
 11241 0884 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11242              	.LVL681:
 548:Veno-Echo.cpp **** 
 11243              		.loc 21 548 9 is_stmt 1 view .LVU3117
 548:Veno-Echo.cpp **** 
 11244              		.loc 21 548 27 is_stmt 0 view .LVU3118
 11245 0888 9DED0D0A 		vldr.32	s0, [sp, #52]
 11246 088c 2046     		mov	r0, r4
 11247 088e 20EE080A 		vmul.f32	s0, s0, s16
 11248 0892 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11249              	.LVL682:
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11250              		.loc 21 551 9 is_stmt 1 view .LVU3119
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11251              		.loc 21 551 9 is_stmt 0 view .LVU3120
 11252              	.LBE1979:
 11253              	.LBE2263:
 11254              	.LBE2291:
 11255              	.LBE2302:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 11256              		.loc 10 52 26 is_stmt 1 view .LVU3121
 11257              	.LBB2303:
 11258              	.LBB2292:
 11259              	.LBB2264:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 347


 11260              	.LBB1994:
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11261              		.loc 21 551 50 is_stmt 0 view .LVU3122
 11262 0896 F2EE046A 		vmov.f32	s13, #1.0e+1
 11263 089a 95ED0C7A 		vldr.32	s14, [r5, #48]
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11264              		.loc 21 555 59 view .LVU3123
 11265 089e 0CA9     		add	r1, sp, #48
 552:Veno-Echo.cpp ****         
 11266              		.loc 21 552 50 view .LVU3124
 11267 08a0 D4ED0C7A 		vldr.32	s15, [r4, #48]
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11268              		.loc 21 555 59 view .LVU3125
 11269 08a4 0EAA     		add	r2, sp, #56
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11270              		.loc 21 551 50 view .LVU3126
 11271 08a6 27EE267A 		vmul.f32	s14, s14, s13
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11272              		.loc 21 555 59 view .LVU3127
 11273 08aa C748     		ldr	r0, .L652+16
 552:Veno-Echo.cpp ****         
 11274              		.loc 21 552 50 view .LVU3128
 11275 08ac 67EEA67A 		vmul.f32	s15, s15, s13
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11276              		.loc 21 551 57 view .LVU3129
 11277 08b0 8DED0E7A 		vstr.32	s14, [sp, #56]
 552:Veno-Echo.cpp ****         
 11278              		.loc 21 552 9 is_stmt 1 view .LVU3130
 11279              	.LVL683:
 552:Veno-Echo.cpp ****         
 11280              		.loc 21 552 9 is_stmt 0 view .LVU3131
 11281              	.LBE1994:
 11282              	.LBE2264:
 11283              	.LBE2292:
 11284              	.LBE2303:
 11285              		.loc 10 52 26 is_stmt 1 view .LVU3132
 11286              	.LBB2304:
 11287              	.LBB2293:
 11288              	.LBB2265:
 11289              	.LBB1995:
 552:Veno-Echo.cpp ****         
 11290              		.loc 21 552 57 is_stmt 0 view .LVU3133
 11291 08b4 CDED0F7A 		vstr.32	s15, [sp, #60]
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11292              		.loc 21 555 9 is_stmt 1 view .LVU3134
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11293              		.loc 21 555 59 is_stmt 0 view .LVU3135
 11294 08b8 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11295              	.LVL684:
 556:Veno-Echo.cpp **** 
 11296              		.loc 21 556 59 view .LVU3136
 11297 08bc 0DA9     		add	r1, sp, #52
 11298 08be 0FAA     		add	r2, sp, #60
 11299 08c0 C248     		ldr	r0, .L652+20
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11300              		.loc 21 555 97 view .LVU3137
 11301 08c2 8DED100A 		vstr.32	s0, [sp, #64]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 348


 556:Veno-Echo.cpp **** 
 11302              		.loc 21 556 9 is_stmt 1 view .LVU3138
 556:Veno-Echo.cpp **** 
 11303              		.loc 21 556 59 is_stmt 0 view .LVU3139
 11304 08c6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11305              	.LVL685:
 11306              	.LBB1980:
 11307              	.LBB1981:
2009:Veno-Echo.cpp ****         returnval = limit;
 11308              		.loc 21 2009 5 view .LVU3140
 11309 08ca F0EE006A 		vmov.f32	s13, #2.0e+0
 11310              	.LBE1981:
 11311              	.LBE1980:
 559:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11312              		.loc 21 559 41 view .LVU3141
 11313 08ce 9DED107A 		vldr.32	s14, [sp, #64]
 556:Veno-Echo.cpp **** 
 11314              		.loc 21 556 59 view .LVU3142
 11315 08d2 F0EE407A 		vmov.f32	s15, s0
 559:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11316              		.loc 21 559 9 is_stmt 1 view .LVU3143
 11317              	.LVL686:
 11318              	.LBB1985:
 11319              	.LBI1980:
2006:Veno-Echo.cpp **** {
 11320              		.loc 21 2006 7 view .LVU3144
 11321              	.LBB1982:
2008:Veno-Echo.cpp ****     if (input > limit)
 11322              		.loc 21 2008 5 view .LVU3145
2009:Veno-Echo.cpp ****         returnval = limit;
 11323              		.loc 21 2009 5 view .LVU3146
 11324 08d6 B4EEE67A 		vcmpe.f32	s14, s13
 11325 08da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11326 08de 00F30D81 		bgt	.L591
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11327              		.loc 21 2011 10 view .LVU3147
 11328 08e2 F8EE006A 		vmov.f32	s13, #-2.0e+0
 11329 08e6 B4EEE67A 		vcmpe.f32	s14, s13
 11330 08ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11331 08ee 00F12D81 		bmi	.L592
 11332 08f2 27EE080A 		vmul.f32	s0, s14, s16
 11333              	.LVL687:
 11334              	.L566:
2016:Veno-Echo.cpp **** }
 11335              		.loc 21 2016 5 view .LVU3148
2016:Veno-Echo.cpp **** }
 11336              		.loc 21 2016 5 is_stmt 0 view .LVU3149
 11337              	.LBE1982:
 11338              	.LBE1985:
 11339              	.LBB1986:
 11340              	.LBB1987:
2009:Veno-Echo.cpp ****         returnval = limit;
 11341              		.loc 21 2009 5 view .LVU3150
 11342 08f6 F0EE006A 		vmov.f32	s13, #2.0e+0
 11343              	.LBE1987:
 11344              	.LBE1986:
 559:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 349


 11345              		.loc 21 559 30 view .LVU3151
 11346 08fa 8DED107A 		vstr.32	s14, [sp, #64]
 560:Veno-Echo.cpp **** 
 11347              		.loc 21 560 9 is_stmt 1 view .LVU3152
 11348              	.LVL688:
 11349              	.LBB1990:
 11350              	.LBI1986:
2006:Veno-Echo.cpp **** {
 11351              		.loc 21 2006 7 view .LVU3153
 11352              	.LBB1988:
2008:Veno-Echo.cpp ****     if (input > limit)
 11353              		.loc 21 2008 5 view .LVU3154
2009:Veno-Echo.cpp ****         returnval = limit;
 11354              		.loc 21 2009 5 view .LVU3155
 11355 08fe F4EEE67A 		vcmpe.f32	s15, s13
 11356 0902 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11357 0906 00F30681 		bgt	.L593
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11358              		.loc 21 2011 10 view .LVU3156
 11359 090a B8EE007A 		vmov.f32	s14, #-2.0e+0
2012:Veno-Echo.cpp ****     else
 11360              		.loc 21 2012 19 is_stmt 0 view .LVU3157
 11361 090e F4EE477A 		vcmp.f32	s15, s14
 11362 0912 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11363 0916 48BF     		it	mi
 11364 0918 F0EE477A 		vmovmi.f32	s15, s14
 11365              	.LVL689:
 11366              	.L567:
2016:Veno-Echo.cpp **** }
 11367              		.loc 21 2016 5 is_stmt 1 view .LVU3158
2016:Veno-Echo.cpp **** }
 11368              		.loc 21 2016 5 is_stmt 0 view .LVU3159
 11369              	.LBE1988:
 11370              	.LBE1990:
 563:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11371              		.loc 21 563 27 view .LVU3160
 11372 091c AC4D     		ldr	r5, .L652+24
 564:Veno-Echo.cpp **** 
 11373              		.loc 21 564 27 view .LVU3161
 11374 091e AD4C     		ldr	r4, .L652+28
 563:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11375              		.loc 21 563 27 view .LVU3162
 11376 0920 2846     		mov	r0, r5
 560:Veno-Echo.cpp **** 
 11377              		.loc 21 560 30 view .LVU3163
 11378 0922 CDED117A 		vstr.32	s15, [sp, #68]
 563:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11379              		.loc 21 563 9 is_stmt 1 view .LVU3164
 563:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11380              		.loc 21 563 27 is_stmt 0 view .LVU3165
 11381 0926 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11382              	.LVL690:
 564:Veno-Echo.cpp **** 
 11383              		.loc 21 564 9 is_stmt 1 view .LVU3166
 564:Veno-Echo.cpp **** 
 11384              		.loc 21 564 27 is_stmt 0 view .LVU3167
 11385 092a DFEDA47A 		vldr.32	s15, .L652+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 350


 11386 092e 9DED110A 		vldr.32	s0, [sp, #68]
 11387 0932 2046     		mov	r0, r4
 11388 0934 20EE270A 		vmul.f32	s0, s0, s15
 11389 0938 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11390              	.LVL691:
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11391              		.loc 21 566 9 is_stmt 1 view .LVU3168
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11392              		.loc 21 566 9 is_stmt 0 view .LVU3169
 11393              	.LBE1995:
 11394              	.LBE2265:
 11395              	.LBE2293:
 11396              	.LBE2304:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 11397              		.loc 10 56 27 is_stmt 1 view .LVU3170
 11398              	.LBB2305:
 11399              	.LBB2294:
 11400              	.LBB2266:
 11401              	.LBB1996:
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11402              		.loc 21 566 51 is_stmt 0 view .LVU3171
 11403 093c F2EE046A 		vmov.f32	s13, #1.0e+1
 11404 0940 95ED0D7A 		vldr.32	s14, [r5, #52]
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11405              		.loc 21 569 55 view .LVU3172
 11406 0944 10A9     		add	r1, sp, #64
 567:Veno-Echo.cpp **** 
 11407              		.loc 21 567 51 view .LVU3173
 11408 0946 D4ED0D7A 		vldr.32	s15, [r4, #52]
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11409              		.loc 21 569 55 view .LVU3174
 11410 094a 12AA     		add	r2, sp, #72
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11411              		.loc 21 566 51 view .LVU3175
 11412 094c 27EE267A 		vmul.f32	s14, s14, s13
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11413              		.loc 21 569 55 view .LVU3176
 11414 0950 A148     		ldr	r0, .L652+32
 567:Veno-Echo.cpp **** 
 11415              		.loc 21 567 51 view .LVU3177
 11416 0952 67EEA67A 		vmul.f32	s15, s15, s13
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11417              		.loc 21 566 58 view .LVU3178
 11418 0956 8DED127A 		vstr.32	s14, [sp, #72]
 567:Veno-Echo.cpp **** 
 11419              		.loc 21 567 9 is_stmt 1 view .LVU3179
 11420              	.LVL692:
 567:Veno-Echo.cpp **** 
 11421              		.loc 21 567 9 is_stmt 0 view .LVU3180
 11422              	.LBE1996:
 11423              	.LBE2266:
 11424              	.LBE2294:
 11425              	.LBE2305:
 11426              		.loc 10 56 27 is_stmt 1 view .LVU3181
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 351


 11427              	.LBB2306:
 11428              	.LBB2295:
 11429              	.LBB2267:
 11430              	.LBB1997:
 567:Veno-Echo.cpp **** 
 11431              		.loc 21 567 58 is_stmt 0 view .LVU3182
 11432 095a CDED137A 		vstr.32	s15, [sp, #76]
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11433              		.loc 21 569 9 is_stmt 1 view .LVU3183
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11434              		.loc 21 569 55 is_stmt 0 view .LVU3184
 11435 095e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11436              	.LVL693:
 570:Veno-Echo.cpp **** 
 11437              		.loc 21 570 55 view .LVU3185
 11438 0962 11A9     		add	r1, sp, #68
 11439 0964 13AA     		add	r2, sp, #76
 11440 0966 9D48     		ldr	r0, .L652+36
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11441              		.loc 21 569 30 view .LVU3186
 11442 0968 8DED100A 		vstr.32	s0, [sp, #64]
 570:Veno-Echo.cpp **** 
 11443              		.loc 21 570 9 is_stmt 1 view .LVU3187
 570:Veno-Echo.cpp **** 
 11444              		.loc 21 570 55 is_stmt 0 view .LVU3188
 11445 096c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11446              	.LVL694:
 573:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11447              		.loc 21 573 53 view .LVU3189
 11448 0970 10AA     		add	r2, sp, #64
 11449 0972 0CA9     		add	r1, sp, #48
 11450 0974 9A48     		ldr	r0, .L652+40
 570:Veno-Echo.cpp **** 
 11451              		.loc 21 570 30 view .LVU3190
 11452 0976 8DED110A 		vstr.32	s0, [sp, #68]
 573:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11453              		.loc 21 573 9 is_stmt 1 view .LVU3191
 573:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11454              		.loc 21 573 53 is_stmt 0 view .LVU3192
 11455 097a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11456              	.LVL695:
 574:Veno-Echo.cpp **** 
 11457              		.loc 21 574 53 view .LVU3193
 11458 097e 11AA     		add	r2, sp, #68
 11459 0980 0DA9     		add	r1, sp, #52
 11460 0982 9848     		ldr	r0, .L652+44
 573:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11461              		.loc 21 573 27 view .LVU3194
 11462 0984 8DED0C0A 		vstr.32	s0, [sp, #48]
 574:Veno-Echo.cpp **** 
 11463              		.loc 21 574 9 is_stmt 1 view .LVU3195
 574:Veno-Echo.cpp **** 
 11464              		.loc 21 574 53 is_stmt 0 view .LVU3196
 11465 0988 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11466              	.LVL696:
 11467 098c DDED0C7A 		vldr.32	s15, [sp, #48]
 574:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 352


 11468              		.loc 21 574 27 view .LVU3197
 11469 0990 8DED0D0A 		vstr.32	s0, [sp, #52]
 11470              	.LBE1997:
 11471 0994 A3E4     		b	.L565
 11472              	.LVL697:
 11473              	.L634:
 574:Veno-Echo.cpp **** 
 11474              		.loc 21 574 27 view .LVU3198
 11475              	.LBE2267:
 514:Veno-Echo.cpp **** 
 11476              		.loc 21 514 25 view .LVU3199
 11477 0996 DFED947A 		vldr.32	s15, .L652+48
 11478              	.LVL698:
 514:Veno-Echo.cpp **** 
 11479              		.loc 21 514 25 view .LVU3200
 11480 099a 32E4     		b	.L555
 11481              	.LVL699:
 11482              	.L633:
 510:Veno-Echo.cpp ****             
 11483              		.loc 21 510 25 view .LVU3201
 11484 099c 9FED927A 		vldr.32	s14, .L652+48
 11485              	.LVL700:
 510:Veno-Echo.cpp ****             
 11486              		.loc 21 510 25 view .LVU3202
 11487 09a0 1EE4     		b	.L553
 11488              	.LVL701:
 11489              	.L581:
 11490              	.LBB2268:
 440:Veno-Echo.cpp **** {
 11491              		.loc 21 440 1 view .LVU3203
 11492 09a2 854B     		ldr	r3, .L652
 11493              	.LBE2268:
 11494              	.LBB2269:
 11495              	.LBB1891:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11496              		.loc 21 2010 19 view .LVU3204
 11497 09a4 B0EE470A 		vmov.f32	s0, s14
 11498              	.LVL702:
2016:Veno-Echo.cpp **** }
 11499              		.loc 21 2016 5 is_stmt 1 view .LVU3205
2016:Veno-Echo.cpp **** }
 11500              		.loc 21 2016 5 is_stmt 0 view .LVU3206
 11501              	.LBE1891:
 11502              	.LBE2269:
 11503              	.LBB2270:
 440:Veno-Echo.cpp **** {
 11504              		.loc 21 440 1 view .LVU3207
 11505 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11506              	.LBE2270:
 438:Veno-Echo.cpp **** 
 11507              		.loc 21 438 23 view .LVU3208
 11508 09aa 8DED090A 		vstr.32	s0, [sp, #36]
 440:Veno-Echo.cpp **** {
 11509              		.loc 21 440 1 is_stmt 1 view .LVU3209
 11510              	.LBB2271:
 11511 09ae 002B     		cmp	r3, #0
 11512 09b0 7FF49BAB 		bne	.L547
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 353


 11513              	.L641:
 11514              	.LBB1894:
 446:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11515              		.loc 21 446 9 view .LVU3210
 446:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11516              		.loc 21 446 22 is_stmt 0 view .LVU3211
 11517 09b4 9FED819A 		vldr.32	s18, .L652+4
 11518 09b8 8C4D     		ldr	r5, .L652+52
 11519 09ba 27EE890A 		vmul.f32	s0, s15, s18
 447:Veno-Echo.cpp **** 
 11520              		.loc 21 447 22 view .LVU3212
 11521 09be 8C4C     		ldr	r4, .L652+56
 446:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11522              		.loc 21 446 22 view .LVU3213
 11523 09c0 2846     		mov	r0, r5
 11524 09c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11525              	.LVL703:
 447:Veno-Echo.cpp **** 
 11526              		.loc 21 447 9 is_stmt 1 view .LVU3214
 447:Veno-Echo.cpp **** 
 11527              		.loc 21 447 22 is_stmt 0 view .LVU3215
 11528 09c6 9DED090A 		vldr.32	s0, [sp, #36]
 11529 09ca 2046     		mov	r0, r4
 11530 09cc 20EE090A 		vmul.f32	s0, s0, s18
 11531 09d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11532              	.LVL704:
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11533              		.loc 21 450 9 is_stmt 1 view .LVU3216
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11534              		.loc 21 450 9 is_stmt 0 view .LVU3217
 11535              	.LBE1894:
 11536              	.LBE2271:
 11537              	.LBE2295:
 11538              	.LBE2306:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11539              		.loc 10 52 26 is_stmt 1 view .LVU3218
 11540              	.LBB2307:
 11541              	.LBB2296:
 11542              	.LBB2272:
 11543              	.LBB1909:
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11544              		.loc 21 450 40 is_stmt 0 view .LVU3219
 11545 09d4 F2EE046A 		vmov.f32	s13, #1.0e+1
 11546 09d8 95ED0C7A 		vldr.32	s14, [r5, #48]
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11547              		.loc 21 454 49 view .LVU3220
 11548 09dc 0EAA     		add	r2, sp, #56
 451:Veno-Echo.cpp ****         
 11549              		.loc 21 451 40 view .LVU3221
 11550 09de D4ED0C7A 		vldr.32	s15, [r4, #48]
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11551              		.loc 21 454 49 view .LVU3222
 11552 09e2 08A9     		add	r1, sp, #32
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11553              		.loc 21 450 40 view .LVU3223
 11554 09e4 27EE267A 		vmul.f32	s14, s14, s13
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 354


 11555              		.loc 21 454 49 view .LVU3224
 11556 09e8 8248     		ldr	r0, .L652+60
 451:Veno-Echo.cpp ****         
 11557              		.loc 21 451 40 view .LVU3225
 11558 09ea 67EEA67A 		vmul.f32	s15, s15, s13
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11559              		.loc 21 450 47 view .LVU3226
 11560 09ee 8DED0E7A 		vstr.32	s14, [sp, #56]
 451:Veno-Echo.cpp ****         
 11561              		.loc 21 451 9 is_stmt 1 view .LVU3227
 11562              	.LVL705:
 451:Veno-Echo.cpp ****         
 11563              		.loc 21 451 9 is_stmt 0 view .LVU3228
 11564              	.LBE1909:
 11565              	.LBE2272:
 11566              	.LBE2296:
 11567              	.LBE2307:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11568              		.loc 10 52 26 is_stmt 1 view .LVU3229
 11569              	.LBB2308:
 11570              	.LBB2297:
 11571              	.LBB2273:
 11572              	.LBB1910:
 451:Veno-Echo.cpp ****         
 11573              		.loc 21 451 47 is_stmt 0 view .LVU3230
 11574 09f2 CDED0F7A 		vstr.32	s15, [sp, #60]
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11575              		.loc 21 454 9 is_stmt 1 view .LVU3231
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11576              		.loc 21 454 49 is_stmt 0 view .LVU3232
 11577 09f6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11578              	.LVL706:
 455:Veno-Echo.cpp **** 
 11579              		.loc 21 455 49 view .LVU3233
 11580 09fa 0FAA     		add	r2, sp, #60
 11581 09fc 09A9     		add	r1, sp, #36
 11582 09fe 7E48     		ldr	r0, .L652+64
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11583              		.loc 21 454 78 view .LVU3234
 11584 0a00 8DED100A 		vstr.32	s0, [sp, #64]
 455:Veno-Echo.cpp **** 
 11585              		.loc 21 455 9 is_stmt 1 view .LVU3235
 455:Veno-Echo.cpp **** 
 11586              		.loc 21 455 49 is_stmt 0 view .LVU3236
 11587 0a04 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11588              	.LVL707:
 11589              	.LBB1895:
 11590              	.LBB1896:
2009:Veno-Echo.cpp ****         returnval = limit;
 11591              		.loc 21 2009 5 view .LVU3237
 11592 0a08 F0EE006A 		vmov.f32	s13, #2.0e+0
 11593              	.LBE1896:
 11594              	.LBE1895:
 458:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11595              		.loc 21 458 36 view .LVU3238
 11596 0a0c 9DED107A 		vldr.32	s14, [sp, #64]
 455:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 355


 11597              		.loc 21 455 49 view .LVU3239
 11598 0a10 F0EE407A 		vmov.f32	s15, s0
 458:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11599              		.loc 21 458 9 is_stmt 1 view .LVU3240
 11600              	.LVL708:
 11601              	.LBB1900:
 11602              	.LBI1895:
2006:Veno-Echo.cpp **** {
 11603              		.loc 21 2006 7 view .LVU3241
 11604              	.LBB1897:
2008:Veno-Echo.cpp ****     if (input > limit)
 11605              		.loc 21 2008 5 view .LVU3242
2009:Veno-Echo.cpp ****         returnval = limit;
 11606              		.loc 21 2009 5 view .LVU3243
 11607 0a14 B4EEE67A 		vcmpe.f32	s14, s13
 11608 0a18 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11609 0a1c 76DC     		bgt	.L582
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11610              		.loc 21 2011 10 view .LVU3244
 11611 0a1e F8EE006A 		vmov.f32	s13, #-2.0e+0
 11612 0a22 B4EEE67A 		vcmpe.f32	s14, s13
 11613 0a26 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11614 0a2a 00F19480 		bmi	.L583
 11615 0a2e 27EE090A 		vmul.f32	s0, s14, s18
 11616              	.LVL709:
 11617              	.L548:
2016:Veno-Echo.cpp **** }
 11618              		.loc 21 2016 5 view .LVU3245
2016:Veno-Echo.cpp **** }
 11619              		.loc 21 2016 5 is_stmt 0 view .LVU3246
 11620              	.LBE1897:
 11621              	.LBE1900:
 11622              	.LBB1901:
 11623              	.LBB1902:
2009:Veno-Echo.cpp ****         returnval = limit;
 11624              		.loc 21 2009 5 view .LVU3247
 11625 0a32 F0EE006A 		vmov.f32	s13, #2.0e+0
 11626              	.LBE1902:
 11627              	.LBE1901:
 458:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11628              		.loc 21 458 25 view .LVU3248
 11629 0a36 8DED107A 		vstr.32	s14, [sp, #64]
 459:Veno-Echo.cpp **** 
 11630              		.loc 21 459 9 is_stmt 1 view .LVU3249
 11631              	.LVL710:
 11632              	.LBB1905:
 11633              	.LBI1901:
2006:Veno-Echo.cpp **** {
 11634              		.loc 21 2006 7 view .LVU3250
 11635              	.LBB1903:
2008:Veno-Echo.cpp ****     if (input > limit)
 11636              		.loc 21 2008 5 view .LVU3251
2009:Veno-Echo.cpp ****         returnval = limit;
 11637              		.loc 21 2009 5 view .LVU3252
 11638 0a3a F4EEE67A 		vcmpe.f32	s15, s13
 11639 0a3e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11640 0a42 60DC     		bgt	.L584
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 356


2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11641              		.loc 21 2011 10 view .LVU3253
 11642 0a44 B8EE007A 		vmov.f32	s14, #-2.0e+0
2012:Veno-Echo.cpp ****     else
 11643              		.loc 21 2012 19 is_stmt 0 view .LVU3254
 11644 0a48 F4EE477A 		vcmp.f32	s15, s14
 11645 0a4c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11646 0a50 48BF     		it	mi
 11647 0a52 F0EE477A 		vmovmi.f32	s15, s14
 11648              	.LVL711:
 11649              	.L549:
2016:Veno-Echo.cpp **** }
 11650              		.loc 21 2016 5 is_stmt 1 view .LVU3255
2016:Veno-Echo.cpp **** }
 11651              		.loc 21 2016 5 is_stmt 0 view .LVU3256
 11652              	.LBE1903:
 11653              	.LBE1905:
 462:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11654              		.loc 21 462 22 view .LVU3257
 11655 0a56 694D     		ldr	r5, .L652+68
 463:Veno-Echo.cpp **** 
 11656              		.loc 21 463 22 view .LVU3258
 11657 0a58 694C     		ldr	r4, .L652+72
 462:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11658              		.loc 21 462 22 view .LVU3259
 11659 0a5a 2846     		mov	r0, r5
 459:Veno-Echo.cpp **** 
 11660              		.loc 21 459 25 view .LVU3260
 11661 0a5c CDED117A 		vstr.32	s15, [sp, #68]
 462:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11662              		.loc 21 462 9 is_stmt 1 view .LVU3261
 462:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11663              		.loc 21 462 22 is_stmt 0 view .LVU3262
 11664 0a60 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11665              	.LVL712:
 463:Veno-Echo.cpp **** 
 11666              		.loc 21 463 9 is_stmt 1 view .LVU3263
 463:Veno-Echo.cpp **** 
 11667              		.loc 21 463 22 is_stmt 0 view .LVU3264
 11668 0a64 DFED557A 		vldr.32	s15, .L652+4
 11669 0a68 9DED110A 		vldr.32	s0, [sp, #68]
 11670 0a6c 2046     		mov	r0, r4
 11671 0a6e 20EE270A 		vmul.f32	s0, s0, s15
 11672 0a72 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11673              	.LVL713:
 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11674              		.loc 21 465 9 is_stmt 1 view .LVU3265
 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11675              		.loc 21 465 9 is_stmt 0 view .LVU3266
 11676              	.LBE1910:
 11677              	.LBE2273:
 11678              	.LBE2297:
 11679              	.LBE2308:
 11680              		.loc 10 56 27 is_stmt 1 view .LVU3267
 11681              	.LBB2309:
 11682              	.LBB2298:
 11683              	.LBB2274:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 357


 11684              	.LBB1911:
 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11685              		.loc 21 465 41 is_stmt 0 view .LVU3268
 11686 0a76 F2EE046A 		vmov.f32	s13, #1.0e+1
 11687 0a7a 95ED0D7A 		vldr.32	s14, [r5, #52]
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11688              		.loc 21 468 45 view .LVU3269
 11689 0a7e 10A9     		add	r1, sp, #64
 466:Veno-Echo.cpp **** 
 11690              		.loc 21 466 41 view .LVU3270
 11691 0a80 D4ED0D7A 		vldr.32	s15, [r4, #52]
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11692              		.loc 21 468 45 view .LVU3271
 11693 0a84 12AA     		add	r2, sp, #72
 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11694              		.loc 21 465 41 view .LVU3272
 11695 0a86 27EE267A 		vmul.f32	s14, s14, s13
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11696              		.loc 21 468 45 view .LVU3273
 11697 0a8a 5E48     		ldr	r0, .L652+76
 466:Veno-Echo.cpp **** 
 11698              		.loc 21 466 41 view .LVU3274
 11699 0a8c 67EEA67A 		vmul.f32	s15, s15, s13
 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11700              		.loc 21 465 48 view .LVU3275
 11701 0a90 8DED127A 		vstr.32	s14, [sp, #72]
 466:Veno-Echo.cpp **** 
 11702              		.loc 21 466 9 is_stmt 1 view .LVU3276
 11703              	.LVL714:
 466:Veno-Echo.cpp **** 
 11704              		.loc 21 466 9 is_stmt 0 view .LVU3277
 11705              	.LBE1911:
 11706              	.LBE2274:
 11707              	.LBE2298:
 11708              	.LBE2309:
 11709              		.loc 10 56 27 is_stmt 1 view .LVU3278
 11710              	.LBB2310:
 11711              	.LBB2299:
 11712              	.LBB2275:
 11713              	.LBB1912:
 466:Veno-Echo.cpp **** 
 11714              		.loc 21 466 48 is_stmt 0 view .LVU3279
 11715 0a94 CDED137A 		vstr.32	s15, [sp, #76]
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11716              		.loc 21 468 9 is_stmt 1 view .LVU3280
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11717              		.loc 21 468 45 is_stmt 0 view .LVU3281
 11718 0a98 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11719              	.LVL715:
 469:Veno-Echo.cpp **** 
 11720              		.loc 21 469 45 view .LVU3282
 11721 0a9c 11A9     		add	r1, sp, #68
 11722 0a9e 13AA     		add	r2, sp, #76
 11723 0aa0 5948     		ldr	r0, .L652+80
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11724              		.loc 21 468 25 view .LVU3283
 11725 0aa2 8DED100A 		vstr.32	s0, [sp, #64]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 358


 469:Veno-Echo.cpp **** 
 11726              		.loc 21 469 9 is_stmt 1 view .LVU3284
 469:Veno-Echo.cpp **** 
 11727              		.loc 21 469 45 is_stmt 0 view .LVU3285
 11728 0aa6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11729              	.LVL716:
 473:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11730              		.loc 21 473 44 view .LVU3286
 11731 0aaa 10AA     		add	r2, sp, #64
 11732 0aac 08A9     		add	r1, sp, #32
 11733 0aae 5748     		ldr	r0, .L652+84
 469:Veno-Echo.cpp **** 
 11734              		.loc 21 469 25 view .LVU3287
 11735 0ab0 8DED110A 		vstr.32	s0, [sp, #68]
 473:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11736              		.loc 21 473 9 is_stmt 1 view .LVU3288
 473:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11737              		.loc 21 473 44 is_stmt 0 view .LVU3289
 11738 0ab4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11739              	.LVL717:
 474:Veno-Echo.cpp **** 
 11740              		.loc 21 474 44 view .LVU3290
 11741 0ab8 11AA     		add	r2, sp, #68
 11742 0aba 09A9     		add	r1, sp, #36
 11743 0abc 5448     		ldr	r0, .L652+88
 473:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11744              		.loc 21 473 23 view .LVU3291
 11745 0abe 8DED080A 		vstr.32	s0, [sp, #32]
 474:Veno-Echo.cpp **** 
 11746              		.loc 21 474 9 is_stmt 1 view .LVU3292
 474:Veno-Echo.cpp **** 
 11747              		.loc 21 474 44 is_stmt 0 view .LVU3293
 11748 0ac2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11749              	.LVL718:
 11750 0ac6 DDED087A 		vldr.32	s15, [sp, #32]
 474:Veno-Echo.cpp **** 
 11751              		.loc 21 474 23 view .LVU3294
 11752 0aca 8DED090A 		vstr.32	s0, [sp, #36]
 11753              	.LBE1912:
 11754 0ace FFF70CBB 		b	.L547
 11755              	.LVL719:
 11756              	.L588:
 474:Veno-Echo.cpp **** 
 11757              		.loc 21 474 23 view .LVU3295
 11758              	.LBE2275:
 11759              	.LBB2276:
 11760              	.LBB1965:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11761              		.loc 21 2010 19 view .LVU3296
 11762 0ad2 B0EE676A 		vmov.f32	s12, s15
 11763              	.LVL720:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11764              		.loc 21 2010 19 view .LVU3297
 11765 0ad6 FFF7BFBB 		b	.L559
 11766              	.LVL721:
 11767              	.L587:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 359


 11768              		.loc 21 2010 19 view .LVU3298
 11769              	.LBE1965:
 11770              	.LBE2276:
 11771              	.LBB2277:
 11772              	.LBB1961:
 11773 0ada F0EE678A 		vmov.f32	s17, s15
 11774              	.LVL722:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11775              		.loc 21 2010 19 view .LVU3299
 11776 0ade FFF7A8BB 		b	.L557
 11777              	.LVL723:
 11778              	.L589:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11779              		.loc 21 2010 19 view .LVU3300
 11780              	.LBE1961:
 11781              	.LBE2277:
 11782              	.LBB2278:
 11783              	.LBB1970:
 11784 0ae2 F0EE477A 		vmov.f32	s15, s14
 11785              	.LVL724:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11786              		.loc 21 2010 19 view .LVU3301
 11787 0ae6 FFF7E0BB 		b	.L561
 11788              	.LVL725:
 11789              	.L636:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11790              		.loc 21 2010 19 view .LVU3302
 11791              	.LBE1970:
 11792              	.LBE2278:
 594:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11793              		.loc 21 594 13 is_stmt 1 view .LVU3303
 594:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11794              		.loc 21 594 18 is_stmt 0 view .LVU3304
 11795 0aea DBED006A 		vldr.32	s13, [fp]
 595:Veno-Echo.cpp ****         }
 11796              		.loc 21 595 18 view .LVU3305
 11797 0aee 9BED017A 		vldr.32	s14, [fp, #4]
 594:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11798              		.loc 21 594 18 view .LVU3306
 11799 0af2 77EEA67A 		vadd.f32	s15, s15, s13
 11800              	.LVL726:
 595:Veno-Echo.cpp ****         }
 11801              		.loc 21 595 13 is_stmt 1 view .LVU3307
 595:Veno-Echo.cpp ****         }
 11802              		.loc 21 595 18 is_stmt 0 view .LVU3308
 11803 0af6 30EE070A 		vadd.f32	s0, s0, s14
 11804              	.LVL727:
 595:Veno-Echo.cpp ****         }
 11805              		.loc 21 595 18 view .LVU3309
 11806 0afa 09E4     		b	.L571
 11807              	.LVL728:
 11808              	.L591:
 11809              	.LBB2279:
 11810              	.LBB1998:
 11811              	.LBB1991:
 11812              	.LBB1983:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 360


 11813              		.loc 21 2010 19 view .LVU3310
 11814 0afc B0EE667A 		vmov.f32	s14, s13
 11815              	.LVL729:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11816              		.loc 21 2010 19 view .LVU3311
 11817 0b00 9FED440A 		vldr.32	s0, .L652+92
 11818 0b04 F7E6     		b	.L566
 11819              	.LVL730:
 11820              	.L584:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11821              		.loc 21 2010 19 view .LVU3312
 11822              	.LBE1983:
 11823              	.LBE1991:
 11824              	.LBE1998:
 11825              	.LBE2279:
 11826              	.LBB2280:
 11827              	.LBB1913:
 11828              	.LBB1906:
 11829              	.LBB1904:
 11830 0b06 F0EE667A 		vmov.f32	s15, s13
 11831              	.LVL731:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11832              		.loc 21 2010 19 view .LVU3313
 11833 0b0a A4E7     		b	.L549
 11834              	.LVL732:
 11835              	.L582:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11836              		.loc 21 2010 19 view .LVU3314
 11837              	.LBE1904:
 11838              	.LBE1906:
 11839              	.LBB1907:
 11840              	.LBB1898:
 11841 0b0c B0EE667A 		vmov.f32	s14, s13
 11842              	.LVL733:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11843              		.loc 21 2010 19 view .LVU3315
 11844 0b10 9FED400A 		vldr.32	s0, .L652+92
 11845 0b14 8DE7     		b	.L548
 11846              	.LVL734:
 11847              	.L593:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11848              		.loc 21 2010 19 view .LVU3316
 11849              	.LBE1898:
 11850              	.LBE1907:
 11851              	.LBE1913:
 11852              	.LBE2280:
 11853              	.LBB2281:
 11854              	.LBB1999:
 11855              	.LBB1992:
 11856              	.LBB1989:
 11857 0b16 F0EE667A 		vmov.f32	s15, s13
 11858              	.LVL735:
2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11859              		.loc 21 2010 19 view .LVU3317
 11860 0b1a FFE6     		b	.L567
 11861              	.LVL736:
 11862              	.L525:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 361


2010:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11863              		.loc 21 2010 19 view .LVU3318
 11864              	.LBE1989:
 11865              	.LBE1992:
 11866              	.LBE1999:
 11867              	.LBE2281:
 11868              	.LBB2282:
 11869              	.LBB2223:
 11870              	.LBB2212:
 116:delayline_reverse.h ****                 }
 11871              		.loc 20 116 21 view .LVU3319
 11872 0b1c AB60     		str	r3, [r5, #8]
 11873 0b1e 5DE6     		b	.L527
 11874              	.LVL737:
 11875              	.L535:
 116:delayline_reverse.h ****                 }
 11876              		.loc 20 116 21 view .LVU3320
 11877              	.LBE2212:
 11878              	.LBE2223:
 11879              	.LBE2282:
 11880              	.LBB2283:
 11881              	.LBB2251:
 11882              	.LBB2246:
 11883 0b20 A260     		str	r2, [r4, #8]
 11884 0b22 38E6     		b	.L537
 11885              	.LVL738:
 11886              	.L504:
 116:delayline_reverse.h ****                 }
 11887              		.loc 20 116 21 view .LVU3321
 11888              	.LBE2246:
 11889              	.LBE2251:
 11890              	.LBE2283:
 11891              	.LBE2299:
 11892              	.LBE2310:
 615:Veno-Echo.cpp **** 
 11893              		.loc 21 615 1 view .LVU3322
 11894 0b24 15B0     		add	sp, sp, #84
 11895              		.cfi_remember_state
 11896              		.cfi_def_cfa_offset 92
 11897              		@ sp needed
 11898 0b26 BDEC0E8B 		vldm	sp!, {d8-d14}
 11899              		.cfi_restore 92
 11900              		.cfi_restore 93
 11901              		.cfi_restore 90
 11902              		.cfi_restore 91
 11903              		.cfi_restore 88
 11904              		.cfi_restore 89
 11905              		.cfi_restore 86
 11906              		.cfi_restore 87
 11907              		.cfi_restore 84
 11908              		.cfi_restore 85
 11909              		.cfi_restore 82
 11910              		.cfi_restore 83
 11911              		.cfi_restore 80
 11912              		.cfi_restore 81
 11913              		.cfi_def_cfa_offset 36
 11914 0b2a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 362


 11915              	.LVL739:
 11916              	.L542:
 11917              		.cfi_restore_state
 11918              	.LBB2311:
 11919              	.LBB2300:
 11920              	.LBB2284:
 11921              	.LBB2252:
 11922              	.LBB2247:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11923              		.loc 20 145 21 view .LVU3323
 11924 0b2e 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11925              		.loc 20 144 21 view .LVU3324
 11926 0b30 039C     		ldr	r4, [sp, #12]
 11927              	.LVL740:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11928              		.loc 20 144 21 view .LVU3325
 11929 0b32 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11930              		.loc 20 145 21 view .LVU3326
 11931 0b34 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11932              		.loc 20 146 21 view .LVU3327
 11933 0b36 0170     		strb	r1, [r0]
 11934 0b38 FAE5     		b	.L539
 11935              	.LVL741:
 11936              	.L532:
 146:delayline_reverse.h ****                 }
 11937              		.loc 20 146 21 view .LVU3328
 11938              	.LBE2247:
 11939              	.LBE2252:
 11940              	.LBE2284:
 11941              	.LBB2285:
 11942              	.LBB2224:
 11943              	.LBB2213:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11944              		.loc 20 145 21 view .LVU3329
 11945 0b3a 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11946              		.loc 20 144 21 view .LVU3330
 11947 0b3c 049D     		ldr	r5, [sp, #16]
 11948              	.LVL742:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11949              		.loc 20 144 21 view .LVU3331
 11950 0b3e 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11951              		.loc 20 145 21 view .LVU3332
 11952 0b40 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 11953              		.loc 20 146 21 view .LVU3333
 11954 0b42 0170     		strb	r1, [r0]
 11955 0b44 8BE5     		b	.L529
 11956              	.LVL743:
 11957              	.L643:
 146:delayline_reverse.h ****                 }
 11958              		.loc 20 146 21 view .LVU3334
 11959              	.LBE2213:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 363


 11960              	.LBE2224:
 11961              	.LBE2285:
 11962              	.LBB2286:
 11963              	.LBB2253:
 11964              	.LBB2248:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11965              		.loc 20 130 17 view .LVU3335
 11966 0b46 C2ED007A 		vstr.32	s15, [r2]
 11967 0b4a F1E5     		b	.L539
 11968              	.LVL744:
 11969              	.L592:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11970              		.loc 20 130 17 view .LVU3336
 11971              	.LBE2248:
 11972              	.LBE2253:
 11973              	.LBE2286:
 11974              	.LBB2287:
 11975              	.LBB2000:
 11976              	.LBB1993:
 11977              	.LBB1984:
2012:Veno-Echo.cpp ****     else
 11978              		.loc 21 2012 19 view .LVU3337
 11979 0b4c B0EE667A 		vmov.f32	s14, s13
 11980              	.LVL745:
2012:Veno-Echo.cpp ****     else
 11981              		.loc 21 2012 19 view .LVU3338
 11982 0b50 9FED310A 		vldr.32	s0, .L652+96
 11983 0b54 CFE6     		b	.L566
 11984              	.LVL746:
 11985              	.L583:
2012:Veno-Echo.cpp ****     else
 11986              		.loc 21 2012 19 view .LVU3339
 11987              	.LBE1984:
 11988              	.LBE1993:
 11989              	.LBE2000:
 11990              	.LBE2287:
 11991              	.LBB2288:
 11992              	.LBB1914:
 11993              	.LBB1908:
 11994              	.LBB1899:
 11995 0b56 B0EE667A 		vmov.f32	s14, s13
 11996              	.LVL747:
2012:Veno-Echo.cpp ****     else
 11997              		.loc 21 2012 19 view .LVU3340
 11998 0b5a 9FED2F0A 		vldr.32	s0, .L652+96
 11999 0b5e 68E7     		b	.L548
 12000              	.LVL748:
 12001              	.L506:
2012:Veno-Echo.cpp ****     else
 12002              		.loc 21 2012 19 view .LVU3341
 12003              	.LBE1899:
 12004              	.LBE1908:
 12005              	.LBE1914:
 12006              	.LBE2288:
 12007              	.LBE2300:
 12008              	.LBE2311:
 374:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 364


 12009              		.loc 21 374 13 is_stmt 1 view .LVU3342
 375:Veno-Echo.cpp ****                 {
 12010              		.loc 21 375 17 view .LVU3343
 375:Veno-Echo.cpp ****                 {
 12011              		.loc 21 375 30 is_stmt 0 view .LVU3344
 12012 0b60 2E4B     		ldr	r3, .L652+100
 375:Veno-Echo.cpp ****                 {
 12013              		.loc 21 375 17 view .LVU3345
 12014 0b62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12015 0b64 022B     		cmp	r3, #2
 12016 0b66 3FF47EAA 		beq	.L505
 377:Veno-Echo.cpp ****                 }
 12017              		.loc 21 377 21 is_stmt 1 view .LVU3346
 377:Veno-Echo.cpp ****                 }
 12018              		.loc 21 377 39 is_stmt 0 view .LVU3347
 12019 0b6a FFF7FEFF 		bl	_Z18Update_filterXfadev
 12020              	.LVL749:
 377:Veno-Echo.cpp ****                 }
 12021              		.loc 21 377 39 view .LVU3348
 12022 0b6e FFF77ABA 		b	.L505
 12023              	.LVL750:
 12024              	.L521:
 294:Veno-Echo.cpp ****                 Update_Buttons();
 12025              		.loc 21 294 13 is_stmt 1 view .LVU3349
 295:Veno-Echo.cpp ****                 GetModCV();
 12026              		.loc 21 295 17 view .LVU3350
 295:Veno-Echo.cpp ****                 GetModCV();
 12027              		.loc 21 295 31 is_stmt 0 view .LVU3351
 12028 0b72 FFF7FEFF 		bl	_Z14Update_Buttonsv
 12029              	.LVL751:
 296:Veno-Echo.cpp ****                 //Update_DelayBaseTempo();
 12030              		.loc 21 296 17 is_stmt 1 view .LVU3352
 296:Veno-Echo.cpp ****                 //Update_DelayBaseTempo();
 12031              		.loc 21 296 25 is_stmt 0 view .LVU3353
 12032 0b76 FFF7FEFF 		bl	_Z8GetModCVv
 12033              	.LVL752:
 298:Veno-Echo.cpp ****             break;
 12034              		.loc 21 298 17 is_stmt 1 view .LVU3354
 298:Veno-Echo.cpp ****             break;
 12035              		.loc 21 298 38 is_stmt 0 view .LVU3355
 12036 0b7a FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 12037              	.LVL753:
 299:Veno-Echo.cpp **** 
 12038              		.loc 21 299 13 is_stmt 1 view .LVU3356
 12039 0b7e FFF772BA 		b	.L505
 12040              	.LVL754:
 12041              	.L519:
 305:Veno-Echo.cpp ****                 if(saveState != SAVING)
 12042              		.loc 21 305 13 view .LVU3357
 306:Veno-Echo.cpp ****                 {
 12043              		.loc 21 306 17 view .LVU3358
 306:Veno-Echo.cpp ****                 {
 12044              		.loc 21 306 30 is_stmt 0 view .LVU3359
 12045 0b82 264B     		ldr	r3, .L652+100
 306:Veno-Echo.cpp ****                 {
 12046              		.loc 21 306 17 view .LVU3360
 12047 0b84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 365


 12048 0b86 022B     		cmp	r3, #2
 12049 0b88 3FF46DAA 		beq	.L505
 308:Veno-Echo.cpp ****                 }
 12050              		.loc 21 308 21 is_stmt 1 view .LVU3361
 308:Veno-Echo.cpp ****                 }
 12051              		.loc 21 308 38 is_stmt 0 view .LVU3362
 12052 0b8c FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 12053              	.LVL755:
 308:Veno-Echo.cpp ****                 }
 12054              		.loc 21 308 38 view .LVU3363
 12055 0b90 FFF769BA 		b	.L505
 12056              	.LVL756:
 12057              	.L518:
 312:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 12058              		.loc 21 312 13 is_stmt 1 view .LVU3364
 313:Veno-Echo.cpp ****             break;
 12059              		.loc 21 313 17 view .LVU3365
 12060              	.LBB2312:
 12061              	.LBI2312:
 953:Veno-Echo.cpp **** {
 12062              		.loc 21 953 6 view .LVU3366
 12063              	.LBB2313:
 955:Veno-Echo.cpp **** }
 12064              		.loc 21 955 5 view .LVU3367
 955:Veno-Echo.cpp **** }
 12065              		.loc 21 955 36 is_stmt 0 view .LVU3368
 12066 0b94 0121     		movs	r1, #1
 12067              	.LVL757:
 955:Veno-Echo.cpp **** }
 12068              		.loc 21 955 36 view .LVU3369
 12069 0b96 2248     		ldr	r0, .L652+104
 12070              	.LVL758:
 955:Veno-Echo.cpp **** }
 12071              		.loc 21 955 36 view .LVU3370
 12072 0b98 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12073              	.LVL759:
 955:Veno-Echo.cpp **** }
 12074              		.loc 21 955 19 view .LVU3371
 12075 0b9c 214B     		ldr	r3, .L652+108
 12076 0b9e 83ED000A 		vstr.32	s0, [r3]
 956:Veno-Echo.cpp **** 
 12077              		.loc 21 956 1 view .LVU3372
 12078 0ba2 FFF760BA 		b	.L505
 12079              	.LVL760:
 12080              	.L517:
 956:Veno-Echo.cpp **** 
 12081              		.loc 21 956 1 view .LVU3373
 12082              	.LBE2313:
 12083              	.LBE2312:
 316:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12084              		.loc 21 316 13 is_stmt 1 view .LVU3374
 317:Veno-Echo.cpp ****                 {
 12085              		.loc 21 317 17 view .LVU3375
 317:Veno-Echo.cpp ****                 {
 12086              		.loc 21 317 30 is_stmt 0 view .LVU3376
 12087 0ba6 1D4B     		ldr	r3, .L652+100
 317:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 366


 12088              		.loc 21 317 17 view .LVU3377
 12089 0ba8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12090 0baa 022B     		cmp	r3, #2
 12091 0bac 3FF45BAA 		beq	.L505
 319:Veno-Echo.cpp ****                 }
 12092              		.loc 21 319 21 is_stmt 1 view .LVU3378
 319:Veno-Echo.cpp ****                 }
 12093              		.loc 21 319 38 is_stmt 0 view .LVU3379
 12094 0bb0 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 12095              	.LVL761:
 319:Veno-Echo.cpp ****                 }
 12096              		.loc 21 319 38 view .LVU3380
 12097 0bb4 FFF757BA 		b	.L505
 12098              	.L653:
 12099              		.align	2
 12100              	.L652:
 12101 0bb8 00000000 		.word	.LANCHOR83
 12102 0bbc CDCCCC3D 		.word	1036831949
 12103 0bc0 00000000 		.word	.LANCHOR49
 12104 0bc4 00000000 		.word	.LANCHOR50
 12105 0bc8 00000000 		.word	.LANCHOR123
 12106 0bcc 00000000 		.word	.LANCHOR124
 12107 0bd0 00000000 		.word	.LANCHOR37
 12108 0bd4 00000000 		.word	.LANCHOR38
 12109 0bd8 00000000 		.word	.LANCHOR121
 12110 0bdc 00000000 		.word	.LANCHOR122
 12111 0be0 00000000 		.word	.LANCHOR127
 12112 0be4 00000000 		.word	.LANCHOR128
 12113 0be8 00000000 		.word	0
 12114 0bec 00000000 		.word	.LANCHOR47
 12115 0bf0 00000000 		.word	.LANCHOR48
 12116 0bf4 00000000 		.word	.LANCHOR119
 12117 0bf8 00000000 		.word	.LANCHOR120
 12118 0bfc 00000000 		.word	.LANCHOR35
 12119 0c00 00000000 		.word	.LANCHOR36
 12120 0c04 00000000 		.word	.LANCHOR117
 12121 0c08 00000000 		.word	.LANCHOR118
 12122 0c0c 00000000 		.word	.LANCHOR125
 12123 0c10 00000000 		.word	.LANCHOR126
 12124 0c14 CDCC4C3E 		.word	1045220557
 12125 0c18 CDCC4CBE 		.word	3192704205
 12126 0c1c 00000000 		.word	.LANCHOR109
 12127 0c20 18000000 		.word	.LANCHOR4+24
 12128 0c24 00000000 		.word	.LANCHOR17
 12129              	.LVL762:
 12130              	.L516:
 323:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 12131              		.loc 21 323 13 is_stmt 1 view .LVU3381
 324:Veno-Echo.cpp ****             break;
 12132              		.loc 21 324 17 view .LVU3382
 12133              	.LBB2314:
 12134              	.LBI2314:
1052:Veno-Echo.cpp **** {
 12135              		.loc 21 1052 6 view .LVU3383
 12136              	.LBB2315:
1054:Veno-Echo.cpp **** }
 12137              		.loc 21 1054 5 view .LVU3384
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 367


1054:Veno-Echo.cpp **** }
 12138              		.loc 21 1054 35 is_stmt 0 view .LVU3385
 12139 0c28 0221     		movs	r1, #2
 12140              	.LVL763:
1054:Veno-Echo.cpp **** }
 12141              		.loc 21 1054 35 view .LVU3386
 12142 0c2a 2848     		ldr	r0, .L654
 12143              	.LVL764:
1054:Veno-Echo.cpp **** }
 12144              		.loc 21 1054 35 view .LVU3387
 12145 0c2c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12146              	.LVL765:
1054:Veno-Echo.cpp **** }
 12147              		.loc 21 1054 18 view .LVU3388
 12148 0c30 274B     		ldr	r3, .L654+4
 12149 0c32 83ED000A 		vstr.32	s0, [r3]
1055:Veno-Echo.cpp **** void Update_feedbackL()
 12150              		.loc 21 1055 1 view .LVU3389
 12151 0c36 FFF716BA 		b	.L505
 12152              	.LVL766:
 12153              	.L515:
1055:Veno-Echo.cpp **** void Update_feedbackL()
 12154              		.loc 21 1055 1 view .LVU3390
 12155              	.LBE2315:
 12156              	.LBE2314:
 327:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12157              		.loc 21 327 13 is_stmt 1 view .LVU3391
 328:Veno-Echo.cpp ****                 {
 12158              		.loc 21 328 17 view .LVU3392
 328:Veno-Echo.cpp ****                 {
 12159              		.loc 21 328 30 is_stmt 0 view .LVU3393
 12160 0c3a 264B     		ldr	r3, .L654+8
 328:Veno-Echo.cpp ****                 {
 12161              		.loc 21 328 17 view .LVU3394
 12162 0c3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12163 0c3e 022B     		cmp	r3, #2
 12164 0c40 3FF411AA 		beq	.L505
 330:Veno-Echo.cpp ****                 }
 12165              		.loc 21 330 21 is_stmt 1 view .LVU3395
 330:Veno-Echo.cpp ****                 }
 12166              		.loc 21 330 37 is_stmt 0 view .LVU3396
 12167 0c44 FFF7FEFF 		bl	_Z16Update_feedbackLv
 12168              	.LVL767:
 330:Veno-Echo.cpp ****                 }
 12169              		.loc 21 330 37 view .LVU3397
 12170 0c48 FFF70DBA 		b	.L505
 12171              	.LVL768:
 12172              	.L514:
 334:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 12173              		.loc 21 334 13 is_stmt 1 view .LVU3398
 335:Veno-Echo.cpp ****             break;
 12174              		.loc 21 335 17 view .LVU3399
 12175              	.LBB2316:
 12176              	.LBI2316:
1141:Veno-Echo.cpp **** {
 12177              		.loc 21 1141 6 view .LVU3400
 12178              	.LBB2317:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 368


1143:Veno-Echo.cpp **** }
 12179              		.loc 21 1143 5 view .LVU3401
1143:Veno-Echo.cpp **** }
 12180              		.loc 21 1143 35 is_stmt 0 view .LVU3402
 12181 0c4c 0321     		movs	r1, #3
 12182              	.LVL769:
1143:Veno-Echo.cpp **** }
 12183              		.loc 21 1143 35 view .LVU3403
 12184 0c4e 1F48     		ldr	r0, .L654
 12185              	.LVL770:
1143:Veno-Echo.cpp **** }
 12186              		.loc 21 1143 35 view .LVU3404
 12187 0c50 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12188              	.LVL771:
1143:Veno-Echo.cpp **** }
 12189              		.loc 21 1143 18 view .LVU3405
 12190 0c54 204B     		ldr	r3, .L654+12
 12191 0c56 83ED000A 		vstr.32	s0, [r3]
1144:Veno-Echo.cpp **** 
 12192              		.loc 21 1144 1 view .LVU3406
 12193 0c5a FFF704BA 		b	.L505
 12194              	.LVL772:
 12195              	.L513:
1144:Veno-Echo.cpp **** 
 12196              		.loc 21 1144 1 view .LVU3407
 12197              	.LBE2317:
 12198              	.LBE2316:
 338:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12199              		.loc 21 338 13 is_stmt 1 view .LVU3408
 339:Veno-Echo.cpp ****                 {
 12200              		.loc 21 339 17 view .LVU3409
 339:Veno-Echo.cpp ****                 {
 12201              		.loc 21 339 30 is_stmt 0 view .LVU3410
 12202 0c5e 1D4B     		ldr	r3, .L654+8
 339:Veno-Echo.cpp ****                 {
 12203              		.loc 21 339 17 view .LVU3411
 12204 0c60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12205 0c62 022B     		cmp	r3, #2
 12206 0c64 3FF4FFA9 		beq	.L505
 341:Veno-Echo.cpp ****                 }
 12207              		.loc 21 341 21 is_stmt 1 view .LVU3412
 341:Veno-Echo.cpp ****                 }
 12208              		.loc 21 341 37 is_stmt 0 view .LVU3413
 12209 0c68 FFF7FEFF 		bl	_Z16Update_feedbackRv
 12210              	.LVL773:
 341:Veno-Echo.cpp ****                 }
 12211              		.loc 21 341 37 view .LVU3414
 12212 0c6c FFF7FBB9 		b	.L505
 12213              	.LVL774:
 12214              	.L512:
 345:Veno-Echo.cpp ****                 Update_drywet_CV();
 12215              		.loc 21 345 13 is_stmt 1 view .LVU3415
 346:Veno-Echo.cpp ****             break;
 12216              		.loc 21 346 17 view .LVU3416
 12217              	.LBB2318:
 12218              	.LBI2318:
1231:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 369


 12219              		.loc 21 1231 6 view .LVU3417
 12220              	.LBB2319:
1233:Veno-Echo.cpp **** }
 12221              		.loc 21 1233 5 view .LVU3418
1233:Veno-Echo.cpp **** }
 12222              		.loc 21 1233 32 is_stmt 0 view .LVU3419
 12223 0c70 0421     		movs	r1, #4
 12224              	.LVL775:
1233:Veno-Echo.cpp **** }
 12225              		.loc 21 1233 32 view .LVU3420
 12226 0c72 1648     		ldr	r0, .L654
 12227              	.LVL776:
1233:Veno-Echo.cpp **** }
 12228              		.loc 21 1233 32 view .LVU3421
 12229 0c74 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12230              	.LVL777:
1233:Veno-Echo.cpp **** }
 12231              		.loc 21 1233 15 view .LVU3422
 12232 0c78 184B     		ldr	r3, .L654+16
 12233 0c7a 83ED000A 		vstr.32	s0, [r3]
1234:Veno-Echo.cpp **** 
 12234              		.loc 21 1234 1 view .LVU3423
 12235 0c7e FFF7F2B9 		b	.L505
 12236              	.LVL778:
 12237              	.L511:
1234:Veno-Echo.cpp **** 
 12238              		.loc 21 1234 1 view .LVU3424
 12239              	.LBE2319:
 12240              	.LBE2318:
 349:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12241              		.loc 21 349 13 is_stmt 1 view .LVU3425
 350:Veno-Echo.cpp ****                 {
 12242              		.loc 21 350 17 view .LVU3426
 350:Veno-Echo.cpp ****                 {
 12243              		.loc 21 350 30 is_stmt 0 view .LVU3427
 12244 0c82 144B     		ldr	r3, .L654+8
 350:Veno-Echo.cpp ****                 {
 12245              		.loc 21 350 17 view .LVU3428
 12246 0c84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12247 0c86 022B     		cmp	r3, #2
 12248 0c88 3FF4EDA9 		beq	.L505
 352:Veno-Echo.cpp ****                 }
 12249              		.loc 21 352 21 is_stmt 1 view .LVU3429
 352:Veno-Echo.cpp ****                 }
 12250              		.loc 21 352 34 is_stmt 0 view .LVU3430
 12251 0c8c FFF7FEFF 		bl	_Z13Update_drywetv
 12252              	.LVL779:
 352:Veno-Echo.cpp ****                 }
 12253              		.loc 21 352 34 view .LVU3431
 12254 0c90 FFF7E9B9 		b	.L505
 12255              	.LVL780:
 12256              	.L510:
 356:Veno-Echo.cpp ****                 Update_width_CV();
 12257              		.loc 21 356 13 is_stmt 1 view .LVU3432
 357:Veno-Echo.cpp ****             break;
 12258              		.loc 21 357 17 view .LVU3433
 12259              	.LBB2320:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 370


 12260              	.LBI2320:
1346:Veno-Echo.cpp **** {
 12261              		.loc 21 1346 6 view .LVU3434
 12262              	.LBB2321:
1348:Veno-Echo.cpp **** }
 12263              		.loc 21 1348 5 view .LVU3435
1348:Veno-Echo.cpp **** }
 12264              		.loc 21 1348 30 is_stmt 0 view .LVU3436
 12265 0c94 0521     		movs	r1, #5
 12266              	.LVL781:
1348:Veno-Echo.cpp **** }
 12267              		.loc 21 1348 30 view .LVU3437
 12268 0c96 0D48     		ldr	r0, .L654
 12269              	.LVL782:
1348:Veno-Echo.cpp **** }
 12270              		.loc 21 1348 30 view .LVU3438
 12271 0c98 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12272              	.LVL783:
1348:Veno-Echo.cpp **** }
 12273              		.loc 21 1348 13 view .LVU3439
 12274 0c9c 104B     		ldr	r3, .L654+20
 12275 0c9e 83ED000A 		vstr.32	s0, [r3]
1349:Veno-Echo.cpp **** 
 12276              		.loc 21 1349 1 view .LVU3440
 12277 0ca2 FFF7E0B9 		b	.L505
 12278              	.LVL784:
 12279              	.L509:
1349:Veno-Echo.cpp **** 
 12280              		.loc 21 1349 1 view .LVU3441
 12281              	.LBE2321:
 12282              	.LBE2320:
 360:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12283              		.loc 21 360 13 is_stmt 1 view .LVU3442
 361:Veno-Echo.cpp ****                 {
 12284              		.loc 21 361 17 view .LVU3443
 361:Veno-Echo.cpp ****                 {
 12285              		.loc 21 361 30 is_stmt 0 view .LVU3444
 12286 0ca6 0B4B     		ldr	r3, .L654+8
 361:Veno-Echo.cpp ****                 {
 12287              		.loc 21 361 17 view .LVU3445
 12288 0ca8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12289 0caa 022B     		cmp	r3, #2
 12290 0cac 3FF4DBA9 		beq	.L505
 363:Veno-Echo.cpp ****                 }
 12291              		.loc 21 363 21 is_stmt 1 view .LVU3446
 363:Veno-Echo.cpp ****                 }
 12292              		.loc 21 363 33 is_stmt 0 view .LVU3447
 12293 0cb0 FFF7FEFF 		bl	_Z12Update_widthv
 12294              	.LVL785:
 363:Veno-Echo.cpp ****                 }
 12295              		.loc 21 363 33 view .LVU3448
 12296 0cb4 FFF7D7B9 		b	.L505
 12297              	.LVL786:
 12298              	.L508:
 367:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12299              		.loc 21 367 13 is_stmt 1 view .LVU3449
 368:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 371


 12300              		.loc 21 368 17 view .LVU3450
 368:Veno-Echo.cpp ****                 {
 12301              		.loc 21 368 30 is_stmt 0 view .LVU3451
 12302 0cb8 064B     		ldr	r3, .L654+8
 368:Veno-Echo.cpp ****                 {
 12303              		.loc 21 368 17 view .LVU3452
 12304 0cba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12305 0cbc 022B     		cmp	r3, #2
 12306 0cbe 3FF4D2A9 		beq	.L505
 370:Veno-Echo.cpp ****                 }
 12307              		.loc 21 370 21 is_stmt 1 view .LVU3453
 370:Veno-Echo.cpp ****                 }
 12308              		.loc 21 370 41 is_stmt 0 view .LVU3454
 12309 0cc2 FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 12310              	.LVL787:
 370:Veno-Echo.cpp ****                 }
 12311              		.loc 21 370 41 view .LVU3455
 12312 0cc6 FFF7CEB9 		b	.L505
 12313              	.L655:
 12314 0cca 00BF     		.align	2
 12315              	.L654:
 12316 0ccc 18000000 		.word	.LANCHOR4+24
 12317 0cd0 00000000 		.word	.LANCHOR27
 12318 0cd4 00000000 		.word	.LANCHOR109
 12319 0cd8 00000000 		.word	.LANCHOR39
 12320 0cdc 00000000 		.word	.LANCHOR51
 12321 0ce0 00000000 		.word	.LANCHOR59
 12322              		.cfi_endproc
 12323              	.LFE4309:
 12325              		.section	.text._Z9HardLimitff,"ax",%progbits
 12326              		.align	1
 12327              		.p2align 2,,3
 12328              		.global	_Z9HardLimitff
 12329              		.syntax unified
 12330              		.thumb
 12331              		.thumb_func
 12332              		.fpu fpv5-d16
 12334              	_Z9HardLimitff:
 12335              	.LVL788:
 12336              	.LFB4336:
2007:Veno-Echo.cpp ****     float returnval{};
 12337              		.loc 21 2007 1 is_stmt 1 view -0
 12338              		.cfi_startproc
 12339              		@ args = 0, pretend = 0, frame = 0
 12340              		@ frame_needed = 0, uses_anonymous_args = 0
 12341              		@ link register save eliminated.
2008:Veno-Echo.cpp ****     if (input > limit)
 12342              		.loc 21 2008 5 view .LVU3457
2009:Veno-Echo.cpp ****         returnval = limit;
 12343              		.loc 21 2009 5 view .LVU3458
 12344 0000 B4EEE00A 		vcmpe.f32	s0, s1
 12345 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12346 0008 07DC     		bgt	.L657
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12347              		.loc 21 2011 10 view .LVU3459
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12348              		.loc 21 2011 28 is_stmt 0 view .LVU3460
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 372


 12349 000a F1EE600A 		vneg.f32	s1, s1
 12350              	.LVL789:
2011:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12351              		.loc 21 2011 10 view .LVU3461
 12352 000e F4EEC00A 		vcmpe.f32	s1, s0
 12353 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2014:Veno-Echo.cpp **** 
 12354              		.loc 21 2014 19 view .LVU3462
 12355 0016 70FE800A 		vselgt.f32	s1, s1, s0
 12356              	.L657:
 12357              	.LVL790:
2016:Veno-Echo.cpp **** }
 12358              		.loc 21 2016 5 is_stmt 1 view .LVU3463
2017:Veno-Echo.cpp **** 
 12359              		.loc 21 2017 1 is_stmt 0 view .LVU3464
 12360 001a B0EE600A 		vmov.f32	s0, s1
 12361              	.LVL791:
2017:Veno-Echo.cpp **** 
 12362              		.loc 21 2017 1 view .LVU3465
 12363 001e 7047     		bx	lr
 12364              		.cfi_endproc
 12365              	.LFE4336:
 12367              		.section	.text._Z10PotCVComboff,"ax",%progbits
 12368              		.align	1
 12369              		.p2align 2,,3
 12370              		.global	_Z10PotCVComboff
 12371              		.syntax unified
 12372              		.thumb
 12373              		.thumb_func
 12374              		.fpu fpv5-d16
 12376              	_Z10PotCVComboff:
 12377              	.LVL792:
 12378              	.LFB4337:
2020:Veno-Echo.cpp ****     float output{};
 12379              		.loc 21 2020 1 is_stmt 1 view -0
 12380              		.cfi_startproc
 12381              		@ args = 0, pretend = 0, frame = 0
 12382              		@ frame_needed = 0, uses_anonymous_args = 0
 12383              		@ link register save eliminated.
2021:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 12384              		.loc 21 2021 5 view .LVU3467
2022:Veno-Echo.cpp **** 
 12385              		.loc 21 2022 5 view .LVU3468
2022:Veno-Echo.cpp **** 
 12386              		.loc 21 2022 39 is_stmt 0 view .LVU3469
 12387 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2022:Veno-Echo.cpp **** 
 12388              		.loc 21 2022 49 view .LVU3470
 12389 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2022:Veno-Echo.cpp **** 
 12390              		.loc 21 2022 12 view .LVU3471
 12391 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2022:Veno-Echo.cpp **** 
 12392              		.loc 21 2022 39 view .LVU3472
 12393 000c 77EEE00A 		vsub.f32	s1, s15, s1
 12394              	.LVL793:
2022:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 373


 12395              		.loc 21 2022 49 view .LVU3473
 12396 0010 70EEE60A 		vsub.f32	s1, s1, s13
2022:Veno-Echo.cpp **** 
 12397              		.loc 21 2022 12 view .LVU3474
 12398 0014 A0EE870A 		vfma.f32	s0, s1, s14
 12399              	.LVL794:
2024:Veno-Echo.cpp ****     {
 12400              		.loc 21 2024 5 is_stmt 1 view .LVU3475
 12401 0018 B5EEC00A 		vcmpe.f32	s0, #0
 12402 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12403 0020 06D4     		bmi	.L663
2029:Veno-Echo.cpp ****     {
 12404              		.loc 21 2029 5 view .LVU3476
2031:Veno-Echo.cpp ****     }
 12405              		.loc 21 2031 16 is_stmt 0 view .LVU3477
 12406 0022 B4EE670A 		vcmp.f32	s0, s15
 12407 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12408 002a 37FE800A 		vselgt.f32	s0, s15, s0
 12409              	.LVL795:
2031:Veno-Echo.cpp ****     }
 12410              		.loc 21 2031 16 view .LVU3478
 12411 002e 7047     		bx	lr
 12412              	.LVL796:
 12413              	.L663:
2026:Veno-Echo.cpp ****     }
 12414              		.loc 21 2026 16 view .LVU3479
 12415 0030 9FED010A 		vldr.32	s0, .L665
 12416              	.LVL797:
2034:Veno-Echo.cpp **** }
 12417              		.loc 21 2034 5 is_stmt 1 view .LVU3480
2035:Veno-Echo.cpp **** 
 12418              		.loc 21 2035 1 is_stmt 0 view .LVU3481
 12419 0034 7047     		bx	lr
 12420              	.L666:
 12421 0036 00BF     		.align	2
 12422              	.L665:
 12423 0038 00000000 		.word	0
 12424              		.cfi_endproc
 12425              	.LFE4337:
 12427              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 12428              		.align	1
 12429              		.p2align 2,,3
 12430              		.global	_Z16checkPickupStateffbb
 12431              		.syntax unified
 12432              		.thumb
 12433              		.thumb_func
 12434              		.fpu fpv5-d16
 12436              	_Z16checkPickupStateffbb:
 12437              	.LVL798:
 12438              	.LFB4338:
2039:Veno-Echo.cpp ****     bool retval{};
 12439              		.loc 21 2039 1 is_stmt 1 view -0
 12440              		.cfi_startproc
 12441              		@ args = 0, pretend = 0, frame = 0
 12442              		@ frame_needed = 0, uses_anonymous_args = 0
 12443              		@ link register save eliminated.
2040:Veno-Echo.cpp ****     
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 374


 12444              		.loc 21 2040 5 view .LVU3483
2042:Veno-Echo.cpp ****     {
 12445              		.loc 21 2042 5 view .LVU3484
 12446 0000 69B1     		cbz	r1, .L668
2044:Veno-Echo.cpp ****         {
 12447              		.loc 21 2044 9 view .LVU3485
 12448              	.LVL799:
 12449              	.LBB2322:
 12450              	.LBI2322:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12451              		.loc 22 75 3 view .LVU3486
 12452              	.LBB2323:
 12453              		.loc 22 76 5 view .LVU3487
 12454              		.loc 22 76 5 is_stmt 0 view .LVU3488
 12455              	.LBE2323:
 12456              	.LBE2322:
2044:Veno-Echo.cpp ****         {
 12457              		.loc 21 2044 15 view .LVU3489
 12458 0002 70EE600A 		vsub.f32	s1, s0, s1
 12459              	.LVL800:
2044:Veno-Echo.cpp ****         {
 12460              		.loc 21 2044 9 view .LVU3490
 12461 0006 DFED0D7A 		vldr.32	s15, .L671
 12462              	.LBB2325:
 12463              	.LBB2324:
 12464              		.loc 22 76 31 view .LVU3491
 12465 000a B0EEE00A 		vabs.f32	s0, s1
 12466              	.LVL801:
 12467              		.loc 22 76 31 view .LVU3492
 12468              	.LBE2324:
 12469              	.LBE2325:
2044:Veno-Echo.cpp ****         {
 12470              		.loc 21 2044 9 view .LVU3493
 12471 000e B4EEE70A 		vcmpe.f32	s0, s15
 12472 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12473 0016 D4BF     		ite	le
 12474 0018 0120     		movle	r0, #1
 12475              	.LVL802:
2044:Veno-Echo.cpp ****         {
 12476              		.loc 21 2044 9 view .LVU3494
 12477 001a 0020     		movgt	r0, #0
 12478 001c 7047     		bx	lr
 12479              	.LVL803:
 12480              	.L668:
2056:Veno-Echo.cpp ****     {
 12481              		.loc 21 2056 5 is_stmt 1 view .LVU3495
 12482 001e 60B9     		cbnz	r0, .L669
2058:Veno-Echo.cpp ****         {
 12483              		.loc 21 2058 9 view .LVU3496
 12484              	.LVL804:
 12485              	.LBB2326:
 12486              	.LBI2326:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12487              		.loc 22 75 3 view .LVU3497
 12488              	.LBB2327:
 12489              		.loc 22 76 5 view .LVU3498
 12490              		.loc 22 76 5 is_stmt 0 view .LVU3499
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 375


 12491              	.LBE2327:
 12492              	.LBE2326:
2058:Veno-Echo.cpp ****         {
 12493              		.loc 21 2058 15 view .LVU3500
 12494 0020 30EE600A 		vsub.f32	s0, s0, s1
 12495              	.LVL805:
2058:Veno-Echo.cpp ****         {
 12496              		.loc 21 2058 9 view .LVU3501
 12497 0024 DFED057A 		vldr.32	s15, .L671
 12498              	.LBB2329:
 12499              	.LBB2328:
 12500              		.loc 22 76 31 view .LVU3502
 12501 0028 B0EEC00A 		vabs.f32	s0, s0
 12502              	.LBE2328:
 12503              	.LBE2329:
2058:Veno-Echo.cpp ****         {
 12504              		.loc 21 2058 9 view .LVU3503
 12505 002c B4EEE70A 		vcmpe.f32	s0, s15
 12506 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12507 0034 CCBF     		ite	gt
 12508 0036 0120     		movgt	r0, #1
 12509              	.LVL806:
2058:Veno-Echo.cpp ****         {
 12510              		.loc 21 2058 9 view .LVU3504
 12511 0038 0020     		movle	r0, #0
 12512              	.L669:
 12513              	.LVL807:
2075:Veno-Echo.cpp **** 
 12514              		.loc 21 2075 5 is_stmt 1 view .LVU3505
2077:Veno-Echo.cpp **** 
 12515              		.loc 21 2077 1 is_stmt 0 view .LVU3506
 12516 003a 7047     		bx	lr
 12517              	.L672:
 12518              		.align	2
 12519              	.L671:
 12520 003c 0AD7A33B 		.word	1000593162
 12521              		.cfi_endproc
 12522              	.LFE4338:
 12524              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 12525              		.align	1
 12526              		.p2align 2,,3
 12527              		.global	_Z20checkPickupState_altff11pickupStateb
 12528              		.syntax unified
 12529              		.thumb
 12530              		.thumb_func
 12531              		.fpu fpv5-d16
 12533              	_Z20checkPickupState_altff11pickupStateb:
 12534              	.LVL808:
 12535              	.LFB4339:
2081:Veno-Echo.cpp ****     pickupState retval{};
 12536              		.loc 21 2081 1 is_stmt 1 view -0
 12537              		.cfi_startproc
 12538              		@ args = 0, pretend = 0, frame = 0
 12539              		@ frame_needed = 0, uses_anonymous_args = 0
 12540              		@ link register save eliminated.
2082:Veno-Echo.cpp **** 
 12541              		.loc 21 2082 5 view .LVU3508
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 376


2084:Veno-Echo.cpp ****     {
 12542              		.loc 21 2084 5 view .LVU3509
 12543 0000 A1B1     		cbz	r1, .L674
2086:Veno-Echo.cpp ****         {
 12544              		.loc 21 2086 9 view .LVU3510
2086:Veno-Echo.cpp ****         {
 12545              		.loc 21 2086 31 is_stmt 0 view .LVU3511
 12546 0002 DFED1A7A 		vldr.32	s15, .L691
 12547 0006 30EEE77A 		vsub.f32	s14, s1, s15
2086:Veno-Echo.cpp ****         {
 12548              		.loc 21 2086 9 view .LVU3512
 12549 000a B4EEC07A 		vcmpe.f32	s14, s0
 12550 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12551 0012 01DD     		ble	.L689
 12552 0014 0020     		movs	r0, #0
 12553              	.LVL809:
2086:Veno-Echo.cpp ****         {
 12554              		.loc 21 2086 9 view .LVU3513
 12555 0016 7047     		bx	lr
 12556              	.LVL810:
 12557              	.L689:
2091:Veno-Echo.cpp ****         {
 12558              		.loc 21 2091 14 is_stmt 1 view .LVU3514
2091:Veno-Echo.cpp ****         {
 12559              		.loc 21 2091 36 is_stmt 0 view .LVU3515
 12560 0018 70EEA70A 		vadd.f32	s1, s1, s15
 12561              	.LVL811:
2091:Veno-Echo.cpp ****         {
 12562              		.loc 21 2091 14 view .LVU3516
 12563 001c F4EEC00A 		vcmpe.f32	s1, s0
 12564 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2098:Veno-Echo.cpp ****         }
 12565              		.loc 21 2098 20 view .LVU3517
 12566 0024 4CBF     		ite	mi
 12567 0026 0120     		movmi	r0, #1
 12568              	.LVL812:
2098:Veno-Echo.cpp ****         }
 12569              		.loc 21 2098 20 view .LVU3518
 12570 0028 0220     		movpl	r0, #2
 12571 002a 7047     		bx	lr
 12572              	.LVL813:
 12573              	.L674:
2104:Veno-Echo.cpp ****         {
 12574              		.loc 21 2104 9 is_stmt 1 view .LVU3519
 12575 002c 0128     		cmp	r0, #1
 12576 002e 04D0     		beq	.L677
 12577 0030 0228     		cmp	r0, #2
 12578 0032 01D0     		beq	.L675
 12579 0034 68B1     		cbz	r0, .L690
 12580 0036 0846     		mov	r0, r1
 12581              	.LVL814:
 12582              	.L675:
2125:Veno-Echo.cpp **** }
 12583              		.loc 21 2125 5 view .LVU3520
2126:Veno-Echo.cpp **** 
 12584              		.loc 21 2126 1 is_stmt 0 view .LVU3521
 12585 0038 7047     		bx	lr
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 377


 12586              	.LVL815:
 12587              	.L677:
2113:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 12588              		.loc 21 2113 13 is_stmt 1 view .LVU3522
2114:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12589              		.loc 21 2114 13 view .LVU3523
2114:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12590              		.loc 21 2114 35 is_stmt 0 view .LVU3524
 12591 003a DFED0C7A 		vldr.32	s15, .L691
 12592 003e 70EEA70A 		vadd.f32	s1, s1, s15
 12593              	.LVL816:
2114:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12594              		.loc 21 2114 13 view .LVU3525
 12595 0042 F4EEC00A 		vcmpe.f32	s1, s0
 12596 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12597 004a CCBF     		ite	gt
 12598 004c 0220     		movgt	r0, #2
 12599              	.LVL817:
2114:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12600              		.loc 21 2114 13 view .LVU3526
 12601 004e 0120     		movle	r0, #1
 12602 0050 7047     		bx	lr
 12603              	.LVL818:
 12604              	.L690:
2106:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 12605              		.loc 21 2106 13 is_stmt 1 view .LVU3527
2107:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12606              		.loc 21 2107 13 view .LVU3528
2107:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12607              		.loc 21 2107 35 is_stmt 0 view .LVU3529
 12608 0052 DFED067A 		vldr.32	s15, .L691
 12609 0056 70EEE70A 		vsub.f32	s1, s1, s15
 12610              	.LVL819:
2107:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12611              		.loc 21 2107 13 view .LVU3530
 12612 005a F4EEC00A 		vcmpe.f32	s1, s0
 12613 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12614 0062 4CBF     		ite	mi
 12615 0064 0220     		movmi	r0, #2
 12616              	.LVL820:
2107:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12617              		.loc 21 2107 13 view .LVU3531
 12618 0066 0020     		movpl	r0, #0
 12619 0068 7047     		bx	lr
 12620              	.L692:
 12621 006a 00BF     		.align	2
 12622              	.L691:
 12623 006c 0AD7A33B 		.word	1000593162
 12624              		.cfi_endproc
 12625              	.LFE4339:
 12627              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 12628              		.align	1
 12629              		.p2align 2,,3
 12630              		.global	_Z11GetTapRatio9TapRatios
 12631              		.syntax unified
 12632              		.thumb
 12633              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 378


 12634              		.fpu fpv5-d16
 12636              	_Z11GetTapRatio9TapRatios:
 12637              	.LVL821:
 12638              	.LFB4340:
2129:Veno-Echo.cpp **** double retVal{};
 12639              		.loc 21 2129 1 is_stmt 1 view -0
 12640              		.cfi_startproc
 12641              		@ args = 0, pretend = 0, frame = 0
 12642              		@ frame_needed = 0, uses_anonymous_args = 0
 12643              		@ link register save eliminated.
2130:Veno-Echo.cpp ****     switch(ratio)
 12644              		.loc 21 2130 1 view .LVU3533
2131:Veno-Echo.cpp ****     {
 12645              		.loc 21 2131 5 view .LVU3534
 12646 0000 0138     		subs	r0, r0, #1
 12647              	.LVL822:
2131:Veno-Echo.cpp ****     {
 12648              		.loc 21 2131 5 is_stmt 0 view .LVU3535
 12649 0002 C0B2     		uxtb	r0, r0
 12650 0004 0228     		cmp	r0, #2
 12651 0006 05D8     		bhi	.L695
 12652 0008 044B     		ldr	r3, .L696
 12653 000a 03EBC000 		add	r0, r3, r0, lsl #3
 12654 000e 90ED000B 		vldr.64	d0, [r0]
 12655 0012 7047     		bx	lr
 12656              	.L695:
2129:Veno-Echo.cpp **** double retVal{};
 12657              		.loc 21 2129 1 view .LVU3536
 12658 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 12659              	.LVL823:
 12660              		.loc 21 2154 1 is_stmt 1 view .LVU3537
2155:Veno-Echo.cpp **** }
 12661              		.loc 21 2155 1 is_stmt 0 view .LVU3538
 12662 0018 7047     		bx	lr
 12663              	.L697:
 12664 001a 00BF     		.align	2
 12665              	.L696:
 12666 001c 00000000 		.word	.LANCHOR25
 12667              		.cfi_endproc
 12668              	.LFE4340:
 12670              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 12671              		.align	1
 12672              		.p2align 2,,3
 12673              		.syntax unified
 12674              		.thumb
 12675              		.thumb_func
 12676              		.fpu fpv5-d16
 12678              	_GLOBAL__sub_I_delMemsL:
 12679              	.LFB4919:
 12680              		.loc 21 2155 1 is_stmt 1 view -0
 12681              		.cfi_startproc
 12682              		@ args = 0, pretend = 0, frame = 0
 12683              		@ frame_needed = 0, uses_anonymous_args = 0
 12684              	.LBB2486:
 12685              	.LBI2486:
 12686              		.loc 21 2155 1 view .LVU3540
 12687              	.LVL824:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 379


 12688              	.LBB2487:
 12689              	.LBB2488:
 12690              	.LBI2488:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 12691              		.loc 3 21 5 view .LVU3541
 12692              	.LBB2489:
 12693              	.LBB2490:
 12694              	.LBI2490:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12695              		.loc 7 36 5 view .LVU3542
 12696              	.LBE2490:
 12697              	.LBE2489:
 12698              	.LBE2488:
 12699              	.LBE2487:
 12700              	.LBE2486:
 12701              		.loc 21 2155 1 is_stmt 0 view .LVU3543
 12702 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12703              		.cfi_def_cfa_offset 24
 12704              		.cfi_offset 4, -24
 12705              		.cfi_offset 5, -20
 12706              		.cfi_offset 6, -16
 12707              		.cfi_offset 7, -12
 12708              		.cfi_offset 8, -8
 12709              		.cfi_offset 14, -4
 12710              	.LBB2612:
 12711              	.LBB2608:
 12712              	.LBB2505:
 12713              	.LBB2503:
 12714              	.LBB2495:
 12715              	.LBB2491:
 12716              	.LBB2492:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12717              		.loc 7 36 35 view .LVU3544
 12718 0004 9D48     		ldr	r0, .L700
 12719 0006 0026     		movs	r6, #0
 12720              	.LBE2492:
 12721              	.LBE2491:
 12722              	.LBE2495:
 12723              	.LBE2503:
 12724              	.LBE2505:
 12725              		.file 27 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 380


  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12726              		.loc 27 33 18 view .LVU3545
 12727 0008 9D4C     		ldr	r4, .L700+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12728              		.loc 21 40 12 view .LVU3546
 12729 000a 9E4D     		ldr	r5, .L700+8
 12730              		.loc 27 33 18 view .LVU3547
 12731 000c 2246     		mov	r2, r4
 12732 000e 9E49     		ldr	r1, .L700+12
 12733              	.LBB2506:
 12734              	.LBB2504:
 12735              	.LBB2496:
 12736              	.LBB2494:
 12737              	.LBB2493:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12738              		.loc 7 36 35 view .LVU3548
 12739 0010 4661     		str	r6, [r0, #20]
 12740              	.LVL825:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12741              		.loc 7 36 35 view .LVU3549
 12742              	.LBE2493:
 12743              	.LBE2494:
 12744              	.LBE2496:
 12745              	.LBB2497:
 12746              	.LBI2497:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12747              		.loc 6 84 5 is_stmt 1 view .LVU3550
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12748              		.loc 6 84 5 is_stmt 0 view .LVU3551
 12749              	.LBE2497:
 12750              	.LBB2498:
 12751              	.LBI2498:
 12752              		.file 28 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 381


   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 382


  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12753              		.loc 28 83 5 is_stmt 1 view .LVU3552
 12754              	.LBB2499:
 12755              	.LBB2500:
 12756              		.loc 28 83 33 is_stmt 0 view .LVU3553
 12757 0012 0662     		str	r6, [r0, #32]
 12758              	.LVL826:
 12759              		.loc 28 83 33 view .LVU3554
 12760              	.LBE2500:
 12761              	.LBE2499:
 12762              	.LBE2498:
 12763              	.LBB2501:
 12764              	.LBI2501:
  40:../libdaisy/src/hid/usb.h **** 
 12765              		.loc 5 40 5 is_stmt 1 view .LVU3555
  40:../libdaisy/src/hid/usb.h **** 
 12766              		.loc 5 40 5 is_stmt 0 view .LVU3556
 12767              	.LBE2501:
 12768              	.LBB2502:
 12769              	.LBI2502:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12770              		.loc 4 56 5 is_stmt 1 view .LVU3557
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12771              		.loc 4 56 5 is_stmt 0 view .LVU3558
 12772              	.LBE2502:
 12773              	.LBE2504:
 12774              	.LBE2506:
 12775              		.loc 27 33 18 view .LVU3559
 12776 0014 FFF7FEFF 		bl	__aeabi_atexit
 12777              	.LVL827:
 12778              	.LBB2507:
 12779              	.LBI2507:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12780              		.loc 10 21 5 is_stmt 1 view .LVU3560
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12781              		.loc 10 21 5 is_stmt 0 view .LVU3561
 12782              	.LBE2507:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12783              		.loc 21 40 12 view .LVU3562
 12784 0018 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 383


 12785 001a 2946     		mov	r1, r5
 12786 001c 9B48     		ldr	r0, .L700+16
 12787 001e FFF7FEFF 		bl	__aeabi_atexit
 12788              	.LVL828:
 12789              	.LBB2508:
 12790              	.LBI2508:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12791              		.loc 10 21 5 is_stmt 1 view .LVU3563
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12792              		.loc 10 21 5 is_stmt 0 view .LVU3564
 12793              	.LBE2508:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12794              		.loc 21 41 12 view .LVU3565
 12795 0022 2246     		mov	r2, r4
 12796 0024 2946     		mov	r1, r5
 12797 0026 9A48     		ldr	r0, .L700+20
 12798 0028 FFF7FEFF 		bl	__aeabi_atexit
 12799              	.LVL829:
 12800              	.LBB2509:
 12801              	.LBI2509:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12802              		.loc 10 21 5 is_stmt 1 view .LVU3566
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12803              		.loc 10 21 5 is_stmt 0 view .LVU3567
 12804              	.LBE2509:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12805              		.loc 21 42 12 view .LVU3568
 12806 002c 2246     		mov	r2, r4
 12807 002e 2946     		mov	r1, r5
 12808 0030 9848     		ldr	r0, .L700+24
 12809 0032 FFF7FEFF 		bl	__aeabi_atexit
 12810              	.LVL830:
 12811              	.LBB2510:
 12812              	.LBI2510:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12813              		.loc 10 21 5 is_stmt 1 view .LVU3569
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12814              		.loc 10 21 5 is_stmt 0 view .LVU3570
 12815              	.LBE2510:
  43:Veno-Echo.cpp **** 
 12816              		.loc 21 43 12 view .LVU3571
 12817 0036 2246     		mov	r2, r4
 12818 0038 2946     		mov	r1, r5
 12819 003a 9748     		ldr	r0, .L700+28
 12820 003c FFF7FEFF 		bl	__aeabi_atexit
 12821              	.LVL831:
 12822              	.LBB2511:
 12823              	.LBI2511:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12824              		.loc 10 21 5 is_stmt 1 view .LVU3572
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12825              		.loc 10 21 5 is_stmt 0 view .LVU3573
 12826              	.LBE2511:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12827              		.loc 21 45 12 view .LVU3574
 12828 0040 2246     		mov	r2, r4
 12829 0042 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 384


 12830 0044 9548     		ldr	r0, .L700+32
 12831 0046 FFF7FEFF 		bl	__aeabi_atexit
 12832              	.LVL832:
 12833              	.LBB2512:
 12834              	.LBI2512:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12835              		.loc 10 21 5 is_stmt 1 view .LVU3575
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12836              		.loc 10 21 5 is_stmt 0 view .LVU3576
 12837              	.LBE2512:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12838              		.loc 21 46 12 view .LVU3577
 12839 004a 2246     		mov	r2, r4
 12840 004c 2946     		mov	r1, r5
 12841 004e 9448     		ldr	r0, .L700+36
 12842 0050 FFF7FEFF 		bl	__aeabi_atexit
 12843              	.LVL833:
 12844              	.LBB2513:
 12845              	.LBI2513:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12846              		.loc 10 21 5 is_stmt 1 view .LVU3578
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12847              		.loc 10 21 5 is_stmt 0 view .LVU3579
 12848              	.LBE2513:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12849              		.loc 21 47 12 view .LVU3580
 12850 0054 2246     		mov	r2, r4
 12851 0056 2946     		mov	r1, r5
 12852 0058 9248     		ldr	r0, .L700+40
 12853 005a FFF7FEFF 		bl	__aeabi_atexit
 12854              	.LVL834:
 12855              	.LBB2514:
 12856              	.LBI2514:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12857              		.loc 10 21 5 is_stmt 1 view .LVU3581
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12858              		.loc 10 21 5 is_stmt 0 view .LVU3582
 12859              	.LBE2514:
  48:Veno-Echo.cpp **** 
 12860              		.loc 21 48 12 view .LVU3583
 12861 005e 2246     		mov	r2, r4
 12862 0060 2946     		mov	r1, r5
 12863 0062 9148     		ldr	r0, .L700+44
 12864 0064 FFF7FEFF 		bl	__aeabi_atexit
 12865              	.LVL835:
 12866              	.LBB2515:
 12867              	.LBI2515:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12868              		.loc 9 15 5 is_stmt 1 view .LVU3584
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12869              		.loc 9 15 5 is_stmt 0 view .LVU3585
 12870              	.LBE2515:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12871              		.loc 21 50 19 view .LVU3586
 12872 0068 2246     		mov	r2, r4
 12873 006a 9049     		ldr	r1, .L700+48
 12874              	.LBB2516:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 385


 12875              	.LBB2517:
 12876              	.LBB2518:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12877              		.loc 13 45 13 view .LVU3587
 12878 006c 0025     		movs	r5, #0
 12879              	.LBE2518:
 12880              	.LBE2517:
 12881              	.LBE2516:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12882              		.loc 21 50 19 view .LVU3588
 12883 006e 9048     		ldr	r0, .L700+52
 12884 0070 FFF7FEFF 		bl	__aeabi_atexit
 12885              	.LVL836:
 12886              	.LBB2523:
 12887              	.LBI2516:
  43:envFollow.h   ****     {
 12888              		.loc 13 43 5 is_stmt 1 view .LVU3589
 12889              	.LBB2521:
 12890              	.LBB2519:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12891              		.loc 13 45 9 view .LVU3590
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12892              		.loc 13 48 11 is_stmt 0 view .LVU3591
 12893 0074 8F4F     		ldr	r7, .L700+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12894              		.loc 13 45 13 view .LVU3592
 12895 0076 9048     		ldr	r0, .L700+60
 12896              	.LBE2519:
 12897              	.LBE2521:
 12898              	.LBE2523:
  51:Veno-Echo.cpp **** 
 12899              		.loc 21 51 18 view .LVU3593
 12900 0078 2246     		mov	r2, r4
 12901 007a 9049     		ldr	r1, .L700+64
 12902              	.LBB2524:
 12903              	.LBB2522:
 12904              	.LBB2520:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12905              		.loc 13 45 13 view .LVU3594
 12906 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12907              		.loc 13 46 9 is_stmt 1 view .LVU3595
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12908              		.loc 13 46 20 is_stmt 0 view .LVU3596
 12909 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12910              		.loc 13 47 9 is_stmt 1 view .LVU3597
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12911              		.loc 13 47 17 is_stmt 0 view .LVU3598
 12912 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12913              		.loc 13 48 9 is_stmt 1 view .LVU3599
  50:envFollow.h   ****     }  
 12914              		.loc 13 50 21 is_stmt 0 view .LVU3600
 12915 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12916              		.loc 13 48 11 view .LVU3601
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 386


 12917 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12918              		.loc 13 49 9 is_stmt 1 view .LVU3602
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12919              		.loc 13 49 15 is_stmt 0 view .LVU3603
 12920 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12921              		.loc 13 50 9 is_stmt 1 view .LVU3604
 12922              	.LVL837:
  50:envFollow.h   ****     }  
 12923              		.loc 13 50 9 is_stmt 0 view .LVU3605
 12924              	.LBE2520:
 12925              	.LBE2522:
 12926              	.LBE2524:
  51:Veno-Echo.cpp **** 
 12927              		.loc 21 51 18 view .LVU3606
 12928 0088 FFF7FEFF 		bl	__aeabi_atexit
 12929              	.LVL838:
 12930              	.LBB2525:
 12931              	.LBI2525:
  43:envFollow.h   ****     {
 12932              		.loc 13 43 5 is_stmt 1 view .LVU3607
 12933              	.LBB2526:
 12934              	.LBB2527:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12935              		.loc 13 45 9 view .LVU3608
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12936              		.loc 13 45 13 is_stmt 0 view .LVU3609
 12937 008c 8C48     		ldr	r0, .L700+68
 12938              	.LBE2527:
 12939              	.LBE2526:
 12940              	.LBE2525:
  53:Veno-Echo.cpp **** 
 12941              		.loc 21 53 16 view .LVU3610
 12942 008e DFF8FC82 		ldr	r8, .L700+272
  51:Veno-Echo.cpp **** 
 12943              		.loc 21 51 27 view .LVU3611
 12944 0092 2246     		mov	r2, r4
 12945 0094 8949     		ldr	r1, .L700+64
 12946              	.LBB2530:
 12947              	.LBB2529:
 12948              	.LBB2528:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12949              		.loc 13 45 13 view .LVU3612
 12950 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12951              		.loc 13 46 9 is_stmt 1 view .LVU3613
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12952              		.loc 13 46 20 is_stmt 0 view .LVU3614
 12953 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12954              		.loc 13 47 9 is_stmt 1 view .LVU3615
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12955              		.loc 13 47 17 is_stmt 0 view .LVU3616
 12956 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12957              		.loc 13 48 9 is_stmt 1 view .LVU3617
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 387


  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12958              		.loc 13 48 11 is_stmt 0 view .LVU3618
 12959 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12960              		.loc 13 49 9 is_stmt 1 view .LVU3619
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12961              		.loc 13 49 15 is_stmt 0 view .LVU3620
 12962 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12963              		.loc 13 50 9 is_stmt 1 view .LVU3621
  50:envFollow.h   ****     }  
 12964              		.loc 13 50 21 is_stmt 0 view .LVU3622
 12965 00a0 8560     		str	r5, [r0, #8]	@ float
 12966              	.LVL839:
  50:envFollow.h   ****     }  
 12967              		.loc 13 50 21 view .LVU3623
 12968              	.LBE2528:
 12969              	.LBE2529:
 12970              	.LBE2530:
  51:Veno-Echo.cpp **** 
 12971              		.loc 21 51 27 view .LVU3624
 12972 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12973              	.LVL840:
 12974              	.LBB2531:
 12975              	.LBI2531:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12976              		.loc 12 14 5 is_stmt 1 view .LVU3625
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12977              		.loc 12 14 5 is_stmt 0 view .LVU3626
 12978              	.LBE2531:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12979              		.loc 21 56 76 view .LVU3627
 12980 00a6 874F     		ldr	r7, .L700+72
  53:Veno-Echo.cpp **** 
 12981              		.loc 21 53 16 view .LVU3628
 12982 00a8 2246     		mov	r2, r4
 12983 00aa 4146     		mov	r1, r8
 12984 00ac 8648     		ldr	r0, .L700+76
 12985 00ae FFF7FEFF 		bl	__aeabi_atexit
 12986              	.LVL841:
 12987              	.LBB2532:
 12988              	.LBI2532:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12989              		.loc 12 14 5 is_stmt 1 view .LVU3629
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12990              		.loc 12 14 5 is_stmt 0 view .LVU3630
 12991              	.LBE2532:
  53:Veno-Echo.cpp **** 
 12992              		.loc 21 53 29 view .LVU3631
 12993 00b2 2246     		mov	r2, r4
 12994 00b4 4146     		mov	r1, r8
 12995 00b6 8548     		ldr	r0, .L700+80
 12996 00b8 FFF7FEFF 		bl	__aeabi_atexit
 12997              	.LVL842:
 12998              	.LBB2533:
 12999              	.LBI2533:
  48:delayline_multitap.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 388


 13000              		.loc 19 48 5 is_stmt 1 view .LVU3632
  48:delayline_multitap.h ****     {
 13001              		.loc 19 48 5 is_stmt 0 view .LVU3633
 13002              	.LBE2533:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 13003              		.loc 21 59 80 view .LVU3634
 13004 00bc 844D     		ldr	r5, .L700+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 13005              		.loc 21 56 76 view .LVU3635
 13006 00be 2246     		mov	r2, r4
 13007 00c0 3946     		mov	r1, r7
 13008 00c2 8448     		ldr	r0, .L700+88
 13009 00c4 FFF7FEFF 		bl	__aeabi_atexit
 13010              	.LVL843:
 13011              	.LBB2534:
 13012              	.LBI2534:
  48:delayline_multitap.h ****     {
 13013              		.loc 19 48 5 is_stmt 1 view .LVU3636
  48:delayline_multitap.h ****     {
 13014              		.loc 19 48 5 is_stmt 0 view .LVU3637
 13015              	.LBE2534:
  57:Veno-Echo.cpp **** 
 13016              		.loc 21 57 76 view .LVU3638
 13017 00c8 2246     		mov	r2, r4
 13018 00ca 3946     		mov	r1, r7
 13019 00cc 8248     		ldr	r0, .L700+92
 13020 00ce FFF7FEFF 		bl	__aeabi_atexit
 13021              	.LVL844:
 13022              	.LBB2535:
 13023              	.LBI2535:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 13024              		.loc 20 38 5 is_stmt 1 view .LVU3639
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 13025              		.loc 20 38 5 is_stmt 0 view .LVU3640
 13026              	.LBE2535:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 13027              		.loc 21 98 12 view .LVU3641
 13028 00d2 824F     		ldr	r7, .L700+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 13029              		.loc 21 59 80 view .LVU3642
 13030 00d4 2246     		mov	r2, r4
 13031 00d6 2946     		mov	r1, r5
 13032 00d8 8148     		ldr	r0, .L700+100
 13033 00da FFF7FEFF 		bl	__aeabi_atexit
 13034              	.LVL845:
 13035              	.LBB2536:
 13036              	.LBI2536:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 13037              		.loc 20 38 5 is_stmt 1 view .LVU3643
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 13038              		.loc 20 38 5 is_stmt 0 view .LVU3644
 13039              	.LBE2536:
  60:Veno-Echo.cpp **** 
 13040              		.loc 21 60 80 view .LVU3645
 13041 00de 2246     		mov	r2, r4
 13042 00e0 2946     		mov	r1, r5
 13043 00e2 8048     		ldr	r0, .L700+104
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 389


 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13044              		.loc 21 102 11 view .LVU3646
 13045 00e4 804D     		ldr	r5, .L700+108
  60:Veno-Echo.cpp **** 
 13046              		.loc 21 60 80 view .LVU3647
 13047 00e6 FFF7FEFF 		bl	__aeabi_atexit
 13048              	.LVL846:
 13049              	.LBB2537:
 13050              	.LBI2537:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13051              		.loc 18 49 1 is_stmt 1 view .LVU3648
 13052              	.LBB2538:
 13053              	.LBB2539:
 13054              	.LBI2539:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13055              		.loc 15 47 1 view .LVU3649
 13056              	.LBB2540:
 13057              	.LBB2541:
 13058              	.LBI2541:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13059              		.loc 17 24 5 view .LVU3650
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13060              		.loc 17 24 5 is_stmt 0 view .LVU3651
 13061              	.LBE2541:
 13062              	.LBB2542:
 13063              	.LBI2542:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13064              		.loc 16 15 5 is_stmt 1 view .LVU3652
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13065              		.loc 16 15 5 is_stmt 0 view .LVU3653
 13066              	.LBE2542:
 13067              	.LBE2540:
 13068              	.LBE2539:
 13069              	.LBE2538:
 13070              	.LBE2537:
 13071              	.LBE2608:
 13072              	.LBE2612:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13073              		.loc 18 49 14 is_stmt 1 view .LVU3654
  49:DelayMulti.h  **** ~DelayMulti() {}
 13074              		.loc 18 49 14 view .LVU3655
 13075              	.LBB2613:
 13076              	.LBB2609:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 13077              		.loc 21 98 12 is_stmt 0 view .LVU3656
 13078 00ea 2246     		mov	r2, r4
 13079 00ec 3946     		mov	r1, r7
 13080 00ee 7F48     		ldr	r0, .L700+112
 13081 00f0 FFF7FEFF 		bl	__aeabi_atexit
 13082              	.LVL847:
 13083              	.LBB2543:
 13084              	.LBI2543:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13085              		.loc 18 49 1 is_stmt 1 view .LVU3657
 13086              	.LBB2544:
 13087              	.LBB2545:
 13088              	.LBI2545:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 390


  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13089              		.loc 15 47 1 view .LVU3658
 13090              	.LBB2546:
 13091              	.LBB2547:
 13092              	.LBI2547:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13093              		.loc 17 24 5 view .LVU3659
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13094              		.loc 17 24 5 is_stmt 0 view .LVU3660
 13095              	.LBE2547:
 13096              	.LBB2548:
 13097              	.LBI2548:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13098              		.loc 16 15 5 is_stmt 1 view .LVU3661
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13099              		.loc 16 15 5 is_stmt 0 view .LVU3662
 13100              	.LBE2548:
 13101              	.LBE2546:
 13102              	.LBE2545:
 13103              	.LBE2544:
 13104              	.LBE2543:
 13105              	.LBE2609:
 13106              	.LBE2613:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13107              		.loc 18 49 14 is_stmt 1 view .LVU3663
  49:DelayMulti.h  **** ~DelayMulti() {}
 13108              		.loc 18 49 14 view .LVU3664
 13109              	.LBB2614:
 13110              	.LBB2610:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 13111              		.loc 21 98 19 is_stmt 0 view .LVU3665
 13112 00f4 2246     		mov	r2, r4
 13113 00f6 3946     		mov	r1, r7
 13114 00f8 7D48     		ldr	r0, .L700+116
 13115 00fa FFF7FEFF 		bl	__aeabi_atexit
 13116              	.LVL848:
 13117              	.LBB2549:
 13118              	.LBI2549:
  78:LEDs.h        ****     ~ButtonLED() {}
 13119              		.loc 15 78 5 is_stmt 1 view .LVU3666
 13120              	.LBB2550:
 13121              	.LBB2551:
 13122              	.LBI2551:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13123              		.loc 1 40 5 view .LVU3667
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13124              		.loc 1 40 5 is_stmt 0 view .LVU3668
 13125              	.LBE2551:
 13126              	.LBB2552:
 13127              	.LBI2552:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13128              		.loc 17 24 5 is_stmt 1 view .LVU3669
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13129              		.loc 17 24 5 is_stmt 0 view .LVU3670
 13130              	.LBE2552:
 13131              	.LBE2550:
 13132              	.LBE2549:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 391


 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13133              		.loc 21 102 11 view .LVU3671
 13134 00fe 2246     		mov	r2, r4
 13135 0100 2946     		mov	r1, r5
 13136 0102 7C48     		ldr	r0, .L700+120
 13137 0104 FFF7FEFF 		bl	__aeabi_atexit
 13138              	.LVL849:
 13139              	.LBB2553:
 13140              	.LBI2553:
  78:LEDs.h        ****     ~ButtonLED() {}
 13141              		.loc 15 78 5 is_stmt 1 view .LVU3672
 13142              	.LBB2554:
 13143              	.LBB2555:
 13144              	.LBI2555:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13145              		.loc 1 40 5 view .LVU3673
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13146              		.loc 1 40 5 is_stmt 0 view .LVU3674
 13147              	.LBE2555:
 13148              	.LBB2556:
 13149              	.LBI2556:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13150              		.loc 17 24 5 is_stmt 1 view .LVU3675
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13151              		.loc 17 24 5 is_stmt 0 view .LVU3676
 13152              	.LBE2556:
 13153              	.LBE2554:
 13154              	.LBE2553:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13155              		.loc 21 102 18 view .LVU3677
 13156 0108 2246     		mov	r2, r4
 13157 010a 2946     		mov	r1, r5
 13158 010c 7A48     		ldr	r0, .L700+124
 13159 010e FFF7FEFF 		bl	__aeabi_atexit
 13160              	.LVL850:
 13161              	.LBB2557:
 13162              	.LBI2557:
  78:LEDs.h        ****     ~ButtonLED() {}
 13163              		.loc 15 78 5 is_stmt 1 view .LVU3678
 13164              	.LBB2558:
 13165              	.LBB2559:
 13166              	.LBI2559:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13167              		.loc 1 40 5 view .LVU3679
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13168              		.loc 1 40 5 is_stmt 0 view .LVU3680
 13169              	.LBE2559:
 13170              	.LBB2560:
 13171              	.LBI2560:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13172              		.loc 17 24 5 is_stmt 1 view .LVU3681
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13173              		.loc 17 24 5 is_stmt 0 view .LVU3682
 13174              	.LBE2560:
 13175              	.LBE2558:
 13176              	.LBE2557:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 392


 13177              		.loc 21 102 25 view .LVU3683
 13178 0112 2246     		mov	r2, r4
 13179 0114 2946     		mov	r1, r5
 13180 0116 7948     		ldr	r0, .L700+128
 13181 0118 FFF7FEFF 		bl	__aeabi_atexit
 13182              	.LVL851:
 13183              	.LBB2561:
 13184              	.LBI2561:
  78:LEDs.h        ****     ~ButtonLED() {}
 13185              		.loc 15 78 5 is_stmt 1 view .LVU3684
 13186              	.LBB2562:
 13187              	.LBB2563:
 13188              	.LBI2563:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13189              		.loc 1 40 5 view .LVU3685
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13190              		.loc 1 40 5 is_stmt 0 view .LVU3686
 13191              	.LBE2563:
 13192              	.LBB2564:
 13193              	.LBI2564:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13194              		.loc 17 24 5 is_stmt 1 view .LVU3687
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13195              		.loc 17 24 5 is_stmt 0 view .LVU3688
 13196              	.LBE2564:
 13197              	.LBE2562:
 13198              	.LBE2561:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13199              		.loc 21 102 34 view .LVU3689
 13200 011c 2246     		mov	r2, r4
 13201 011e 2946     		mov	r1, r5
 13202 0120 7748     		ldr	r0, .L700+132
 13203 0122 FFF7FEFF 		bl	__aeabi_atexit
 13204              	.LVL852:
 13205              	.LBB2565:
 13206              	.LBI2565:
  78:LEDs.h        ****     ~ButtonLED() {}
 13207              		.loc 15 78 5 is_stmt 1 view .LVU3690
 13208              	.LBB2566:
 13209              	.LBB2567:
 13210              	.LBI2567:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13211              		.loc 1 40 5 view .LVU3691
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13212              		.loc 1 40 5 is_stmt 0 view .LVU3692
 13213              	.LBE2567:
 13214              	.LBB2568:
 13215              	.LBI2568:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13216              		.loc 17 24 5 is_stmt 1 view .LVU3693
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13217              		.loc 17 24 5 is_stmt 0 view .LVU3694
 13218              	.LBE2568:
 13219              	.LBE2566:
 13220              	.LBE2565:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13221              		.loc 21 150 13 view .LVU3695
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 393


 13222 0126 774F     		ldr	r7, .L700+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13223              		.loc 21 102 44 view .LVU3696
 13224 0128 2246     		mov	r2, r4
 13225 012a 2946     		mov	r1, r5
 13226 012c 7648     		ldr	r0, .L700+140
 13227 012e FFF7FEFF 		bl	__aeabi_atexit
 13228              	.LVL853:
 13229              	.LBB2569:
 13230              	.LBI2569:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13231              		.loc 15 47 1 is_stmt 1 view .LVU3697
 13232              	.LBB2570:
 13233              	.LBB2571:
 13234              	.LBI2571:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13235              		.loc 17 24 5 view .LVU3698
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13236              		.loc 17 24 5 is_stmt 0 view .LVU3699
 13237              	.LBE2571:
 13238              	.LBB2572:
 13239              	.LBI2572:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13240              		.loc 16 15 5 is_stmt 1 view .LVU3700
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13241              		.loc 16 15 5 is_stmt 0 view .LVU3701
 13242              	.LBE2572:
 13243              	.LBE2570:
 13244              	.LBE2569:
 103:Veno-Echo.cpp **** 
 13245              		.loc 21 103 10 view .LVU3702
 13246 0132 2246     		mov	r2, r4
 13247 0134 7549     		ldr	r1, .L700+144
 13248 0136 7648     		ldr	r0, .L700+148
 13249 0138 FFF7FEFF 		bl	__aeabi_atexit
 13250              	.LVL854:
 13251              	.LBB2573:
 13252              	.LBI2573:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13253              		.loc 8 38 5 is_stmt 1 view .LVU3703
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13254              		.loc 8 38 5 is_stmt 0 view .LVU3704
 13255              	.LBE2573:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13256              		.loc 21 150 13 view .LVU3705
 13257 013c 2246     		mov	r2, r4
 13258 013e 3946     		mov	r1, r7
 13259 0140 7448     		ldr	r0, .L700+152
 13260 0142 FFF7FEFF 		bl	__aeabi_atexit
 13261              	.LVL855:
 13262              	.LBB2574:
 13263              	.LBI2574:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13264              		.loc 8 38 5 is_stmt 1 view .LVU3706
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13265              		.loc 8 38 5 is_stmt 0 view .LVU3707
 13266              	.LBE2574:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 394


 151:Veno-Echo.cpp **** 
 13267              		.loc 21 151 13 view .LVU3708
 13268 0146 2246     		mov	r2, r4
 13269 0148 3946     		mov	r1, r7
 13270 014a 7348     		ldr	r0, .L700+156
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13271              		.loc 21 156 18 view .LVU3709
 13272 014c 734D     		ldr	r5, .L700+160
 151:Veno-Echo.cpp **** 
 13273              		.loc 21 151 13 view .LVU3710
 13274 014e FFF7FEFF 		bl	__aeabi_atexit
 13275              	.LVL856:
 13276              	.LBB2575:
 13277              	.LBI2575:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13278              		.loc 8 38 5 is_stmt 1 view .LVU3711
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13279              		.loc 8 38 5 is_stmt 0 view .LVU3712
 13280              	.LBE2575:
 153:Veno-Echo.cpp **** static Adsr HPF_Env;
 13281              		.loc 21 153 13 view .LVU3713
 13282 0152 2246     		mov	r2, r4
 13283 0154 3946     		mov	r1, r7
 13284 0156 7248     		ldr	r0, .L700+164
 13285 0158 FFF7FEFF 		bl	__aeabi_atexit
 13286              	.LVL857:
 13287              	.LBB2576:
 13288              	.LBI2576:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13289              		.loc 8 38 5 is_stmt 1 view .LVU3714
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13290              		.loc 8 38 5 is_stmt 0 view .LVU3715
 13291              	.LBE2576:
 154:Veno-Echo.cpp **** 
 13292              		.loc 21 154 13 view .LVU3716
 13293 015c 2246     		mov	r2, r4
 13294 015e 3946     		mov	r1, r7
 13295 0160 7048     		ldr	r0, .L700+168
 13296 0162 FFF7FEFF 		bl	__aeabi_atexit
 13297              	.LVL858:
 13298              	.LBB2577:
 13299              	.LBI2577:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13300              		.loc 11 36 5 is_stmt 1 view .LVU3717
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13301              		.loc 11 36 5 is_stmt 0 view .LVU3718
 13302              	.LBE2577:
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13303              		.loc 21 156 18 view .LVU3719
 13304 0166 2246     		mov	r2, r4
 13305 0168 2946     		mov	r1, r5
 13306 016a 6F48     		ldr	r0, .L700+172
 13307 016c FFF7FEFF 		bl	__aeabi_atexit
 13308              	.LVL859:
 13309              	.LBB2578:
 13310              	.LBI2578:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 395


 13311              		.loc 11 36 5 is_stmt 1 view .LVU3720
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13312              		.loc 11 36 5 is_stmt 0 view .LVU3721
 13313              	.LBE2578:
 157:Veno-Echo.cpp **** 
 13314              		.loc 21 157 18 view .LVU3722
 13315 0170 2246     		mov	r2, r4
 13316 0172 2946     		mov	r1, r5
 13317 0174 6D48     		ldr	r0, .L700+176
 13318 0176 FFF7FEFF 		bl	__aeabi_atexit
 13319              	.LVL860:
 13320              	.LBB2579:
 13321              	.LBI2579:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13322              		.loc 11 36 5 is_stmt 1 view .LVU3723
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13323              		.loc 11 36 5 is_stmt 0 view .LVU3724
 13324              	.LBE2579:
 159:Veno-Echo.cpp **** 
 13325              		.loc 21 159 18 view .LVU3725
 13326 017a 2246     		mov	r2, r4
 13327 017c 2946     		mov	r1, r5
 13328 017e 6C48     		ldr	r0, .L700+180
 13329 0180 FFF7FEFF 		bl	__aeabi_atexit
 13330              	.LVL861:
 13331              	.LBB2580:
 13332              	.LBI2580:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13333              		.loc 11 36 5 is_stmt 1 view .LVU3726
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13334              		.loc 11 36 5 is_stmt 0 view .LVU3727
 13335              	.LBE2580:
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 13336              		.loc 21 162 18 view .LVU3728
 13337 0184 2246     		mov	r2, r4
 13338 0186 2946     		mov	r1, r5
 13339 0188 6A48     		ldr	r0, .L700+184
 13340 018a FFF7FEFF 		bl	__aeabi_atexit
 13341              	.LVL862:
 13342              	.LBB2581:
 13343              	.LBI2581:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13344              		.loc 11 36 5 is_stmt 1 view .LVU3729
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13345              		.loc 11 36 5 is_stmt 0 view .LVU3730
 13346              	.LBE2581:
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 13347              		.loc 21 163 18 view .LVU3731
 13348 018e 2246     		mov	r2, r4
 13349 0190 2946     		mov	r1, r5
 13350 0192 6948     		ldr	r0, .L700+188
 13351 0194 FFF7FEFF 		bl	__aeabi_atexit
 13352              	.LVL863:
 13353              	.LBB2582:
 13354              	.LBI2582:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13355              		.loc 11 36 5 is_stmt 1 view .LVU3732
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 396


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13356              		.loc 11 36 5 is_stmt 0 view .LVU3733
 13357              	.LBE2582:
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 13358              		.loc 21 164 18 view .LVU3734
 13359 0198 2246     		mov	r2, r4
 13360 019a 2946     		mov	r1, r5
 13361 019c 6748     		ldr	r0, .L700+192
 13362 019e FFF7FEFF 		bl	__aeabi_atexit
 13363              	.LVL864:
 13364              	.LBB2583:
 13365              	.LBI2583:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13366              		.loc 11 36 5 is_stmt 1 view .LVU3735
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13367              		.loc 11 36 5 is_stmt 0 view .LVU3736
 13368              	.LBE2583:
 165:Veno-Echo.cpp **** 
 13369              		.loc 21 165 18 view .LVU3737
 13370 01a2 2246     		mov	r2, r4
 13371 01a4 2946     		mov	r1, r5
 13372 01a6 6648     		ldr	r0, .L700+196
 13373 01a8 FFF7FEFF 		bl	__aeabi_atexit
 13374              	.LVL865:
 13375              	.LBB2584:
 13376              	.LBI2584:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13377              		.loc 11 36 5 is_stmt 1 view .LVU3738
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13378              		.loc 11 36 5 is_stmt 0 view .LVU3739
 13379              	.LBE2584:
 168:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 13380              		.loc 21 168 18 view .LVU3740
 13381 01ac 2246     		mov	r2, r4
 13382 01ae 2946     		mov	r1, r5
 13383 01b0 6448     		ldr	r0, .L700+200
 13384 01b2 FFF7FEFF 		bl	__aeabi_atexit
 13385              	.LVL866:
 13386              	.LBB2585:
 13387              	.LBI2585:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13388              		.loc 11 36 5 is_stmt 1 view .LVU3741
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13389              		.loc 11 36 5 is_stmt 0 view .LVU3742
 13390              	.LBE2585:
 169:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 13391              		.loc 21 169 18 view .LVU3743
 13392 01b6 2246     		mov	r2, r4
 13393 01b8 2946     		mov	r1, r5
 13394 01ba 6348     		ldr	r0, .L700+204
 13395 01bc FFF7FEFF 		bl	__aeabi_atexit
 13396              	.LVL867:
 13397              	.LBB2586:
 13398              	.LBI2586:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13399              		.loc 11 36 5 is_stmt 1 view .LVU3744
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 397


 13400              		.loc 11 36 5 is_stmt 0 view .LVU3745
 13401              	.LBE2586:
 170:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 13402              		.loc 21 170 18 view .LVU3746
 13403 01c0 2246     		mov	r2, r4
 13404 01c2 2946     		mov	r1, r5
 13405 01c4 6148     		ldr	r0, .L700+208
 13406 01c6 FFF7FEFF 		bl	__aeabi_atexit
 13407              	.LVL868:
 13408              	.LBB2587:
 13409              	.LBI2587:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13410              		.loc 11 36 5 is_stmt 1 view .LVU3747
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13411              		.loc 11 36 5 is_stmt 0 view .LVU3748
 13412              	.LBE2587:
 171:Veno-Echo.cpp **** 
 13413              		.loc 21 171 18 view .LVU3749
 13414 01ca 2246     		mov	r2, r4
 13415 01cc 2946     		mov	r1, r5
 13416 01ce 6048     		ldr	r0, .L700+212
 13417 01d0 FFF7FEFF 		bl	__aeabi_atexit
 13418              	.LVL869:
 13419              	.LBB2588:
 13420              	.LBI2588:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13421              		.loc 11 36 5 is_stmt 1 view .LVU3750
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13422              		.loc 11 36 5 is_stmt 0 view .LVU3751
 13423              	.LBE2588:
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 13424              		.loc 21 174 18 view .LVU3752
 13425 01d4 2246     		mov	r2, r4
 13426 01d6 2946     		mov	r1, r5
 13427 01d8 5E48     		ldr	r0, .L700+216
 13428 01da FFF7FEFF 		bl	__aeabi_atexit
 13429              	.LVL870:
 13430              	.LBB2589:
 13431              	.LBI2589:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13432              		.loc 11 36 5 is_stmt 1 view .LVU3753
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13433              		.loc 11 36 5 is_stmt 0 view .LVU3754
 13434              	.LBE2589:
 175:Veno-Echo.cpp **** 
 13435              		.loc 21 175 18 view .LVU3755
 13436 01de 2246     		mov	r2, r4
 13437 01e0 2946     		mov	r1, r5
 13438 01e2 5D48     		ldr	r0, .L700+220
 13439 01e4 FFF7FEFF 		bl	__aeabi_atexit
 13440              	.LVL871:
 13441              	.LBB2590:
 13442              	.LBI2590:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13443              		.loc 11 36 5 is_stmt 1 view .LVU3756
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13444              		.loc 11 36 5 is_stmt 0 view .LVU3757
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 398


 13445              	.LBE2590:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13446              		.loc 21 181 8 view .LVU3758
 13447 01e8 5C4F     		ldr	r7, .L700+224
 177:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 13448              		.loc 21 177 18 view .LVU3759
 13449 01ea 2246     		mov	r2, r4
 13450 01ec 2946     		mov	r1, r5
 13451 01ee 5C48     		ldr	r0, .L700+228
 13452 01f0 FFF7FEFF 		bl	__aeabi_atexit
 13453              	.LVL872:
 13454              	.LBB2591:
 13455              	.LBI2591:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13456              		.loc 11 36 5 is_stmt 1 view .LVU3760
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13457              		.loc 11 36 5 is_stmt 0 view .LVU3761
 13458              	.LBE2591:
 178:Veno-Echo.cpp **** 
 13459              		.loc 21 178 18 view .LVU3762
 13460 01f4 2246     		mov	r2, r4
 13461 01f6 2946     		mov	r1, r5
 13462 01f8 5A48     		ldr	r0, .L700+232
 13463 01fa FFF7FEFF 		bl	__aeabi_atexit
 13464              	.LVL873:
 13465              	.LBB2592:
 13466              	.LBI2592:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13467              		.loc 1 40 5 is_stmt 1 view .LVU3763
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13468              		.loc 1 40 5 is_stmt 0 view .LVU3764
 13469              	.LBE2592:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13470              		.loc 21 181 8 view .LVU3765
 13471 01fe 2246     		mov	r2, r4
 13472 0200 3946     		mov	r1, r7
 13473 0202 5948     		ldr	r0, .L700+236
 13474 0204 FFF7FEFF 		bl	__aeabi_atexit
 13475              	.LVL874:
 13476              	.LBB2593:
 13477              	.LBI2593:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13478              		.loc 1 40 5 is_stmt 1 view .LVU3766
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13479              		.loc 1 40 5 is_stmt 0 view .LVU3767
 13480              	.LBE2593:
 182:Veno-Echo.cpp **** 
 13481              		.loc 21 182 8 view .LVU3768
 13482 0208 2246     		mov	r2, r4
 13483 020a 3946     		mov	r1, r7
 13484 020c 5748     		ldr	r0, .L700+240
 13485 020e FFF7FEFF 		bl	__aeabi_atexit
 13486              	.LVL875:
 13487              	.LBB2594:
 13488              	.LBI2594:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13489              		.loc 1 40 5 is_stmt 1 view .LVU3769
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 399


  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13490              		.loc 1 40 5 is_stmt 0 view .LVU3770
 13491              	.LBE2594:
 185:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 13492              		.loc 21 185 8 view .LVU3771
 13493 0212 2246     		mov	r2, r4
 13494 0214 3946     		mov	r1, r7
 13495 0216 5648     		ldr	r0, .L700+244
 13496 0218 FFF7FEFF 		bl	__aeabi_atexit
 13497              	.LVL876:
 186:Veno-Echo.cpp **** GateIn ClockIn;
 13498              		.loc 21 186 34 view .LVU3772
 13499 021c 0520     		movs	r0, #5
 13500 021e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 13501              	.LVL877:
 13502 0222 544B     		ldr	r3, .L700+248
 13503 0224 0546     		mov	r5, r0	@ movhi
 187:Veno-Echo.cpp **** //Switch ClockIn;
 13504              		.loc 21 187 8 view .LVU3773
 13505 0226 2246     		mov	r2, r4
 13506 0228 5349     		ldr	r1, .L700+252
 13507              	.LBB2595:
 13508              	.LBB2596:
 13509              	.LBB2597:
  55:taptempo.h    ****         clockLength_ = 0;
 13510              		.loc 14 55 19 view .LVU3774
 13511 022a 4FF07E57 		mov	r7, #1065353216
 13512              	.LBE2597:
 13513              	.LBE2596:
 13514              	.LBE2595:
 187:Veno-Echo.cpp **** //Switch ClockIn;
 13515              		.loc 21 187 8 view .LVU3775
 13516 022e 5348     		ldr	r0, .L700+256
 186:Veno-Echo.cpp **** GateIn ClockIn;
 13517              		.loc 21 186 34 view .LVU3776
 13518 0230 1D80     		strh	r5, [r3]	@ movhi
 13519              	.LVL878:
 13520              	.LBB2604:
 13521              	.LBI2604:
  21:../libdaisy/src/hid/gatein.h ****     /** GateIn~
 13522              		.loc 2 21 5 is_stmt 1 view .LVU3777
  21:../libdaisy/src/hid/gatein.h ****     /** GateIn~
 13523              		.loc 2 21 5 is_stmt 0 view .LVU3778
 13524              	.LBE2604:
 187:Veno-Echo.cpp **** //Switch ClockIn;
 13525              		.loc 21 187 8 view .LVU3779
 13526 0232 FFF7FEFF 		bl	__aeabi_atexit
 13527              	.LVL879:
 13528              	.LBB2605:
 13529              	.LBI2595:
  45:taptempo.h    ****     {
 13530              		.loc 14 45 5 is_stmt 1 view .LVU3780
 13531              	.LBB2601:
 13532              	.LBB2598:
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13533              		.loc 14 47 9 view .LVU3781
  48:taptempo.h    ****         maxtap_ = 2000000;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 400


 13534              		.loc 14 48 24 is_stmt 0 view .LVU3782
 13535 0236 DFF85881 		ldr	r8, .L700+276
  58:taptempo.h    ****         PPQN_=24;
 13536              		.loc 14 58 22 view .LVU3783
 13537 023a 42F21075 		movw	r5, #10000
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13538              		.loc 14 47 18 view .LVU3784
 13539 023e 5048     		ldr	r0, .L700+260
  59:taptempo.h    ****     }
 13540              		.loc 14 59 14 view .LVU3785
 13541 0240 1823     		movs	r3, #24
  49:taptempo.h    ****         mintap_ = 80000;
 13542              		.loc 14 49 17 view .LVU3786
 13543 0242 5049     		ldr	r1, .L700+264
 13544              	.LBE2598:
 13545              	.LBE2601:
 13546              	.LBE2605:
 191:Veno-Echo.cpp **** 
 13547              		.loc 21 191 10 view .LVU3787
 13548 0244 2246     		mov	r2, r4
 13549              	.LBB2606:
 13550              	.LBB2602:
 13551              	.LBB2599:
  50:taptempo.h    ****         lastTapLength_ = 0;
 13552              		.loc 14 50 17 view .LVU3788
 13553 0246 DFF84CE1 		ldr	lr, .L700+280
  52:taptempo.h    ****         lastTime_ = 0;
 13554              		.loc 14 52 16 view .LVU3789
 13555 024a DFF84CC1 		ldr	ip, .L700+284
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13556              		.loc 14 47 18 view .LVU3790
 13557 024e 80F83060 		strb	r6, [r0, #48]
  48:taptempo.h    ****         maxtap_ = 2000000;
 13558              		.loc 14 48 9 is_stmt 1 view .LVU3791
  51:taptempo.h    ****         tempo_ = 500000.0f;
 13559              		.loc 14 51 24 is_stmt 0 view .LVU3792
 13560 0252 8661     		str	r6, [r0, #24]
  53:taptempo.h    ****         currentTime_ = 0;
 13561              		.loc 14 53 19 view .LVU3793
 13562 0254 0661     		str	r6, [r0, #16]
  54:taptempo.h    ****         tapRatio_ = 1.0f;
 13563              		.loc 14 54 22 view .LVU3794
 13564 0256 8660     		str	r6, [r0, #8]
  48:taptempo.h    ****         maxtap_ = 2000000;
 13565              		.loc 14 48 24 view .LVU3795
 13566 0258 C0F83480 		str	r8, [r0, #52]	@ float
  49:taptempo.h    ****         mintap_ = 80000;
 13567              		.loc 14 49 9 is_stmt 1 view .LVU3796
  49:taptempo.h    ****         mintap_ = 80000;
 13568              		.loc 14 49 17 is_stmt 0 view .LVU3797
 13569 025c 4160     		str	r1, [r0, #4]
  50:taptempo.h    ****         lastTapLength_ = 0;
 13570              		.loc 14 50 9 is_stmt 1 view .LVU3798
  50:taptempo.h    ****         lastTapLength_ = 0;
 13571              		.loc 14 50 17 is_stmt 0 view .LVU3799
 13572 025e C0F800E0 		str	lr, [r0]
  51:taptempo.h    ****         tempo_ = 500000.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 401


 13573              		.loc 14 51 9 is_stmt 1 view .LVU3800
  52:taptempo.h    ****         lastTime_ = 0;
 13574              		.loc 14 52 9 view .LVU3801
  55:taptempo.h    ****         clockLength_ = 0;
 13575              		.loc 14 55 19 is_stmt 0 view .LVU3802
 13576 0262 C763     		str	r7, [r0, #60]	@ float
  58:taptempo.h    ****         PPQN_=24;
 13577              		.loc 14 58 22 view .LVU3803
 13578 0264 8562     		str	r5, [r0, #40]
 13579              	.LBE2599:
 13580              	.LBE2602:
 13581              	.LBE2606:
 191:Veno-Echo.cpp **** 
 13582              		.loc 21 191 10 view .LVU3804
 13583 0266 4849     		ldr	r1, .L700+268
 13584              	.LBB2607:
 13585              	.LBB2603:
 13586              	.LBB2600:
  52:taptempo.h    ****         lastTime_ = 0;
 13587              		.loc 14 52 16 view .LVU3805
 13588 0268 C0F82CC0 		str	ip, [r0, #44]
  53:taptempo.h    ****         currentTime_ = 0;
 13589              		.loc 14 53 9 is_stmt 1 view .LVU3806
  54:taptempo.h    ****         tapRatio_ = 1.0f;
 13590              		.loc 14 54 9 view .LVU3807
  55:taptempo.h    ****         clockLength_ = 0;
 13591              		.loc 14 55 9 view .LVU3808
  56:taptempo.h    ****         lastClockLength_ = 0;
 13592              		.loc 14 56 9 view .LVU3809
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13593              		.loc 14 57 9 view .LVU3810
  58:taptempo.h    ****         PPQN_=24;
 13594              		.loc 14 58 9 view .LVU3811
  59:taptempo.h    ****     }
 13595              		.loc 14 59 9 view .LVU3812
  59:taptempo.h    ****     }
 13596              		.loc 14 59 14 is_stmt 0 view .LVU3813
 13597 026c 0364     		str	r3, [r0, #64]
 13598              	.LVL880:
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13599              		.loc 14 57 26 view .LVU3814
 13600 026e C0E90866 		strd	r6, r6, [r0, #32]
 13601              	.LBE2600:
 13602              	.LBE2603:
 13603              	.LBE2607:
 13604              	.LBE2610:
 13605              	.LBE2614:
 13606              		.loc 21 2155 1 view .LVU3815
 13607 0272 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 13608              		.cfi_restore 14
 13609              		.cfi_restore 8
 13610              		.cfi_restore 7
 13611              		.cfi_restore 6
 13612              		.cfi_restore 5
 13613              		.cfi_restore 4
 13614              		.cfi_def_cfa_offset 0
 13615              	.LBB2615:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 402


 13616              	.LBB2611:
 191:Veno-Echo.cpp **** 
 13617              		.loc 21 191 10 view .LVU3816
 13618 0276 FFF7FEBF 		b	__aeabi_atexit
 13619              	.LVL881:
 13620              	.L701:
 13621 027a 00BF     		.align	2
 13622              	.L700:
 13623 027c 00000000 		.word	.LANCHOR4
 13624 0280 00000000 		.word	__dso_handle
 13625 0284 00000000 		.word	_ZN7daisysp3SvfD1Ev
 13626 0288 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13627 028c 00000000 		.word	.LANCHOR47
 13628 0290 00000000 		.word	.LANCHOR48
 13629 0294 00000000 		.word	.LANCHOR35
 13630 0298 00000000 		.word	.LANCHOR36
 13631 029c 00000000 		.word	.LANCHOR49
 13632 02a0 00000000 		.word	.LANCHOR50
 13633 02a4 00000000 		.word	.LANCHOR37
 13634 02a8 00000000 		.word	.LANCHOR38
 13635 02ac 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 13636 02b0 00000000 		.word	.LANCHOR76
 13637 02b4 17B7D138 		.word	953267991
 13638 02b8 00000000 		.word	.LANCHOR131
 13639 02bc 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 13640 02c0 00000000 		.word	.LANCHOR132
 13641 02c4 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 13642 02c8 00000000 		.word	.LANCHOR107
 13643 02cc 00000000 		.word	.LANCHOR108
 13644 02d0 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 13645 02d4 00000000 		.word	delMemsL
 13646 02d8 00000000 		.word	delMemsR
 13647 02dc 00000000 		.word	_ZN10DelayMultiD1Ev
 13648 02e0 00000000 		.word	delMemsL_REV
 13649 02e4 00000000 		.word	delMemsR_REV
 13650 02e8 00000000 		.word	_ZN9ButtonLEDD1Ev
 13651 02ec 00000000 		.word	.LANCHOR0
 13652 02f0 00000000 		.word	.LANCHOR1
 13653 02f4 00000000 		.word	.LANCHOR94
 13654 02f8 00000000 		.word	.LANCHOR95
 13655 02fc 00000000 		.word	.LANCHOR92
 13656 0300 00000000 		.word	.LANCHOR93
 13657 0304 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 13658 0308 00000000 		.word	.LANCHOR96
 13659 030c 00000000 		.word	_ZN8TempoLEDD1Ev
 13660 0310 00000000 		.word	.LANCHOR89
 13661 0314 00000000 		.word	.LANCHOR101
 13662 0318 00000000 		.word	.LANCHOR102
 13663 031c 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 13664 0320 00000000 		.word	.LANCHOR103
 13665 0324 00000000 		.word	.LANCHOR104
 13666 0328 00000000 		.word	.LANCHOR105
 13667 032c 00000000 		.word	.LANCHOR106
 13668 0330 00000000 		.word	.LANCHOR65
 13669 0334 00000000 		.word	.LANCHOR119
 13670 0338 00000000 		.word	.LANCHOR120
 13671 033c 00000000 		.word	.LANCHOR117
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 403


 13672 0340 00000000 		.word	.LANCHOR118
 13673 0344 00000000 		.word	.LANCHOR123
 13674 0348 00000000 		.word	.LANCHOR124
 13675 034c 00000000 		.word	.LANCHOR121
 13676 0350 00000000 		.word	.LANCHOR122
 13677 0354 00000000 		.word	.LANCHOR125
 13678 0358 00000000 		.word	.LANCHOR126
 13679 035c 00000000 		.word	_ZN5daisy6SwitchD1Ev
 13680 0360 00000000 		.word	.LANCHOR127
 13681 0364 00000000 		.word	.LANCHOR128
 13682 0368 00000000 		.word	.LANCHOR97
 13683 036c 00000000 		.word	.LANCHOR98
 13684 0370 00000000 		.word	.LANCHOR99
 13685 0374 00000000 		.word	.LANCHOR100
 13686 0378 00000000 		.word	_ZN5daisy6GateInD1Ev
 13687 037c 00000000 		.word	.LANCHOR88
 13688 0380 00000000 		.word	.LANCHOR26
 13689 0384 80841E00 		.word	2000000
 13690 0388 00000000 		.word	_ZN8TaptempoD1Ev
 13691 038c 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 13692 0390 0000A03F 		.word	1067450368
 13693 0394 80380100 		.word	80000
 13694 0398 20A10700 		.word	500000
 13695              	.LBE2611:
 13696              	.LBE2615:
 13697              		.cfi_endproc
 13698              	.LFE4919:
 13700              		.section	.init_array,"aw",%init_array
 13701              		.align	2
 13702 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 13703              		.global	AltControls
 13704              		.global	BaseTempo
 13705              		.global	ClockIn
 13706              		.global	ClockPin
 13707              		.global	Sync
 13708              		.global	ReverseGateR
 13709              		.global	ReverseGateL
 13710              		.global	CLOCK_DEBUG
 13711              		.global	PHASE_DEBUG
 13712              		.global	DELAYR_DEBUG
 13713              		.global	DELAYL_DEBUG
 13714              		.global	saveState
 13715              		.global	save_flag
 13716              		.global	PostFilters
 13717              		.global	ClockInFlag
 13718              		.global	mute
 13719              		.global	shift
 13720              		.global	syncMode
 13721              		.global	modulation_CV_Raw
 13722              		.global	ModDepth
 13723              		.global	filterXfade
 13724              		.global	width_CV
 13725              		.global	width
 13726              		.global	drywet_CV
 13727              		.global	drywet
 13728              		.global	crossfeedback_CV
 13729              		.global	crossfeedback
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 404


 13730              		.global	feedbackR_CV
 13731              		.global	feedbackR
 13732              		.global	feedbackL_CV
 13733              		.global	feedbackL
 13734              		.global	delayTimeR_CV
 13735              		.global	delayTimeL_CV
 13736              		.global	tempoLED_BASE
 13737              		.global	Tap_Button
 13738              		.global	Rev_R_sw
 13739              		.global	Rev_L_sw
 13740              		.global	HPF_sw
 13741              		.global	LPF_sw
 13742              		.global	delaysR_REV
 13743              		.global	delaysL_REV
 13744              		.global	delayR
 13745              		.global	delayL
 13746              		.global	delMemsR_REV
 13747              		.global	delMemsL_REV
 13748              		.global	delMemsR
 13749              		.global	delMemsL
 13750              		.section	.bss.AltControls,"aw",%nobits
 13751              		.align	2
 13752              		.set	.LANCHOR15,. + 0
 13755              	AltControls:
 13756 0000 00000000 		.space	44
 13756      00000000 
 13756      00000000 
 13756      00000000 
 13756      00000000 
 13757              		.section	.bss.BaseTempo,"aw",%nobits
 13758              		.align	2
 13759              		.set	.LANCHOR26,. + 0
 13762              	BaseTempo:
 13763 0000 00000000 		.space	68
 13763      00000000 
 13763      00000000 
 13763      00000000 
 13763      00000000 
 13764              		.section	.bss.CLOCK_DEBUG,"aw",%nobits
 13765              		.align	2
 13768              	CLOCK_DEBUG:
 13769 0000 00000000 		.space	4
 13770              		.section	.bss.ClockIn,"aw",%nobits
 13771              		.align	2
 13772              		.set	.LANCHOR88,. + 0
 13775              	ClockIn:
 13776 0000 00000000 		.space	6
 13776      0000
 13777              		.section	.bss.ClockInFlag,"aw",%nobits
 13780              	ClockInFlag:
 13781 0000 00       		.space	1
 13782              		.section	.bss.ClockPin,"aw",%nobits
 13783              		.align	2
 13784              		.set	.LANCHOR100,. + 0
 13787              	ClockPin:
 13788 0000 0000     		.space	2
 13789              		.section	.bss.DELAYL_DEBUG,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 405


 13790              		.align	2
 13793              	DELAYL_DEBUG:
 13794 0000 00000000 		.space	4
 13795              		.section	.bss.DELAYR_DEBUG,"aw",%nobits
 13796              		.align	2
 13799              	DELAYR_DEBUG:
 13800 0000 00000000 		.space	4
 13801              		.section	.bss.HPF_sw,"aw",%nobits
 13802              		.align	2
 13803              		.set	.LANCHOR95,. + 0
 13806              	HPF_sw:
 13807 0000 00000000 		.space	52
 13807      00000000 
 13807      00000000 
 13807      00000000 
 13807      00000000 
 13808              		.section	.bss.LPF_sw,"aw",%nobits
 13809              		.align	2
 13810              		.set	.LANCHOR94,. + 0
 13813              	LPF_sw:
 13814 0000 00000000 		.space	52
 13814      00000000 
 13814      00000000 
 13814      00000000 
 13814      00000000 
 13815              		.section	.bss.ModDepth,"aw",%nobits
 13816              		.align	2
 13817              		.set	.LANCHOR68,. + 0
 13820              	ModDepth:
 13821 0000 00000000 		.space	4
 13822              		.section	.bss.PHASE_DEBUG,"aw",%nobits
 13823              		.align	2
 13824              		.set	.LANCHOR91,. + 0
 13827              	PHASE_DEBUG:
 13828 0000 00000000 		.space	4
 13829              		.section	.bss.PostFilters,"aw",%nobits
 13830              		.set	.LANCHOR83,. + 0
 13833              	PostFilters:
 13834 0000 00       		.space	1
 13835              		.section	.bss.Rev_L_sw,"aw",%nobits
 13836              		.align	2
 13837              		.set	.LANCHOR92,. + 0
 13840              	Rev_L_sw:
 13841 0000 00000000 		.space	52
 13841      00000000 
 13841      00000000 
 13841      00000000 
 13841      00000000 
 13842              		.section	.bss.Rev_R_sw,"aw",%nobits
 13843              		.align	2
 13844              		.set	.LANCHOR93,. + 0
 13847              	Rev_R_sw:
 13848 0000 00000000 		.space	52
 13848      00000000 
 13848      00000000 
 13848      00000000 
 13848      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 406


 13849              		.section	.bss.ReverseGateL,"aw",%nobits
 13850              		.align	2
 13851              		.set	.LANCHOR97,. + 0
 13854              	ReverseGateL:
 13855 0000 00000000 		.space	16
 13855      00000000 
 13855      00000000 
 13855      00000000 
 13856              		.section	.bss.ReverseGateR,"aw",%nobits
 13857              		.align	2
 13858              		.set	.LANCHOR98,. + 0
 13861              	ReverseGateR:
 13862 0000 00000000 		.space	16
 13862      00000000 
 13862      00000000 
 13862      00000000 
 13863              		.section	.bss.Sync,"aw",%nobits
 13864              		.align	2
 13865              		.set	.LANCHOR99,. + 0
 13868              	Sync:
 13869 0000 00000000 		.space	16
 13869      00000000 
 13869      00000000 
 13869      00000000 
 13870              		.section	.bss.Tap_Button,"aw",%nobits
 13871              		.align	2
 13872              		.set	.LANCHOR96,. + 0
 13875              	Tap_Button:
 13876 0000 00000000 		.space	52
 13876      00000000 
 13876      00000000 
 13876      00000000 
 13876      00000000 
 13877              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13878              		.align	2
 13879              		.set	.LANCHOR101,. + 0
 13882              	_ZL10FwdRevLEnv:
 13883 0000 00000000 		.space	56
 13883      00000000 
 13883      00000000 
 13883      00000000 
 13883      00000000 
 13884              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13885              		.align	2
 13886              		.set	.LANCHOR102,. + 0
 13889              	_ZL10FwdRevREnv:
 13890 0000 00000000 		.space	56
 13890      00000000 
 13890      00000000 
 13890      00000000 
 13890      00000000 
 13891              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13892              		.align	2
 13893              		.set	.LANCHOR117,. + 0
 13896              	_ZL10HPF_LXfade:
 13897 0000 00000000 		.space	8
 13897      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 407


 13898              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13899              		.align	2
 13900              		.set	.LANCHOR37,. + 0
 13903              	_ZL10HPF_L_post:
 13904 0000 00000000 		.space	76
 13904      00000000 
 13904      00000000 
 13904      00000000 
 13904      00000000 
 13905              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13906              		.align	2
 13907              		.set	.LANCHOR118,. + 0
 13910              	_ZL10HPF_RXfade:
 13911 0000 00000000 		.space	8
 13911      00000000 
 13912              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13913              		.align	2
 13914              		.set	.LANCHOR38,. + 0
 13917              	_ZL10HPF_R_post:
 13918 0000 00000000 		.space	76
 13918      00000000 
 13918      00000000 
 13918      00000000 
 13918      00000000 
 13919              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13920              		.align	2
 13921              		.set	.LANCHOR119,. + 0
 13924              	_ZL10LPF_LXfade:
 13925 0000 00000000 		.space	8
 13925      00000000 
 13926              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13927              		.align	2
 13928              		.set	.LANCHOR49,. + 0
 13931              	_ZL10LPF_L_post:
 13932 0000 00000000 		.space	76
 13932      00000000 
 13932      00000000 
 13932      00000000 
 13932      00000000 
 13933              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13934              		.align	2
 13935              		.set	.LANCHOR120,. + 0
 13938              	_ZL10LPF_RXfade:
 13939 0000 00000000 		.space	8
 13939      00000000 
 13940              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13941              		.align	2
 13942              		.set	.LANCHOR50,. + 0
 13945              	_ZL10LPF_R_post:
 13946 0000 00000000 		.space	76
 13946      00000000 
 13946      00000000 
 13946      00000000 
 13946      00000000 
 13947              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13948              		.align	2
 13949              		.set	.LANCHOR65,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 408


 13952              	_ZL10WidthXfade:
 13953 0000 00000000 		.space	8
 13953      00000000 
 13954              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 13955              		.align	2
 13956              		.set	.LANCHOR107,. + 0
 13959              	_ZL11DcBlock_LFB:
 13960 0000 00000000 		.space	12
 13960      00000000 
 13960      00000000 
 13961              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 13962              		.align	2
 13963              		.set	.LANCHOR108,. + 0
 13966              	_ZL11DcBlock_RFB:
 13967 0000 00000000 		.space	12
 13967      00000000 
 13967      00000000 
 13968              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13969              		.align	2
 13970              		.set	.LANCHOR125,. + 0
 13973              	_ZL11FilterMix_L:
 13974 0000 00000000 		.space	8
 13974      00000000 
 13975              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13976              		.align	2
 13977              		.set	.LANCHOR126,. + 0
 13980              	_ZL11FilterMix_R:
 13981 0000 00000000 		.space	8
 13981      00000000 
 13982              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13983              		.align	2
 13984              		.set	.LANCHOR105,. + 0
 13987              	_ZL12FwdRevLXfade:
 13988 0000 00000000 		.space	8
 13988      00000000 
 13989              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13990              		.align	2
 13991              		.set	.LANCHOR106,. + 0
 13994              	_ZL12FwdRevRXfade:
 13995 0000 00000000 		.space	8
 13995      00000000 
 13996              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13997              		.align	2
 13998              		.set	.LANCHOR121,. + 0
 14001              	_ZL15HPF_LXfade_post:
 14002 0000 00000000 		.space	8
 14002      00000000 
 14003              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 14004              		.align	2
 14005              		.set	.LANCHOR122,. + 0
 14008              	_ZL15HPF_RXfade_post:
 14009 0000 00000000 		.space	8
 14009      00000000 
 14010              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 14011              		.align	2
 14012              		.set	.LANCHOR123,. + 0
 14015              	_ZL15LPF_LXfade_post:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 409


 14016 0000 00000000 		.space	8
 14016      00000000 
 14017              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 14018              		.align	2
 14019              		.set	.LANCHOR124,. + 0
 14022              	_ZL15LPF_RXfade_post:
 14023 0000 00000000 		.space	8
 14023      00000000 
 14024              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 14025              		.align	2
 14026              		.set	.LANCHOR127,. + 0
 14029              	_ZL16FilterMix_L_post:
 14030 0000 00000000 		.space	8
 14030      00000000 
 14031              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 14032              		.align	2
 14033              		.set	.LANCHOR128,. + 0
 14036              	_ZL16FilterMix_R_post:
 14037 0000 00000000 		.space	8
 14037      00000000 
 14038              		.section	.bss._ZL2hw,"aw",%nobits
 14039              		.align	2
 14040              		.set	.LANCHOR4,. + 0
 14043              	_ZL2hw:
 14044 0000 00000000 		.space	60
 14044      00000000 
 14044      00000000 
 14044      00000000 
 14044      00000000 
 14045              		.section	.bss._ZL3lfo,"aw",%nobits
 14046              		.align	2
 14047              		.set	.LANCHOR76,. + 0
 14050              	_ZL3lfo:
 14051 0000 00000000 		.space	40
 14051      00000000 
 14051      00000000 
 14051      00000000 
 14051      00000000 
 14052              		.section	.bss._ZL5HPF_L,"aw",%nobits
 14053              		.align	2
 14054              		.set	.LANCHOR35,. + 0
 14057              	_ZL5HPF_L:
 14058 0000 00000000 		.space	76
 14058      00000000 
 14058      00000000 
 14058      00000000 
 14058      00000000 
 14059              		.section	.bss._ZL5HPF_R,"aw",%nobits
 14060              		.align	2
 14061              		.set	.LANCHOR36,. + 0
 14064              	_ZL5HPF_R:
 14065 0000 00000000 		.space	76
 14065      00000000 
 14065      00000000 
 14065      00000000 
 14065      00000000 
 14066              		.section	.bss._ZL5LPF_L,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 410


 14067              		.align	2
 14068              		.set	.LANCHOR47,. + 0
 14071              	_ZL5LPF_L:
 14072 0000 00000000 		.space	76
 14072      00000000 
 14072      00000000 
 14072      00000000 
 14072      00000000 
 14073              		.section	.bss._ZL5LPF_R,"aw",%nobits
 14074              		.align	2
 14075              		.set	.LANCHOR48,. + 0
 14078              	_ZL5LPF_R:
 14079 0000 00000000 		.space	76
 14079      00000000 
 14079      00000000 
 14079      00000000 
 14079      00000000 
 14080              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 14081              		.align	2
 14082              		.set	.LANCHOR104,. + 0
 14085              	_ZL7HPF_Env:
 14086 0000 00000000 		.space	56
 14086      00000000 
 14086      00000000 
 14086      00000000 
 14086      00000000 
 14087              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 14088              		.align	2
 14089              		.set	.LANCHOR103,. + 0
 14092              	_ZL7LPF_Env:
 14093 0000 00000000 		.space	56
 14093      00000000 
 14093      00000000 
 14093      00000000 
 14093      00000000 
 14094              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 14095              		.align	2
 14096              		.set	.LANCHOR131,. + 0
 14099              	_ZL7LeftEnv:
 14100 0000 00000000 		.space	24
 14100      00000000 
 14100      00000000 
 14100      00000000 
 14100      00000000 
 14101              		.section	.bss._ZL8RightEnv,"aw",%nobits
 14102              		.align	2
 14103              		.set	.LANCHOR132,. + 0
 14106              	_ZL8RightEnv:
 14107 0000 00000000 		.space	24
 14107      00000000 
 14107      00000000 
 14107      00000000 
 14107      00000000 
 14108              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 14109              		.align	2
 14110              		.set	.LANCHOR86,. + 0
 14113              	_ZZ10Update_ModvE13modulation_CV:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 411


 14114 0000 00000000 		.space	4
 14115              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 14116              		.align	2
 14117              		.set	.LANCHOR87,. + 0
 14120              	_ZZ10Update_ModvE17ModDepth_Filtered:
 14121 0000 00000000 		.space	4
 14122              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 14123              		.align	2
 14124              		.set	.LANCHOR63,. + 0
 14127              	_ZZ12Update_widthvE10width_Last:
 14128 0000 00000000 		.space	4
 14129              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 14130              		.align	2
 14131              		.set	.LANCHOR67,. + 0
 14134              	_ZZ12Update_widthvE12ModDepth_new:
 14135 0000 00000000 		.space	4
 14136              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 14137              		.set	.LANCHOR61,. + 0
 14140              	_ZZ12Update_widthvE12width_pickup:
 14141 0000 00       		.space	1
 14142              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 14143              		.set	.LANCHOR66,. + 0
 14146              	_ZZ12Update_widthvE15ModDepth_pickup:
 14147 0000 00       		.space	1
 14148              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 14149              		.set	.LANCHOR60,. + 0
 14152              	_ZZ12Update_widthvE9lastShift:
 14153 0000 00       		.space	1
 14154              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 14155              		.align	2
 14156              		.set	.LANCHOR62,. + 0
 14159              	_ZZ12Update_widthvE9width_new:
 14160 0000 00000000 		.space	4
 14161              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 14162              		.set	.LANCHOR57,. + 0
 14165              	_ZZ13Update_drywetvE10Res_pickup:
 14166 0000 00       		.space	1
 14167              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 14168              		.align	2
 14169              		.set	.LANCHOR54,. + 0
 14172              	_ZZ13Update_drywetvE10drywet_new:
 14173 0000 00000000 		.space	4
 14174              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 14175              		.align	2
 14176              		.set	.LANCHOR55,. + 0
 14179              	_ZZ13Update_drywetvE11drywet_Last:
 14180 0000 00000000 		.space	4
 14181              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 14182              		.set	.LANCHOR53,. + 0
 14185              	_ZZ13Update_drywetvE13drywet_pickup:
 14186 0000 00       		.space	1
 14187              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 14188              		.align	2
 14189              		.set	.LANCHOR58,. + 0
 14192              	_ZZ13Update_drywetvE7Res_new:
 14193 0000 00000000 		.space	4
 14194              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 412


 14195              		.set	.LANCHOR52,. + 0
 14198              	_ZZ13Update_drywetvE9lastShift:
 14199 0000 00       		.space	1
 14200              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 14201              		.align	2
 14202              		.set	.LANCHOR111,. + 0
 14205              	_ZZ14Update_ButtonsvE11buttonstate:
 14206 0000 00000000 		.space	4
 14207              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 14208              		.align	2
 14209              		.set	.LANCHOR112,. + 0
 14212              	_ZZ14Update_ButtonsvE9resetTime:
 14213 0000 00000000 		.space	4
 14214              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 14215              		.align	2
 14216              		.set	.LANCHOR113,. + 0
 14219              	_ZZ14Update_ButtonsvE9shiftTime:
 14220 0000 00000000 		.space	4
 14221              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 14222              		.align	2
 14223              		.set	.LANCHOR34,. + 0
 14226              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 14227 0000 00000000 		.space	4
 14228              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 14229              		.align	2
 14230              		.set	.LANCHOR30,. + 0
 14233              	_ZZ16Update_feedbackLvE13feedbackL_new:
 14234 0000 00000000 		.space	4
 14235              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 14236              		.align	2
 14237              		.set	.LANCHOR31,. + 0
 14240              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 14241 0000 00000000 		.space	4
 14242              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 14243              		.set	.LANCHOR33,. + 0
 14246              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 14247 0000 00       		.space	1
 14248              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 14249              		.set	.LANCHOR29,. + 0
 14252              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 14253 0000 00       		.space	1
 14254              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 14255              		.set	.LANCHOR28,. + 0
 14258              	_ZZ16Update_feedbackLvE9lastShift:
 14259 0000 00       		.space	1
 14260              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 14261              		.align	2
 14262              		.set	.LANCHOR46,. + 0
 14265              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 14266 0000 00000000 		.space	4
 14267              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 14268              		.align	2
 14269              		.set	.LANCHOR42,. + 0
 14272              	_ZZ16Update_feedbackRvE13feedbackR_new:
 14273 0000 00000000 		.space	4
 14274              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 14275              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 413


 14276              		.set	.LANCHOR43,. + 0
 14279              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 14280 0000 00000000 		.space	4
 14281              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 14282              		.set	.LANCHOR45,. + 0
 14285              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 14286 0000 00       		.space	1
 14287              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 14288              		.set	.LANCHOR41,. + 0
 14291              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 14292 0000 00       		.space	1
 14293              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 14294              		.set	.LANCHOR40,. + 0
 14297              	_ZZ16Update_feedbackRvE9lastShift:
 14298 0000 00       		.space	1
 14299              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 14300              		.align	2
 14301              		.set	.LANCHOR10,. + 0
 14304              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 14305 0000 00000000 		.space	4
 14306              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 14307              		.align	2
 14308              		.set	.LANCHOR11,. + 0
 14311              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 14312 0000 00000000 		.space	4
 14313              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 14314              		.align	2
 14315              		.set	.LANCHOR14,. + 0
 14318              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 14319 0000 00000000 		.space	4
 14320              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 14321              		.set	.LANCHOR9,. + 0
 14324              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 14325 0000 00       		.space	1
 14326              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 14327              		.set	.LANCHOR13,. + 0
 14330              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 14331 0000 00       		.space	1
 14332              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 14333              		.align	2
 14334              		.set	.LANCHOR6,. + 0
 14337              	_ZZ17Update_DelayTimeLvE8counterL:
 14338 0000 00000000 		.space	4
 14339              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 14340              		.set	.LANCHOR8,. + 0
 14343              	_ZZ17Update_DelayTimeLvE9lastShift:
 14344 0000 00       		.space	1
 14345              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 14346              		.align	2
 14347              		.set	.LANCHOR24,. + 0
 14350              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 14351 0000 00000000 		.space	4
 14352              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 14353              		.align	2
 14354              		.set	.LANCHOR21,. + 0
 14357              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 14358 0000 00000000 		.space	4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 414


 14359              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 14360              		.align	2
 14361              		.set	.LANCHOR22,. + 0
 14364              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 14365 0000 00000000 		.space	4
 14366              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 14367              		.set	.LANCHOR23,. + 0
 14370              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 14371 0000 00       		.space	1
 14372              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 14373              		.set	.LANCHOR20,. + 0
 14376              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 14377 0000 00       		.space	1
 14378              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 14379              		.align	2
 14380              		.set	.LANCHOR18,. + 0
 14383              	_ZZ17Update_DelayTimeRvE8counterR:
 14384 0000 00000000 		.space	4
 14385              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 14386              		.set	.LANCHOR19,. + 0
 14389              	_ZZ17Update_DelayTimeRvE9lastShift:
 14390 0000 00       		.space	1
 14391              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 14392              		.align	2
 14393              		.set	.LANCHOR82,. + 0
 14396              	_ZZ18Update_filterXfadevE15PostFilters_new:
 14397 0000 00000000 		.space	4
 14398              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 14399              		.align	2
 14400              		.set	.LANCHOR79,. + 0
 14403              	_ZZ18Update_filterXfadevE15filterXfade_new:
 14404 0000 00000000 		.space	4
 14405              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 14406              		.align	2
 14407              		.set	.LANCHOR84,. + 0
 14410              	_ZZ18Update_filterXfadevE16filterXfade_last:
 14411 0000 00000000 		.space	4
 14412              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 14413              		.set	.LANCHOR81,. + 0
 14416              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 14417 0000 00       		.space	1
 14418              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 14419              		.set	.LANCHOR78,. + 0
 14422              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 14423 0000 00       		.space	1
 14424              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 14425              		.set	.LANCHOR77,. + 0
 14428              	_ZZ18Update_filterXfadevE9lastShift:
 14429 0000 00       		.space	1
 14430              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 14431              		.align	2
 14432              		.set	.LANCHOR90,. + 0
 14435              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 14436 0000 00000000 		.space	4
 14437              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 14438              		.align	2
 14439              		.set	.LANCHOR74,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 415


 14442              	_ZZ20Update_crossfeedbackvE11modRate_new:
 14443 0000 00000000 		.space	4
 14444              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 14445              		.set	.LANCHOR73,. + 0
 14448              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 14449 0000 00       		.space	1
 14450              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 14451              		.align	2
 14452              		.set	.LANCHOR71,. + 0
 14455              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 14456 0000 00000000 		.space	4
 14457              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 14458              		.align	2
 14459              		.set	.LANCHOR75,. + 0
 14462              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 14463 0000 00000000 		.space	4
 14464              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 14465              		.set	.LANCHOR70,. + 0
 14468              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 14469 0000 00       		.space	1
 14470              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 14471              		.set	.LANCHOR69,. + 0
 14474              	_ZZ20Update_crossfeedbackvE9lastShift:
 14475 0000 00       		.space	1
 14476              		.section	.bss._ZZ4mainE9saveTimer,"aw",%nobits
 14477              		.align	2
 14478              		.set	.LANCHOR110,. + 0
 14481              	_ZZ4mainE9saveTimer:
 14482 0000 00000000 		.space	4
 14483              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 14484              		.align	2
 14485              		.set	.LANCHOR129,. + 0
 14488              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 14489 0000 00000000 		.space	4
 14490              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 14491              		.align	2
 14492              		.set	.LANCHOR130,. + 0
 14495              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 14496 0000 00000000 		.space	4
 14497              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 14498              		.align	2
 14499              		.set	.LANCHOR116,. + 0
 14502              	_ZZL13AudioCallbackPfS_jE7Counter:
 14503 0000 00000000 		.space	4
 14504              		.section	.bss.crossfeedback,"aw",%nobits
 14505              		.align	2
 14506              		.set	.LANCHOR72,. + 0
 14509              	crossfeedback:
 14510 0000 00000000 		.space	4
 14511              		.section	.bss.crossfeedback_CV,"aw",%nobits
 14512              		.align	2
 14515              	crossfeedback_CV:
 14516 0000 00000000 		.space	4
 14517              		.section	.bss.delayL,"aw",%nobits
 14518              		.align	2
 14519              		.set	.LANCHOR0,. + 0
 14522              	delayL:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 416


 14523 0000 00000000 		.space	296
 14523      00000000 
 14523      00000000 
 14523      00000000 
 14523      00000000 
 14524              		.section	.bss.delayR,"aw",%nobits
 14525              		.align	2
 14526              		.set	.LANCHOR1,. + 0
 14529              	delayR:
 14530 0000 00000000 		.space	296
 14530      00000000 
 14530      00000000 
 14530      00000000 
 14530      00000000 
 14531              		.section	.bss.delayTimeL_CV,"aw",%nobits
 14532              		.align	2
 14533              		.set	.LANCHOR5,. + 0
 14536              	delayTimeL_CV:
 14537 0000 00000000 		.space	4
 14538              		.section	.bss.delayTimeR_CV,"aw",%nobits
 14539              		.align	2
 14540              		.set	.LANCHOR17,. + 0
 14543              	delayTimeR_CV:
 14544 0000 00000000 		.space	4
 14545              		.section	.bss.delaysL_REV,"aw",%nobits
 14546              		.align	2
 14547              		.set	.LANCHOR2,. + 0
 14550              	delaysL_REV:
 14551 0000 00000000 		.space	8
 14551      00000000 
 14552              		.section	.bss.delaysR_REV,"aw",%nobits
 14553              		.align	2
 14554              		.set	.LANCHOR3,. + 0
 14557              	delaysR_REV:
 14558 0000 00000000 		.space	8
 14558      00000000 
 14559              		.section	.bss.drywet_CV,"aw",%nobits
 14560              		.align	2
 14561              		.set	.LANCHOR51,. + 0
 14564              	drywet_CV:
 14565 0000 00000000 		.space	4
 14566              		.section	.bss.feedbackL,"aw",%nobits
 14567              		.align	2
 14568              		.set	.LANCHOR32,. + 0
 14571              	feedbackL:
 14572 0000 00000000 		.space	4
 14573              		.section	.bss.feedbackL_CV,"aw",%nobits
 14574              		.align	2
 14575              		.set	.LANCHOR27,. + 0
 14578              	feedbackL_CV:
 14579 0000 00000000 		.space	4
 14580              		.section	.bss.feedbackR,"aw",%nobits
 14581              		.align	2
 14582              		.set	.LANCHOR44,. + 0
 14585              	feedbackR:
 14586 0000 00000000 		.space	4
 14587              		.section	.bss.feedbackR_CV,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 417


 14588              		.align	2
 14589              		.set	.LANCHOR39,. + 0
 14592              	feedbackR_CV:
 14593 0000 00000000 		.space	4
 14594              		.section	.bss.filterXfade,"aw",%nobits
 14595              		.align	2
 14596              		.set	.LANCHOR80,. + 0
 14599              	filterXfade:
 14600 0000 00000000 		.space	4
 14601              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 14602              		.align	2
 14603              		.set	.LANCHOR85,. + 0
 14606              	modulation_CV_Raw:
 14607 0000 00000000 		.space	4
 14608              		.section	.bss.mute,"aw",%nobits
 14609              		.set	.LANCHOR114,. + 0
 14612              	mute:
 14613 0000 00       		.space	1
 14614              		.section	.bss.saveState,"aw",%nobits
 14615              		.set	.LANCHOR109,. + 0
 14618              	saveState:
 14619 0000 00       		.space	1
 14620              		.section	.bss.save_flag,"aw",%nobits
 14621              		.align	2
 14622              		.set	.LANCHOR16,. + 0
 14625              	save_flag:
 14626 0000 00       		.space	1
 14627              		.section	.bss.shift,"aw",%nobits
 14628              		.set	.LANCHOR7,. + 0
 14631              	shift:
 14632 0000 00       		.space	1
 14633              		.section	.bss.syncMode,"aw",%nobits
 14634              		.set	.LANCHOR12,. + 0
 14637              	syncMode:
 14638 0000 00       		.space	1
 14639              		.section	.bss.tempoLED_BASE,"aw",%nobits
 14640              		.align	2
 14641              		.set	.LANCHOR89,. + 0
 14644              	tempoLED_BASE:
 14645 0000 00000000 		.space	72
 14645      00000000 
 14645      00000000 
 14645      00000000 
 14645      00000000 
 14646              		.section	.bss.width_CV,"aw",%nobits
 14647              		.align	2
 14648              		.set	.LANCHOR59,. + 0
 14651              	width_CV:
 14652 0000 00000000 		.space	4
 14653              		.section	.data.drywet,"aw"
 14654              		.align	2
 14655              		.set	.LANCHOR56,. + 0
 14658              	drywet:
 14659 0000 0000003F 		.word	1056964608
 14660              		.section	.data.width,"aw"
 14661              		.align	2
 14662              		.set	.LANCHOR64,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 418


 14665              	width:
 14666 0000 0000803F 		.word	1065353216
 14667              		.section	.rodata.CSWTCH.371,"a"
 14668              		.align	3
 14669              		.set	.LANCHOR25,. + 0
 14672              	CSWTCH.371:
 14673 0000 00000000 		.word	0
 14674 0004 0000F83F 		.word	1073217536
 14675 0008 00000000 		.word	0
 14676 000c 00000040 		.word	1073741824
 14677 0010 00000000 		.word	0
 14678 0014 00000840 		.word	1074266112
 14679              		.section	.rodata._ZL18defaultAltControls,"a"
 14680              		.align	2
 14681              		.set	.LANCHOR115,. + 0
 14684              	_ZL18defaultAltControls:
 14685 0000 00650148 		.word	1208050944
 14686 0004 0000803F 		.word	1065353216
 14687 0008 00000000 		.word	0
 14688 000c 9A99A140 		.word	1084332442
 14689 0010 00004843 		.word	1128792064
 14690 0014 00803B46 		.word	1178304512
 14691 0018 00000000 		.word	0
 14692 001c 00000000 		.word	0
 14693 0020 0024F448 		.word	1223959552
 14694 0024 00000000 		.word	0
 14695 0028 00000000 		.word	0
 14696              		.section	.sdram_bss,"aw"
 14697              		.align	2
 14700              	delMemsR_REV:
 14701 0000 00000000 		.space	2400040
 14701      00000000 
 14701      00000000 
 14701      00000000 
 14701      00000000 
 14704              	delMemsL_REV:
 14705 249f28 00000000 		.space	2400040
 14705      00000000 
 14705      00000000 
 14705      00000000 
 14705      00000000 
 14708              	delMemsR:
 14709 493e50 00000000 		.space	6912136
 14709      00000000 
 14709      00000000 
 14709      00000000 
 14709      00000000 
 14712              	delMemsL:
 14713 b2b6d8 00000000 		.space	6912136
 14713      00000000 
 14713      00000000 
 14713      00000000 
 14713      00000000 
 14714              		.text
 14715              	.Letext0:
 14716              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 14717              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 419


 14718              		.file 31 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 14719              		.file 32 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 14720              		.file 33 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 14721              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14722              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14723              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14724              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14725              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14726              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14727              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14728              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14729              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14730              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14731              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14732              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14733              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14734              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14735              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14736              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14737              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14738              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14739              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14740              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14741              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14742              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14743              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 14744              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 14745              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 14746              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 14747              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 14748              		.file 61 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14749              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 14750              		.file 63 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 14751              		.file 64 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14752              		.file 65 "../libdaisy/src/daisy_core.h"
 14753              		.file 66 "../libdaisy/src/per/tim.h"
 14754              		.file 67 "../libdaisy/src/per/sai.h"
 14755              		.file 68 "../libdaisy/src/util/wav_format.h"
 14756              		.file 69 "../libdaisy/src/per/qspi.h"
 14757              		.file 70 "../libdaisy/src/per/gpio.h"
 14758              		.file 71 "../libdaisy/src/dev/sdram.h"
 14759              		.file 72 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14760              		.file 73 "<built-in>"
 14761              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 14762              		.file 75 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 14763              		.file 76 "../libdaisy/src/util/oled_fonts.h"
 14764              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 14765              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 14766              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 14767              		.file 80 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 14768              		.file 81 "../libdaisy/src/util/sd_diskio.h"
 14769              		.file 82 "../libdaisy/src/sys/fatfs.h"
 14770              		.file 83 "../DaisySP/Source/Control/adenv.h"
 14771              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 14772              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 14773              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 14774              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 420


 14775              		.file 88 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 14776              		.file 89 "QSPI_Settings.h"
 14777              		.file 90 "scale.h"
 14778              		.file 91 "constants.h"
 14779              		.file 92 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 421


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:43     .text._ZN5daisy6GateInD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:68     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:117    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:142    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:167    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:192    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:217    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:225    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:225    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:242    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:250    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:250    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:267    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:275    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:275    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:292    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:300    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:300    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:329    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:337    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:337    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:363    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:371    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:371    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:402    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:410    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:410    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:427    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:435    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:435    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:452    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:460    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1012   .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14712  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14708  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14704  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14700  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1037   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1070   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 422


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1076   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1084   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1661   .text._Z17Update_DelayTimeLv:00000000000001e0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1691   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1699   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1724   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1730   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:1738   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2227   .text._Z17Update_DelayTimeRv:00000000000001ac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2254   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2262   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2287   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2293   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2301   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2756   .text._Z16Update_feedbackLv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2785   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2793   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2818   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2824   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:2832   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3286   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3315   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3323   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3348   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3354   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3362   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3871   .text._Z13Update_drywetv:00000000000001f8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3908   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3916   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3941   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3947   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:3955   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:4428   .text._Z12Update_widthv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:4454   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:4462   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:4823   .text._Z20Update_crossfeedbackv:000000000000011c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:4843   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:4851   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5188   .text._Z18Update_filterXfadev:0000000000000120 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5211   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5219   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5249   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5257   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5265   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5422   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5434   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5442   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5541   .text._Z11UpdateClockv:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5550   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5558   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5619   .text._Z21Update_DelayBaseTempov:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5626   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5634   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5667   .text._Z21Update_DelayTempoLEDsv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5674   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5682   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5804   .text._Z19Update_BaseTempoLEDv:0000000000000064 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 423


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5815   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:5823   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:6525   .text._Z13ApplySettingsRK8Settings:000000000000036c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:6566   .text._Z13ApplySettingsRK8Settings:0000000000000404 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:6645   .text._Z13ApplySettingsRK8Settings:0000000000000450 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:6659   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:6667   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:7539   .text.startup.main:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:7573   .text.startup.main:00000000000003bc $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:8101   .text.startup.main:0000000000000628 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:9053   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:8127   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:8135   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:8197   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:8208   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:8216   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:8319   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:8331   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:8339   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:9020   .text._Z14Update_Buttonsv:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:9046   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:9122   .text._ZL13AudioCallbackPfS_j:000000000000003a $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:9137   .text._ZL13AudioCallbackPfS_j:0000000000000058 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:9183   .text._ZL13AudioCallbackPfS_j:0000000000000088 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:9195   .text._ZL13AudioCallbackPfS_j:00000000000000a0 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:10314  .text._ZL13AudioCallbackPfS_j:000000000000043c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:10358  .text._ZL13AudioCallbackPfS_j:00000000000004e0 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:11191  .text._ZL13AudioCallbackPfS_j:0000000000000834 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:11207  .text._ZL13AudioCallbackPfS_j:0000000000000864 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12101  .text._ZL13AudioCallbackPfS_j:0000000000000bb8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12139  .text._ZL13AudioCallbackPfS_j:0000000000000c28 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12316  .text._ZL13AudioCallbackPfS_j:0000000000000ccc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12326  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12334  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12368  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12376  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12423  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12428  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12436  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12520  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12525  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12533  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12623  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12628  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12636  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12666  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12671  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:12678  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13623  .text.startup._GLOBAL__sub_I_delMemsL:000000000000027c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13701  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13755  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13762  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13775  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13787  .bss.ClockPin:0000000000000000 ClockPin
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13868  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13861  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13854  .bss.ReverseGateL:0000000000000000 ReverseGateL
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 424


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13768  .bss.CLOCK_DEBUG:0000000000000000 CLOCK_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13827  .bss.PHASE_DEBUG:0000000000000000 PHASE_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13799  .bss.DELAYR_DEBUG:0000000000000000 DELAYR_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13793  .bss.DELAYL_DEBUG:0000000000000000 DELAYL_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14618  .bss.saveState:0000000000000000 saveState
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14625  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13833  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13780  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14612  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14631  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14637  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14606  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13820  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14599  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14651  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14665  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14564  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14658  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14515  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14509  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14592  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14585  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14578  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14571  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14543  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14536  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14644  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13875  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13847  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13840  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13806  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13813  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14557  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14550  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14529  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14522  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13751  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13758  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13765  .bss.CLOCK_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13771  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13781  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13783  .bss.ClockPin:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13790  .bss.DELAYL_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13796  .bss.DELAYR_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13802  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13809  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13816  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13823  .bss.PHASE_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13834  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13836  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13843  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13850  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13857  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13864  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13871  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13878  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13882  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 425


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13885  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13889  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13892  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13896  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13899  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13903  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13906  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13910  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13913  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13917  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13920  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13924  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13927  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13931  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13934  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13938  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13941  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13945  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13948  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13952  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13955  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13959  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13962  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13966  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13969  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13973  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13976  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13980  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13983  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13987  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13990  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13994  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:13997  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14001  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14004  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14008  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14011  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14015  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14018  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14022  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14025  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14029  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14032  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14036  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14039  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14043  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14046  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14050  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14053  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14057  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14060  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14064  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14067  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14071  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14074  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14078  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14081  .bss._ZL7HPF_Env:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 426


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14085  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14088  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14092  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14095  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14099  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14102  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14106  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14109  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14113  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14116  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14120  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14123  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14127  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14130  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14134  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14140  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14141  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14146  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14147  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14152  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14153  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14155  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14159  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14165  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14166  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14168  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14172  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14175  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14179  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14185  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14186  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14188  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14192  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14198  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14199  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14201  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14205  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14208  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14212  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14215  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14219  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14222  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14226  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14229  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14233  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14236  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14240  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14246  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14247  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14252  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14253  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14258  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14259  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14261  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14265  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14268  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14272  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 427


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14275  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14279  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14285  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14286  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14291  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14292  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14297  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14298  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14300  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14304  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14307  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14311  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14314  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14318  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14324  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14325  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14330  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14331  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14333  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14337  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14343  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14344  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14346  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14350  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14353  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14357  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14360  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14364  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14370  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14371  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14376  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14377  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14379  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14383  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14389  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14390  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14392  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14396  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14399  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14403  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14406  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14410  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14416  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14417  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14422  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14423  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14428  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14429  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14431  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14435  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14438  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14442  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14448  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14449  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14451  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14455  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14458  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 428


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14462  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14468  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14469  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14474  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14475  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14477  .bss._ZZ4mainE9saveTimer:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14481  .bss._ZZ4mainE9saveTimer:0000000000000000 _ZZ4mainE9saveTimer
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14484  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14488  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14491  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14495  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14498  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14502  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14505  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14512  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14518  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14525  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14532  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14539  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14546  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14553  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14560  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14567  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14574  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14581  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14588  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14595  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14602  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14613  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14619  .bss.saveState:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14621  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14632  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14638  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14640  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14647  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14654  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14661  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14668  .rodata.CSWTCH.371:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14672  .rodata.CSWTCH.371:0000000000000000 CSWTCH.371
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14680  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14684  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s:14697  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy6GateInD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 429



UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6GateIn4TrigEv
_ZN8Taptempo5clockEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8Taptempo12getTapLengthEv
_ZN8Taptempo14getDelayLengthEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12setTapLengthEf
_ZN9ButtonLED6turnONEv
_ZN9ButtonLED7turnOFFEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEmmf
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_Z12LoadSettingsv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN5daisy6System6GetNowEv
_Z12SaveSettingsRK8Settings
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN5daisy6Switch8DebounceEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN9ButtonLED6toggleEv
_ZN8Taptempo3tapEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc0vrvH1.s 			page 430


_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
