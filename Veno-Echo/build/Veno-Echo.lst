ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1590:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../libdaisy/src/hid/switch.h **** 
   8:../libdaisy/src/hid/switch.h **** namespace daisy
   9:../libdaisy/src/hid/switch.h **** {
  10:../libdaisy/src/hid/switch.h **** /** 
  11:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../libdaisy/src/hid/switch.h ****     @date December 2019
  15:../libdaisy/src/hid/switch.h ****     @ingroup controls
  16:../libdaisy/src/hid/switch.h **** */
  17:../libdaisy/src/hid/switch.h **** class Switch
  18:../libdaisy/src/hid/switch.h **** {
  19:../libdaisy/src/hid/switch.h ****   public:
  20:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../libdaisy/src/hid/switch.h ****     enum Type
  22:../libdaisy/src/hid/switch.h ****     {
  23:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../libdaisy/src/hid/switch.h ****     };
  26:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../libdaisy/src/hid/switch.h ****     enum Polarity
  28:../libdaisy/src/hid/switch.h ****     {
  29:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 2


  30:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../libdaisy/src/hid/switch.h ****     };
  32:../libdaisy/src/hid/switch.h **** 
  33:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../libdaisy/src/hid/switch.h ****     enum Pull
  35:../libdaisy/src/hid/switch.h ****     {
  36:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../libdaisy/src/hid/switch.h ****     };
  40:../libdaisy/src/hid/switch.h **** 
  41:../libdaisy/src/hid/switch.h ****     Switch() {}
  42:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 42 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 42 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1590:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy6GateInD2Ev,"axG",%progbits,_ZN5daisy6GateInD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy6GateInD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy6GateInD2Ev:
  52              	.LVL1:
  53              	.LFB1632:
  54              		.file 2 "../libdaisy/src/hid/gatein.h"
   1:../libdaisy/src/hid/gatein.h **** #pragma once
   2:../libdaisy/src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../libdaisy/src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../libdaisy/src/hid/gatein.h **** #include "per/gpio.h"
   5:../libdaisy/src/hid/gatein.h **** 
   6:../libdaisy/src/hid/gatein.h **** namespace daisy
   7:../libdaisy/src/hid/gatein.h **** {
   8:../libdaisy/src/hid/gatein.h **** /**
   9:../libdaisy/src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  10:../libdaisy/src/hid/gatein.h ****    @author Stephen Hensley
  11:../libdaisy/src/hid/gatein.h ****    @date    March 2020
  12:../libdaisy/src/hid/gatein.h ****    @ingroup controls
  13:../libdaisy/src/hid/gatein.h **** */
  14:../libdaisy/src/hid/gatein.h **** class GateIn
  15:../libdaisy/src/hid/gatein.h **** {
  16:../libdaisy/src/hid/gatein.h ****   public:
  17:../libdaisy/src/hid/gatein.h ****     /** GateIn 
  18:../libdaisy/src/hid/gatein.h ****     Constructor 
  19:../libdaisy/src/hid/gatein.h ****     */
  20:../libdaisy/src/hid/gatein.h ****     GateIn() {}
  21:../libdaisy/src/hid/gatein.h ****     /** GateIn~
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 3


  22:../libdaisy/src/hid/gatein.h ****     Destructor 
  23:../libdaisy/src/hid/gatein.h ****     */
  24:../libdaisy/src/hid/gatein.h ****     ~GateIn() {}
  55              		.loc 2 24 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 24 16 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE1632:
  65              		.weak	_ZN5daisy6GateInD1Ev
  66              		.thumb_set _ZN5daisy6GateInD1Ev,_ZN5daisy6GateInD2Ev
  67 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy9DaisySeedD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy9DaisySeedD2Ev:
  77              	.LVL2:
  78              	.LFB2169:
  79              		.file 3 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  80              		.loc 3 22 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LBB884:
  86              	.LBI884:
  87              		.file 4 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 4


   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../libdaisy/src/sys/system.h **** 
   6:../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../libdaisy/src/sys/system.h **** 
   9:../libdaisy/src/sys/system.h **** namespace daisy
  10:../libdaisy/src/sys/system.h **** {
  11:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../libdaisy/src/sys/system.h ****  **
  15:../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../libdaisy/src/sys/system.h ****  ** @ingroup system
  17:../libdaisy/src/sys/system.h ****  */
  18:../libdaisy/src/sys/system.h **** class System
  19:../libdaisy/src/sys/system.h **** {
  20:../libdaisy/src/sys/system.h ****   public:
  21:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../libdaisy/src/sys/system.h ****     struct Config
  23:../libdaisy/src/sys/system.h ****     {
  24:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../libdaisy/src/sys/system.h ****         {
  27:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../libdaisy/src/sys/system.h ****         };
  30:../libdaisy/src/sys/system.h **** 
  31:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../libdaisy/src/sys/system.h ****          ** */
  35:../libdaisy/src/sys/system.h ****         void Defaults()
  36:../libdaisy/src/sys/system.h ****         {
  37:../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../libdaisy/src/sys/system.h ****             use_dcache  = true;
  39:../libdaisy/src/sys/system.h ****             use_icache  = true;
  40:../libdaisy/src/sys/system.h ****             skip_clocks = false;
  41:../libdaisy/src/sys/system.h ****         }
  42:../libdaisy/src/sys/system.h **** 
  43:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  46:../libdaisy/src/sys/system.h ****          ** */
  47:../libdaisy/src/sys/system.h ****         void Boost()
  48:../libdaisy/src/sys/system.h ****         {
  49:../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../libdaisy/src/sys/system.h ****             use_dcache  = true;
  51:../libdaisy/src/sys/system.h ****             use_icache  = true;
  52:../libdaisy/src/sys/system.h ****             skip_clocks = false;
  53:../libdaisy/src/sys/system.h ****         }
  54:../libdaisy/src/sys/system.h **** 
  55:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  57:../libdaisy/src/sys/system.h ****         bool       use_icache;
  58:../libdaisy/src/sys/system.h ****         bool       skip_clocks;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 5


  59:../libdaisy/src/sys/system.h ****     };
  60:../libdaisy/src/sys/system.h **** 
  61:../libdaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../libdaisy/src/sys/system.h ****      * 
  63:../libdaisy/src/sys/system.h ****      */
  64:../libdaisy/src/sys/system.h ****     enum MemoryRegion
  65:../libdaisy/src/sys/system.h ****     {
  66:../libdaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../libdaisy/src/sys/system.h ****         ITCMRAM,
  68:../libdaisy/src/sys/system.h ****         DTCMRAM,
  69:../libdaisy/src/sys/system.h ****         SRAM_D1,
  70:../libdaisy/src/sys/system.h ****         SRAM_D2,
  71:../libdaisy/src/sys/system.h ****         SRAM_D3,
  72:../libdaisy/src/sys/system.h ****         SDRAM,
  73:../libdaisy/src/sys/system.h ****         QSPI,
  74:../libdaisy/src/sys/system.h ****         INVALID_ADDRESS,
  75:../libdaisy/src/sys/system.h ****     };
  76:../libdaisy/src/sys/system.h **** 
  77:../libdaisy/src/sys/system.h ****     System() {}
  78:../libdaisy/src/sys/system.h ****     ~System() {}
  88              		.loc 4 78 5 view .LVU5
  89              		.loc 4 78 5 is_stmt 0 view .LVU6
  90              	.LBE884:
  91              	.LBB885:
  92              	.LBI885:
  93              		.file 5 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 6


  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  94              		.loc 5 42 5 is_stmt 1 view .LVU7
  95              		.loc 5 42 5 is_stmt 0 view .LVU8
  96              	.LBE885:
  97              	.LBB886:
  98              	.LBI886:
  99              		.file 6 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../libdaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../libdaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../libdaisy/src/per/adc.h ****  *           one channel.
  26:../libdaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../libdaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../libdaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../libdaisy/src/per/adc.h ****  *           inputs connected.
  30:../libdaisy/src/per/adc.h **** */
  31:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../libdaisy/src/per/adc.h **** {
  33:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../libdaisy/src/per/adc.h ****     enum MuxPin
  35:../libdaisy/src/per/adc.h ****     {
  36:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../libdaisy/src/per/adc.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 7


  41:../libdaisy/src/per/adc.h **** 
  42:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  44:../libdaisy/src/per/adc.h ****      */
  45:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../libdaisy/src/per/adc.h **** 
  47:../libdaisy/src/per/adc.h ****     /** 
  48:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  54:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  55:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  56:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  57:../libdaisy/src/per/adc.h ****     \param adc_pin &
  58:../libdaisy/src/per/adc.h ****     */
  59:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  61:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../libdaisy/src/per/adc.h **** 
  65:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../libdaisy/src/per/adc.h **** };
  69:../libdaisy/src/per/adc.h **** 
  70:../libdaisy/src/per/adc.h **** /**
  71:../libdaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../libdaisy/src/per/adc.h **** */
  73:../libdaisy/src/per/adc.h **** class AdcHandle
  74:../libdaisy/src/per/adc.h **** {
  75:../libdaisy/src/per/adc.h ****   public:
  76:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  77:../libdaisy/src/per/adc.h ****     enum OverSampling
  78:../libdaisy/src/per/adc.h ****     {
  79:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  82:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  83:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  84:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  85:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  86:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  87:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  88:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  89:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  90:../libdaisy/src/per/adc.h ****     };
  91:../libdaisy/src/per/adc.h **** 
  92:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  93:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 100              		.loc 6 93 5 is_stmt 1 view .LVU9
 101              		.loc 6 93 5 is_stmt 0 view .LVU10
 102              	.LBE886:
 103              	.LBB887:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 8


 104              	.LBI887:
 105              		.file 7 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../libdaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../libdaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../libdaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../libdaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../libdaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../libdaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../libdaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../libdaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../libdaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../libdaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../libdaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../libdaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../libdaisy/src/hid/audio.h ****  */
  22:../libdaisy/src/hid/audio.h **** class AudioHandle
  23:../libdaisy/src/hid/audio.h **** {
  24:../libdaisy/src/hid/audio.h ****   public:
  25:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../libdaisy/src/hid/audio.h ****     struct Config
  28:../libdaisy/src/hid/audio.h ****     {
  29:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  30:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  31:../libdaisy/src/hid/audio.h ****         float                         postgain;
  32:../libdaisy/src/hid/audio.h ****     };
  33:../libdaisy/src/hid/audio.h **** 
  34:../libdaisy/src/hid/audio.h ****     enum class Result
  35:../libdaisy/src/hid/audio.h ****     {
  36:../libdaisy/src/hid/audio.h ****         OK,
  37:../libdaisy/src/hid/audio.h ****         ERR,
  38:../libdaisy/src/hid/audio.h ****     };
  39:../libdaisy/src/hid/audio.h **** 
  40:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  41:../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  42:../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  43:../libdaisy/src/hid/audio.h ****      */
  44:../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  45:../libdaisy/src/hid/audio.h **** 
  46:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  47:../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  48:../libdaisy/src/hid/audio.h ****      */
  49:../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  50:../libdaisy/src/hid/audio.h **** 
  51:../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  52:../libdaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  53:../libdaisy/src/hid/audio.h ****      */
  54:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  55:../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 9


  56:../libdaisy/src/hid/audio.h ****                                   size_t       size);
  57:../libdaisy/src/hid/audio.h **** 
  58:../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  59:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  60:../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  61:../libdaisy/src/hid/audio.h ****     */
  62:../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  63:../libdaisy/src/hid/audio.h **** 
  64:../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  65:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  66:../libdaisy/src/hid/audio.h ****     */
  67:../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  68:../libdaisy/src/hid/audio.h **** 
  69:../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  70:../libdaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  71:../libdaisy/src/hid/audio.h ****      */
  72:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  73:../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  74:../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  75:../libdaisy/src/hid/audio.h **** 
  76:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  77:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 106              		.loc 7 77 5 is_stmt 1 view .LVU11
 107              		.loc 7 77 5 is_stmt 0 view .LVU12
 108              	.LBE887:
 109              		.loc 3 22 19 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE2169:
 114              		.weak	_ZN5daisy9DaisySeedD1Ev
 115              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp4AdsrD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp4AdsrD2Ev:
 126              	.LVL3:
 127              	.LFB2192:
 128              		.file 8 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 10


  15:../DaisySP/Source/Control/adsr.h **** */
  16:../DaisySP/Source/Control/adsr.h **** enum
  17:../DaisySP/Source/Control/adsr.h **** {
  18:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE    = 0,
  19:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK  = 1,
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY   = 2,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE = 4
  22:../DaisySP/Source/Control/adsr.h **** };
  23:../DaisySP/Source/Control/adsr.h **** 
  24:../DaisySP/Source/Control/adsr.h **** 
  25:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  26:../DaisySP/Source/Control/adsr.h **** 
  27:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  30:../DaisySP/Source/Control/adsr.h ****  
  31:../DaisySP/Source/Control/adsr.h **** Remake by Steffan DIedrichsen, May 2021
  32:../DaisySP/Source/Control/adsr.h **** */
  33:../DaisySP/Source/Control/adsr.h **** class Adsr
  34:../DaisySP/Source/Control/adsr.h **** {
  35:../DaisySP/Source/Control/adsr.h ****   public:
  36:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  37:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 129              		.loc 8 37 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 37 14 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE2192:
 139              		.weak	_ZN7daisysp4AdsrD1Ev
 140              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp10OscillatorD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp10OscillatorD2Ev:
 151              	.LVL4:
 152              	.LFB3806:
 153              		.file 9 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 11


  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 154              		.loc 9 16 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 16 20 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE3806:
 164              		.weak	_ZN7daisysp10OscillatorD1Ev
 165              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp3SvfD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp3SvfD2Ev:
 176              	.LVL5:
 177              	.LFB3822:
 178              		.file 10 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 179              		.loc 10 22 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              		.loc 10 22 13 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 12


 186              		.cfi_endproc
 187              	.LFE3822:
 189              		.weak	_ZN7daisysp3SvfD1Ev
 190              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp9CrossFadeD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp9CrossFadeD2Ev:
 201              	.LVL6:
 202              	.LFB3927:
 203              		.file 11 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 204              		.loc 11 37 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 13


 208              		@ link register save eliminated.
 209              		.loc 11 37 19 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3927:
 214              		.weak	_ZN7daisysp9CrossFadeD1Ev
 215              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB4429:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 14


  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE4429:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB4436:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 15


  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** using namespace daisysp;
  31:taptempo.h    **** 
  32:taptempo.h    **** class Taptempo
  33:taptempo.h    **** {
  34:taptempo.h    ****     private:
  35:taptempo.h    ****         uint32_t mintap_,maxtap_,minclock_,maxclock_;
  36:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  37:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_,currentClockTime_,lastClockTime_;
  38:taptempo.h    ****         bool tapflag_;
  39:taptempo.h    ****         float tap_tolerance_;
  40:taptempo.h    ****         float tempo_, tapRatio_;
  41:taptempo.h    ****         int PPQN_;
  42:taptempo.h    **** 
  43:taptempo.h    ****     public:
  44:taptempo.h    **** 
  45:taptempo.h    ****     Taptempo()  //default constructor
  46:taptempo.h    ****     {
  47:taptempo.h    ****         tapflag_ = false;
  48:taptempo.h    ****         tap_tolerance_ = 1.25f;
  49:taptempo.h    ****         maxtap_ = 6000000;
  50:taptempo.h    ****         mintap_ = 20000;
  51:taptempo.h    ****         lastTapLength_ = 0;
  52:taptempo.h    ****         tempo_ = 500000.0f;
  53:taptempo.h    ****         lastTime_ = 0;
  54:taptempo.h    ****         currentTime_ = 0;
  55:taptempo.h    ****         tapRatio_ = 1.0f;
  56:taptempo.h    ****         clockLength_ = 0;
  57:taptempo.h    ****         lastClockLength_ = 0;
  58:taptempo.h    ****         clockThresh_ = 10000; //Us change
  59:taptempo.h    ****         PPQN_ = 1;
  60:taptempo.h    ****     }
  61:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 61 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 61 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE4436:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 16


 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB4459:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 17


 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB888:
 285              	.LBI888:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE888:
 290              	.LBB889:
 291              	.LBI889:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE889:
 296              		.loc 14 48 13 view .LVU31
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 18


 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE4459:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB4466:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB890:
 321              	.LBI890:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE890:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 19


 325              	.LBB891:
 326              	.LBI891:
 327              		.loc 1 42 5 is_stmt 1 view .LVU35
 328              		.loc 1 42 5 is_stmt 0 view .LVU36
 329              	.LBE891:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE4466:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB4472:
 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 20


  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB892:
 356              	.LBI892:
  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB893:
 359              	.LBI893:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE893:
 363              	.LBB894:
 364              	.LBI894:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE894:
 368              	.LBE892:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE4472:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB5414:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 21


   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 22


 397              	.LFE5414:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB5417:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 23


 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE5417:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4799:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 24


  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** //static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 25


  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** //TempoDivs div_L{};
 127:Veno-Echo.cpp **** //TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** bool PostFilters{false};
 140:Veno-Echo.cpp **** 
 141:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 142:Veno-Echo.cpp **** 
 143:Veno-Echo.cpp **** SaveState saveState{IDLE};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** float DELAYL_DEBUG;
 146:Veno-Echo.cpp **** float DELAYR_DEBUG;
 147:Veno-Echo.cpp **** float PHASE_DEBUG;
 148:Veno-Echo.cpp **** float CLOCK_DEBUG;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 151:Veno-Echo.cpp **** static Adsr FwdRevREnv;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 26


 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static Adsr LPF_Env;
 154:Veno-Echo.cpp **** static Adsr HPF_Env;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 157:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 158:Veno-Echo.cpp **** 
 159:Veno-Echo.cpp **** static CrossFade WidthXfade;
 160:Veno-Echo.cpp **** 
 161:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 162:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 166:Veno-Echo.cpp **** 
 167:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 168:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 169:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 170:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 171:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 172:Veno-Echo.cpp **** 
 173:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 178:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 179:Veno-Echo.cpp **** 
 180:Veno-Echo.cpp **** //Gate inputs
 181:Veno-Echo.cpp **** Switch ReverseGateL;
 182:Veno-Echo.cpp **** Switch ReverseGateR;
 183:Veno-Echo.cpp **** 
 184:Veno-Echo.cpp **** //Switch TapButton;
 185:Veno-Echo.cpp **** Switch Sync;
 186:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 187:Veno-Echo.cpp **** GateIn ClockIn;
 188:Veno-Echo.cpp **** //Switch ClockIn;
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** //Tap tempo
 191:Veno-Echo.cpp **** Taptempo BaseTempo; 
 192:Veno-Echo.cpp **** 
 193:Veno-Echo.cpp **** Settings AltControls;
 194:Veno-Echo.cpp **** 
 195:Veno-Echo.cpp **** //default alt control values
 196:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 197:Veno-Echo.cpp **** {
 198:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 199:Veno-Echo.cpp ****     1.0f,   //tapRatio
 200:Veno-Echo.cpp ****     0.0f,   //ModDepth
 201:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 202:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 203:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 204:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 205:Veno-Echo.cpp ****     0.0f,    //filter prepost
 206:Veno-Echo.cpp ****     24000.0f,     //base tempo (in samples)
 207:Veno-Echo.cpp ****     0.0f,       //L_Rev
 208:Veno-Echo.cpp ****     0.0f    //R_Rev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 27


 209:Veno-Echo.cpp **** };
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 212:Veno-Echo.cpp **** void Update_DelayTimeL();
 213:Veno-Echo.cpp **** 
 214:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 215:Veno-Echo.cpp **** void Update_DelayTimeR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_feedbackL_CV();
 218:Veno-Echo.cpp **** void Update_feedbackL();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_feedbackR_CV();
 221:Veno-Echo.cpp **** void Update_feedbackR();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_drywet_CV();
 224:Veno-Echo.cpp **** void Update_drywet();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_width_CV();
 227:Veno-Echo.cpp **** void Update_width();
 228:Veno-Echo.cpp **** 
 229:Veno-Echo.cpp **** void Update_crossfeedback();
 230:Veno-Echo.cpp **** void Update_filterXfade();
 231:Veno-Echo.cpp **** 
 232:Veno-Echo.cpp **** void Update_Buttons();
 233:Veno-Echo.cpp **** void Update_DelayBaseTempo();
 234:Veno-Echo.cpp **** void Update_BaseTempoLED();
 235:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 236:Veno-Echo.cpp **** void Update_Mod();
 237:Veno-Echo.cpp **** void GetModCV();
 238:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 239:Veno-Echo.cpp **** void UpdateClock();
 240:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 241:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 242:Veno-Echo.cpp **** void TurnOnAllLEDs();
 243:Veno-Echo.cpp **** void ResetAllLEDs();
 244:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 245:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 246:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 247:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 248:Veno-Echo.cpp **** 
 249:Veno-Echo.cpp **** //static void AudioCallback(float *in, float *out, size_t size)
 250:Veno-Echo.cpp **** static void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
 251:Veno-Echo.cpp **** {
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp **** /*
 254:Veno-Echo.cpp **** static uint32_t funcLength{};
 255:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 256:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 257:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 258:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 259:Veno-Echo.cpp **** 
 260:Veno-Echo.cpp **** */
 261:Veno-Echo.cpp **** 
 262:Veno-Echo.cpp **** static int Counter{};
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp **** /*
 265:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 28


 266:Veno-Echo.cpp **** 
 267:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 268:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 269:Veno-Echo.cpp ****     {
 270:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 271:Veno-Echo.cpp ****     }
 272:Veno-Echo.cpp **** 
 273:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 274:Veno-Echo.cpp ****     {
 275:Veno-Echo.cpp ****         minFuncLength = funcLength;
 276:Veno-Echo.cpp ****     }
 277:Veno-Echo.cpp **** 
 278:Veno-Echo.cpp **** */
 279:Veno-Echo.cpp **** 
 280:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 281:Veno-Echo.cpp **** 
 282:Veno-Echo.cpp ****     /*
 283:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 284:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 285:Veno-Echo.cpp ****         //init timeofCall as current time
 286:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 287:Veno-Echo.cpp **** 
 288:Veno-Echo.cpp ****         //wait for random Dither time
 289:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 290:Veno-Echo.cpp ****         {}
 291:Veno-Echo.cpp ****     */
 292:Veno-Echo.cpp **** 
 293:Veno-Echo.cpp ****         switch (Counter)
 294:Veno-Echo.cpp ****         {
 295:Veno-Echo.cpp ****             case 0:
 296:Veno-Echo.cpp ****                 Update_Buttons();
 297:Veno-Echo.cpp ****                 GetModCV();
 298:Veno-Echo.cpp ****                 
 299:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 300:Veno-Echo.cpp ****             break;
 301:Veno-Echo.cpp **** 
 302:Veno-Echo.cpp ****             case 1:
 303:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 304:Veno-Echo.cpp ****             break;
 305:Veno-Echo.cpp **** 
 306:Veno-Echo.cpp ****             case 2:
 307:Veno-Echo.cpp ****                 if(saveState != SAVING)
 308:Veno-Echo.cpp ****                 {
 309:Veno-Echo.cpp ****                     Update_DelayTimeL();
 310:Veno-Echo.cpp ****                 }
 311:Veno-Echo.cpp ****             break;
 312:Veno-Echo.cpp **** 
 313:Veno-Echo.cpp ****             case 3:
 314:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 315:Veno-Echo.cpp ****             break;
 316:Veno-Echo.cpp **** 
 317:Veno-Echo.cpp ****             case 4:
 318:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 319:Veno-Echo.cpp ****                 {
 320:Veno-Echo.cpp ****                     Update_DelayTimeR();
 321:Veno-Echo.cpp ****                 }
 322:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 29


 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****             case 5:
 325:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 326:Veno-Echo.cpp ****             break;
 327:Veno-Echo.cpp **** 
 328:Veno-Echo.cpp ****             case 6:
 329:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 330:Veno-Echo.cpp ****                 {
 331:Veno-Echo.cpp ****                     Update_feedbackL();
 332:Veno-Echo.cpp ****                 }
 333:Veno-Echo.cpp ****             break;
 334:Veno-Echo.cpp **** 
 335:Veno-Echo.cpp ****             case 7:
 336:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 337:Veno-Echo.cpp ****             break;
 338:Veno-Echo.cpp **** 
 339:Veno-Echo.cpp ****             case 8:
 340:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 341:Veno-Echo.cpp ****                 {
 342:Veno-Echo.cpp ****                     Update_feedbackR();
 343:Veno-Echo.cpp ****                 }
 344:Veno-Echo.cpp ****             break;
 345:Veno-Echo.cpp **** 
 346:Veno-Echo.cpp ****             case 9:
 347:Veno-Echo.cpp ****                 Update_drywet_CV();
 348:Veno-Echo.cpp ****             break;
 349:Veno-Echo.cpp **** 
 350:Veno-Echo.cpp ****             case 10:
 351:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 352:Veno-Echo.cpp ****                 {
 353:Veno-Echo.cpp ****                     Update_drywet();
 354:Veno-Echo.cpp ****                 }
 355:Veno-Echo.cpp ****             break;
 356:Veno-Echo.cpp **** 
 357:Veno-Echo.cpp ****             case 11:
 358:Veno-Echo.cpp ****                 Update_width_CV();
 359:Veno-Echo.cpp ****             break;
 360:Veno-Echo.cpp **** 
 361:Veno-Echo.cpp ****             case 12:
 362:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 363:Veno-Echo.cpp ****                 {
 364:Veno-Echo.cpp ****                     Update_width();
 365:Veno-Echo.cpp ****                 }
 366:Veno-Echo.cpp ****             break;
 367:Veno-Echo.cpp **** 
 368:Veno-Echo.cpp ****             case 13:
 369:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 370:Veno-Echo.cpp ****                 {
 371:Veno-Echo.cpp ****                     Update_crossfeedback();
 372:Veno-Echo.cpp ****                 }
 373:Veno-Echo.cpp ****             break;
 374:Veno-Echo.cpp **** 
 375:Veno-Echo.cpp ****             case 14:
 376:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 377:Veno-Echo.cpp ****                 {
 378:Veno-Echo.cpp ****                     Update_filterXfade();
 379:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 30


 380:Veno-Echo.cpp ****             break;
 381:Veno-Echo.cpp ****         }
 382:Veno-Echo.cpp **** 
 383:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i ++)
 384:Veno-Echo.cpp ****     {   
 385:Veno-Echo.cpp ****         UpdateClock(); 
 386:Veno-Echo.cpp ****         Update_Mod();
 387:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 388:Veno-Echo.cpp **** 
 389:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 390:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 391:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 392:Veno-Echo.cpp ****         
 393:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 394:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 395:Veno-Echo.cpp ****         float Left_In = in[0][i];
 396:Veno-Echo.cpp ****         float Right_In = in[1][i];
 397:Veno-Echo.cpp **** 
 398:Veno-Echo.cpp ****         //set xfade positions      
 399:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 400:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 401:Veno-Echo.cpp ****         
 402:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 403:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 404:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 405:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 406:Veno-Echo.cpp **** 
 407:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 408:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 409:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 410:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 411:Veno-Echo.cpp **** 
 412:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 413:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 414:Veno-Echo.cpp **** 
 415:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 416:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 417:Veno-Echo.cpp **** 
 418:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 419:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 420:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 421:Veno-Echo.cpp **** 
 422:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 423:Veno-Echo.cpp ****         delaysL_REV.Write(Left_In);
 424:Veno-Echo.cpp ****         delaysR_REV.Write(Right_In);
 425:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 426:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 427:Veno-Echo.cpp **** 
 428:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 429:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(Left_In,delayRevSignalL);
 430:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(Right_In,delayRevSignalR);
 431:Veno-Echo.cpp **** 
 432:Veno-Echo.cpp ****         //Get combined output from all delay heads
 433:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 434:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 435:Veno-Echo.cpp **** 
 436:Veno-Echo.cpp ****         //Update Base Tempo LED
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 31


 437:Veno-Echo.cpp ****         Update_BaseTempoLED();
 438:Veno-Echo.cpp **** 
 439:Veno-Echo.cpp ****         //hard limit
 440:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 441:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 442:Veno-Echo.cpp **** 
 443:Veno-Echo.cpp **** if(!PostFilters)
 444:Veno-Echo.cpp **** {
 445:Veno-Echo.cpp **** //****************************************************************************************
 446:Veno-Echo.cpp ****         //pre filters
 447:Veno-Echo.cpp ****         //process LPF
 448:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 449:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 450:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 451:Veno-Echo.cpp **** 
 452:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 453:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 454:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 455:Veno-Echo.cpp ****         
 456:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 457:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 458:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 459:Veno-Echo.cpp **** 
 460:Veno-Echo.cpp ****         //hard limit
 461:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 462:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 463:Veno-Echo.cpp **** 
 464:Veno-Echo.cpp ****         //process HPF
 465:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 466:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 467:Veno-Echo.cpp **** 
 468:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 469:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 470:Veno-Echo.cpp **** 
 471:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 472:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 473:Veno-Echo.cpp **** 
 474:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 475:Veno-Echo.cpp **** 
 476:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 477:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 478:Veno-Echo.cpp **** 
 479:Veno-Echo.cpp **** //****************************************************************************************
 480:Veno-Echo.cpp **** }
 481:Veno-Echo.cpp **** 
 482:Veno-Echo.cpp **** else
 483:Veno-Echo.cpp **** {
 484:Veno-Echo.cpp ****     /* code */
 485:Veno-Echo.cpp **** }
 486:Veno-Echo.cpp **** 
 487:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 488:Veno-Echo.cpp ****         static float RNegFB{};
 489:Veno-Echo.cpp **** 
 490:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 491:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 492:Veno-Echo.cpp ****             LNegFB = 0.0f;
 493:Veno-Echo.cpp ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 32


 494:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 495:Veno-Echo.cpp ****             RNegFB = 0.0f;
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 498:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 499:Veno-Echo.cpp **** 
 500:Veno-Echo.cpp ****         //crossfeedback:
 501:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 502:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 503:Veno-Echo.cpp **** 
 504:Veno-Echo.cpp **** 
 505:Veno-Echo.cpp ****         //get envelopes for feedback signals
 506:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 507:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 508:Veno-Echo.cpp **** 
 509:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 510:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 511:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 512:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 513:Veno-Echo.cpp ****             else LNegFB = 0.0;
 514:Veno-Echo.cpp ****             
 515:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 516:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 517:Veno-Echo.cpp ****             else RNegFB = 0.0;
 518:Veno-Echo.cpp **** 
 519:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 520:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 521:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 522:Veno-Echo.cpp ****  
 523:Veno-Echo.cpp ****         //hard limit
 524:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 525:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 526:Veno-Echo.cpp **** 
 527:Veno-Echo.cpp ****         delayL.Write( combinedL );
 528:Veno-Echo.cpp ****         delayR.Write( combinedR );
 529:Veno-Echo.cpp **** 
 530:Veno-Echo.cpp ****         // floats for wet dry mix
 531:Veno-Echo.cpp ****         float mixL;
 532:Veno-Echo.cpp ****         float mixR;
 533:Veno-Echo.cpp **** 
 534:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 535:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 536:Veno-Echo.cpp **** 
 537:Veno-Echo.cpp ****         //hard limit
 538:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 539:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 540:Veno-Echo.cpp **** 
 541:Veno-Echo.cpp **** if(PostFilters)
 542:Veno-Echo.cpp **** {
 543:Veno-Echo.cpp ****     //****************************************************************************************
 544:Veno-Echo.cpp ****         //post filters
 545:Veno-Echo.cpp ****         //process LPF
 546:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 547:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 548:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 549:Veno-Echo.cpp **** 
 550:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 33


 551:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 552:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 553:Veno-Echo.cpp ****         
 554:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 555:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 556:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 557:Veno-Echo.cpp **** 
 558:Veno-Echo.cpp ****         //hard limit
 559:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 560:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 561:Veno-Echo.cpp **** 
 562:Veno-Echo.cpp ****         //process HPF
 563:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 564:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 565:Veno-Echo.cpp **** 
 566:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 567:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 568:Veno-Echo.cpp **** 
 569:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 570:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 571:Veno-Echo.cpp **** 
 572:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 573:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 574:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 575:Veno-Echo.cpp **** 
 576:Veno-Echo.cpp ****     //****************************************************************************************
 577:Veno-Echo.cpp **** }
 578:Veno-Echo.cpp **** else
 579:Veno-Echo.cpp **** {
 580:Veno-Echo.cpp ****     /* code */
 581:Veno-Echo.cpp **** }
 582:Veno-Echo.cpp ****         if(drywet < 0.5f)
 583:Veno-Echo.cpp ****         {
 584:Veno-Echo.cpp ****             mixL = Left_In + (2.0f * drywet * delaySignal_L_SUM);
 585:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 586:Veno-Echo.cpp ****         }
 587:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 588:Veno-Echo.cpp ****         {
 589:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * Left_In) + delaySignal_L_SUM;
 590:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 591:Veno-Echo.cpp ****         }
 592:Veno-Echo.cpp ****         else
 593:Veno-Echo.cpp ****         {
 594:Veno-Echo.cpp ****             mixL = Left_In + delaySignal_L_SUM;
 595:Veno-Echo.cpp ****             mixR = Right_In + delaySignal_R_SUM;
 596:Veno-Echo.cpp ****         }
 597:Veno-Echo.cpp **** 
 598:Veno-Echo.cpp ****         //send mixes to outputs
 599:Veno-Echo.cpp ****         if(mute)
 600:Veno-Echo.cpp ****         {
 601:Veno-Echo.cpp ****             out[0][i] = 0.0f;
 602:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 603:Veno-Echo.cpp ****         }
 604:Veno-Echo.cpp ****         else
 605:Veno-Echo.cpp ****         {
 606:Veno-Echo.cpp ****             out[0][i] = mixL;
 607:Veno-Echo.cpp ****             out[1][i] = mixR;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 34


 608:Veno-Echo.cpp ****         }
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp ****         //write to DAC for debug
 611:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 612:Veno-Echo.cpp **** 
 613:Veno-Echo.cpp ****     }
 614:Veno-Echo.cpp **** 
 615:Veno-Echo.cpp **** }
 616:Veno-Echo.cpp **** 
 617:Veno-Echo.cpp **** void InitDelays(float samplerate)
 618:Veno-Echo.cpp **** {
 439              		.loc 20 618 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 619:Veno-Echo.cpp **** 
 620:Veno-Echo.cpp ****     //Init fwd delays
 621:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 621 5 view .LVU50
 444              	.LBB895:
 445              	.LBI895:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB896:
 448              	.LBB897:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE897:
 453              	.LBE896:
 454              	.LBE895:
 618:Veno-Echo.cpp **** 
 455              		.loc 20 618 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB902:
 470              	.LBB901:
 471              	.LBB898:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 35


 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE898:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB899:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE899:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB900:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 36


 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE900:
 525              	.LBE901:
 526              	.LBE902:
 527              	.LBB903:
 528              	.LBB904:
 529              	.LBB905:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE905:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB906:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE906:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB907:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 37


  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE907:
 576              	.LBE904:
 577              	.LBE903:
 622:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 623:Veno-Echo.cpp **** 
 624:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 625:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 625 5 is_stmt 1 view .LVU91
 626:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 626 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 627:Veno-Echo.cpp **** 
 628:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 628 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 625:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 625 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 626:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 626 5 is_stmt 1 view .LVU95
 588              	.LBB908:
 589              	.LBB909:
 590              	.LBB910:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 38


  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE910:
 594              	.LBE909:
 595              	.LBE908:
 626:Veno-Echo.cpp **** 
 596              		.loc 20 626 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 628 5 is_stmt 1 view .LVU98
 599              		.loc 20 628 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 628 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 629:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 629 5 is_stmt 1 view .LVU101
 611              		.loc 20 629 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB922:
 618              	.LBB917:
 619              	.LBB912:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE912:
 623              	.LBE917:
 624              	.LBE922:
 625              		.loc 20 629 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 630:Veno-Echo.cpp **** 
 631:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 632:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 633:Veno-Echo.cpp **** 
 634:Veno-Echo.cpp ****     //Init rev delays
 635:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 635 5 is_stmt 1 view .LVU105
 632              	.LBB923:
 633              	.LBI908:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 39


 635              	.LBB918:
 636              	.LBI909:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB913:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB911:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE911:
 660              	.LBE913:
 661              	.LBE918:
 662              	.LBE923:
 663              	.LBB924:
 664              	.LBB925:
 665              	.LBB926:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE926:
 675              	.LBE925:
 676              	.LBE924:
 677              	.LBB949:
 678              	.LBB919:
 679              	.LBB914:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 40


  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE914:
 683              	.LBE919:
 684              	.LBE949:
 685              	.LBB950:
 686              	.LBB939:
 687              	.LBB929:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE929:
 691              	.LBE939:
 692              	.LBE950:
 693              	.LBB951:
 694              	.LBB920:
 695              	.LBB915:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE915:
 714              	.LBE920:
 715              	.LBE951:
 636:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 636 5 is_stmt 1 view .LVU128
 717              	.LBB952:
 718              	.LBI924:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB940:
 721              	.LBI925:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 41


  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB930:
 724              	.LBB927:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE927:
 727              	.LBE930:
 728              	.LBE940:
 729              	.LBE952:
 730              	.LBB953:
 731              	.LBB921:
 732              	.LBB916:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE916:
 742              	.LBE921:
 743              	.LBE953:
 744              	.LBB954:
 745              	.LBB941:
 746              	.LBB931:
 747              	.LBB928:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE928:
 756              	.LBE931:
 757              	.LBE941:
 758              	.LBE954:
 637:Veno-Echo.cpp **** 
 638:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 639:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 639 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB955:
 762              	.LBB942:
 763              	.LBB932:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE932:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 42


 767              	.LBE942:
 768              	.LBE955:
 769              	.LBB956:
 770              	.LBB957:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE957:
 780              	.LBE956:
 781              	.LBB971:
 782              	.LBB943:
 783              	.LBB933:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE933:
 787              	.LBE943:
 788              	.LBE971:
 789              	.LBB972:
 790              	.LBB966:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE966:
 794              	.LBE972:
 795              	.LBB973:
 796              	.LBB944:
 797              	.LBB934:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE934:
 803              	.LBE944:
 804              	.LBE973:
 805              	.LBB974:
 806              	.LBB967:
 807              	.LBB958:
 808              	.LBB959:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 43


   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 44


  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE959:
 813              	.LBE958:
 814              	.LBE967:
 815              	.LBE974:
 816              	.LBB975:
 817              	.LBB945:
 818              	.LBB935:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE935:
 826              	.LBE945:
 827              	.LBE975:
 828              	.LBB976:
 829              	.LBB968:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE968:
 833              	.LBE976:
 834              	.LBB977:
 835              	.LBB946:
 836              	.LBB936:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE936:
 842              	.LBE946:
 843              	.LBE977:
 844              		.loc 20 639 5 is_stmt 1 view .LVU155
 640:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 640 5 view .LVU156
 639:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 639 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB978:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 45


 849              	.LBB947:
 850              	.LBB937:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE937:
 854              	.LBE947:
 855              	.LBE978:
 856              	.LBB979:
 857              	.LBB969:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE969:
 861              	.LBE979:
 862              	.LBB980:
 863              	.LBB948:
 864              	.LBB938:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE938:
 868              	.LBE948:
 869              	.LBE980:
 870              		.loc 20 640 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 641:Veno-Echo.cpp **** 
 642:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 643:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 643 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB981:
 876              	.LBI956:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB970:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB961:
 881              	.LBI958:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB960:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE960:
 887              	.LBE961:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB962:
 892              	.LBB963:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 46


  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE963:
 896              	.LBE962:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB965:
 902              	.LBI962:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB964:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE964:
 913              	.LBE965:
 914              	.LBE970:
 915              	.LBE981:
 644:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 644 5 is_stmt 1 view .LVU177
 917              	.LBB982:
 918              	.LBI982:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB983:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB984:
 926              	.LBI984:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB985:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE985:
 932              	.LBE984:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 47


 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB987:
 942              	.LBB986:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE986:
 946              	.LBE987:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB988:
 953              	.LBB989:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE989:
 959              	.LBE988:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB991:
 965              	.LBI988:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB990:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE990:
 976              	.LBE991:
 977              	.LBE983:
 978              	.LBE982:
 645:Veno-Echo.cpp **** 
 646:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 48


 979              		.loc 20 646 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4799:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4801:
 647:Veno-Echo.cpp **** 
 648:Veno-Echo.cpp **** int main(void)
 649:Veno-Echo.cpp **** {
 650:Veno-Echo.cpp ****     // initialize hardware.
 651:Veno-Echo.cpp ****     hw.Configure();
 652:Veno-Echo.cpp ****     hw.Init();
 653:Veno-Echo.cpp ****     
 654:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 655:Veno-Echo.cpp **** 
 656:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 657:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 658:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 659:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 660:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 661:Veno-Echo.cpp **** 
 662:Veno-Echo.cpp ****     //Gates
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 49


 663:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 664:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 665:Veno-Echo.cpp **** 
 666:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 667:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 668:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 669:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 670:Veno-Echo.cpp ****     
 671:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 672:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 673:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 674:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 675:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 676:Veno-Echo.cpp **** 
 677:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 678:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 679:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 680:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 681:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 682:Veno-Echo.cpp **** 
 683:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 684:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 685:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 686:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 687:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 688:Veno-Echo.cpp **** 
 689:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 690:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 691:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 692:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 693:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 694:Veno-Echo.cpp **** 
 695:Veno-Echo.cpp ****     // set params for CrossFade objects
 696:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 697:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 698:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 699:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 700:Veno-Echo.cpp **** 
 701:Veno-Echo.cpp ****     WidthXfade.Init();
 702:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 703:Veno-Echo.cpp **** 
 704:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 705:Veno-Echo.cpp **** 
 706:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 707:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 708:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 709:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 710:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 711:Veno-Echo.cpp **** 
 712:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 713:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 714:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 715:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 716:Veno-Echo.cpp **** 
 717:Veno-Echo.cpp ****     //setup L and R High Pass filters
 718:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 719:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 50


 720:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 721:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 722:Veno-Echo.cpp **** 
 723:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 724:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 725:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 726:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 727:Veno-Echo.cpp **** 
 728:Veno-Echo.cpp ****     //post filters
 729:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 730:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 731:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 732:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 733:Veno-Echo.cpp **** 
 734:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 735:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 736:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 737:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 738:Veno-Echo.cpp **** 
 739:Veno-Echo.cpp ****     //setup L and R High Pass filters
 740:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 741:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 742:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 743:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 744:Veno-Echo.cpp **** 
 745:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 746:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 747:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 748:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 749:Veno-Echo.cpp **** 
 750:Veno-Echo.cpp ****     //DcBlock_LFB.Init(hw.AudioSampleRate());
 751:Veno-Echo.cpp ****     //DcBlock_RFB.Init(hw.AudioSampleRate());
 752:Veno-Echo.cpp **** 
 753:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 754:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 755:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 756:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 757:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 758:Veno-Echo.cpp **** 
 759:Veno-Echo.cpp ****     BaseTempo.init(mintap,maxtap,1.25f,24);  //max 6 second tap
 760:Veno-Echo.cpp **** 
 761:Veno-Echo.cpp ****     //setup tempo indicators
 762:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 763:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 764:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 765:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 766:Veno-Echo.cpp **** 
 767:Veno-Echo.cpp ****     //load settings from flash
 768:Veno-Echo.cpp **** 
 769:Veno-Echo.cpp ****     Settings SavedSettings{LoadSettings()};
 770:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 771:Veno-Echo.cpp ****     //AltControls = defaultAltControls;
 772:Veno-Echo.cpp **** 
 773:Veno-Echo.cpp ****     ApplySettings(SavedSettings);
 774:Veno-Echo.cpp ****     AltControls = SavedSettings;
 775:Veno-Echo.cpp **** 
 776:Veno-Echo.cpp ****     //initialize DAC
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 51


 777:Veno-Echo.cpp **** 
 778:Veno-Echo.cpp ****    //ADC
 779:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 780:Veno-Echo.cpp **** 
 781:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 782:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 783:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 784:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 785:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 786:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 787:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 788:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 789:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 790:Veno-Echo.cpp **** 
 791:Veno-Echo.cpp **** 
 792:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 793:Veno-Echo.cpp ****     hw.adc.Start();
 794:Veno-Echo.cpp **** 
 795:Veno-Echo.cpp **** 
 796:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 797:Veno-Echo.cpp ****     // start audio callback
 798:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 799:Veno-Echo.cpp **** 
 800:Veno-Echo.cpp ****     
 801:Veno-Echo.cpp **** 
 802:Veno-Echo.cpp ****      for(;;)
 803:Veno-Echo.cpp ****      {  
 804:Veno-Echo.cpp **** 
 805:Veno-Echo.cpp ****         static uint32_t saveTimer{};
 806:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 807:Veno-Echo.cpp ****        
 808:Veno-Echo.cpp ****         if(save_flag)   //if save_flag is set
 809:Veno-Echo.cpp ****         {
 810:Veno-Echo.cpp ****             save_flag = false;
 811:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 812:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 813:Veno-Echo.cpp ****         }
 814:Veno-Echo.cpp ****         
 815:Veno-Echo.cpp ****         else    //save flag not set
 816:Veno-Echo.cpp ****         {
 817:Veno-Echo.cpp ****            if(saveState == WAITING)    //wait flag set (waiting)
 818:Veno-Echo.cpp ****            {
 819:Veno-Echo.cpp ****                if(System::GetNow() - saveTimer > 1000)  //1second wait to save
 820:Veno-Echo.cpp ****                 {
 821:Veno-Echo.cpp ****                     saveState = SAVING; //stop reading ADCs temporarily
 822:Veno-Echo.cpp ****                     
 823:Veno-Echo.cpp ****                     Settings ToSave{AltControls};   //copy settings
 824:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == QSPIHandle::Result::OK)  //save settings
 825:Veno-Echo.cpp ****                     {
 826:Veno-Echo.cpp ****                     }
 827:Veno-Echo.cpp ****                 }
 828:Veno-Echo.cpp **** 
 829:Veno-Echo.cpp ****                 else{} //still waiting
 830:Veno-Echo.cpp **** 
 831:Veno-Echo.cpp ****            }
 832:Veno-Echo.cpp **** 
 833:Veno-Echo.cpp ****            if(saveState == SAVING)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 52


 834:Veno-Echo.cpp ****            {
 835:Veno-Echo.cpp ****             if(System::GetNow() - saveTimer > 1200) //additional 0.2 second wait
 836:Veno-Echo.cpp ****             {
 837:Veno-Echo.cpp ****                     saveState = IDLE;   //reset saveState
 838:Veno-Echo.cpp ****             }
 839:Veno-Echo.cpp ****             else{} //ADCs paused
 840:Veno-Echo.cpp **** 
 841:Veno-Echo.cpp ****            }
 842:Veno-Echo.cpp **** 
 843:Veno-Echo.cpp ****            else //IDLE - do nothing
 844:Veno-Echo.cpp ****            {
 845:Veno-Echo.cpp ****            }
 846:Veno-Echo.cpp ****         }
 847:Veno-Echo.cpp **** 
 848:Veno-Echo.cpp ****      }
 849:Veno-Echo.cpp **** 
 850:Veno-Echo.cpp **** }
 851:Veno-Echo.cpp **** 
 852:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 853:Veno-Echo.cpp **** {
 1022              		.loc 20 853 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 854:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 854 5 view .LVU201
 853:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 853 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 854 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 854 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 855:Veno-Echo.cpp **** }
 1040              		.loc 20 855 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4801:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 53


 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4802:
 856:Veno-Echo.cpp **** 
 857:Veno-Echo.cpp **** void Update_DelayTimeL()
 858:Veno-Echo.cpp **** {
 1061              		.loc 20 858 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 859:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 859 5 view .LVU207
 860:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 860 5 view .LVU208
 861:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 861 5 view .LVU209
 862:Veno-Echo.cpp ****     
 863:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 863 5 view .LVU210
 864:Veno-Echo.cpp **** 
 865:Veno-Echo.cpp ****     //update pot values
 866:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 866 5 view .LVU211
 858:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 858 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 866 44 view .LVU213
 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7648     		ldr	r0, .L75
 1079 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1080              	.LVL40:
 867:Veno-Echo.cpp **** 
 868:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 869:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 870:Veno-Echo.cpp ****     static int counterL{};
 871:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1081              		.loc 20 871 26 view .LVU214
 1082 000c 7549     		ldr	r1, .L75+4
 1083              		.loc 20 871 31 view .LVU215
 1084 000e 764B     		ldr	r3, .L75+8
 1085              	.LVL41:
 870:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 870 5 is_stmt 1 view .LVU216
 1087              		.loc 20 871 5 view .LVU217
 1088              		.loc 20 871 26 is_stmt 0 view .LVU218
 1089 0010 0A68     		ldr	r2, [r1]
 1090              	.LBB992:
 872:Veno-Echo.cpp **** 
 873:Veno-Echo.cpp ****     if (!shift) //default control
 1091              		.loc 20 873 9 view .LVU219
 1092 0012 7648     		ldr	r0, .L75+12
 1093              	.LBE992:
 871:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 54


 1094              		.loc 20 871 26 view .LVU220
 1095 0014 0132     		adds	r2, r2, #1
 1096              	.LBB1065:
 1097              		.loc 20 873 5 view .LVU221
 1098 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1099              	.LBE1065:
 871:Veno-Echo.cpp **** 
 1100              		.loc 20 871 31 view .LVU222
 1101 0018 83FB0243 		smull	r4, r3, r3, r2
 1102 001c D417     		asrs	r4, r2, #31
 1103 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1104 0022 03EB4303 		add	r3, r3, r3, lsl #1
 1105 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
 1106              	.LBB1066:
 1107              	.LBB993:
 874:Veno-Echo.cpp ****     {
 875:Veno-Echo.cpp ****         static float delayTimeL_new{};
 876:Veno-Echo.cpp ****         //udpate pickup
 877:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1108              		.loc 20 877 19 view .LVU223
 1109 002a 714A     		ldr	r2, .L75+16
 1110              	.LBE993:
 1111              	.LBE1066:
 871:Veno-Echo.cpp **** 
 1112              		.loc 20 871 14 view .LVU224
 1113 002c 0B60     		str	r3, [r1]
 873:Veno-Echo.cpp ****     {
 1114              		.loc 20 873 5 is_stmt 1 view .LVU225
 1115              	.LBB1067:
 1116 002e 80BB     		cbnz	r0, .L43
 1117              	.LBB1012:
 875:Veno-Echo.cpp ****         //udpate pickup
 1118              		.loc 20 875 9 view .LVU226
 1119              		.loc 20 877 9 view .LVU227
 1120 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1121 0032 0029     		cmp	r1, #0
 1122 0034 38D0     		beq	.L44
 878:Veno-Echo.cpp ****         {
 879:Veno-Echo.cpp ****             lastShift = shift;
 1123              		.loc 20 879 13 view .LVU228
 880:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1124              		.loc 20 880 31 is_stmt 0 view .LVU229
 1125 0036 6F4C     		ldr	r4, .L75+20
 881:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1126              		.loc 20 881 28 view .LVU230
 1127 0038 6F49     		ldr	r1, .L75+24
 879:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1128              		.loc 20 879 23 view .LVU231
 1129 003a 1070     		strb	r0, [r2]
 880:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1130              		.loc 20 880 13 is_stmt 1 view .LVU232
 880:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 880 31 is_stmt 0 view .LVU233
 1132 003c 2070     		strb	r0, [r4]
 1133              		.loc 20 881 13 is_stmt 1 view .LVU234
 1134              		.loc 20 881 28 is_stmt 0 view .LVU235
 1135 003e 81ED000A 		vstr.32	s0, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 55


 1136              	.L45:
 882:Veno-Echo.cpp ****         } 
 883:Veno-Echo.cpp ****         else    //not a recent shift change
 884:Veno-Echo.cpp ****         {
 885:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 886:Veno-Echo.cpp ****             {
 887:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 888:Veno-Echo.cpp ****                 {
 889:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 890:Veno-Echo.cpp ****                 }
 891:Veno-Echo.cpp ****             }
 892:Veno-Echo.cpp ****         }
 893:Veno-Echo.cpp **** 
 894:Veno-Echo.cpp ****         float delayTimeL{};
 1137              		.loc 20 894 9 is_stmt 1 view .LVU236
 1138              	.LVL42:
 895:Veno-Echo.cpp **** 
 896:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1139              		.loc 20 896 9 view .LVU237
 897:Veno-Echo.cpp ****         {
 898:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 899:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 900:Veno-Echo.cpp ****         }
 901:Veno-Echo.cpp **** 
 902:Veno-Echo.cpp ****         else
 903:Veno-Echo.cpp ****         {
 904:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1140              		.loc 20 904 13 view .LVU238
 1141              	.LBB994:
 1142              	.LBI994:
 905:Veno-Echo.cpp ****         }
 906:Veno-Echo.cpp **** 
 907:Veno-Echo.cpp ****         if(counterL == 0)
 908:Veno-Echo.cpp ****         {
 909:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 910:Veno-Echo.cpp ****             {
 911:Veno-Echo.cpp ****             };
 912:Veno-Echo.cpp ****         }
 913:Veno-Echo.cpp **** 
 914:Veno-Echo.cpp ****     }   //not shift mode
 915:Veno-Echo.cpp **** 
 916:Veno-Echo.cpp ****     else    //shift mode
 917:Veno-Echo.cpp ****     {
 918:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 919:Veno-Echo.cpp **** 
 920:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 921:Veno-Echo.cpp ****         {
 922:Veno-Echo.cpp ****             lastShift = shift;
 923:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 924:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 925:Veno-Echo.cpp ****         }
 926:Veno-Echo.cpp **** 
 927:Veno-Echo.cpp ****         else    //not a recent shift change
 928:Veno-Echo.cpp ****         {
 929:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 930:Veno-Echo.cpp ****             {
 931:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 56


 932:Veno-Echo.cpp ****                 {
 933:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 934:Veno-Echo.cpp ****                 }
 935:Veno-Echo.cpp ****             }
 936:Veno-Echo.cpp ****         }
 937:Veno-Echo.cpp **** 
 938:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 939:Veno-Echo.cpp ****         {
 940:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 941:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 942:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 943:Veno-Echo.cpp ****             //save setting:
 944:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 945:Veno-Echo.cpp ****             save_flag = true;
 946:Veno-Echo.cpp ****         }
 947:Veno-Echo.cpp ****     }
 948:Veno-Echo.cpp ****     
 949:Veno-Echo.cpp **** }
 950:Veno-Echo.cpp **** 
 951:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 952:Veno-Echo.cpp **** {
 953:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 954:Veno-Echo.cpp **** }
 955:Veno-Echo.cpp **** 
 956:Veno-Echo.cpp **** void Update_DelayTimeR()
 957:Veno-Echo.cpp **** {
 958:Veno-Echo.cpp ****     static bool lastShift{};
 959:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 960:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 961:Veno-Echo.cpp ****     
 962:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 963:Veno-Echo.cpp **** 
 964:Veno-Echo.cpp ****     //update pot values
 965:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 966:Veno-Echo.cpp **** 
 967:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 968:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 969:Veno-Echo.cpp ****     static int counterR{};
 970:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 971:Veno-Echo.cpp **** 
 972:Veno-Echo.cpp ****     if (!shift) //default control
 973:Veno-Echo.cpp ****     {
 974:Veno-Echo.cpp ****         static float delayTimeR_new{};
 975:Veno-Echo.cpp ****         //udpate pickup
 976:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 977:Veno-Echo.cpp ****         {
 978:Veno-Echo.cpp ****             lastShift = shift;
 979:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 980:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 981:Veno-Echo.cpp ****         } 
 982:Veno-Echo.cpp ****         else    //not a default shift change
 983:Veno-Echo.cpp ****         {
 984:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 985:Veno-Echo.cpp ****             {
 986:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 987:Veno-Echo.cpp ****                 {
 988:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 57


 989:Veno-Echo.cpp ****                 }
 990:Veno-Echo.cpp ****             }
 991:Veno-Echo.cpp ****         }
 992:Veno-Echo.cpp **** 
 993:Veno-Echo.cpp ****         float delayTimeR{};
 994:Veno-Echo.cpp **** 
 995:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 996:Veno-Echo.cpp ****         {
 997:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 998:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 999:Veno-Echo.cpp ****         }
1000:Veno-Echo.cpp **** 
1001:Veno-Echo.cpp ****         else
1002:Veno-Echo.cpp ****         {
1003:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
1004:Veno-Echo.cpp ****         }
1005:Veno-Echo.cpp **** 
1006:Veno-Echo.cpp ****         if(counterR == 0)
1007:Veno-Echo.cpp ****         {
1008:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
1009:Veno-Echo.cpp ****             {
1010:Veno-Echo.cpp ****             };
1011:Veno-Echo.cpp **** 
1012:Veno-Echo.cpp ****         }
1013:Veno-Echo.cpp ****     }   //not shift mode
1014:Veno-Echo.cpp **** 
1015:Veno-Echo.cpp ****     else    //shift mode
1016:Veno-Echo.cpp ****     {
1017:Veno-Echo.cpp **** 
1018:Veno-Echo.cpp ****         static float tapRatio_new{};
1019:Veno-Echo.cpp **** 
1020:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1021:Veno-Echo.cpp ****         {
1022:Veno-Echo.cpp ****             lastShift = shift;
1023:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
1024:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
1025:Veno-Echo.cpp ****         }
1026:Veno-Echo.cpp **** 
1027:Veno-Echo.cpp ****         else    //not a recent shift change
1028:Veno-Echo.cpp ****         {
1029:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
1030:Veno-Echo.cpp ****             {
1031:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
1032:Veno-Echo.cpp ****                 {
1033:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
1034:Veno-Echo.cpp ****                 }
1035:Veno-Echo.cpp ****             }
1036:Veno-Echo.cpp ****         }
1037:Veno-Echo.cpp **** 
1038:Veno-Echo.cpp ****         if(tapRatio_pickup)
1039:Veno-Echo.cpp ****         {
1040:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1041:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1042:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1043:Veno-Echo.cpp ****             //save setting:
1044:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1045:Veno-Echo.cpp ****             save_flag = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 58


1046:Veno-Echo.cpp ****         }
1047:Veno-Echo.cpp ****     }
1048:Veno-Echo.cpp ****     
1049:Veno-Echo.cpp **** }
1050:Veno-Echo.cpp **** void Update_feedbackL_CV()
1051:Veno-Echo.cpp **** {
1052:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
1053:Veno-Echo.cpp **** }
1054:Veno-Echo.cpp **** void Update_feedbackL()
1055:Veno-Echo.cpp **** {
1056:Veno-Echo.cpp ****     static bool lastShift{};
1057:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
1058:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
1059:Veno-Echo.cpp **** 
1060:Veno-Echo.cpp ****     static float feedbackL_Last{};
1061:Veno-Echo.cpp **** 
1062:Veno-Echo.cpp ****     //get pot values:
1063:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1064:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
1065:Veno-Echo.cpp **** 
1066:Veno-Echo.cpp ****     if (!shift) //default controls
1067:Veno-Echo.cpp ****     {   
1068:Veno-Echo.cpp ****         static float feedbackL_new{};
1069:Veno-Echo.cpp ****         //update pickup
1070:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1071:Veno-Echo.cpp ****         {
1072:Veno-Echo.cpp ****             lastShift = shift;
1073:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1074:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1075:Veno-Echo.cpp ****         } 
1076:Veno-Echo.cpp ****         else    //not a default shift change
1077:Veno-Echo.cpp ****         {
1078:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1079:Veno-Echo.cpp ****             {
1080:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1081:Veno-Echo.cpp ****                 {
1082:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1083:Veno-Echo.cpp ****                 }
1084:Veno-Echo.cpp ****             }
1085:Veno-Echo.cpp ****         }
1086:Veno-Echo.cpp **** 
1087:Veno-Echo.cpp ****         float feedbackL_combo{};
1088:Veno-Echo.cpp **** 
1089:Veno-Echo.cpp ****         if(feedbackL_pickup)
1090:Veno-Echo.cpp ****         {
1091:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1092:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1093:Veno-Echo.cpp ****         }
1094:Veno-Echo.cpp **** 
1095:Veno-Echo.cpp ****         else
1096:Veno-Echo.cpp ****         {
1097:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1098:Veno-Echo.cpp ****         }
1099:Veno-Echo.cpp ****   
1100:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1101:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1102:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 59


1103:Veno-Echo.cpp ****     else    //alternate controls
1104:Veno-Echo.cpp ****     {
1105:Veno-Echo.cpp ****         static float HPCutoff_new{};
1106:Veno-Echo.cpp **** 
1107:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1108:Veno-Echo.cpp ****         {
1109:Veno-Echo.cpp ****             lastShift = shift;
1110:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1111:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1112:Veno-Echo.cpp ****         }
1113:Veno-Echo.cpp **** 
1114:Veno-Echo.cpp ****         else    //not a recent shift change
1115:Veno-Echo.cpp ****         {
1116:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1117:Veno-Echo.cpp ****             {
1118:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1119:Veno-Echo.cpp ****                 {
1120:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1121:Veno-Echo.cpp ****                 }
1122:Veno-Echo.cpp ****             }
1123:Veno-Echo.cpp ****         }
1124:Veno-Echo.cpp **** 
1125:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1126:Veno-Echo.cpp ****         {
1127:Veno-Echo.cpp ****             float HPCutoff{};
1128:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1129:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1130:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1131:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1132:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1133:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1134:Veno-Echo.cpp ****             save_flag = true;
1135:Veno-Echo.cpp ****         }
1136:Veno-Echo.cpp ****     }
1137:Veno-Echo.cpp **** }
1138:Veno-Echo.cpp **** 
1139:Veno-Echo.cpp **** void Update_feedbackR_CV()
1140:Veno-Echo.cpp **** {
1141:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1142:Veno-Echo.cpp **** }
1143:Veno-Echo.cpp **** 
1144:Veno-Echo.cpp **** void Update_feedbackR()
1145:Veno-Echo.cpp **** {
1146:Veno-Echo.cpp ****     static bool lastShift{};
1147:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1148:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1149:Veno-Echo.cpp **** 
1150:Veno-Echo.cpp ****     static float feedbackR_Last{};
1151:Veno-Echo.cpp **** 
1152:Veno-Echo.cpp ****     //get pot values:
1153:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1154:Veno-Echo.cpp **** 
1155:Veno-Echo.cpp ****     if (!shift) //default controls
1156:Veno-Echo.cpp ****     {   
1157:Veno-Echo.cpp ****         static float feedbackR_new{};
1158:Veno-Echo.cpp ****         //update pickup
1159:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 60


1160:Veno-Echo.cpp ****         {
1161:Veno-Echo.cpp ****             lastShift = shift;
1162:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1163:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1164:Veno-Echo.cpp ****         } 
1165:Veno-Echo.cpp ****         else    //not a recent shift change
1166:Veno-Echo.cpp ****         {
1167:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1168:Veno-Echo.cpp ****             {
1169:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1170:Veno-Echo.cpp ****                 {
1171:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1172:Veno-Echo.cpp ****                 }
1173:Veno-Echo.cpp ****             }
1174:Veno-Echo.cpp ****         }
1175:Veno-Echo.cpp **** 
1176:Veno-Echo.cpp ****         float feedbackR_combo{};
1177:Veno-Echo.cpp ****         
1178:Veno-Echo.cpp ****         if(feedbackR_pickup)
1179:Veno-Echo.cpp ****         {
1180:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1181:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1182:Veno-Echo.cpp ****         }
1183:Veno-Echo.cpp **** 
1184:Veno-Echo.cpp ****         else
1185:Veno-Echo.cpp ****         {
1186:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1187:Veno-Echo.cpp ****         }
1188:Veno-Echo.cpp **** 
1189:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1190:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1191:Veno-Echo.cpp ****     }
1192:Veno-Echo.cpp ****     else    //alternate controls
1193:Veno-Echo.cpp ****     {
1194:Veno-Echo.cpp **** 
1195:Veno-Echo.cpp ****         static float LPCutoff_new{};
1196:Veno-Echo.cpp **** 
1197:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1198:Veno-Echo.cpp ****         {
1199:Veno-Echo.cpp ****             lastShift = shift;
1200:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1201:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1202:Veno-Echo.cpp ****         }
1203:Veno-Echo.cpp **** 
1204:Veno-Echo.cpp ****         else    //not a recent shift change
1205:Veno-Echo.cpp ****         {
1206:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1207:Veno-Echo.cpp ****             {
1208:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1209:Veno-Echo.cpp ****                 {
1210:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1211:Veno-Echo.cpp ****                 }
1212:Veno-Echo.cpp ****             }
1213:Veno-Echo.cpp ****         }
1214:Veno-Echo.cpp **** 
1215:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1216:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 61


1217:Veno-Echo.cpp ****             float LPCutoff{};
1218:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1219:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1220:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1221:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1222:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1223:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1224:Veno-Echo.cpp ****             save_flag = true;
1225:Veno-Echo.cpp ****         }
1226:Veno-Echo.cpp ****     }
1227:Veno-Echo.cpp **** }
1228:Veno-Echo.cpp **** 
1229:Veno-Echo.cpp **** void Update_drywet_CV()
1230:Veno-Echo.cpp **** {
1231:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1232:Veno-Echo.cpp **** }
1233:Veno-Echo.cpp **** 
1234:Veno-Echo.cpp **** void Update_drywet()
1235:Veno-Echo.cpp **** {
1236:Veno-Echo.cpp ****     static bool lastShift{};
1237:Veno-Echo.cpp ****     static bool drywet_pickup{};
1238:Veno-Echo.cpp ****     static bool Res_pickup{};
1239:Veno-Echo.cpp **** 
1240:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1241:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1242:Veno-Echo.cpp **** 
1243:Veno-Echo.cpp ****     //get pot values:
1244:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1245:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1246:Veno-Echo.cpp **** 
1247:Veno-Echo.cpp ****     if (!shift) //default controls
1248:Veno-Echo.cpp ****     {   
1249:Veno-Echo.cpp **** 
1250:Veno-Echo.cpp ****         static float drywet_new{};
1251:Veno-Echo.cpp **** 
1252:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1253:Veno-Echo.cpp ****         {
1254:Veno-Echo.cpp ****             lastShift = shift;
1255:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1256:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1257:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1258:Veno-Echo.cpp ****         } 
1259:Veno-Echo.cpp ****         
1260:Veno-Echo.cpp ****         else    //not a recent shift change
1261:Veno-Echo.cpp ****         {
1262:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1263:Veno-Echo.cpp ****             {
1264:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1265:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1266:Veno-Echo.cpp ****                 {
1267:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1268:Veno-Echo.cpp ****                 }
1269:Veno-Echo.cpp ****             }
1270:Veno-Echo.cpp **** 
1271:Veno-Echo.cpp ****         }
1272:Veno-Echo.cpp ****         
1273:Veno-Echo.cpp ****         float drywetcombo{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 62


1274:Veno-Echo.cpp **** 
1275:Veno-Echo.cpp ****         if (drywet_pickup)
1276:Veno-Echo.cpp ****         {
1277:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1278:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1279:Veno-Echo.cpp ****         }
1280:Veno-Echo.cpp **** 
1281:Veno-Echo.cpp ****         else
1282:Veno-Echo.cpp ****         {
1283:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1284:Veno-Echo.cpp ****         }
1285:Veno-Echo.cpp **** 
1286:Veno-Echo.cpp ****         float drywetTarget{};
1287:Veno-Echo.cpp **** 
1288:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1289:Veno-Echo.cpp ****         {
1290:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1291:Veno-Echo.cpp ****         }
1292:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1293:Veno-Echo.cpp ****         {
1294:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1295:Veno-Echo.cpp ****         }
1296:Veno-Echo.cpp ****         else
1297:Veno-Echo.cpp ****         {
1298:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1299:Veno-Echo.cpp ****         }
1300:Veno-Echo.cpp **** 
1301:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1302:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1303:Veno-Echo.cpp ****     }
1304:Veno-Echo.cpp ****     else    //alternate controls
1305:Veno-Echo.cpp ****     {
1306:Veno-Echo.cpp ****         static float Res_new{};
1307:Veno-Echo.cpp **** 
1308:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1309:Veno-Echo.cpp ****         {
1310:Veno-Echo.cpp ****             lastShift = shift;
1311:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1312:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1313:Veno-Echo.cpp ****         }
1314:Veno-Echo.cpp **** 
1315:Veno-Echo.cpp ****         else    //not a recent shift change
1316:Veno-Echo.cpp ****         {
1317:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1318:Veno-Echo.cpp ****             {
1319:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1320:Veno-Echo.cpp ****                 {
1321:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1322:Veno-Echo.cpp ****                 }
1323:Veno-Echo.cpp ****             }
1324:Veno-Echo.cpp ****         }
1325:Veno-Echo.cpp **** 
1326:Veno-Echo.cpp ****         if(Res_pickup)
1327:Veno-Echo.cpp ****         {
1328:Veno-Echo.cpp ****             float Res{};
1329:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1330:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 63


1331:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1332:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1333:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1334:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1335:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1336:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1337:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1338:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1339:Veno-Echo.cpp ****             save_flag = true;
1340:Veno-Echo.cpp ****         }
1341:Veno-Echo.cpp ****     }
1342:Veno-Echo.cpp **** }
1343:Veno-Echo.cpp **** 
1344:Veno-Echo.cpp **** void Update_width_CV()
1345:Veno-Echo.cpp **** {
1346:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1347:Veno-Echo.cpp **** }
1348:Veno-Echo.cpp **** 
1349:Veno-Echo.cpp **** void Update_width()
1350:Veno-Echo.cpp **** {
1351:Veno-Echo.cpp ****     static bool lastShift{};
1352:Veno-Echo.cpp ****     static bool width_pickup{};
1353:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1354:Veno-Echo.cpp **** 
1355:Veno-Echo.cpp ****     static float width_Last{};
1356:Veno-Echo.cpp **** 
1357:Veno-Echo.cpp ****     //get pot values:
1358:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1359:Veno-Echo.cpp **** 
1360:Veno-Echo.cpp ****     if (!shift) //default controls
1361:Veno-Echo.cpp ****     {   
1362:Veno-Echo.cpp ****         static float width_new{};
1363:Veno-Echo.cpp ****         //update pickup
1364:Veno-Echo.cpp ****         if (shift != lastShift)
1365:Veno-Echo.cpp ****         {
1366:Veno-Echo.cpp ****             lastShift = shift;
1367:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1368:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1369:Veno-Echo.cpp ****         }
1370:Veno-Echo.cpp **** 
1371:Veno-Echo.cpp ****         else
1372:Veno-Echo.cpp ****         {
1373:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1374:Veno-Echo.cpp ****             {
1375:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1376:Veno-Echo.cpp ****                 {
1377:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1378:Veno-Echo.cpp ****                 }
1379:Veno-Echo.cpp ****             }
1380:Veno-Echo.cpp **** 
1381:Veno-Echo.cpp ****         }
1382:Veno-Echo.cpp **** 
1383:Veno-Echo.cpp ****         float widthTarget{};
1384:Veno-Echo.cpp **** 
1385:Veno-Echo.cpp ****         if(width_pickup)
1386:Veno-Echo.cpp ****         {
1387:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 64


1388:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1389:Veno-Echo.cpp ****         }
1390:Veno-Echo.cpp **** 
1391:Veno-Echo.cpp ****         else
1392:Veno-Echo.cpp ****         {        
1393:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1394:Veno-Echo.cpp ****         }
1395:Veno-Echo.cpp ****             
1396:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1397:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1398:Veno-Echo.cpp ****     }
1399:Veno-Echo.cpp **** 
1400:Veno-Echo.cpp ****     else    //alternate controls
1401:Veno-Echo.cpp ****     {
1402:Veno-Echo.cpp ****         static float ModDepth_new{};
1403:Veno-Echo.cpp **** 
1404:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1405:Veno-Echo.cpp ****         {
1406:Veno-Echo.cpp ****             lastShift = shift;
1407:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1408:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1409:Veno-Echo.cpp ****         }
1410:Veno-Echo.cpp **** 
1411:Veno-Echo.cpp ****         else    //not a recent shift change
1412:Veno-Echo.cpp ****         {
1413:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1414:Veno-Echo.cpp ****             {
1415:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1416:Veno-Echo.cpp ****                 {
1417:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1418:Veno-Echo.cpp ****                 }
1419:Veno-Echo.cpp ****             }
1420:Veno-Echo.cpp ****         }
1421:Veno-Echo.cpp **** 
1422:Veno-Echo.cpp ****         if(ModDepth_pickup)
1423:Veno-Echo.cpp ****         {
1424:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1425:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1426:Veno-Echo.cpp ****             save_flag = true;
1427:Veno-Echo.cpp ****         }
1428:Veno-Echo.cpp ****     }
1429:Veno-Echo.cpp **** }
1430:Veno-Echo.cpp **** 
1431:Veno-Echo.cpp **** void Update_crossfeedback()
1432:Veno-Echo.cpp **** {
1433:Veno-Echo.cpp ****     static bool lastShift{};
1434:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1435:Veno-Echo.cpp ****     static bool modRate_pickup{};
1436:Veno-Echo.cpp **** 
1437:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1438:Veno-Echo.cpp **** 
1439:Veno-Echo.cpp ****     //get pot values:
1440:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1441:Veno-Echo.cpp **** 
1442:Veno-Echo.cpp ****     if (!shift) //default controls
1443:Veno-Echo.cpp ****     {   
1444:Veno-Echo.cpp ****         static float crossfeedback_new{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 65


1445:Veno-Echo.cpp ****         //update pickup
1446:Veno-Echo.cpp ****         if (shift != lastShift)
1447:Veno-Echo.cpp ****         {
1448:Veno-Echo.cpp ****             lastShift = shift;
1449:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1450:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1451:Veno-Echo.cpp ****         }
1452:Veno-Echo.cpp **** 
1453:Veno-Echo.cpp ****         else
1454:Veno-Echo.cpp ****         {
1455:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1456:Veno-Echo.cpp ****             {
1457:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1458:Veno-Echo.cpp ****                 {
1459:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1460:Veno-Echo.cpp ****                 }
1461:Veno-Echo.cpp ****             }
1462:Veno-Echo.cpp ****         }
1463:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1464:Veno-Echo.cpp **** 
1465:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1466:Veno-Echo.cpp ****         {
1467:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1468:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1469:Veno-Echo.cpp ****         }
1470:Veno-Echo.cpp **** 
1471:Veno-Echo.cpp ****         else
1472:Veno-Echo.cpp ****         {
1473:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1474:Veno-Echo.cpp ****         }
1475:Veno-Echo.cpp **** 
1476:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1477:Veno-Echo.cpp ****     }
1478:Veno-Echo.cpp ****     else    //alternate controls
1479:Veno-Echo.cpp ****     {
1480:Veno-Echo.cpp ****         static float modRate_new{};
1481:Veno-Echo.cpp **** 
1482:Veno-Echo.cpp ****         if (shift != lastShift)
1483:Veno-Echo.cpp ****         {
1484:Veno-Echo.cpp ****             lastShift = shift;
1485:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1486:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1487:Veno-Echo.cpp ****         }
1488:Veno-Echo.cpp **** 
1489:Veno-Echo.cpp ****         else
1490:Veno-Echo.cpp ****         {
1491:Veno-Echo.cpp ****             if(!modRate_pickup)
1492:Veno-Echo.cpp ****             {
1493:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1494:Veno-Echo.cpp ****                 {
1495:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1496:Veno-Echo.cpp ****                 }
1497:Veno-Echo.cpp ****             }
1498:Veno-Echo.cpp ****         }
1499:Veno-Echo.cpp **** 
1500:Veno-Echo.cpp ****         if(modRate_pickup)
1501:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 66


1502:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1503:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1504:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1505:Veno-Echo.cpp ****             save_flag = true;
1506:Veno-Echo.cpp ****         }
1507:Veno-Echo.cpp ****     }
1508:Veno-Echo.cpp **** }
1509:Veno-Echo.cpp **** 
1510:Veno-Echo.cpp **** void Update_filterXfade()
1511:Veno-Echo.cpp **** {
1512:Veno-Echo.cpp ****     static bool lastShift{};
1513:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1514:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1515:Veno-Echo.cpp **** 
1516:Veno-Echo.cpp ****     static float filterXfade_last{};
1517:Veno-Echo.cpp **** 
1518:Veno-Echo.cpp ****     //get pot values:
1519:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1520:Veno-Echo.cpp **** 
1521:Veno-Echo.cpp ****     if (!shift) //default controls
1522:Veno-Echo.cpp ****     {   
1523:Veno-Echo.cpp ****         static float filterXfade_new{};
1524:Veno-Echo.cpp ****         //update pickup
1525:Veno-Echo.cpp ****         if (shift != lastShift)
1526:Veno-Echo.cpp ****         {
1527:Veno-Echo.cpp ****             lastShift = shift;
1528:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1529:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1530:Veno-Echo.cpp ****         }
1531:Veno-Echo.cpp **** 
1532:Veno-Echo.cpp ****         else
1533:Veno-Echo.cpp ****         {
1534:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1535:Veno-Echo.cpp ****             {
1536:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1537:Veno-Echo.cpp ****                 {
1538:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1539:Veno-Echo.cpp ****                 }
1540:Veno-Echo.cpp ****             }
1541:Veno-Echo.cpp ****         }
1542:Veno-Echo.cpp **** 
1543:Veno-Echo.cpp ****         float filterXfadeTarget{};
1544:Veno-Echo.cpp **** 
1545:Veno-Echo.cpp ****         if(filterXfade_pickup)
1546:Veno-Echo.cpp ****         {
1547:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1548:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1549:Veno-Echo.cpp ****         }
1550:Veno-Echo.cpp **** 
1551:Veno-Echo.cpp ****         else
1552:Veno-Echo.cpp ****         {
1553:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1554:Veno-Echo.cpp ****         }
1555:Veno-Echo.cpp **** 
1556:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1557:Veno-Echo.cpp ****     }
1558:Veno-Echo.cpp ****     else    //alternate controls
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 67


1559:Veno-Echo.cpp ****     {
1560:Veno-Echo.cpp **** 
1561:Veno-Echo.cpp ****         static float PostFilters_new{};
1562:Veno-Echo.cpp **** 
1563:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1564:Veno-Echo.cpp ****         {
1565:Veno-Echo.cpp ****             lastShift = shift;
1566:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1567:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1568:Veno-Echo.cpp ****         }
1569:Veno-Echo.cpp **** 
1570:Veno-Echo.cpp ****         else    //not a recent shift change
1571:Veno-Echo.cpp ****         {
1572:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1573:Veno-Echo.cpp ****             {
1574:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1575:Veno-Echo.cpp ****                 {
1576:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1577:Veno-Echo.cpp ****                 }
1578:Veno-Echo.cpp ****             }
1579:Veno-Echo.cpp ****         }
1580:Veno-Echo.cpp ****         
1581:Veno-Echo.cpp ****         if(PostFilters_pickup)
1582:Veno-Echo.cpp ****         {
1583:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1584:Veno-Echo.cpp ****             {
1585:Veno-Echo.cpp ****                 PostFilters = false;
1586:Veno-Echo.cpp ****             }
1587:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1588:Veno-Echo.cpp ****             {
1589:Veno-Echo.cpp ****                 PostFilters = true;
1590:Veno-Echo.cpp ****             }
1591:Veno-Echo.cpp ****             else
1592:Veno-Echo.cpp ****             {
1593:Veno-Echo.cpp ****               //do nothing
1594:Veno-Echo.cpp ****             }
1595:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1596:Veno-Echo.cpp ****             save_flag = true;
1597:Veno-Echo.cpp ****         }  
1598:Veno-Echo.cpp ****     }
1599:Veno-Echo.cpp **** }
1600:Veno-Echo.cpp **** 
1601:Veno-Echo.cpp **** void GetModCV()
1602:Veno-Echo.cpp **** {
1603:Veno-Echo.cpp ****     //get modulation CV input
1604:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1605:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1606:Veno-Echo.cpp **** }
1607:Veno-Echo.cpp **** 
1608:Veno-Echo.cpp **** void Update_Mod()
1609:Veno-Echo.cpp **** {    
1610:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1611:Veno-Echo.cpp ****     static float modulation_CV{};
1612:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1613:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1614:Veno-Echo.cpp ****     //calculate InternalMod
1615:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 68


1616:Veno-Echo.cpp ****     //apply modulation to delay lines
1617:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1618:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1619:Veno-Echo.cpp **** }
1620:Veno-Echo.cpp **** 
1621:Veno-Echo.cpp **** void UpdateClock()
1622:Veno-Echo.cpp **** {
1623:Veno-Echo.cpp ****     static uint32_t ClockCounter{};
1624:Veno-Echo.cpp **** 
1625:Veno-Echo.cpp ****     ClockCounter += 1; //increment by one
1626:Veno-Echo.cpp ****     //if clock in pulse received
1627:Veno-Echo.cpp ****     if (ClockIn.Trig())     
1628:Veno-Echo.cpp ****     {   
1629:Veno-Echo.cpp ****         
1630:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1631:Veno-Echo.cpp ****             if(BaseTempo.clock(ClockCounter)) //if valid tap resistered
1632:Veno-Echo.cpp ****             {
1633:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1634:Veno-Echo.cpp ****                 AltControls.tempo = BaseTempo.getTempo();
1635:Veno-Echo.cpp ****                 save_flag = true;
1636:Veno-Echo.cpp ****             }
1637:Veno-Echo.cpp ****             ClockCounter = 0; //reset counter
1638:Veno-Echo.cpp **** 
1639:Veno-Echo.cpp ****     } 
1640:Veno-Echo.cpp **** }
1641:Veno-Echo.cpp **** 
1642:Veno-Echo.cpp **** void Update_Buttons()
1643:Veno-Echo.cpp **** {  
1644:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1645:Veno-Echo.cpp ****     static uint32_t resetTime{};
1646:Veno-Echo.cpp ****     static int buttonstate{};
1647:Veno-Echo.cpp **** 
1648:Veno-Echo.cpp ****     Rev_L_sw.update();
1649:Veno-Echo.cpp ****     Rev_R_sw.update();
1650:Veno-Echo.cpp ****     LPF_sw.update();
1651:Veno-Echo.cpp ****     HPF_sw.update();
1652:Veno-Echo.cpp ****     Tap_Button.update();
1653:Veno-Echo.cpp **** 
1654:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1655:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1656:Veno-Echo.cpp ****     //TapButton.Debounce();
1657:Veno-Echo.cpp ****     Sync.Debounce();
1658:Veno-Echo.cpp ****     //ClockIn.Debounce();
1659:Veno-Echo.cpp ****     //gate inputs
1660:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1661:Veno-Echo.cpp ****     {
1662:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1663:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1664:Veno-Echo.cpp ****         {
1665:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1666:Veno-Echo.cpp ****         }
1667:Veno-Echo.cpp ****         else
1668:Veno-Echo.cpp ****         {
1669:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1670:Veno-Echo.cpp ****         }
1671:Veno-Echo.cpp ****         save_flag = true;
1672:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 69


1673:Veno-Echo.cpp **** 
1674:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1675:Veno-Echo.cpp ****     {
1676:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1677:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1678:Veno-Echo.cpp ****         {
1679:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1680:Veno-Echo.cpp ****         }
1681:Veno-Echo.cpp ****         else
1682:Veno-Echo.cpp ****         {
1683:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1684:Veno-Echo.cpp ****         }
1685:Veno-Echo.cpp ****         save_flag = true;
1686:Veno-Echo.cpp ****     }
1687:Veno-Echo.cpp **** 
1688:Veno-Echo.cpp ****     //buttons
1689:Veno-Echo.cpp **** 
1690:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1691:Veno-Echo.cpp ****     {
1692:Veno-Echo.cpp ****         buttonstate += 1;
1693:Veno-Echo.cpp ****         if (buttonstate == 3)
1694:Veno-Echo.cpp ****         {
1695:Veno-Echo.cpp ****             resetTime = System::GetNow();
1696:Veno-Echo.cpp ****         }
1697:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1698:Veno-Echo.cpp ****         {
1699:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1700:Veno-Echo.cpp ****         }
1701:Veno-Echo.cpp ****         else
1702:Veno-Echo.cpp ****         {
1703:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1704:Veno-Echo.cpp ****         }
1705:Veno-Echo.cpp ****         save_flag = true;
1706:Veno-Echo.cpp ****     }
1707:Veno-Echo.cpp **** 
1708:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1709:Veno-Echo.cpp ****     {
1710:Veno-Echo.cpp ****         buttonstate -= 1;
1711:Veno-Echo.cpp ****     }
1712:Veno-Echo.cpp **** 
1713:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1714:Veno-Echo.cpp ****     {
1715:Veno-Echo.cpp ****         buttonstate += 1;
1716:Veno-Echo.cpp ****         if (buttonstate == 3)
1717:Veno-Echo.cpp ****         {
1718:Veno-Echo.cpp ****             resetTime = System::GetNow();
1719:Veno-Echo.cpp ****         }
1720:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1721:Veno-Echo.cpp ****         {
1722:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1723:Veno-Echo.cpp ****         }
1724:Veno-Echo.cpp ****         else
1725:Veno-Echo.cpp ****         {
1726:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1727:Veno-Echo.cpp ****         }
1728:Veno-Echo.cpp ****         save_flag = true;
1729:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 70


1730:Veno-Echo.cpp **** 
1731:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1732:Veno-Echo.cpp ****     {
1733:Veno-Echo.cpp ****         buttonstate -= 1;
1734:Veno-Echo.cpp ****     }
1735:Veno-Echo.cpp **** 
1736:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1737:Veno-Echo.cpp ****     {
1738:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1739:Veno-Echo.cpp ****         {
1740:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1741:Veno-Echo.cpp ****             AltControls.tempo = BaseTempo.getTempo();
1742:Veno-Echo.cpp ****             save_flag = true;
1743:Veno-Echo.cpp ****         }
1744:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1745:Veno-Echo.cpp ****         
1746:Veno-Echo.cpp **** 
1747:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1748:Veno-Echo.cpp ****         buttonstate += 1;
1749:Veno-Echo.cpp ****         
1750:Veno-Echo.cpp ****         if (buttonstate == 3)
1751:Veno-Echo.cpp ****         {
1752:Veno-Echo.cpp ****             resetTime = System::GetNow();
1753:Veno-Echo.cpp ****         }
1754:Veno-Echo.cpp **** 
1755:Veno-Echo.cpp ****     }
1756:Veno-Echo.cpp **** 
1757:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1758:Veno-Echo.cpp ****     {
1759:Veno-Echo.cpp ****         shift = false;
1760:Veno-Echo.cpp ****         buttonstate -= 1;
1761:Veno-Echo.cpp ****         mute = false;
1762:Veno-Echo.cpp ****     }
1763:Veno-Echo.cpp **** 
1764:Veno-Echo.cpp ****     if (Tap_Button.getState())
1765:Veno-Echo.cpp ****     {
1766:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1767:Veno-Echo.cpp ****         {
1768:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1769:Veno-Echo.cpp ****         } 
1770:Veno-Echo.cpp ****     }
1771:Veno-Echo.cpp **** 
1772:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1773:Veno-Echo.cpp ****     {
1774:Veno-Echo.cpp **** 
1775:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1776:Veno-Echo.cpp ****             {
1777:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1778:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1779:Veno-Echo.cpp ****                 ResetAllLEDs();
1780:Veno-Echo.cpp ****                 //don't let reset or shift update
1781:Veno-Echo.cpp ****                 shift = false;
1782:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1783:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1784:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1785:Veno-Echo.cpp ****                 save_flag = true;
1786:Veno-Echo.cpp ****             }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 71


1787:Veno-Echo.cpp ****     } 
1788:Veno-Echo.cpp **** 
1789:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1790:Veno-Echo.cpp **** }
1791:Veno-Echo.cpp **** 
1792:Veno-Echo.cpp **** void Update_DelayBaseTempo()
1793:Veno-Echo.cpp **** {
1794:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
1795:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
1796:Veno-Echo.cpp **** }
1797:Veno-Echo.cpp **** 
1798:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1799:Veno-Echo.cpp **** {    
1800:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1801:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1802:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
1803:Veno-Echo.cpp ****     //DELAYR_DEBUG = delayR.GetDelayTime();
1804:Veno-Echo.cpp ****     //CLOCK_DEBUG = BaseTempo.getDelayLength();
1805:Veno-Echo.cpp **** }
1806:Veno-Echo.cpp **** 
1807:Veno-Echo.cpp **** void Update_BaseTempoLED()
1808:Veno-Echo.cpp **** {
1809:Veno-Echo.cpp ****     tempoLED_BASE.update();
1810:Veno-Echo.cpp **** 
1811:Veno-Echo.cpp ****     static int phaseCounter{};
1812:Veno-Echo.cpp **** 
1813:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1814:Veno-Echo.cpp ****     {
1815:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1816:Veno-Echo.cpp ****     }
1817:Veno-Echo.cpp **** 
1818:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1819:Veno-Echo.cpp ****     //update base phase for both delay lines
1820:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1821:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1822:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
1823:Veno-Echo.cpp **** }
1824:Veno-Echo.cpp **** 
1825:Veno-Echo.cpp **** 
1826:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1827:Veno-Echo.cpp **** {
1828:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1829:Veno-Echo.cpp ****     {
1830:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1831:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1832:Veno-Echo.cpp ****     }
1833:Veno-Echo.cpp ****     else
1834:Veno-Echo.cpp ****     {
1835:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1836:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1837:Veno-Echo.cpp ****     }
1838:Veno-Echo.cpp **** 
1839:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1840:Veno-Echo.cpp ****     {
1841:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1842:Veno-Echo.cpp ****     }
1843:Veno-Echo.cpp ****     else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 72


1844:Veno-Echo.cpp ****     {
1845:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1846:Veno-Echo.cpp ****     }
1847:Veno-Echo.cpp **** 
1848:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1849:Veno-Echo.cpp ****     {
1850:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1851:Veno-Echo.cpp ****     }
1852:Veno-Echo.cpp ****     else
1853:Veno-Echo.cpp ****     {
1854:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1855:Veno-Echo.cpp ****     }
1856:Veno-Echo.cpp **** 
1857:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1858:Veno-Echo.cpp ****     {
1859:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1860:Veno-Echo.cpp ****     }
1861:Veno-Echo.cpp ****     else
1862:Veno-Echo.cpp ****     {
1863:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1864:Veno-Echo.cpp ****     }
1865:Veno-Echo.cpp **** 
1866:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1867:Veno-Echo.cpp ****     {
1868:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1869:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1870:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1871:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1872:Veno-Echo.cpp ****     }
1873:Veno-Echo.cpp ****     else
1874:Veno-Echo.cpp ****     {
1875:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1876:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1877:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1878:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1879:Veno-Echo.cpp ****     }
1880:Veno-Echo.cpp ****     
1881:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1882:Veno-Echo.cpp ****     {
1883:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1884:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1885:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1886:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1887:Veno-Echo.cpp ****     }
1888:Veno-Echo.cpp ****     else
1889:Veno-Echo.cpp ****     {
1890:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1891:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1892:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1893:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1894:Veno-Echo.cpp **** 
1895:Veno-Echo.cpp ****     }
1896:Veno-Echo.cpp **** 
1897:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1898:Veno-Echo.cpp ****     {
1899:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1900:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 73


1901:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1902:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1903:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1904:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1905:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1906:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1907:Veno-Echo.cpp ****     }
1908:Veno-Echo.cpp **** 
1909:Veno-Echo.cpp ****     else
1910:Veno-Echo.cpp ****     {
1911:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1912:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1913:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1914:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1915:Veno-Echo.cpp ****     }
1916:Veno-Echo.cpp **** 
1917:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1918:Veno-Echo.cpp ****     {
1919:Veno-Echo.cpp ****         PostFilters = false;
1920:Veno-Echo.cpp ****     }
1921:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1922:Veno-Echo.cpp ****     {
1923:Veno-Echo.cpp ****         PostFilters = true;
1924:Veno-Echo.cpp ****     }
1925:Veno-Echo.cpp ****     else
1926:Veno-Echo.cpp ****     {
1927:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1928:Veno-Echo.cpp ****     }
1929:Veno-Echo.cpp **** 
1930:Veno-Echo.cpp ****     //if between min and max tap length
1931:Veno-Echo.cpp ****     if( (setting.tempo >= static_cast<float> (minTempo)) 
1932:Veno-Echo.cpp ****         && (setting.tempo <= static_cast<float> (maxTempo)) )
1933:Veno-Echo.cpp ****     {
1934:Veno-Echo.cpp ****         BaseTempo.setTempo(setting.tempo);
1935:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1936:Veno-Echo.cpp ****     }
1937:Veno-Echo.cpp **** 
1938:Veno-Echo.cpp ****     else
1939:Veno-Echo.cpp ****     {
1940:Veno-Echo.cpp ****         BaseTempo.setTempo(defaultAltControls.tempo);
1941:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1942:Veno-Echo.cpp ****     }
1943:Veno-Echo.cpp **** 
1944:Veno-Echo.cpp ****     if((setting.L_Rev > 0.49f)) //if more than half
1945:Veno-Echo.cpp ****     {
1946:Veno-Echo.cpp ****         Rev_L_sw.turnON();
1947:Veno-Echo.cpp ****     }
1948:Veno-Echo.cpp ****     else    //default OFF
1949:Veno-Echo.cpp ****     {
1950:Veno-Echo.cpp ****         Rev_L_sw.turnOFF();
1951:Veno-Echo.cpp ****     }
1952:Veno-Echo.cpp **** 
1953:Veno-Echo.cpp ****     if((setting.R_Rev > 0.49f)) //if more than half
1954:Veno-Echo.cpp ****     {
1955:Veno-Echo.cpp ****         Rev_R_sw.turnON();
1956:Veno-Echo.cpp ****     }
1957:Veno-Echo.cpp ****     else    //default OFF
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 74


1958:Veno-Echo.cpp ****     {
1959:Veno-Echo.cpp ****         Rev_R_sw.turnOFF();
1960:Veno-Echo.cpp ****     }
1961:Veno-Echo.cpp **** 
1962:Veno-Echo.cpp **** }
1963:Veno-Echo.cpp **** 
1964:Veno-Echo.cpp **** void TurnOnAllLEDs()
1965:Veno-Echo.cpp **** {
1966:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1967:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1968:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1969:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1970:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1971:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1972:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1973:Veno-Echo.cpp **** }
1974:Veno-Echo.cpp **** 
1975:Veno-Echo.cpp **** void ResetAllLEDs()
1976:Veno-Echo.cpp **** {
1977:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1978:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1979:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1980:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1981:Veno-Echo.cpp ****     {
1982:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1983:Veno-Echo.cpp ****     }
1984:Veno-Echo.cpp ****     else
1985:Veno-Echo.cpp ****     {
1986:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1987:Veno-Echo.cpp ****     }
1988:Veno-Echo.cpp **** 
1989:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1990:Veno-Echo.cpp ****     {
1991:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1992:Veno-Echo.cpp ****     }
1993:Veno-Echo.cpp ****     else
1994:Veno-Echo.cpp ****     {
1995:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1996:Veno-Echo.cpp ****     }
1997:Veno-Echo.cpp ****     
1998:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1999:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
2000:Veno-Echo.cpp **** }
2001:Veno-Echo.cpp **** 
2002:Veno-Echo.cpp **** float HardLimit(float input, float limit)
2003:Veno-Echo.cpp **** {
2004:Veno-Echo.cpp ****     float returnval{};
2005:Veno-Echo.cpp ****     if (input > limit)
2006:Veno-Echo.cpp ****         returnval = limit;
2007:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2008:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2009:Veno-Echo.cpp ****     else
2010:Veno-Echo.cpp ****         returnval = input;
2011:Veno-Echo.cpp **** 
2012:Veno-Echo.cpp ****     return returnval;   
2013:Veno-Echo.cpp **** }
2014:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 75


2015:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1143              		.loc 20 2015 7 view .LVU239
 1144              	.LBB995:
2016:Veno-Echo.cpp **** {
2017:Veno-Echo.cpp ****     float output{};
 1145              		.loc 20 2017 5 view .LVU240
2018:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1146              		.loc 20 2018 5 view .LVU241
 1147              	.LBE995:
 1148              	.LBE994:
 904:Veno-Echo.cpp ****         }
 1149              		.loc 20 904 36 is_stmt 0 view .LVU242
 1150 0042 6E49     		ldr	r1, .L75+28
 1151              	.LBB999:
 1152              	.LBB996:
 1153              		.loc 20 2018 39 view .LVU243
 1154 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1155              		.loc 20 2018 49 view .LVU244
 1156 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1157              	.LBE996:
 1158              	.LBE999:
 904:Veno-Echo.cpp ****         }
 1159              		.loc 20 904 36 view .LVU245
 1160 004c 6C4A     		ldr	r2, .L75+32
 1161              	.LBB1000:
 1162              	.LBB997:
 1163              		.loc 20 2018 39 view .LVU246
 1164 004e 91ED007A 		vldr.32	s14, [r1]
 1165              		.loc 20 2018 12 view .LVU247
 1166 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1167 0056 D2ED007A 		vldr.32	s15, [r2]
 1168              		.loc 20 2018 39 view .LVU248
 1169 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1170              		.loc 20 2018 49 view .LVU249
 1171 005e 37EE657A 		vsub.f32	s14, s14, s11
 1172              		.loc 20 2018 12 view .LVU250
 1173 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1174              	.LVL43:
2019:Veno-Echo.cpp **** 
2020:Veno-Echo.cpp ****     if(output < 0.0f)
 1175              		.loc 20 2020 5 is_stmt 1 view .LVU251
 1176 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1177 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1178 006e 00F1B180 		bmi	.L73
2021:Veno-Echo.cpp ****     {
2022:Veno-Echo.cpp ****         output = 0.0f;
2023:Veno-Echo.cpp ****     }
2024:Veno-Echo.cpp **** 
2025:Veno-Echo.cpp ****     if(output > 1.0f)
 1179              		.loc 20 2025 5 view .LVU252
2026:Veno-Echo.cpp ****     {
2027:Veno-Echo.cpp ****         output = 1.0f;
 1180              		.loc 20 2027 16 is_stmt 0 view .LVU253
 1181 0072 F4EE667A 		vcmp.f32	s15, s13
 1182 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1183 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1184              	.LVL44:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 76


 1185              	.L50:
 1186              		.loc 20 2027 16 view .LVU254
 1187              	.LBE997:
 1188              	.LBE1000:
 907:Veno-Echo.cpp ****         {
 1189              		.loc 20 907 9 is_stmt 1 view .LVU255
 1190 007e 93B9     		cbnz	r3, .L42
 909:Veno-Echo.cpp ****             {
 1191              		.loc 20 909 13 view .LVU256
 909:Veno-Echo.cpp ****             {
 1192              		.loc 20 909 35 is_stmt 0 view .LVU257
 1193 0080 604B     		ldr	r3, .L75+36
 1194 0082 B0EE670A 		vmov.f32	s0, s15
 1195              	.LVL45:
 909:Veno-Echo.cpp ****             {
 1196              		.loc 20 909 35 view .LVU258
 1197 0086 6048     		ldr	r0, .L75+40
 1198 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1199              	.LBE1012:
 1200              	.LBE1067:
 949:Veno-Echo.cpp **** 
 1201              		.loc 20 949 1 view .LVU259
 1202 008a BDE81040 		pop	{r4, lr}
 1203              		.cfi_remember_state
 1204              		.cfi_restore 14
 1205              		.cfi_restore 4
 1206              		.cfi_def_cfa_offset 0
 1207              	.LBB1068:
 1208              	.LBB1013:
 909:Veno-Echo.cpp ****             {
 1209              		.loc 20 909 35 view .LVU260
 1210 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1211              	.LVL46:
 1212              	.L43:
 1213              		.cfi_restore_state
 909:Veno-Echo.cpp ****             {
 1214              		.loc 20 909 35 view .LVU261
 1215              	.LBE1013:
 1216              	.LBB1014:
 918:Veno-Echo.cpp **** 
 1217              		.loc 20 918 9 is_stmt 1 view .LVU262
 920:Veno-Echo.cpp ****         {
 1218              		.loc 20 920 9 view .LVU263
 1219 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1220 0094 002B     		cmp	r3, #0
 1221 0096 3CD1     		bne	.L53
 922:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1222              		.loc 20 922 13 view .LVU264
 922:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1223              		.loc 20 922 23 is_stmt 0 view .LVU265
 1224 0098 0124     		movs	r4, #1
 923:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1225              		.loc 20 923 34 view .LVU266
 1226 009a 5C48     		ldr	r0, .L75+44
 924:Veno-Echo.cpp ****         }
 1227              		.loc 20 924 31 view .LVU267
 1228 009c 5C49     		ldr	r1, .L75+48
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 77


 922:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1229              		.loc 20 922 23 view .LVU268
 1230 009e 1470     		strb	r4, [r2]
 923:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1231              		.loc 20 923 13 is_stmt 1 view .LVU269
 923:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1232              		.loc 20 923 34 is_stmt 0 view .LVU270
 1233 00a0 0370     		strb	r3, [r0]
 924:Veno-Echo.cpp ****         }
 1234              		.loc 20 924 13 is_stmt 1 view .LVU271
 924:Veno-Echo.cpp ****         }
 1235              		.loc 20 924 31 is_stmt 0 view .LVU272
 1236 00a2 81ED000A 		vstr.32	s0, [r1]
 1237              	.L42:
 924:Veno-Echo.cpp ****         }
 1238              		.loc 20 924 31 view .LVU273
 1239              	.LBE1014:
 1240              	.LBE1068:
 949:Veno-Echo.cpp **** 
 1241              		.loc 20 949 1 view .LVU274
 1242 00a6 10BD     		pop	{r4, pc}
 1243              	.L44:
 1244              	.LBB1069:
 1245              	.LBB1062:
 885:Veno-Echo.cpp ****             {
 1246              		.loc 20 885 13 is_stmt 1 view .LVU275
 885:Veno-Echo.cpp ****             {
 1247              		.loc 20 885 16 is_stmt 0 view .LVU276
 1248 00a8 524A     		ldr	r2, .L75+20
 885:Veno-Echo.cpp ****             {
 1249              		.loc 20 885 13 view .LVU277
 1250 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1251 00ac 79B9     		cbnz	r1, .L46
 887:Veno-Echo.cpp ****                 {
 1252              		.loc 20 887 17 is_stmt 1 view .LVU278
 1253              	.LVL47:
 1254              	.LBB1001:
 1255              	.LBI1001:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1256              		.loc 21 75 3 view .LVU279
 1257              	.LBB1002:
 1258              		.loc 21 76 5 view .LVU280
 1259              		.loc 21 76 5 is_stmt 0 view .LVU281
 1260              	.LBE1002:
 1261              	.LBE1001:
 887:Veno-Echo.cpp ****                 {
 1262              		.loc 20 887 23 view .LVU282
 1263 00ae 5249     		ldr	r1, .L75+24
 887:Veno-Echo.cpp ****                 {
 1264              		.loc 20 887 17 view .LVU283
 1265 00b0 9FED587A 		vldr.32	s14, .L75+52
 887:Veno-Echo.cpp ****                 {
 1266              		.loc 20 887 23 view .LVU284
 1267 00b4 D1ED007A 		vldr.32	s15, [r1]
 1268 00b8 70EE677A 		vsub.f32	s15, s0, s15
 1269              	.LBB1004:
 1270              	.LBB1003:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 78


 1271              		.loc 21 76 31 view .LVU285
 1272 00bc F0EEE77A 		vabs.f32	s15, s15
 1273              	.LBE1003:
 1274              	.LBE1004:
 887:Veno-Echo.cpp ****                 {
 1275              		.loc 20 887 17 view .LVU286
 1276 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1277 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 00c8 BBDD     		ble	.L45
 889:Veno-Echo.cpp ****                 }
 1279              		.loc 20 889 21 is_stmt 1 view .LVU287
 889:Veno-Echo.cpp ****                 }
 1280              		.loc 20 889 39 is_stmt 0 view .LVU288
 1281 00ca 0121     		movs	r1, #1
 1282 00cc 1170     		strb	r1, [r2]
 1283              	.L46:
 894:Veno-Echo.cpp **** 
 1284              		.loc 20 894 9 is_stmt 1 view .LVU289
 1285              	.LVL48:
 896:Veno-Echo.cpp ****         {
 1286              		.loc 20 896 9 view .LVU290
 898:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1287              		.loc 20 898 13 view .LVU291
 1288              	.LBB1005:
 1289              	.LBI1005:
2015:Veno-Echo.cpp **** {
 1290              		.loc 20 2015 7 view .LVU292
 1291              	.LBB1006:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1292              		.loc 20 2017 5 view .LVU293
2018:Veno-Echo.cpp **** 
 1293              		.loc 20 2018 5 view .LVU294
 1294              	.LBE1006:
 1295              	.LBE1005:
 898:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1296              		.loc 20 898 36 is_stmt 0 view .LVU295
 1297 00ce 4B4A     		ldr	r2, .L75+28
 1298              	.LBB1009:
 1299              	.LBB1007:
2018:Veno-Echo.cpp **** 
 1300              		.loc 20 2018 39 view .LVU296
 1301 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
2018:Veno-Echo.cpp **** 
 1302              		.loc 20 2018 49 view .LVU297
 1303 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
2018:Veno-Echo.cpp **** 
 1304              		.loc 20 2018 39 view .LVU298
 1305 00d8 D2ED007A 		vldr.32	s15, [r2]
2018:Veno-Echo.cpp **** 
 1306              		.loc 20 2018 12 view .LVU299
 1307 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
2018:Veno-Echo.cpp **** 
 1308              		.loc 20 2018 39 view .LVU300
 1309 00e0 77EE677A 		vsub.f32	s15, s14, s15
2018:Veno-Echo.cpp **** 
 1310              		.loc 20 2018 49 view .LVU301
 1311 00e4 77EEC67A 		vsub.f32	s15, s15, s12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 79


2018:Veno-Echo.cpp **** 
 1312              		.loc 20 2018 12 view .LVU302
 1313 00e8 B0EE406A 		vmov.f32	s12, s0
 1314 00ec A7EEA66A 		vfma.f32	s12, s15, s13
2020:Veno-Echo.cpp ****     {
 1315              		.loc 20 2020 5 view .LVU303
 1316 00f0 B5EEC06A 		vcmpe.f32	s12, #0
2018:Veno-Echo.cpp **** 
 1317              		.loc 20 2018 12 view .LVU304
 1318 00f4 F0EE467A 		vmov.f32	s15, s12
 1319              	.LVL49:
2020:Veno-Echo.cpp ****     {
 1320              		.loc 20 2020 5 is_stmt 1 view .LVU305
 1321 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1322 00fc 6DD4     		bmi	.L74
2025:Veno-Echo.cpp ****     {
 1323              		.loc 20 2025 5 view .LVU306
 1324              		.loc 20 2027 16 is_stmt 0 view .LVU307
 1325 00fe F4EE477A 		vcmp.f32	s15, s14
 1326 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1327 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1328              	.L48:
 1329              	.LVL50:
2028:Veno-Echo.cpp ****     }
2029:Veno-Echo.cpp **** 
2030:Veno-Echo.cpp ****     return output;
 1330              		.loc 20 2030 5 is_stmt 1 view .LVU308
 1331              		.loc 20 2030 5 is_stmt 0 view .LVU309
 1332              	.LBE1007:
 1333              	.LBE1009:
 899:Veno-Echo.cpp ****         }
 1334              		.loc 20 899 13 is_stmt 1 view .LVU310
 899:Veno-Echo.cpp ****         }
 1335              		.loc 20 899 29 is_stmt 0 view .LVU311
 1336 010a 3D4A     		ldr	r2, .L75+32
 1337 010c 82ED000A 		vstr.32	s0, [r2]
 1338 0110 B5E7     		b	.L50
 1339              	.LVL51:
 1340              	.L53:
 899:Veno-Echo.cpp ****         }
 1341              		.loc 20 899 29 view .LVU312
 1342              	.LBE1062:
 1343              	.LBB1063:
 929:Veno-Echo.cpp ****             {
 1344              		.loc 20 929 13 is_stmt 1 view .LVU313
 929:Veno-Echo.cpp ****             {
 1345              		.loc 20 929 16 is_stmt 0 view .LVU314
 1346 0112 3E4B     		ldr	r3, .L75+44
 929:Veno-Echo.cpp ****             {
 1347              		.loc 20 929 13 view .LVU315
 1348 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1349 0116 7AB9     		cbnz	r2, .L54
 931:Veno-Echo.cpp ****                 {
 1350              		.loc 20 931 17 is_stmt 1 view .LVU316
 1351              	.LVL52:
 1352              	.LBB1015:
 1353              	.LBI1015:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 80


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1354              		.loc 21 75 3 view .LVU317
 1355              	.LBB1016:
 1356              		.loc 21 76 5 view .LVU318
 1357              		.loc 21 76 5 is_stmt 0 view .LVU319
 1358              	.LBE1016:
 1359              	.LBE1015:
 931:Veno-Echo.cpp ****                 {
 1360              		.loc 20 931 23 view .LVU320
 1361 0118 3D4A     		ldr	r2, .L75+48
 931:Veno-Echo.cpp ****                 {
 1362              		.loc 20 931 17 view .LVU321
 1363 011a 9FED3E7A 		vldr.32	s14, .L75+52
 931:Veno-Echo.cpp ****                 {
 1364              		.loc 20 931 23 view .LVU322
 1365 011e D2ED007A 		vldr.32	s15, [r2]
 1366 0122 70EE677A 		vsub.f32	s15, s0, s15
 1367              	.LBB1018:
 1368              	.LBB1017:
 1369              		.loc 21 76 31 view .LVU323
 1370 0126 F0EEE77A 		vabs.f32	s15, s15
 1371              	.LBE1017:
 1372              	.LBE1018:
 931:Veno-Echo.cpp ****                 {
 1373              		.loc 20 931 17 view .LVU324
 1374 012a F4EEC77A 		vcmpe.f32	s15, s14
 1375 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376 0132 B8DD     		ble	.L42
 933:Veno-Echo.cpp ****                 }
 1377              		.loc 20 933 21 is_stmt 1 view .LVU325
 933:Veno-Echo.cpp ****                 }
 1378              		.loc 20 933 42 is_stmt 0 view .LVU326
 1379 0134 0122     		movs	r2, #1
 1380 0136 1A70     		strb	r2, [r3]
 1381              	.L54:
 938:Veno-Echo.cpp ****         {
 1382              		.loc 20 938 9 is_stmt 1 view .LVU327
 1383              	.LBB1019:
 940:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1384              		.loc 20 940 13 view .LVU328
 940:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1385              		.loc 20 940 38 is_stmt 0 view .LVU329
 1386 0138 0120     		movs	r0, #1
 1387 013a 9FED371A 		vldr.32	s2, .L75+56
 1388 013e DFED370A 		vldr.32	s1, .L75+60
 1389 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1390              	.LVL53:
 1391              	.LBB1020:
 1392              	.LBB1021:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1393              		.loc 20 70 28 view .LVU330
 1394 0146 364B     		ldr	r3, .L75+64
 1395              	.LVL54:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1396              		.loc 20 70 28 view .LVU331
 1397              	.LBE1021:
 1398              	.LBE1020:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 81


 941:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1399              		.loc 20 941 13 is_stmt 1 view .LVU332
 1400              	.LBB1035:
 1401              	.LBI1020:
  68:Veno-Echo.cpp ****     {
 1402              		.loc 20 68 10 view .LVU333
 1403              	.LBB1033:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1404              		.loc 20 70 9 view .LVU334
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 53 is_stmt 0 view .LVU335
 1406 0148 DFED326A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1407              		.loc 20 70 28 view .LVU336
 1408 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1409              	.LVL55:
 1410              	.LBB1022:
 1411              	.LBI1022:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1412              		.loc 21 75 3 is_stmt 1 view .LVU337
 1413              	.LBB1023:
 1414              		.loc 21 76 5 view .LVU338
 1415              		.loc 21 76 5 is_stmt 0 view .LVU339
 1416              	.LBE1023:
 1417              	.LBE1022:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1418              		.loc 20 70 15 view .LVU340
 1419 0150 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1420              		.loc 20 70 53 view .LVU341
 1421 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1422              	.LBB1025:
 1423              	.LBB1024:
 1424              		.loc 21 76 31 view .LVU342
 1425 0158 B0EEC77A 		vabs.f32	s14, s14
 1426              	.LBE1024:
 1427              	.LBE1025:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1428              		.loc 20 70 9 view .LVU343
 1429 015c B4EEE77A 		vcmpe.f32	s14, s15
 1430 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1431 0164 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1432              		.loc 20 74 29 view .LVU344
 1433 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1434              	.LBB1026:
 1435              	.LBB1027:
 1436              		.loc 19 72 9 view .LVU345
 1437 016a 2E4C     		ldr	r4, .L75+68
 1438              	.LBE1027:
 1439              	.LBE1026:
 1440              	.LBE1033:
 1441              	.LBE1035:
 941:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1442              		.loc 20 941 37 view .LVU346
 1443 016c 1968     		ldr	r1, [r3]
 1444              	.LBB1036:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 82


 1445              	.LBB1034:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1446              		.loc 20 73 13 is_stmt 1 view .LVU347
 1447              	.LBB1030:
 1448              	.LBB1028:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1449              		.loc 19 71 9 is_stmt 0 view .LVU348
 1450 016e 0020     		movs	r0, #0
 1451              	.LBE1028:
 1452              	.LBE1030:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1453              		.loc 20 73 27 view .LVU349
 1454 0170 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1455              		.loc 20 74 13 is_stmt 1 view .LVU350
 1456              	.LVL56:
 1457              	.LBB1031:
 1458              	.LBI1026:
  69:delayline_reverse.h ****     {
 1459              		.loc 19 69 17 view .LVU351
  69:delayline_reverse.h ****     {
 1460              		.loc 19 69 17 is_stmt 0 view .LVU352
 1461              	.LBE1031:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1462              		.loc 20 74 29 view .LVU353
 1463 0174 17EE902A 		vmov	r2, s15	@ int
 1464              	.LBB1032:
 1465              	.LBB1029:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1466              		.loc 19 71 9 view .LVU354
 1467 0178 0860     		str	r0, [r1]	@ float
 1468              		.loc 19 72 9 view .LVU355
 1469 017a A242     		cmp	r2, r4
 1470 017c 28BF     		it	cs
 1471 017e 2246     		movcs	r2, r4
 1472 0180 0A61     		str	r2, [r1, #16]
 1473              	.LVL57:
 1474              	.L62:
 1475              		.loc 19 72 9 view .LVU356
 1476              	.LBE1029:
 1477              	.LBE1032:
 1478              	.LBE1034:
 1479              	.LBE1036:
 942:Veno-Echo.cpp ****             //save setting:
 1480              		.loc 20 942 13 is_stmt 1 view .LVU357
 1481              	.LBB1037:
 1482              	.LBI1037:
  68:Veno-Echo.cpp ****     {
 1483              		.loc 20 68 10 view .LVU358
 1484              	.LBB1038:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1485              		.loc 20 70 9 view .LVU359
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 28 is_stmt 0 view .LVU360
 1487 0182 294B     		ldr	r3, .L75+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1488              		.loc 20 70 53 view .LVU361
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 83


 1489 0184 DFED236A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1490              		.loc 20 70 28 view .LVU362
 1491 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1492              	.LVL58:
 1493              	.LBB1039:
 1494              	.LBI1039:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1495              		.loc 21 75 3 is_stmt 1 view .LVU363
 1496              	.LBB1040:
 1497              		.loc 21 76 5 view .LVU364
 1498              		.loc 21 76 5 is_stmt 0 view .LVU365
 1499              	.LBE1040:
 1500              	.LBE1039:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1501              		.loc 20 70 15 view .LVU366
 1502 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1503              		.loc 20 70 53 view .LVU367
 1504 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1505              	.LBB1042:
 1506              	.LBB1041:
 1507              		.loc 21 76 31 view .LVU368
 1508 0194 B0EEC77A 		vabs.f32	s14, s14
 1509              	.LBE1041:
 1510              	.LBE1042:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1511              		.loc 20 70 9 view .LVU369
 1512 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1513 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1514 01a0 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1515              		.loc 20 74 29 view .LVU370
 1516 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1517              	.LBB1043:
 1518              	.LBB1044:
 1519              		.loc 19 72 9 view .LVU371
 1520 01a6 1F4C     		ldr	r4, .L75+68
 1521              	.LBE1044:
 1522              	.LBE1043:
 1523              	.LBE1038:
 1524              	.LBE1037:
 942:Veno-Echo.cpp ****             //save setting:
 1525              		.loc 20 942 37 view .LVU372
 1526 01a8 1968     		ldr	r1, [r3]
 1527              	.LBB1051:
 1528              	.LBB1050:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1529              		.loc 20 73 13 is_stmt 1 view .LVU373
 1530              	.LBB1047:
 1531              	.LBB1045:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1532              		.loc 19 71 9 is_stmt 0 view .LVU374
 1533 01aa 0020     		movs	r0, #0
 1534              	.LBE1045:
 1535              	.LBE1047:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 84


 1536              		.loc 20 73 27 view .LVU375
 1537 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1538              		.loc 20 74 13 is_stmt 1 view .LVU376
 1539              	.LVL59:
 1540              	.LBB1048:
 1541              	.LBI1043:
  69:delayline_reverse.h ****     {
 1542              		.loc 19 69 17 view .LVU377
  69:delayline_reverse.h ****     {
 1543              		.loc 19 69 17 is_stmt 0 view .LVU378
 1544              	.LBE1048:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1545              		.loc 20 74 29 view .LVU379
 1546 01b0 17EE902A 		vmov	r2, s15	@ int
 1547              	.LBB1049:
 1548              	.LBB1046:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1549              		.loc 19 71 9 view .LVU380
 1550 01b4 0860     		str	r0, [r1]	@ float
 1551              		.loc 19 72 9 view .LVU381
 1552 01b6 A242     		cmp	r2, r4
 1553 01b8 28BF     		it	cs
 1554 01ba 2246     		movcs	r2, r4
 1555 01bc 0A61     		str	r2, [r1, #16]
 1556              	.LVL60:
 1557              	.L56:
 1558              		.loc 19 72 9 view .LVU382
 1559              	.LBE1046:
 1560              	.LBE1049:
 1561              	.LBE1050:
 1562              	.LBE1051:
 944:Veno-Echo.cpp ****             save_flag = true;
 1563              		.loc 20 944 13 is_stmt 1 view .LVU383
 944:Veno-Echo.cpp ****             save_flag = true;
 1564              		.loc 20 944 35 is_stmt 0 view .LVU384
 1565 01be 1B49     		ldr	r1, .L75+76
 1566              	.LBB1052:
 1567              	.LBB1053:
 1568              	.LBB1054:
 1569              	.LBB1055:
 1570              	.LBB1056:
 1571              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 85


  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 86


  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 87


 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 88


 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 89


 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 90


 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 91


 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 1572              		.loc 22 397 18 view .LVU385
 1573 01c0 0122     		movs	r2, #1
 1574 01c2 1B4B     		ldr	r3, .L75+80
 1575              	.LBE1056:
 1576              	.LBE1055:
 1577              	.LBE1054:
 1578              	.LBE1053:
 1579              	.LBE1052:
 944:Veno-Echo.cpp ****             save_flag = true;
 1580              		.loc 20 944 35 view .LVU386
 1581 01c4 81ED000A 		vstr.32	s0, [r1]
 945:Veno-Echo.cpp ****         }
 1582              		.loc 20 945 13 is_stmt 1 view .LVU387
 1583              	.LVL61:
 1584              	.LBB1061:
 1585              	.LBI1052:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 92


 1586              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 93


  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
 1587              		.loc 23 80 5 view .LVU388
 1588              	.LBB1060:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 1589              		.loc 23 81 7 view .LVU389
 1590              	.LBB1059:
 1591              	.LBI1054:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1592              		.loc 22 288 7 view .LVU390
 1593              	.LBB1058:
 1594              	.LBI1055:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1595              		.loc 22 390 7 view .LVU391
 1596              	.LBB1057:
 1597              		.loc 22 397 18 is_stmt 0 view .LVU392
 1598 01c8 BFF35B8F 		dmb	ish
 1599 01cc 1A70     		strb	r2, [r3]
 1600 01ce BFF35B8F 		dmb	ish
 1601              	.LVL62:
 1602              		.loc 22 397 18 view .LVU393
 1603              	.LBE1057:
 1604              	.LBE1058:
 1605              	.LBE1059:
 1606              	.LBE1060:
 1607              	.LBE1061:
 1608              	.LBE1019:
 1609              	.LBE1063:
 1610              	.LBE1069:
 949:Veno-Echo.cpp **** 
 1611              		.loc 20 949 1 view .LVU394
 1612 01d2 10BD     		pop	{r4, pc}
 1613              	.LVL63:
 1614              	.L73:
 1615              	.LBB1070:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 94


 1616              	.LBB1064:
 1617              	.LBB1010:
 1618              	.LBB998:
2022:Veno-Echo.cpp ****     }
 1619              		.loc 20 2022 16 view .LVU395
 1620 01d4 DFED177A 		vldr.32	s15, .L75+84
 1621              	.LVL64:
2022:Veno-Echo.cpp ****     }
 1622              		.loc 20 2022 16 view .LVU396
 1623 01d8 51E7     		b	.L50
 1624              	.LVL65:
 1625              	.L74:
2022:Veno-Echo.cpp ****     }
 1626              		.loc 20 2022 16 view .LVU397
 1627              	.LBE998:
 1628              	.LBE1010:
 1629              	.LBB1011:
 1630              	.LBB1008:
 1631 01da DFED167A 		vldr.32	s15, .L75+84
 1632 01de 94E7     		b	.L48
 1633              	.L76:
 1634              		.align	2
 1635              	.L75:
 1636 01e0 18000000 		.word	.LANCHOR4+24
 1637 01e4 00000000 		.word	.LANCHOR6
 1638 01e8 ABAAAA2A 		.word	715827883
 1639 01ec 00000000 		.word	.LANCHOR7
 1640 01f0 00000000 		.word	.LANCHOR8
 1641 01f4 00000000 		.word	.LANCHOR9
 1642 01f8 00000000 		.word	.LANCHOR10
 1643 01fc 00000000 		.word	.LANCHOR5
 1644 0200 00000000 		.word	.LANCHOR11
 1645 0204 00000000 		.word	.LANCHOR12
 1646 0208 00000000 		.word	.LANCHOR0
 1647 020c 00000000 		.word	.LANCHOR13
 1648 0210 00000000 		.word	.LANCHOR14
 1649 0214 0AD7A33B 		.word	1000593162
 1650 0218 0050C346 		.word	1187205120
 1651 021c 00606A48 		.word	1214930944
 1652 0220 00000000 		.word	.LANCHOR2
 1653 0224 BF270900 		.word	599999
 1654 0228 00000000 		.word	.LANCHOR3
 1655 022c 00000000 		.word	.LANCHOR15
 1656 0230 00000000 		.word	.LANCHOR16
 1657 0234 00000000 		.word	0
 1658              	.LBE1008:
 1659              	.LBE1011:
 1660              	.LBE1064:
 1661              	.LBE1070:
 1662              		.cfi_endproc
 1663              	.LFE4802:
 1665              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1666              		.align	1
 1667              		.p2align 2,,3
 1668              		.global	_Z20Update_DelayTimeR_CVv
 1669              		.syntax unified
 1670              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 95


 1671              		.thumb_func
 1672              		.fpu fpv5-d16
 1674              	_Z20Update_DelayTimeR_CVv:
 1675              	.LFB4803:
 952:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1676              		.loc 20 952 1 is_stmt 1 view -0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 953:Veno-Echo.cpp **** }
 1680              		.loc 20 953 5 view .LVU399
 952:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1681              		.loc 20 952 1 is_stmt 0 view .LVU400
 1682 0000 08B5     		push	{r3, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 3, -8
 1685              		.cfi_offset 14, -4
 953:Veno-Echo.cpp **** }
 1686              		.loc 20 953 36 view .LVU401
 1687 0002 0121     		movs	r1, #1
 1688 0004 0348     		ldr	r0, .L79
 1689 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1690              	.LVL66:
 953:Veno-Echo.cpp **** }
 1691              		.loc 20 953 19 view .LVU402
 1692 000a 034B     		ldr	r3, .L79+4
 1693 000c 83ED000A 		vstr.32	s0, [r3]
 954:Veno-Echo.cpp **** 
 1694              		.loc 20 954 1 view .LVU403
 1695 0010 08BD     		pop	{r3, pc}
 1696              	.L80:
 1697 0012 00BF     		.align	2
 1698              	.L79:
 1699 0014 18000000 		.word	.LANCHOR4+24
 1700 0018 00000000 		.word	.LANCHOR17
 1701              		.cfi_endproc
 1702              	.LFE4803:
 1704              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1705              		.align	1
 1706              		.p2align 2,,3
 1707              		.global	_Z17Update_DelayTimeRv
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	_Z17Update_DelayTimeRv:
 1714              	.LFB4804:
 957:Veno-Echo.cpp ****     static bool lastShift{};
 1715              		.loc 20 957 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 958:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1719              		.loc 20 958 5 view .LVU405
 959:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1720              		.loc 20 959 5 view .LVU406
 960:Veno-Echo.cpp ****     
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 96


 1721              		.loc 20 960 5 view .LVU407
 962:Veno-Echo.cpp **** 
 1722              		.loc 20 962 5 view .LVU408
 965:Veno-Echo.cpp **** 
 1723              		.loc 20 965 5 view .LVU409
 957:Veno-Echo.cpp ****     static bool lastShift{};
 1724              		.loc 20 957 1 is_stmt 0 view .LVU410
 1725 0000 10B5     		push	{r4, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 4, -8
 1728              		.cfi_offset 14, -4
 965:Veno-Echo.cpp **** 
 1729              		.loc 20 965 44 view .LVU411
 1730 0002 0622     		movs	r2, #6
 1731 0004 0721     		movs	r1, #7
 1732 0006 6948     		ldr	r0, .L111
 957:Veno-Echo.cpp ****     static bool lastShift{};
 1733              		.loc 20 957 1 view .LVU412
 1734 0008 2DED028B 		vpush.64	{d8}
 1735              		.cfi_def_cfa_offset 16
 1736              		.cfi_offset 80, -16
 1737              		.cfi_offset 81, -12
 965:Veno-Echo.cpp **** 
 1738              		.loc 20 965 44 view .LVU413
 1739 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1740              	.LVL67:
 970:Veno-Echo.cpp **** 
 1741              		.loc 20 970 26 view .LVU414
 1742 0010 6749     		ldr	r1, .L111+4
 970:Veno-Echo.cpp **** 
 1743              		.loc 20 970 31 view .LVU415
 1744 0012 684B     		ldr	r3, .L111+8
 1745              	.LVL68:
 969:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1746              		.loc 20 969 5 is_stmt 1 view .LVU416
 970:Veno-Echo.cpp **** 
 1747              		.loc 20 970 5 view .LVU417
 970:Veno-Echo.cpp **** 
 1748              		.loc 20 970 26 is_stmt 0 view .LVU418
 1749 0014 0A68     		ldr	r2, [r1]
 1750              	.LBB1071:
 972:Veno-Echo.cpp ****     {
 1751              		.loc 20 972 9 view .LVU419
 1752 0016 6848     		ldr	r0, .L111+12
 1753              	.LBE1071:
 970:Veno-Echo.cpp **** 
 1754              		.loc 20 970 26 view .LVU420
 1755 0018 0132     		adds	r2, r2, #1
 1756              	.LBB1120:
 972:Veno-Echo.cpp ****     {
 1757              		.loc 20 972 5 view .LVU421
 1758 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1759              	.LBE1120:
 970:Veno-Echo.cpp **** 
 1760              		.loc 20 970 31 view .LVU422
 1761 001c 83FB0243 		smull	r4, r3, r3, r2
 1762 0020 D417     		asrs	r4, r2, #31
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 97


 1763 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1764 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1765 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1766              	.LBB1121:
 1767              	.LBB1072:
 976:Veno-Echo.cpp ****         {
 1768              		.loc 20 976 19 view .LVU423
 1769 002e 634A     		ldr	r2, .L111+16
 1770              	.LBE1072:
 1771              	.LBE1121:
 970:Veno-Echo.cpp **** 
 1772              		.loc 20 970 14 view .LVU424
 1773 0030 0B60     		str	r3, [r1]
 972:Veno-Echo.cpp ****     {
 1774              		.loc 20 972 5 is_stmt 1 view .LVU425
 1775              	.LBB1122:
 1776 0032 90BB     		cbnz	r0, .L82
 1777              	.LBB1091:
 974:Veno-Echo.cpp ****         //udpate pickup
 1778              		.loc 20 974 9 view .LVU426
 976:Veno-Echo.cpp ****         {
 1779              		.loc 20 976 9 view .LVU427
 1780 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1781 0036 0029     		cmp	r1, #0
 1782 0038 3CD0     		beq	.L83
 978:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1783              		.loc 20 978 13 view .LVU428
 979:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1784              		.loc 20 979 31 is_stmt 0 view .LVU429
 1785 003a 614C     		ldr	r4, .L111+20
 980:Veno-Echo.cpp ****         } 
 1786              		.loc 20 980 28 view .LVU430
 1787 003c 6149     		ldr	r1, .L111+24
 978:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1788              		.loc 20 978 23 view .LVU431
 1789 003e 1070     		strb	r0, [r2]
 979:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1790              		.loc 20 979 13 is_stmt 1 view .LVU432
 979:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1791              		.loc 20 979 31 is_stmt 0 view .LVU433
 1792 0040 2070     		strb	r0, [r4]
 980:Veno-Echo.cpp ****         } 
 1793              		.loc 20 980 13 is_stmt 1 view .LVU434
 980:Veno-Echo.cpp ****         } 
 1794              		.loc 20 980 28 is_stmt 0 view .LVU435
 1795 0042 81ED000A 		vstr.32	s0, [r1]
 1796              	.L84:
 993:Veno-Echo.cpp **** 
 1797              		.loc 20 993 9 is_stmt 1 view .LVU436
 1798              	.LVL69:
 995:Veno-Echo.cpp ****         {
 1799              		.loc 20 995 9 view .LVU437
1003:Veno-Echo.cpp ****         }
 1800              		.loc 20 1003 13 view .LVU438
 1801              	.LBB1073:
 1802              	.LBI1073:
2015:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 98


 1803              		.loc 20 2015 7 view .LVU439
 1804              	.LBB1074:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1805              		.loc 20 2017 5 view .LVU440
2018:Veno-Echo.cpp **** 
 1806              		.loc 20 2018 5 view .LVU441
 1807              	.LBE1074:
 1808              	.LBE1073:
1003:Veno-Echo.cpp ****         }
 1809              		.loc 20 1003 36 is_stmt 0 view .LVU442
 1810 0046 6049     		ldr	r1, .L111+28
 1811              	.LBB1078:
 1812              	.LBB1075:
2018:Veno-Echo.cpp **** 
 1813              		.loc 20 2018 39 view .LVU443
 1814 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
2018:Veno-Echo.cpp **** 
 1815              		.loc 20 2018 49 view .LVU444
 1816 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1817              	.LBE1075:
 1818              	.LBE1078:
1003:Veno-Echo.cpp ****         }
 1819              		.loc 20 1003 36 view .LVU445
 1820 0050 5E4A     		ldr	r2, .L111+32
 1821              	.LBB1079:
 1822              	.LBB1076:
2018:Veno-Echo.cpp **** 
 1823              		.loc 20 2018 39 view .LVU446
 1824 0052 91ED007A 		vldr.32	s14, [r1]
2018:Veno-Echo.cpp **** 
 1825              		.loc 20 2018 12 view .LVU447
 1826 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1827 005a D2ED007A 		vldr.32	s15, [r2]
2018:Veno-Echo.cpp **** 
 1828              		.loc 20 2018 39 view .LVU448
 1829 005e 36EEC77A 		vsub.f32	s14, s13, s14
2018:Veno-Echo.cpp **** 
 1830              		.loc 20 2018 49 view .LVU449
 1831 0062 37EE657A 		vsub.f32	s14, s14, s11
2018:Veno-Echo.cpp **** 
 1832              		.loc 20 2018 12 view .LVU450
 1833 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1834              	.LVL70:
2020:Veno-Echo.cpp ****     {
 1835              		.loc 20 2020 5 is_stmt 1 view .LVU451
 1836 006a F5EEC07A 		vcmpe.f32	s15, #0
 1837 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1838 0072 00F18C80 		bmi	.L109
2025:Veno-Echo.cpp ****     {
 1839              		.loc 20 2025 5 view .LVU452
2027:Veno-Echo.cpp ****     }
 1840              		.loc 20 2027 16 is_stmt 0 view .LVU453
 1841 0076 F4EE667A 		vcmp.f32	s15, s13
 1842 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1843 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1844              	.LVL71:
 1845              	.L89:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 99


2027:Veno-Echo.cpp ****     }
 1846              		.loc 20 2027 16 view .LVU454
 1847              	.LBE1076:
 1848              	.LBE1079:
1006:Veno-Echo.cpp ****         {
 1849              		.loc 20 1006 9 is_stmt 1 view .LVU455
 1850 0082 A3B9     		cbnz	r3, .L81
1008:Veno-Echo.cpp ****             {
 1851              		.loc 20 1008 13 view .LVU456
1008:Veno-Echo.cpp ****             {
 1852              		.loc 20 1008 35 is_stmt 0 view .LVU457
 1853 0084 524B     		ldr	r3, .L111+36
 1854 0086 B0EE670A 		vmov.f32	s0, s15
 1855              	.LVL72:
1008:Veno-Echo.cpp ****             {
 1856              		.loc 20 1008 35 view .LVU458
 1857 008a 5248     		ldr	r0, .L111+40
 1858 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1859              	.LBE1091:
 1860              	.LBE1122:
1049:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1861              		.loc 20 1049 1 view .LVU459
 1862 008e BDEC028B 		vldm	sp!, {d8}
 1863              		.cfi_remember_state
 1864              		.cfi_restore 80
 1865              		.cfi_restore 81
 1866              		.cfi_def_cfa_offset 8
 1867 0092 BDE81040 		pop	{r4, lr}
 1868              		.cfi_restore 14
 1869              		.cfi_restore 4
 1870              		.cfi_def_cfa_offset 0
 1871              	.LBB1123:
 1872              	.LBB1092:
1008:Veno-Echo.cpp ****             {
 1873              		.loc 20 1008 35 view .LVU460
 1874 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1875              	.LVL73:
 1876              	.L82:
 1877              		.cfi_restore_state
1008:Veno-Echo.cpp ****             {
 1878              		.loc 20 1008 35 view .LVU461
 1879              	.LBE1092:
 1880              	.LBB1093:
1018:Veno-Echo.cpp **** 
 1881              		.loc 20 1018 9 is_stmt 1 view .LVU462
1020:Veno-Echo.cpp ****         {
 1882              		.loc 20 1020 9 view .LVU463
 1883 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1884 009c 002B     		cmp	r3, #0
 1885 009e 3ED1     		bne	.L92
1022:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1886              		.loc 20 1022 13 view .LVU464
1022:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1887              		.loc 20 1022 23 is_stmt 0 view .LVU465
 1888 00a0 0124     		movs	r4, #1
1023:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1889              		.loc 20 1023 29 view .LVU466
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 100


 1890 00a2 4D48     		ldr	r0, .L111+44
1024:Veno-Echo.cpp ****         }
 1891              		.loc 20 1024 26 view .LVU467
 1892 00a4 4D49     		ldr	r1, .L111+48
1022:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1893              		.loc 20 1022 23 view .LVU468
 1894 00a6 1470     		strb	r4, [r2]
1023:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1895              		.loc 20 1023 13 is_stmt 1 view .LVU469
1023:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1896              		.loc 20 1023 29 is_stmt 0 view .LVU470
 1897 00a8 0370     		strb	r3, [r0]
1024:Veno-Echo.cpp ****         }
 1898              		.loc 20 1024 13 is_stmt 1 view .LVU471
1024:Veno-Echo.cpp ****         }
 1899              		.loc 20 1024 26 is_stmt 0 view .LVU472
 1900 00aa 81ED000A 		vstr.32	s0, [r1]
 1901              	.L81:
1024:Veno-Echo.cpp ****         }
 1902              		.loc 20 1024 26 view .LVU473
 1903              	.LBE1093:
 1904              	.LBE1123:
1049:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1905              		.loc 20 1049 1 view .LVU474
 1906 00ae BDEC028B 		vldm	sp!, {d8}
 1907              		.cfi_remember_state
 1908              		.cfi_restore 80
 1909              		.cfi_restore 81
 1910              		.cfi_def_cfa_offset 8
 1911 00b2 10BD     		pop	{r4, pc}
 1912              	.L83:
 1913              		.cfi_restore_state
 1914              	.LBB1124:
 1915              	.LBB1116:
 984:Veno-Echo.cpp ****             {
 1916              		.loc 20 984 13 is_stmt 1 view .LVU475
 984:Veno-Echo.cpp ****             {
 1917              		.loc 20 984 16 is_stmt 0 view .LVU476
 1918 00b4 424A     		ldr	r2, .L111+20
 984:Veno-Echo.cpp ****             {
 1919              		.loc 20 984 13 view .LVU477
 1920 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1921 00b8 79B9     		cbnz	r1, .L85
 986:Veno-Echo.cpp ****                 {
 1922              		.loc 20 986 17 is_stmt 1 view .LVU478
 1923              	.LVL74:
 1924              	.LBB1080:
 1925              	.LBI1080:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1926              		.loc 21 75 3 view .LVU479
 1927              	.LBB1081:
 1928              		.loc 21 76 5 view .LVU480
 1929              		.loc 21 76 5 is_stmt 0 view .LVU481
 1930              	.LBE1081:
 1931              	.LBE1080:
 986:Veno-Echo.cpp ****                 {
 1932              		.loc 20 986 23 view .LVU482
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 101


 1933 00ba 4249     		ldr	r1, .L111+24
 986:Veno-Echo.cpp ****                 {
 1934              		.loc 20 986 17 view .LVU483
 1935 00bc 9FED487A 		vldr.32	s14, .L111+52
 986:Veno-Echo.cpp ****                 {
 1936              		.loc 20 986 23 view .LVU484
 1937 00c0 D1ED007A 		vldr.32	s15, [r1]
 1938 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1939              	.LBB1083:
 1940              	.LBB1082:
 1941              		.loc 21 76 31 view .LVU485
 1942 00c8 F0EEE77A 		vabs.f32	s15, s15
 1943              	.LBE1082:
 1944              	.LBE1083:
 986:Veno-Echo.cpp ****                 {
 1945              		.loc 20 986 17 view .LVU486
 1946 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1947 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1948 00d4 B7DD     		ble	.L84
 988:Veno-Echo.cpp ****                 }
 1949              		.loc 20 988 21 is_stmt 1 view .LVU487
 988:Veno-Echo.cpp ****                 }
 1950              		.loc 20 988 39 is_stmt 0 view .LVU488
 1951 00d6 0121     		movs	r1, #1
 1952 00d8 1170     		strb	r1, [r2]
 1953              	.L85:
 993:Veno-Echo.cpp **** 
 1954              		.loc 20 993 9 is_stmt 1 view .LVU489
 1955              	.LVL75:
 995:Veno-Echo.cpp ****         {
 1956              		.loc 20 995 9 view .LVU490
 997:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1957              		.loc 20 997 13 view .LVU491
 1958              	.LBB1084:
 1959              	.LBI1084:
2015:Veno-Echo.cpp **** {
 1960              		.loc 20 2015 7 view .LVU492
 1961              	.LBB1085:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1962              		.loc 20 2017 5 view .LVU493
2018:Veno-Echo.cpp **** 
 1963              		.loc 20 2018 5 view .LVU494
 1964              	.LBE1085:
 1965              	.LBE1084:
 997:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1966              		.loc 20 997 36 is_stmt 0 view .LVU495
 1967 00da 3B4A     		ldr	r2, .L111+28
 1968              	.LBB1088:
 1969              	.LBB1086:
2018:Veno-Echo.cpp **** 
 1970              		.loc 20 2018 39 view .LVU496
 1971 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2018:Veno-Echo.cpp **** 
 1972              		.loc 20 2018 49 view .LVU497
 1973 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2018:Veno-Echo.cpp **** 
 1974              		.loc 20 2018 39 view .LVU498
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 102


 1975 00e4 D2ED007A 		vldr.32	s15, [r2]
2018:Veno-Echo.cpp **** 
 1976              		.loc 20 2018 12 view .LVU499
 1977 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2018:Veno-Echo.cpp **** 
 1978              		.loc 20 2018 39 view .LVU500
 1979 00ec 77EE677A 		vsub.f32	s15, s14, s15
2018:Veno-Echo.cpp **** 
 1980              		.loc 20 2018 49 view .LVU501
 1981 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2018:Veno-Echo.cpp **** 
 1982              		.loc 20 2018 12 view .LVU502
 1983 00f4 B0EE406A 		vmov.f32	s12, s0
 1984 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2020:Veno-Echo.cpp ****     {
 1985              		.loc 20 2020 5 view .LVU503
 1986 00fc B5EEC06A 		vcmpe.f32	s12, #0
2018:Veno-Echo.cpp **** 
 1987              		.loc 20 2018 12 view .LVU504
 1988 0100 F0EE467A 		vmov.f32	s15, s12
 1989              	.LVL76:
2020:Veno-Echo.cpp ****     {
 1990              		.loc 20 2020 5 is_stmt 1 view .LVU505
 1991 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1992 0108 44D4     		bmi	.L110
2025:Veno-Echo.cpp ****     {
 1993              		.loc 20 2025 5 view .LVU506
2027:Veno-Echo.cpp ****     }
 1994              		.loc 20 2027 16 is_stmt 0 view .LVU507
 1995 010a F4EE477A 		vcmp.f32	s15, s14
 1996 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1997 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1998              	.L87:
 1999              	.LVL77:
 2000              		.loc 20 2030 5 is_stmt 1 view .LVU508
 2001              		.loc 20 2030 5 is_stmt 0 view .LVU509
 2002              	.LBE1086:
 2003              	.LBE1088:
 998:Veno-Echo.cpp ****         }
 2004              		.loc 20 998 13 is_stmt 1 view .LVU510
 998:Veno-Echo.cpp ****         }
 2005              		.loc 20 998 29 is_stmt 0 view .LVU511
 2006 0116 2D4A     		ldr	r2, .L111+32
 2007 0118 82ED000A 		vstr.32	s0, [r2]
 2008 011c B1E7     		b	.L89
 2009              	.LVL78:
 2010              	.L92:
 998:Veno-Echo.cpp ****         }
 2011              		.loc 20 998 29 view .LVU512
 2012              	.LBE1116:
 2013              	.LBB1117:
1029:Veno-Echo.cpp ****             {
 2014              		.loc 20 1029 13 is_stmt 1 view .LVU513
1029:Veno-Echo.cpp ****             {
 2015              		.loc 20 1029 16 is_stmt 0 view .LVU514
 2016 011e 2E4B     		ldr	r3, .L111+44
1029:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 103


 2017              		.loc 20 1029 13 view .LVU515
 2018 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2019 0122 7AB9     		cbnz	r2, .L93
1031:Veno-Echo.cpp ****                 {
 2020              		.loc 20 1031 17 is_stmt 1 view .LVU516
 2021              	.LVL79:
 2022              	.LBB1094:
 2023              	.LBI1094:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2024              		.loc 21 75 3 view .LVU517
 2025              	.LBB1095:
 2026              		.loc 21 76 5 view .LVU518
 2027              		.loc 21 76 5 is_stmt 0 view .LVU519
 2028              	.LBE1095:
 2029              	.LBE1094:
1031:Veno-Echo.cpp ****                 {
 2030              		.loc 20 1031 23 view .LVU520
 2031 0124 2D4A     		ldr	r2, .L111+48
1031:Veno-Echo.cpp ****                 {
 2032              		.loc 20 1031 17 view .LVU521
 2033 0126 9FED2E7A 		vldr.32	s14, .L111+52
1031:Veno-Echo.cpp ****                 {
 2034              		.loc 20 1031 23 view .LVU522
 2035 012a D2ED007A 		vldr.32	s15, [r2]
 2036 012e 70EE677A 		vsub.f32	s15, s0, s15
 2037              	.LBB1097:
 2038              	.LBB1096:
 2039              		.loc 21 76 31 view .LVU523
 2040 0132 F0EEE77A 		vabs.f32	s15, s15
 2041              	.LBE1096:
 2042              	.LBE1097:
1031:Veno-Echo.cpp ****                 {
 2043              		.loc 20 1031 17 view .LVU524
 2044 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2045 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2046 013e B6DD     		ble	.L81
1033:Veno-Echo.cpp ****                 }
 2047              		.loc 20 1033 21 is_stmt 1 view .LVU525
1033:Veno-Echo.cpp ****                 }
 2048              		.loc 20 1033 37 is_stmt 0 view .LVU526
 2049 0140 0122     		movs	r2, #1
 2050 0142 1A70     		strb	r2, [r3]
 2051              	.L93:
1038:Veno-Echo.cpp ****         {
 2052              		.loc 20 1038 9 is_stmt 1 view .LVU527
 2053              	.LBB1098:
1040:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2054              		.loc 20 1040 13 view .LVU528
 2055              	.LVL80:
1041:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2056              		.loc 20 1041 13 view .LVU529
1041:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2057              		.loc 20 1041 61 is_stmt 0 view .LVU530
 2058 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2059 0148 0020     		movs	r0, #0
 2060 014a 9FED261A 		vldr.32	s2, .L111+56
 2061 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 104


 2062              	.LVL81:
 2063              	.LBB1099:
 2064              	.LBI1099:
 2065              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 105


  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 106


 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 107


 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 108


 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 109


 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 110


 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 111


 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 112


 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 113


 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 114


 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 115


 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 116


 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 117


 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 118


 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 119


 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 120


 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 121


 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 122


1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 123


1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 124


1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 125


1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 126


1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 127


1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 128


1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 129


1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 130


1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 131


1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 132


1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 133


1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 134


1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2066              		.loc 24 1756 3 is_stmt 1 view .LVU531
 2067              	.LBB1100:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2068              		.loc 24 1757 5 view .LVU532
 2069              		.loc 24 1757 28 is_stmt 0 view .LVU533
 2070 0152 B8FE400A 		vrinta.f32	s0, s0
 2071              	.LVL82:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 135


 2072              		.loc 24 1757 28 view .LVU534
 2073              	.LBE1100:
 2074              	.LBE1099:
1042:Veno-Echo.cpp ****             //save setting:
 2075              		.loc 20 1042 13 is_stmt 1 view .LVU535
 2076              	.LBB1101:
 2077              	.LBI1101:
2031:Veno-Echo.cpp **** }
2032:Veno-Echo.cpp **** 
2033:Veno-Echo.cpp **** //checks pickup state of primary controls
2034:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2035:Veno-Echo.cpp **** {
2036:Veno-Echo.cpp ****     bool retval{};
2037:Veno-Echo.cpp ****     
2038:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
2039:Veno-Echo.cpp ****     {
2040:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2041:Veno-Echo.cpp ****         {
2042:Veno-Echo.cpp ****             retval = false;
2043:Veno-Echo.cpp ****         }
2044:Veno-Echo.cpp ****         else
2045:Veno-Echo.cpp ****         {
2046:Veno-Echo.cpp ****             retval = true;
2047:Veno-Echo.cpp ****         }
2048:Veno-Echo.cpp ****     }
2049:Veno-Echo.cpp **** 
2050:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2051:Veno-Echo.cpp ****     {
2052:Veno-Echo.cpp ****     if(!lastState) //if not picked up
2053:Veno-Echo.cpp ****     {
2054:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2055:Veno-Echo.cpp ****         {
2056:Veno-Echo.cpp ****             retval = true;
2057:Veno-Echo.cpp ****         }
2058:Veno-Echo.cpp **** 
2059:Veno-Echo.cpp ****         else
2060:Veno-Echo.cpp ****         {
2061:Veno-Echo.cpp ****             retval = false;
2062:Veno-Echo.cpp ****         }
2063:Veno-Echo.cpp **** 
2064:Veno-Echo.cpp ****     }
2065:Veno-Echo.cpp ****     else    //previous state is picked up
2066:Veno-Echo.cpp ****     {
2067:Veno-Echo.cpp ****         retval = true;  //always return true
2068:Veno-Echo.cpp ****     }
2069:Veno-Echo.cpp **** 
2070:Veno-Echo.cpp ****     }
2071:Veno-Echo.cpp ****     return retval;
2072:Veno-Echo.cpp **** 
2073:Veno-Echo.cpp **** }
2074:Veno-Echo.cpp **** 
2075:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2076:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2077:Veno-Echo.cpp **** {
2078:Veno-Echo.cpp ****     pickupState retval{};
2079:Veno-Echo.cpp **** 
2080:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 136


2081:Veno-Echo.cpp ****     {
2082:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
2083:Veno-Echo.cpp ****         {
2084:Veno-Echo.cpp ****             retval = BELOW;
2085:Veno-Echo.cpp ****         }
2086:Veno-Echo.cpp ****         
2087:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
2088:Veno-Echo.cpp ****         {
2089:Veno-Echo.cpp ****             retval = ABOVE;
2090:Veno-Echo.cpp ****         }
2091:Veno-Echo.cpp **** 
2092:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
2093:Veno-Echo.cpp ****         {
2094:Veno-Echo.cpp ****             retval = PICKEDUP;
2095:Veno-Echo.cpp ****         }
2096:Veno-Echo.cpp ****     }
2097:Veno-Echo.cpp **** 
2098:Veno-Echo.cpp ****     else    //not a recent shift change
2099:Veno-Echo.cpp ****     {
2100:Veno-Echo.cpp ****         switch(lastState)
2101:Veno-Echo.cpp ****         {
2102:Veno-Echo.cpp ****             case BELOW:
2103:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
2104:Veno-Echo.cpp ****                 retval = PICKEDUP;
2105:Veno-Echo.cpp ****             else
2106:Veno-Echo.cpp ****                 retval = lastState;
2107:Veno-Echo.cpp ****             break;
2108:Veno-Echo.cpp **** 
2109:Veno-Echo.cpp ****             case ABOVE:
2110:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2111:Veno-Echo.cpp ****                 retval = PICKEDUP;
2112:Veno-Echo.cpp ****             else
2113:Veno-Echo.cpp ****                 retval = lastState;
2114:Veno-Echo.cpp ****             break;
2115:Veno-Echo.cpp ****             case PICKEDUP:
2116:Veno-Echo.cpp ****                 retval = lastState;
2117:Veno-Echo.cpp ****             break;
2118:Veno-Echo.cpp ****         }
2119:Veno-Echo.cpp ****     }
2120:Veno-Echo.cpp ****     
2121:Veno-Echo.cpp ****     return retval;
2122:Veno-Echo.cpp **** }
2123:Veno-Echo.cpp **** 
2124:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2078              		.loc 20 2124 8 view .LVU536
 2079              	.LBB1102:
2125:Veno-Echo.cpp **** {
2126:Veno-Echo.cpp **** double retVal{};
 2080              		.loc 20 2126 1 view .LVU537
2127:Veno-Echo.cpp ****     switch(ratio)
 2081              		.loc 20 2127 5 view .LVU538
 2082              	.LBE1102:
 2083              	.LBE1101:
1041:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2084              		.loc 20 1041 130 is_stmt 0 view .LVU539
 2085 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2086 015a 17EE903A 		vmov	r3, s15	@ int
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 137


 2087 015e 013B     		subs	r3, r3, #1
 2088 0160 DBB2     		uxtb	r3, r3
 2089 0162 022B     		cmp	r3, #2
 2090 0164 19D9     		bls	.L97
 2091 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2092              	.L98:
 2093              	.LVL83:
 2094              	.LBB1104:
 2095              	.LBB1103:
2128:Veno-Echo.cpp ****     {
2129:Veno-Echo.cpp ****         case QUARTER:
2130:Veno-Echo.cpp ****         retVal = 1.0;
2131:Veno-Echo.cpp ****         break;
2132:Veno-Echo.cpp **** 
2133:Veno-Echo.cpp ****         case DOTTED_EIGHT:
2134:Veno-Echo.cpp ****         retVal = 3.0/2.0;
2135:Veno-Echo.cpp ****         break;
2136:Veno-Echo.cpp **** 
2137:Veno-Echo.cpp ****         case EIGHT:
2138:Veno-Echo.cpp ****         retVal = 2.0;
2139:Veno-Echo.cpp ****         break;
2140:Veno-Echo.cpp **** 
2141:Veno-Echo.cpp ****         case TWELVE:
2142:Veno-Echo.cpp ****         retVal = 3.0;
2143:Veno-Echo.cpp ****         break;
2144:Veno-Echo.cpp **** 
2145:Veno-Echo.cpp ****         default:
2146:Veno-Echo.cpp ****         retVal = 1.0;
2147:Veno-Echo.cpp ****         break;
2148:Veno-Echo.cpp ****     }
2149:Veno-Echo.cpp **** 
2150:Veno-Echo.cpp **** return retVal;
 2096              		.loc 20 2150 1 is_stmt 1 view .LVU540
 2097              		.loc 20 2150 1 is_stmt 0 view .LVU541
 2098              	.LBE1103:
 2099              	.LBE1104:
1042:Veno-Echo.cpp ****             //save setting:
 2100              		.loc 20 1042 34 view .LVU542
 2101 016a B0EE480A 		vmov.f32	s0, s16
 2102              	.LVL84:
1042:Veno-Echo.cpp ****             //save setting:
 2103              		.loc 20 1042 34 view .LVU543
 2104 016e 1E48     		ldr	r0, .L111+60
 2105 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2106              	.LVL85:
1044:Veno-Echo.cpp ****             save_flag = true;
 2107              		.loc 20 1044 13 is_stmt 1 view .LVU544
1044:Veno-Echo.cpp ****             save_flag = true;
 2108              		.loc 20 1044 13 is_stmt 0 view .LVU545
 2109              	.LBE1098:
 2110              	.LBE1117:
 2111              	.LBE1124:
2126:Veno-Echo.cpp ****     switch(ratio)
 2112              		.loc 20 2126 1 is_stmt 1 view .LVU546
2127:Veno-Echo.cpp ****     {
 2113              		.loc 20 2127 5 view .LVU547
 2114              		.loc 20 2150 1 view .LVU548
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 138


 2115              	.LBB1125:
 2116              	.LBB1118:
 2117              	.LBB1115:
1044:Veno-Echo.cpp ****             save_flag = true;
 2118              		.loc 20 1044 34 is_stmt 0 view .LVU549
 2119 0174 1D49     		ldr	r1, .L111+64
 2120              	.LBB1105:
 2121              	.LBB1106:
 2122              	.LBB1107:
 2123              	.LBB1108:
 2124              	.LBB1109:
 2125              		.loc 22 397 18 view .LVU550
 2126 0176 1E4B     		ldr	r3, .L111+68
 2127 0178 0122     		movs	r2, #1
 2128              	.LBE1109:
 2129              	.LBE1108:
 2130              	.LBE1107:
 2131              	.LBE1106:
 2132              	.LBE1105:
1044:Veno-Echo.cpp ****             save_flag = true;
 2133              		.loc 20 1044 34 view .LVU551
 2134 017a 81ED018A 		vstr.32	s16, [r1, #4]
1045:Veno-Echo.cpp ****         }
 2135              		.loc 20 1045 13 is_stmt 1 view .LVU552
 2136              	.LVL86:
 2137              	.LBB1114:
 2138              	.LBI1105:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2139              		.loc 23 80 5 view .LVU553
 2140              	.LBB1113:
 2141              		.loc 23 81 7 view .LVU554
 2142              	.LBB1112:
 2143              	.LBI1107:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2144              		.loc 22 288 7 view .LVU555
 2145              	.LBB1111:
 2146              	.LBI1108:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2147              		.loc 22 390 7 view .LVU556
 2148              	.LBB1110:
 2149              		.loc 22 397 18 is_stmt 0 view .LVU557
 2150 017e BFF35B8F 		dmb	ish
 2151 0182 1A70     		strb	r2, [r3]
 2152 0184 BFF35B8F 		dmb	ish
 2153              	.LVL87:
 2154              		.loc 22 397 18 view .LVU558
 2155              	.LBE1110:
 2156              	.LBE1111:
 2157              	.LBE1112:
 2158              	.LBE1113:
 2159              	.LBE1114:
 2160              	.LBE1115:
 2161              	.LBE1118:
 2162              	.LBE1125:
1049:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2163              		.loc 20 1049 1 view .LVU559
 2164 0188 BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 139


 2165              		.cfi_remember_state
 2166              		.cfi_restore 80
 2167              		.cfi_restore 81
 2168              		.cfi_def_cfa_offset 8
 2169 018c 10BD     		pop	{r4, pc}
 2170              	.LVL88:
 2171              	.L109:
 2172              		.cfi_restore_state
 2173              	.LBB1126:
 2174              	.LBB1119:
 2175              	.LBB1089:
 2176              	.LBB1077:
2022:Veno-Echo.cpp ****     }
 2177              		.loc 20 2022 16 view .LVU560
 2178 018e DFED157A 		vldr.32	s15, .L111+56
 2179              	.LVL89:
2022:Veno-Echo.cpp ****     }
 2180              		.loc 20 2022 16 view .LVU561
 2181 0192 76E7     		b	.L89
 2182              	.LVL90:
 2183              	.L110:
2022:Veno-Echo.cpp ****     }
 2184              		.loc 20 2022 16 view .LVU562
 2185              	.LBE1077:
 2186              	.LBE1089:
 2187              	.LBB1090:
 2188              	.LBB1087:
 2189 0194 DFED137A 		vldr.32	s15, .L111+56
 2190 0198 BDE7     		b	.L87
 2191              	.LVL91:
 2192              	.L97:
2022:Veno-Echo.cpp ****     }
 2193              		.loc 20 2022 16 view .LVU563
 2194 019a 164A     		ldr	r2, .L111+72
 2195 019c 02EBC303 		add	r3, r2, r3, lsl #3
 2196 01a0 93ED008B 		vldr.64	d8, [r3]
 2197 01a4 B7EEC88B 		vcvt.f32.f64	s16, d8
 2198 01a8 DFE7     		b	.L98
 2199              	.L112:
 2200 01aa 00BF     		.align	2
 2201              	.L111:
 2202 01ac 18000000 		.word	.LANCHOR4+24
 2203 01b0 00000000 		.word	.LANCHOR18
 2204 01b4 ABAAAA2A 		.word	715827883
 2205 01b8 00000000 		.word	.LANCHOR7
 2206 01bc 00000000 		.word	.LANCHOR19
 2207 01c0 00000000 		.word	.LANCHOR20
 2208 01c4 00000000 		.word	.LANCHOR21
 2209 01c8 00000000 		.word	.LANCHOR17
 2210 01cc 00000000 		.word	.LANCHOR22
 2211 01d0 00000000 		.word	.LANCHOR12
 2212 01d4 00000000 		.word	.LANCHOR1
 2213 01d8 00000000 		.word	.LANCHOR23
 2214 01dc 00000000 		.word	.LANCHOR24
 2215 01e0 0AD7A33B 		.word	1000593162
 2216 01e4 00000000 		.word	0
 2217 01e8 00000000 		.word	.LANCHOR26
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 140


 2218 01ec 00000000 		.word	.LANCHOR15
 2219 01f0 00000000 		.word	.LANCHOR16
 2220 01f4 00000000 		.word	.LANCHOR25
 2221              	.LBE1087:
 2222              	.LBE1090:
 2223              	.LBE1119:
 2224              	.LBE1126:
 2225              		.cfi_endproc
 2226              	.LFE4804:
 2228              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2229              		.align	1
 2230              		.p2align 2,,3
 2231              		.global	_Z19Update_feedbackL_CVv
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv5-d16
 2237              	_Z19Update_feedbackL_CVv:
 2238              	.LFB4805:
1051:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2239              		.loc 20 1051 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
1052:Veno-Echo.cpp **** }
 2243              		.loc 20 1052 5 view .LVU565
1051:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2244              		.loc 20 1051 1 is_stmt 0 view .LVU566
 2245 0000 08B5     		push	{r3, lr}
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 3, -8
 2248              		.cfi_offset 14, -4
1052:Veno-Echo.cpp **** }
 2249              		.loc 20 1052 35 view .LVU567
 2250 0002 0221     		movs	r1, #2
 2251 0004 0348     		ldr	r0, .L115
 2252 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2253              	.LVL92:
1052:Veno-Echo.cpp **** }
 2254              		.loc 20 1052 18 view .LVU568
 2255 000a 034B     		ldr	r3, .L115+4
 2256 000c 83ED000A 		vstr.32	s0, [r3]
1053:Veno-Echo.cpp **** void Update_feedbackL()
 2257              		.loc 20 1053 1 view .LVU569
 2258 0010 08BD     		pop	{r3, pc}
 2259              	.L116:
 2260 0012 00BF     		.align	2
 2261              	.L115:
 2262 0014 18000000 		.word	.LANCHOR4+24
 2263 0018 00000000 		.word	.LANCHOR27
 2264              		.cfi_endproc
 2265              	.LFE4805:
 2267              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2268              		.align	1
 2269              		.p2align 2,,3
 2270              		.global	_Z16Update_feedbackLv
 2271              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 141


 2272              		.thumb
 2273              		.thumb_func
 2274              		.fpu fpv5-d16
 2276              	_Z16Update_feedbackLv:
 2277              	.LFB4806:
1055:Veno-Echo.cpp ****     static bool lastShift{};
 2278              		.loc 20 1055 1 is_stmt 1 view -0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 0
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
1056:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2282              		.loc 20 1056 5 view .LVU571
1057:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2283              		.loc 20 1057 5 view .LVU572
1058:Veno-Echo.cpp **** 
 2284              		.loc 20 1058 5 view .LVU573
1060:Veno-Echo.cpp **** 
 2285              		.loc 20 1060 5 view .LVU574
1064:Veno-Echo.cpp **** 
 2286              		.loc 20 1064 5 view .LVU575
1064:Veno-Echo.cpp **** 
 2287              		.loc 20 1064 43 is_stmt 0 view .LVU576
 2288 0000 0122     		movs	r2, #1
 2289 0002 0721     		movs	r1, #7
 2290 0004 6548     		ldr	r0, .L145
1055:Veno-Echo.cpp ****     static bool lastShift{};
 2291              		.loc 20 1055 1 view .LVU577
 2292 0006 10B5     		push	{r4, lr}
 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 4, -8
 2295              		.cfi_offset 14, -4
 2296 0008 2DED028B 		vpush.64	{d8}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 80, -16
 2299              		.cfi_offset 81, -12
1064:Veno-Echo.cpp **** 
 2300              		.loc 20 1064 43 view .LVU578
 2301 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2302              	.LVL93:
 2303              	.LBB1127:
1066:Veno-Echo.cpp ****     {   
 2304              		.loc 20 1066 9 view .LVU579
 2305 0010 634B     		ldr	r3, .L145+4
 2306              	.LVL94:
1066:Veno-Echo.cpp ****     {   
 2307              		.loc 20 1066 9 view .LVU580
 2308              	.LBE1127:
1066:Veno-Echo.cpp ****     {   
 2309              		.loc 20 1066 5 is_stmt 1 view .LVU581
 2310              	.LBB1172:
 2311              	.LBB1128:
1070:Veno-Echo.cpp ****         {
 2312              		.loc 20 1070 19 is_stmt 0 view .LVU582
 2313 0012 644A     		ldr	r2, .L145+8
 2314              	.LBE1128:
1066:Veno-Echo.cpp ****     {   
 2315              		.loc 20 1066 5 view .LVU583
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 142


 2316 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 0016 002B     		cmp	r3, #0
 2318 0018 3DD1     		bne	.L118
 2319              	.LBB1151:
1068:Veno-Echo.cpp ****         //update pickup
 2320              		.loc 20 1068 9 is_stmt 1 view .LVU584
1070:Veno-Echo.cpp ****         {
 2321              		.loc 20 1070 9 view .LVU585
 2322 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2323 001c 0029     		cmp	r1, #0
 2324 001e 47D0     		beq	.L119
1072:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2325              		.loc 20 1072 13 view .LVU586
1073:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2326              		.loc 20 1073 30 is_stmt 0 view .LVU587
 2327 0020 6148     		ldr	r0, .L145+12
1074:Veno-Echo.cpp ****         } 
 2328              		.loc 20 1074 27 view .LVU588
 2329 0022 6249     		ldr	r1, .L145+16
1072:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2330              		.loc 20 1072 23 view .LVU589
 2331 0024 1370     		strb	r3, [r2]
1073:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2332              		.loc 20 1073 13 is_stmt 1 view .LVU590
1073:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2333              		.loc 20 1073 30 is_stmt 0 view .LVU591
 2334 0026 0370     		strb	r3, [r0]
1074:Veno-Echo.cpp ****         } 
 2335              		.loc 20 1074 13 is_stmt 1 view .LVU592
1074:Veno-Echo.cpp ****         } 
 2336              		.loc 20 1074 27 is_stmt 0 view .LVU593
 2337 0028 81ED000A 		vstr.32	s0, [r1]
 2338              	.L120:
1087:Veno-Echo.cpp **** 
 2339              		.loc 20 1087 9 is_stmt 1 view .LVU594
 2340              	.LVL95:
1089:Veno-Echo.cpp ****         {
 2341              		.loc 20 1089 9 view .LVU595
1097:Veno-Echo.cpp ****         }
 2342              		.loc 20 1097 13 view .LVU596
 2343              	.LBB1129:
 2344              	.LBI1129:
2015:Veno-Echo.cpp **** {
 2345              		.loc 20 2015 7 view .LVU597
 2346              	.LBB1130:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2347              		.loc 20 2017 5 view .LVU598
2018:Veno-Echo.cpp **** 
 2348              		.loc 20 2018 5 view .LVU599
 2349              	.LBE1130:
 2350              	.LBE1129:
1097:Veno-Echo.cpp ****         }
 2351              		.loc 20 1097 41 is_stmt 0 view .LVU600
 2352 002c 604A     		ldr	r2, .L145+20
 2353              	.LBB1134:
 2354              	.LBB1131:
2018:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 143


 2355              		.loc 20 2018 39 view .LVU601
 2356 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2018:Veno-Echo.cpp **** 
 2357              		.loc 20 2018 49 view .LVU602
 2358 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2359              	.LBE1131:
 2360              	.LBE1134:
1097:Veno-Echo.cpp ****         }
 2361              		.loc 20 1097 41 view .LVU603
 2362 0036 5F4B     		ldr	r3, .L145+24
 2363              	.LBB1135:
 2364              	.LBB1132:
2018:Veno-Echo.cpp **** 
 2365              		.loc 20 2018 39 view .LVU604
 2366 0038 92ED007A 		vldr.32	s14, [r2]
2018:Veno-Echo.cpp **** 
 2367              		.loc 20 2018 12 view .LVU605
 2368 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2369 0040 D3ED007A 		vldr.32	s15, [r3]
2018:Veno-Echo.cpp **** 
 2370              		.loc 20 2018 39 view .LVU606
 2371 0044 36EEC77A 		vsub.f32	s14, s13, s14
2018:Veno-Echo.cpp **** 
 2372              		.loc 20 2018 49 view .LVU607
 2373 0048 37EE657A 		vsub.f32	s14, s14, s11
2018:Veno-Echo.cpp **** 
 2374              		.loc 20 2018 12 view .LVU608
 2375 004c E7EE067A 		vfma.f32	s15, s14, s12
 2376              	.LVL96:
2020:Veno-Echo.cpp ****     {
 2377              		.loc 20 2020 5 is_stmt 1 view .LVU609
 2378 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2379 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2380 0058 00F19A80 		bmi	.L143
2025:Veno-Echo.cpp ****     {
 2381              		.loc 20 2025 5 view .LVU610
2027:Veno-Echo.cpp ****     }
 2382              		.loc 20 2027 16 is_stmt 0 view .LVU611
 2383 005c F4EE667A 		vcmp.f32	s15, s13
 2384 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2385 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2386              	.LVL97:
 2387              	.L125:
2027:Veno-Echo.cpp ****     }
 2388              		.loc 20 2027 16 view .LVU612
 2389              	.LBE1132:
 2390              	.LBE1135:
1100:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2391              		.loc 20 1100 9 is_stmt 1 view .LVU613
1100:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2392              		.loc 20 1100 37 is_stmt 0 view .LVU614
 2393 0068 B0EE670A 		vmov.f32	s0, s15
 2394              	.LVL98:
1100:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2395              		.loc 20 1100 37 view .LVU615
 2396 006c 0020     		movs	r0, #0
 2397 006e B7EE041A 		vmov.f32	s2, #1.25e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 144


 2398 0072 DFED510A 		vldr.32	s1, .L145+28
 2399 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2400              	.LVL99:
1101:Veno-Echo.cpp ****     }
 2401              		.loc 20 1101 9 is_stmt 1 view .LVU616
 2402              	.LBB1136:
 2403              	.LBI1136:
 2404              		.file 25 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 145


  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 146


 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2405              		.loc 25 135 13 view .LVU617
 2406              	.LBB1137:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2407              		.loc 25 137 5 view .LVU618
 2408              		.loc 25 137 9 is_stmt 0 view .LVU619
 2409 007a 504B     		ldr	r3, .L145+32
 2410 007c 9FED507A 		vldr.32	s14, .L145+36
 2411 0080 D3ED007A 		vldr.32	s15, [r3]
 2412              		.loc 25 137 24 view .LVU620
 2413 0084 30EE670A 		vsub.f32	s0, s0, s15
 2414              	.LVL100:
 2415              		.loc 25 137 24 view .LVU621
 2416              	.LBE1137:
 2417              	.LBE1136:
 2418              	.LBE1151:
 2419              	.LBE1172:
1137:Veno-Echo.cpp **** 
 2420              		.loc 20 1137 1 view .LVU622
 2421 0088 BDEC028B 		vldm	sp!, {d8}
 2422              		.cfi_remember_state
 2423              		.cfi_restore 80
 2424              		.cfi_restore 81
 2425              		.cfi_def_cfa_offset 8
 2426              	.LBB1173:
 2427              	.LBB1152:
 2428              	.LBB1139:
 2429              	.LBB1138:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 147


 2430              		.loc 25 137 9 view .LVU623
 2431 008c E0EE077A 		vfma.f32	s15, s0, s14
 2432 0090 C3ED007A 		vstr.32	s15, [r3]
 2433              	.LBE1138:
 2434              	.LBE1139:
 2435              	.LBE1152:
 2436              	.LBE1173:
1137:Veno-Echo.cpp **** 
 2437              		.loc 20 1137 1 view .LVU624
 2438 0094 10BD     		pop	{r4, pc}
 2439              	.LVL101:
 2440              	.L118:
 2441              		.cfi_restore_state
 2442              	.LBB1174:
 2443              	.LBB1153:
1105:Veno-Echo.cpp **** 
 2444              		.loc 20 1105 9 is_stmt 1 view .LVU625
1107:Veno-Echo.cpp ****         {
 2445              		.loc 20 1107 9 view .LVU626
 2446 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2447 0098 002B     		cmp	r3, #0
 2448 009a 3ED1     		bne	.L128
1109:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2449              		.loc 20 1109 13 view .LVU627
1109:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2450              		.loc 20 1109 23 is_stmt 0 view .LVU628
 2451 009c 0124     		movs	r4, #1
1110:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2452              		.loc 20 1110 29 view .LVU629
 2453 009e 4948     		ldr	r0, .L145+40
1111:Veno-Echo.cpp ****         }
 2454              		.loc 20 1111 26 view .LVU630
 2455 00a0 4949     		ldr	r1, .L145+44
1109:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2456              		.loc 20 1109 23 view .LVU631
 2457 00a2 1470     		strb	r4, [r2]
1110:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2458              		.loc 20 1110 13 is_stmt 1 view .LVU632
1110:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2459              		.loc 20 1110 29 is_stmt 0 view .LVU633
 2460 00a4 0370     		strb	r3, [r0]
1111:Veno-Echo.cpp ****         }
 2461              		.loc 20 1111 13 is_stmt 1 view .LVU634
1111:Veno-Echo.cpp ****         }
 2462              		.loc 20 1111 26 is_stmt 0 view .LVU635
 2463 00a6 81ED000A 		vstr.32	s0, [r1]
 2464              	.L117:
1111:Veno-Echo.cpp ****         }
 2465              		.loc 20 1111 26 view .LVU636
 2466              	.LBE1153:
 2467              	.LBE1174:
1137:Veno-Echo.cpp **** 
 2468              		.loc 20 1137 1 view .LVU637
 2469 00aa BDEC028B 		vldm	sp!, {d8}
 2470              		.cfi_remember_state
 2471              		.cfi_restore 80
 2472              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 148


 2473              		.cfi_def_cfa_offset 8
 2474 00ae 10BD     		pop	{r4, pc}
 2475              	.L119:
 2476              		.cfi_restore_state
 2477              	.LBB1175:
 2478              	.LBB1169:
1078:Veno-Echo.cpp ****             {
 2479              		.loc 20 1078 13 is_stmt 1 view .LVU638
1078:Veno-Echo.cpp ****             {
 2480              		.loc 20 1078 16 is_stmt 0 view .LVU639
 2481 00b0 3D4B     		ldr	r3, .L145+12
1078:Veno-Echo.cpp ****             {
 2482              		.loc 20 1078 13 view .LVU640
 2483 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2484 00b4 7AB9     		cbnz	r2, .L121
1080:Veno-Echo.cpp ****                 {
 2485              		.loc 20 1080 17 is_stmt 1 view .LVU641
 2486              	.LVL102:
 2487              	.LBB1140:
 2488              	.LBI1140:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2489              		.loc 21 75 3 view .LVU642
 2490              	.LBB1141:
 2491              		.loc 21 76 5 view .LVU643
 2492              		.loc 21 76 5 is_stmt 0 view .LVU644
 2493              	.LBE1141:
 2494              	.LBE1140:
1080:Veno-Echo.cpp ****                 {
 2495              		.loc 20 1080 23 view .LVU645
 2496 00b6 3D4A     		ldr	r2, .L145+16
1080:Veno-Echo.cpp ****                 {
 2497              		.loc 20 1080 17 view .LVU646
 2498 00b8 9FED447A 		vldr.32	s14, .L145+48
1080:Veno-Echo.cpp ****                 {
 2499              		.loc 20 1080 23 view .LVU647
 2500 00bc D2ED007A 		vldr.32	s15, [r2]
 2501 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2502              	.LBB1143:
 2503              	.LBB1142:
 2504              		.loc 21 76 31 view .LVU648
 2505 00c4 F0EEE77A 		vabs.f32	s15, s15
 2506              	.LBE1142:
 2507              	.LBE1143:
1080:Veno-Echo.cpp ****                 {
 2508              		.loc 20 1080 17 view .LVU649
 2509 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2510 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2511 00d0 ACDD     		ble	.L120
1082:Veno-Echo.cpp ****                 }
 2512              		.loc 20 1082 21 is_stmt 1 view .LVU650
1082:Veno-Echo.cpp ****                 }
 2513              		.loc 20 1082 38 is_stmt 0 view .LVU651
 2514 00d2 0122     		movs	r2, #1
 2515 00d4 1A70     		strb	r2, [r3]
 2516              	.L121:
1087:Veno-Echo.cpp **** 
 2517              		.loc 20 1087 9 is_stmt 1 view .LVU652
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 149


 2518              	.LVL103:
1089:Veno-Echo.cpp ****         {
 2519              		.loc 20 1089 9 view .LVU653
1091:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2520              		.loc 20 1091 13 view .LVU654
 2521              	.LBB1144:
 2522              	.LBI1144:
2015:Veno-Echo.cpp **** {
 2523              		.loc 20 2015 7 view .LVU655
 2524              	.LBB1145:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2525              		.loc 20 2017 5 view .LVU656
2018:Veno-Echo.cpp **** 
 2526              		.loc 20 2018 5 view .LVU657
 2527              	.LBE1145:
 2528              	.LBE1144:
1091:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2529              		.loc 20 1091 41 is_stmt 0 view .LVU658
 2530 00d6 364B     		ldr	r3, .L145+20
 2531              	.LBB1148:
 2532              	.LBB1146:
2018:Veno-Echo.cpp **** 
 2533              		.loc 20 2018 39 view .LVU659
 2534 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2018:Veno-Echo.cpp **** 
 2535              		.loc 20 2018 49 view .LVU660
 2536 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2018:Veno-Echo.cpp **** 
 2537              		.loc 20 2018 39 view .LVU661
 2538 00e0 D3ED007A 		vldr.32	s15, [r3]
2018:Veno-Echo.cpp **** 
 2539              		.loc 20 2018 12 view .LVU662
 2540 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2018:Veno-Echo.cpp **** 
 2541              		.loc 20 2018 39 view .LVU663
 2542 00e8 77EE677A 		vsub.f32	s15, s14, s15
2018:Veno-Echo.cpp **** 
 2543              		.loc 20 2018 49 view .LVU664
 2544 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2018:Veno-Echo.cpp **** 
 2545              		.loc 20 2018 12 view .LVU665
 2546 00f0 B0EE406A 		vmov.f32	s12, s0
 2547 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2020:Veno-Echo.cpp ****     {
 2548              		.loc 20 2020 5 view .LVU666
 2549 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2018:Veno-Echo.cpp **** 
 2550              		.loc 20 2018 12 view .LVU667
 2551 00fc F0EE467A 		vmov.f32	s15, s12
 2552              	.LVL104:
2020:Veno-Echo.cpp ****     {
 2553              		.loc 20 2020 5 is_stmt 1 view .LVU668
 2554 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2555 0104 47D4     		bmi	.L144
2025:Veno-Echo.cpp ****     {
 2556              		.loc 20 2025 5 view .LVU669
2027:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 150


 2557              		.loc 20 2027 16 is_stmt 0 view .LVU670
 2558 0106 F4EE477A 		vcmp.f32	s15, s14
 2559 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2560 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2561              	.L123:
 2562              	.LVL105:
2030:Veno-Echo.cpp **** }
 2563              		.loc 20 2030 5 is_stmt 1 view .LVU671
2030:Veno-Echo.cpp **** }
 2564              		.loc 20 2030 5 is_stmt 0 view .LVU672
 2565              	.LBE1146:
 2566              	.LBE1148:
1092:Veno-Echo.cpp ****         }
 2567              		.loc 20 1092 13 is_stmt 1 view .LVU673
1092:Veno-Echo.cpp ****         }
 2568              		.loc 20 1092 28 is_stmt 0 view .LVU674
 2569 0112 284B     		ldr	r3, .L145+24
 2570 0114 83ED000A 		vstr.32	s0, [r3]
 2571 0118 A6E7     		b	.L125
 2572              	.LVL106:
 2573              	.L128:
1092:Veno-Echo.cpp ****         }
 2574              		.loc 20 1092 28 view .LVU675
 2575              	.LBE1169:
 2576              	.LBB1170:
1116:Veno-Echo.cpp ****             {
 2577              		.loc 20 1116 13 is_stmt 1 view .LVU676
1116:Veno-Echo.cpp ****             {
 2578              		.loc 20 1116 16 is_stmt 0 view .LVU677
 2579 011a 2A4B     		ldr	r3, .L145+40
1116:Veno-Echo.cpp ****             {
 2580              		.loc 20 1116 13 view .LVU678
 2581 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2582 011e 7AB9     		cbnz	r2, .L130
1118:Veno-Echo.cpp ****                 {
 2583              		.loc 20 1118 17 is_stmt 1 view .LVU679
 2584              	.LVL107:
 2585              	.LBB1154:
 2586              	.LBI1154:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2587              		.loc 21 75 3 view .LVU680
 2588              	.LBB1155:
 2589              		.loc 21 76 5 view .LVU681
 2590              		.loc 21 76 5 is_stmt 0 view .LVU682
 2591              	.LBE1155:
 2592              	.LBE1154:
1118:Veno-Echo.cpp ****                 {
 2593              		.loc 20 1118 23 view .LVU683
 2594 0120 294A     		ldr	r2, .L145+44
1118:Veno-Echo.cpp ****                 {
 2595              		.loc 20 1118 17 view .LVU684
 2596 0122 9FED2A7A 		vldr.32	s14, .L145+48
1118:Veno-Echo.cpp ****                 {
 2597              		.loc 20 1118 23 view .LVU685
 2598 0126 D2ED007A 		vldr.32	s15, [r2]
 2599 012a 70EE677A 		vsub.f32	s15, s0, s15
 2600              	.LBB1157:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 151


 2601              	.LBB1156:
 2602              		.loc 21 76 31 view .LVU686
 2603 012e F0EEE77A 		vabs.f32	s15, s15
 2604              	.LBE1156:
 2605              	.LBE1157:
1118:Veno-Echo.cpp ****                 {
 2606              		.loc 20 1118 17 view .LVU687
 2607 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2608 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2609 013a B6DD     		ble	.L117
1120:Veno-Echo.cpp ****                 }
 2610              		.loc 20 1120 21 is_stmt 1 view .LVU688
1120:Veno-Echo.cpp ****                 }
 2611              		.loc 20 1120 37 is_stmt 0 view .LVU689
 2612 013c 0122     		movs	r2, #1
 2613 013e 1A70     		strb	r2, [r3]
 2614              	.L130:
1125:Veno-Echo.cpp ****         {
 2615              		.loc 20 1125 9 is_stmt 1 view .LVU690
 2616              	.LBB1158:
1127:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2617              		.loc 20 1127 13 view .LVU691
 2618              	.LVL108:
1128:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2619              		.loc 20 1128 13 view .LVU692
1128:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2620              		.loc 20 1128 29 is_stmt 0 view .LVU693
 2621 0140 9FED231A 		vldr.32	s2, .L145+52
 2622 0144 0120     		movs	r0, #1
 2623 0146 DFED230A 		vldr.32	s1, .L145+56
 2624 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2625              	.LVL109:
1128:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2626              		.loc 20 1128 29 view .LVU694
 2627 014e B0EE408A 		vmov.f32	s16, s0
 2628              	.LVL110:
1129:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2629              		.loc 20 1129 13 is_stmt 1 view .LVU695
1129:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2630              		.loc 20 1129 26 is_stmt 0 view .LVU696
 2631 0152 2148     		ldr	r0, .L145+60
 2632 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2633              	.LVL111:
1130:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2634              		.loc 20 1130 13 is_stmt 1 view .LVU697
1130:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2635              		.loc 20 1130 26 is_stmt 0 view .LVU698
 2636 0158 2048     		ldr	r0, .L145+64
 2637 015a B0EE480A 		vmov.f32	s0, s16
 2638 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2639              	.LVL112:
1131:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2640              		.loc 20 1131 13 is_stmt 1 view .LVU699
1131:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2641              		.loc 20 1131 31 is_stmt 0 view .LVU700
 2642 0162 B0EE480A 		vmov.f32	s0, s16
 2643 0166 1E48     		ldr	r0, .L145+68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 152


 2644 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2645              	.LVL113:
1132:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2646              		.loc 20 1132 13 is_stmt 1 view .LVU701
1132:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2647              		.loc 20 1132 31 is_stmt 0 view .LVU702
 2648 016c B0EE480A 		vmov.f32	s0, s16
 2649 0170 1C48     		ldr	r0, .L145+72
 2650 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2651              	.LVL114:
1133:Veno-Echo.cpp ****             save_flag = true;
 2652              		.loc 20 1133 13 is_stmt 1 view .LVU703
1133:Veno-Echo.cpp ****             save_flag = true;
 2653              		.loc 20 1133 35 is_stmt 0 view .LVU704
 2654 0176 1C49     		ldr	r1, .L145+76
 2655              	.LBB1159:
 2656              	.LBB1160:
 2657              	.LBB1161:
 2658              	.LBB1162:
 2659              	.LBB1163:
 2660              		.loc 22 397 18 view .LVU705
 2661 0178 1C4B     		ldr	r3, .L145+80
 2662 017a 0122     		movs	r2, #1
 2663              	.LBE1163:
 2664              	.LBE1162:
 2665              	.LBE1161:
 2666              	.LBE1160:
 2667              	.LBE1159:
1133:Veno-Echo.cpp ****             save_flag = true;
 2668              		.loc 20 1133 35 view .LVU706
 2669 017c 81ED048A 		vstr.32	s16, [r1, #16]
1134:Veno-Echo.cpp ****         }
 2670              		.loc 20 1134 13 is_stmt 1 view .LVU707
 2671              	.LVL115:
 2672              	.LBB1168:
 2673              	.LBI1159:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2674              		.loc 23 80 5 view .LVU708
 2675              	.LBB1167:
 2676              		.loc 23 81 7 view .LVU709
 2677              	.LBB1166:
 2678              	.LBI1161:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2679              		.loc 22 288 7 view .LVU710
 2680              	.LBB1165:
 2681              	.LBI1162:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2682              		.loc 22 390 7 view .LVU711
 2683              	.LBB1164:
 2684              		.loc 22 397 18 is_stmt 0 view .LVU712
 2685 0180 BFF35B8F 		dmb	ish
 2686 0184 1A70     		strb	r2, [r3]
 2687 0186 BFF35B8F 		dmb	ish
 2688              	.LVL116:
 2689              		.loc 22 397 18 view .LVU713
 2690              	.LBE1164:
 2691              	.LBE1165:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 153


 2692              	.LBE1166:
 2693              	.LBE1167:
 2694              	.LBE1168:
 2695              	.LBE1158:
 2696              	.LBE1170:
 2697              	.LBE1175:
1137:Veno-Echo.cpp **** 
 2698              		.loc 20 1137 1 view .LVU714
 2699 018a BDEC028B 		vldm	sp!, {d8}
 2700              		.cfi_remember_state
 2701              		.cfi_restore 80
 2702              		.cfi_restore 81
 2703              		.cfi_def_cfa_offset 8
 2704              	.LVL117:
1137:Veno-Echo.cpp **** 
 2705              		.loc 20 1137 1 view .LVU715
 2706 018e 10BD     		pop	{r4, pc}
 2707              	.LVL118:
 2708              	.L143:
 2709              		.cfi_restore_state
 2710              	.LBB1176:
 2711              	.LBB1171:
 2712              	.LBB1149:
 2713              	.LBB1133:
2022:Veno-Echo.cpp ****     }
 2714              		.loc 20 2022 16 view .LVU716
 2715 0190 DFED097A 		vldr.32	s15, .L145+28
 2716              	.LVL119:
2022:Veno-Echo.cpp ****     }
 2717              		.loc 20 2022 16 view .LVU717
 2718 0194 68E7     		b	.L125
 2719              	.LVL120:
 2720              	.L144:
2022:Veno-Echo.cpp ****     }
 2721              		.loc 20 2022 16 view .LVU718
 2722              	.LBE1133:
 2723              	.LBE1149:
 2724              	.LBB1150:
 2725              	.LBB1147:
 2726 0196 DFED087A 		vldr.32	s15, .L145+28
 2727 019a BAE7     		b	.L123
 2728              	.L146:
 2729              		.align	2
 2730              	.L145:
 2731 019c 18000000 		.word	.LANCHOR4+24
 2732 01a0 00000000 		.word	.LANCHOR7
 2733 01a4 00000000 		.word	.LANCHOR28
 2734 01a8 00000000 		.word	.LANCHOR29
 2735 01ac 00000000 		.word	.LANCHOR30
 2736 01b0 00000000 		.word	.LANCHOR27
 2737 01b4 00000000 		.word	.LANCHOR31
 2738 01b8 00000000 		.word	0
 2739 01bc 00000000 		.word	.LANCHOR32
 2740 01c0 6F12033D 		.word	1023611503
 2741 01c4 00000000 		.word	.LANCHOR33
 2742 01c8 00000000 		.word	.LANCHOR34
 2743 01cc 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 154


 2744 01d0 00004844 		.word	1145569280
 2745 01d4 0000C842 		.word	1120403456
 2746 01d8 00000000 		.word	.LANCHOR35
 2747 01dc 00000000 		.word	.LANCHOR36
 2748 01e0 00000000 		.word	.LANCHOR37
 2749 01e4 00000000 		.word	.LANCHOR38
 2750 01e8 00000000 		.word	.LANCHOR15
 2751 01ec 00000000 		.word	.LANCHOR16
 2752              	.LBE1147:
 2753              	.LBE1150:
 2754              	.LBE1171:
 2755              	.LBE1176:
 2756              		.cfi_endproc
 2757              	.LFE4806:
 2759              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2760              		.align	1
 2761              		.p2align 2,,3
 2762              		.global	_Z19Update_feedbackR_CVv
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu fpv5-d16
 2768              	_Z19Update_feedbackR_CVv:
 2769              	.LFB4807:
1140:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2770              		.loc 20 1140 1 is_stmt 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 0, uses_anonymous_args = 0
1141:Veno-Echo.cpp **** }
 2774              		.loc 20 1141 5 view .LVU720
1140:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2775              		.loc 20 1140 1 is_stmt 0 view .LVU721
 2776 0000 08B5     		push	{r3, lr}
 2777              		.cfi_def_cfa_offset 8
 2778              		.cfi_offset 3, -8
 2779              		.cfi_offset 14, -4
1141:Veno-Echo.cpp **** }
 2780              		.loc 20 1141 35 view .LVU722
 2781 0002 0321     		movs	r1, #3
 2782 0004 0348     		ldr	r0, .L149
 2783 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2784              	.LVL121:
1141:Veno-Echo.cpp **** }
 2785              		.loc 20 1141 18 view .LVU723
 2786 000a 034B     		ldr	r3, .L149+4
 2787 000c 83ED000A 		vstr.32	s0, [r3]
1142:Veno-Echo.cpp **** 
 2788              		.loc 20 1142 1 view .LVU724
 2789 0010 08BD     		pop	{r3, pc}
 2790              	.L150:
 2791 0012 00BF     		.align	2
 2792              	.L149:
 2793 0014 18000000 		.word	.LANCHOR4+24
 2794 0018 00000000 		.word	.LANCHOR39
 2795              		.cfi_endproc
 2796              	.LFE4807:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 155


 2798              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2799              		.align	1
 2800              		.p2align 2,,3
 2801              		.global	_Z16Update_feedbackRv
 2802              		.syntax unified
 2803              		.thumb
 2804              		.thumb_func
 2805              		.fpu fpv5-d16
 2807              	_Z16Update_feedbackRv:
 2808              	.LFB4808:
1145:Veno-Echo.cpp ****     static bool lastShift{};
 2809              		.loc 20 1145 1 is_stmt 1 view -0
 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 0
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
1146:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2813              		.loc 20 1146 5 view .LVU726
1147:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2814              		.loc 20 1147 5 view .LVU727
1148:Veno-Echo.cpp **** 
 2815              		.loc 20 1148 5 view .LVU728
1150:Veno-Echo.cpp **** 
 2816              		.loc 20 1150 5 view .LVU729
1153:Veno-Echo.cpp **** 
 2817              		.loc 20 1153 5 view .LVU730
1153:Veno-Echo.cpp **** 
 2818              		.loc 20 1153 43 is_stmt 0 view .LVU731
 2819 0000 0422     		movs	r2, #4
 2820 0002 0721     		movs	r1, #7
 2821 0004 6548     		ldr	r0, .L179
1145:Veno-Echo.cpp ****     static bool lastShift{};
 2822              		.loc 20 1145 1 view .LVU732
 2823 0006 10B5     		push	{r4, lr}
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 4, -8
 2826              		.cfi_offset 14, -4
 2827 0008 2DED028B 		vpush.64	{d8}
 2828              		.cfi_def_cfa_offset 16
 2829              		.cfi_offset 80, -16
 2830              		.cfi_offset 81, -12
1153:Veno-Echo.cpp **** 
 2831              		.loc 20 1153 43 view .LVU733
 2832 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2833              	.LVL122:
 2834              	.LBB1177:
1155:Veno-Echo.cpp ****     {   
 2835              		.loc 20 1155 9 view .LVU734
 2836 0010 634B     		ldr	r3, .L179+4
 2837              	.LVL123:
1155:Veno-Echo.cpp ****     {   
 2838              		.loc 20 1155 9 view .LVU735
 2839              	.LBE1177:
1155:Veno-Echo.cpp ****     {   
 2840              		.loc 20 1155 5 is_stmt 1 view .LVU736
 2841              	.LBB1222:
 2842              	.LBB1178:
1159:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 156


 2843              		.loc 20 1159 19 is_stmt 0 view .LVU737
 2844 0012 644A     		ldr	r2, .L179+8
 2845              	.LBE1178:
1155:Veno-Echo.cpp ****     {   
 2846              		.loc 20 1155 5 view .LVU738
 2847 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2848 0016 002B     		cmp	r3, #0
 2849 0018 3DD1     		bne	.L152
 2850              	.LBB1201:
1157:Veno-Echo.cpp ****         //update pickup
 2851              		.loc 20 1157 9 is_stmt 1 view .LVU739
1159:Veno-Echo.cpp ****         {
 2852              		.loc 20 1159 9 view .LVU740
 2853 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2854 001c 0029     		cmp	r1, #0
 2855 001e 47D0     		beq	.L153
1161:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2856              		.loc 20 1161 13 view .LVU741
1162:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2857              		.loc 20 1162 30 is_stmt 0 view .LVU742
 2858 0020 6148     		ldr	r0, .L179+12
1163:Veno-Echo.cpp ****         } 
 2859              		.loc 20 1163 27 view .LVU743
 2860 0022 6249     		ldr	r1, .L179+16
1161:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2861              		.loc 20 1161 23 view .LVU744
 2862 0024 1370     		strb	r3, [r2]
1162:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2863              		.loc 20 1162 13 is_stmt 1 view .LVU745
1162:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2864              		.loc 20 1162 30 is_stmt 0 view .LVU746
 2865 0026 0370     		strb	r3, [r0]
1163:Veno-Echo.cpp ****         } 
 2866              		.loc 20 1163 13 is_stmt 1 view .LVU747
1163:Veno-Echo.cpp ****         } 
 2867              		.loc 20 1163 27 is_stmt 0 view .LVU748
 2868 0028 81ED000A 		vstr.32	s0, [r1]
 2869              	.L154:
1176:Veno-Echo.cpp ****         
 2870              		.loc 20 1176 9 is_stmt 1 view .LVU749
 2871              	.LVL124:
1178:Veno-Echo.cpp ****         {
 2872              		.loc 20 1178 9 view .LVU750
1186:Veno-Echo.cpp ****         }
 2873              		.loc 20 1186 13 view .LVU751
 2874              	.LBB1179:
 2875              	.LBI1179:
2015:Veno-Echo.cpp **** {
 2876              		.loc 20 2015 7 view .LVU752
 2877              	.LBB1180:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2878              		.loc 20 2017 5 view .LVU753
2018:Veno-Echo.cpp **** 
 2879              		.loc 20 2018 5 view .LVU754
 2880              	.LBE1180:
 2881              	.LBE1179:
1186:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 157


 2882              		.loc 20 1186 41 is_stmt 0 view .LVU755
 2883 002c 604A     		ldr	r2, .L179+20
 2884              	.LBB1184:
 2885              	.LBB1181:
2018:Veno-Echo.cpp **** 
 2886              		.loc 20 2018 39 view .LVU756
 2887 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2018:Veno-Echo.cpp **** 
 2888              		.loc 20 2018 49 view .LVU757
 2889 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2890              	.LBE1181:
 2891              	.LBE1184:
1186:Veno-Echo.cpp ****         }
 2892              		.loc 20 1186 41 view .LVU758
 2893 0036 5F4B     		ldr	r3, .L179+24
 2894              	.LBB1185:
 2895              	.LBB1182:
2018:Veno-Echo.cpp **** 
 2896              		.loc 20 2018 39 view .LVU759
 2897 0038 92ED007A 		vldr.32	s14, [r2]
2018:Veno-Echo.cpp **** 
 2898              		.loc 20 2018 12 view .LVU760
 2899 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2900 0040 D3ED007A 		vldr.32	s15, [r3]
2018:Veno-Echo.cpp **** 
 2901              		.loc 20 2018 39 view .LVU761
 2902 0044 36EEC77A 		vsub.f32	s14, s13, s14
2018:Veno-Echo.cpp **** 
 2903              		.loc 20 2018 49 view .LVU762
 2904 0048 37EE657A 		vsub.f32	s14, s14, s11
2018:Veno-Echo.cpp **** 
 2905              		.loc 20 2018 12 view .LVU763
 2906 004c E7EE067A 		vfma.f32	s15, s14, s12
 2907              	.LVL125:
2020:Veno-Echo.cpp ****     {
 2908              		.loc 20 2020 5 is_stmt 1 view .LVU764
 2909 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2910 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2911 0058 00F19A80 		bmi	.L177
2025:Veno-Echo.cpp ****     {
 2912              		.loc 20 2025 5 view .LVU765
2027:Veno-Echo.cpp ****     }
 2913              		.loc 20 2027 16 is_stmt 0 view .LVU766
 2914 005c F4EE667A 		vcmp.f32	s15, s13
 2915 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2916 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2917              	.LVL126:
 2918              	.L159:
2027:Veno-Echo.cpp ****     }
 2919              		.loc 20 2027 16 view .LVU767
 2920              	.LBE1182:
 2921              	.LBE1185:
1189:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2922              		.loc 20 1189 9 is_stmt 1 view .LVU768
1189:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2923              		.loc 20 1189 37 is_stmt 0 view .LVU769
 2924 0068 B0EE670A 		vmov.f32	s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 158


 2925              	.LVL127:
1189:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2926              		.loc 20 1189 37 view .LVU770
 2927 006c 0020     		movs	r0, #0
 2928 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2929 0072 DFED510A 		vldr.32	s1, .L179+28
 2930 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2931              	.LVL128:
1190:Veno-Echo.cpp ****     }
 2932              		.loc 20 1190 9 is_stmt 1 view .LVU771
 2933              	.LBB1186:
 2934              	.LBI1186:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2935              		.loc 25 135 13 view .LVU772
 2936              	.LBB1187:
 2937              		.loc 25 137 5 view .LVU773
 2938              		.loc 25 137 9 is_stmt 0 view .LVU774
 2939 007a 504B     		ldr	r3, .L179+32
 2940 007c 9FED507A 		vldr.32	s14, .L179+36
 2941 0080 D3ED007A 		vldr.32	s15, [r3]
 2942              		.loc 25 137 24 view .LVU775
 2943 0084 30EE670A 		vsub.f32	s0, s0, s15
 2944              	.LVL129:
 2945              		.loc 25 137 24 view .LVU776
 2946              	.LBE1187:
 2947              	.LBE1186:
 2948              	.LBE1201:
 2949              	.LBE1222:
1227:Veno-Echo.cpp **** 
 2950              		.loc 20 1227 1 view .LVU777
 2951 0088 BDEC028B 		vldm	sp!, {d8}
 2952              		.cfi_remember_state
 2953              		.cfi_restore 80
 2954              		.cfi_restore 81
 2955              		.cfi_def_cfa_offset 8
 2956              	.LBB1223:
 2957              	.LBB1202:
 2958              	.LBB1189:
 2959              	.LBB1188:
 2960              		.loc 25 137 9 view .LVU778
 2961 008c E0EE077A 		vfma.f32	s15, s0, s14
 2962 0090 C3ED007A 		vstr.32	s15, [r3]
 2963              	.LBE1188:
 2964              	.LBE1189:
 2965              	.LBE1202:
 2966              	.LBE1223:
1227:Veno-Echo.cpp **** 
 2967              		.loc 20 1227 1 view .LVU779
 2968 0094 10BD     		pop	{r4, pc}
 2969              	.LVL130:
 2970              	.L152:
 2971              		.cfi_restore_state
 2972              	.LBB1224:
 2973              	.LBB1203:
1195:Veno-Echo.cpp **** 
 2974              		.loc 20 1195 9 is_stmt 1 view .LVU780
1197:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 159


 2975              		.loc 20 1197 10 view .LVU781
 2976 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2977 0098 002B     		cmp	r3, #0
 2978 009a 3ED1     		bne	.L162
1199:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2979              		.loc 20 1199 13 view .LVU782
1199:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2980              		.loc 20 1199 23 is_stmt 0 view .LVU783
 2981 009c 0124     		movs	r4, #1
1200:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2982              		.loc 20 1200 29 view .LVU784
 2983 009e 4948     		ldr	r0, .L179+40
1201:Veno-Echo.cpp ****         }
 2984              		.loc 20 1201 26 view .LVU785
 2985 00a0 4949     		ldr	r1, .L179+44
1199:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2986              		.loc 20 1199 23 view .LVU786
 2987 00a2 1470     		strb	r4, [r2]
1200:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2988              		.loc 20 1200 13 is_stmt 1 view .LVU787
1200:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2989              		.loc 20 1200 29 is_stmt 0 view .LVU788
 2990 00a4 0370     		strb	r3, [r0]
1201:Veno-Echo.cpp ****         }
 2991              		.loc 20 1201 13 is_stmt 1 view .LVU789
1201:Veno-Echo.cpp ****         }
 2992              		.loc 20 1201 26 is_stmt 0 view .LVU790
 2993 00a6 81ED000A 		vstr.32	s0, [r1]
 2994              	.L151:
1201:Veno-Echo.cpp ****         }
 2995              		.loc 20 1201 26 view .LVU791
 2996              	.LBE1203:
 2997              	.LBE1224:
1227:Veno-Echo.cpp **** 
 2998              		.loc 20 1227 1 view .LVU792
 2999 00aa BDEC028B 		vldm	sp!, {d8}
 3000              		.cfi_remember_state
 3001              		.cfi_restore 80
 3002              		.cfi_restore 81
 3003              		.cfi_def_cfa_offset 8
 3004 00ae 10BD     		pop	{r4, pc}
 3005              	.L153:
 3006              		.cfi_restore_state
 3007              	.LBB1225:
 3008              	.LBB1219:
1167:Veno-Echo.cpp ****             {
 3009              		.loc 20 1167 13 is_stmt 1 view .LVU793
1167:Veno-Echo.cpp ****             {
 3010              		.loc 20 1167 16 is_stmt 0 view .LVU794
 3011 00b0 3D4B     		ldr	r3, .L179+12
1167:Veno-Echo.cpp ****             {
 3012              		.loc 20 1167 13 view .LVU795
 3013 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3014 00b4 7AB9     		cbnz	r2, .L155
1169:Veno-Echo.cpp ****                 {
 3015              		.loc 20 1169 17 is_stmt 1 view .LVU796
 3016              	.LVL131:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 160


 3017              	.LBB1190:
 3018              	.LBI1190:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3019              		.loc 21 75 3 view .LVU797
 3020              	.LBB1191:
 3021              		.loc 21 76 5 view .LVU798
 3022              		.loc 21 76 5 is_stmt 0 view .LVU799
 3023              	.LBE1191:
 3024              	.LBE1190:
1169:Veno-Echo.cpp ****                 {
 3025              		.loc 20 1169 23 view .LVU800
 3026 00b6 3D4A     		ldr	r2, .L179+16
1169:Veno-Echo.cpp ****                 {
 3027              		.loc 20 1169 17 view .LVU801
 3028 00b8 9FED447A 		vldr.32	s14, .L179+48
1169:Veno-Echo.cpp ****                 {
 3029              		.loc 20 1169 23 view .LVU802
 3030 00bc D2ED007A 		vldr.32	s15, [r2]
 3031 00c0 70EE677A 		vsub.f32	s15, s0, s15
 3032              	.LBB1193:
 3033              	.LBB1192:
 3034              		.loc 21 76 31 view .LVU803
 3035 00c4 F0EEE77A 		vabs.f32	s15, s15
 3036              	.LBE1192:
 3037              	.LBE1193:
1169:Veno-Echo.cpp ****                 {
 3038              		.loc 20 1169 17 view .LVU804
 3039 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 3040 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3041 00d0 ACDD     		ble	.L154
1171:Veno-Echo.cpp ****                 }
 3042              		.loc 20 1171 21 is_stmt 1 view .LVU805
1171:Veno-Echo.cpp ****                 }
 3043              		.loc 20 1171 38 is_stmt 0 view .LVU806
 3044 00d2 0122     		movs	r2, #1
 3045 00d4 1A70     		strb	r2, [r3]
 3046              	.L155:
1176:Veno-Echo.cpp ****         
 3047              		.loc 20 1176 9 is_stmt 1 view .LVU807
 3048              	.LVL132:
1178:Veno-Echo.cpp ****         {
 3049              		.loc 20 1178 9 view .LVU808
1180:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3050              		.loc 20 1180 13 view .LVU809
 3051              	.LBB1194:
 3052              	.LBI1194:
2015:Veno-Echo.cpp **** {
 3053              		.loc 20 2015 7 view .LVU810
 3054              	.LBB1195:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3055              		.loc 20 2017 5 view .LVU811
2018:Veno-Echo.cpp **** 
 3056              		.loc 20 2018 5 view .LVU812
 3057              	.LBE1195:
 3058              	.LBE1194:
1180:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3059              		.loc 20 1180 41 is_stmt 0 view .LVU813
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 161


 3060 00d6 364B     		ldr	r3, .L179+20
 3061              	.LBB1198:
 3062              	.LBB1196:
2018:Veno-Echo.cpp **** 
 3063              		.loc 20 2018 39 view .LVU814
 3064 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2018:Veno-Echo.cpp **** 
 3065              		.loc 20 2018 49 view .LVU815
 3066 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2018:Veno-Echo.cpp **** 
 3067              		.loc 20 2018 39 view .LVU816
 3068 00e0 D3ED007A 		vldr.32	s15, [r3]
2018:Veno-Echo.cpp **** 
 3069              		.loc 20 2018 12 view .LVU817
 3070 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2018:Veno-Echo.cpp **** 
 3071              		.loc 20 2018 39 view .LVU818
 3072 00e8 77EE677A 		vsub.f32	s15, s14, s15
2018:Veno-Echo.cpp **** 
 3073              		.loc 20 2018 49 view .LVU819
 3074 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2018:Veno-Echo.cpp **** 
 3075              		.loc 20 2018 12 view .LVU820
 3076 00f0 B0EE406A 		vmov.f32	s12, s0
 3077 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2020:Veno-Echo.cpp ****     {
 3078              		.loc 20 2020 5 view .LVU821
 3079 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2018:Veno-Echo.cpp **** 
 3080              		.loc 20 2018 12 view .LVU822
 3081 00fc F0EE467A 		vmov.f32	s15, s12
 3082              	.LVL133:
2020:Veno-Echo.cpp ****     {
 3083              		.loc 20 2020 5 is_stmt 1 view .LVU823
 3084 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3085 0104 47D4     		bmi	.L178
2025:Veno-Echo.cpp ****     {
 3086              		.loc 20 2025 5 view .LVU824
2027:Veno-Echo.cpp ****     }
 3087              		.loc 20 2027 16 is_stmt 0 view .LVU825
 3088 0106 F4EE477A 		vcmp.f32	s15, s14
 3089 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3090 010e 77FE277A 		vselgt.f32	s15, s14, s15
 3091              	.L157:
 3092              	.LVL134:
2030:Veno-Echo.cpp **** }
 3093              		.loc 20 2030 5 is_stmt 1 view .LVU826
2030:Veno-Echo.cpp **** }
 3094              		.loc 20 2030 5 is_stmt 0 view .LVU827
 3095              	.LBE1196:
 3096              	.LBE1198:
1181:Veno-Echo.cpp ****         }
 3097              		.loc 20 1181 13 is_stmt 1 view .LVU828
1181:Veno-Echo.cpp ****         }
 3098              		.loc 20 1181 28 is_stmt 0 view .LVU829
 3099 0112 284B     		ldr	r3, .L179+24
 3100 0114 83ED000A 		vstr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 162


 3101 0118 A6E7     		b	.L159
 3102              	.LVL135:
 3103              	.L162:
1181:Veno-Echo.cpp ****         }
 3104              		.loc 20 1181 28 view .LVU830
 3105              	.LBE1219:
 3106              	.LBB1220:
1206:Veno-Echo.cpp ****             {
 3107              		.loc 20 1206 13 is_stmt 1 view .LVU831
1206:Veno-Echo.cpp ****             {
 3108              		.loc 20 1206 16 is_stmt 0 view .LVU832
 3109 011a 2A4B     		ldr	r3, .L179+40
1206:Veno-Echo.cpp ****             {
 3110              		.loc 20 1206 13 view .LVU833
 3111 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3112 011e 7AB9     		cbnz	r2, .L164
1208:Veno-Echo.cpp ****                 {
 3113              		.loc 20 1208 17 is_stmt 1 view .LVU834
 3114              	.LVL136:
 3115              	.LBB1204:
 3116              	.LBI1204:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3117              		.loc 21 75 3 view .LVU835
 3118              	.LBB1205:
 3119              		.loc 21 76 5 view .LVU836
 3120              		.loc 21 76 5 is_stmt 0 view .LVU837
 3121              	.LBE1205:
 3122              	.LBE1204:
1208:Veno-Echo.cpp ****                 {
 3123              		.loc 20 1208 23 view .LVU838
 3124 0120 294A     		ldr	r2, .L179+44
1208:Veno-Echo.cpp ****                 {
 3125              		.loc 20 1208 17 view .LVU839
 3126 0122 9FED2A7A 		vldr.32	s14, .L179+48
1208:Veno-Echo.cpp ****                 {
 3127              		.loc 20 1208 23 view .LVU840
 3128 0126 D2ED007A 		vldr.32	s15, [r2]
 3129 012a 70EE677A 		vsub.f32	s15, s0, s15
 3130              	.LBB1207:
 3131              	.LBB1206:
 3132              		.loc 21 76 31 view .LVU841
 3133 012e F0EEE77A 		vabs.f32	s15, s15
 3134              	.LBE1206:
 3135              	.LBE1207:
1208:Veno-Echo.cpp ****                 {
 3136              		.loc 20 1208 17 view .LVU842
 3137 0132 F4EEC77A 		vcmpe.f32	s15, s14
 3138 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3139 013a B6DD     		ble	.L151
1210:Veno-Echo.cpp ****                 }
 3140              		.loc 20 1210 21 is_stmt 1 view .LVU843
1210:Veno-Echo.cpp ****                 }
 3141              		.loc 20 1210 37 is_stmt 0 view .LVU844
 3142 013c 0122     		movs	r2, #1
 3143 013e 1A70     		strb	r2, [r3]
 3144              	.L164:
1215:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 163


 3145              		.loc 20 1215 9 is_stmt 1 view .LVU845
 3146              	.LBB1208:
1217:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3147              		.loc 20 1217 13 view .LVU846
 3148              	.LVL137:
1218:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3149              		.loc 20 1218 13 view .LVU847
1218:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3150              		.loc 20 1218 29 is_stmt 0 view .LVU848
 3151 0140 9FED231A 		vldr.32	s2, .L179+52
 3152 0144 0120     		movs	r0, #1
 3153 0146 DFED230A 		vldr.32	s1, .L179+56
 3154 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 3155              	.LVL138:
1218:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3156              		.loc 20 1218 29 view .LVU849
 3157 014e B0EE408A 		vmov.f32	s16, s0
 3158              	.LVL139:
1219:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3159              		.loc 20 1219 13 is_stmt 1 view .LVU850
1219:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3160              		.loc 20 1219 26 is_stmt 0 view .LVU851
 3161 0152 2148     		ldr	r0, .L179+60
 3162 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3163              	.LVL140:
1220:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3164              		.loc 20 1220 13 is_stmt 1 view .LVU852
1220:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3165              		.loc 20 1220 26 is_stmt 0 view .LVU853
 3166 0158 2048     		ldr	r0, .L179+64
 3167 015a B0EE480A 		vmov.f32	s0, s16
 3168 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3169              	.LVL141:
1221:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3170              		.loc 20 1221 13 is_stmt 1 view .LVU854
1221:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3171              		.loc 20 1221 31 is_stmt 0 view .LVU855
 3172 0162 B0EE480A 		vmov.f32	s0, s16
 3173 0166 1E48     		ldr	r0, .L179+68
 3174 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3175              	.LVL142:
1222:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3176              		.loc 20 1222 13 is_stmt 1 view .LVU856
1222:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3177              		.loc 20 1222 31 is_stmt 0 view .LVU857
 3178 016c B0EE480A 		vmov.f32	s0, s16
 3179 0170 1C48     		ldr	r0, .L179+72
 3180 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3181              	.LVL143:
1223:Veno-Echo.cpp ****             save_flag = true;
 3182              		.loc 20 1223 13 is_stmt 1 view .LVU858
1223:Veno-Echo.cpp ****             save_flag = true;
 3183              		.loc 20 1223 35 is_stmt 0 view .LVU859
 3184 0176 1C49     		ldr	r1, .L179+76
 3185              	.LBB1209:
 3186              	.LBB1210:
 3187              	.LBB1211:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 164


 3188              	.LBB1212:
 3189              	.LBB1213:
 3190              		.loc 22 397 18 view .LVU860
 3191 0178 1C4B     		ldr	r3, .L179+80
 3192 017a 0122     		movs	r2, #1
 3193              	.LBE1213:
 3194              	.LBE1212:
 3195              	.LBE1211:
 3196              	.LBE1210:
 3197              	.LBE1209:
1223:Veno-Echo.cpp ****             save_flag = true;
 3198              		.loc 20 1223 35 view .LVU861
 3199 017c 81ED058A 		vstr.32	s16, [r1, #20]
1224:Veno-Echo.cpp ****         }
 3200              		.loc 20 1224 13 is_stmt 1 view .LVU862
 3201              	.LVL144:
 3202              	.LBB1218:
 3203              	.LBI1209:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3204              		.loc 23 80 5 view .LVU863
 3205              	.LBB1217:
 3206              		.loc 23 81 7 view .LVU864
 3207              	.LBB1216:
 3208              	.LBI1211:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3209              		.loc 22 288 7 view .LVU865
 3210              	.LBB1215:
 3211              	.LBI1212:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3212              		.loc 22 390 7 view .LVU866
 3213              	.LBB1214:
 3214              		.loc 22 397 18 is_stmt 0 view .LVU867
 3215 0180 BFF35B8F 		dmb	ish
 3216 0184 1A70     		strb	r2, [r3]
 3217 0186 BFF35B8F 		dmb	ish
 3218              	.LVL145:
 3219              		.loc 22 397 18 view .LVU868
 3220              	.LBE1214:
 3221              	.LBE1215:
 3222              	.LBE1216:
 3223              	.LBE1217:
 3224              	.LBE1218:
 3225              	.LBE1208:
 3226              	.LBE1220:
 3227              	.LBE1225:
1227:Veno-Echo.cpp **** 
 3228              		.loc 20 1227 1 view .LVU869
 3229 018a BDEC028B 		vldm	sp!, {d8}
 3230              		.cfi_remember_state
 3231              		.cfi_restore 80
 3232              		.cfi_restore 81
 3233              		.cfi_def_cfa_offset 8
 3234              	.LVL146:
1227:Veno-Echo.cpp **** 
 3235              		.loc 20 1227 1 view .LVU870
 3236 018e 10BD     		pop	{r4, pc}
 3237              	.LVL147:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 165


 3238              	.L177:
 3239              		.cfi_restore_state
 3240              	.LBB1226:
 3241              	.LBB1221:
 3242              	.LBB1199:
 3243              	.LBB1183:
2022:Veno-Echo.cpp ****     }
 3244              		.loc 20 2022 16 view .LVU871
 3245 0190 DFED097A 		vldr.32	s15, .L179+28
 3246              	.LVL148:
2022:Veno-Echo.cpp ****     }
 3247              		.loc 20 2022 16 view .LVU872
 3248 0194 68E7     		b	.L159
 3249              	.LVL149:
 3250              	.L178:
2022:Veno-Echo.cpp ****     }
 3251              		.loc 20 2022 16 view .LVU873
 3252              	.LBE1183:
 3253              	.LBE1199:
 3254              	.LBB1200:
 3255              	.LBB1197:
 3256 0196 DFED087A 		vldr.32	s15, .L179+28
 3257 019a BAE7     		b	.L157
 3258              	.L180:
 3259              		.align	2
 3260              	.L179:
 3261 019c 18000000 		.word	.LANCHOR4+24
 3262 01a0 00000000 		.word	.LANCHOR7
 3263 01a4 00000000 		.word	.LANCHOR40
 3264 01a8 00000000 		.word	.LANCHOR41
 3265 01ac 00000000 		.word	.LANCHOR42
 3266 01b0 00000000 		.word	.LANCHOR39
 3267 01b4 00000000 		.word	.LANCHOR43
 3268 01b8 00000000 		.word	0
 3269 01bc 00000000 		.word	.LANCHOR44
 3270 01c0 6F12033D 		.word	1023611503
 3271 01c4 00000000 		.word	.LANCHOR45
 3272 01c8 00000000 		.word	.LANCHOR46
 3273 01cc 0AD7A33B 		.word	1000593162
 3274 01d0 00803B46 		.word	1178304512
 3275 01d4 0080BB44 		.word	1153138688
 3276 01d8 00000000 		.word	.LANCHOR47
 3277 01dc 00000000 		.word	.LANCHOR48
 3278 01e0 00000000 		.word	.LANCHOR49
 3279 01e4 00000000 		.word	.LANCHOR50
 3280 01e8 00000000 		.word	.LANCHOR15
 3281 01ec 00000000 		.word	.LANCHOR16
 3282              	.LBE1197:
 3283              	.LBE1200:
 3284              	.LBE1221:
 3285              	.LBE1226:
 3286              		.cfi_endproc
 3287              	.LFE4808:
 3289              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3290              		.align	1
 3291              		.p2align 2,,3
 3292              		.global	_Z16Update_drywet_CVv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 166


 3293              		.syntax unified
 3294              		.thumb
 3295              		.thumb_func
 3296              		.fpu fpv5-d16
 3298              	_Z16Update_drywet_CVv:
 3299              	.LFB4809:
1230:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3300              		.loc 20 1230 1 is_stmt 1 view -0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
1231:Veno-Echo.cpp **** }
 3304              		.loc 20 1231 5 view .LVU875
1230:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3305              		.loc 20 1230 1 is_stmt 0 view .LVU876
 3306 0000 08B5     		push	{r3, lr}
 3307              		.cfi_def_cfa_offset 8
 3308              		.cfi_offset 3, -8
 3309              		.cfi_offset 14, -4
1231:Veno-Echo.cpp **** }
 3310              		.loc 20 1231 32 view .LVU877
 3311 0002 0421     		movs	r1, #4
 3312 0004 0348     		ldr	r0, .L183
 3313 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3314              	.LVL150:
1231:Veno-Echo.cpp **** }
 3315              		.loc 20 1231 15 view .LVU878
 3316 000a 034B     		ldr	r3, .L183+4
 3317 000c 83ED000A 		vstr.32	s0, [r3]
1232:Veno-Echo.cpp **** 
 3318              		.loc 20 1232 1 view .LVU879
 3319 0010 08BD     		pop	{r3, pc}
 3320              	.L184:
 3321 0012 00BF     		.align	2
 3322              	.L183:
 3323 0014 18000000 		.word	.LANCHOR4+24
 3324 0018 00000000 		.word	.LANCHOR51
 3325              		.cfi_endproc
 3326              	.LFE4809:
 3328              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3329              		.align	1
 3330              		.p2align 2,,3
 3331              		.global	_Z13Update_drywetv
 3332              		.syntax unified
 3333              		.thumb
 3334              		.thumb_func
 3335              		.fpu fpv5-d16
 3337              	_Z13Update_drywetv:
 3338              	.LFB4810:
1235:Veno-Echo.cpp ****     static bool lastShift{};
 3339              		.loc 20 1235 1 is_stmt 1 view -0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 0
 3342              		@ frame_needed = 0, uses_anonymous_args = 0
1236:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3343              		.loc 20 1236 5 view .LVU881
1237:Veno-Echo.cpp ****     static bool Res_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 167


 3344              		.loc 20 1237 5 view .LVU882
1238:Veno-Echo.cpp **** 
 3345              		.loc 20 1238 5 view .LVU883
1240:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3346              		.loc 20 1240 5 view .LVU884
1245:Veno-Echo.cpp **** 
 3347              		.loc 20 1245 5 view .LVU885
1245:Veno-Echo.cpp **** 
 3348              		.loc 20 1245 40 is_stmt 0 view .LVU886
 3349 0000 0522     		movs	r2, #5
 3350 0002 0721     		movs	r1, #7
 3351 0004 8248     		ldr	r0, .L218+24
1235:Veno-Echo.cpp ****     static bool lastShift{};
 3352              		.loc 20 1235 1 view .LVU887
 3353 0006 10B5     		push	{r4, lr}
 3354              		.cfi_def_cfa_offset 8
 3355              		.cfi_offset 4, -8
 3356              		.cfi_offset 14, -4
 3357 0008 2DED028B 		vpush.64	{d8}
 3358              		.cfi_def_cfa_offset 16
 3359              		.cfi_offset 80, -16
 3360              		.cfi_offset 81, -12
1245:Veno-Echo.cpp **** 
 3361              		.loc 20 1245 40 view .LVU888
 3362 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3363              	.LVL151:
 3364              	.LBB1227:
1247:Veno-Echo.cpp ****     {   
 3365              		.loc 20 1247 9 view .LVU889
 3366 0010 804B     		ldr	r3, .L218+28
 3367              	.LVL152:
1247:Veno-Echo.cpp ****     {   
 3368              		.loc 20 1247 9 view .LVU890
 3369              	.LBE1227:
1247:Veno-Echo.cpp ****     {   
 3370              		.loc 20 1247 5 is_stmt 1 view .LVU891
 3371              	.LBB1270:
 3372              	.LBB1228:
1252:Veno-Echo.cpp ****         {
 3373              		.loc 20 1252 19 is_stmt 0 view .LVU892
 3374 0012 814A     		ldr	r2, .L218+32
 3375              	.LBE1228:
1247:Veno-Echo.cpp ****     {   
 3376              		.loc 20 1247 5 view .LVU893
 3377 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3378 0016 B3BB     		cbnz	r3, .L186
 3379              	.LBB1249:
1250:Veno-Echo.cpp **** 
 3380              		.loc 20 1250 9 is_stmt 1 view .LVU894
1252:Veno-Echo.cpp ****         {
 3381              		.loc 20 1252 9 view .LVU895
 3382 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3383 001a 0029     		cmp	r1, #0
 3384 001c 40D0     		beq	.L187
1254:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3385              		.loc 20 1254 13 view .LVU896
1256:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 168


 3386              		.loc 20 1256 27 is_stmt 0 view .LVU897
 3387 001e 7F48     		ldr	r0, .L218+36
1257:Veno-Echo.cpp ****         } 
 3388              		.loc 20 1257 24 view .LVU898
 3389 0020 7F49     		ldr	r1, .L218+40
1254:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3390              		.loc 20 1254 23 view .LVU899
 3391 0022 1370     		strb	r3, [r2]
1256:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3392              		.loc 20 1256 13 is_stmt 1 view .LVU900
1256:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3393              		.loc 20 1256 27 is_stmt 0 view .LVU901
 3394 0024 0370     		strb	r3, [r0]
1257:Veno-Echo.cpp ****         } 
 3395              		.loc 20 1257 13 is_stmt 1 view .LVU902
1257:Veno-Echo.cpp ****         } 
 3396              		.loc 20 1257 24 is_stmt 0 view .LVU903
 3397 0026 81ED000A 		vstr.32	s0, [r1]
 3398              	.L188:
1273:Veno-Echo.cpp **** 
 3399              		.loc 20 1273 9 is_stmt 1 view .LVU904
 3400              	.LVL153:
1275:Veno-Echo.cpp ****         {
 3401              		.loc 20 1275 9 view .LVU905
1283:Veno-Echo.cpp ****         }
 3402              		.loc 20 1283 13 view .LVU906
 3403              	.LBB1229:
 3404              	.LBI1229:
2015:Veno-Echo.cpp **** {
 3405              		.loc 20 2015 7 view .LVU907
 3406              	.LBB1230:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3407              		.loc 20 2017 5 view .LVU908
2018:Veno-Echo.cpp **** 
 3408              		.loc 20 2018 5 view .LVU909
 3409              	.LBE1230:
 3410              	.LBE1229:
1283:Veno-Echo.cpp ****         }
 3411              		.loc 20 1283 37 is_stmt 0 view .LVU910
 3412 002a 7E4A     		ldr	r2, .L218+44
 3413              	.LBB1233:
 3414              	.LBB1231:
2018:Veno-Echo.cpp **** 
 3415              		.loc 20 2018 39 view .LVU911
 3416 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2018:Veno-Echo.cpp **** 
 3417              		.loc 20 2018 49 view .LVU912
 3418 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3419              	.LBE1231:
 3420              	.LBE1233:
1283:Veno-Echo.cpp ****         }
 3421              		.loc 20 1283 37 view .LVU913
 3422 0034 7C4B     		ldr	r3, .L218+48
 3423              	.LBB1234:
 3424              	.LBB1232:
2018:Veno-Echo.cpp **** 
 3425              		.loc 20 2018 39 view .LVU914
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 169


 3426 0036 92ED007A 		vldr.32	s14, [r2]
2018:Veno-Echo.cpp **** 
 3427              		.loc 20 2018 12 view .LVU915
 3428 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3429 003e D3ED007A 		vldr.32	s15, [r3]
2018:Veno-Echo.cpp **** 
 3430              		.loc 20 2018 39 view .LVU916
 3431 0042 36EEC77A 		vsub.f32	s14, s13, s14
2018:Veno-Echo.cpp **** 
 3432              		.loc 20 2018 49 view .LVU917
 3433 0046 37EE657A 		vsub.f32	s14, s14, s11
2018:Veno-Echo.cpp **** 
 3434              		.loc 20 2018 12 view .LVU918
 3435 004a E7EE067A 		vfma.f32	s15, s14, s12
 3436              	.LVL154:
2020:Veno-Echo.cpp ****     {
 3437              		.loc 20 2020 5 is_stmt 1 view .LVU919
 3438 004e F5EEC07A 		vcmpe.f32	s15, #0
 3439 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3440 0056 00F1C180 		bmi	.L205
2025:Veno-Echo.cpp ****     {
 3441              		.loc 20 2025 5 view .LVU920
 3442 005a F4EEE67A 		vcmpe.f32	s15, s13
 3443 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3444 0062 40F3C680 		ble	.L211
 3445              	.LVL155:
 3446              	.L196:
2025:Veno-Echo.cpp ****     {
 3447              		.loc 20 2025 5 is_stmt 0 view .LVU921
 3448              	.LBE1232:
 3449              	.LBE1234:
1290:Veno-Echo.cpp ****         }
 3450              		.loc 20 1290 26 view .LVU922
 3451 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3452              	.LVL156:
 3453              	.L195:
1302:Veno-Echo.cpp ****     }
 3454              		.loc 20 1302 9 is_stmt 1 view .LVU923
 3455              	.LBB1235:
 3456              	.LBI1235:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3457              		.loc 25 135 13 view .LVU924
 3458              	.LBB1236:
 3459              		.loc 25 137 5 view .LVU925
 3460              		.loc 25 137 9 is_stmt 0 view .LVU926
 3461 006a 704B     		ldr	r3, .L218+52
 3462 006c 9FED707A 		vldr.32	s14, .L218+56
 3463 0070 D3ED007A 		vldr.32	s15, [r3]
 3464              		.loc 25 137 24 view .LVU927
 3465 0074 30EE670A 		vsub.f32	s0, s0, s15
 3466              	.LVL157:
 3467              		.loc 25 137 24 view .LVU928
 3468              	.LBE1236:
 3469              	.LBE1235:
 3470              	.LBE1249:
 3471              	.LBE1270:
1342:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 170


 3472              		.loc 20 1342 1 view .LVU929
 3473 0078 BDEC028B 		vldm	sp!, {d8}
 3474              		.cfi_remember_state
 3475              		.cfi_restore 80
 3476              		.cfi_restore 81
 3477              		.cfi_def_cfa_offset 8
 3478              	.LBB1271:
 3479              	.LBB1250:
 3480              	.LBB1238:
 3481              	.LBB1237:
 3482              		.loc 25 137 9 view .LVU930
 3483 007c E0EE077A 		vfma.f32	s15, s0, s14
 3484 0080 C3ED007A 		vstr.32	s15, [r3]
 3485              	.LBE1237:
 3486              	.LBE1238:
 3487              	.LBE1250:
 3488              	.LBE1271:
1342:Veno-Echo.cpp **** 
 3489              		.loc 20 1342 1 view .LVU931
 3490 0084 10BD     		pop	{r4, pc}
 3491              	.LVL158:
 3492              	.L186:
 3493              		.cfi_restore_state
 3494              	.LBB1272:
 3495              	.LBB1251:
1306:Veno-Echo.cpp **** 
 3496              		.loc 20 1306 9 is_stmt 1 view .LVU932
1308:Veno-Echo.cpp ****         {
 3497              		.loc 20 1308 9 view .LVU933
 3498 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3499 0088 002B     		cmp	r3, #0
 3500 008a 58D1     		bne	.L200
1310:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3501              		.loc 20 1310 13 view .LVU934
1310:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3502              		.loc 20 1310 23 is_stmt 0 view .LVU935
 3503 008c 0124     		movs	r4, #1
1311:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3504              		.loc 20 1311 24 view .LVU936
 3505 008e 6948     		ldr	r0, .L218+60
1312:Veno-Echo.cpp ****         }
 3506              		.loc 20 1312 21 view .LVU937
 3507 0090 6949     		ldr	r1, .L218+64
1310:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3508              		.loc 20 1310 23 view .LVU938
 3509 0092 1470     		strb	r4, [r2]
1311:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3510              		.loc 20 1311 13 is_stmt 1 view .LVU939
1311:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3511              		.loc 20 1311 24 is_stmt 0 view .LVU940
 3512 0094 0370     		strb	r3, [r0]
1312:Veno-Echo.cpp ****         }
 3513              		.loc 20 1312 13 is_stmt 1 view .LVU941
1312:Veno-Echo.cpp ****         }
 3514              		.loc 20 1312 21 is_stmt 0 view .LVU942
 3515 0096 81ED000A 		vstr.32	s0, [r1]
 3516              	.L185:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 171


1312:Veno-Echo.cpp ****         }
 3517              		.loc 20 1312 21 view .LVU943
 3518              	.LBE1251:
 3519              	.LBE1272:
1342:Veno-Echo.cpp **** 
 3520              		.loc 20 1342 1 view .LVU944
 3521 009a BDEC028B 		vldm	sp!, {d8}
 3522              		.cfi_remember_state
 3523              		.cfi_restore 80
 3524              		.cfi_restore 81
 3525              		.cfi_def_cfa_offset 8
 3526 009e 10BD     		pop	{r4, pc}
 3527              	.L187:
 3528              		.cfi_restore_state
 3529              	.LBB1273:
 3530              	.LBB1267:
1262:Veno-Echo.cpp ****             {
 3531              		.loc 20 1262 13 is_stmt 1 view .LVU945
1262:Veno-Echo.cpp ****             {
 3532              		.loc 20 1262 16 is_stmt 0 view .LVU946
 3533 00a0 5E4B     		ldr	r3, .L218+36
1262:Veno-Echo.cpp ****             {
 3534              		.loc 20 1262 13 view .LVU947
 3535 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3536 00a4 7AB9     		cbnz	r2, .L189
1265:Veno-Echo.cpp ****                 {
 3537              		.loc 20 1265 17 is_stmt 1 view .LVU948
 3538              	.LVL159:
 3539              	.LBB1239:
 3540              	.LBI1239:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3541              		.loc 21 75 3 view .LVU949
 3542              	.LBB1240:
 3543              		.loc 21 76 5 view .LVU950
 3544              		.loc 21 76 5 is_stmt 0 view .LVU951
 3545              	.LBE1240:
 3546              	.LBE1239:
1265:Veno-Echo.cpp ****                 {
 3547              		.loc 20 1265 23 view .LVU952
 3548 00a6 5E4A     		ldr	r2, .L218+40
1265:Veno-Echo.cpp ****                 {
 3549              		.loc 20 1265 17 view .LVU953
 3550 00a8 9FED647A 		vldr.32	s14, .L218+68
1265:Veno-Echo.cpp ****                 {
 3551              		.loc 20 1265 23 view .LVU954
 3552 00ac D2ED007A 		vldr.32	s15, [r2]
 3553 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3554              	.LBB1242:
 3555              	.LBB1241:
 3556              		.loc 21 76 31 view .LVU955
 3557 00b4 F0EEE77A 		vabs.f32	s15, s15
 3558              	.LBE1241:
 3559              	.LBE1242:
1265:Veno-Echo.cpp ****                 {
 3560              		.loc 20 1265 17 view .LVU956
 3561 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3562 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 172


 3563 00c0 B3DD     		ble	.L188
1267:Veno-Echo.cpp ****                 }
 3564              		.loc 20 1267 21 is_stmt 1 view .LVU957
1267:Veno-Echo.cpp ****                 }
 3565              		.loc 20 1267 35 is_stmt 0 view .LVU958
 3566 00c2 0122     		movs	r2, #1
 3567 00c4 1A70     		strb	r2, [r3]
 3568              	.L189:
1273:Veno-Echo.cpp **** 
 3569              		.loc 20 1273 9 is_stmt 1 view .LVU959
 3570              	.LVL160:
1275:Veno-Echo.cpp ****         {
 3571              		.loc 20 1275 9 view .LVU960
1277:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3572              		.loc 20 1277 13 view .LVU961
 3573              	.LBB1243:
 3574              	.LBI1243:
2015:Veno-Echo.cpp **** {
 3575              		.loc 20 2015 7 view .LVU962
 3576              	.LBB1244:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3577              		.loc 20 2017 5 view .LVU963
2018:Veno-Echo.cpp **** 
 3578              		.loc 20 2018 5 view .LVU964
 3579              	.LBE1244:
 3580              	.LBE1243:
1277:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3581              		.loc 20 1277 37 is_stmt 0 view .LVU965
 3582 00c6 574B     		ldr	r3, .L218+44
 3583              	.LBB1247:
 3584              	.LBB1245:
2018:Veno-Echo.cpp **** 
 3585              		.loc 20 2018 39 view .LVU966
 3586 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
2018:Veno-Echo.cpp **** 
 3587              		.loc 20 2018 49 view .LVU967
 3588 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2018:Veno-Echo.cpp **** 
 3589              		.loc 20 2018 39 view .LVU968
 3590 00d0 D3ED007A 		vldr.32	s15, [r3]
2018:Veno-Echo.cpp **** 
 3591              		.loc 20 2018 12 view .LVU969
 3592 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
2018:Veno-Echo.cpp **** 
 3593              		.loc 20 2018 39 view .LVU970
 3594 00d8 77EE677A 		vsub.f32	s15, s14, s15
2018:Veno-Echo.cpp **** 
 3595              		.loc 20 2018 49 view .LVU971
 3596 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2018:Veno-Echo.cpp **** 
 3597              		.loc 20 2018 12 view .LVU972
 3598 00e0 B0EE406A 		vmov.f32	s12, s0
 3599 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2020:Veno-Echo.cpp ****     {
 3600              		.loc 20 2020 5 view .LVU973
 3601 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2018:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 173


 3602              		.loc 20 2018 12 view .LVU974
 3603 00ec F0EE467A 		vmov.f32	s15, s12
 3604              	.LVL161:
2020:Veno-Echo.cpp ****     {
 3605              		.loc 20 2020 5 is_stmt 1 view .LVU975
 3606 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3607 00f4 75D4     		bmi	.L216
2025:Veno-Echo.cpp ****     {
 3608              		.loc 20 2025 5 view .LVU976
 3609 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3610 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3611 00fe 75DD     		ble	.L217
2027:Veno-Echo.cpp ****     }
 3612              		.loc 20 2027 16 is_stmt 0 view .LVU977
 3613 0100 F0EE477A 		vmov.f32	s15, s14
 3614 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3615              	.LVL162:
 3616              	.L191:
2030:Veno-Echo.cpp **** }
 3617              		.loc 20 2030 5 is_stmt 1 view .LVU978
2030:Veno-Echo.cpp **** }
 3618              		.loc 20 2030 5 is_stmt 0 view .LVU979
 3619              	.LBE1245:
 3620              	.LBE1247:
1278:Veno-Echo.cpp ****         }
 3621              		.loc 20 1278 13 is_stmt 1 view .LVU980
1278:Veno-Echo.cpp ****         }
 3622              		.loc 20 1278 25 is_stmt 0 view .LVU981
 3623 0108 474B     		ldr	r3, .L218+48
 3624 010a 83ED000A 		vstr.32	s0, [r3]
 3625              	.LVL163:
 3626              	.L192:
1286:Veno-Echo.cpp **** 
 3627              		.loc 20 1286 9 is_stmt 1 view .LVU982
1288:Veno-Echo.cpp ****         {
 3628              		.loc 20 1288 9 view .LVU983
 3629 010e 9FED3A5B 		vldr.64	d5, .L218
 3630 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3631 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3632 011a A4DA     		bge	.L196
1292:Veno-Echo.cpp ****         {
 3633              		.loc 20 1292 14 view .LVU984
 3634 011c 9FED385B 		vldr.64	d5, .L218+8
 3635 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3636 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3637 0128 58D9     		bls	.L205
1298:Veno-Echo.cpp ****         }
 3638              		.loc 20 1298 13 view .LVU985
1298:Veno-Echo.cpp ****         }
 3639              		.loc 20 1298 33 is_stmt 0 view .LVU986
 3640 012a B0EE670A 		vmov.f32	s0, s15
 3641              	.LVL164:
1298:Veno-Echo.cpp ****         }
 3642              		.loc 20 1298 33 view .LVU987
 3643 012e 0020     		movs	r0, #0
 3644 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3645 0134 DFED420A 		vldr.32	s1, .L218+72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 174


 3646 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3647              	.LVL165:
1298:Veno-Echo.cpp ****         }
 3648              		.loc 20 1298 33 view .LVU988
 3649 013c 95E7     		b	.L195
 3650              	.LVL166:
 3651              	.L200:
1298:Veno-Echo.cpp ****         }
 3652              		.loc 20 1298 33 view .LVU989
 3653              	.LBE1267:
 3654              	.LBB1268:
1317:Veno-Echo.cpp ****             {
 3655              		.loc 20 1317 13 is_stmt 1 view .LVU990
1317:Veno-Echo.cpp ****             {
 3656              		.loc 20 1317 16 is_stmt 0 view .LVU991
 3657 013e 3D4B     		ldr	r3, .L218+60
1317:Veno-Echo.cpp ****             {
 3658              		.loc 20 1317 13 view .LVU992
 3659 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3660 0142 7AB9     		cbnz	r2, .L202
1319:Veno-Echo.cpp ****                 {
 3661              		.loc 20 1319 17 is_stmt 1 view .LVU993
 3662              	.LVL167:
 3663              	.LBB1252:
 3664              	.LBI1252:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3665              		.loc 21 75 3 view .LVU994
 3666              	.LBB1253:
 3667              		.loc 21 76 5 view .LVU995
 3668              		.loc 21 76 5 is_stmt 0 view .LVU996
 3669              	.LBE1253:
 3670              	.LBE1252:
1319:Veno-Echo.cpp ****                 {
 3671              		.loc 20 1319 23 view .LVU997
 3672 0144 3C4A     		ldr	r2, .L218+64
1319:Veno-Echo.cpp ****                 {
 3673              		.loc 20 1319 17 view .LVU998
 3674 0146 9FED3D7A 		vldr.32	s14, .L218+68
1319:Veno-Echo.cpp ****                 {
 3675              		.loc 20 1319 23 view .LVU999
 3676 014a D2ED007A 		vldr.32	s15, [r2]
 3677 014e 70EE677A 		vsub.f32	s15, s0, s15
 3678              	.LBB1255:
 3679              	.LBB1254:
 3680              		.loc 21 76 31 view .LVU1000
 3681 0152 F0EEE77A 		vabs.f32	s15, s15
 3682              	.LBE1254:
 3683              	.LBE1255:
1319:Veno-Echo.cpp ****                 {
 3684              		.loc 20 1319 17 view .LVU1001
 3685 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3686 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3687 015e 9CDD     		ble	.L185
1321:Veno-Echo.cpp ****                 }
 3688              		.loc 20 1321 21 is_stmt 1 view .LVU1002
1321:Veno-Echo.cpp ****                 }
 3689              		.loc 20 1321 32 is_stmt 0 view .LVU1003
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 175


 3690 0160 0122     		movs	r2, #1
 3691 0162 1A70     		strb	r2, [r3]
 3692              	.L202:
1326:Veno-Echo.cpp ****         {
 3693              		.loc 20 1326 9 is_stmt 1 view .LVU1004
 3694              	.LBB1256:
1328:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3695              		.loc 20 1328 13 view .LVU1005
 3696              	.LVL168:
1329:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3697              		.loc 20 1329 13 view .LVU1006
1329:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3698              		.loc 20 1329 24 is_stmt 0 view .LVU1007
 3699 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3700 0168 DFED350A 		vldr.32	s1, .L218+72
 3701 016c 0020     		movs	r0, #0
 3702 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3703              	.LVL169:
1329:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3704              		.loc 20 1329 24 view .LVU1008
 3705 0172 B0EE408A 		vmov.f32	s16, s0
 3706              	.LVL170:
1330:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3707              		.loc 20 1330 13 is_stmt 1 view .LVU1009
1330:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3708              		.loc 20 1330 25 is_stmt 0 view .LVU1010
 3709 0176 3348     		ldr	r0, .L218+76
 3710 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3711              	.LVL171:
1331:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3712              		.loc 20 1331 13 is_stmt 1 view .LVU1011
1331:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3713              		.loc 20 1331 25 is_stmt 0 view .LVU1012
 3714 017c 3248     		ldr	r0, .L218+80
 3715 017e B0EE480A 		vmov.f32	s0, s16
 3716 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3717              	.LVL172:
1332:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3718              		.loc 20 1332 13 is_stmt 1 view .LVU1013
1332:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3719              		.loc 20 1332 25 is_stmt 0 view .LVU1014
 3720 0186 B0EE480A 		vmov.f32	s0, s16
 3721 018a 3048     		ldr	r0, .L218+84
 3722 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3723              	.LVL173:
1333:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3724              		.loc 20 1333 13 is_stmt 1 view .LVU1015
1333:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3725              		.loc 20 1333 25 is_stmt 0 view .LVU1016
 3726 0190 B0EE480A 		vmov.f32	s0, s16
 3727 0194 2E48     		ldr	r0, .L218+88
 3728 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3729              	.LVL174:
1334:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3730              		.loc 20 1334 13 is_stmt 1 view .LVU1017
1334:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3731              		.loc 20 1334 30 is_stmt 0 view .LVU1018
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 176


 3732 019a B0EE480A 		vmov.f32	s0, s16
 3733 019e 2D48     		ldr	r0, .L218+92
 3734 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3735              	.LVL175:
1335:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3736              		.loc 20 1335 13 is_stmt 1 view .LVU1019
1335:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3737              		.loc 20 1335 30 is_stmt 0 view .LVU1020
 3738 01a4 B0EE480A 		vmov.f32	s0, s16
 3739 01a8 2B48     		ldr	r0, .L218+96
 3740 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3741              	.LVL176:
1336:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3742              		.loc 20 1336 13 is_stmt 1 view .LVU1021
1336:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3743              		.loc 20 1336 30 is_stmt 0 view .LVU1022
 3744 01ae B0EE480A 		vmov.f32	s0, s16
 3745 01b2 2A48     		ldr	r0, .L218+100
 3746 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3747              	.LVL177:
1337:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3748              		.loc 20 1337 13 is_stmt 1 view .LVU1023
1337:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3749              		.loc 20 1337 30 is_stmt 0 view .LVU1024
 3750 01b8 B0EE480A 		vmov.f32	s0, s16
 3751 01bc 2848     		ldr	r0, .L218+104
 3752 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3753              	.LVL178:
1338:Veno-Echo.cpp ****             save_flag = true;
 3754              		.loc 20 1338 13 is_stmt 1 view .LVU1025
1338:Veno-Echo.cpp ****             save_flag = true;
 3755              		.loc 20 1338 35 is_stmt 0 view .LVU1026
 3756 01c2 2849     		ldr	r1, .L218+108
 3757              	.LBB1257:
 3758              	.LBB1258:
 3759              	.LBB1259:
 3760              	.LBB1260:
 3761              	.LBB1261:
 3762              		.loc 22 397 18 view .LVU1027
 3763 01c4 284B     		ldr	r3, .L218+112
 3764 01c6 0122     		movs	r2, #1
 3765              	.LBE1261:
 3766              	.LBE1260:
 3767              	.LBE1259:
 3768              	.LBE1258:
 3769              	.LBE1257:
1338:Veno-Echo.cpp ****             save_flag = true;
 3770              		.loc 20 1338 35 view .LVU1028
 3771 01c8 81ED068A 		vstr.32	s16, [r1, #24]
1339:Veno-Echo.cpp ****         }
 3772              		.loc 20 1339 13 is_stmt 1 view .LVU1029
 3773              	.LVL179:
 3774              	.LBB1266:
 3775              	.LBI1257:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3776              		.loc 23 80 5 view .LVU1030
 3777              	.LBB1265:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 177


 3778              		.loc 23 81 7 view .LVU1031
 3779              	.LBB1264:
 3780              	.LBI1259:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3781              		.loc 22 288 7 view .LVU1032
 3782              	.LBB1263:
 3783              	.LBI1260:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3784              		.loc 22 390 7 view .LVU1033
 3785              	.LBB1262:
 3786              		.loc 22 397 18 is_stmt 0 view .LVU1034
 3787 01cc BFF35B8F 		dmb	ish
 3788 01d0 1A70     		strb	r2, [r3]
 3789 01d2 BFF35B8F 		dmb	ish
 3790              	.LVL180:
 3791              		.loc 22 397 18 view .LVU1035
 3792              	.LBE1262:
 3793              	.LBE1263:
 3794              	.LBE1264:
 3795              	.LBE1265:
 3796              	.LBE1266:
 3797              	.LBE1256:
 3798              	.LBE1268:
 3799              	.LBE1273:
1342:Veno-Echo.cpp **** 
 3800              		.loc 20 1342 1 view .LVU1036
 3801 01d6 BDEC028B 		vldm	sp!, {d8}
 3802              		.cfi_remember_state
 3803              		.cfi_restore 80
 3804              		.cfi_restore 81
 3805              		.cfi_def_cfa_offset 8
 3806              	.LVL181:
1342:Veno-Echo.cpp **** 
 3807              		.loc 20 1342 1 view .LVU1037
 3808 01da 10BD     		pop	{r4, pc}
 3809              	.LVL182:
 3810              	.L205:
 3811              		.cfi_restore_state
 3812              	.LBB1274:
 3813              	.LBB1269:
1294:Veno-Echo.cpp ****         }
 3814              		.loc 20 1294 26 view .LVU1038
 3815 01dc 9FED180A 		vldr.32	s0, .L218+72
 3816              	.LVL183:
1294:Veno-Echo.cpp ****         }
 3817              		.loc 20 1294 26 view .LVU1039
 3818 01e0 43E7     		b	.L195
 3819              	.LVL184:
 3820              	.L216:
 3821              	.LBB1248:
 3822              	.LBB1246:
1294:Veno-Echo.cpp ****         }
 3823              		.loc 20 1294 26 view .LVU1040
 3824 01e2 9FED096B 		vldr.64	d6, .L218+16
 3825              	.LVL185:
2022:Veno-Echo.cpp ****     }
 3826              		.loc 20 2022 16 view .LVU1041
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 178


 3827 01e6 DFED167A 		vldr.32	s15, .L218+72
 3828              	.LVL186:
2022:Veno-Echo.cpp ****     }
 3829              		.loc 20 2022 16 view .LVU1042
 3830 01ea 8DE7     		b	.L191
 3831              	.LVL187:
 3832              	.L217:
2022:Veno-Echo.cpp ****     }
 3833              		.loc 20 2022 16 view .LVU1043
 3834 01ec B7EEE76A 		vcvt.f64.f32	d6, s15
 3835              	.LVL188:
2022:Veno-Echo.cpp ****     }
 3836              		.loc 20 2022 16 view .LVU1044
 3837 01f0 8AE7     		b	.L191
 3838              	.LVL189:
 3839              	.L211:
2022:Veno-Echo.cpp ****     }
 3840              		.loc 20 2022 16 view .LVU1045
 3841 01f2 B7EEE76A 		vcvt.f64.f32	d6, s15
 3842 01f6 8AE7     		b	.L192
 3843              	.L219:
 3844              		.align	3
 3845              	.L218:
 3846 01f8 5C8FC2F5 		.word	4123168604
 3847 01fc 285CEF3F 		.word	1072651304
 3848 0200 7B14AE47 		.word	1202590843
 3849 0204 E17A943F 		.word	1066695393
 3850 0208 00000000 		.word	0
 3851 020c 00000000 		.word	0
 3852 0210 18000000 		.word	.LANCHOR4+24
 3853 0214 00000000 		.word	.LANCHOR7
 3854 0218 00000000 		.word	.LANCHOR52
 3855 021c 00000000 		.word	.LANCHOR53
 3856 0220 00000000 		.word	.LANCHOR54
 3857 0224 00000000 		.word	.LANCHOR51
 3858 0228 00000000 		.word	.LANCHOR55
 3859 022c 00000000 		.word	.LANCHOR56
 3860 0230 6F12833C 		.word	1015222895
 3861 0234 00000000 		.word	.LANCHOR57
 3862 0238 00000000 		.word	.LANCHOR58
 3863 023c 0AD7A33B 		.word	1000593162
 3864 0240 00000000 		.word	0
 3865 0244 00000000 		.word	.LANCHOR47
 3866 0248 00000000 		.word	.LANCHOR48
 3867 024c 00000000 		.word	.LANCHOR35
 3868 0250 00000000 		.word	.LANCHOR36
 3869 0254 00000000 		.word	.LANCHOR49
 3870 0258 00000000 		.word	.LANCHOR50
 3871 025c 00000000 		.word	.LANCHOR37
 3872 0260 00000000 		.word	.LANCHOR38
 3873 0264 00000000 		.word	.LANCHOR15
 3874 0268 00000000 		.word	.LANCHOR16
 3875              	.LBE1246:
 3876              	.LBE1248:
 3877              	.LBE1269:
 3878              	.LBE1274:
 3879              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 179


 3880              	.LFE4810:
 3882              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3883              		.align	1
 3884              		.p2align 2,,3
 3885              		.global	_Z15Update_width_CVv
 3886              		.syntax unified
 3887              		.thumb
 3888              		.thumb_func
 3889              		.fpu fpv5-d16
 3891              	_Z15Update_width_CVv:
 3892              	.LFB4811:
1345:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3893              		.loc 20 1345 1 is_stmt 1 view -0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
1346:Veno-Echo.cpp **** }
 3897              		.loc 20 1346 5 view .LVU1047
1345:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3898              		.loc 20 1345 1 is_stmt 0 view .LVU1048
 3899 0000 08B5     		push	{r3, lr}
 3900              		.cfi_def_cfa_offset 8
 3901              		.cfi_offset 3, -8
 3902              		.cfi_offset 14, -4
1346:Veno-Echo.cpp **** }
 3903              		.loc 20 1346 30 view .LVU1049
 3904 0002 0521     		movs	r1, #5
 3905 0004 0348     		ldr	r0, .L222
 3906 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3907              	.LVL190:
1346:Veno-Echo.cpp **** }
 3908              		.loc 20 1346 13 view .LVU1050
 3909 000a 034B     		ldr	r3, .L222+4
 3910 000c 83ED000A 		vstr.32	s0, [r3]
1347:Veno-Echo.cpp **** 
 3911              		.loc 20 1347 1 view .LVU1051
 3912 0010 08BD     		pop	{r3, pc}
 3913              	.L223:
 3914 0012 00BF     		.align	2
 3915              	.L222:
 3916 0014 18000000 		.word	.LANCHOR4+24
 3917 0018 00000000 		.word	.LANCHOR59
 3918              		.cfi_endproc
 3919              	.LFE4811:
 3921              		.section	.text._Z12Update_widthv,"ax",%progbits
 3922              		.align	1
 3923              		.p2align 2,,3
 3924              		.global	_Z12Update_widthv
 3925              		.syntax unified
 3926              		.thumb
 3927              		.thumb_func
 3928              		.fpu fpv5-d16
 3930              	_Z12Update_widthv:
 3931              	.LFB4812:
1350:Veno-Echo.cpp ****     static bool lastShift{};
 3932              		.loc 20 1350 1 is_stmt 1 view -0
 3933              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 180


 3934              		@ args = 0, pretend = 0, frame = 0
 3935              		@ frame_needed = 0, uses_anonymous_args = 0
1351:Veno-Echo.cpp ****     static bool width_pickup{};
 3936              		.loc 20 1351 5 view .LVU1053
1352:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3937              		.loc 20 1352 5 view .LVU1054
1353:Veno-Echo.cpp **** 
 3938              		.loc 20 1353 5 view .LVU1055
1355:Veno-Echo.cpp **** 
 3939              		.loc 20 1355 5 view .LVU1056
1358:Veno-Echo.cpp **** 
 3940              		.loc 20 1358 5 view .LVU1057
1358:Veno-Echo.cpp **** 
 3941              		.loc 20 1358 39 is_stmt 0 view .LVU1058
 3942 0000 0722     		movs	r2, #7
 3943 0002 6348     		ldr	r0, .L253
 3944 0004 1146     		mov	r1, r2
1350:Veno-Echo.cpp ****     static bool lastShift{};
 3945              		.loc 20 1350 1 view .LVU1059
 3946 0006 10B5     		push	{r4, lr}
 3947              		.cfi_def_cfa_offset 8
 3948              		.cfi_offset 4, -8
 3949              		.cfi_offset 14, -4
 3950 0008 2DED028B 		vpush.64	{d8}
 3951              		.cfi_def_cfa_offset 16
 3952              		.cfi_offset 80, -16
 3953              		.cfi_offset 81, -12
1358:Veno-Echo.cpp **** 
 3954              		.loc 20 1358 39 view .LVU1060
 3955 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3956              	.LVL191:
 3957              	.LBB1275:
1360:Veno-Echo.cpp ****     {   
 3958              		.loc 20 1360 9 view .LVU1061
 3959 0010 604B     		ldr	r3, .L253+4
 3960              	.LBE1275:
1358:Veno-Echo.cpp **** 
 3961              		.loc 20 1358 39 view .LVU1062
 3962 0012 B0EE408A 		vmov.f32	s16, s0
 3963              	.LVL192:
1360:Veno-Echo.cpp ****     {   
 3964              		.loc 20 1360 5 is_stmt 1 view .LVU1063
 3965              	.LBB1330:
 3966              	.LBB1276:
1364:Veno-Echo.cpp ****         {
 3967              		.loc 20 1364 19 is_stmt 0 view .LVU1064
 3968 0016 604A     		ldr	r2, .L253+8
 3969              	.LBE1276:
1360:Veno-Echo.cpp ****     {   
 3970              		.loc 20 1360 5 view .LVU1065
 3971 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3972 001a 002B     		cmp	r3, #0
 3973 001c 3ED1     		bne	.L225
 3974              	.LBB1305:
1362:Veno-Echo.cpp ****         //update pickup
 3975              		.loc 20 1362 9 is_stmt 1 view .LVU1066
1364:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 181


 3976              		.loc 20 1364 9 view .LVU1067
 3977 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3978 0020 0029     		cmp	r1, #0
 3979 0022 48D0     		beq	.L226
1366:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3980              		.loc 20 1366 13 view .LVU1068
1367:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3981              		.loc 20 1367 26 is_stmt 0 view .LVU1069
 3982 0024 5D48     		ldr	r0, .L253+12
1368:Veno-Echo.cpp ****         }
 3983              		.loc 20 1368 23 view .LVU1070
 3984 0026 5E49     		ldr	r1, .L253+16
1366:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3985              		.loc 20 1366 23 view .LVU1071
 3986 0028 1370     		strb	r3, [r2]
1367:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3987              		.loc 20 1367 13 is_stmt 1 view .LVU1072
1367:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3988              		.loc 20 1367 26 is_stmt 0 view .LVU1073
 3989 002a 0370     		strb	r3, [r0]
1368:Veno-Echo.cpp ****         }
 3990              		.loc 20 1368 13 is_stmt 1 view .LVU1074
1368:Veno-Echo.cpp ****         }
 3991              		.loc 20 1368 23 is_stmt 0 view .LVU1075
 3992 002c 81ED000A 		vstr.32	s0, [r1]
 3993              	.L227:
1383:Veno-Echo.cpp **** 
 3994              		.loc 20 1383 9 is_stmt 1 view .LVU1076
 3995              	.LVL193:
1385:Veno-Echo.cpp ****         {
 3996              		.loc 20 1385 9 view .LVU1077
1393:Veno-Echo.cpp ****         }
 3997              		.loc 20 1393 13 view .LVU1078
 3998              	.LBB1277:
 3999              	.LBI1277:
2015:Veno-Echo.cpp **** {
 4000              		.loc 20 2015 7 view .LVU1079
 4001              	.LBB1278:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4002              		.loc 20 2017 5 view .LVU1080
2018:Veno-Echo.cpp **** 
 4003              		.loc 20 2018 5 view .LVU1081
 4004              	.LBE1278:
 4005              	.LBE1277:
1393:Veno-Echo.cpp ****         }
 4006              		.loc 20 1393 32 is_stmt 0 view .LVU1082
 4007 0030 5C4A     		ldr	r2, .L253+20
 4008              	.LBB1282:
 4009              	.LBB1279:
2018:Veno-Echo.cpp **** 
 4010              		.loc 20 2018 39 view .LVU1083
 4011 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2018:Veno-Echo.cpp **** 
 4012              		.loc 20 2018 49 view .LVU1084
 4013 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 4014              	.LBE1279:
 4015              	.LBE1282:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 182


1393:Veno-Echo.cpp ****         }
 4016              		.loc 20 1393 32 view .LVU1085
 4017 003a 5B4B     		ldr	r3, .L253+24
 4018              	.LBB1283:
 4019              	.LBB1280:
2018:Veno-Echo.cpp **** 
 4020              		.loc 20 2018 39 view .LVU1086
 4021 003c D2ED007A 		vldr.32	s15, [r2]
2018:Veno-Echo.cpp **** 
 4022              		.loc 20 2018 12 view .LVU1087
 4023 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 4024 0044 93ED000A 		vldr.32	s0, [r3]
 4025              	.LVL194:
2018:Veno-Echo.cpp **** 
 4026              		.loc 20 2018 39 view .LVU1088
 4027 0048 77EE677A 		vsub.f32	s15, s14, s15
2018:Veno-Echo.cpp **** 
 4028              		.loc 20 2018 49 view .LVU1089
 4029 004c 77EEC67A 		vsub.f32	s15, s15, s12
2018:Veno-Echo.cpp **** 
 4030              		.loc 20 2018 12 view .LVU1090
 4031 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 4032              	.LVL195:
2020:Veno-Echo.cpp ****     {
 4033              		.loc 20 2020 5 is_stmt 1 view .LVU1091
 4034 0054 B5EEC00A 		vcmpe.f32	s0, #0
 4035 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4036 005c 00F19180 		bmi	.L251
2025:Veno-Echo.cpp ****     {
 4037              		.loc 20 2025 5 view .LVU1092
2027:Veno-Echo.cpp ****     }
 4038              		.loc 20 2027 16 is_stmt 0 view .LVU1093
 4039 0060 B4EE470A 		vcmp.f32	s0, s14
 4040 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4041 0068 37FE000A 		vselgt.f32	s0, s14, s0
 4042              	.LVL196:
 4043              	.L233:
2030:Veno-Echo.cpp **** }
 4044              		.loc 20 2030 5 is_stmt 1 view .LVU1094
2030:Veno-Echo.cpp **** }
 4045              		.loc 20 2030 5 is_stmt 0 view .LVU1095
 4046              	.LBE1280:
 4047              	.LBE1283:
1393:Veno-Echo.cpp ****         }
 4048              		.loc 20 1393 32 view .LVU1096
 4049 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 4050 0070 0020     		movs	r0, #0
 4051 0072 9FED4E1A 		vldr.32	s2, .L253+28
 4052 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4053              	.LVL197:
 4054              	.L232:
1396:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 4055              		.loc 20 1396 13 is_stmt 1 view .LVU1097
 4056              	.LBB1284:
 4057              	.LBI1284:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4058              		.loc 25 135 13 view .LVU1098
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 183


 4059              	.LBB1285:
 4060              		.loc 25 137 5 view .LVU1099
 4061              		.loc 25 137 9 is_stmt 0 view .LVU1100
 4062 007a 4D4B     		ldr	r3, .L253+32
 4063 007c 9FED4D7A 		vldr.32	s14, .L253+36
 4064 0080 D3ED007A 		vldr.32	s15, [r3]
 4065              	.LBE1285:
 4066              	.LBE1284:
 4067              	.LBB1288:
 4068              	.LBB1289:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 4069              		.loc 11 60 42 view .LVU1101
 4070 0084 4C4A     		ldr	r2, .L253+40
 4071              	.LBE1289:
 4072              	.LBE1288:
 4073              	.LBB1291:
 4074              	.LBB1286:
 4075              		.loc 25 137 24 view .LVU1102
 4076 0086 30EE670A 		vsub.f32	s0, s0, s15
 4077              	.LVL198:
 4078              		.loc 25 137 24 view .LVU1103
 4079              	.LBE1286:
 4080              	.LBE1291:
 4081              	.LBE1305:
 4082              	.LBE1330:
1429:Veno-Echo.cpp **** 
 4083              		.loc 20 1429 1 view .LVU1104
 4084 008a BDEC028B 		vldm	sp!, {d8}
 4085              		.cfi_remember_state
 4086              		.cfi_restore 80
 4087              		.cfi_restore 81
 4088              		.cfi_def_cfa_offset 8
 4089              	.LVL199:
 4090              	.LBB1331:
 4091              	.LBB1306:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 184


 4092              	.LBB1292:
 4093              	.LBB1287:
 4094              		.loc 25 137 9 view .LVU1105
 4095 008e E0EE077A 		vfma.f32	s15, s0, s14
 4096 0092 C3ED007A 		vstr.32	s15, [r3]
 4097              	.LVL200:
 4098              		.loc 25 137 9 view .LVU1106
 4099              	.LBE1287:
 4100              	.LBE1292:
1397:Veno-Echo.cpp ****     }
 4101              		.loc 20 1397 13 is_stmt 1 view .LVU1107
 4102              	.LBB1293:
 4103              	.LBI1288:
 4104              		.loc 11 60 17 view .LVU1108
 4105              	.LBB1290:
 4106              		.loc 11 60 37 view .LVU1109
 4107              		.loc 11 60 42 is_stmt 0 view .LVU1110
 4108 0096 C2ED007A 		vstr.32	s15, [r2]
 4109              	.LBE1290:
 4110              	.LBE1293:
 4111              	.LBE1306:
 4112              	.LBE1331:
1429:Veno-Echo.cpp **** 
 4113              		.loc 20 1429 1 view .LVU1111
 4114 009a 10BD     		pop	{r4, pc}
 4115              	.LVL201:
 4116              	.L225:
 4117              		.cfi_restore_state
 4118              	.LBB1332:
 4119              	.LBB1307:
1402:Veno-Echo.cpp **** 
 4120              		.loc 20 1402 9 is_stmt 1 view .LVU1112
1404:Veno-Echo.cpp ****         {
 4121              		.loc 20 1404 9 view .LVU1113
 4122 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4123 009e 002B     		cmp	r3, #0
 4124 00a0 43D1     		bne	.L236
1406:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4125              		.loc 20 1406 13 view .LVU1114
1406:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4126              		.loc 20 1406 23 is_stmt 0 view .LVU1115
 4127 00a2 0124     		movs	r4, #1
1407:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4128              		.loc 20 1407 29 view .LVU1116
 4129 00a4 4548     		ldr	r0, .L253+44
1408:Veno-Echo.cpp ****         }
 4130              		.loc 20 1408 26 view .LVU1117
 4131 00a6 4649     		ldr	r1, .L253+48
1406:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4132              		.loc 20 1406 23 view .LVU1118
 4133 00a8 1470     		strb	r4, [r2]
1407:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4134              		.loc 20 1407 13 is_stmt 1 view .LVU1119
1407:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4135              		.loc 20 1407 29 is_stmt 0 view .LVU1120
 4136 00aa 0370     		strb	r3, [r0]
1408:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 185


 4137              		.loc 20 1408 13 is_stmt 1 view .LVU1121
1408:Veno-Echo.cpp ****         }
 4138              		.loc 20 1408 26 is_stmt 0 view .LVU1122
 4139 00ac 81ED000A 		vstr.32	s0, [r1]
 4140              	.L224:
1408:Veno-Echo.cpp ****         }
 4141              		.loc 20 1408 26 view .LVU1123
 4142              	.LBE1307:
 4143              	.LBE1332:
1429:Veno-Echo.cpp **** 
 4144              		.loc 20 1429 1 view .LVU1124
 4145 00b0 BDEC028B 		vldm	sp!, {d8}
 4146              		.cfi_remember_state
 4147              		.cfi_restore 80
 4148              		.cfi_restore 81
 4149              		.cfi_def_cfa_offset 8
 4150 00b4 10BD     		pop	{r4, pc}
 4151              	.L226:
 4152              		.cfi_restore_state
 4153              	.LBB1333:
 4154              	.LBB1327:
1373:Veno-Echo.cpp ****             {
 4155              		.loc 20 1373 13 is_stmt 1 view .LVU1125
1373:Veno-Echo.cpp ****             {
 4156              		.loc 20 1373 16 is_stmt 0 view .LVU1126
 4157 00b6 394B     		ldr	r3, .L253+12
1373:Veno-Echo.cpp ****             {
 4158              		.loc 20 1373 13 view .LVU1127
 4159 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4160 00ba 7AB9     		cbnz	r2, .L228
1375:Veno-Echo.cpp ****                 {
 4161              		.loc 20 1375 17 is_stmt 1 view .LVU1128
 4162              	.LVL202:
 4163              	.LBB1294:
 4164              	.LBI1294:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4165              		.loc 21 75 3 view .LVU1129
 4166              	.LBB1295:
 4167              		.loc 21 76 5 view .LVU1130
 4168              		.loc 21 76 5 is_stmt 0 view .LVU1131
 4169              	.LBE1295:
 4170              	.LBE1294:
1375:Veno-Echo.cpp ****                 {
 4171              		.loc 20 1375 23 view .LVU1132
 4172 00bc 384A     		ldr	r2, .L253+16
1375:Veno-Echo.cpp ****                 {
 4173              		.loc 20 1375 17 view .LVU1133
 4174 00be 9FED417A 		vldr.32	s14, .L253+52
1375:Veno-Echo.cpp ****                 {
 4175              		.loc 20 1375 23 view .LVU1134
 4176 00c2 D2ED007A 		vldr.32	s15, [r2]
 4177 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4178              	.LBB1297:
 4179              	.LBB1296:
 4180              		.loc 21 76 31 view .LVU1135
 4181 00ca F0EEE77A 		vabs.f32	s15, s15
 4182              	.LBE1296:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 186


 4183              	.LBE1297:
1375:Veno-Echo.cpp ****                 {
 4184              		.loc 20 1375 17 view .LVU1136
 4185 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4186 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4187 00d6 ABDD     		ble	.L227
1377:Veno-Echo.cpp ****                 }
 4188              		.loc 20 1377 21 is_stmt 1 view .LVU1137
1377:Veno-Echo.cpp ****                 }
 4189              		.loc 20 1377 34 is_stmt 0 view .LVU1138
 4190 00d8 0122     		movs	r2, #1
 4191 00da 1A70     		strb	r2, [r3]
 4192              	.L228:
1383:Veno-Echo.cpp **** 
 4193              		.loc 20 1383 9 is_stmt 1 view .LVU1139
 4194              	.LVL203:
1385:Veno-Echo.cpp ****         {
 4195              		.loc 20 1385 9 view .LVU1140
1387:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4196              		.loc 20 1387 13 view .LVU1141
 4197              	.LBB1298:
 4198              	.LBI1298:
2015:Veno-Echo.cpp **** {
 4199              		.loc 20 2015 7 view .LVU1142
 4200              	.LBB1299:
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4201              		.loc 20 2017 5 view .LVU1143
2018:Veno-Echo.cpp **** 
 4202              		.loc 20 2018 5 view .LVU1144
 4203              	.LBE1299:
 4204              	.LBE1298:
1387:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4205              		.loc 20 1387 32 is_stmt 0 view .LVU1145
 4206 00dc 314B     		ldr	r3, .L253+20
 4207              	.LBB1302:
 4208              	.LBB1300:
2018:Veno-Echo.cpp **** 
 4209              		.loc 20 2018 39 view .LVU1146
 4210 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2018:Veno-Echo.cpp **** 
 4211              		.loc 20 2018 49 view .LVU1147
 4212 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2018:Veno-Echo.cpp **** 
 4213              		.loc 20 2018 39 view .LVU1148
 4214 00e6 D3ED007A 		vldr.32	s15, [r3]
2018:Veno-Echo.cpp **** 
 4215              		.loc 20 2018 12 view .LVU1149
 4216 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4217 00ee B0EE480A 		vmov.f32	s0, s16
 4218              	.LVL204:
2018:Veno-Echo.cpp **** 
 4219              		.loc 20 2018 39 view .LVU1150
 4220 00f2 77EE677A 		vsub.f32	s15, s14, s15
2018:Veno-Echo.cpp **** 
 4221              		.loc 20 2018 49 view .LVU1151
 4222 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2018:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 187


 4223              		.loc 20 2018 12 view .LVU1152
 4224 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4225              	.LVL205:
2020:Veno-Echo.cpp ****     {
 4226              		.loc 20 2020 5 is_stmt 1 view .LVU1153
 4227 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4228 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4229 0106 3FD4     		bmi	.L252
2025:Veno-Echo.cpp ****     {
 4230              		.loc 20 2025 5 view .LVU1154
2027:Veno-Echo.cpp ****     }
 4231              		.loc 20 2027 16 is_stmt 0 view .LVU1155
 4232 0108 B4EE470A 		vcmp.f32	s0, s14
 4233 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4234 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4235              	.LVL206:
 4236              	.L230:
2030:Veno-Echo.cpp **** }
 4237              		.loc 20 2030 5 is_stmt 1 view .LVU1156
2030:Veno-Echo.cpp **** }
 4238              		.loc 20 2030 5 is_stmt 0 view .LVU1157
 4239              	.LBE1300:
 4240              	.LBE1302:
1387:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4241              		.loc 20 1387 32 view .LVU1158
 4242 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4243 0118 0020     		movs	r0, #0
 4244 011a 9FED241A 		vldr.32	s2, .L253+28
 4245 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4246              	.LVL207:
1388:Veno-Echo.cpp ****         }
 4247              		.loc 20 1388 24 view .LVU1159
 4248 0122 214B     		ldr	r3, .L253+24
 4249              	.LVL208:
1388:Veno-Echo.cpp ****         }
 4250              		.loc 20 1388 13 is_stmt 1 view .LVU1160
1388:Veno-Echo.cpp ****         }
 4251              		.loc 20 1388 24 is_stmt 0 view .LVU1161
 4252 0124 83ED008A 		vstr.32	s16, [r3]
 4253 0128 A7E7     		b	.L232
 4254              	.LVL209:
 4255              	.L236:
1388:Veno-Echo.cpp ****         }
 4256              		.loc 20 1388 24 view .LVU1162
 4257              	.LBE1327:
 4258              	.LBB1328:
1413:Veno-Echo.cpp ****             {
 4259              		.loc 20 1413 13 is_stmt 1 view .LVU1163
1413:Veno-Echo.cpp ****             {
 4260              		.loc 20 1413 16 is_stmt 0 view .LVU1164
 4261 012a 244B     		ldr	r3, .L253+44
1413:Veno-Echo.cpp ****             {
 4262              		.loc 20 1413 13 view .LVU1165
 4263 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4264 012e 7AB9     		cbnz	r2, .L238
1415:Veno-Echo.cpp ****                 {
 4265              		.loc 20 1415 17 is_stmt 1 view .LVU1166
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 188


 4266              	.LVL210:
 4267              	.LBB1308:
 4268              	.LBI1308:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4269              		.loc 21 75 3 view .LVU1167
 4270              	.LBB1309:
 4271              		.loc 21 76 5 view .LVU1168
 4272              		.loc 21 76 5 is_stmt 0 view .LVU1169
 4273              	.LBE1309:
 4274              	.LBE1308:
1415:Veno-Echo.cpp ****                 {
 4275              		.loc 20 1415 23 view .LVU1170
 4276 0130 234A     		ldr	r2, .L253+48
1415:Veno-Echo.cpp ****                 {
 4277              		.loc 20 1415 17 view .LVU1171
 4278 0132 9FED247A 		vldr.32	s14, .L253+52
1415:Veno-Echo.cpp ****                 {
 4279              		.loc 20 1415 23 view .LVU1172
 4280 0136 D2ED007A 		vldr.32	s15, [r2]
 4281 013a 70EE677A 		vsub.f32	s15, s0, s15
 4282              	.LBB1311:
 4283              	.LBB1310:
 4284              		.loc 21 76 31 view .LVU1173
 4285 013e F0EEE77A 		vabs.f32	s15, s15
 4286              	.LBE1310:
 4287              	.LBE1311:
1415:Veno-Echo.cpp ****                 {
 4288              		.loc 20 1415 17 view .LVU1174
 4289 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4290 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4291 014a B1DD     		ble	.L224
1417:Veno-Echo.cpp ****                 }
 4292              		.loc 20 1417 21 is_stmt 1 view .LVU1175
1417:Veno-Echo.cpp ****                 }
 4293              		.loc 20 1417 37 is_stmt 0 view .LVU1176
 4294 014c 0122     		movs	r2, #1
 4295 014e 1A70     		strb	r2, [r3]
 4296              	.L238:
1422:Veno-Echo.cpp ****         {
 4297              		.loc 20 1422 9 is_stmt 1 view .LVU1177
1424:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4298              		.loc 20 1424 13 view .LVU1178
1424:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4299              		.loc 20 1424 29 is_stmt 0 view .LVU1179
 4300 0150 B0EE480A 		vmov.f32	s0, s16
 4301              	.LVL211:
1424:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4302              		.loc 20 1424 29 view .LVU1180
 4303 0154 0020     		movs	r0, #0
 4304 0156 9FED1C1A 		vldr.32	s2, .L253+56
 4305 015a DFED140A 		vldr.32	s1, .L253+28
 4306 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4307              	.LVL212:
1424:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4308              		.loc 20 1424 22 view .LVU1181
 4309 0162 1A48     		ldr	r0, .L253+60
 4310              	.LBB1312:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 189


 4311              	.LBB1313:
 4312              	.LBB1314:
 4313              	.LBB1315:
 4314              	.LBB1316:
 4315              		.loc 22 397 18 view .LVU1182
 4316 0164 0122     		movs	r2, #1
 4317              	.LBE1316:
 4318              	.LBE1315:
 4319              	.LBE1314:
 4320              	.LBE1313:
 4321              	.LBE1312:
1425:Veno-Echo.cpp ****             save_flag = true;
 4322              		.loc 20 1425 34 view .LVU1183
 4323 0166 1A49     		ldr	r1, .L253+64
 4324              	.LBB1325:
 4325              	.LBB1323:
 4326              	.LBB1321:
 4327              	.LBB1319:
 4328              	.LBB1317:
 4329              		.loc 22 397 18 view .LVU1184
 4330 0168 1A4B     		ldr	r3, .L253+68
 4331              	.LBE1317:
 4332              	.LBE1319:
 4333              	.LBE1321:
 4334              	.LBE1323:
 4335              	.LBE1325:
1424:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4336              		.loc 20 1424 22 view .LVU1185
 4337 016a 80ED000A 		vstr.32	s0, [r0]
1425:Veno-Echo.cpp ****             save_flag = true;
 4338              		.loc 20 1425 13 is_stmt 1 view .LVU1186
1425:Veno-Echo.cpp ****             save_flag = true;
 4339              		.loc 20 1425 34 is_stmt 0 view .LVU1187
 4340 016e 81ED020A 		vstr.32	s0, [r1, #8]
1426:Veno-Echo.cpp ****         }
 4341              		.loc 20 1426 13 is_stmt 1 view .LVU1188
 4342              	.LVL213:
 4343              	.LBB1326:
 4344              	.LBI1312:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4345              		.loc 23 80 5 view .LVU1189
 4346              	.LBB1324:
 4347              		.loc 23 81 7 view .LVU1190
 4348              	.LBB1322:
 4349              	.LBI1314:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4350              		.loc 22 288 7 view .LVU1191
 4351              	.LBB1320:
 4352              	.LBI1315:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4353              		.loc 22 390 7 view .LVU1192
 4354              	.LBB1318:
 4355              		.loc 22 397 18 is_stmt 0 view .LVU1193
 4356 0172 BFF35B8F 		dmb	ish
 4357 0176 1A70     		strb	r2, [r3]
 4358 0178 BFF35B8F 		dmb	ish
 4359              	.LVL214:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 190


 4360              		.loc 22 397 18 view .LVU1194
 4361              	.LBE1318:
 4362              	.LBE1320:
 4363              	.LBE1322:
 4364              	.LBE1324:
 4365              	.LBE1326:
 4366              	.LBE1328:
 4367              	.LBE1333:
1429:Veno-Echo.cpp **** 
 4368              		.loc 20 1429 1 view .LVU1195
 4369 017c BDEC028B 		vldm	sp!, {d8}
 4370              		.cfi_remember_state
 4371              		.cfi_restore 80
 4372              		.cfi_restore 81
 4373              		.cfi_def_cfa_offset 8
 4374              	.LVL215:
1429:Veno-Echo.cpp **** 
 4375              		.loc 20 1429 1 view .LVU1196
 4376 0180 10BD     		pop	{r4, pc}
 4377              	.LVL216:
 4378              	.L251:
 4379              		.cfi_restore_state
 4380              	.LBB1334:
 4381              	.LBB1329:
 4382              	.LBB1303:
 4383              	.LBB1281:
2022:Veno-Echo.cpp ****     }
 4384              		.loc 20 2022 16 view .LVU1197
 4385 0182 9FED0A0A 		vldr.32	s0, .L253+28
 4386              	.LVL217:
2022:Veno-Echo.cpp ****     }
 4387              		.loc 20 2022 16 view .LVU1198
 4388 0186 71E7     		b	.L233
 4389              	.LVL218:
 4390              	.L252:
2022:Veno-Echo.cpp ****     }
 4391              		.loc 20 2022 16 view .LVU1199
 4392              	.LBE1281:
 4393              	.LBE1303:
 4394              	.LBB1304:
 4395              	.LBB1301:
 4396 0188 9FED080A 		vldr.32	s0, .L253+28
 4397              	.LVL219:
2022:Veno-Echo.cpp ****     }
 4398              		.loc 20 2022 16 view .LVU1200
 4399 018c C2E7     		b	.L230
 4400              	.L254:
 4401 018e 00BF     		.align	2
 4402              	.L253:
 4403 0190 18000000 		.word	.LANCHOR4+24
 4404 0194 00000000 		.word	.LANCHOR7
 4405 0198 00000000 		.word	.LANCHOR60
 4406 019c 00000000 		.word	.LANCHOR61
 4407 01a0 00000000 		.word	.LANCHOR62
 4408 01a4 00000000 		.word	.LANCHOR59
 4409 01a8 00000000 		.word	.LANCHOR63
 4410 01ac 00000000 		.word	0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 191


 4411 01b0 00000000 		.word	.LANCHOR64
 4412 01b4 6F12033D 		.word	1023611503
 4413 01b8 00000000 		.word	.LANCHOR65
 4414 01bc 00000000 		.word	.LANCHOR66
 4415 01c0 00000000 		.word	.LANCHOR67
 4416 01c4 0AD7A33B 		.word	1000593162
 4417 01c8 0000FA43 		.word	1140457472
 4418 01cc 00000000 		.word	.LANCHOR68
 4419 01d0 00000000 		.word	.LANCHOR15
 4420 01d4 00000000 		.word	.LANCHOR16
 4421              	.LBE1301:
 4422              	.LBE1304:
 4423              	.LBE1329:
 4424              	.LBE1334:
 4425              		.cfi_endproc
 4426              	.LFE4812:
 4428              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4429              		.align	1
 4430              		.p2align 2,,3
 4431              		.global	_Z20Update_crossfeedbackv
 4432              		.syntax unified
 4433              		.thumb
 4434              		.thumb_func
 4435              		.fpu fpv5-d16
 4437              	_Z20Update_crossfeedbackv:
 4438              	.LFB4813:
1432:Veno-Echo.cpp ****     static bool lastShift{};
 4439              		.loc 20 1432 1 is_stmt 1 view -0
 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 0
 4442              		@ frame_needed = 0, uses_anonymous_args = 0
1433:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4443              		.loc 20 1433 5 view .LVU1202
1434:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4444              		.loc 20 1434 5 view .LVU1203
1435:Veno-Echo.cpp **** 
 4445              		.loc 20 1435 5 view .LVU1204
1437:Veno-Echo.cpp **** 
 4446              		.loc 20 1437 5 view .LVU1205
1440:Veno-Echo.cpp **** 
 4447              		.loc 20 1440 5 view .LVU1206
1440:Veno-Echo.cpp **** 
 4448              		.loc 20 1440 47 is_stmt 0 view .LVU1207
 4449 0000 0022     		movs	r2, #0
 4450 0002 0721     		movs	r1, #7
 4451 0004 4548     		ldr	r0, .L270
1432:Veno-Echo.cpp ****     static bool lastShift{};
 4452              		.loc 20 1432 1 view .LVU1208
 4453 0006 10B5     		push	{r4, lr}
 4454              		.cfi_def_cfa_offset 8
 4455              		.cfi_offset 4, -8
 4456              		.cfi_offset 14, -4
 4457 0008 2DED028B 		vpush.64	{d8}
 4458              		.cfi_def_cfa_offset 16
 4459              		.cfi_offset 80, -16
 4460              		.cfi_offset 81, -12
1440:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 192


 4461              		.loc 20 1440 47 view .LVU1209
 4462 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4463              	.LVL220:
 4464              	.LBB1335:
1442:Veno-Echo.cpp ****     {   
 4465              		.loc 20 1442 9 view .LVU1210
 4466 0010 434B     		ldr	r3, .L270+4
 4467              	.LBE1335:
1440:Veno-Echo.cpp **** 
 4468              		.loc 20 1440 47 view .LVU1211
 4469 0012 B0EE408A 		vmov.f32	s16, s0
 4470              	.LVL221:
1442:Veno-Echo.cpp ****     {   
 4471              		.loc 20 1442 5 is_stmt 1 view .LVU1212
 4472              	.LBB1373:
 4473              	.LBB1336:
1446:Veno-Echo.cpp ****         {
 4474              		.loc 20 1446 19 is_stmt 0 view .LVU1213
 4475 0016 434A     		ldr	r2, .L270+8
 4476              	.LBE1336:
1442:Veno-Echo.cpp ****     {   
 4477              		.loc 20 1442 5 view .LVU1214
 4478 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4479 001a FBB9     		cbnz	r3, .L256
 4480              	.LBB1345:
1444:Veno-Echo.cpp ****         //update pickup
 4481              		.loc 20 1444 9 is_stmt 1 view .LVU1215
1446:Veno-Echo.cpp ****         {
 4482              		.loc 20 1446 9 view .LVU1216
 4483 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4484 001e 49B3     		cbz	r1, .L257
1448:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4485              		.loc 20 1448 13 view .LVU1217
1449:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4486              		.loc 20 1449 34 is_stmt 0 view .LVU1218
 4487 0020 4148     		ldr	r0, .L270+12
1450:Veno-Echo.cpp ****         }
 4488              		.loc 20 1450 31 view .LVU1219
 4489 0022 4249     		ldr	r1, .L270+16
1448:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4490              		.loc 20 1448 23 view .LVU1220
 4491 0024 1370     		strb	r3, [r2]
1449:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4492              		.loc 20 1449 13 is_stmt 1 view .LVU1221
1449:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4493              		.loc 20 1449 34 is_stmt 0 view .LVU1222
 4494 0026 0370     		strb	r3, [r0]
1450:Veno-Echo.cpp ****         }
 4495              		.loc 20 1450 13 is_stmt 1 view .LVU1223
1450:Veno-Echo.cpp ****         }
 4496              		.loc 20 1450 31 is_stmt 0 view .LVU1224
 4497 0028 81ED000A 		vstr.32	s0, [r1]
 4498              	.L258:
1463:Veno-Echo.cpp **** 
 4499              		.loc 20 1463 9 is_stmt 1 view .LVU1225
 4500              	.LVL222:
1465:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 193


 4501              		.loc 20 1465 9 view .LVU1226
1473:Veno-Echo.cpp ****         }
 4502              		.loc 20 1473 13 view .LVU1227
1473:Veno-Echo.cpp ****         }
 4503              		.loc 20 1473 40 is_stmt 0 view .LVU1228
 4504 002c 404B     		ldr	r3, .L270+20
 4505 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4506 0032 0020     		movs	r0, #0
 4507 0034 DFED3F0A 		vldr.32	s1, .L270+24
 4508 0038 93ED000A 		vldr.32	s0, [r3]
 4509              	.LVL223:
1473:Veno-Echo.cpp ****         }
 4510              		.loc 20 1473 40 view .LVU1229
 4511 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4512              	.LVL224:
 4513              	.L266:
1476:Veno-Echo.cpp ****     }
 4514              		.loc 20 1476 9 is_stmt 1 view .LVU1230
 4515              	.LBB1337:
 4516              	.LBI1337:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4517              		.loc 25 135 13 view .LVU1231
 4518              	.LBB1338:
 4519              		.loc 25 137 5 view .LVU1232
 4520              		.loc 25 137 9 is_stmt 0 view .LVU1233
 4521 0040 3D4B     		ldr	r3, .L270+28
 4522 0042 9FED3E7A 		vldr.32	s14, .L270+32
 4523 0046 D3ED007A 		vldr.32	s15, [r3]
 4524              		.loc 25 137 24 view .LVU1234
 4525 004a 30EE670A 		vsub.f32	s0, s0, s15
 4526              	.LVL225:
 4527              		.loc 25 137 24 view .LVU1235
 4528              	.LBE1338:
 4529              	.LBE1337:
 4530              	.LBE1345:
 4531              	.LBE1373:
1508:Veno-Echo.cpp **** 
 4532              		.loc 20 1508 1 view .LVU1236
 4533 004e BDEC028B 		vldm	sp!, {d8}
 4534              		.cfi_remember_state
 4535              		.cfi_restore 80
 4536              		.cfi_restore 81
 4537              		.cfi_def_cfa_offset 8
 4538              	.LVL226:
 4539              	.LBB1374:
 4540              	.LBB1346:
 4541              	.LBB1340:
 4542              	.LBB1339:
 4543              		.loc 25 137 9 view .LVU1237
 4544 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4545 0056 C3ED007A 		vstr.32	s15, [r3]
 4546              	.LBE1339:
 4547              	.LBE1340:
 4548              	.LBE1346:
 4549              	.LBE1374:
1508:Veno-Echo.cpp **** 
 4550              		.loc 20 1508 1 view .LVU1238
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 194


 4551 005a 10BD     		pop	{r4, pc}
 4552              	.LVL227:
 4553              	.L256:
 4554              		.cfi_restore_state
 4555              	.LBB1375:
 4556              	.LBB1347:
1480:Veno-Echo.cpp **** 
 4557              		.loc 20 1480 9 is_stmt 1 view .LVU1239
1482:Veno-Echo.cpp ****         {
 4558              		.loc 20 1482 9 view .LVU1240
 4559 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4560 005e 4BBB     		cbnz	r3, .L262
1484:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4561              		.loc 20 1484 13 view .LVU1241
1484:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4562              		.loc 20 1484 23 is_stmt 0 view .LVU1242
 4563 0060 0124     		movs	r4, #1
1485:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4564              		.loc 20 1485 28 view .LVU1243
 4565 0062 3748     		ldr	r0, .L270+36
1486:Veno-Echo.cpp ****         }
 4566              		.loc 20 1486 25 view .LVU1244
 4567 0064 3749     		ldr	r1, .L270+40
1484:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4568              		.loc 20 1484 23 view .LVU1245
 4569 0066 1470     		strb	r4, [r2]
1485:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4570              		.loc 20 1485 13 is_stmt 1 view .LVU1246
1485:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4571              		.loc 20 1485 28 is_stmt 0 view .LVU1247
 4572 0068 0370     		strb	r3, [r0]
1486:Veno-Echo.cpp ****         }
 4573              		.loc 20 1486 13 is_stmt 1 view .LVU1248
1486:Veno-Echo.cpp ****         }
 4574              		.loc 20 1486 25 is_stmt 0 view .LVU1249
 4575 006a 81ED000A 		vstr.32	s0, [r1]
 4576              	.L255:
1486:Veno-Echo.cpp ****         }
 4577              		.loc 20 1486 25 view .LVU1250
 4578              	.LBE1347:
 4579              	.LBE1375:
1508:Veno-Echo.cpp **** 
 4580              		.loc 20 1508 1 view .LVU1251
 4581 006e BDEC028B 		vldm	sp!, {d8}
 4582              		.cfi_remember_state
 4583              		.cfi_restore 80
 4584              		.cfi_restore 81
 4585              		.cfi_def_cfa_offset 8
 4586 0072 10BD     		pop	{r4, pc}
 4587              	.L257:
 4588              		.cfi_restore_state
 4589              	.LBB1376:
 4590              	.LBB1371:
1455:Veno-Echo.cpp ****             {
 4591              		.loc 20 1455 13 is_stmt 1 view .LVU1252
1455:Veno-Echo.cpp ****             {
 4592              		.loc 20 1455 16 is_stmt 0 view .LVU1253
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 195


 4593 0074 2C4B     		ldr	r3, .L270+12
1455:Veno-Echo.cpp ****             {
 4594              		.loc 20 1455 13 view .LVU1254
 4595 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4596 0078 7AB9     		cbnz	r2, .L259
1457:Veno-Echo.cpp ****                 {
 4597              		.loc 20 1457 17 is_stmt 1 view .LVU1255
 4598              	.LVL228:
 4599              	.LBB1341:
 4600              	.LBI1341:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4601              		.loc 21 75 3 view .LVU1256
 4602              	.LBB1342:
 4603              		.loc 21 76 5 view .LVU1257
 4604              		.loc 21 76 5 is_stmt 0 view .LVU1258
 4605              	.LBE1342:
 4606              	.LBE1341:
1457:Veno-Echo.cpp ****                 {
 4607              		.loc 20 1457 23 view .LVU1259
 4608 007a 2C4A     		ldr	r2, .L270+16
1457:Veno-Echo.cpp ****                 {
 4609              		.loc 20 1457 17 view .LVU1260
 4610 007c 9FED327A 		vldr.32	s14, .L270+44
1457:Veno-Echo.cpp ****                 {
 4611              		.loc 20 1457 23 view .LVU1261
 4612 0080 D2ED007A 		vldr.32	s15, [r2]
 4613 0084 70EE677A 		vsub.f32	s15, s0, s15
 4614              	.LBB1344:
 4615              	.LBB1343:
 4616              		.loc 21 76 31 view .LVU1262
 4617 0088 F0EEE77A 		vabs.f32	s15, s15
 4618              	.LBE1343:
 4619              	.LBE1344:
1457:Veno-Echo.cpp ****                 {
 4620              		.loc 20 1457 17 view .LVU1263
 4621 008c F4EEC77A 		vcmpe.f32	s15, s14
 4622 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4623 0094 CADD     		ble	.L258
1459:Veno-Echo.cpp ****                 }
 4624              		.loc 20 1459 21 is_stmt 1 view .LVU1264
1459:Veno-Echo.cpp ****                 }
 4625              		.loc 20 1459 42 is_stmt 0 view .LVU1265
 4626 0096 0122     		movs	r2, #1
 4627 0098 1A70     		strb	r2, [r3]
 4628              	.L259:
1463:Veno-Echo.cpp **** 
 4629              		.loc 20 1463 9 is_stmt 1 view .LVU1266
 4630              	.LVL229:
1465:Veno-Echo.cpp ****         {
 4631              		.loc 20 1465 9 view .LVU1267
1467:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4632              		.loc 20 1467 13 view .LVU1268
1467:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4633              		.loc 20 1467 40 is_stmt 0 view .LVU1269
 4634 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4635 009e 0020     		movs	r0, #0
 4636 00a0 B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 196


 4637              	.LVL230:
1467:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4638              		.loc 20 1467 40 view .LVU1270
 4639 00a4 DFED230A 		vldr.32	s1, .L270+24
 4640 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4641              	.LVL231:
1468:Veno-Echo.cpp ****         }
 4642              		.loc 20 1468 32 view .LVU1271
 4643 00ac 204B     		ldr	r3, .L270+20
 4644              	.LVL232:
1468:Veno-Echo.cpp ****         }
 4645              		.loc 20 1468 13 is_stmt 1 view .LVU1272
1468:Veno-Echo.cpp ****         }
 4646              		.loc 20 1468 32 is_stmt 0 view .LVU1273
 4647 00ae 83ED008A 		vstr.32	s16, [r3]
 4648 00b2 C5E7     		b	.L266
 4649              	.LVL233:
 4650              	.L262:
1468:Veno-Echo.cpp ****         }
 4651              		.loc 20 1468 32 view .LVU1274
 4652              	.LBE1371:
 4653              	.LBB1372:
1491:Veno-Echo.cpp ****             {
 4654              		.loc 20 1491 13 is_stmt 1 view .LVU1275
1491:Veno-Echo.cpp ****             {
 4655              		.loc 20 1491 16 is_stmt 0 view .LVU1276
 4656 00b4 224B     		ldr	r3, .L270+36
1491:Veno-Echo.cpp ****             {
 4657              		.loc 20 1491 13 view .LVU1277
 4658 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4659 00b8 7AB9     		cbnz	r2, .L264
1493:Veno-Echo.cpp ****                 {
 4660              		.loc 20 1493 17 is_stmt 1 view .LVU1278
 4661              	.LVL234:
 4662              	.LBB1348:
 4663              	.LBI1348:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4664              		.loc 21 75 3 view .LVU1279
 4665              	.LBB1349:
 4666              		.loc 21 76 5 view .LVU1280
 4667              		.loc 21 76 5 is_stmt 0 view .LVU1281
 4668              	.LBE1349:
 4669              	.LBE1348:
1493:Veno-Echo.cpp ****                 {
 4670              		.loc 20 1493 23 view .LVU1282
 4671 00ba 224A     		ldr	r2, .L270+40
1493:Veno-Echo.cpp ****                 {
 4672              		.loc 20 1493 17 view .LVU1283
 4673 00bc 9FED227A 		vldr.32	s14, .L270+44
1493:Veno-Echo.cpp ****                 {
 4674              		.loc 20 1493 23 view .LVU1284
 4675 00c0 D2ED007A 		vldr.32	s15, [r2]
 4676 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4677              	.LBB1351:
 4678              	.LBB1350:
 4679              		.loc 21 76 31 view .LVU1285
 4680 00c8 F0EEE77A 		vabs.f32	s15, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 197


 4681              	.LBE1350:
 4682              	.LBE1351:
1493:Veno-Echo.cpp ****                 {
 4683              		.loc 20 1493 17 view .LVU1286
 4684 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4685 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4686 00d4 CBDD     		ble	.L255
1495:Veno-Echo.cpp ****                 }
 4687              		.loc 20 1495 21 is_stmt 1 view .LVU1287
1495:Veno-Echo.cpp ****                 }
 4688              		.loc 20 1495 36 is_stmt 0 view .LVU1288
 4689 00d6 0122     		movs	r2, #1
 4690 00d8 1A70     		strb	r2, [r3]
 4691              	.L264:
1500:Veno-Echo.cpp ****         {
 4692              		.loc 20 1500 9 is_stmt 1 view .LVU1289
 4693              	.LBB1352:
1502:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4694              		.loc 20 1502 13 view .LVU1290
 4695              	.LBB1353:
 4696              	.LBB1354:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 198


  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4697              		.loc 9 60 20 is_stmt 0 view .LVU1291
 4698 00da 1C4C     		ldr	r4, .L270+48
 4699              	.LBE1354:
 4700              	.LBE1353:
1502:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4701              		.loc 20 1502 32 view .LVU1292
 4702 00dc B0EE480A 		vmov.f32	s0, s16
 4703              	.LVL235:
1502:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4704              		.loc 20 1502 32 view .LVU1293
 4705 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4706 00e4 0020     		movs	r0, #0
 4707 00e6 DFED1A0A 		vldr.32	s1, .L270+52
 4708 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4709              	.LVL236:
 4710              	.LBB1358:
 4711              	.LBB1355:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4712              		.loc 9 61 34 view .LVU1294
 4713 00ee 2046     		mov	r0, r4
 4714              	.LBE1355:
 4715              	.LBE1358:
1502:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4716              		.loc 20 1502 32 view .LVU1295
 4717 00f0 B0EE408A 		vmov.f32	s16, s0
 4718              	.LVL237:
1503:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4719              		.loc 20 1503 13 is_stmt 1 view .LVU1296
 4720              	.LBB1359:
 4721              	.LBI1353:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4722              		.loc 9 58 17 view .LVU1297
 4723              	.LBB1356:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4724              		.loc 9 60 9 view .LVU1298
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4725              		.loc 9 60 20 is_stmt 0 view .LVU1299
 4726 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4727              		.loc 9 61 9 is_stmt 1 view .LVU1300
 4728              		.loc 9 61 34 is_stmt 0 view .LVU1301
 4729 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4730              	.LVL238:
 4731              		.loc 9 61 34 view .LVU1302
 4732              	.LBE1356:
 4733              	.LBE1359:
1504:Veno-Echo.cpp ****             save_flag = true;
 4734              		.loc 20 1504 33 view .LVU1303
 4735 00fc 1549     		ldr	r1, .L270+56
 4736              	.LBB1360:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 199


 4737              	.LBB1361:
 4738              	.LBB1362:
 4739              	.LBB1363:
 4740              	.LBB1364:
 4741              		.loc 22 397 18 view .LVU1304
 4742 00fe 164B     		ldr	r3, .L270+60
 4743 0100 0122     		movs	r2, #1
 4744              	.LBE1364:
 4745              	.LBE1363:
 4746              	.LBE1362:
 4747              	.LBE1361:
 4748              	.LBE1360:
1504:Veno-Echo.cpp ****             save_flag = true;
 4749              		.loc 20 1504 33 view .LVU1305
 4750 0102 81ED038A 		vstr.32	s16, [r1, #12]
 4751              	.LBB1369:
 4752              	.LBB1357:
 4753              		.loc 9 61 20 view .LVU1306
 4754 0106 84ED060A 		vstr.32	s0, [r4, #24]
 4755              	.LVL239:
 4756              		.loc 9 61 20 view .LVU1307
 4757              	.LBE1357:
 4758              	.LBE1369:
1504:Veno-Echo.cpp ****             save_flag = true;
 4759              		.loc 20 1504 13 is_stmt 1 view .LVU1308
1505:Veno-Echo.cpp ****         }
 4760              		.loc 20 1505 13 view .LVU1309
 4761              	.LBB1370:
 4762              	.LBI1360:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4763              		.loc 23 80 5 view .LVU1310
 4764              	.LBB1368:
 4765              		.loc 23 81 7 view .LVU1311
 4766              	.LBB1367:
 4767              	.LBI1362:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4768              		.loc 22 288 7 view .LVU1312
 4769              	.LBB1366:
 4770              	.LBI1363:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4771              		.loc 22 390 7 view .LVU1313
 4772              	.LBB1365:
 4773              		.loc 22 397 18 is_stmt 0 view .LVU1314
 4774 010a BFF35B8F 		dmb	ish
 4775 010e 1A70     		strb	r2, [r3]
 4776 0110 BFF35B8F 		dmb	ish
 4777              	.LVL240:
 4778              		.loc 22 397 18 view .LVU1315
 4779              	.LBE1365:
 4780              	.LBE1366:
 4781              	.LBE1367:
 4782              	.LBE1368:
 4783              	.LBE1370:
 4784              	.LBE1352:
 4785              	.LBE1372:
 4786              	.LBE1376:
1508:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 200


 4787              		.loc 20 1508 1 view .LVU1316
 4788 0114 BDEC028B 		vldm	sp!, {d8}
 4789              		.cfi_restore 80
 4790              		.cfi_restore 81
 4791              		.cfi_def_cfa_offset 8
 4792              	.LVL241:
1508:Veno-Echo.cpp **** 
 4793              		.loc 20 1508 1 view .LVU1317
 4794 0118 10BD     		pop	{r4, pc}
 4795              	.L271:
 4796 011a 00BF     		.align	2
 4797              	.L270:
 4798 011c 18000000 		.word	.LANCHOR4+24
 4799 0120 00000000 		.word	.LANCHOR7
 4800 0124 00000000 		.word	.LANCHOR69
 4801 0128 00000000 		.word	.LANCHOR70
 4802 012c 00000000 		.word	.LANCHOR71
 4803 0130 00000000 		.word	.LANCHOR75
 4804 0134 00000000 		.word	0
 4805 0138 00000000 		.word	.LANCHOR72
 4806 013c 6F12033D 		.word	1023611503
 4807 0140 00000000 		.word	.LANCHOR73
 4808 0144 00000000 		.word	.LANCHOR74
 4809 0148 0AD7A33B 		.word	1000593162
 4810 014c 00000000 		.word	.LANCHOR76
 4811 0150 CDCCCC3D 		.word	1036831949
 4812 0154 00000000 		.word	.LANCHOR15
 4813 0158 00000000 		.word	.LANCHOR16
 4814              		.cfi_endproc
 4815              	.LFE4813:
 4817              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4818              		.align	1
 4819              		.p2align 2,,3
 4820              		.global	_Z18Update_filterXfadev
 4821              		.syntax unified
 4822              		.thumb
 4823              		.thumb_func
 4824              		.fpu fpv5-d16
 4826              	_Z18Update_filterXfadev:
 4827              	.LFB4814:
1511:Veno-Echo.cpp ****     static bool lastShift{};
 4828              		.loc 20 1511 1 is_stmt 1 view -0
 4829              		.cfi_startproc
 4830              		@ args = 0, pretend = 0, frame = 0
 4831              		@ frame_needed = 0, uses_anonymous_args = 0
1512:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4832              		.loc 20 1512 5 view .LVU1319
1513:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4833              		.loc 20 1513 5 view .LVU1320
1514:Veno-Echo.cpp **** 
 4834              		.loc 20 1514 5 view .LVU1321
1516:Veno-Echo.cpp **** 
 4835              		.loc 20 1516 5 view .LVU1322
1519:Veno-Echo.cpp **** 
 4836              		.loc 20 1519 5 view .LVU1323
1519:Veno-Echo.cpp **** 
 4837              		.loc 20 1519 45 is_stmt 0 view .LVU1324
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 201


 4838 0000 0322     		movs	r2, #3
 4839 0002 0721     		movs	r1, #7
 4840 0004 4648     		ldr	r0, .L294
1511:Veno-Echo.cpp ****     static bool lastShift{};
 4841              		.loc 20 1511 1 view .LVU1325
 4842 0006 10B5     		push	{r4, lr}
 4843              		.cfi_def_cfa_offset 8
 4844              		.cfi_offset 4, -8
 4845              		.cfi_offset 14, -4
 4846 0008 2DED028B 		vpush.64	{d8}
 4847              		.cfi_def_cfa_offset 16
 4848              		.cfi_offset 80, -16
 4849              		.cfi_offset 81, -12
1519:Veno-Echo.cpp **** 
 4850              		.loc 20 1519 45 view .LVU1326
 4851 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4852              	.LVL242:
 4853              	.LBB1377:
1521:Veno-Echo.cpp ****     {   
 4854              		.loc 20 1521 9 view .LVU1327
 4855 0010 444B     		ldr	r3, .L294+4
 4856              	.LBE1377:
1519:Veno-Echo.cpp **** 
 4857              		.loc 20 1519 45 view .LVU1328
 4858 0012 B0EE408A 		vmov.f32	s16, s0
 4859              	.LVL243:
1521:Veno-Echo.cpp ****     {   
 4860              		.loc 20 1521 5 is_stmt 1 view .LVU1329
 4861              	.LBB1407:
 4862              	.LBB1378:
1525:Veno-Echo.cpp ****         {
 4863              		.loc 20 1525 19 is_stmt 0 view .LVU1330
 4864 0016 444A     		ldr	r2, .L294+8
 4865              	.LBE1378:
1521:Veno-Echo.cpp ****     {   
 4866              		.loc 20 1521 5 view .LVU1331
 4867 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4868 001a FBB9     		cbnz	r3, .L273
 4869              	.LBB1387:
1523:Veno-Echo.cpp ****         //update pickup
 4870              		.loc 20 1523 9 is_stmt 1 view .LVU1332
1525:Veno-Echo.cpp ****         {
 4871              		.loc 20 1525 9 view .LVU1333
 4872 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4873 001e 49B3     		cbz	r1, .L274
1527:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4874              		.loc 20 1527 13 view .LVU1334
1528:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4875              		.loc 20 1528 32 is_stmt 0 view .LVU1335
 4876 0020 4248     		ldr	r0, .L294+12
1529:Veno-Echo.cpp ****         }
 4877              		.loc 20 1529 29 view .LVU1336
 4878 0022 4349     		ldr	r1, .L294+16
1527:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4879              		.loc 20 1527 23 view .LVU1337
 4880 0024 1370     		strb	r3, [r2]
1528:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 202


 4881              		.loc 20 1528 13 is_stmt 1 view .LVU1338
1528:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4882              		.loc 20 1528 32 is_stmt 0 view .LVU1339
 4883 0026 0370     		strb	r3, [r0]
1529:Veno-Echo.cpp ****         }
 4884              		.loc 20 1529 13 is_stmt 1 view .LVU1340
1529:Veno-Echo.cpp ****         }
 4885              		.loc 20 1529 29 is_stmt 0 view .LVU1341
 4886 0028 81ED000A 		vstr.32	s0, [r1]
 4887              	.L275:
1543:Veno-Echo.cpp **** 
 4888              		.loc 20 1543 9 is_stmt 1 view .LVU1342
 4889              	.LVL244:
1545:Veno-Echo.cpp ****         {
 4890              		.loc 20 1545 9 view .LVU1343
1553:Veno-Echo.cpp ****         }
 4891              		.loc 20 1553 13 view .LVU1344
1553:Veno-Echo.cpp ****         }
 4892              		.loc 20 1553 38 is_stmt 0 view .LVU1345
 4893 002c 414B     		ldr	r3, .L294+20
 4894 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4895 0032 0120     		movs	r0, #1
 4896 0034 DFED400A 		vldr.32	s1, .L294+24
 4897 0038 93ED000A 		vldr.32	s0, [r3]
 4898              	.LVL245:
1553:Veno-Echo.cpp ****         }
 4899              		.loc 20 1553 38 view .LVU1346
 4900 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4901              	.LVL246:
 4902              	.L285:
1556:Veno-Echo.cpp ****     }
 4903              		.loc 20 1556 9 is_stmt 1 view .LVU1347
 4904              	.LBB1379:
 4905              	.LBI1379:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4906              		.loc 25 135 13 view .LVU1348
 4907              	.LBB1380:
 4908              		.loc 25 137 5 view .LVU1349
 4909              		.loc 25 137 9 is_stmt 0 view .LVU1350
 4910 0040 3E4B     		ldr	r3, .L294+28
 4911 0042 9FED3F7A 		vldr.32	s14, .L294+32
 4912 0046 D3ED007A 		vldr.32	s15, [r3]
 4913              		.loc 25 137 24 view .LVU1351
 4914 004a 30EE670A 		vsub.f32	s0, s0, s15
 4915              	.LVL247:
 4916              		.loc 25 137 24 view .LVU1352
 4917              	.LBE1380:
 4918              	.LBE1379:
 4919              	.LBE1387:
 4920              	.LBE1407:
1599:Veno-Echo.cpp **** 
 4921              		.loc 20 1599 1 view .LVU1353
 4922 004e BDEC028B 		vldm	sp!, {d8}
 4923              		.cfi_remember_state
 4924              		.cfi_restore 80
 4925              		.cfi_restore 81
 4926              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 203


 4927              	.LVL248:
 4928              	.LBB1408:
 4929              	.LBB1388:
 4930              	.LBB1382:
 4931              	.LBB1381:
 4932              		.loc 25 137 9 view .LVU1354
 4933 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4934 0056 C3ED007A 		vstr.32	s15, [r3]
 4935              	.LBE1381:
 4936              	.LBE1382:
 4937              	.LBE1388:
 4938              	.LBE1408:
1599:Veno-Echo.cpp **** 
 4939              		.loc 20 1599 1 view .LVU1355
 4940 005a 10BD     		pop	{r4, pc}
 4941              	.LVL249:
 4942              	.L273:
 4943              		.cfi_restore_state
 4944              	.LBB1409:
 4945              	.LBB1389:
1561:Veno-Echo.cpp **** 
 4946              		.loc 20 1561 9 is_stmt 1 view .LVU1356
1563:Veno-Echo.cpp ****         {
 4947              		.loc 20 1563 9 view .LVU1357
 4948 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4949 005e 4BBB     		cbnz	r3, .L279
1565:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4950              		.loc 20 1565 13 view .LVU1358
1565:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4951              		.loc 20 1565 23 is_stmt 0 view .LVU1359
 4952 0060 0124     		movs	r4, #1
1566:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4953              		.loc 20 1566 32 view .LVU1360
 4954 0062 3848     		ldr	r0, .L294+36
1567:Veno-Echo.cpp ****         }
 4955              		.loc 20 1567 29 view .LVU1361
 4956 0064 3849     		ldr	r1, .L294+40
1565:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4957              		.loc 20 1565 23 view .LVU1362
 4958 0066 1470     		strb	r4, [r2]
1566:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4959              		.loc 20 1566 13 is_stmt 1 view .LVU1363
1566:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4960              		.loc 20 1566 32 is_stmt 0 view .LVU1364
 4961 0068 0370     		strb	r3, [r0]
1567:Veno-Echo.cpp ****         }
 4962              		.loc 20 1567 13 is_stmt 1 view .LVU1365
1567:Veno-Echo.cpp ****         }
 4963              		.loc 20 1567 29 is_stmt 0 view .LVU1366
 4964 006a 81ED000A 		vstr.32	s0, [r1]
 4965              	.L272:
1567:Veno-Echo.cpp ****         }
 4966              		.loc 20 1567 29 view .LVU1367
 4967              	.LBE1389:
 4968              	.LBE1409:
1599:Veno-Echo.cpp **** 
 4969              		.loc 20 1599 1 view .LVU1368
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 204


 4970 006e BDEC028B 		vldm	sp!, {d8}
 4971              		.cfi_remember_state
 4972              		.cfi_restore 80
 4973              		.cfi_restore 81
 4974              		.cfi_def_cfa_offset 8
 4975 0072 10BD     		pop	{r4, pc}
 4976              	.L274:
 4977              		.cfi_restore_state
 4978              	.LBB1410:
 4979              	.LBB1404:
1534:Veno-Echo.cpp ****             {
 4980              		.loc 20 1534 13 is_stmt 1 view .LVU1369
1534:Veno-Echo.cpp ****             {
 4981              		.loc 20 1534 16 is_stmt 0 view .LVU1370
 4982 0074 2D4B     		ldr	r3, .L294+12
1534:Veno-Echo.cpp ****             {
 4983              		.loc 20 1534 13 view .LVU1371
 4984 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4985 0078 7AB9     		cbnz	r2, .L276
1536:Veno-Echo.cpp ****                 {
 4986              		.loc 20 1536 17 is_stmt 1 view .LVU1372
 4987              	.LVL250:
 4988              	.LBB1383:
 4989              	.LBI1383:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4990              		.loc 21 75 3 view .LVU1373
 4991              	.LBB1384:
 4992              		.loc 21 76 5 view .LVU1374
 4993              		.loc 21 76 5 is_stmt 0 view .LVU1375
 4994              	.LBE1384:
 4995              	.LBE1383:
1536:Veno-Echo.cpp ****                 {
 4996              		.loc 20 1536 23 view .LVU1376
 4997 007a 2D4A     		ldr	r2, .L294+16
1536:Veno-Echo.cpp ****                 {
 4998              		.loc 20 1536 17 view .LVU1377
 4999 007c 9FED337A 		vldr.32	s14, .L294+44
1536:Veno-Echo.cpp ****                 {
 5000              		.loc 20 1536 23 view .LVU1378
 5001 0080 D2ED007A 		vldr.32	s15, [r2]
 5002 0084 70EE677A 		vsub.f32	s15, s0, s15
 5003              	.LBB1386:
 5004              	.LBB1385:
 5005              		.loc 21 76 31 view .LVU1379
 5006 0088 F0EEE77A 		vabs.f32	s15, s15
 5007              	.LBE1385:
 5008              	.LBE1386:
1536:Veno-Echo.cpp ****                 {
 5009              		.loc 20 1536 17 view .LVU1380
 5010 008c F4EEC77A 		vcmpe.f32	s15, s14
 5011 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5012 0094 CADD     		ble	.L275
1538:Veno-Echo.cpp ****                 }
 5013              		.loc 20 1538 21 is_stmt 1 view .LVU1381
1538:Veno-Echo.cpp ****                 }
 5014              		.loc 20 1538 40 is_stmt 0 view .LVU1382
 5015 0096 0122     		movs	r2, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 205


 5016 0098 1A70     		strb	r2, [r3]
 5017              	.L276:
1543:Veno-Echo.cpp **** 
 5018              		.loc 20 1543 9 is_stmt 1 view .LVU1383
 5019              	.LVL251:
1545:Veno-Echo.cpp ****         {
 5020              		.loc 20 1545 9 view .LVU1384
1547:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5021              		.loc 20 1547 13 view .LVU1385
1547:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5022              		.loc 20 1547 38 is_stmt 0 view .LVU1386
 5023 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 5024 009e 0120     		movs	r0, #1
 5025 00a0 B0EE480A 		vmov.f32	s0, s16
 5026              	.LVL252:
1547:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5027              		.loc 20 1547 38 view .LVU1387
 5028 00a4 DFED240A 		vldr.32	s1, .L294+24
 5029 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5030              	.LVL253:
1548:Veno-Echo.cpp ****         }
 5031              		.loc 20 1548 30 view .LVU1388
 5032 00ac 214B     		ldr	r3, .L294+20
 5033              	.LVL254:
1548:Veno-Echo.cpp ****         }
 5034              		.loc 20 1548 13 is_stmt 1 view .LVU1389
1548:Veno-Echo.cpp ****         }
 5035              		.loc 20 1548 30 is_stmt 0 view .LVU1390
 5036 00ae 83ED008A 		vstr.32	s16, [r3]
 5037 00b2 C5E7     		b	.L285
 5038              	.LVL255:
 5039              	.L279:
1548:Veno-Echo.cpp ****         }
 5040              		.loc 20 1548 30 view .LVU1391
 5041              	.LBE1404:
 5042              	.LBB1405:
1572:Veno-Echo.cpp ****             {
 5043              		.loc 20 1572 13 is_stmt 1 view .LVU1392
1572:Veno-Echo.cpp ****             {
 5044              		.loc 20 1572 16 is_stmt 0 view .LVU1393
 5045 00b4 234B     		ldr	r3, .L294+36
1572:Veno-Echo.cpp ****             {
 5046              		.loc 20 1572 13 view .LVU1394
 5047 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5048 00b8 7AB9     		cbnz	r2, .L281
1574:Veno-Echo.cpp ****                 {
 5049              		.loc 20 1574 17 is_stmt 1 view .LVU1395
 5050              	.LVL256:
 5051              	.LBB1390:
 5052              	.LBI1390:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5053              		.loc 21 75 3 view .LVU1396
 5054              	.LBB1391:
 5055              		.loc 21 76 5 view .LVU1397
 5056              		.loc 21 76 5 is_stmt 0 view .LVU1398
 5057              	.LBE1391:
 5058              	.LBE1390:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 206


1574:Veno-Echo.cpp ****                 {
 5059              		.loc 20 1574 23 view .LVU1399
 5060 00ba 234A     		ldr	r2, .L294+40
1574:Veno-Echo.cpp ****                 {
 5061              		.loc 20 1574 17 view .LVU1400
 5062 00bc 9FED237A 		vldr.32	s14, .L294+44
1574:Veno-Echo.cpp ****                 {
 5063              		.loc 20 1574 23 view .LVU1401
 5064 00c0 D2ED007A 		vldr.32	s15, [r2]
 5065 00c4 70EE677A 		vsub.f32	s15, s0, s15
 5066              	.LBB1393:
 5067              	.LBB1392:
 5068              		.loc 21 76 31 view .LVU1402
 5069 00c8 F0EEE77A 		vabs.f32	s15, s15
 5070              	.LBE1392:
 5071              	.LBE1393:
1574:Veno-Echo.cpp ****                 {
 5072              		.loc 20 1574 17 view .LVU1403
 5073 00cc F4EEC77A 		vcmpe.f32	s15, s14
 5074 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5075 00d4 CBDD     		ble	.L272
1576:Veno-Echo.cpp ****                 }
 5076              		.loc 20 1576 21 is_stmt 1 view .LVU1404
1576:Veno-Echo.cpp ****                 }
 5077              		.loc 20 1576 40 is_stmt 0 view .LVU1405
 5078 00d6 0122     		movs	r2, #1
 5079 00d8 1A70     		strb	r2, [r3]
 5080              	.L281:
1581:Veno-Echo.cpp ****         {
 5081              		.loc 20 1581 9 is_stmt 1 view .LVU1406
1583:Veno-Echo.cpp ****             {
 5082              		.loc 20 1583 13 view .LVU1407
 5083 00da DFED1D7A 		vldr.32	s15, .L294+48
 5084 00de B4EEE78A 		vcmpe.f32	s16, s15
 5085 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5086 00e6 0FD5     		bpl	.L293
1585:Veno-Echo.cpp ****             }
 5087              		.loc 20 1585 17 view .LVU1408
1585:Veno-Echo.cpp ****             }
 5088              		.loc 20 1585 29 is_stmt 0 view .LVU1409
 5089 00e8 1A4B     		ldr	r3, .L294+52
 5090 00ea 0022     		movs	r2, #0
 5091 00ec 1A70     		strb	r2, [r3]
 5092              	.L283:
1595:Veno-Echo.cpp ****             save_flag = true;
 5093              		.loc 20 1595 13 is_stmt 1 view .LVU1410
1595:Veno-Echo.cpp ****             save_flag = true;
 5094              		.loc 20 1595 39 is_stmt 0 view .LVU1411
 5095 00ee 1A49     		ldr	r1, .L294+56
 5096              	.LBB1394:
 5097              	.LBB1395:
 5098              	.LBB1396:
 5099              	.LBB1397:
 5100              	.LBB1398:
 5101              		.loc 22 397 18 view .LVU1412
 5102 00f0 0122     		movs	r2, #1
 5103 00f2 1A4B     		ldr	r3, .L294+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 207


 5104              	.LBE1398:
 5105              	.LBE1397:
 5106              	.LBE1396:
 5107              	.LBE1395:
 5108              	.LBE1394:
1595:Veno-Echo.cpp ****             save_flag = true;
 5109              		.loc 20 1595 39 view .LVU1413
 5110 00f4 81ED078A 		vstr.32	s16, [r1, #28]
1596:Veno-Echo.cpp ****         }  
 5111              		.loc 20 1596 13 is_stmt 1 view .LVU1414
 5112              	.LVL257:
 5113              	.LBB1403:
 5114              	.LBI1394:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5115              		.loc 23 80 5 view .LVU1415
 5116              	.LBB1402:
 5117              		.loc 23 81 7 view .LVU1416
 5118              	.LBB1401:
 5119              	.LBI1396:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5120              		.loc 22 288 7 view .LVU1417
 5121              	.LBB1400:
 5122              	.LBI1397:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5123              		.loc 22 390 7 view .LVU1418
 5124              	.LBB1399:
 5125              		.loc 22 397 18 is_stmt 0 view .LVU1419
 5126 00f8 BFF35B8F 		dmb	ish
 5127 00fc 1A70     		strb	r2, [r3]
 5128 00fe BFF35B8F 		dmb	ish
 5129              	.LVL258:
 5130              		.loc 22 397 18 view .LVU1420
 5131              	.LBE1399:
 5132              	.LBE1400:
 5133              	.LBE1401:
 5134              	.LBE1402:
 5135              	.LBE1403:
 5136              	.LBE1405:
 5137              	.LBE1410:
1599:Veno-Echo.cpp **** 
 5138              		.loc 20 1599 1 view .LVU1421
 5139 0102 BDEC028B 		vldm	sp!, {d8}
 5140              		.cfi_remember_state
 5141              		.cfi_restore 80
 5142              		.cfi_restore 81
 5143              		.cfi_def_cfa_offset 8
 5144 0106 10BD     		pop	{r4, pc}
 5145              	.L293:
 5146              		.cfi_restore_state
 5147              	.LBB1411:
 5148              	.LBB1406:
1587:Veno-Echo.cpp ****             {
 5149              		.loc 20 1587 18 is_stmt 1 view .LVU1422
 5150 0108 DFED157A 		vldr.32	s15, .L294+64
 5151 010c B4EEE78A 		vcmpe.f32	s16, s15
 5152 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5153 0114 EBDD     		ble	.L283
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 208


1589:Veno-Echo.cpp ****             }
 5154              		.loc 20 1589 17 view .LVU1423
1589:Veno-Echo.cpp ****             }
 5155              		.loc 20 1589 29 is_stmt 0 view .LVU1424
 5156 0116 0F4B     		ldr	r3, .L294+52
 5157 0118 0122     		movs	r2, #1
 5158 011a 1A70     		strb	r2, [r3]
 5159 011c E7E7     		b	.L283
 5160              	.L295:
 5161 011e 00BF     		.align	2
 5162              	.L294:
 5163 0120 18000000 		.word	.LANCHOR4+24
 5164 0124 00000000 		.word	.LANCHOR7
 5165 0128 00000000 		.word	.LANCHOR77
 5166 012c 00000000 		.word	.LANCHOR78
 5167 0130 00000000 		.word	.LANCHOR79
 5168 0134 00000000 		.word	.LANCHOR84
 5169 0138 00000000 		.word	0
 5170 013c 00000000 		.word	.LANCHOR80
 5171 0140 6F12033D 		.word	1023611503
 5172 0144 00000000 		.word	.LANCHOR81
 5173 0148 00000000 		.word	.LANCHOR82
 5174 014c 0AD7A33B 		.word	1000593162
 5175 0150 6666E63E 		.word	1055286886
 5176 0154 00000000 		.word	.LANCHOR83
 5177 0158 00000000 		.word	.LANCHOR15
 5178 015c 00000000 		.word	.LANCHOR16
 5179 0160 CDCC0C3F 		.word	1057803469
 5180              	.LBE1406:
 5181              	.LBE1411:
 5182              		.cfi_endproc
 5183              	.LFE4814:
 5185              		.section	.text._Z8GetModCVv,"ax",%progbits
 5186              		.align	1
 5187              		.p2align 2,,3
 5188              		.global	_Z8GetModCVv
 5189              		.syntax unified
 5190              		.thumb
 5191              		.thumb_func
 5192              		.fpu fpv5-d16
 5194              	_Z8GetModCVv:
 5195              	.LFB4815:
1602:Veno-Echo.cpp ****     //get modulation CV input
 5196              		.loc 20 1602 1 is_stmt 1 view -0
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 0
 5199              		@ frame_needed = 0, uses_anonymous_args = 0
1604:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5200              		.loc 20 1604 5 view .LVU1426
1602:Veno-Echo.cpp ****     //get modulation CV input
 5201              		.loc 20 1602 1 is_stmt 0 view .LVU1427
 5202 0000 08B5     		push	{r3, lr}
 5203              		.cfi_def_cfa_offset 8
 5204              		.cfi_offset 3, -8
 5205              		.cfi_offset 14, -4
1604:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5206              		.loc 20 1604 30 view .LVU1428
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 209


 5207 0002 0621     		movs	r1, #6
 5208 0004 0648     		ldr	r0, .L298
 5209 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5210              	.LVL259:
 5211 000a 0020     		movs	r0, #0
 5212 000c 9FED051A 		vldr.32	s2, .L298+4
 5213 0010 DFED050A 		vldr.32	s1, .L298+8
 5214 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5215              	.LVL260:
1604:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5216              		.loc 20 1604 23 view .LVU1429
 5217 0018 044B     		ldr	r3, .L298+12
 5218 001a 83ED000A 		vstr.32	s0, [r3]
1606:Veno-Echo.cpp **** 
 5219              		.loc 20 1606 1 view .LVU1430
 5220 001e 08BD     		pop	{r3, pc}
 5221              	.L299:
 5222              		.align	2
 5223              	.L298:
 5224 0020 18000000 		.word	.LANCHOR4+24
 5225 0024 00004843 		.word	1128792064
 5226 0028 000048C3 		.word	3276275712
 5227 002c 00000000 		.word	.LANCHOR85
 5228              		.cfi_endproc
 5229              	.LFE4815:
 5231              		.section	.text._Z10Update_Modv,"ax",%progbits
 5232              		.align	1
 5233              		.p2align 2,,3
 5234              		.global	_Z10Update_Modv
 5235              		.syntax unified
 5236              		.thumb
 5237              		.thumb_func
 5238              		.fpu fpv5-d16
 5240              	_Z10Update_Modv:
 5241              	.LFB4816:
1609:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5242              		.loc 20 1609 1 is_stmt 1 view -0
 5243              		.cfi_startproc
 5244              		@ args = 0, pretend = 0, frame = 0
 5245              		@ frame_needed = 0, uses_anonymous_args = 0
1610:Veno-Echo.cpp ****     static float modulation_CV{};
 5246              		.loc 20 1610 5 view .LVU1432
1611:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 5247              		.loc 20 1611 5 view .LVU1433
1612:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5248              		.loc 20 1612 5 view .LVU1434
 5249              	.LVL261:
 5250              	.LBB1412:
 5251              	.LBI1412:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5252              		.loc 25 135 13 view .LVU1435
 5253              	.LBB1413:
 5254              		.loc 25 137 5 view .LVU1436
 5255              	.LBE1413:
 5256              	.LBE1412:
1609:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5257              		.loc 20 1609 1 is_stmt 0 view .LVU1437
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 210


 5258 0000 38B5     		push	{r3, r4, r5, lr}
 5259              		.cfi_def_cfa_offset 16
 5260              		.cfi_offset 3, -16
 5261              		.cfi_offset 4, -12
 5262              		.cfi_offset 5, -8
 5263              		.cfi_offset 14, -4
1612:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5264              		.loc 20 1612 13 view .LVU1438
 5265 0002 154A     		ldr	r2, .L302
 5266              	.LBB1420:
 5267              	.LBB1414:
 5268              		.loc 25 137 9 view .LVU1439
 5269 0004 154C     		ldr	r4, .L302+4
 5270              	.LBE1414:
 5271              	.LBE1420:
 5272              	.LBB1421:
 5273              	.LBB1422:
 5274 0006 164D     		ldr	r5, .L302+8
 5275              	.LBE1422:
 5276              	.LBE1421:
1613:Veno-Echo.cpp ****     //calculate InternalMod
 5277              		.loc 20 1613 13 view .LVU1440
 5278 0008 164B     		ldr	r3, .L302+12
 5279              	.LBB1428:
 5280              	.LBB1415:
 5281              		.loc 25 137 9 view .LVU1441
 5282 000a 94ED007A 		vldr.32	s14, [r4]
 5283              	.LBE1415:
 5284              	.LBE1428:
 5285              	.LBB1429:
 5286              	.LBB1423:
 5287 000e D5ED007A 		vldr.32	s15, [r5]
 5288              	.LBE1423:
 5289              	.LBE1429:
 5290              	.LBB1430:
 5291              	.LBB1416:
 5292              		.loc 25 137 24 view .LVU1442
 5293 0012 92ED006A 		vldr.32	s12, [r2]
 5294              	.LBE1416:
 5295              	.LBE1430:
 5296              	.LBB1431:
 5297              	.LBB1424:
 5298 0016 D3ED006A 		vldr.32	s13, [r3]
 5299              	.LBE1424:
 5300              	.LBE1431:
 5301              	.LBB1432:
 5302              	.LBB1417:
 5303 001a 36EE476A 		vsub.f32	s12, s12, s14
 5304              		.loc 25 137 9 view .LVU1443
 5305 001e DFED125A 		vldr.32	s11, .L302+16
 5306              	.LBE1417:
 5307              	.LBE1432:
 5308              	.LBB1433:
 5309              	.LBB1425:
 5310              		.loc 25 137 24 view .LVU1444
 5311 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5312              	.LBE1425:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 211


 5313              	.LBE1433:
1615:Veno-Echo.cpp ****     //apply modulation to delay lines
 5314              		.loc 20 1615 34 view .LVU1445
 5315 0026 1148     		ldr	r0, .L302+20
 5316              	.LBB1434:
 5317              	.LBB1418:
 5318              		.loc 25 137 9 view .LVU1446
 5319 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5320              	.LBE1418:
 5321              	.LBE1434:
 5322              	.LBB1435:
 5323              	.LBB1426:
 5324 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5325              	.LBE1426:
 5326              	.LBE1435:
 5327              	.LBB1436:
 5328              	.LBB1419:
 5329 0030 84ED007A 		vstr.32	s14, [r4]
 5330              	.LVL262:
 5331              		.loc 25 137 9 view .LVU1447
 5332              	.LBE1419:
 5333              	.LBE1436:
1613:Veno-Echo.cpp ****     //calculate InternalMod
 5334              		.loc 20 1613 5 is_stmt 1 view .LVU1448
 5335              	.LBB1437:
 5336              	.LBI1421:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5337              		.loc 25 135 13 view .LVU1449
 5338              	.LBB1427:
 5339              		.loc 25 137 5 view .LVU1450
 5340              		.loc 25 137 9 is_stmt 0 view .LVU1451
 5341 0034 C5ED007A 		vstr.32	s15, [r5]
 5342              	.LVL263:
 5343              		.loc 25 137 9 view .LVU1452
 5344              	.LBE1427:
 5345              	.LBE1437:
1615:Veno-Echo.cpp ****     //apply modulation to delay lines
 5346              		.loc 20 1615 5 is_stmt 1 view .LVU1453
1615:Veno-Echo.cpp ****     //apply modulation to delay lines
 5347              		.loc 20 1615 34 is_stmt 0 view .LVU1454
 5348 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5349              	.LVL264:
1617:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5350              		.loc 20 1617 5 is_stmt 1 view .LVU1455
1617:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5351              		.loc 20 1617 40 is_stmt 0 view .LVU1456
 5352 003c 95ED007A 		vldr.32	s14, [r5]
 5353 0040 D4ED007A 		vldr.32	s15, [r4]
 5354              	.LBB1438:
 5355              	.LBB1439:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 212


  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5356              		.loc 17 69 43 view .LVU1457
 5357 0044 0A4A     		ldr	r2, .L302+24
 5358              	.LBE1439:
 5359              	.LBE1438:
1617:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5360              		.loc 20 1617 40 view .LVU1458
 5361 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5362              	.LBB1442:
 5363              	.LBI1438:
 5364              		.loc 17 69 6 is_stmt 1 view .LVU1459
 5365              	.LVL265:
 5366              	.LBB1440:
 5367              		.loc 17 69 38 view .LVU1460
 5368              	.LBE1440:
 5369              	.LBE1442:
 5370              	.LBB1443:
 5371              	.LBB1444:
 5372              		.loc 17 69 43 is_stmt 0 view .LVU1461
 5373 004a 0A4B     		ldr	r3, .L302+28
 5374              	.LBE1444:
 5375              	.LBE1443:
 5376              	.LBB1446:
 5377              	.LBB1441:
 5378 004c C2ED3A7A 		vstr.32	s15, [r2, #232]
 5379              	.LBE1441:
 5380              	.LBE1446:
1618:Veno-Echo.cpp **** }
 5381              		.loc 20 1618 5 is_stmt 1 view .LVU1462
 5382              	.LVL266:
 5383              	.LBB1447:
 5384              	.LBI1443:
 5385              		.loc 17 69 6 view .LVU1463
 5386              	.LBB1445:
 5387              		.loc 17 69 38 view .LVU1464
 5388              		.loc 17 69 43 is_stmt 0 view .LVU1465
 5389 0050 C3ED3A7A 		vstr.32	s15, [r3, #232]
 5390              	.LBE1445:
 5391              	.LBE1447:
1619:Veno-Echo.cpp **** 
 5392              		.loc 20 1619 1 view .LVU1466
 5393 0054 38BD     		pop	{r3, r4, r5, pc}
 5394              	.L303:
 5395 0056 00BF     		.align	2
 5396              	.L302:
 5397 0058 00000000 		.word	.LANCHOR85
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 213


 5398 005c 00000000 		.word	.LANCHOR86
 5399 0060 00000000 		.word	.LANCHOR87
 5400 0064 00000000 		.word	.LANCHOR68
 5401 0068 0AD7233C 		.word	1008981770
 5402 006c 00000000 		.word	.LANCHOR76
 5403 0070 00000000 		.word	.LANCHOR0
 5404 0074 00000000 		.word	.LANCHOR1
 5405              		.cfi_endproc
 5406              	.LFE4816:
 5408              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5409              		.align	1
 5410              		.p2align 2,,3
 5411              		.global	_Z11UpdateClockv
 5412              		.syntax unified
 5413              		.thumb
 5414              		.thumb_func
 5415              		.fpu fpv5-d16
 5417              	_Z11UpdateClockv:
 5418              	.LFB4817:
1622:Veno-Echo.cpp ****     static uint32_t ClockCounter{};
 5419              		.loc 20 1622 1 is_stmt 1 view -0
 5420              		.cfi_startproc
 5421              		@ args = 0, pretend = 0, frame = 0
 5422              		@ frame_needed = 0, uses_anonymous_args = 0
1623:Veno-Echo.cpp **** 
 5423              		.loc 20 1623 5 view .LVU1468
1625:Veno-Echo.cpp ****     //if clock in pulse received
 5424              		.loc 20 1625 5 view .LVU1469
1622:Veno-Echo.cpp ****     static uint32_t ClockCounter{};
 5425              		.loc 20 1622 1 is_stmt 0 view .LVU1470
 5426 0000 10B5     		push	{r4, lr}
 5427              		.cfi_def_cfa_offset 8
 5428              		.cfi_offset 4, -8
 5429              		.cfi_offset 14, -4
1625:Veno-Echo.cpp ****     //if clock in pulse received
 5430              		.loc 20 1625 18 view .LVU1471
 5431 0002 124C     		ldr	r4, .L316
1627:Veno-Echo.cpp ****     {   
 5432              		.loc 20 1627 21 view .LVU1472
 5433 0004 1248     		ldr	r0, .L316+4
1625:Veno-Echo.cpp ****     //if clock in pulse received
 5434              		.loc 20 1625 18 view .LVU1473
 5435 0006 2368     		ldr	r3, [r4]
 5436 0008 0133     		adds	r3, r3, #1
 5437 000a 2360     		str	r3, [r4]
1627:Veno-Echo.cpp ****     {   
 5438              		.loc 20 1627 5 is_stmt 1 view .LVU1474
1627:Veno-Echo.cpp ****     {   
 5439              		.loc 20 1627 21 is_stmt 0 view .LVU1475
 5440 000c FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 5441              	.LVL267:
1627:Veno-Echo.cpp ****     {   
 5442              		.loc 20 1627 5 view .LVU1476
 5443 0010 00B9     		cbnz	r0, .L314
1640:Veno-Echo.cpp **** 
 5444              		.loc 20 1640 1 view .LVU1477
 5445 0012 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 214


 5446              	.L314:
 5447              	.LBB1455:
 5448              	.LBI1455:
1621:Veno-Echo.cpp **** {
 5449              		.loc 20 1621 6 is_stmt 1 view .LVU1478
 5450              	.LBB1456:
1631:Veno-Echo.cpp ****             {
 5451              		.loc 20 1631 13 view .LVU1479
1631:Veno-Echo.cpp ****             {
 5452              		.loc 20 1631 31 is_stmt 0 view .LVU1480
 5453 0014 2168     		ldr	r1, [r4]
 5454 0016 0F48     		ldr	r0, .L316+8
 5455 0018 FFF7FEFF 		bl	_ZN8Taptempo5clockEm
 5456              	.LVL268:
1631:Veno-Echo.cpp ****             {
 5457              		.loc 20 1631 13 view .LVU1481
 5458 001c 10B9     		cbnz	r0, .L315
 5459              	.L306:
1637:Veno-Echo.cpp **** 
 5460              		.loc 20 1637 13 is_stmt 1 view .LVU1482
1637:Veno-Echo.cpp **** 
 5461              		.loc 20 1637 26 is_stmt 0 view .LVU1483
 5462 001e 0023     		movs	r3, #0
 5463 0020 2360     		str	r3, [r4]
 5464              	.LBE1456:
 5465              	.LBE1455:
1640:Veno-Echo.cpp **** 
 5466              		.loc 20 1640 1 view .LVU1484
 5467 0022 10BD     		pop	{r4, pc}
 5468              	.L315:
 5469              	.LBB1468:
 5470              	.LBB1467:
1633:Veno-Echo.cpp ****                 AltControls.tempo = BaseTempo.getTempo();
 5471              		.loc 20 1633 17 is_stmt 1 view .LVU1485
1633:Veno-Echo.cpp ****                 AltControls.tempo = BaseTempo.getTempo();
 5472              		.loc 20 1633 39 is_stmt 0 view .LVU1486
 5473 0024 0B48     		ldr	r0, .L316+8
 5474 0026 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5475              	.LVL269:
 5476 002a 0B48     		ldr	r0, .L316+12
 5477 002c FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 5478              	.LVL270:
1634:Veno-Echo.cpp ****                 save_flag = true;
 5479              		.loc 20 1634 17 is_stmt 1 view .LVU1487
1634:Veno-Echo.cpp ****                 save_flag = true;
 5480              		.loc 20 1634 55 is_stmt 0 view .LVU1488
 5481 0030 0848     		ldr	r0, .L316+8
 5482 0032 FFF7FEFF 		bl	_ZN8Taptempo8getTempoEv
 5483              	.LVL271:
1634:Veno-Echo.cpp ****                 save_flag = true;
 5484              		.loc 20 1634 35 view .LVU1489
 5485 0036 0949     		ldr	r1, .L316+16
 5486              	.LBB1457:
 5487              	.LBB1458:
 5488              	.LBB1459:
 5489              	.LBB1460:
 5490              	.LBB1461:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 215


 5491              		.loc 22 397 18 view .LVU1490
 5492 0038 0122     		movs	r2, #1
 5493 003a 094B     		ldr	r3, .L316+20
 5494              	.LBE1461:
 5495              	.LBE1460:
 5496              	.LBE1459:
 5497              	.LBE1458:
 5498              	.LBE1457:
1634:Veno-Echo.cpp ****                 save_flag = true;
 5499              		.loc 20 1634 35 view .LVU1491
 5500 003c 81ED080A 		vstr.32	s0, [r1, #32]
1635:Veno-Echo.cpp ****             }
 5501              		.loc 20 1635 17 is_stmt 1 view .LVU1492
 5502              	.LVL272:
 5503              	.LBB1466:
 5504              	.LBI1457:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5505              		.loc 23 80 5 view .LVU1493
 5506              	.LBB1465:
 5507              		.loc 23 81 7 view .LVU1494
 5508              	.LBB1464:
 5509              	.LBI1459:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5510              		.loc 22 288 7 view .LVU1495
 5511              	.LBB1463:
 5512              	.LBI1460:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5513              		.loc 22 390 7 view .LVU1496
 5514              	.LBB1462:
 5515              		.loc 22 397 18 is_stmt 0 view .LVU1497
 5516 0040 BFF35B8F 		dmb	ish
 5517 0044 1A70     		strb	r2, [r3]
 5518 0046 BFF35B8F 		dmb	ish
 5519              	.LVL273:
 5520              		.loc 22 397 18 view .LVU1498
 5521              	.LBE1462:
 5522              	.LBE1463:
 5523              	.LBE1464:
 5524              		.loc 23 81 35 view .LVU1499
 5525 004a E8E7     		b	.L306
 5526              	.L317:
 5527              		.align	2
 5528              	.L316:
 5529 004c 00000000 		.word	.LANCHOR88
 5530 0050 00000000 		.word	.LANCHOR89
 5531 0054 00000000 		.word	.LANCHOR26
 5532 0058 00000000 		.word	.LANCHOR90
 5533 005c 00000000 		.word	.LANCHOR15
 5534 0060 00000000 		.word	.LANCHOR16
 5535              	.LBE1465:
 5536              	.LBE1466:
 5537              	.LBE1467:
 5538              	.LBE1468:
 5539              		.cfi_endproc
 5540              	.LFE4817:
 5542              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5543              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 216


 5544              		.p2align 2,,3
 5545              		.global	_Z21Update_DelayBaseTempov
 5546              		.syntax unified
 5547              		.thumb
 5548              		.thumb_func
 5549              		.fpu fpv5-d16
 5551              	_Z21Update_DelayBaseTempov:
 5552              	.LFB4819:
1793:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5553              		.loc 20 1793 1 is_stmt 1 view -0
 5554              		.cfi_startproc
 5555              		@ args = 0, pretend = 0, frame = 0
 5556              		@ frame_needed = 0, uses_anonymous_args = 0
1794:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5557              		.loc 20 1794 5 view .LVU1501
1793:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5558              		.loc 20 1793 1 is_stmt 0 view .LVU1502
 5559 0000 08B5     		push	{r3, lr}
 5560              		.cfi_def_cfa_offset 8
 5561              		.cfi_offset 3, -8
 5562              		.cfi_offset 14, -4
1794:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5563              		.loc 20 1794 49 view .LVU1503
 5564 0002 0648     		ldr	r0, .L320
 5565 0004 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5566              	.LVL274:
 5567              	.LBB1469:
 5568              	.LBI1469:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const float& tempo){baseTempo_ = tempo;}
 5569              		.loc 17 71 6 is_stmt 1 view .LVU1504
 5570              	.LBB1470:
 5571              		.loc 17 71 39 view .LVU1505
 5572              		.loc 17 71 50 is_stmt 0 view .LVU1506
 5573 0008 054B     		ldr	r3, .L320+4
 5574              	.LBE1470:
 5575              	.LBE1469:
1795:Veno-Echo.cpp **** }
 5576              		.loc 20 1795 49 view .LVU1507
 5577 000a 0448     		ldr	r0, .L320
 5578              	.LBB1472:
 5579              	.LBB1471:
 5580              		.loc 17 71 50 view .LVU1508
 5581 000c 83ED440A 		vstr.32	s0, [r3, #272]
 5582              	.LBE1471:
 5583              	.LBE1472:
1795:Veno-Echo.cpp **** }
 5584              		.loc 20 1795 5 is_stmt 1 view .LVU1509
1795:Veno-Echo.cpp **** }
 5585              		.loc 20 1795 49 is_stmt 0 view .LVU1510
 5586 0010 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5587              	.LVL275:
 5588              	.LBB1473:
 5589              	.LBI1473:
 5590              		.loc 17 71 6 is_stmt 1 view .LVU1511
 5591              	.LBB1474:
 5592              		.loc 17 71 39 view .LVU1512
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 217


 5593              		.loc 17 71 50 is_stmt 0 view .LVU1513
 5594 0014 034B     		ldr	r3, .L320+8
 5595 0016 83ED440A 		vstr.32	s0, [r3, #272]
 5596              	.LBE1474:
 5597              	.LBE1473:
1796:Veno-Echo.cpp **** 
 5598              		.loc 20 1796 1 view .LVU1514
 5599 001a 08BD     		pop	{r3, pc}
 5600              	.L321:
 5601              		.align	2
 5602              	.L320:
 5603 001c 00000000 		.word	.LANCHOR26
 5604 0020 00000000 		.word	.LANCHOR0
 5605 0024 00000000 		.word	.LANCHOR1
 5606              		.cfi_endproc
 5607              	.LFE4819:
 5609              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5610              		.align	1
 5611              		.p2align 2,,3
 5612              		.global	_Z21Update_DelayTempoLEDsv
 5613              		.syntax unified
 5614              		.thumb
 5615              		.thumb_func
 5616              		.fpu fpv5-d16
 5618              	_Z21Update_DelayTempoLEDsv:
 5619              	.LFB4820:
1799:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5620              		.loc 20 1799 1 is_stmt 1 view -0
 5621              		.cfi_startproc
 5622              		@ args = 0, pretend = 0, frame = 0
 5623              		@ frame_needed = 0, uses_anonymous_args = 0
1800:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5624              		.loc 20 1800 5 view .LVU1516
1799:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5625              		.loc 20 1799 1 is_stmt 0 view .LVU1517
 5626 0000 10B5     		push	{r4, lr}
 5627              		.cfi_def_cfa_offset 8
 5628              		.cfi_offset 4, -8
 5629              		.cfi_offset 14, -4
1800:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5630              		.loc 20 1800 26 view .LVU1518
 5631 0002 054C     		ldr	r4, .L324
 5632 0004 0548     		ldr	r0, .L324+4
 5633 0006 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5634 0008 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5635              	.LVL276:
1801:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5636              		.loc 20 1801 5 is_stmt 1 view .LVU1519
1801:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5637              		.loc 20 1801 26 is_stmt 0 view .LVU1520
 5638 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5639 000e 0448     		ldr	r0, .L324+8
1805:Veno-Echo.cpp **** 
 5640              		.loc 20 1805 1 view .LVU1521
 5641 0010 BDE81040 		pop	{r4, lr}
 5642              		.cfi_restore 14
 5643              		.cfi_restore 4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 218


 5644              		.cfi_def_cfa_offset 0
1801:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5645              		.loc 20 1801 26 view .LVU1522
 5646 0014 FFF7FEBF 		b	_ZN10DelayMulti14updateTempoLEDEb
 5647              	.LVL277:
 5648              	.L325:
 5649              		.align	2
 5650              	.L324:
 5651 0018 00000000 		.word	.LANCHOR12
 5652 001c 00000000 		.word	.LANCHOR0
 5653 0020 00000000 		.word	.LANCHOR1
 5654              		.cfi_endproc
 5655              	.LFE4820:
 5657              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5658              		.align	1
 5659              		.p2align 2,,3
 5660              		.global	_Z19Update_BaseTempoLEDv
 5661              		.syntax unified
 5662              		.thumb
 5663              		.thumb_func
 5664              		.fpu fpv5-d16
 5666              	_Z19Update_BaseTempoLEDv:
 5667              	.LFB4821:
1808:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5668              		.loc 20 1808 1 is_stmt 1 view -0
 5669              		.cfi_startproc
 5670              		@ args = 0, pretend = 0, frame = 0
 5671              		@ frame_needed = 0, uses_anonymous_args = 0
1809:Veno-Echo.cpp **** 
 5672              		.loc 20 1809 5 view .LVU1524
1809:Veno-Echo.cpp **** 
 5673              		.loc 20 1809 25 is_stmt 0 view .LVU1525
 5674 0000 1848     		ldr	r0, .L330
1808:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5675              		.loc 20 1808 1 view .LVU1526
 5676 0002 08B5     		push	{r3, lr}
 5677              		.cfi_def_cfa_offset 8
 5678              		.cfi_offset 3, -8
 5679              		.cfi_offset 14, -4
1809:Veno-Echo.cpp **** 
 5680              		.loc 20 1809 25 view .LVU1527
 5681 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5682              	.LVL278:
1811:Veno-Echo.cpp **** 
 5683              		.loc 20 1811 5 is_stmt 1 view .LVU1528
1813:Veno-Echo.cpp ****     {
 5684              		.loc 20 1813 5 view .LVU1529
1813:Veno-Echo.cpp ****     {
 5685              		.loc 20 1813 27 is_stmt 0 view .LVU1530
 5686 0008 1648     		ldr	r0, .L330
 5687 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5688              	.LVL279:
1813:Veno-Echo.cpp ****     {
 5689              		.loc 20 1813 5 view .LVU1531
 5690 000e D0B9     		cbnz	r0, .L327
 5691 0010 154B     		ldr	r3, .L330+4
 5692 0012 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 219


 5693              	.L328:
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
 5694              		.loc 20 1818 5 is_stmt 1 view .LVU1532
 5695              	.LVL280:
 5696              	.LBB1475:
 5697              	.LBI1475:
  71:LEDs.h        **** 
 5698              		.loc 14 71 7 view .LVU1533
 5699              	.LBB1476:
  71:LEDs.h        **** 
 5700              		.loc 14 71 20 view .LVU1534
  71:LEDs.h        **** 
 5701              		.loc 14 71 20 is_stmt 0 view .LVU1535
 5702              	.LBE1476:
 5703              	.LBE1475:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 220


  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5704              		.loc 15 92 31 is_stmt 1 view .LVU1536
 5705              	.LBB1478:
 5706              	.LBB1477:
  71:LEDs.h        **** 
 5707              		.loc 14 71 41 is_stmt 0 view .LVU1537
 5708 0014 134A     		ldr	r2, .L330
 5709              	.LBE1477:
 5710              	.LBE1478:
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
 5711              		.loc 20 1818 50 view .LVU1538
 5712 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
 5713              		.loc 20 1818 73 view .LVU1539
 5714 001a 07EE903A 		vmov	s15, r3	@ int
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
 5715              		.loc 20 1818 55 view .LVU1540
 5716 001e DFED136A 		vldr.32	s13, .L330+8
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
 5717              		.loc 20 1818 50 view .LVU1541
 5718 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
 5719              		.loc 20 1818 73 view .LVU1542
 5720 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 221


 5721              	.LBB1479:
 5722              	.LBB1480:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5723              		.loc 17 72 54 view .LVU1543
 5724 002a 1149     		ldr	r1, .L330+12
 5725              	.LBE1480:
 5726              	.LBE1479:
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
 5727              		.loc 20 1818 50 view .LVU1544
 5728 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5729              	.LBB1482:
 5730              	.LBB1483:
 5731              		.loc 17 72 54 view .LVU1545
 5732 0030 104A     		ldr	r2, .L330+16
 5733              	.LBE1483:
 5734              	.LBE1482:
1822:Veno-Echo.cpp **** }
 5735              		.loc 20 1822 17 view .LVU1546
 5736 0032 114B     		ldr	r3, .L330+20
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
 5737              		.loc 20 1818 55 view .LVU1547
 5738 0034 A7EEA67A 		vfma.f32	s14, s15, s13
 5739              	.LVL281:
1820:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5740              		.loc 20 1820 5 is_stmt 1 view .LVU1548
 5741              	.LBB1485:
 5742              	.LBI1479:
 5743              		.loc 17 72 6 view .LVU1549
 5744              	.LBB1481:
 5745              		.loc 17 72 43 view .LVU1550
 5746              		.loc 17 72 54 is_stmt 0 view .LVU1551
 5747 0038 81ED437A 		vstr.32	s14, [r1, #268]
 5748              	.LBE1481:
 5749              	.LBE1485:
1821:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
 5750              		.loc 20 1821 5 is_stmt 1 view .LVU1552
 5751              	.LVL282:
 5752              	.LBB1486:
 5753              	.LBI1482:
 5754              		.loc 17 72 6 view .LVU1553
 5755              	.LBB1484:
 5756              		.loc 17 72 43 view .LVU1554
 5757              		.loc 17 72 54 is_stmt 0 view .LVU1555
 5758 003c 82ED437A 		vstr.32	s14, [r2, #268]
 5759              	.LBE1484:
 5760              	.LBE1486:
1822:Veno-Echo.cpp **** }
 5761              		.loc 20 1822 5 is_stmt 1 view .LVU1556
1822:Veno-Echo.cpp **** }
 5762              		.loc 20 1822 17 is_stmt 0 view .LVU1557
 5763 0040 83ED007A 		vstr.32	s14, [r3]
 5764              	.LVL283:
1823:Veno-Echo.cpp **** 
 5765              		.loc 20 1823 1 view .LVU1558
 5766 0044 08BD     		pop	{r3, pc}
 5767              	.LVL284:
 5768              	.L327:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 222


1815:Veno-Echo.cpp ****     }
 5769              		.loc 20 1815 9 is_stmt 1 view .LVU1559
1815:Veno-Echo.cpp ****     }
 5770              		.loc 20 1815 38 is_stmt 0 view .LVU1560
 5771 0046 0849     		ldr	r1, .L330+4
1815:Veno-Echo.cpp ****     }
 5772              		.loc 20 1815 43 view .LVU1561
 5773 0048 0C4B     		ldr	r3, .L330+24
1815:Veno-Echo.cpp ****     }
 5774              		.loc 20 1815 38 view .LVU1562
 5775 004a 0A68     		ldr	r2, [r1]
 5776 004c 0132     		adds	r2, r2, #1
1815:Veno-Echo.cpp ****     }
 5777              		.loc 20 1815 43 view .LVU1563
 5778 004e 83FB0203 		smull	r0, r3, r3, r2
 5779 0052 A3EBE273 		sub	r3, r3, r2, asr #31
 5780 0056 03EB4303 		add	r3, r3, r3, lsl #1
 5781 005a A2EB4303 		sub	r3, r2, r3, lsl #1
1815:Veno-Echo.cpp ****     }
 5782              		.loc 20 1815 22 view .LVU1564
 5783 005e 0B60     		str	r3, [r1]
 5784 0060 D8E7     		b	.L328
 5785              	.L331:
 5786 0062 00BF     		.align	2
 5787              	.L330:
 5788 0064 00000000 		.word	.LANCHOR90
 5789 0068 00000000 		.word	.LANCHOR91
 5790 006c 920A863F 		.word	1065749138
 5791 0070 00000000 		.word	.LANCHOR0
 5792 0074 00000000 		.word	.LANCHOR1
 5793 0078 00000000 		.word	.LANCHOR92
 5794 007c ABAAAA2A 		.word	715827883
 5795              		.cfi_endproc
 5796              	.LFE4821:
 5798              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5799              		.align	1
 5800              		.p2align 2,,3
 5801              		.global	_Z13ApplySettingsRK8Settings
 5802              		.syntax unified
 5803              		.thumb
 5804              		.thumb_func
 5805              		.fpu fpv5-d16
 5807              	_Z13ApplySettingsRK8Settings:
 5808              	.LVL285:
 5809              	.LFB4822:
1827:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5810              		.loc 20 1827 1 is_stmt 1 view -0
 5811              		.cfi_startproc
 5812              		@ args = 0, pretend = 0, frame = 0
 5813              		@ frame_needed = 0, uses_anonymous_args = 0
1828:Veno-Echo.cpp ****     {
 5814              		.loc 20 1828 5 view .LVU1566
 5815 0000 9FEDDA7A 		vldr.32	s14, .L417
1828:Veno-Echo.cpp ****     {
 5816              		.loc 20 1828 17 is_stmt 0 view .LVU1567
 5817 0004 D0ED007A 		vldr.32	s15, [r0]
1828:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 223


 5818              		.loc 20 1828 5 view .LVU1568
 5819 0008 F4EEC77A 		vcmpe.f32	s15, s14
1827:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5820              		.loc 20 1827 1 view .LVU1569
 5821 000c 38B5     		push	{r3, r4, r5, lr}
 5822              		.cfi_def_cfa_offset 16
 5823              		.cfi_offset 3, -16
 5824              		.cfi_offset 4, -12
 5825              		.cfi_offset 5, -8
 5826              		.cfi_offset 14, -4
1828:Veno-Echo.cpp ****     {
 5827              		.loc 20 1828 5 view .LVU1570
 5828 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1827:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5829              		.loc 20 1827 1 view .LVU1571
 5830 0012 0446     		mov	r4, r0
 5831              	.LBB1487:
 5832              	.LBB1488:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5833              		.loc 20 70 28 view .LVU1572
 5834 0014 D64B     		ldr	r3, .L417+4
 5835              	.LBE1488:
 5836              	.LBE1487:
1828:Veno-Echo.cpp ****     {
 5837              		.loc 20 1828 5 view .LVU1573
 5838 0016 C0F23281 		blt	.L333
1828:Veno-Echo.cpp ****     {
 5839              		.loc 20 1828 43 discriminator 1 view .LVU1574
 5840 001a 9FEDD67A 		vldr.32	s14, .L417+8
 5841 001e F4EEC77A 		vcmpe.f32	s15, s14
 5842 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5843 0026 00F22A81 		bhi	.L333
1830:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5844              		.loc 20 1830 9 is_stmt 1 view .LVU1575
 5845              	.LVL286:
 5846              	.LBB1502:
 5847              	.LBI1487:
  68:Veno-Echo.cpp ****     {
 5848              		.loc 20 68 10 view .LVU1576
 5849              	.LBB1500:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5850              		.loc 20 70 9 view .LVU1577
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5851              		.loc 20 70 28 is_stmt 0 view .LVU1578
 5852 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5853              	.LVL287:
 5854              	.LBB1489:
 5855              	.LBI1489:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5856              		.loc 21 75 3 is_stmt 1 view .LVU1579
 5857              	.LBB1490:
 5858              		.loc 21 76 5 view .LVU1580
 5859              		.loc 21 76 5 is_stmt 0 view .LVU1581
 5860              	.LBE1490:
 5861              	.LBE1489:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5862              		.loc 20 70 53 view .LVU1582
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 224


 5863 002e 9FEDD26A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5864              		.loc 20 70 15 view .LVU1583
 5865 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5866              		.loc 20 70 53 view .LVU1584
 5867 0036 27EE067A 		vmul.f32	s14, s14, s12
 5868              	.LBB1492:
 5869              	.LBB1491:
 5870              		.loc 21 76 31 view .LVU1585
 5871 003a F0EEE66A 		vabs.f32	s13, s13
 5872              	.LBE1491:
 5873              	.LBE1492:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5874              		.loc 20 70 9 view .LVU1586
 5875 003e F4EEC76A 		vcmpe.f32	s13, s14
 5876 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5877 0046 0FDD     		ble	.L336
  74:Veno-Echo.cpp ****             //del -> Reset();
 5878              		.loc 20 74 29 view .LVU1587
 5879 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5880              	.LBB1493:
 5881              	.LBB1494:
 5882              		.loc 19 72 9 view .LVU1588
 5883 004c CB4D     		ldr	r5, .L417+16
 5884              	.LBE1494:
 5885              	.LBE1493:
 5886              	.LBE1500:
 5887              	.LBE1502:
1830:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5888              		.loc 20 1830 33 view .LVU1589
 5889 004e 1968     		ldr	r1, [r3]
 5890              	.LBB1503:
 5891              	.LBB1501:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5892              		.loc 20 73 13 is_stmt 1 view .LVU1590
 5893              	.LBB1497:
 5894              	.LBB1495:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5895              		.loc 19 71 9 is_stmt 0 view .LVU1591
 5896 0050 0020     		movs	r0, #0
 5897              	.LVL288:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5898              		.loc 19 71 9 view .LVU1592
 5899              	.LBE1495:
 5900              	.LBE1497:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5901              		.loc 20 73 27 view .LVU1593
 5902 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5903              		.loc 20 74 13 is_stmt 1 view .LVU1594
 5904              	.LVL289:
 5905              	.LBB1498:
 5906              	.LBI1493:
  69:delayline_reverse.h ****     {
 5907              		.loc 19 69 17 view .LVU1595
  69:delayline_reverse.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 225


 5908              		.loc 19 69 17 is_stmt 0 view .LVU1596
 5909              	.LBE1498:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5910              		.loc 20 74 29 view .LVU1597
 5911 0056 17EE102A 		vmov	r2, s14	@ int
 5912              	.LBB1499:
 5913              	.LBB1496:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5914              		.loc 19 71 9 view .LVU1598
 5915 005a 0860     		str	r0, [r1]	@ float
 5916 005c D4ED007A 		vldr.32	s15, [r4]
 5917              	.LVL290:
 5918              		.loc 19 72 9 view .LVU1599
 5919 0060 AA42     		cmp	r2, r5
 5920 0062 28BF     		it	cs
 5921 0064 2A46     		movcs	r2, r5
 5922 0066 0A61     		str	r2, [r1, #16]
 5923              	.LVL291:
 5924              	.L336:
 5925              		.loc 19 72 9 view .LVU1600
 5926              	.LBE1496:
 5927              	.LBE1499:
 5928              	.LBE1501:
 5929              	.LBE1503:
1831:Veno-Echo.cpp ****     }
 5930              		.loc 20 1831 9 is_stmt 1 view .LVU1601
 5931              	.LBB1504:
 5932              	.LBI1504:
  68:Veno-Echo.cpp ****     {
 5933              		.loc 20 68 10 view .LVU1602
 5934              	.LBB1505:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5935              		.loc 20 70 9 view .LVU1603
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5936              		.loc 20 70 28 is_stmt 0 view .LVU1604
 5937 0068 C54B     		ldr	r3, .L417+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5938              		.loc 20 70 53 view .LVU1605
 5939 006a 9FEDC36A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5940              		.loc 20 70 28 view .LVU1606
 5941 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5942              	.LVL292:
 5943              	.LBB1506:
 5944              	.LBI1506:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5945              		.loc 21 75 3 is_stmt 1 view .LVU1607
 5946              	.LBB1507:
 5947              		.loc 21 76 5 view .LVU1608
 5948              		.loc 21 76 5 is_stmt 0 view .LVU1609
 5949              	.LBE1507:
 5950              	.LBE1506:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5951              		.loc 20 70 15 view .LVU1610
 5952 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5953              		.loc 20 70 53 view .LVU1611
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 226


 5954 0076 27EE067A 		vmul.f32	s14, s14, s12
 5955              	.LBB1509:
 5956              	.LBB1508:
 5957              		.loc 21 76 31 view .LVU1612
 5958 007a F0EEE66A 		vabs.f32	s13, s13
 5959              	.LBE1508:
 5960              	.LBE1509:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5961              		.loc 20 70 9 view .LVU1613
 5962 007e F4EEC76A 		vcmpe.f32	s13, s14
 5963 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5964 0086 00F3D381 		bgt	.L412
 5965              	.LVL293:
 5966              	.L339:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5967              		.loc 20 70 9 view .LVU1614
 5968              	.LBE1505:
 5969              	.LBE1504:
1839:Veno-Echo.cpp ****     {
 5970              		.loc 20 1839 5 is_stmt 1 view .LVU1615
 5971 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1839:Veno-Echo.cpp ****     {
 5972              		.loc 20 1839 17 is_stmt 0 view .LVU1616
 5973 008e 94ED010A 		vldr.32	s0, [r4, #4]
1839:Veno-Echo.cpp ****     {
 5974              		.loc 20 1839 5 view .LVU1617
 5975 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5976 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5977 009a 06DB     		blt	.L344
1839:Veno-Echo.cpp ****     {
 5978              		.loc 20 1839 35 discriminator 1 view .LVU1618
 5979 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5980 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5981 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5982 00a8 01D9     		bls	.L409
 5983              	.L344:
1845:Veno-Echo.cpp ****     }
 5984              		.loc 20 1845 9 is_stmt 1 view .LVU1619
1845:Veno-Echo.cpp ****     }
 5985              		.loc 20 1845 30 is_stmt 0 view .LVU1620
 5986 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5987              	.L409:
 5988 00ae B548     		ldr	r0, .L417+24
 5989 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5990              	.LVL294:
1848:Veno-Echo.cpp ****     {
 5991              		.loc 20 1848 5 is_stmt 1 view .LVU1621
1848:Veno-Echo.cpp ****     {
 5992              		.loc 20 1848 17 is_stmt 0 view .LVU1622
 5993 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1848:Veno-Echo.cpp ****     {
 5994              		.loc 20 1848 5 view .LVU1623
 5995 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5996 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5997 00c0 C0F2B381 		blt	.L404
1848:Veno-Echo.cpp ****     {
 5998              		.loc 20 1848 42 discriminator 1 view .LVU1624
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 227


 5999 00c4 DFEDB06A 		vldr.32	s13, .L417+28
1854:Veno-Echo.cpp ****     }
 6000              		.loc 20 1854 18 discriminator 1 view .LVU1625
 6001 00c8 9FEDB07A 		vldr.32	s14, .L417+32
 6002 00cc F4EEE67A 		vcmpe.f32	s15, s13
 6003 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6004 00d4 88BF     		it	hi
 6005 00d6 F0EE477A 		vmovhi.f32	s15, s14
 6006              	.L348:
1857:Veno-Echo.cpp ****     {
 6007              		.loc 20 1857 17 view .LVU1626
 6008 00da 94ED030A 		vldr.32	s0, [r4, #12]
1857:Veno-Echo.cpp ****     {
 6009              		.loc 20 1857 5 view .LVU1627
 6010 00de 9FEDAC7A 		vldr.32	s14, .L417+36
 6011 00e2 AC4B     		ldr	r3, .L417+40
 6012 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 6013              	.LBB1520:
 6014              	.LBB1521:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6015              		.loc 9 60 20 view .LVU1628
 6016 00e8 AB4D     		ldr	r5, .L417+44
 6017 00ea C3ED007A 		vstr.32	s15, [r3]
 6018              	.LBE1521:
 6019              	.LBE1520:
1857:Veno-Echo.cpp ****     {
 6020              		.loc 20 1857 5 is_stmt 1 view .LVU1629
 6021 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6022 00f2 06DB     		blt	.L351
1857:Veno-Echo.cpp ****     {
 6023              		.loc 20 1857 40 is_stmt 0 discriminator 1 view .LVU1630
 6024 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6025 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6026 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6027 0100 01D9     		bls	.L410
 6028              	.L351:
1863:Veno-Echo.cpp ****     }
 6029              		.loc 20 1863 9 is_stmt 1 view .LVU1631
 6030              	.LVL295:
 6031              	.LBB1522:
 6032              	.LBI1522:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6033              		.loc 9 58 17 view .LVU1632
 6034              	.LBB1523:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6035              		.loc 9 60 9 view .LVU1633
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6036              		.loc 9 60 20 is_stmt 0 view .LVU1634
 6037 0102 9FEDA60A 		vldr.32	s0, .L417+48
 6038              	.LVL296:
 6039              	.L410:
 6040              		.loc 9 61 34 view .LVU1635
 6041 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6042              		.loc 9 60 20 view .LVU1636
 6043 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6044              		.loc 9 61 9 is_stmt 1 view .LVU1637
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 228


 6045              		.loc 9 61 34 is_stmt 0 view .LVU1638
 6046 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6047              	.LVL297:
 6048              	.LBE1523:
 6049              	.LBE1522:
1866:Veno-Echo.cpp ****     {
 6050              		.loc 20 1866 5 view .LVU1639
 6051 0110 DFEDA37A 		vldr.32	s15, .L417+52
 6052              	.LBB1525:
 6053              	.LBB1524:
 6054              		.loc 9 61 20 view .LVU1640
 6055 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6056              	.LBE1524:
 6057              	.LBE1525:
1866:Veno-Echo.cpp ****     {
 6058              		.loc 20 1866 5 is_stmt 1 view .LVU1641
1866:Veno-Echo.cpp ****     {
 6059              		.loc 20 1866 17 is_stmt 0 view .LVU1642
 6060 0118 94ED050A 		vldr.32	s0, [r4, #20]
1866:Veno-Echo.cpp ****     {
 6061              		.loc 20 1866 5 view .LVU1643
 6062 011c B4EEE70A 		vcmpe.f32	s0, s15
 6063 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6064 0124 07DB     		blt	.L355
1866:Veno-Echo.cpp ****     {
 6065              		.loc 20 1866 40 discriminator 1 view .LVU1644
 6066 0126 DFED9F7A 		vldr.32	s15, .L417+56
 6067 012a B4EEE70A 		vcmpe.f32	s0, s15
 6068 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6069 0132 40F26781 		bls	.L413
 6070              	.L355:
1875:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6071              		.loc 20 1875 9 is_stmt 1 view .LVU1645
1875:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6072              		.loc 20 1875 22 is_stmt 0 view .LVU1646
 6073 0136 9FED9B0A 		vldr.32	s0, .L417+56
 6074 013a 9B48     		ldr	r0, .L417+60
 6075 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6076              	.LVL298:
1876:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6077              		.loc 20 1876 9 is_stmt 1 view .LVU1647
1876:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6078              		.loc 20 1876 22 is_stmt 0 view .LVU1648
 6079 0140 9FED980A 		vldr.32	s0, .L417+56
 6080 0144 9948     		ldr	r0, .L417+64
 6081 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6082              	.LVL299:
1877:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6083              		.loc 20 1877 9 is_stmt 1 view .LVU1649
1877:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6084              		.loc 20 1877 27 is_stmt 0 view .LVU1650
 6085 014a 9FED960A 		vldr.32	s0, .L417+56
 6086 014e 9848     		ldr	r0, .L417+68
 6087 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6088              	.LVL300:
1878:Veno-Echo.cpp ****     }
 6089              		.loc 20 1878 9 is_stmt 1 view .LVU1651
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 229


1878:Veno-Echo.cpp ****     }
 6090              		.loc 20 1878 27 is_stmt 0 view .LVU1652
 6091 0154 9FED930A 		vldr.32	s0, .L417+56
 6092 0158 9648     		ldr	r0, .L417+72
 6093 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6094              	.LVL301:
 6095              	.L358:
1881:Veno-Echo.cpp ****     {
 6096              		.loc 20 1881 5 is_stmt 1 view .LVU1653
1881:Veno-Echo.cpp ****     {
 6097              		.loc 20 1881 17 is_stmt 0 view .LVU1654
 6098 015e 94ED040A 		vldr.32	s0, [r4, #16]
1881:Veno-Echo.cpp ****     {
 6099              		.loc 20 1881 5 view .LVU1655
 6100 0162 DFED957A 		vldr.32	s15, .L417+76
 6101 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6102 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6103 016e 07DB     		blt	.L359
1881:Veno-Echo.cpp ****     {
 6104              		.loc 20 1881 40 discriminator 1 view .LVU1656
 6105 0170 DFED927A 		vldr.32	s15, .L417+80
 6106 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6107 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6108 017c 40F2E380 		bls	.L414
 6109              	.L359:
1890:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6110              		.loc 20 1890 9 is_stmt 1 view .LVU1657
1890:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6111              		.loc 20 1890 22 is_stmt 0 view .LVU1658
 6112 0180 9FED8F0A 		vldr.32	s0, .L417+84
 6113 0184 8F48     		ldr	r0, .L417+88
 6114 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6115              	.LVL302:
1891:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6116              		.loc 20 1891 9 is_stmt 1 view .LVU1659
1891:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6117              		.loc 20 1891 22 is_stmt 0 view .LVU1660
 6118 018a 9FED8D0A 		vldr.32	s0, .L417+84
 6119 018e 8E48     		ldr	r0, .L417+92
 6120 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6121              	.LVL303:
1892:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6122              		.loc 20 1892 9 is_stmt 1 view .LVU1661
1892:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6123              		.loc 20 1892 27 is_stmt 0 view .LVU1662
 6124 0194 9FED8A0A 		vldr.32	s0, .L417+84
 6125 0198 8C48     		ldr	r0, .L417+96
 6126 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6127              	.LVL304:
1893:Veno-Echo.cpp **** 
 6128              		.loc 20 1893 9 is_stmt 1 view .LVU1663
1893:Veno-Echo.cpp **** 
 6129              		.loc 20 1893 27 is_stmt 0 view .LVU1664
 6130 019e 9FED880A 		vldr.32	s0, .L417+84
 6131 01a2 8B48     		ldr	r0, .L417+100
 6132 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6133              	.LVL305:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 230


 6134              	.L362:
1897:Veno-Echo.cpp ****     {
 6135              		.loc 20 1897 5 is_stmt 1 view .LVU1665
1897:Veno-Echo.cpp ****     {
 6136              		.loc 20 1897 17 is_stmt 0 view .LVU1666
 6137 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1897:Veno-Echo.cpp ****     {
 6138              		.loc 20 1897 5 view .LVU1667
 6139 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6140 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6141 01b4 07DB     		blt	.L363
1897:Veno-Echo.cpp ****     {
 6142              		.loc 20 1897 38 discriminator 1 view .LVU1668
 6143 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6144 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6145 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6146 01c2 40F29980 		bls	.L415
 6147              	.L363:
1911:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6148              		.loc 20 1911 9 is_stmt 1 view .LVU1669
1911:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6149              		.loc 20 1911 26 is_stmt 0 view .LVU1670
 6150 01c6 9FED710A 		vldr.32	s0, .L417+32
 6151 01ca 7948     		ldr	r0, .L417+68
 6152 01cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6153              	.LVL306:
1912:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6154              		.loc 20 1912 9 is_stmt 1 view .LVU1671
1912:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6155              		.loc 20 1912 26 is_stmt 0 view .LVU1672
 6156 01d0 9FED6E0A 		vldr.32	s0, .L417+32
 6157 01d4 7D48     		ldr	r0, .L417+96
 6158 01d6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6159              	.LVL307:
1913:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6160              		.loc 20 1913 9 is_stmt 1 view .LVU1673
1913:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6161              		.loc 20 1913 26 is_stmt 0 view .LVU1674
 6162 01da 9FED6C0A 		vldr.32	s0, .L417+32
 6163 01de 7548     		ldr	r0, .L417+72
 6164 01e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6165              	.LVL308:
1914:Veno-Echo.cpp ****     }
 6166              		.loc 20 1914 9 is_stmt 1 view .LVU1675
1914:Veno-Echo.cpp ****     }
 6167              		.loc 20 1914 26 is_stmt 0 view .LVU1676
 6168 01e4 9FED690A 		vldr.32	s0, .L417+32
 6169 01e8 7948     		ldr	r0, .L417+100
 6170 01ea FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6171              	.LVL309:
 6172              	.L366:
1917:Veno-Echo.cpp ****     {
 6173              		.loc 20 1917 5 is_stmt 1 view .LVU1677
1917:Veno-Echo.cpp ****     {
 6174              		.loc 20 1917 16 is_stmt 0 view .LVU1678
 6175 01ee D4ED077A 		vldr.32	s15, [r4, #28]
1917:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 231


 6176              		.loc 20 1917 5 view .LVU1679
 6177 01f2 9FED787A 		vldr.32	s14, .L417+104
1923:Veno-Echo.cpp ****     }
 6178              		.loc 20 1923 21 view .LVU1680
 6179 01f6 784B     		ldr	r3, .L417+108
1917:Veno-Echo.cpp ****     {
 6180              		.loc 20 1917 5 view .LVU1681
 6181 01f8 F4EEC77A 		vcmpe.f32	s15, s14
 6182 01fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6183 0200 06D4     		bmi	.L370
1921:Veno-Echo.cpp ****     {
 6184              		.loc 20 1921 14 is_stmt 1 view .LVU1682
 6185 0202 9FED767A 		vldr.32	s14, .L417+112
 6186 0206 F4EEC77A 		vcmpe.f32	s15, s14
 6187 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6188 020e 70DC     		bgt	.L416
 6189              	.L370:
1919:Veno-Echo.cpp ****     }
 6190              		.loc 20 1919 9 view .LVU1683
1919:Veno-Echo.cpp ****     }
 6191              		.loc 20 1919 21 is_stmt 0 view .LVU1684
 6192 0210 0022     		movs	r2, #0
 6193 0212 1A70     		strb	r2, [r3]
 6194              	.L369:
1931:Veno-Echo.cpp ****         && (setting.tempo <= static_cast<float> (maxTempo)) )
 6195              		.loc 20 1931 5 is_stmt 1 view .LVU1685
1931:Veno-Echo.cpp ****         && (setting.tempo <= static_cast<float> (maxTempo)) )
 6196              		.loc 20 1931 18 is_stmt 0 view .LVU1686
 6197 0214 94ED080A 		vldr.32	s0, [r4, #32]
1931:Veno-Echo.cpp ****         && (setting.tempo <= static_cast<float> (maxTempo)) )
 6198              		.loc 20 1931 5 view .LVU1687
 6199 0218 DFED717A 		vldr.32	s15, .L417+116
 6200 021c B4EEE70A 		vcmpe.f32	s0, s15
 6201 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6202 0224 06DB     		blt	.L372
1932:Veno-Echo.cpp ****     {
 6203              		.loc 20 1932 9 view .LVU1688
 6204 0226 DFED6F7A 		vldr.32	s15, .L417+120
 6205 022a B4EEE70A 		vcmpe.f32	s0, s15
 6206 022e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6207 0232 01D9     		bls	.L411
 6208              	.L372:
1940:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6209              		.loc 20 1940 9 is_stmt 1 view .LVU1689
1940:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6210              		.loc 20 1940 27 is_stmt 0 view .LVU1690
 6211 0234 9FED6C0A 		vldr.32	s0, .L417+124
 6212              	.L411:
 6213 0238 5248     		ldr	r0, .L417+24
 6214 023a FFF7FEFF 		bl	_ZN8Taptempo8setTempoEf
 6215              	.LVL310:
1941:Veno-Echo.cpp ****     }
 6216              		.loc 20 1941 9 is_stmt 1 view .LVU1691
1941:Veno-Echo.cpp ****     }
 6217              		.loc 20 1941 31 is_stmt 0 view .LVU1692
 6218 023e 5148     		ldr	r0, .L417+24
 6219 0240 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 232


 6220              	.LVL311:
 6221 0244 6948     		ldr	r0, .L417+128
 6222 0246 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6223              	.LVL312:
1944:Veno-Echo.cpp ****     {
 6224              		.loc 20 1944 5 is_stmt 1 view .LVU1693
 6225 024a DFED697A 		vldr.32	s15, .L417+132
 6226 024e 94ED097A 		vldr.32	s14, [r4, #36]
1946:Veno-Echo.cpp ****     }
 6227              		.loc 20 1946 24 is_stmt 0 view .LVU1694
 6228 0252 6848     		ldr	r0, .L417+136
1944:Veno-Echo.cpp ****     {
 6229              		.loc 20 1944 5 view .LVU1695
 6230 0254 B4EEE77A 		vcmpe.f32	s14, s15
 6231 0258 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6232 025c 42DD     		ble	.L406
1946:Veno-Echo.cpp ****     }
 6233              		.loc 20 1946 9 is_stmt 1 view .LVU1696
1946:Veno-Echo.cpp ****     }
 6234              		.loc 20 1946 24 is_stmt 0 view .LVU1697
 6235 025e FFF7FEFF 		bl	_ZN9ButtonLED6turnONEv
 6236              	.LVL313:
 6237              	.L378:
1953:Veno-Echo.cpp ****     {
 6238              		.loc 20 1953 5 is_stmt 1 view .LVU1698
 6239 0262 DFED637A 		vldr.32	s15, .L417+132
 6240 0266 94ED0A7A 		vldr.32	s14, [r4, #40]
1955:Veno-Echo.cpp ****     }
 6241              		.loc 20 1955 24 is_stmt 0 view .LVU1699
 6242 026a 6348     		ldr	r0, .L417+140
1953:Veno-Echo.cpp ****     {
 6243              		.loc 20 1953 5 view .LVU1700
 6244 026c B4EEE77A 		vcmpe.f32	s14, s15
 6245 0270 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6246 0274 39DD     		ble	.L407
1955:Veno-Echo.cpp ****     }
 6247              		.loc 20 1955 9 is_stmt 1 view .LVU1701
1962:Veno-Echo.cpp **** 
 6248              		.loc 20 1962 1 is_stmt 0 view .LVU1702
 6249 0276 BDE83840 		pop	{r3, r4, r5, lr}
 6250              		.cfi_remember_state
 6251              		.cfi_restore 14
 6252              		.cfi_restore 5
 6253              		.cfi_restore 4
 6254              		.cfi_restore 3
 6255              		.cfi_def_cfa_offset 0
 6256              	.LVL314:
1955:Veno-Echo.cpp ****     }
 6257              		.loc 20 1955 24 view .LVU1703
 6258 027a FFF7FEBF 		b	_ZN9ButtonLED6turnONEv
 6259              	.LVL315:
 6260              	.L333:
 6261              		.cfi_restore_state
1835:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6262              		.loc 20 1835 9 is_stmt 1 view .LVU1704
 6263              	.LBB1526:
 6264              	.LBI1526:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 233


  68:Veno-Echo.cpp ****     {
 6265              		.loc 20 68 10 view .LVU1705
 6266              	.LBB1527:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6267              		.loc 20 70 9 view .LVU1706
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6268              		.loc 20 70 28 is_stmt 0 view .LVU1707
 6269 027e D3ED017A 		vldr.32	s15, [r3, #4]
 6270              	.LVL316:
 6271              	.LBB1528:
 6272              	.LBI1528:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6273              		.loc 21 75 3 is_stmt 1 view .LVU1708
 6274              	.LBB1529:
 6275              		.loc 21 76 5 view .LVU1709
 6276              		.loc 21 76 5 is_stmt 0 view .LVU1710
 6277              	.LBE1529:
 6278              	.LBE1528:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6279              		.loc 20 70 15 view .LVU1711
 6280 0282 DFED5E6A 		vldr.32	s13, .L417+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6281              		.loc 20 70 53 view .LVU1712
 6282 0286 9FED3C6A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6283              		.loc 20 70 15 view .LVU1713
 6284 028a 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6285              		.loc 20 70 53 view .LVU1714
 6286 028e 67EE867A 		vmul.f32	s15, s15, s12
 6287              	.LBB1531:
 6288              	.LBB1530:
 6289              		.loc 21 76 31 view .LVU1715
 6290 0292 B0EEC77A 		vabs.f32	s14, s14
 6291              	.LBE1530:
 6292              	.LBE1531:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6293              		.loc 20 70 9 view .LVU1716
 6294 0296 B4EEE77A 		vcmpe.f32	s14, s15
 6295 029a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6296 029e 06DD     		ble	.L340
 6297              	.LBE1527:
 6298              	.LBE1526:
1835:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6299              		.loc 20 1835 33 view .LVU1717
 6300 02a0 1A68     		ldr	r2, [r3]
 6301              	.LBB1537:
 6302              	.LBB1536:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6303              		.loc 20 73 13 is_stmt 1 view .LVU1718
 6304              	.LBB1532:
 6305              	.LBB1533:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6306              		.loc 19 71 9 is_stmt 0 view .LVU1719
 6307 02a2 0021     		movs	r1, #0
 6308              		.loc 19 72 9 view .LVU1720
 6309 02a4 5648     		ldr	r0, .L417+148
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 234


 6310              	.LVL317:
 6311              		.loc 19 72 9 view .LVU1721
 6312              	.LBE1533:
 6313              	.LBE1532:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6314              		.loc 20 73 27 view .LVU1722
 6315 02a6 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6316              		.loc 20 74 13 is_stmt 1 view .LVU1723
 6317              	.LVL318:
 6318              	.LBB1535:
 6319              	.LBI1532:
  69:delayline_reverse.h ****     {
 6320              		.loc 19 69 17 view .LVU1724
 6321              	.LBB1534:
 6322              		.loc 19 72 9 is_stmt 0 view .LVU1725
 6323 02aa 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6324              		.loc 19 71 9 view .LVU1726
 6325 02ac 1160     		str	r1, [r2]	@ float
 6326              	.LVL319:
 6327              	.L340:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6328              		.loc 19 71 9 view .LVU1727
 6329              	.LBE1534:
 6330              	.LBE1535:
 6331              	.LBE1536:
 6332              	.LBE1537:
1836:Veno-Echo.cpp ****     }
 6333              		.loc 20 1836 9 is_stmt 1 view .LVU1728
 6334              	.LBB1538:
 6335              	.LBI1538:
  68:Veno-Echo.cpp ****     {
 6336              		.loc 20 68 10 view .LVU1729
 6337              	.LBB1539:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6338              		.loc 20 70 9 view .LVU1730
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6339              		.loc 20 70 28 is_stmt 0 view .LVU1731
 6340 02ae 344B     		ldr	r3, .L417+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6341              		.loc 20 70 15 view .LVU1732
 6342 02b0 DFED526A 		vldr.32	s13, .L417+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6343              		.loc 20 70 28 view .LVU1733
 6344 02b4 D3ED017A 		vldr.32	s15, [r3, #4]
 6345              	.LVL320:
 6346              	.LBB1540:
 6347              	.LBI1540:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6348              		.loc 21 75 3 is_stmt 1 view .LVU1734
 6349              	.LBB1541:
 6350              		.loc 21 76 5 view .LVU1735
 6351              		.loc 21 76 5 is_stmt 0 view .LVU1736
 6352              	.LBE1541:
 6353              	.LBE1540:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 235


 6354              		.loc 20 70 53 view .LVU1737
 6355 02b8 9FED2F6A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6356              		.loc 20 70 15 view .LVU1738
 6357 02bc 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6358              		.loc 20 70 53 view .LVU1739
 6359 02c0 67EE867A 		vmul.f32	s15, s15, s12
 6360              	.LBB1543:
 6361              	.LBB1542:
 6362              		.loc 21 76 31 view .LVU1740
 6363 02c4 B0EEC77A 		vabs.f32	s14, s14
 6364              	.LBE1542:
 6365              	.LBE1543:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6366              		.loc 20 70 9 view .LVU1741
 6367 02c8 B4EEE77A 		vcmpe.f32	s14, s15
 6368 02cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6369 02d0 7FF7DBAE 		ble	.L339
 6370              	.LBE1539:
 6371              	.LBE1538:
1836:Veno-Echo.cpp ****     }
 6372              		.loc 20 1836 33 view .LVU1742
 6373 02d4 1A68     		ldr	r2, [r3]
 6374              	.LBB1549:
 6375              	.LBB1548:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6376              		.loc 20 73 13 is_stmt 1 view .LVU1743
 6377              	.LBB1544:
 6378              	.LBB1545:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6379              		.loc 19 71 9 is_stmt 0 view .LVU1744
 6380 02d6 0021     		movs	r1, #0
 6381              		.loc 19 72 9 view .LVU1745
 6382 02d8 4948     		ldr	r0, .L417+148
 6383              	.LBE1545:
 6384              	.LBE1544:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6385              		.loc 20 73 27 view .LVU1746
 6386 02da C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6387              		.loc 20 74 13 is_stmt 1 view .LVU1747
 6388              	.LVL321:
 6389              	.LBB1547:
 6390              	.LBI1544:
  69:delayline_reverse.h ****     {
 6391              		.loc 19 69 17 view .LVU1748
 6392              	.LBB1546:
 6393              		.loc 19 72 9 is_stmt 0 view .LVU1749
 6394 02de 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6395              		.loc 19 71 9 view .LVU1750
 6396 02e0 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6397              		.loc 19 73 5 view .LVU1751
 6398 02e2 D2E6     		b	.L339
 6399              	.LVL322:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 236


 6400              	.L406:
 6401              		.loc 19 73 5 view .LVU1752
 6402              	.LBE1546:
 6403              	.LBE1547:
 6404              	.LBE1548:
 6405              	.LBE1549:
1950:Veno-Echo.cpp ****     }
 6406              		.loc 20 1950 9 is_stmt 1 view .LVU1753
1950:Veno-Echo.cpp ****     }
 6407              		.loc 20 1950 25 is_stmt 0 view .LVU1754
 6408 02e4 FFF7FEFF 		bl	_ZN9ButtonLED7turnOFFEv
 6409              	.LVL323:
 6410 02e8 BBE7     		b	.L378
 6411              	.L407:
1959:Veno-Echo.cpp ****     }
 6412              		.loc 20 1959 9 is_stmt 1 view .LVU1755
1962:Veno-Echo.cpp **** 
 6413              		.loc 20 1962 1 is_stmt 0 view .LVU1756
 6414 02ea BDE83840 		pop	{r3, r4, r5, lr}
 6415              		.cfi_remember_state
 6416              		.cfi_restore 14
 6417              		.cfi_restore 5
 6418              		.cfi_restore 4
 6419              		.cfi_restore 3
 6420              		.cfi_def_cfa_offset 0
 6421              	.LVL324:
1959:Veno-Echo.cpp ****     }
 6422              		.loc 20 1959 25 view .LVU1757
 6423 02ee FFF7FEBF 		b	_ZN9ButtonLED7turnOFFEv
 6424              	.LVL325:
 6425              	.L416:
 6426              		.cfi_restore_state
1923:Veno-Echo.cpp ****     }
 6427              		.loc 20 1923 9 is_stmt 1 view .LVU1758
1923:Veno-Echo.cpp ****     }
 6428              		.loc 20 1923 21 is_stmt 0 view .LVU1759
 6429 02f2 0122     		movs	r2, #1
 6430 02f4 1A70     		strb	r2, [r3]
 6431 02f6 8DE7     		b	.L369
 6432              	.L415:
1899:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6433              		.loc 20 1899 9 is_stmt 1 view .LVU1760
1899:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6434              		.loc 20 1899 21 is_stmt 0 view .LVU1761
 6435 02f8 2B48     		ldr	r0, .L417+60
 6436 02fa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6437              	.LVL326:
1900:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6438              		.loc 20 1900 9 is_stmt 1 view .LVU1762
1900:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6439              		.loc 20 1900 21 is_stmt 0 view .LVU1763
 6440 02fe 94ED060A 		vldr.32	s0, [r4, #24]
 6441 0302 3048     		ldr	r0, .L417+88
 6442 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6443              	.LVL327:
1901:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6444              		.loc 20 1901 9 is_stmt 1 view .LVU1764
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 237


1901:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6445              		.loc 20 1901 21 is_stmt 0 view .LVU1765
 6446 0308 94ED060A 		vldr.32	s0, [r4, #24]
 6447 030c 2748     		ldr	r0, .L417+64
 6448 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6449              	.LVL328:
1902:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6450              		.loc 20 1902 9 is_stmt 1 view .LVU1766
1902:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6451              		.loc 20 1902 21 is_stmt 0 view .LVU1767
 6452 0312 94ED060A 		vldr.32	s0, [r4, #24]
 6453 0316 2C48     		ldr	r0, .L417+92
 6454 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6455              	.LVL329:
1903:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6456              		.loc 20 1903 9 is_stmt 1 view .LVU1768
1903:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6457              		.loc 20 1903 26 is_stmt 0 view .LVU1769
 6458 031c 94ED060A 		vldr.32	s0, [r4, #24]
 6459 0320 2348     		ldr	r0, .L417+68
 6460 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6461              	.LVL330:
1904:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6462              		.loc 20 1904 9 is_stmt 1 view .LVU1770
1904:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6463              		.loc 20 1904 26 is_stmt 0 view .LVU1771
 6464 0326 94ED060A 		vldr.32	s0, [r4, #24]
 6465 032a 2848     		ldr	r0, .L417+96
 6466 032c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6467              	.LVL331:
1905:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6468              		.loc 20 1905 9 is_stmt 1 view .LVU1772
1905:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6469              		.loc 20 1905 26 is_stmt 0 view .LVU1773
 6470 0330 94ED060A 		vldr.32	s0, [r4, #24]
 6471 0334 1F48     		ldr	r0, .L417+72
 6472 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6473              	.LVL332:
1906:Veno-Echo.cpp ****     }
 6474              		.loc 20 1906 9 is_stmt 1 view .LVU1774
1906:Veno-Echo.cpp ****     }
 6475              		.loc 20 1906 26 is_stmt 0 view .LVU1775
 6476 033a 94ED060A 		vldr.32	s0, [r4, #24]
 6477 033e 2448     		ldr	r0, .L417+100
 6478 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6479              	.LVL333:
 6480 0344 53E7     		b	.L366
 6481              	.L414:
1883:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6482              		.loc 20 1883 9 is_stmt 1 view .LVU1776
1883:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6483              		.loc 20 1883 22 is_stmt 0 view .LVU1777
 6484 0346 1F48     		ldr	r0, .L417+88
 6485 0348 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6486              	.LVL334:
1884:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6487              		.loc 20 1884 9 is_stmt 1 view .LVU1778
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 238


1884:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6488              		.loc 20 1884 22 is_stmt 0 view .LVU1779
 6489 034c 94ED040A 		vldr.32	s0, [r4, #16]
 6490 0350 1D48     		ldr	r0, .L417+92
 6491 0352 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6492              	.LVL335:
1885:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6493              		.loc 20 1885 9 is_stmt 1 view .LVU1780
1885:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6494              		.loc 20 1885 27 is_stmt 0 view .LVU1781
 6495 0356 94ED040A 		vldr.32	s0, [r4, #16]
 6496 035a 1C48     		ldr	r0, .L417+96
 6497 035c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6498              	.LVL336:
1886:Veno-Echo.cpp ****     }
 6499              		.loc 20 1886 9 is_stmt 1 view .LVU1782
1886:Veno-Echo.cpp ****     }
 6500              		.loc 20 1886 27 is_stmt 0 view .LVU1783
 6501 0360 94ED040A 		vldr.32	s0, [r4, #16]
 6502 0364 1A48     		ldr	r0, .L417+100
 6503 0366 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6504              	.LVL337:
 6505 036a 1DE7     		b	.L362
 6506              	.L418:
 6507              		.align	2
 6508              	.L417:
 6509 036c 0050C346 		.word	1187205120
 6510 0370 00000000 		.word	.LANCHOR2
 6511 0374 00606A48 		.word	1214930944
 6512 0378 0AD7A33B 		.word	1000593162
 6513 037c BF270900 		.word	599999
 6514 0380 00000000 		.word	.LANCHOR3
 6515 0384 00000000 		.word	.LANCHOR26
 6516 0388 0000FA43 		.word	1140457472
 6517 038c 00000000 		.word	0
 6518 0390 CDCCCC3D 		.word	1036831949
 6519 0394 00000000 		.word	.LANCHOR68
 6520 0398 00000000 		.word	.LANCHOR76
 6521 039c 9A99A140 		.word	1084332442
 6522 03a0 0080BB44 		.word	1153138688
 6523 03a4 00803B46 		.word	1178304512
 6524 03a8 00000000 		.word	.LANCHOR47
 6525 03ac 00000000 		.word	.LANCHOR48
 6526 03b0 00000000 		.word	.LANCHOR49
 6527 03b4 00000000 		.word	.LANCHOR50
 6528 03b8 0000C842 		.word	1120403456
 6529 03bc 00004844 		.word	1145569280
 6530 03c0 00004843 		.word	1128792064
 6531 03c4 00000000 		.word	.LANCHOR35
 6532 03c8 00000000 		.word	.LANCHOR36
 6533 03cc 00000000 		.word	.LANCHOR37
 6534 03d0 00000000 		.word	.LANCHOR38
 6535 03d4 6666E63E 		.word	1055286886
 6536 03d8 00000000 		.word	.LANCHOR83
 6537 03dc CDCC0C3F 		.word	1057803469
 6538 03e0 00007044 		.word	1148190720
 6539 03e4 00A08C48 		.word	1217175552
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 239


 6540 03e8 0080BB46 		.word	1186693120
 6541 03ec 00000000 		.word	.LANCHOR90
 6542 03f0 48E1FA3E 		.word	1056629064
 6543 03f4 00000000 		.word	.LANCHOR93
 6544 03f8 00000000 		.word	.LANCHOR94
 6545 03fc 00650148 		.word	1208050944
 6546 0400 94050200 		.word	132500
 6547              	.L413:
1868:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6548              		.loc 20 1868 9 is_stmt 1 view .LVU1784
1868:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6549              		.loc 20 1868 22 is_stmt 0 view .LVU1785
 6550 0404 1248     		ldr	r0, .L419
 6551 0406 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6552              	.LVL338:
1869:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6553              		.loc 20 1869 9 is_stmt 1 view .LVU1786
1869:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6554              		.loc 20 1869 22 is_stmt 0 view .LVU1787
 6555 040a 94ED050A 		vldr.32	s0, [r4, #20]
 6556 040e 1148     		ldr	r0, .L419+4
 6557 0410 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6558              	.LVL339:
1870:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6559              		.loc 20 1870 9 is_stmt 1 view .LVU1788
1870:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6560              		.loc 20 1870 27 is_stmt 0 view .LVU1789
 6561 0414 94ED050A 		vldr.32	s0, [r4, #20]
 6562 0418 0F48     		ldr	r0, .L419+8
 6563 041a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6564              	.LVL340:
1871:Veno-Echo.cpp ****     }
 6565              		.loc 20 1871 9 is_stmt 1 view .LVU1790
1871:Veno-Echo.cpp ****     }
 6566              		.loc 20 1871 27 is_stmt 0 view .LVU1791
 6567 041e 94ED050A 		vldr.32	s0, [r4, #20]
 6568 0422 0E48     		ldr	r0, .L419+12
 6569 0424 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6570              	.LVL341:
 6571 0428 99E6     		b	.L358
 6572              	.L404:
1854:Veno-Echo.cpp ****     }
 6573              		.loc 20 1854 18 view .LVU1792
 6574 042a DFED0D7A 		vldr.32	s15, .L419+16
 6575 042e 54E6     		b	.L348
 6576              	.LVL342:
 6577              	.L412:
 6578              	.LBB1550:
 6579              	.LBB1518:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6580              		.loc 20 74 29 view .LVU1793
 6581 0430 BCEEE77A 		vcvt.u32.f32	s14, s15
 6582              	.LBB1510:
 6583              	.LBB1511:
  72:delayline_reverse.h ****     }
 6584              		.loc 19 72 9 view .LVU1794
 6585 0434 0B4D     		ldr	r5, .L419+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 240


 6586              	.LBE1511:
 6587              	.LBE1510:
 6588              	.LBE1518:
 6589              	.LBE1550:
1831:Veno-Echo.cpp ****     }
 6590              		.loc 20 1831 33 view .LVU1795
 6591 0436 1968     		ldr	r1, [r3]
 6592              	.LBB1551:
 6593              	.LBB1519:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6594              		.loc 20 73 13 is_stmt 1 view .LVU1796
 6595              	.LBB1515:
 6596              	.LBB1512:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6597              		.loc 19 71 9 is_stmt 0 view .LVU1797
 6598 0438 0020     		movs	r0, #0
 6599              	.LBE1512:
 6600              	.LBE1515:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6601              		.loc 20 73 27 view .LVU1798
 6602 043a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6603              		.loc 20 74 29 view .LVU1799
 6604 043e 17EE102A 		vmov	r2, s14	@ int
 6605              	.LBB1516:
 6606              	.LBB1513:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6607              		.loc 19 71 9 view .LVU1800
 6608 0442 0860     		str	r0, [r1]	@ float
 6609              	.LVL343:
  72:delayline_reverse.h ****     }
 6610              		.loc 19 72 9 view .LVU1801
 6611 0444 AA42     		cmp	r2, r5
 6612 0446 28BF     		it	cs
 6613 0448 2A46     		movcs	r2, r5
 6614              	.LBE1513:
 6615              	.LBE1516:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6616              		.loc 20 74 13 is_stmt 1 view .LVU1802
 6617              	.LVL344:
 6618              	.LBB1517:
 6619              	.LBI1510:
  69:delayline_reverse.h ****     {
 6620              		.loc 19 69 17 view .LVU1803
 6621              	.LBB1514:
  72:delayline_reverse.h ****     }
 6622              		.loc 19 72 9 is_stmt 0 view .LVU1804
 6623 044a 0A61     		str	r2, [r1, #16]
 6624              		.loc 19 73 5 view .LVU1805
 6625 044c 1DE6     		b	.L339
 6626              	.L420:
 6627 044e 00BF     		.align	2
 6628              	.L419:
 6629 0450 00000000 		.word	.LANCHOR47
 6630 0454 00000000 		.word	.LANCHOR48
 6631 0458 00000000 		.word	.LANCHOR49
 6632 045c 00000000 		.word	.LANCHOR50
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 241


 6633 0460 00000000 		.word	0
 6634 0464 BF270900 		.word	599999
 6635              	.LBE1514:
 6636              	.LBE1517:
 6637              	.LBE1519:
 6638              	.LBE1551:
 6639              		.cfi_endproc
 6640              	.LFE4822:
 6642              		.section	.text.startup.main,"ax",%progbits
 6643              		.align	1
 6644              		.p2align 2,,3
 6645              		.global	main
 6646              		.syntax unified
 6647              		.thumb
 6648              		.thumb_func
 6649              		.fpu fpv5-d16
 6651              	main:
 6652              	.LFB4800:
 649:Veno-Echo.cpp ****     // initialize hardware.
 6653              		.loc 20 649 1 is_stmt 1 view -0
 6654              		.cfi_startproc
 6655              		@ Volatile: function does not return.
 6656              		@ args = 0, pretend = 0, frame = 328
 6657              		@ frame_needed = 0, uses_anonymous_args = 0
 651:Veno-Echo.cpp ****     hw.Init();
 6658              		.loc 20 651 5 view .LVU1807
 649:Veno-Echo.cpp ****     // initialize hardware.
 6659              		.loc 20 649 1 is_stmt 0 view .LVU1808
 6660 0000 80B5     		push	{r7, lr}
 6661              		.cfi_def_cfa_offset 8
 6662              		.cfi_offset 7, -8
 6663              		.cfi_offset 14, -4
 651:Veno-Echo.cpp ****     hw.Init();
 6664              		.loc 20 651 17 view .LVU1809
 6665 0002 DB48     		ldr	r0, .L431
 649:Veno-Echo.cpp ****     // initialize hardware.
 6666              		.loc 20 649 1 view .LVU1810
 6667 0004 D4B0     		sub	sp, sp, #336
 6668              		.cfi_def_cfa_offset 344
 651:Veno-Echo.cpp ****     hw.Init();
 6669              		.loc 20 651 17 view .LVU1811
 6670 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6671              	.LVL345:
 652:Veno-Echo.cpp ****     
 6672              		.loc 20 652 5 is_stmt 1 view .LVU1812
 652:Veno-Echo.cpp ****     
 6673              		.loc 20 652 12 is_stmt 0 view .LVU1813
 6674 000a 0021     		movs	r1, #0
 6675 000c D848     		ldr	r0, .L431
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6676              		.loc 20 656 16 view .LVU1814
 6677 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 652:Veno-Echo.cpp ****     
 6678              		.loc 20 652 12 view .LVU1815
 6679 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6680              	.LVL346:
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 242


 6681              		.loc 20 656 5 is_stmt 1 view .LVU1816
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6682              		.loc 20 656 16 is_stmt 0 view .LVU1817
 6683 0016 1D20     		movs	r0, #29
 6684 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6685              	.LVL347:
 6686 001c 0346     		mov	r3, r0	@ movhi
 6687 001e 0620     		movs	r0, #6
 663:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6688              		.loc 20 663 22 view .LVU1818
 6689 0020 0224     		movs	r4, #2
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6690              		.loc 20 656 16 view .LVU1819
 6691 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 6692 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6693              	.LVL348:
 6694 002a 0346     		mov	r3, r0	@ movhi
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6695              		.loc 20 656 80 view .LVU1820
 6696 002c D048     		ldr	r0, .L431
 6697              	.LBB1552:
 6698              	.LBB1553:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6699              		.loc 11 64 50 view .LVU1821
 6700 002e 4FF00108 		mov	r8, #1
 6701              	.LBE1553:
 6702              	.LBE1552:
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6703              		.loc 20 671 20 view .LVU1822
 6704 0032 D04E     		ldr	r6, .L431+4
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6705              		.loc 20 656 16 view .LVU1823
 6706 0034 ADF81030 		strh	r3, [sp, #16]	@ movhi
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6707              		.loc 20 656 80 view .LVU1824
 6708 0038 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6709              	.LVL349:
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6710              		.loc 20 656 16 view .LVU1825
 6711 003c 0123     		movs	r3, #1
 6712 003e 80EE080A 		vdiv.f32	s0, s0, s16
 6713 0042 CD48     		ldr	r0, .L431+8
 6714              	.LBB1556:
 6715              	.LBB1557:
 6716              	.LBB1558:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6717              		.loc 11 45 16 view .LVU1826
 6718 0044 4FF07C59 		mov	r9, #1056964608
 6719              	.LBE1558:
 6720              	.LBE1557:
 6721              	.LBE1556:
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6722              		.loc 20 677 20 view .LVU1827
 6723 0048 CC4D     		ldr	r5, .L431+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 243


 6724              	.LBB1565:
 6725              	.LBB1566:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6726              		.loc 9 44 20 view .LVU1828
 6727 004a CD4F     		ldr	r7, .L431+16
 6728              	.LBE1566:
 6729              	.LBE1565:
 6730              	.LBB1570:
 6731              	.LBB1571:
  38:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  39:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  40:../DaisySP/Source/Control/adsr.h ****     */
  41:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate, int blockSize = 1);
  42:../DaisySP/Source/Control/adsr.h ****     /**
  43:../DaisySP/Source/Control/adsr.h ****      \function Retrigger forces the envelope back to attack phase
  44:../DaisySP/Source/Control/adsr.h ****      \param hard  resets the history to zero, results in a click.
  45:../DaisySP/Source/Control/adsr.h ****      */
  46:../DaisySP/Source/Control/adsr.h ****     void Retrigger(bool hard);
  47:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  48:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  49:../DaisySP/Source/Control/adsr.h ****     */
  50:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     void SetTime(int seg, float time);
  55:../DaisySP/Source/Control/adsr.h ****     void SetAttackTime(float timeInS, float shape = 0.0f);
  56:../DaisySP/Source/Control/adsr.h ****     void SetDecayTime(float timeInS);
  57:../DaisySP/Source/Control/adsr.h ****     void SetReleaseTime(float timeInS);
  58:../DaisySP/Source/Control/adsr.h **** 
  59:../DaisySP/Source/Control/adsr.h ****   private:
  60:../DaisySP/Source/Control/adsr.h ****     void SetTimeConstant(float timeInS, float& time, float& coeff);
  61:../DaisySP/Source/Control/adsr.h **** 
  62:../DaisySP/Source/Control/adsr.h ****   public:
  63:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  64:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level, 0...1.0
  65:../DaisySP/Source/Control/adsr.h ****     */
  66:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level)
  67:../DaisySP/Source/Control/adsr.h ****     {
  68:../DaisySP/Source/Control/adsr.h ****         sus_level = (sus_level <= 0.f) ? -0.01f // forces envelope into idle
  69:../DaisySP/Source/Control/adsr.h ****                                        : (sus_level > 1.f) ? 1.f : sus_level;
  70:../DaisySP/Source/Control/adsr.h ****         sus_level_ = sus_level;
 6732              		.loc 8 70 20 view .LVU1829
 6733 004c F7EE008A 		vmov.f32	s17, #1.0e+0
 6734              	.LBE1571:
 6735              	.LBE1570:
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6736              		.loc 20 656 16 view .LVU1830
 6737 0050 DDE90312 		ldrd	r1, r2, [sp, #12]
 6738 0054 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6739              	.LVL350:
 657:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6740              		.loc 20 657 5 is_stmt 1 view .LVU1831
 657:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6741              		.loc 20 657 16 is_stmt 0 view .LVU1832
 6742 0058 1E20     		movs	r0, #30
 6743 005a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 244


 6744              	.LVL351:
 6745 005e 0346     		mov	r3, r0	@ movhi
 6746 0060 0720     		movs	r0, #7
 6747 0062 ADF81430 		strh	r3, [sp, #20]	@ movhi
 6748 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6749              	.LVL352:
 6750 006a 0346     		mov	r3, r0	@ movhi
 657:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6751              		.loc 20 657 80 view .LVU1833
 6752 006c C048     		ldr	r0, .L431
 657:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6753              		.loc 20 657 16 view .LVU1834
 6754 006e ADF81830 		strh	r3, [sp, #24]	@ movhi
 657:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6755              		.loc 20 657 80 view .LVU1835
 6756 0072 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6757              	.LVL353:
 657:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6758              		.loc 20 657 16 view .LVU1836
 6759 0076 0123     		movs	r3, #1
 6760 0078 80EE080A 		vdiv.f32	s0, s0, s16
 6761 007c C148     		ldr	r0, .L431+20
 6762 007e DDE90512 		ldrd	r1, r2, [sp, #20]
 6763 0082 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6764              	.LVL354:
 658:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6765              		.loc 20 658 5 is_stmt 1 view .LVU1837
 658:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6766              		.loc 20 658 18 is_stmt 0 view .LVU1838
 6767 0086 0A20     		movs	r0, #10
 6768 0088 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6769              	.LVL355:
 6770 008c 0346     		mov	r3, r0	@ movhi
 6771 008e 0220     		movs	r0, #2
 6772 0090 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 6773 0094 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6774              	.LVL356:
 6775 0098 0346     		mov	r3, r0	@ movhi
 658:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6776              		.loc 20 658 85 view .LVU1839
 6777 009a B548     		ldr	r0, .L431
 658:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6778              		.loc 20 658 18 view .LVU1840
 6779 009c ADF82030 		strh	r3, [sp, #32]	@ movhi
 658:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6780              		.loc 20 658 85 view .LVU1841
 6781 00a0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6782              	.LVL357:
 658:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6783              		.loc 20 658 18 view .LVU1842
 6784 00a4 0023     		movs	r3, #0
 6785 00a6 80EE080A 		vdiv.f32	s0, s0, s16
 6786 00aa B748     		ldr	r0, .L431+24
 6787 00ac DDE90712 		ldrd	r1, r2, [sp, #28]
 6788 00b0 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6789              	.LVL358:
 659:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 245


 6790              		.loc 20 659 5 is_stmt 1 view .LVU1843
 659:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6791              		.loc 20 659 18 is_stmt 0 view .LVU1844
 6792 00b4 0B20     		movs	r0, #11
 6793 00b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6794              	.LVL359:
 6795 00ba 0346     		mov	r3, r0	@ movhi
 6796 00bc 0320     		movs	r0, #3
 6797 00be ADF82430 		strh	r3, [sp, #36]	@ movhi
 6798 00c2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6799              	.LVL360:
 6800 00c6 0346     		mov	r3, r0	@ movhi
 659:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6801              		.loc 20 659 85 view .LVU1845
 6802 00c8 A948     		ldr	r0, .L431
 659:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6803              		.loc 20 659 18 view .LVU1846
 6804 00ca ADF82830 		strh	r3, [sp, #40]	@ movhi
 659:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6805              		.loc 20 659 85 view .LVU1847
 6806 00ce FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6807              	.LVL361:
 659:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6808              		.loc 20 659 18 view .LVU1848
 6809 00d2 0023     		movs	r3, #0
 6810 00d4 80EE080A 		vdiv.f32	s0, s0, s16
 6811 00d8 AC48     		ldr	r0, .L431+28
 6812 00da DDE90912 		ldrd	r1, r2, [sp, #36]
 6813 00de FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6814              	.LVL362:
 660:Veno-Echo.cpp **** 
 6815              		.loc 20 660 5 is_stmt 1 view .LVU1849
 660:Veno-Echo.cpp **** 
 6816              		.loc 20 660 20 is_stmt 0 view .LVU1850
 6817 00e2 1820     		movs	r0, #24
 6818 00e4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6819              	.LVL363:
 6820 00e8 0346     		mov	r3, r0	@ movhi
 6821 00ea 0420     		movs	r0, #4
 6822 00ec ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6823 00f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6824              	.LVL364:
 6825 00f4 0346     		mov	r3, r0	@ movhi
 660:Veno-Echo.cpp **** 
 6826              		.loc 20 660 93 view .LVU1851
 6827 00f6 9E48     		ldr	r0, .L431
 660:Veno-Echo.cpp **** 
 6828              		.loc 20 660 20 view .LVU1852
 6829 00f8 ADF83030 		strh	r3, [sp, #48]	@ movhi
 660:Veno-Echo.cpp **** 
 6830              		.loc 20 660 93 view .LVU1853
 6831 00fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6832              	.LVL365:
 660:Veno-Echo.cpp **** 
 6833              		.loc 20 660 20 view .LVU1854
 6834 0100 2346     		mov	r3, r4
 6835 0102 80EE080A 		vdiv.f32	s0, s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 246


 6836 0106 A248     		ldr	r0, .L431+32
 6837 0108 DDE90B12 		ldrd	r1, r2, [sp, #44]
 6838 010c FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6839              	.LVL366:
 663:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6840              		.loc 20 663 5 is_stmt 1 view .LVU1855
 663:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6841              		.loc 20 663 22 is_stmt 0 view .LVU1856
 6842 0110 0020     		movs	r0, #0
 6843 0112 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6844              	.LVL367:
 6845 0116 0346     		mov	r3, r0	@ movhi
 663:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6846              		.loc 20 663 55 view .LVU1857
 6847 0118 9548     		ldr	r0, .L431
 663:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6848              		.loc 20 663 22 view .LVU1858
 6849 011a ADF83430 		strh	r3, [sp, #52]	@ movhi
 663:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6850              		.loc 20 663 55 view .LVU1859
 6851 011e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6852              	.LVL368:
 663:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6853              		.loc 20 663 22 view .LVU1860
 6854 0122 0D99     		ldr	r1, [sp, #52]
 6855 0124 80EE080A 		vdiv.f32	s0, s0, s16
 6856 0128 4246     		mov	r2, r8
 6857 012a 4346     		mov	r3, r8
 6858 012c 9948     		ldr	r0, .L431+36
 6859 012e 0094     		str	r4, [sp]
 6860 0130 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6861              	.LVL369:
 664:Veno-Echo.cpp **** 
 6862              		.loc 20 664 5 is_stmt 1 view .LVU1861
 664:Veno-Echo.cpp **** 
 6863              		.loc 20 664 22 is_stmt 0 view .LVU1862
 6864 0134 4046     		mov	r0, r8
 6865 0136 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6866              	.LVL370:
 6867 013a 0346     		mov	r3, r0	@ movhi
 664:Veno-Echo.cpp **** 
 6868              		.loc 20 664 55 view .LVU1863
 6869 013c 8C48     		ldr	r0, .L431
 664:Veno-Echo.cpp **** 
 6870              		.loc 20 664 22 view .LVU1864
 6871 013e ADF83830 		strh	r3, [sp, #56]	@ movhi
 664:Veno-Echo.cpp **** 
 6872              		.loc 20 664 55 view .LVU1865
 6873 0142 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6874              	.LVL371:
 664:Veno-Echo.cpp **** 
 6875              		.loc 20 664 22 view .LVU1866
 6876 0146 4246     		mov	r2, r8
 6877 0148 80EE080A 		vdiv.f32	s0, s0, s16
 6878 014c 0E99     		ldr	r1, [sp, #56]
 6879 014e 4346     		mov	r3, r8
 6880 0150 9148     		ldr	r0, .L431+40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 247


 6881 0152 0094     		str	r4, [sp]
 6882 0154 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6883              	.LVL372:
 667:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6884              		.loc 20 667 5 is_stmt 1 view .LVU1867
 667:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6885              		.loc 20 667 14 is_stmt 0 view .LVU1868
 6886 0158 1720     		movs	r0, #23
 6887 015a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6888              	.LVL373:
 6889 015e 0346     		mov	r3, r0	@ movhi
 667:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6890              		.loc 20 667 48 view .LVU1869
 6891 0160 8348     		ldr	r0, .L431
 667:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6892              		.loc 20 667 14 view .LVU1870
 6893 0162 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 667:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6894              		.loc 20 667 48 view .LVU1871
 6895 0166 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6896              	.LVL374:
 667:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6897              		.loc 20 667 14 view .LVU1872
 6898 016a 0F99     		ldr	r1, [sp, #60]
 6899 016c 80EE080A 		vdiv.f32	s0, s0, s16
 6900 0170 8A48     		ldr	r0, .L431+44
 6901 0172 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6902              	.LVL375:
 668:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6903              		.loc 20 668 6 is_stmt 1 view .LVU1873
 668:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6904              		.loc 20 668 18 is_stmt 0 view .LVU1874
 6905 0176 8A49     		ldr	r1, .L431+48
 6906 0178 8A48     		ldr	r0, .L431+52
 6907 017a FFF7FEFF 		bl	_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
 6908              	.LVL376:
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6909              		.loc 20 671 5 is_stmt 1 view .LVU1875
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6910              		.loc 20 671 20 is_stmt 0 view .LVU1876
 6911 017e 7C48     		ldr	r0, .L431
 6912 0180 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6913              	.LVL377:
 6914 0184 3046     		mov	r0, r6
 6915 0186 4146     		mov	r1, r8
 708:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6916              		.loc 20 708 17 view .LVU1877
 6917 0188 9FED878A 		vldr.32	s16, .L431+56
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6918              		.loc 20 671 20 view .LVU1878
 6919 018c FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEfi
 6920              	.LVL378:
 672:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6921              		.loc 20 672 5 is_stmt 1 view .LVU1879
 672:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6922              		.loc 20 672 23 is_stmt 0 view .LVU1880
 6923 0190 3046     		mov	r0, r6
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 248


 6924 0192 00EE109A 		vmov	s0, r9
 6925 0196 4146     		mov	r1, r8
 6926 0198 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 6927              	.LVL379:
 673:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6928              		.loc 20 673 5 is_stmt 1 view .LVU1881
 673:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6929              		.loc 20 673 23 is_stmt 0 view .LVU1882
 6930 019c 2146     		mov	r1, r4
 6931 019e 3046     		mov	r0, r6
 6932 01a0 9FED820A 		vldr.32	s0, .L431+60
 6933 01a4 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 6934              	.LVL380:
 674:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6935              		.loc 20 674 5 is_stmt 1 view .LVU1883
 674:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6936              		.loc 20 674 23 is_stmt 0 view .LVU1884
 6937 01a8 3046     		mov	r0, r6
 6938 01aa 0421     		movs	r1, #4
 6939 01ac 00EE109A 		vmov	s0, r9
 6940 01b0 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 6941              	.LVL381:
 675:Veno-Echo.cpp **** 
 6942              		.loc 20 675 5 is_stmt 1 view .LVU1885
 6943              	.LBB1574:
 6944              	.LBI1570:
  66:../DaisySP/Source/Control/adsr.h ****     {
 6945              		.loc 8 66 17 view .LVU1886
 6946              	.LBB1572:
  68:../DaisySP/Source/Control/adsr.h ****                                        : (sus_level > 1.f) ? 1.f : sus_level;
 6947              		.loc 8 68 9 view .LVU1887
 6948              		.loc 8 70 9 view .LVU1888
 6949              	.LBE1572:
 6950              	.LBE1574:
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6951              		.loc 20 677 20 is_stmt 0 view .LVU1889
 6952 01b4 6E48     		ldr	r0, .L431
 6953              	.LBB1575:
 6954              	.LBB1573:
 6955              		.loc 8 70 20 view .LVU1890
 6956 01b6 C6ED008A 		vstr.32	s17, [r6]
 6957              	.LVL382:
 6958              		.loc 8 70 20 view .LVU1891
 6959              	.LBE1573:
 6960              	.LBE1575:
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6961              		.loc 20 677 5 is_stmt 1 view .LVU1892
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6962              		.loc 20 677 20 is_stmt 0 view .LVU1893
 6963 01ba FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6964              	.LVL383:
 6965 01be 2846     		mov	r0, r5
 6966 01c0 4146     		mov	r1, r8
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6967              		.loc 20 683 17 view .LVU1894
 6968 01c2 7B4E     		ldr	r6, .L431+64
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 249


 6969              		.loc 20 677 20 view .LVU1895
 6970 01c4 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEfi
 6971              	.LVL384:
 678:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6972              		.loc 20 678 5 is_stmt 1 view .LVU1896
 678:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6973              		.loc 20 678 23 is_stmt 0 view .LVU1897
 6974 01c8 2846     		mov	r0, r5
 6975 01ca 00EE109A 		vmov	s0, r9
 6976 01ce 4146     		mov	r1, r8
 6977 01d0 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 6978              	.LVL385:
 679:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6979              		.loc 20 679 5 is_stmt 1 view .LVU1898
 679:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6980              		.loc 20 679 23 is_stmt 0 view .LVU1899
 6981 01d4 2146     		mov	r1, r4
 6982 01d6 2846     		mov	r0, r5
 6983 01d8 9FED740A 		vldr.32	s0, .L431+60
 6984 01dc FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 6985              	.LVL386:
 680:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6986              		.loc 20 680 5 is_stmt 1 view .LVU1900
 680:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6987              		.loc 20 680 23 is_stmt 0 view .LVU1901
 6988 01e0 2846     		mov	r0, r5
 6989 01e2 0421     		movs	r1, #4
 6990 01e4 00EE109A 		vmov	s0, r9
 6991 01e8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 6992              	.LVL387:
 681:Veno-Echo.cpp **** 
 6993              		.loc 20 681 5 is_stmt 1 view .LVU1902
 6994              	.LBB1576:
 6995              	.LBI1576:
  66:../DaisySP/Source/Control/adsr.h ****     {
 6996              		.loc 8 66 17 view .LVU1903
 6997              	.LBB1577:
  68:../DaisySP/Source/Control/adsr.h ****                                        : (sus_level > 1.f) ? 1.f : sus_level;
 6998              		.loc 8 68 9 view .LVU1904
 6999              		.loc 8 70 9 view .LVU1905
 7000              	.LBE1577:
 7001              	.LBE1576:
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7002              		.loc 20 683 17 is_stmt 0 view .LVU1906
 7003 01ec 6048     		ldr	r0, .L431
 7004              	.LBB1579:
 7005              	.LBB1578:
 7006              		.loc 8 70 20 view .LVU1907
 7007 01ee C5ED008A 		vstr.32	s17, [r5]
 7008              	.LVL388:
 7009              		.loc 8 70 20 view .LVU1908
 7010              	.LBE1578:
 7011              	.LBE1579:
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7012              		.loc 20 683 5 is_stmt 1 view .LVU1909
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7013              		.loc 20 683 17 is_stmt 0 view .LVU1910
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 250


 7014 01f2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7015              	.LVL389:
 7016 01f6 3046     		mov	r0, r6
 7017 01f8 4146     		mov	r1, r8
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7018              		.loc 20 689 17 view .LVU1911
 7019 01fa 6E4D     		ldr	r5, .L431+68
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7020              		.loc 20 683 17 view .LVU1912
 7021 01fc FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEfi
 7022              	.LVL390:
 684:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7023              		.loc 20 684 5 is_stmt 1 view .LVU1913
 684:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7024              		.loc 20 684 20 is_stmt 0 view .LVU1914
 7025 0200 3046     		mov	r0, r6
 7026 0202 9FED6A0A 		vldr.32	s0, .L431+60
 7027 0206 4146     		mov	r1, r8
 7028 0208 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 7029              	.LVL391:
 685:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7030              		.loc 20 685 5 is_stmt 1 view .LVU1915
 685:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7031              		.loc 20 685 20 is_stmt 0 view .LVU1916
 7032 020c 2146     		mov	r1, r4
 7033 020e 3046     		mov	r0, r6
 7034 0210 9FED660A 		vldr.32	s0, .L431+60
 7035 0214 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 7036              	.LVL392:
 686:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7037              		.loc 20 686 5 is_stmt 1 view .LVU1917
 686:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7038              		.loc 20 686 20 is_stmt 0 view .LVU1918
 7039 0218 3046     		mov	r0, r6
 7040 021a 0421     		movs	r1, #4
 7041 021c 9FED630A 		vldr.32	s0, .L431+60
 7042 0220 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 7043              	.LVL393:
 687:Veno-Echo.cpp **** 
 7044              		.loc 20 687 5 is_stmt 1 view .LVU1919
 7045              	.LBB1580:
 7046              	.LBI1580:
  66:../DaisySP/Source/Control/adsr.h ****     {
 7047              		.loc 8 66 17 view .LVU1920
 7048              	.LBB1581:
  68:../DaisySP/Source/Control/adsr.h ****                                        : (sus_level > 1.f) ? 1.f : sus_level;
 7049              		.loc 8 68 9 view .LVU1921
 7050              		.loc 8 70 9 view .LVU1922
 7051              	.LBE1581:
 7052              	.LBE1580:
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7053              		.loc 20 689 17 is_stmt 0 view .LVU1923
 7054 0224 5248     		ldr	r0, .L431
 7055              	.LBB1583:
 7056              	.LBB1582:
 7057              		.loc 8 70 20 view .LVU1924
 7058 0226 C6ED008A 		vstr.32	s17, [r6]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 251


 7059              	.LVL394:
 7060              		.loc 8 70 20 view .LVU1925
 7061              	.LBE1582:
 7062              	.LBE1583:
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7063              		.loc 20 689 5 is_stmt 1 view .LVU1926
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7064              		.loc 20 689 17 is_stmt 0 view .LVU1927
 7065 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7066              	.LVL395:
 7067 022e 2846     		mov	r0, r5
 7068 0230 4146     		mov	r1, r8
 7069 0232 614E     		ldr	r6, .L431+72
 7070 0234 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEfi
 7071              	.LVL396:
 690:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7072              		.loc 20 690 5 is_stmt 1 view .LVU1928
 690:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7073              		.loc 20 690 20 is_stmt 0 view .LVU1929
 7074 0238 2846     		mov	r0, r5
 7075 023a 9FED5C0A 		vldr.32	s0, .L431+60
 7076 023e 4146     		mov	r1, r8
 7077 0240 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 7078              	.LVL397:
 691:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7079              		.loc 20 691 5 is_stmt 1 view .LVU1930
 691:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7080              		.loc 20 691 20 is_stmt 0 view .LVU1931
 7081 0244 2146     		mov	r1, r4
 7082 0246 2846     		mov	r0, r5
 7083 0248 9FED580A 		vldr.32	s0, .L431+60
 7084 024c FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 7085              	.LVL398:
 692:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7086              		.loc 20 692 5 is_stmt 1 view .LVU1932
 692:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7087              		.loc 20 692 20 is_stmt 0 view .LVU1933
 7088 0250 2846     		mov	r0, r5
 7089 0252 9FED560A 		vldr.32	s0, .L431+60
 7090 0256 0421     		movs	r1, #4
 7091 0258 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 7092              	.LVL399:
 693:Veno-Echo.cpp **** 
 7093              		.loc 20 693 5 is_stmt 1 view .LVU1934
 7094              	.LBB1584:
 7095              	.LBI1584:
  66:../DaisySP/Source/Control/adsr.h ****     {
 7096              		.loc 8 66 17 view .LVU1935
 7097              	.LBB1585:
  68:../DaisySP/Source/Control/adsr.h ****                                        : (sus_level > 1.f) ? 1.f : sus_level;
 7098              		.loc 8 68 9 view .LVU1936
 7099              		.loc 8 70 9 view .LVU1937
 7100              	.LBE1585:
 7101              	.LBE1584:
 7102              	.LBB1587:
 7103              	.LBB1562:
 7104              	.LBB1559:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 252


  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7105              		.loc 11 45 16 is_stmt 0 view .LVU1938
 7106 025c 5749     		ldr	r1, .L431+76
 7107              	.LBE1559:
 7108              	.LBE1562:
 7109              	.LBE1587:
 7110              	.LBB1588:
 7111              	.LBB1589:
 7112              	.LBB1590:
 7113 025e 584A     		ldr	r2, .L431+80
 7114              	.LBE1590:
 7115              	.LBE1589:
 7116              	.LBE1588:
 7117              	.LBB1595:
 7118              	.LBB1596:
 7119              	.LBB1597:
 7120 0260 584B     		ldr	r3, .L431+84
 7121              	.LBE1597:
 7122              	.LBE1596:
 7123              	.LBE1595:
 7124              	.LBB1602:
 7125              	.LBB1563:
 7126              	.LBB1560:
 7127 0262 C1F80090 		str	r9, [r1]	@ float
 7128              	.LBE1560:
 7129              	.LBE1563:
 7130              	.LBE1602:
 7131              	.LBB1603:
 7132              	.LBB1554:
 7133              		.loc 11 64 50 view .LVU1939
 7134 0266 81F80480 		strb	r8, [r1, #4]
 7135              	.LBE1554:
 7136              	.LBE1603:
 7137              	.LBB1604:
 7138              	.LBB1593:
 7139              	.LBB1591:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7140              		.loc 11 45 16 view .LVU1940
 7141 026a C2F80090 		str	r9, [r2]	@ float
 7142              	.LBE1591:
 7143              	.LBE1593:
 7144              	.LBE1604:
 7145              	.LBB1605:
 7146              	.LBB1606:
 7147              		.loc 11 64 50 view .LVU1941
 7148 026e 82F80480 		strb	r8, [r2, #4]
 7149              	.LBE1606:
 7150              	.LBE1605:
 7151              	.LBB1608:
 7152              	.LBB1600:
 7153              	.LBB1598:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7154              		.loc 11 45 16 view .LVU1942
 7155 0272 C3F80090 		str	r9, [r3]	@ float
 7156              	.LBE1598:
 7157              	.LBE1600:
 7158              	.LBE1608:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 253


 7159              	.LBB1609:
 7160              	.LBB1610:
 7161              		.loc 11 64 50 view .LVU1943
 7162 0276 83F80480 		strb	r8, [r3, #4]
 7163              	.LBE1610:
 7164              	.LBE1609:
 704:Veno-Echo.cpp **** 
 7165              		.loc 20 704 15 view .LVU1944
 7166 027a 3D48     		ldr	r0, .L431
 7167              	.LBB1612:
 7168              	.LBB1586:
 7169              		.loc 8 70 20 view .LVU1945
 7170 027c C5ED008A 		vstr.32	s17, [r5]
 7171              	.LVL400:
 7172              		.loc 8 70 20 view .LVU1946
 7173              	.LBE1586:
 7174              	.LBE1612:
 696:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7175              		.loc 20 696 5 is_stmt 1 view .LVU1947
 7176              	.LBB1613:
 7177              	.LBI1556:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7178              		.loc 11 51 17 view .LVU1948
 7179              	.LBE1613:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7180              		.loc 11 51 26 view .LVU1949
 7181              	.LBB1614:
 7182              	.LBB1564:
 7183              	.LBI1557:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7184              		.loc 11 43 17 view .LVU1950
 7185              	.LBB1561:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7186              		.loc 11 45 9 view .LVU1951
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7187              		.loc 11 46 9 view .LVU1952
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7188              		.loc 11 46 9 is_stmt 0 view .LVU1953
 7189              	.LBE1561:
 7190              	.LBE1564:
 7191              	.LBE1614:
 697:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7192              		.loc 20 697 5 is_stmt 1 view .LVU1954
 7193              	.LBB1615:
 7194              	.LBI1552:
 7195              		.loc 11 64 17 view .LVU1955
 7196              	.LBB1555:
 7197              		.loc 11 64 43 view .LVU1956
 7198              		.loc 11 64 43 is_stmt 0 view .LVU1957
 7199              	.LBE1555:
 7200              	.LBE1615:
 698:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7201              		.loc 20 698 5 is_stmt 1 view .LVU1958
 7202              	.LBB1616:
 7203              	.LBI1588:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7204              		.loc 11 51 17 view .LVU1959
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 254


 7205              	.LBE1616:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7206              		.loc 11 51 26 view .LVU1960
 7207              	.LBB1617:
 7208              	.LBB1594:
 7209              	.LBI1589:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7210              		.loc 11 43 17 view .LVU1961
 7211              	.LBB1592:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7212              		.loc 11 45 9 view .LVU1962
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7213              		.loc 11 46 9 view .LVU1963
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7214              		.loc 11 46 9 is_stmt 0 view .LVU1964
 7215              	.LBE1592:
 7216              	.LBE1594:
 7217              	.LBE1617:
 699:Veno-Echo.cpp **** 
 7218              		.loc 20 699 5 is_stmt 1 view .LVU1965
 7219              	.LBB1618:
 7220              	.LBI1605:
 7221              		.loc 11 64 17 view .LVU1966
 7222              	.LBB1607:
 7223              		.loc 11 64 43 view .LVU1967
 7224              		.loc 11 64 43 is_stmt 0 view .LVU1968
 7225              	.LBE1607:
 7226              	.LBE1618:
 701:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7227              		.loc 20 701 5 is_stmt 1 view .LVU1969
 7228              	.LBB1619:
 7229              	.LBI1595:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7230              		.loc 11 51 17 view .LVU1970
 7231              	.LBE1619:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7232              		.loc 11 51 26 view .LVU1971
 7233              	.LBB1620:
 7234              	.LBB1601:
 7235              	.LBI1596:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7236              		.loc 11 43 17 view .LVU1972
 7237              	.LBB1599:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7238              		.loc 11 45 9 view .LVU1973
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7239              		.loc 11 46 9 view .LVU1974
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7240              		.loc 11 46 9 is_stmt 0 view .LVU1975
 7241              	.LBE1599:
 7242              	.LBE1601:
 7243              	.LBE1620:
 702:Veno-Echo.cpp **** 
 7244              		.loc 20 702 5 is_stmt 1 view .LVU1976
 7245              	.LBB1621:
 7246              	.LBI1609:
 7247              		.loc 11 64 17 view .LVU1977
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 255


 7248              	.LBB1611:
 7249              		.loc 11 64 43 view .LVU1978
 7250              		.loc 11 64 43 is_stmt 0 view .LVU1979
 7251              	.LBE1611:
 7252              	.LBE1621:
 704:Veno-Echo.cpp **** 
 7253              		.loc 20 704 5 is_stmt 1 view .LVU1980
 704:Veno-Echo.cpp **** 
 7254              		.loc 20 704 15 is_stmt 0 view .LVU1981
 7255 0280 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7256              	.LVL401:
 7257 0284 504C     		ldr	r4, .L431+88
 7258 0286 FFF7FEFF 		bl	_Z10InitDelaysf
 7259              	.LVL402:
 707:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7260              		.loc 20 707 5 is_stmt 1 view .LVU1982
 707:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7261              		.loc 20 707 15 is_stmt 0 view .LVU1983
 7262 028a 3948     		ldr	r0, .L431
 7263 028c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7264              	.LVL403:
 7265 0290 4E48     		ldr	r0, .L431+92
 7266 0292 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7267              	.LVL404:
 708:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7268              		.loc 20 708 5 is_stmt 1 view .LVU1984
 708:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7269              		.loc 20 708 17 is_stmt 0 view .LVU1985
 7270 0296 B0EE480A 		vmov.f32	s0, s16
 7271 029a 4C48     		ldr	r0, .L431+92
 7272 029c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7273              	.LVL405:
 709:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7274              		.loc 20 709 5 is_stmt 1 view .LVU1986
 709:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7275              		.loc 20 709 18 is_stmt 0 view .LVU1987
 7276 02a0 9FED4B0A 		vldr.32	s0, .L431+96
 7277 02a4 4948     		ldr	r0, .L431+92
 7278 02a6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7279              	.LVL406:
 710:Veno-Echo.cpp **** 
 7280              		.loc 20 710 5 is_stmt 1 view .LVU1988
 710:Veno-Echo.cpp **** 
 7281              		.loc 20 710 19 is_stmt 0 view .LVU1989
 7282 02aa 9FED4A0A 		vldr.32	s0, .L431+100
 7283 02ae 4748     		ldr	r0, .L431+92
 7284 02b0 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7285              	.LVL407:
 712:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7286              		.loc 20 712 5 is_stmt 1 view .LVU1990
 712:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7287              		.loc 20 712 15 is_stmt 0 view .LVU1991
 7288 02b4 2E48     		ldr	r0, .L431
 7289 02b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7290              	.LVL408:
 7291 02ba 4748     		ldr	r0, .L431+104
 7292 02bc FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 256


 7293              	.LVL409:
 713:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7294              		.loc 20 713 5 is_stmt 1 view .LVU1992
 713:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7295              		.loc 20 713 17 is_stmt 0 view .LVU1993
 7296 02c0 B0EE480A 		vmov.f32	s0, s16
 7297 02c4 4448     		ldr	r0, .L431+104
 7298 02c6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7299              	.LVL410:
 714:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7300              		.loc 20 714 5 is_stmt 1 view .LVU1994
 714:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7301              		.loc 20 714 18 is_stmt 0 view .LVU1995
 7302 02ca 9FED410A 		vldr.32	s0, .L431+96
 7303 02ce 4248     		ldr	r0, .L431+104
 7304 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7305              	.LVL411:
 715:Veno-Echo.cpp **** 
 7306              		.loc 20 715 5 is_stmt 1 view .LVU1996
 715:Veno-Echo.cpp **** 
 7307              		.loc 20 715 19 is_stmt 0 view .LVU1997
 7308 02d4 9FED3F0A 		vldr.32	s0, .L431+100
 7309 02d8 3F48     		ldr	r0, .L431+104
 7310 02da FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7311              	.LVL412:
 718:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7312              		.loc 20 718 5 is_stmt 1 view .LVU1998
 718:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7313              		.loc 20 718 15 is_stmt 0 view .LVU1999
 7314 02de 2448     		ldr	r0, .L431
 7315 02e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7316              	.LVL413:
 7317 02e4 3D48     		ldr	r0, .L431+108
 7318 02e6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7319              	.LVL414:
 719:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7320              		.loc 20 719 5 is_stmt 1 view .LVU2000
 719:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7321              		.loc 20 719 17 is_stmt 0 view .LVU2001
 7322 02ea B0EE480A 		vmov.f32	s0, s16
 7323 02ee 3B48     		ldr	r0, .L431+108
 7324 02f0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7325              	.LVL415:
 720:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7326              		.loc 20 720 5 is_stmt 1 view .LVU2002
 720:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7327              		.loc 20 720 18 is_stmt 0 view .LVU2003
 7328 02f4 9FED3A0A 		vldr.32	s0, .L431+112
 7329 02f8 3848     		ldr	r0, .L431+108
 7330 02fa FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7331              	.LVL416:
 721:Veno-Echo.cpp **** 
 7332              		.loc 20 721 5 is_stmt 1 view .LVU2004
 721:Veno-Echo.cpp **** 
 7333              		.loc 20 721 19 is_stmt 0 view .LVU2005
 7334 02fe 9FED350A 		vldr.32	s0, .L431+100
 7335 0302 3648     		ldr	r0, .L431+108
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 257


 7336 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7337              	.LVL417:
 723:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7338              		.loc 20 723 5 is_stmt 1 view .LVU2006
 723:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7339              		.loc 20 723 15 is_stmt 0 view .LVU2007
 7340 0308 1948     		ldr	r0, .L431
 7341 030a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7342              	.LVL418:
 7343 030e 3548     		ldr	r0, .L431+116
 7344 0310 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7345              	.LVL419:
 724:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7346              		.loc 20 724 5 is_stmt 1 view .LVU2008
 724:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7347              		.loc 20 724 17 is_stmt 0 view .LVU2009
 7348 0314 B0EE480A 		vmov.f32	s0, s16
 7349 0318 3248     		ldr	r0, .L431+116
 7350 031a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7351              	.LVL420:
 725:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7352              		.loc 20 725 5 is_stmt 1 view .LVU2010
 725:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7353              		.loc 20 725 18 is_stmt 0 view .LVU2011
 7354 031e 9FED300A 		vldr.32	s0, .L431+112
 7355 0322 3048     		ldr	r0, .L431+116
 7356 0324 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7357              	.LVL421:
 726:Veno-Echo.cpp **** 
 7358              		.loc 20 726 5 is_stmt 1 view .LVU2012
 726:Veno-Echo.cpp **** 
 7359              		.loc 20 726 19 is_stmt 0 view .LVU2013
 7360 0328 9FED2A0A 		vldr.32	s0, .L431+100
 7361 032c 2D48     		ldr	r0, .L431+116
 7362 032e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7363              	.LVL422:
 729:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7364              		.loc 20 729 5 is_stmt 1 view .LVU2014
 729:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7365              		.loc 20 729 20 is_stmt 0 view .LVU2015
 7366 0332 0F48     		ldr	r0, .L431
 7367 0334 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7368              	.LVL423:
 7369 0338 2B48     		ldr	r0, .L431+120
 7370 033a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7371              	.LVL424:
 730:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7372              		.loc 20 730 5 is_stmt 1 view .LVU2016
 730:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7373              		.loc 20 730 22 is_stmt 0 view .LVU2017
 7374 033e B0EE480A 		vmov.f32	s0, s16
 7375 0342 2948     		ldr	r0, .L431+120
 7376 0344 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7377              	.LVL425:
 731:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7378              		.loc 20 731 5 is_stmt 1 view .LVU2018
 731:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 258


 7379              		.loc 20 731 23 is_stmt 0 view .LVU2019
 7380 0348 9FED210A 		vldr.32	s0, .L431+96
 7381 034c 2648     		ldr	r0, .L431+120
 7382 034e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7383              	.LVL426:
 732:Veno-Echo.cpp **** 
 7384              		.loc 20 732 5 is_stmt 1 view .LVU2020
 732:Veno-Echo.cpp **** 
 7385              		.loc 20 732 24 is_stmt 0 view .LVU2021
 7386 0352 9FED200A 		vldr.32	s0, .L431+100
 7387 0356 2448     		ldr	r0, .L431+120
 7388 0358 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7389              	.LVL427:
 734:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7390              		.loc 20 734 5 is_stmt 1 view .LVU2022
 734:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7391              		.loc 20 734 20 is_stmt 0 view .LVU2023
 7392 035c 0448     		ldr	r0, .L431
 7393 035e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7394              	.LVL428:
 7395 0362 2248     		ldr	r0, .L431+124
 7396 0364 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7397              	.LVL429:
 735:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7398              		.loc 20 735 5 is_stmt 1 view .LVU2024
 735:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7399              		.loc 20 735 22 is_stmt 0 view .LVU2025
 7400 0368 B0EE480A 		vmov.f32	s0, s16
 7401 036c 40E0     		b	.L432
 7402              	.L433:
 7403 036e 00BF     		.align	2
 7404              	.L431:
 7405 0370 00000000 		.word	.LANCHOR4
 7406 0374 00000000 		.word	.LANCHOR102
 7407 0378 00000000 		.word	.LANCHOR95
 7408 037c 00000000 		.word	.LANCHOR103
 7409 0380 00000000 		.word	.LANCHOR76
 7410 0384 00000000 		.word	.LANCHOR96
 7411 0388 00000000 		.word	.LANCHOR93
 7412 038c 00000000 		.word	.LANCHOR94
 7413 0390 00000000 		.word	.LANCHOR97
 7414 0394 00000000 		.word	.LANCHOR98
 7415 0398 00000000 		.word	.LANCHOR99
 7416 039c 00000000 		.word	.LANCHOR100
 7417 03a0 00000000 		.word	.LANCHOR101
 7418 03a4 00000000 		.word	.LANCHOR89
 7419 03a8 00000000 		.word	0
 7420 03ac 0AD7233C 		.word	1008981770
 7421 03b0 00000000 		.word	.LANCHOR104
 7422 03b4 00000000 		.word	.LANCHOR105
 7423 03b8 00000000 		.word	.LANCHOR109
 7424 03bc 00000000 		.word	.LANCHOR106
 7425 03c0 00000000 		.word	.LANCHOR107
 7426 03c4 00000000 		.word	.LANCHOR65
 7427 03c8 00000000 		.word	.LANCHOR16
 7428 03cc 00000000 		.word	.LANCHOR47
 7429 03d0 00803B46 		.word	1178304512
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 259


 7430 03d4 3333333F 		.word	1060320051
 7431 03d8 00000000 		.word	.LANCHOR48
 7432 03dc 00000000 		.word	.LANCHOR35
 7433 03e0 00004843 		.word	1128792064
 7434 03e4 00000000 		.word	.LANCHOR36
 7435 03e8 00000000 		.word	.LANCHOR49
 7436 03ec 00000000 		.word	.LANCHOR50
 7437              	.L432:
 7438 03f0 AA48     		ldr	r0, .L434
 7439 03f2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7440              	.LVL430:
 736:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7441              		.loc 20 736 5 is_stmt 1 view .LVU2026
 736:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7442              		.loc 20 736 23 is_stmt 0 view .LVU2027
 7443 03f6 9FEDAA0A 		vldr.32	s0, .L434+4
 7444 03fa A848     		ldr	r0, .L434
 7445 03fc FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7446              	.LVL431:
 737:Veno-Echo.cpp **** 
 7447              		.loc 20 737 5 is_stmt 1 view .LVU2028
 737:Veno-Echo.cpp **** 
 7448              		.loc 20 737 24 is_stmt 0 view .LVU2029
 7449 0400 9FEDA80A 		vldr.32	s0, .L434+8
 7450 0404 A548     		ldr	r0, .L434
 7451 0406 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7452              	.LVL432:
 740:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7453              		.loc 20 740 5 is_stmt 1 view .LVU2030
 740:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7454              		.loc 20 740 20 is_stmt 0 view .LVU2031
 7455 040a A748     		ldr	r0, .L434+12
 7456 040c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7457              	.LVL433:
 7458 0410 A648     		ldr	r0, .L434+16
 7459 0412 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7460              	.LVL434:
 741:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7461              		.loc 20 741 5 is_stmt 1 view .LVU2032
 741:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7462              		.loc 20 741 22 is_stmt 0 view .LVU2033
 7463 0416 B0EE480A 		vmov.f32	s0, s16
 7464 041a A448     		ldr	r0, .L434+16
 7465 041c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7466              	.LVL435:
 742:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7467              		.loc 20 742 5 is_stmt 1 view .LVU2034
 742:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7468              		.loc 20 742 23 is_stmt 0 view .LVU2035
 7469 0420 9FEDA30A 		vldr.32	s0, .L434+20
 7470 0424 A148     		ldr	r0, .L434+16
 7471 0426 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7472              	.LVL436:
 743:Veno-Echo.cpp **** 
 7473              		.loc 20 743 5 is_stmt 1 view .LVU2036
 743:Veno-Echo.cpp **** 
 7474              		.loc 20 743 24 is_stmt 0 view .LVU2037
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 260


 7475 042a 9FED9E0A 		vldr.32	s0, .L434+8
 7476 042e 9F48     		ldr	r0, .L434+16
 7477 0430 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7478              	.LVL437:
 745:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7479              		.loc 20 745 5 is_stmt 1 view .LVU2038
 745:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7480              		.loc 20 745 20 is_stmt 0 view .LVU2039
 7481 0434 9C48     		ldr	r0, .L434+12
 7482 0436 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7483              	.LVL438:
 7484 043a 9E48     		ldr	r0, .L434+24
 7485 043c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7486              	.LVL439:
 746:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7487              		.loc 20 746 5 is_stmt 1 view .LVU2040
 746:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7488              		.loc 20 746 22 is_stmt 0 view .LVU2041
 7489 0440 B0EE480A 		vmov.f32	s0, s16
 7490 0444 9B48     		ldr	r0, .L434+24
 7491 0446 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7492              	.LVL440:
 747:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7493              		.loc 20 747 5 is_stmt 1 view .LVU2042
 747:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7494              		.loc 20 747 23 is_stmt 0 view .LVU2043
 7495 044a 9FED990A 		vldr.32	s0, .L434+20
 7496 044e 9948     		ldr	r0, .L434+24
 7497 0450 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7498              	.LVL441:
 748:Veno-Echo.cpp **** 
 7499              		.loc 20 748 5 is_stmt 1 view .LVU2044
 748:Veno-Echo.cpp **** 
 7500              		.loc 20 748 24 is_stmt 0 view .LVU2045
 7501 0454 9FED930A 		vldr.32	s0, .L434+8
 7502 0458 9648     		ldr	r0, .L434+24
 7503 045a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7504              	.LVL442:
 754:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7505              		.loc 20 754 5 is_stmt 1 view .LVU2046
 754:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7506              		.loc 20 754 13 is_stmt 0 view .LVU2047
 7507 045e 9248     		ldr	r0, .L434+12
 7508 0460 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7509              	.LVL443:
 7510 0464 F0EE407A 		vmov.f32	s15, s0
 7511              	.LVL444:
 7512              	.LBB1622:
 7513              	.LBI1565:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7514              		.loc 9 42 10 is_stmt 1 view .LVU2048
 7515              	.LBB1567:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7516              		.loc 9 44 9 view .LVU2049
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7517              		.loc 9 46 20 is_stmt 0 view .LVU2050
 7518 0468 9FED930A 		vldr.32	s0, .L434+28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 261


 7519              	.LVL445:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7520              		.loc 9 49 34 view .LVU2051
 7521 046c 3846     		mov	r0, r7
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7522              		.loc 9 47 20 view .LVU2052
 7523 046e C7F80490 		str	r9, [r7, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7524              		.loc 9 45 27 view .LVU2053
 7525 0472 88EEA77A 		vdiv.f32	s14, s17, s15
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7526              		.loc 9 44 20 view .LVU2054
 7527 0476 C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7528              		.loc 9 45 9 is_stmt 1 view .LVU2055
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7529              		.loc 9 48 20 is_stmt 0 view .LVU2056
 7530 047a 87ED058A 		vstr.32	s16, [r7, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7531              		.loc 9 46 20 view .LVU2057
 7532 047e 87ED020A 		vstr.32	s0, [r7, #8]
 7533 0482 8E4D     		ldr	r5, .L434+32
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7534              		.loc 9 45 20 view .LVU2058
 7535 0484 87ED047A 		vstr.32	s14, [r7, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7536              		.loc 9 46 9 is_stmt 1 view .LVU2059
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7537              		.loc 9 47 9 view .LVU2060
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7538              		.loc 9 48 9 view .LVU2061
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7539              		.loc 9 49 9 view .LVU2062
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7540              		.loc 9 49 34 is_stmt 0 view .LVU2063
 7541 0488 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7542              	.LVL446:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7543              		.loc 9 52 20 view .LVU2064
 7544 048c 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7545              		.loc 9 49 34 view .LVU2065
 7546 0490 F0EE407A 		vmov.f32	s15, s0
 7547              	.LBE1567:
 7548              	.LBE1622:
 7549              	.LBB1623:
 7550              	.LBB1624:
 7551              		.loc 9 61 34 view .LVU2066
 7552 0494 3846     		mov	r0, r7
 7553              	.LBE1624:
 7554              	.LBE1623:
 7555              	.LBB1628:
 7556              	.LBB1629:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 262


  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7557              		.loc 9 72 19 view .LVU2067
 7558 0496 87F80080 		strb	r8, [r7]
 7559              	.LBE1629:
 7560              	.LBE1628:
 7561              	.LBB1631:
 7562              	.LBB1568:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7563              		.loc 9 52 20 view .LVU2068
 7564 049a BB84     		strh	r3, [r7, #36]	@ movhi
 7565              	.LBE1568:
 7566              	.LBE1631:
 7567              	.LBB1632:
 7568              	.LBB1625:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7569              		.loc 9 61 34 view .LVU2069
 7570 049c B0EE680A 		vmov.f32	s0, s17
 7571              	.LBE1625:
 7572              	.LBE1632:
 7573              	.LBB1633:
 7574              	.LBB1569:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7575              		.loc 9 49 20 view .LVU2070
 7576 04a0 C7ED067A 		vstr.32	s15, [r7, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7577              		.loc 9 50 9 is_stmt 1 view .LVU2071
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7578              		.loc 9 51 9 view .LVU2072
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7579              		.loc 9 52 9 view .LVU2073
 7580              	.LVL447:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7581              		.loc 9 52 9 is_stmt 0 view .LVU2074
 7582              	.LBE1569:
 7583              	.LBE1633:
 755:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7584              		.loc 20 755 5 is_stmt 1 view .LVU2075
 7585              	.LBB1634:
 7586              	.LBI1628:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7587              		.loc 9 70 17 view .LVU2076
 7588              	.LBB1630:
 7589              		.loc 9 72 9 view .LVU2077
 7590              		.loc 9 72 9 is_stmt 0 view .LVU2078
 7591              	.LBE1630:
 7592              	.LBE1634:
 756:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7593              		.loc 20 756 5 is_stmt 1 view .LVU2079
 7594              	.LBB1635:
 7595              	.LBI1623:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 263


 7596              		.loc 9 58 17 view .LVU2080
 7597              	.LBB1626:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7598              		.loc 9 60 9 view .LVU2081
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7599              		.loc 9 61 9 view .LVU2082
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7600              		.loc 9 60 20 is_stmt 0 view .LVU2083
 7601 04a4 C7ED028A 		vstr.32	s17, [r7, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7602              		.loc 9 61 34 view .LVU2084
 7603 04a8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7604              	.LVL448:
 7605 04ac F0EE407A 		vmov.f32	s15, s0
 7606              	.LBE1626:
 7607              	.LBE1635:
 759:Veno-Echo.cpp **** 
 7608              		.loc 20 759 19 view .LVU2085
 7609 04b0 834A     		ldr	r2, .L434+36
 7610 04b2 44F62061 		movw	r1, #20000
 7611 04b6 B7EE040A 		vmov.f32	s0, #1.25e+0
 7612 04ba 1823     		movs	r3, #24
 7613 04bc 8148     		ldr	r0, .L434+40
 7614              	.LBB1636:
 7615              	.LBB1637:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7616              		.loc 9 67 46 view .LVU2086
 7617 04be C7ED018A 		vstr.32	s17, [r7, #4]
 7618              	.LBE1637:
 7619              	.LBE1636:
 7620              	.LBB1639:
 7621              	.LBB1627:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7622              		.loc 9 61 20 view .LVU2087
 7623 04c2 C7ED067A 		vstr.32	s15, [r7, #24]
 7624              	.LVL449:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7625              		.loc 9 61 20 view .LVU2088
 7626              	.LBE1627:
 7627              	.LBE1639:
 757:Veno-Echo.cpp **** 
 7628              		.loc 20 757 5 is_stmt 1 view .LVU2089
 7629              	.LBB1640:
 7630              	.LBI1636:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7631              		.loc 9 67 17 view .LVU2090
 7632              	.LBB1638:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7633              		.loc 9 67 41 view .LVU2091
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7634              		.loc 9 67 41 is_stmt 0 view .LVU2092
 7635              	.LBE1638:
 7636              	.LBE1640:
 759:Veno-Echo.cpp **** 
 7637              		.loc 20 759 5 is_stmt 1 view .LVU2093
 759:Veno-Echo.cpp **** 
 7638              		.loc 20 759 19 is_stmt 0 view .LVU2094
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 264


 7639 04c6 FFF7FEFF 		bl	_ZN8Taptempo4initEmmfi
 7640              	.LVL450:
 763:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7641              		.loc 20 763 5 is_stmt 1 view .LVU2095
 763:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7642              		.loc 20 763 23 is_stmt 0 view .LVU2096
 7643 04ca 1820     		movs	r0, #24
 774:Veno-Echo.cpp **** 
 7644              		.loc 20 774 17 view .LVU2097
 7645 04cc 1CAF     		add	r7, sp, #112
 763:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7646              		.loc 20 763 23 view .LVU2098
 7647 04ce FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7648              	.LVL451:
 7649 04d2 0346     		mov	r3, r0	@ movhi
 7650 04d4 7448     		ldr	r0, .L434+12
 7651 04d6 ADF84030 		strh	r3, [sp, #64]	@ movhi
 7652 04da FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7653              	.LVL452:
 7654 04de 1099     		ldr	r1, [sp, #64]
 7655 04e0 7948     		ldr	r0, .L434+44
 7656 04e2 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7657              	.LVL453:
 764:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7658              		.loc 20 764 5 is_stmt 1 view .LVU2099
 764:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7659              		.loc 20 764 27 is_stmt 0 view .LVU2100
 7660 04e6 7748     		ldr	r0, .L434+40
 7661 04e8 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7662              	.LVL454:
 7663 04ec 7648     		ldr	r0, .L434+44
 7664 04ee FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7665              	.LVL455:
 765:Veno-Echo.cpp **** 
 7666              		.loc 20 765 5 is_stmt 1 view .LVU2101
 765:Veno-Echo.cpp **** 
 7667              		.loc 20 765 29 is_stmt 0 view .LVU2102
 7668 04f2 7548     		ldr	r0, .L434+44
 7669 04f4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7670              	.LVL456:
 769:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7671              		.loc 20 769 5 is_stmt 1 view .LVU2103
 769:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7672              		.loc 20 769 41 is_stmt 0 view .LVU2104
 7673 04f8 1CA8     		add	r0, sp, #112
 7674 04fa FFF7FEFF 		bl	_Z12LoadSettingsv
 7675              	.LVL457:
 773:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7676              		.loc 20 773 5 is_stmt 1 view .LVU2105
 773:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7677              		.loc 20 773 18 is_stmt 0 view .LVU2106
 7678 04fe 1CA8     		add	r0, sp, #112
 7679 0500 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7680              	.LVL458:
 774:Veno-Echo.cpp **** 
 7681              		.loc 20 774 5 is_stmt 1 view .LVU2107
 774:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 265


 7682              		.loc 20 774 17 is_stmt 0 view .LVU2108
 7683 0504 DFF8CCC1 		ldr	ip, .L434+56
 7684 0508 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7685 050a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7686 050e 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7687 0510 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7688 0514 97E80700 		ldm	r7, {r0, r1, r2}
 7689 0518 8CE80700 		stm	ip, {r0, r1, r2}
 779:Veno-Echo.cpp **** 
 7690              		.loc 20 779 5 is_stmt 1 view .LVU2109
 781:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7691              		.loc 20 781 5 view .LVU2110
 781:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7692              		.loc 20 781 28 is_stmt 0 view .LVU2111
 7693 051c 0F20     		movs	r0, #15
 7694 051e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7695              	.LVL459:
 7696 0522 0346     		mov	r3, r0	@ movhi
 7697 0524 32A8     		add	r0, sp, #200
 7698 0526 ADF84430 		strh	r3, [sp, #68]	@ movhi
 7699 052a 1199     		ldr	r1, [sp, #68]
 7700 052c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7701              	.LVL460:
 782:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7702              		.loc 20 782 5 is_stmt 1 view .LVU2112
 782:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7703              		.loc 20 782 28 is_stmt 0 view .LVU2113
 7704 0530 1020     		movs	r0, #16
 7705 0532 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7706              	.LVL461:
 7707 0536 0346     		mov	r3, r0	@ movhi
 7708 0538 0DF1D900 		add	r0, sp, #217
 7709 053c ADF84830 		strh	r3, [sp, #72]	@ movhi
 7710 0540 1299     		ldr	r1, [sp, #72]
 7711 0542 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7712              	.LVL462:
 783:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7713              		.loc 20 783 5 is_stmt 1 view .LVU2114
 783:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7714              		.loc 20 783 28 is_stmt 0 view .LVU2115
 7715 0546 1120     		movs	r0, #17
 7716 0548 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7717              	.LVL463:
 7718 054c 0346     		mov	r3, r0	@ movhi
 7719 054e 0DF1EA00 		add	r0, sp, #234
 7720 0552 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7721 0556 1399     		ldr	r1, [sp, #76]
 7722 0558 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7723              	.LVL464:
 784:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7724              		.loc 20 784 5 is_stmt 1 view .LVU2116
 784:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7725              		.loc 20 784 28 is_stmt 0 view .LVU2117
 7726 055c 1220     		movs	r0, #18
 7727 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7728              	.LVL465:
 7729 0562 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 266


 7730 0564 0DF1FB00 		add	r0, sp, #251
 7731 0568 ADF85030 		strh	r3, [sp, #80]	@ movhi
 7732 056c 1499     		ldr	r1, [sp, #80]
 7733 056e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7734              	.LVL466:
 785:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7735              		.loc 20 785 5 is_stmt 1 view .LVU2118
 785:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7736              		.loc 20 785 28 is_stmt 0 view .LVU2119
 7737 0572 1320     		movs	r0, #19
 7738 0574 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7739              	.LVL467:
 7740 0578 0346     		mov	r3, r0	@ movhi
 7741 057a 43A8     		add	r0, sp, #268
 7742 057c ADF85430 		strh	r3, [sp, #84]	@ movhi
 7743 0580 1599     		ldr	r1, [sp, #84]
 7744 0582 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7745              	.LVL468:
 786:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7746              		.loc 20 786 5 is_stmt 1 view .LVU2120
 786:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7747              		.loc 20 786 28 is_stmt 0 view .LVU2121
 7748 0586 1420     		movs	r0, #20
 7749 0588 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7750              	.LVL469:
 7751 058c 0346     		mov	r3, r0	@ movhi
 7752 058e 0DF21D10 		addw	r0, sp, #285
 7753 0592 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7754 0596 1699     		ldr	r1, [sp, #88]
 7755 0598 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7756              	.LVL470:
 788:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7757              		.loc 20 788 5 is_stmt 1 view .LVU2122
 788:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7758              		.loc 20 788 28 is_stmt 0 view .LVU2123
 7759 059c 1620     		movs	r0, #22
 7760 059e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7761              	.LVL471:
 7762 05a2 0346     		mov	r3, r0	@ movhi
 7763 05a4 0DF59770 		add	r0, sp, #302
 7764 05a8 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7765 05ac 1799     		ldr	r1, [sp, #92]
 7766 05ae FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7767              	.LVL472:
 789:Veno-Echo.cpp **** 
 7768              		.loc 20 789 5 is_stmt 1 view .LVU2124
 789:Veno-Echo.cpp **** 
 7769              		.loc 20 789 25 is_stmt 0 view .LVU2125
 7770 05b2 1920     		movs	r0, #25
 7771 05b4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7772              	.LVL473:
 7773 05b8 0346     		mov	r3, r0	@ movhi
 7774 05ba 0E20     		movs	r0, #14
 7775 05bc ADF86030 		strh	r3, [sp, #96]	@ movhi
 7776 05c0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7777              	.LVL474:
 7778 05c4 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 267


 7779 05c6 0D20     		movs	r0, #13
 7780 05c8 ADF86430 		strh	r3, [sp, #100]	@ movhi
 7781 05cc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7782              	.LVL475:
 7783 05d0 0346     		mov	r3, r0	@ movhi
 7784 05d2 0C20     		movs	r0, #12
 7785 05d4 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7786 05d8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7787              	.LVL476:
 7788 05dc BDF86810 		ldrh	r1, [sp, #104]
 7789 05e0 0822     		movs	r2, #8
 7790 05e2 199B     		ldr	r3, [sp, #100]
 7791 05e4 ADF80010 		strh	r1, [sp]	@ movhi
 7792 05e8 ADF80400 		strh	r0, [sp, #4]	@ movhi
 7793 05ec 1899     		ldr	r1, [sp, #96]
 7794 05ee ADF86C00 		strh	r0, [sp, #108]	@ movhi
 7795 05f2 0DF23F10 		addw	r0, sp, #319
 7796 05f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7797              	.LVL477:
 792:Veno-Echo.cpp ****     hw.adc.Start();
 7798              		.loc 20 792 5 is_stmt 1 view .LVU2126
 792:Veno-Echo.cpp ****     hw.adc.Start();
 7799              		.loc 20 792 16 is_stmt 0 view .LVU2127
 7800 05fa 32A9     		add	r1, sp, #200
 7801 05fc 0623     		movs	r3, #6
 7802 05fe 0822     		movs	r2, #8
 7803 0600 3248     		ldr	r0, .L434+48
 7804 0602 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7805              	.LVL478:
 793:Veno-Echo.cpp **** 
 7806              		.loc 20 793 5 is_stmt 1 view .LVU2128
 793:Veno-Echo.cpp **** 
 7807              		.loc 20 793 17 is_stmt 0 view .LVU2129
 7808 0606 3148     		ldr	r0, .L434+48
 7809 0608 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7810              	.LVL479:
 796:Veno-Echo.cpp ****     // start audio callback
 7811              		.loc 20 796 5 is_stmt 1 view .LVU2130
 796:Veno-Echo.cpp ****     // start audio callback
 7812              		.loc 20 796 25 is_stmt 0 view .LVU2131
 7813 060c 4146     		mov	r1, r8
 7814 060e 2648     		ldr	r0, .L434+12
 7815 0610 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7816              	.LVL480:
 798:Veno-Echo.cpp **** 
 7817              		.loc 20 798 5 is_stmt 1 view .LVU2132
 798:Veno-Echo.cpp **** 
 7818              		.loc 20 798 18 is_stmt 0 view .LVU2133
 7819 0614 2E49     		ldr	r1, .L434+52
 7820 0616 2448     		ldr	r0, .L434+12
 7821 0618 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 7822              	.LVL481:
 7823              	.L422:
 802:Veno-Echo.cpp ****      {  
 7824              		.loc 20 802 6 is_stmt 1 view .LVU2134
 7825              	.LBB1641:
 805:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 268


 7826              		.loc 20 805 9 view .LVU2135
 808:Veno-Echo.cpp ****         {
 7827              		.loc 20 808 9 view .LVU2136
 7828              	.LBB1642:
 7829              	.LBB1643:
 7830              	.LBI1643:
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7831              		.loc 23 87 5 view .LVU2137
 7832              	.LBE1643:
 7833              	.LBE1642:
 7834              	.LBE1641:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7835              		.loc 23 88 7 view .LVU2138
 7836              	.LBB1674:
 7837              	.LBB1671:
 7838              	.LBB1649:
 7839              	.LBB1644:
 7840              	.LBI1644:
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 7841              		.loc 22 413 7 view .LVU2139
 7842              		.loc 22 413 7 is_stmt 0 view .LVU2140
 7843              	.LBE1644:
 7844              	.LBE1649:
 810:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 7845              		.loc 20 810 13 is_stmt 1 view .LVU2141
 7846              	.LBB1650:
 7847              	.LBI1650:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 7848              		.loc 23 80 5 view .LVU2142
 7849              	.LBE1650:
 7850              	.LBE1671:
 7851              	.LBE1674:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 7852              		.loc 23 81 7 view .LVU2143
 7853              	.LBB1675:
 7854              	.LBB1672:
 7855              	.LBB1659:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 269


 7856              	.LBB1651:
 7857              	.LBI1651:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7858              		.loc 22 288 7 view .LVU2144
 7859              	.LBB1652:
 7860              	.LBI1652:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7861              		.loc 22 390 7 view .LVU2145
 7862              	.LBE1652:
 7863              	.LBE1651:
 7864              	.LBE1659:
 7865              	.LBB1660:
 817:Veno-Echo.cpp ****            {
 7866              		.loc 20 817 12 view .LVU2146
 7867              	.LBE1660:
 7868              	.LBB1665:
 7869              	.LBB1647:
 7870              	.LBB1645:
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7871              		.loc 22 419 24 is_stmt 0 view .LVU2147
 7872 061c BFF35B8F 		dmb	ish
 7873 0620 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7874              	.LBE1645:
 7875              	.LBE1647:
 7876              	.LBE1665:
 7877              	.LBB1666:
 7878              	.LBB1657:
 7879              	.LBB1655:
 7880              	.LBB1653:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7881              		.loc 22 397 18 view .LVU2148
 7882 0622 0021     		movs	r1, #0
 7883              	.LBE1653:
 7884              	.LBE1655:
 7885              	.LBE1657:
 7886              	.LBE1666:
 811:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7887              		.loc 20 811 23 view .LVU2149
 7888 0624 0122     		movs	r2, #1
 7889              	.LBB1667:
 7890              	.LBB1648:
 7891              	.LBB1646:
 7892              		.loc 22 419 24 view .LVU2150
 7893 0626 BFF35B8F 		dmb	ish
 7894              	.LBE1646:
 7895              	.LBE1648:
 7896              	.LBE1667:
 808:Veno-Echo.cpp ****         {
 7897              		.loc 20 808 9 view .LVU2151
 7898 062a 4BB1     		cbz	r3, .L423
 7899              	.LBB1668:
 7900              	.LBB1658:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 270


 7901              	.LBB1656:
 7902              	.LBB1654:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7903              		.loc 22 397 18 view .LVU2152
 7904 062c BFF35B8F 		dmb	ish
 7905 0630 2170     		strb	r1, [r4]
 7906 0632 BFF35B8F 		dmb	ish
 7907              	.LVL482:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7908              		.loc 22 397 18 view .LVU2153
 7909              	.LBE1654:
 7910              	.LBE1656:
 7911              	.LBE1658:
 7912              	.LBE1668:
 811:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7913              		.loc 20 811 13 is_stmt 1 view .LVU2154
 811:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7914              		.loc 20 811 23 is_stmt 0 view .LVU2155
 7915 0636 2A70     		strb	r2, [r5]
 812:Veno-Echo.cpp ****         }
 7916              		.loc 20 812 13 is_stmt 1 view .LVU2156
 812:Veno-Echo.cpp ****         }
 7917              		.loc 20 812 39 is_stmt 0 view .LVU2157
 7918 0638 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7919              	.LVL483:
 812:Veno-Echo.cpp ****         }
 7920              		.loc 20 812 23 view .LVU2158
 7921 063c 3060     		str	r0, [r6]
 7922 063e EDE7     		b	.L422
 7923              	.LVL484:
 7924              	.L423:
 7925              	.LBB1669:
 7926              	.LBB1661:
 817:Veno-Echo.cpp ****            {
 7927              		.loc 20 817 25 view .LVU2159
 7928 0640 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 817:Veno-Echo.cpp ****            {
 7929              		.loc 20 817 12 view .LVU2160
 7930 0642 012B     		cmp	r3, #1
 7931 0644 0BD0     		beq	.L430
 7932              	.L425:
 7933              	.LBE1661:
 833:Veno-Echo.cpp ****            {
 7934              		.loc 20 833 12 is_stmt 1 view .LVU2161
 7935 0646 022B     		cmp	r3, #2
 7936 0648 E8D1     		bne	.L422
 835:Veno-Echo.cpp ****             {
 7937              		.loc 20 835 13 view .LVU2162
 835:Veno-Echo.cpp ****             {
 7938              		.loc 20 835 30 is_stmt 0 view .LVU2163
 7939 064a FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7940              	.LVL485:
 837:Veno-Echo.cpp ****             }
 7941              		.loc 20 837 21 is_stmt 1 view .LVU2164
 835:Veno-Echo.cpp ****             {
 7942              		.loc 20 835 33 is_stmt 0 view .LVU2165
 7943 064e 3368     		ldr	r3, [r6]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 271


 837:Veno-Echo.cpp ****             }
 7944              		.loc 20 837 31 view .LVU2166
 7945 0650 0022     		movs	r2, #0
 835:Veno-Echo.cpp ****             {
 7946              		.loc 20 835 33 view .LVU2167
 7947 0652 C01A     		subs	r0, r0, r3
 835:Veno-Echo.cpp ****             {
 7948              		.loc 20 835 13 view .LVU2168
 7949 0654 B0F5966F 		cmp	r0, #1200
 7950 0658 E0D9     		bls	.L422
 837:Veno-Echo.cpp ****             }
 7951              		.loc 20 837 31 view .LVU2169
 7952 065a 2A70     		strb	r2, [r5]
 7953 065c DEE7     		b	.L422
 7954              	.L430:
 7955              	.LBE1669:
 7956              	.LBE1672:
 7957              	.LBE1675:
 819:Veno-Echo.cpp ****                 {
 7958              		.loc 20 819 16 is_stmt 1 view .LVU2170
 7959              	.LBB1676:
 7960              	.LBB1673:
 7961              	.LBB1670:
 7962              	.LBB1664:
 7963              	.LBB1662:
 819:Veno-Echo.cpp ****                 {
 7964              		.loc 20 819 33 is_stmt 0 view .LVU2171
 7965 065e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7966              	.LVL486:
 819:Veno-Echo.cpp ****                 {
 7967              		.loc 20 819 36 view .LVU2172
 7968 0662 3368     		ldr	r3, [r6]
 7969 0664 C01A     		subs	r0, r0, r3
 819:Veno-Echo.cpp ****                 {
 7970              		.loc 20 819 16 view .LVU2173
 7971 0666 B0F57A7F 		cmp	r0, #1000
 7972 066a 01D8     		bhi	.L426
 7973              	.L429:
 7974 066c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7975 066e EAE7     		b	.L425
 7976              	.L426:
 7977              	.LBB1663:
 821:Veno-Echo.cpp ****                     
 7978              		.loc 20 821 21 is_stmt 1 view .LVU2174
 823:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == QSPIHandle::Result::OK)  //save settings
 7979              		.loc 20 823 30 is_stmt 0 view .LVU2175
 7980 0670 DFF860C0 		ldr	ip, .L434+56
 7981 0674 27AF     		add	r7, sp, #156
 821:Veno-Echo.cpp ****                     
 7982              		.loc 20 821 31 view .LVU2176
 7983 0676 4FF0020E 		mov	lr, #2
 823:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == QSPIHandle::Result::OK)  //save settings
 7984              		.loc 20 823 30 view .LVU2177
 7985 067a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 7986 067e 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 7987 0680 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 7988 0684 0FC7     		stmia	r7!, {r0, r1, r2, r3}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 272


 7989 0686 9CE80700 		ldm	ip, {r0, r1, r2}
 7990 068a 87E80700 		stm	r7, {r0, r1, r2}
 824:Veno-Echo.cpp ****                     {
 7991              		.loc 20 824 37 view .LVU2178
 7992 068e 27A8     		add	r0, sp, #156
 821:Veno-Echo.cpp ****                     
 7993              		.loc 20 821 31 view .LVU2179
 7994 0690 85F800E0 		strb	lr, [r5]
 823:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == QSPIHandle::Result::OK)  //save settings
 7995              		.loc 20 823 21 is_stmt 1 view .LVU2180
 824:Veno-Echo.cpp ****                     {
 7996              		.loc 20 824 21 view .LVU2181
 824:Veno-Echo.cpp ****                     {
 7997              		.loc 20 824 37 is_stmt 0 view .LVU2182
 7998 0694 FFF7FEFF 		bl	_Z12SaveSettingsRK8Settings
 7999              	.LVL487:
 8000 0698 E8E7     		b	.L429
 8001              	.L435:
 8002 069a 00BF     		.align	2
 8003              	.L434:
 8004 069c 00000000 		.word	.LANCHOR50
 8005 06a0 00803B46 		.word	1178304512
 8006 06a4 3333333F 		.word	1060320051
 8007 06a8 00000000 		.word	.LANCHOR4
 8008 06ac 00000000 		.word	.LANCHOR37
 8009 06b0 00004843 		.word	1128792064
 8010 06b4 00000000 		.word	.LANCHOR38
 8011 06b8 0000C842 		.word	1120403456
 8012 06bc 00000000 		.word	.LANCHOR108
 8013 06c0 808D5B00 		.word	6000000
 8014 06c4 00000000 		.word	.LANCHOR26
 8015 06c8 00000000 		.word	.LANCHOR90
 8016 06cc 18000000 		.word	.LANCHOR4+24
 8017 06d0 00000000 		.word	_ZL13AudioCallbackPKPKfPPfj
 8018 06d4 00000000 		.word	.LANCHOR15
 8019              	.LBE1663:
 8020              	.LBE1662:
 8021              	.LBE1664:
 8022              	.LBE1670:
 8023              	.LBE1673:
 8024              	.LBE1676:
 8025              		.cfi_endproc
 8026              	.LFE4800:
 8028              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8029              		.align	1
 8030              		.p2align 2,,3
 8031              		.global	_Z13TurnOnAllLEDsv
 8032              		.syntax unified
 8033              		.thumb
 8034              		.thumb_func
 8035              		.fpu fpv5-d16
 8037              	_Z13TurnOnAllLEDsv:
 8038              	.LFB4823:
1965:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8039              		.loc 20 1965 1 is_stmt 1 view -0
 8040              		.cfi_startproc
 8041              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 273


 8042              		@ frame_needed = 0, uses_anonymous_args = 0
1966:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8043              		.loc 20 1966 5 view .LVU2184
1965:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8044              		.loc 20 1965 1 is_stmt 0 view .LVU2185
 8045 0000 08B5     		push	{r3, lr}
 8046              		.cfi_def_cfa_offset 8
 8047              		.cfi_offset 3, -8
 8048              		.cfi_offset 14, -4
1966:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8049              		.loc 20 1966 26 view .LVU2186
 8050 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8051 0006 1148     		ldr	r0, .L438
 8052 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8053              	.LVL488:
1967:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8054              		.loc 20 1967 5 is_stmt 1 view .LVU2187
1967:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8055              		.loc 20 1967 28 is_stmt 0 view .LVU2188
 8056 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8057 0010 0F48     		ldr	r0, .L438+4
 8058 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8059              	.LVL489:
1968:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8060              		.loc 20 1968 5 is_stmt 1 view .LVU2189
1968:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8061              		.loc 20 1968 28 is_stmt 0 view .LVU2190
 8062 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8063 001a 0E48     		ldr	r0, .L438+8
 8064 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8065              	.LVL490:
1969:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8066              		.loc 20 1969 5 is_stmt 1 view .LVU2191
1969:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8067              		.loc 20 1969 21 is_stmt 0 view .LVU2192
 8068 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8069 0024 0C48     		ldr	r0, .L438+12
 8070 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8071              	.LVL491:
1970:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8072              		.loc 20 1970 5 is_stmt 1 view .LVU2193
1970:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8073              		.loc 20 1970 21 is_stmt 0 view .LVU2194
 8074 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8075 002e 0B48     		ldr	r0, .L438+16
 8076 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8077              	.LVL492:
1971:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8078              		.loc 20 1971 5 is_stmt 1 view .LVU2195
1971:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8079              		.loc 20 1971 19 is_stmt 0 view .LVU2196
 8080 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8081 0038 0948     		ldr	r0, .L438+20
 8082 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8083              	.LVL493:
1972:Veno-Echo.cpp **** }
 8084              		.loc 20 1972 5 is_stmt 1 view .LVU2197
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 274


1972:Veno-Echo.cpp **** }
 8085              		.loc 20 1972 19 is_stmt 0 view .LVU2198
 8086 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8087 0042 0848     		ldr	r0, .L438+24
1973:Veno-Echo.cpp **** 
 8088              		.loc 20 1973 1 view .LVU2199
 8089 0044 BDE80840 		pop	{r3, lr}
 8090              		.cfi_restore 14
 8091              		.cfi_restore 3
 8092              		.cfi_def_cfa_offset 0
1972:Veno-Echo.cpp **** }
 8093              		.loc 20 1972 19 view .LVU2200
 8094 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8095              	.LVL494:
 8096              	.L439:
 8097              		.align	2
 8098              	.L438:
 8099 004c 00000000 		.word	.LANCHOR90
 8100 0050 04000000 		.word	.LANCHOR0+4
 8101 0054 04000000 		.word	.LANCHOR1+4
 8102 0058 00000000 		.word	.LANCHOR93
 8103 005c 00000000 		.word	.LANCHOR94
 8104 0060 00000000 		.word	.LANCHOR95
 8105 0064 00000000 		.word	.LANCHOR96
 8106              		.cfi_endproc
 8107              	.LFE4823:
 8109              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8110              		.align	1
 8111              		.p2align 2,,3
 8112              		.global	_Z12ResetAllLEDsv
 8113              		.syntax unified
 8114              		.thumb
 8115              		.thumb_func
 8116              		.fpu fpv5-d16
 8118              	_Z12ResetAllLEDsv:
 8119              	.LFB4824:
1976:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8120              		.loc 20 1976 1 is_stmt 1 view -0
 8121              		.cfi_startproc
 8122              		@ args = 0, pretend = 0, frame = 0
 8123              		@ frame_needed = 0, uses_anonymous_args = 0
1977:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8124              		.loc 20 1977 5 view .LVU2202
1976:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8125              		.loc 20 1976 1 is_stmt 0 view .LVU2203
 8126 0000 08B5     		push	{r3, lr}
 8127              		.cfi_def_cfa_offset 8
 8128              		.cfi_offset 3, -8
 8129              		.cfi_offset 14, -4
1977:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8130              		.loc 20 1977 26 view .LVU2204
 8131 0002 9FED1E0A 		vldr.32	s0, .L447
 8132 0006 1E48     		ldr	r0, .L447+4
 8133 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8134              	.LVL495:
1978:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8135              		.loc 20 1978 5 is_stmt 1 view .LVU2205
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 275


1978:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8136              		.loc 20 1978 28 is_stmt 0 view .LVU2206
 8137 000c 9FED1B0A 		vldr.32	s0, .L447
 8138 0010 1C48     		ldr	r0, .L447+8
 8139 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8140              	.LVL496:
1979:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8141              		.loc 20 1979 5 is_stmt 1 view .LVU2207
1979:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8142              		.loc 20 1979 28 is_stmt 0 view .LVU2208
 8143 0016 1C48     		ldr	r0, .L447+12
 8144 0018 9FED180A 		vldr.32	s0, .L447
 8145 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8146              	.LVL497:
1980:Veno-Echo.cpp ****     {
 8147              		.loc 20 1980 5 is_stmt 1 view .LVU2209
1980:Veno-Echo.cpp ****     {
 8148              		.loc 20 1980 26 is_stmt 0 view .LVU2210
 8149 0020 1A48     		ldr	r0, .L447+16
 8150 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8151              	.LVL498:
1980:Veno-Echo.cpp ****     {
 8152              		.loc 20 1980 5 view .LVU2211
 8153 0026 C8B9     		cbnz	r0, .L441
1982:Veno-Echo.cpp ****     }
 8154              		.loc 20 1982 9 is_stmt 1 view .LVU2212
1982:Veno-Echo.cpp ****     }
 8155              		.loc 20 1982 25 is_stmt 0 view .LVU2213
 8156 0028 1848     		ldr	r0, .L447+16
 8157 002a 9FED140A 		vldr.32	s0, .L447
 8158 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8159              	.LVL499:
1989:Veno-Echo.cpp ****     {
 8160              		.loc 20 1989 5 is_stmt 1 view .LVU2214
1989:Veno-Echo.cpp ****     {
 8161              		.loc 20 1989 26 is_stmt 0 view .LVU2215
 8162 0032 1748     		ldr	r0, .L447+20
 8163 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8164              	.LVL500:
1989:Veno-Echo.cpp ****     {
 8165              		.loc 20 1989 5 view .LVU2216
 8166 0038 D0B9     		cbnz	r0, .L443
 8167              	.L446:
1991:Veno-Echo.cpp ****     }
 8168              		.loc 20 1991 9 is_stmt 1 view .LVU2217
1991:Veno-Echo.cpp ****     }
 8169              		.loc 20 1991 25 is_stmt 0 view .LVU2218
 8170 003a 9FED100A 		vldr.32	s0, .L447
 8171 003e 1448     		ldr	r0, .L447+20
 8172 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8173              	.LVL501:
 8174              	.L444:
1998:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8175              		.loc 20 1998 5 is_stmt 1 view .LVU2219
1998:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8176              		.loc 20 1998 19 is_stmt 0 view .LVU2220
 8177 0044 9FED0D0A 		vldr.32	s0, .L447
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 276


 8178 0048 1248     		ldr	r0, .L447+24
 8179 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8180              	.LVL502:
1999:Veno-Echo.cpp **** }
 8181              		.loc 20 1999 5 is_stmt 1 view .LVU2221
1999:Veno-Echo.cpp **** }
 8182              		.loc 20 1999 19 is_stmt 0 view .LVU2222
 8183 004e 9FED0B0A 		vldr.32	s0, .L447
 8184 0052 1148     		ldr	r0, .L447+28
2000:Veno-Echo.cpp **** 
 8185              		.loc 20 2000 1 view .LVU2223
 8186 0054 BDE80840 		pop	{r3, lr}
 8187              		.cfi_remember_state
 8188              		.cfi_restore 14
 8189              		.cfi_restore 3
 8190              		.cfi_def_cfa_offset 0
1999:Veno-Echo.cpp **** }
 8191              		.loc 20 1999 19 view .LVU2224
 8192 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8193              	.LVL503:
 8194              	.L441:
 8195              		.cfi_restore_state
1986:Veno-Echo.cpp ****     }
 8196              		.loc 20 1986 8 is_stmt 1 view .LVU2225
1986:Veno-Echo.cpp ****     }
 8197              		.loc 20 1986 24 is_stmt 0 view .LVU2226
 8198 005c 0B48     		ldr	r0, .L447+16
 8199 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8200 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8201              	.LVL504:
1989:Veno-Echo.cpp ****     {
 8202              		.loc 20 1989 5 is_stmt 1 view .LVU2227
1989:Veno-Echo.cpp ****     {
 8203              		.loc 20 1989 26 is_stmt 0 view .LVU2228
 8204 0066 0A48     		ldr	r0, .L447+20
 8205 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8206              	.LVL505:
1989:Veno-Echo.cpp ****     {
 8207              		.loc 20 1989 5 view .LVU2229
 8208 006c 0028     		cmp	r0, #0
 8209 006e E4D0     		beq	.L446
 8210              	.L443:
1995:Veno-Echo.cpp ****     }
 8211              		.loc 20 1995 9 is_stmt 1 view .LVU2230
1995:Veno-Echo.cpp ****     }
 8212              		.loc 20 1995 25 is_stmt 0 view .LVU2231
 8213 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8214 0074 0648     		ldr	r0, .L447+20
 8215 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8216              	.LVL506:
 8217 007a E3E7     		b	.L444
 8218              	.L448:
 8219              		.align	2
 8220              	.L447:
 8221 007c 00000000 		.word	0
 8222 0080 00000000 		.word	.LANCHOR90
 8223 0084 04000000 		.word	.LANCHOR0+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 277


 8224 0088 04000000 		.word	.LANCHOR1+4
 8225 008c 00000000 		.word	.LANCHOR93
 8226 0090 00000000 		.word	.LANCHOR94
 8227 0094 00000000 		.word	.LANCHOR95
 8228 0098 00000000 		.word	.LANCHOR96
 8229              		.cfi_endproc
 8230              	.LFE4824:
 8232              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8233              		.align	1
 8234              		.p2align 2,,3
 8235              		.global	_Z14Update_Buttonsv
 8236              		.syntax unified
 8237              		.thumb
 8238              		.thumb_func
 8239              		.fpu fpv5-d16
 8241              	_Z14Update_Buttonsv:
 8242              	.LFB4818:
1643:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8243              		.loc 20 1643 1 is_stmt 1 view -0
 8244              		.cfi_startproc
 8245              		@ args = 0, pretend = 0, frame = 0
 8246              		@ frame_needed = 0, uses_anonymous_args = 0
1644:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8247              		.loc 20 1644 5 view .LVU2233
1645:Veno-Echo.cpp ****     static int buttonstate{};
 8248              		.loc 20 1645 5 view .LVU2234
1646:Veno-Echo.cpp **** 
 8249              		.loc 20 1646 5 view .LVU2235
1648:Veno-Echo.cpp ****     Rev_R_sw.update();
 8250              		.loc 20 1648 5 view .LVU2236
1643:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8251              		.loc 20 1643 1 is_stmt 0 view .LVU2237
 8252 0000 70B5     		push	{r4, r5, r6, lr}
 8253              		.cfi_def_cfa_offset 16
 8254              		.cfi_offset 4, -16
 8255              		.cfi_offset 5, -12
 8256              		.cfi_offset 6, -8
 8257              		.cfi_offset 14, -4
1648:Veno-Echo.cpp ****     Rev_R_sw.update();
 8258              		.loc 20 1648 20 view .LVU2238
 8259 0002 9848     		ldr	r0, .L504
 8260 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8261              	.LVL507:
1649:Veno-Echo.cpp ****     LPF_sw.update();
 8262              		.loc 20 1649 5 is_stmt 1 view .LVU2239
1649:Veno-Echo.cpp ****     LPF_sw.update();
 8263              		.loc 20 1649 20 is_stmt 0 view .LVU2240
 8264 0008 9748     		ldr	r0, .L504+4
 8265 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8266              	.LVL508:
1650:Veno-Echo.cpp ****     HPF_sw.update();
 8267              		.loc 20 1650 5 is_stmt 1 view .LVU2241
1650:Veno-Echo.cpp ****     HPF_sw.update();
 8268              		.loc 20 1650 18 is_stmt 0 view .LVU2242
 8269 000e 9748     		ldr	r0, .L504+8
 8270 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8271              	.LVL509:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 278


1651:Veno-Echo.cpp ****     Tap_Button.update();
 8272              		.loc 20 1651 5 is_stmt 1 view .LVU2243
1654:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8273              		.loc 20 1654 26 is_stmt 0 view .LVU2244
 8274 0014 964C     		ldr	r4, .L504+12
1651:Veno-Echo.cpp ****     Tap_Button.update();
 8275              		.loc 20 1651 18 view .LVU2245
 8276 0016 9748     		ldr	r0, .L504+16
 8277 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8278              	.LVL510:
1652:Veno-Echo.cpp **** 
 8279              		.loc 20 1652 5 is_stmt 1 view .LVU2246
1652:Veno-Echo.cpp **** 
 8280              		.loc 20 1652 22 is_stmt 0 view .LVU2247
 8281 001c 9648     		ldr	r0, .L504+20
 8282 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8283              	.LVL511:
1654:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8284              		.loc 20 1654 5 is_stmt 1 view .LVU2248
1654:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8285              		.loc 20 1654 26 is_stmt 0 view .LVU2249
 8286 0022 2046     		mov	r0, r4
 8287 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8288              	.LVL512:
1655:Veno-Echo.cpp ****     //TapButton.Debounce();
 8289              		.loc 20 1655 5 is_stmt 1 view .LVU2250
1655:Veno-Echo.cpp ****     //TapButton.Debounce();
 8290              		.loc 20 1655 26 is_stmt 0 view .LVU2251
 8291 0028 9448     		ldr	r0, .L504+24
 8292 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8293              	.LVL513:
1657:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8294              		.loc 20 1657 5 is_stmt 1 view .LVU2252
1657:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8295              		.loc 20 1657 18 is_stmt 0 view .LVU2253
 8296 002e 9448     		ldr	r0, .L504+28
 8297 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8298              	.LVL514:
1660:Veno-Echo.cpp ****     {
 8299              		.loc 20 1660 5 is_stmt 1 view .LVU2254
  43:../libdaisy/src/hid/switch.h **** 
  44:../libdaisy/src/hid/switch.h ****     /** 
  45:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../libdaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../libdaisy/src/hid/switch.h ****     */
  52:../libdaisy/src/hid/switch.h ****     void
  53:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../libdaisy/src/hid/switch.h **** 
  55:../libdaisy/src/hid/switch.h ****     /**
  56:../libdaisy/src/hid/switch.h ****        Simplified Init.
  57:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../libdaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../libdaisy/src/hid/switch.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 279


  60:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../libdaisy/src/hid/switch.h **** 
  62:../libdaisy/src/hid/switch.h ****     /** 
  63:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../libdaisy/src/hid/switch.h ****     */
  67:../libdaisy/src/hid/switch.h ****     void Debounce();
  68:../libdaisy/src/hid/switch.h **** 
  69:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 8300              		.loc 1 70 38 view .LVU2255
1660:Veno-Echo.cpp ****     {
 8301              		.loc 20 1660 5 is_stmt 0 view .LVU2256
 8302 0034 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8303 0036 7F2B     		cmp	r3, #127
 8304 0038 00F0DC80 		beq	.L496
 8305              	.L450:
1674:Veno-Echo.cpp ****     {
 8306              		.loc 20 1674 5 is_stmt 1 view .LVU2257
 8307              	.LVL515:
 8308              		.loc 1 70 38 view .LVU2258
1674:Veno-Echo.cpp ****     {
 8309              		.loc 20 1674 32 is_stmt 0 view .LVU2259
 8310 003c 8F4B     		ldr	r3, .L504+24
1674:Veno-Echo.cpp ****     {
 8311              		.loc 20 1674 5 view .LVU2260
 8312 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8313 0040 7F2B     		cmp	r3, #127
 8314 0042 00F0BE80 		beq	.L497
 8315              	.L452:
1690:Veno-Echo.cpp ****     {
 8316              		.loc 20 1690 5 is_stmt 1 view .LVU2261
1690:Veno-Echo.cpp ****     {
 8317              		.loc 20 1690 28 is_stmt 0 view .LVU2262
 8318 0046 8748     		ldr	r0, .L504
1692:Veno-Echo.cpp ****         if (buttonstate == 3)
 8319              		.loc 20 1692 21 view .LVU2263
 8320 0048 8E4C     		ldr	r4, .L504+32
1690:Veno-Echo.cpp ****     {
 8321              		.loc 20 1690 28 view .LVU2264
 8322 004a FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8323              	.LVL516:
1690:Veno-Echo.cpp ****     {
 8324              		.loc 20 1690 5 view .LVU2265
 8325 004e D0B1     		cbz	r0, .L454
1692:Veno-Echo.cpp ****         if (buttonstate == 3)
 8326              		.loc 20 1692 9 is_stmt 1 view .LVU2266
1692:Veno-Echo.cpp ****         if (buttonstate == 3)
 8327              		.loc 20 1692 21 is_stmt 0 view .LVU2267
 8328 0050 2368     		ldr	r3, [r4]
 8329 0052 0133     		adds	r3, r3, #1
1693:Veno-Echo.cpp ****         {
 8330              		.loc 20 1693 9 view .LVU2268
 8331 0054 032B     		cmp	r3, #3
1692:Veno-Echo.cpp ****         if (buttonstate == 3)
 8332              		.loc 20 1692 21 view .LVU2269
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 280


 8333 0056 2360     		str	r3, [r4]
1693:Veno-Echo.cpp ****         {
 8334              		.loc 20 1693 9 is_stmt 1 view .LVU2270
 8335 0058 00F0E580 		beq	.L498
 8336              	.L455:
1697:Veno-Echo.cpp ****         {
 8337              		.loc 20 1697 9 view .LVU2271
1697:Veno-Echo.cpp ****         {
 8338              		.loc 20 1697 29 is_stmt 0 view .LVU2272
 8339 005c 8148     		ldr	r0, .L504
 8340 005e FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8341              	.LVL517:
1703:Veno-Echo.cpp ****         }
 8342              		.loc 20 1703 31 view .LVU2273
 8343 0062 F7EE007A 		vmov.f32	s15, #1.0e+0
 8344 0066 9FED887A 		vldr.32	s14, .L504+36
 8345 006a 0028     		cmp	r0, #0
 8346 006c 8749     		ldr	r1, .L504+40
 8347              	.LBB1677:
 8348              	.LBB1678:
 8349              	.LBB1679:
 8350              	.LBB1680:
 8351              	.LBB1681:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8352              		.loc 22 397 18 view .LVU2274
 8353 006e 4FF00102 		mov	r2, #1
 8354 0072 874B     		ldr	r3, .L504+44
 8355              	.LBE1681:
 8356              	.LBE1680:
 8357              	.LBE1679:
 8358              	.LBE1678:
 8359              	.LBE1677:
1703:Veno-Echo.cpp ****         }
 8360              		.loc 20 1703 31 view .LVU2275
 8361 0074 47FE277A 		vseleq.f32	s15, s14, s15
 8362 0078 C1ED097A 		vstr.32	s15, [r1, #36]
1705:Veno-Echo.cpp ****     }
 8363              		.loc 20 1705 9 is_stmt 1 view .LVU2276
 8364              	.LVL518:
 8365              	.LBB1686:
 8366              	.LBI1677:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8367              		.loc 23 80 5 view .LVU2277
 8368              	.LBB1685:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8369              		.loc 23 81 7 view .LVU2278
 8370              	.LBB1684:
 8371              	.LBI1679:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8372              		.loc 22 288 7 view .LVU2279
 8373              	.LBB1683:
 8374              	.LBI1680:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8375              		.loc 22 390 7 view .LVU2280
 8376              	.LBB1682:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8377              		.loc 22 397 18 is_stmt 0 view .LVU2281
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 281


 8378 007c BFF35B8F 		dmb	ish
 8379 0080 1A70     		strb	r2, [r3]
 8380 0082 BFF35B8F 		dmb	ish
 8381              	.LVL519:
 8382              	.L454:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8383              		.loc 22 397 18 view .LVU2282
 8384              	.LBE1682:
 8385              	.LBE1683:
 8386              	.LBE1684:
 8387              	.LBE1685:
 8388              	.LBE1686:
1708:Veno-Echo.cpp ****     {
 8389              		.loc 20 1708 5 is_stmt 1 view .LVU2283
1708:Veno-Echo.cpp ****     {
 8390              		.loc 20 1708 29 is_stmt 0 view .LVU2284
 8391 0086 7748     		ldr	r0, .L504
 8392 0088 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8393              	.LVL520:
1708:Veno-Echo.cpp ****     {
 8394              		.loc 20 1708 5 view .LVU2285
 8395 008c 10B1     		cbz	r0, .L457
1710:Veno-Echo.cpp ****     }
 8396              		.loc 20 1710 9 is_stmt 1 view .LVU2286
1710:Veno-Echo.cpp ****     }
 8397              		.loc 20 1710 21 is_stmt 0 view .LVU2287
 8398 008e 2368     		ldr	r3, [r4]
 8399 0090 013B     		subs	r3, r3, #1
 8400 0092 2360     		str	r3, [r4]
 8401              	.L457:
1713:Veno-Echo.cpp ****     {
 8402              		.loc 20 1713 5 is_stmt 1 view .LVU2288
1713:Veno-Echo.cpp ****     {
 8403              		.loc 20 1713 28 is_stmt 0 view .LVU2289
 8404 0094 7448     		ldr	r0, .L504+4
 8405 0096 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8406              	.LVL521:
1713:Veno-Echo.cpp ****     {
 8407              		.loc 20 1713 5 view .LVU2290
 8408 009a D0B1     		cbz	r0, .L458
1715:Veno-Echo.cpp ****         if (buttonstate == 3)
 8409              		.loc 20 1715 9 is_stmt 1 view .LVU2291
1715:Veno-Echo.cpp ****         if (buttonstate == 3)
 8410              		.loc 20 1715 21 is_stmt 0 view .LVU2292
 8411 009c 2368     		ldr	r3, [r4]
 8412 009e 0133     		adds	r3, r3, #1
1716:Veno-Echo.cpp ****         {
 8413              		.loc 20 1716 9 view .LVU2293
 8414 00a0 032B     		cmp	r3, #3
1715:Veno-Echo.cpp ****         if (buttonstate == 3)
 8415              		.loc 20 1715 21 view .LVU2294
 8416 00a2 2360     		str	r3, [r4]
1716:Veno-Echo.cpp ****         {
 8417              		.loc 20 1716 9 is_stmt 1 view .LVU2295
 8418 00a4 00F0C480 		beq	.L499
 8419              	.L459:
1720:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 282


 8420              		.loc 20 1720 9 view .LVU2296
1720:Veno-Echo.cpp ****         {
 8421              		.loc 20 1720 29 is_stmt 0 view .LVU2297
 8422 00a8 6F48     		ldr	r0, .L504+4
 8423 00aa FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8424              	.LVL522:
1726:Veno-Echo.cpp ****         }
 8425              		.loc 20 1726 31 view .LVU2298
 8426 00ae F7EE007A 		vmov.f32	s15, #1.0e+0
 8427 00b2 9FED757A 		vldr.32	s14, .L504+36
 8428 00b6 0028     		cmp	r0, #0
 8429 00b8 7449     		ldr	r1, .L504+40
 8430              	.LBB1687:
 8431              	.LBB1688:
 8432              	.LBB1689:
 8433              	.LBB1690:
 8434              	.LBB1691:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8435              		.loc 22 397 18 view .LVU2299
 8436 00ba 4FF00102 		mov	r2, #1
 8437 00be 744B     		ldr	r3, .L504+44
 8438              	.LBE1691:
 8439              	.LBE1690:
 8440              	.LBE1689:
 8441              	.LBE1688:
 8442              	.LBE1687:
1726:Veno-Echo.cpp ****         }
 8443              		.loc 20 1726 31 view .LVU2300
 8444 00c0 47FE277A 		vseleq.f32	s15, s14, s15
 8445 00c4 C1ED0A7A 		vstr.32	s15, [r1, #40]
1728:Veno-Echo.cpp ****     }
 8446              		.loc 20 1728 9 is_stmt 1 view .LVU2301
 8447              	.LVL523:
 8448              	.LBB1696:
 8449              	.LBI1687:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8450              		.loc 23 80 5 view .LVU2302
 8451              	.LBB1695:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8452              		.loc 23 81 7 view .LVU2303
 8453              	.LBB1694:
 8454              	.LBI1689:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8455              		.loc 22 288 7 view .LVU2304
 8456              	.LBB1693:
 8457              	.LBI1690:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8458              		.loc 22 390 7 view .LVU2305
 8459              	.LBB1692:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8460              		.loc 22 397 18 is_stmt 0 view .LVU2306
 8461 00c8 BFF35B8F 		dmb	ish
 8462 00cc 1A70     		strb	r2, [r3]
 8463 00ce BFF35B8F 		dmb	ish
 8464              	.LVL524:
 8465              	.L458:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 283


 8466              		.loc 22 397 18 view .LVU2307
 8467              	.LBE1692:
 8468              	.LBE1693:
 8469              	.LBE1694:
 8470              	.LBE1695:
 8471              	.LBE1696:
1731:Veno-Echo.cpp ****     {
 8472              		.loc 20 1731 5 is_stmt 1 view .LVU2308
1731:Veno-Echo.cpp ****     {
 8473              		.loc 20 1731 29 is_stmt 0 view .LVU2309
 8474 00d2 6548     		ldr	r0, .L504+4
 8475 00d4 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8476              	.LVL525:
1731:Veno-Echo.cpp ****     {
 8477              		.loc 20 1731 5 view .LVU2310
 8478 00d8 10B1     		cbz	r0, .L461
1733:Veno-Echo.cpp ****     }
 8479              		.loc 20 1733 9 is_stmt 1 view .LVU2311
1733:Veno-Echo.cpp ****     }
 8480              		.loc 20 1733 21 is_stmt 0 view .LVU2312
 8481 00da 2368     		ldr	r3, [r4]
 8482 00dc 013B     		subs	r3, r3, #1
 8483 00de 2360     		str	r3, [r4]
 8484              	.L461:
1736:Veno-Echo.cpp ****     {
 8485              		.loc 20 1736 5 is_stmt 1 view .LVU2313
1736:Veno-Echo.cpp ****     {
 8486              		.loc 20 1736 30 is_stmt 0 view .LVU2314
 8487 00e0 6548     		ldr	r0, .L504+20
 8488 00e2 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8489              	.LVL526:
1736:Veno-Echo.cpp ****     {
 8490              		.loc 20 1736 5 view .LVU2315
 8491 00e6 0028     		cmp	r0, #0
 8492 00e8 55D1     		bne	.L500
 8493              	.L463:
1757:Veno-Echo.cpp ****     {
 8494              		.loc 20 1757 5 is_stmt 1 view .LVU2316
1757:Veno-Echo.cpp ****     {
 8495              		.loc 20 1757 31 is_stmt 0 view .LVU2317
 8496 00ea 6348     		ldr	r0, .L504+20
 8497 00ec FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8498              	.LVL527:
1757:Veno-Echo.cpp ****     {
 8499              		.loc 20 1757 5 view .LVU2318
 8500 00f0 38B1     		cbz	r0, .L466
1759:Veno-Echo.cpp ****         buttonstate -= 1;
 8501              		.loc 20 1759 9 is_stmt 1 view .LVU2319
1760:Veno-Echo.cpp ****         mute = false;
 8502              		.loc 20 1760 21 is_stmt 0 view .LVU2320
 8503 00f2 2368     		ldr	r3, [r4]
1759:Veno-Echo.cpp ****         buttonstate -= 1;
 8504              		.loc 20 1759 15 view .LVU2321
 8505 00f4 0022     		movs	r2, #0
 8506 00f6 6748     		ldr	r0, .L504+48
1760:Veno-Echo.cpp ****         mute = false;
 8507              		.loc 20 1760 21 view .LVU2322
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 284


 8508 00f8 013B     		subs	r3, r3, #1
1761:Veno-Echo.cpp ****     }
 8509              		.loc 20 1761 14 view .LVU2323
 8510 00fa 6749     		ldr	r1, .L504+52
1759:Veno-Echo.cpp ****         buttonstate -= 1;
 8511              		.loc 20 1759 15 view .LVU2324
 8512 00fc 0270     		strb	r2, [r0]
1760:Veno-Echo.cpp ****         mute = false;
 8513              		.loc 20 1760 9 is_stmt 1 view .LVU2325
1760:Veno-Echo.cpp ****         mute = false;
 8514              		.loc 20 1760 21 is_stmt 0 view .LVU2326
 8515 00fe 2360     		str	r3, [r4]
1761:Veno-Echo.cpp ****     }
 8516              		.loc 20 1761 9 is_stmt 1 view .LVU2327
1761:Veno-Echo.cpp ****     }
 8517              		.loc 20 1761 14 is_stmt 0 view .LVU2328
 8518 0100 0A70     		strb	r2, [r1]
 8519              	.L466:
1764:Veno-Echo.cpp ****     {
 8520              		.loc 20 1764 5 is_stmt 1 view .LVU2329
1764:Veno-Echo.cpp ****     {
 8521              		.loc 20 1764 28 is_stmt 0 view .LVU2330
 8522 0102 5D48     		ldr	r0, .L504+20
 8523 0104 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8524              	.LVL528:
1764:Veno-Echo.cpp ****     {
 8525              		.loc 20 1764 5 view .LVU2331
 8526 0108 60B9     		cbnz	r0, .L501
 8527              	.L468:
1772:Veno-Echo.cpp ****     {
 8528              		.loc 20 1772 5 is_stmt 1 view .LVU2332
 8529 010a 2368     		ldr	r3, [r4]
 8530 010c 032B     		cmp	r3, #3
 8531 010e 16D0     		beq	.L502
 8532              	.L471:
1789:Veno-Echo.cpp **** }
 8533              		.loc 20 1789 5 view .LVU2333
 8534              	.LBB1697:
 8535              	.LBI1697:
  71:../libdaisy/src/hid/switch.h **** 
  72:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  73:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  74:../libdaisy/src/hid/switch.h **** 
  75:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  76:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8536              		.loc 1 76 17 view .LVU2334
 8537              	.LVL529:
 8538              	.LBB1698:
 8539              		.loc 1 76 35 view .LVU2335
 8540              	.LBE1698:
 8541              	.LBE1697:
1789:Veno-Echo.cpp **** }
 8542              		.loc 20 1789 31 is_stmt 0 view .LVU2336
 8543 0110 5B4B     		ldr	r3, .L504+28
1789:Veno-Echo.cpp **** }
 8544              		.loc 20 1789 14 view .LVU2337
 8545 0112 624A     		ldr	r2, .L504+56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 285


 8546              	.LBB1700:
 8547              	.LBB1699:
 8548              		.loc 1 76 52 view .LVU2338
 8549 0114 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8550 0116 A3F1FF03 		sub	r3, #255
 8551 011a B3FA83F3 		clz	r3, r3
 8552 011e 5B09     		lsrs	r3, r3, #5
 8553 0120 1370     		strb	r3, [r2]
 8554              	.LBE1699:
 8555              	.LBE1700:
1790:Veno-Echo.cpp **** 
 8556              		.loc 20 1790 1 view .LVU2339
 8557 0122 70BD     		pop	{r4, r5, r6, pc}
 8558              	.LVL530:
 8559              	.L501:
1766:Veno-Echo.cpp ****         {
 8560              		.loc 20 1766 9 is_stmt 1 view .LVU2340
1766:Veno-Echo.cpp ****         {
 8561              		.loc 20 1766 29 is_stmt 0 view .LVU2341
 8562 0124 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8563              	.LVL531:
1766:Veno-Echo.cpp ****         {
 8564              		.loc 20 1766 32 view .LVU2342
 8565 0128 5D4B     		ldr	r3, .L504+60
 8566 012a 1B68     		ldr	r3, [r3]
 8567 012c C01A     		subs	r0, r0, r3
1766:Veno-Echo.cpp ****         {
 8568              		.loc 20 1766 9 view .LVU2343
 8569 012e 3228     		cmp	r0, #50
 8570 0130 EBD9     		bls	.L468
1768:Veno-Echo.cpp ****         } 
 8571              		.loc 20 1768 13 is_stmt 1 view .LVU2344
1768:Veno-Echo.cpp ****         } 
 8572              		.loc 20 1768 19 is_stmt 0 view .LVU2345
 8573 0132 584B     		ldr	r3, .L504+48
 8574 0134 0122     		movs	r2, #1
 8575 0136 1A70     		strb	r2, [r3]
1772:Veno-Echo.cpp ****     {
 8576              		.loc 20 1772 5 is_stmt 1 view .LVU2346
 8577 0138 2368     		ldr	r3, [r4]
 8578 013a 032B     		cmp	r3, #3
 8579 013c E8D1     		bne	.L471
 8580              	.L502:
1775:Veno-Echo.cpp ****             {
 8581              		.loc 20 1775 13 view .LVU2347
1775:Veno-Echo.cpp ****             {
 8582              		.loc 20 1775 36 is_stmt 0 view .LVU2348
 8583 013e 594E     		ldr	r6, .L504+64
1775:Veno-Echo.cpp ****             {
 8584              		.loc 20 1775 33 view .LVU2349
 8585 0140 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8586              	.LVL532:
1775:Veno-Echo.cpp ****             {
 8587              		.loc 20 1775 13 view .LVU2350
 8588 0144 40F6B833 		movw	r3, #3000
1775:Veno-Echo.cpp ****             {
 8589              		.loc 20 1775 36 view .LVU2351
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 286


 8590 0148 3268     		ldr	r2, [r6]
 8591 014a 801A     		subs	r0, r0, r2
1775:Veno-Echo.cpp ****             {
 8592              		.loc 20 1775 13 view .LVU2352
 8593 014c 9842     		cmp	r0, r3
 8594 014e DFD9     		bls	.L471
1777:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8595              		.loc 20 1777 17 is_stmt 1 view .LVU2353
1777:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8596              		.loc 20 1777 32 is_stmt 0 view .LVU2354
 8597 0150 4448     		ldr	r0, .L504
 8598 0152 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8599              	.LVL533:
1778:Veno-Echo.cpp ****                 ResetAllLEDs();
 8600              		.loc 20 1778 17 is_stmt 1 view .LVU2355
1778:Veno-Echo.cpp ****                 ResetAllLEDs();
 8601              		.loc 20 1778 32 is_stmt 0 view .LVU2356
 8602 0156 4448     		ldr	r0, .L504+4
 8603 0158 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8604              	.LVL534:
1779:Veno-Echo.cpp ****                 //don't let reset or shift update
 8605              		.loc 20 1779 17 is_stmt 1 view .LVU2357
1783:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8606              		.loc 20 1783 29 is_stmt 0 view .LVU2358
 8607 015c 524D     		ldr	r5, .L504+68
1779:Veno-Echo.cpp ****                 //don't let reset or shift update
 8608              		.loc 20 1779 29 view .LVU2359
 8609 015e FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8610              	.LVL535:
1781:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8611              		.loc 20 1781 17 is_stmt 1 view .LVU2360
1781:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8612              		.loc 20 1781 23 is_stmt 0 view .LVU2361
 8613 0162 4C4B     		ldr	r3, .L504+48
 8614 0164 0022     		movs	r2, #0
1782:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8615              		.loc 20 1782 30 view .LVU2362
 8616 0166 5048     		ldr	r0, .L504+68
1783:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8617              		.loc 20 1783 29 view .LVU2363
 8618 0168 484C     		ldr	r4, .L504+40
1781:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8619              		.loc 20 1781 23 view .LVU2364
 8620 016a 1A70     		strb	r2, [r3]
1782:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8621              		.loc 20 1782 17 is_stmt 1 view .LVU2365
1782:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8622              		.loc 20 1782 30 is_stmt 0 view .LVU2366
 8623 016c FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8624              	.LVL536:
1783:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8625              		.loc 20 1783 17 is_stmt 1 view .LVU2367
1783:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8626              		.loc 20 1783 29 is_stmt 0 view .LVU2368
 8627 0170 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8628 0172 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8629 0174 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 287


 8630 0176 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8631 0178 95E80700 		ldm	r5, {r0, r1, r2}
 8632 017c 84E80700 		stm	r4, {r0, r1, r2}
1784:Veno-Echo.cpp ****                 save_flag = true;
 8633              		.loc 20 1784 17 is_stmt 1 view .LVU2369
1784:Veno-Echo.cpp ****                 save_flag = true;
 8634              		.loc 20 1784 43 is_stmt 0 view .LVU2370
 8635 0180 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8636              	.LVL537:
 8637              	.LBB1701:
 8638              	.LBB1702:
 8639              	.LBB1703:
 8640              	.LBB1704:
 8641              	.LBB1705:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8642              		.loc 22 397 18 view .LVU2371
 8643 0184 424B     		ldr	r3, .L504+44
 8644 0186 0122     		movs	r2, #1
 8645              	.LBE1705:
 8646              	.LBE1704:
 8647              	.LBE1703:
 8648              	.LBE1702:
 8649              	.LBE1701:
1784:Veno-Echo.cpp ****                 save_flag = true;
 8650              		.loc 20 1784 27 view .LVU2372
 8651 0188 3060     		str	r0, [r6]
1785:Veno-Echo.cpp ****             }
 8652              		.loc 20 1785 17 is_stmt 1 view .LVU2373
 8653              	.LVL538:
 8654              	.LBB1710:
 8655              	.LBI1701:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8656              		.loc 23 80 5 view .LVU2374
 8657              	.LBB1709:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8658              		.loc 23 81 7 view .LVU2375
 8659              	.LBB1708:
 8660              	.LBI1703:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8661              		.loc 22 288 7 view .LVU2376
 8662              	.LBB1707:
 8663              	.LBI1704:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8664              		.loc 22 390 7 view .LVU2377
 8665              	.LBB1706:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8666              		.loc 22 397 18 is_stmt 0 view .LVU2378
 8667 018a BFF35B8F 		dmb	ish
 8668 018e 1A70     		strb	r2, [r3]
 8669 0190 BFF35B8F 		dmb	ish
 8670              	.LVL539:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8671              		.loc 22 397 18 view .LVU2379
 8672              	.LBE1706:
 8673              	.LBE1707:
 8674              	.LBE1708:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 288


 8675              		.loc 23 81 35 view .LVU2380
 8676 0194 BCE7     		b	.L471
 8677              	.LVL540:
 8678              	.L500:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8679              		.loc 23 81 35 view .LVU2381
 8680              	.LBE1709:
 8681              	.LBE1710:
1738:Veno-Echo.cpp ****         {
 8682              		.loc 20 1738 9 is_stmt 1 view .LVU2382
1738:Veno-Echo.cpp ****         {
 8683              		.loc 20 1738 25 is_stmt 0 view .LVU2383
 8684 0196 4548     		ldr	r0, .L504+72
 8685 0198 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8686              	.LVL541:
1738:Veno-Echo.cpp ****         {
 8687              		.loc 20 1738 9 view .LVU2384
 8688 019c 0028     		cmp	r0, #0
 8689 019e 4CD1     		bne	.L503
 8690              	.L464:
1744:Veno-Echo.cpp ****         
 8691              		.loc 20 1744 9 is_stmt 1 view .LVU2385
1744:Veno-Echo.cpp ****         
 8692              		.loc 20 1744 33 is_stmt 0 view .LVU2386
 8693 01a0 4348     		ldr	r0, .L504+76
 8694 01a2 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8695              	.LVL542:
1747:Veno-Echo.cpp ****         buttonstate += 1;
 8696              		.loc 20 1747 9 is_stmt 1 view .LVU2387
1747:Veno-Echo.cpp ****         buttonstate += 1;
 8697              		.loc 20 1747 35 is_stmt 0 view .LVU2388
 8698 01a6 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8699              	.LVL543:
1748:Veno-Echo.cpp ****         
 8700              		.loc 20 1748 21 view .LVU2389
 8701 01aa 2368     		ldr	r3, [r4]
1747:Veno-Echo.cpp ****         buttonstate += 1;
 8702              		.loc 20 1747 19 view .LVU2390
 8703 01ac 3C4A     		ldr	r2, .L504+60
1748:Veno-Echo.cpp ****         
 8704              		.loc 20 1748 21 view .LVU2391
 8705 01ae 0133     		adds	r3, r3, #1
1747:Veno-Echo.cpp ****         buttonstate += 1;
 8706              		.loc 20 1747 19 view .LVU2392
 8707 01b0 1060     		str	r0, [r2]
1748:Veno-Echo.cpp ****         
 8708              		.loc 20 1748 9 is_stmt 1 view .LVU2393
1750:Veno-Echo.cpp ****         {
 8709              		.loc 20 1750 9 is_stmt 0 view .LVU2394
 8710 01b2 032B     		cmp	r3, #3
1748:Veno-Echo.cpp ****         
 8711              		.loc 20 1748 21 view .LVU2395
 8712 01b4 2360     		str	r3, [r4]
1750:Veno-Echo.cpp ****         {
 8713              		.loc 20 1750 9 is_stmt 1 view .LVU2396
 8714 01b6 98D1     		bne	.L463
1752:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 289


 8715              		.loc 20 1752 13 view .LVU2397
1752:Veno-Echo.cpp ****         }
 8716              		.loc 20 1752 39 is_stmt 0 view .LVU2398
 8717 01b8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8718              	.LVL544:
1752:Veno-Echo.cpp ****         }
 8719              		.loc 20 1752 23 view .LVU2399
 8720 01bc 394B     		ldr	r3, .L504+64
 8721 01be 1860     		str	r0, [r3]
 8722 01c0 93E7     		b	.L463
 8723              	.L497:
1676:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8724              		.loc 20 1676 9 is_stmt 1 view .LVU2400
1676:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8725              		.loc 20 1676 24 is_stmt 0 view .LVU2401
 8726 01c2 2948     		ldr	r0, .L504+4
 8727 01c4 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8728              	.LVL545:
1677:Veno-Echo.cpp ****         {
 8729              		.loc 20 1677 9 is_stmt 1 view .LVU2402
1677:Veno-Echo.cpp ****         {
 8730              		.loc 20 1677 29 is_stmt 0 view .LVU2403
 8731 01c8 2748     		ldr	r0, .L504+4
 8732 01ca FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8733              	.LVL546:
1683:Veno-Echo.cpp ****         }
 8734              		.loc 20 1683 31 view .LVU2404
 8735 01ce F7EE007A 		vmov.f32	s15, #1.0e+0
 8736 01d2 9FED2D7A 		vldr.32	s14, .L504+36
 8737 01d6 0028     		cmp	r0, #0
 8738 01d8 2C49     		ldr	r1, .L504+40
 8739              	.LBB1711:
 8740              	.LBB1712:
 8741              	.LBB1713:
 8742              	.LBB1714:
 8743              	.LBB1715:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8744              		.loc 22 397 18 view .LVU2405
 8745 01da 4FF00102 		mov	r2, #1
 8746 01de 2C4B     		ldr	r3, .L504+44
 8747              	.LBE1715:
 8748              	.LBE1714:
 8749              	.LBE1713:
 8750              	.LBE1712:
 8751              	.LBE1711:
1683:Veno-Echo.cpp ****         }
 8752              		.loc 20 1683 31 view .LVU2406
 8753 01e0 47FE277A 		vseleq.f32	s15, s14, s15
 8754 01e4 C1ED0A7A 		vstr.32	s15, [r1, #40]
1685:Veno-Echo.cpp ****     }
 8755              		.loc 20 1685 9 is_stmt 1 view .LVU2407
 8756              	.LVL547:
 8757              	.LBB1720:
 8758              	.LBI1711:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8759              		.loc 23 80 5 view .LVU2408
 8760              	.LBB1719:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 290


  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8761              		.loc 23 81 7 view .LVU2409
 8762              	.LBB1718:
 8763              	.LBI1713:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8764              		.loc 22 288 7 view .LVU2410
 8765              	.LBB1717:
 8766              	.LBI1714:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8767              		.loc 22 390 7 view .LVU2411
 8768              	.LBB1716:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8769              		.loc 22 397 18 is_stmt 0 view .LVU2412
 8770 01e8 BFF35B8F 		dmb	ish
 8771 01ec 1A70     		strb	r2, [r3]
 8772 01ee BFF35B8F 		dmb	ish
 8773              	.LVL548:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8774              		.loc 22 397 18 view .LVU2413
 8775              	.LBE1716:
 8776              	.LBE1717:
 8777              	.LBE1718:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8778              		.loc 23 81 35 view .LVU2414
 8779 01f2 28E7     		b	.L452
 8780              	.LVL549:
 8781              	.L496:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8782              		.loc 23 81 35 view .LVU2415
 8783              	.LBE1719:
 8784              	.LBE1720:
1662:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8785              		.loc 20 1662 9 is_stmt 1 view .LVU2416
1662:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8786              		.loc 20 1662 24 is_stmt 0 view .LVU2417
 8787 01f4 1B48     		ldr	r0, .L504
 8788 01f6 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8789              	.LVL550:
1663:Veno-Echo.cpp ****         {
 8790              		.loc 20 1663 9 is_stmt 1 view .LVU2418
1663:Veno-Echo.cpp ****         {
 8791              		.loc 20 1663 29 is_stmt 0 view .LVU2419
 8792 01fa 1A48     		ldr	r0, .L504
 8793 01fc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8794              	.LVL551:
1669:Veno-Echo.cpp ****         }
 8795              		.loc 20 1669 31 view .LVU2420
 8796 0200 F7EE007A 		vmov.f32	s15, #1.0e+0
 8797 0204 9FED207A 		vldr.32	s14, .L504+36
 8798 0208 0028     		cmp	r0, #0
 8799 020a 2049     		ldr	r1, .L504+40
 8800              	.LBB1721:
 8801              	.LBB1722:
 8802              	.LBB1723:
 8803              	.LBB1724:
 8804              	.LBB1725:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 291


 8805              		.loc 22 397 18 view .LVU2421
 8806 020c 4FF00102 		mov	r2, #1
 8807 0210 1F4B     		ldr	r3, .L504+44
 8808              	.LBE1725:
 8809              	.LBE1724:
 8810              	.LBE1723:
 8811              	.LBE1722:
 8812              	.LBE1721:
1669:Veno-Echo.cpp ****         }
 8813              		.loc 20 1669 31 view .LVU2422
 8814 0212 47FE277A 		vseleq.f32	s15, s14, s15
 8815 0216 C1ED097A 		vstr.32	s15, [r1, #36]
1671:Veno-Echo.cpp ****     }
 8816              		.loc 20 1671 9 is_stmt 1 view .LVU2423
 8817              	.LVL552:
 8818              	.LBB1730:
 8819              	.LBI1721:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8820              		.loc 23 80 5 view .LVU2424
 8821              	.LBB1729:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8822              		.loc 23 81 7 view .LVU2425
 8823              	.LBB1728:
 8824              	.LBI1723:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8825              		.loc 22 288 7 view .LVU2426
 8826              	.LBB1727:
 8827              	.LBI1724:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8828              		.loc 22 390 7 view .LVU2427
 8829              	.LBB1726:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8830              		.loc 22 397 18 is_stmt 0 view .LVU2428
 8831 021a BFF35B8F 		dmb	ish
 8832 021e 1A70     		strb	r2, [r3]
 8833 0220 BFF35B8F 		dmb	ish
 8834              	.LVL553:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8835              		.loc 22 397 18 view .LVU2429
 8836              	.LBE1726:
 8837              	.LBE1727:
 8838              	.LBE1728:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8839              		.loc 23 81 35 view .LVU2430
 8840 0224 0AE7     		b	.L450
 8841              	.LVL554:
 8842              	.L498:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8843              		.loc 23 81 35 view .LVU2431
 8844              	.LBE1729:
 8845              	.LBE1730:
1695:Veno-Echo.cpp ****         }
 8846              		.loc 20 1695 13 is_stmt 1 view .LVU2432
1695:Veno-Echo.cpp ****         }
 8847              		.loc 20 1695 39 is_stmt 0 view .LVU2433
 8848 0226 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8849              	.LVL555:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 292


1695:Veno-Echo.cpp ****         }
 8850              		.loc 20 1695 23 view .LVU2434
 8851 022a 1E4B     		ldr	r3, .L504+64
 8852 022c 1860     		str	r0, [r3]
 8853 022e 15E7     		b	.L455
 8854              	.L499:
1718:Veno-Echo.cpp ****         }
 8855              		.loc 20 1718 13 is_stmt 1 view .LVU2435
1718:Veno-Echo.cpp ****         }
 8856              		.loc 20 1718 39 is_stmt 0 view .LVU2436
 8857 0230 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8858              	.LVL556:
1718:Veno-Echo.cpp ****         }
 8859              		.loc 20 1718 23 view .LVU2437
 8860 0234 1B4B     		ldr	r3, .L504+64
 8861 0236 1860     		str	r0, [r3]
 8862 0238 36E7     		b	.L459
 8863              	.L503:
1740:Veno-Echo.cpp ****             AltControls.tempo = BaseTempo.getTempo();
 8864              		.loc 20 1740 13 is_stmt 1 view .LVU2438
1740:Veno-Echo.cpp ****             AltControls.tempo = BaseTempo.getTempo();
 8865              		.loc 20 1740 35 is_stmt 0 view .LVU2439
 8866 023a 1C48     		ldr	r0, .L504+72
 8867 023c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8868              	.LVL557:
 8869 0240 1B48     		ldr	r0, .L504+76
 8870 0242 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8871              	.LVL558:
1741:Veno-Echo.cpp ****             save_flag = true;
 8872              		.loc 20 1741 13 is_stmt 1 view .LVU2440
1741:Veno-Echo.cpp ****             save_flag = true;
 8873              		.loc 20 1741 51 is_stmt 0 view .LVU2441
 8874 0246 1948     		ldr	r0, .L504+72
 8875 0248 FFF7FEFF 		bl	_ZN8Taptempo8getTempoEv
 8876              	.LVL559:
1741:Veno-Echo.cpp ****             save_flag = true;
 8877              		.loc 20 1741 31 view .LVU2442
 8878 024c 0F49     		ldr	r1, .L504+40
 8879              	.LBB1731:
 8880              	.LBB1732:
 8881              	.LBB1733:
 8882              	.LBB1734:
 8883              	.LBB1735:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8884              		.loc 22 397 18 view .LVU2443
 8885 024e 0122     		movs	r2, #1
 8886 0250 0F4B     		ldr	r3, .L504+44
 8887              	.LBE1735:
 8888              	.LBE1734:
 8889              	.LBE1733:
 8890              	.LBE1732:
 8891              	.LBE1731:
1741:Veno-Echo.cpp ****             save_flag = true;
 8892              		.loc 20 1741 31 view .LVU2444
 8893 0252 81ED080A 		vstr.32	s0, [r1, #32]
1742:Veno-Echo.cpp ****         }
 8894              		.loc 20 1742 13 is_stmt 1 view .LVU2445
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 293


 8895              	.LVL560:
 8896              	.LBB1740:
 8897              	.LBI1731:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8898              		.loc 23 80 5 view .LVU2446
 8899              	.LBB1739:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8900              		.loc 23 81 7 view .LVU2447
 8901              	.LBB1738:
 8902              	.LBI1733:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8903              		.loc 22 288 7 view .LVU2448
 8904              	.LBB1737:
 8905              	.LBI1734:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8906              		.loc 22 390 7 view .LVU2449
 8907              	.LBB1736:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8908              		.loc 22 397 18 is_stmt 0 view .LVU2450
 8909 0256 BFF35B8F 		dmb	ish
 8910 025a 1A70     		strb	r2, [r3]
 8911 025c BFF35B8F 		dmb	ish
 8912              	.LVL561:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8913              		.loc 22 397 18 view .LVU2451
 8914              	.LBE1736:
 8915              	.LBE1737:
 8916              	.LBE1738:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8917              		.loc 23 81 35 view .LVU2452
 8918 0260 9EE7     		b	.L464
 8919              	.L505:
 8920 0262 00BF     		.align	2
 8921              	.L504:
 8922 0264 00000000 		.word	.LANCHOR93
 8923 0268 00000000 		.word	.LANCHOR94
 8924 026c 00000000 		.word	.LANCHOR95
 8925 0270 00000000 		.word	.LANCHOR98
 8926 0274 00000000 		.word	.LANCHOR96
 8927 0278 00000000 		.word	.LANCHOR97
 8928 027c 00000000 		.word	.LANCHOR99
 8929 0280 00000000 		.word	.LANCHOR100
 8930 0284 00000000 		.word	.LANCHOR110
 8931 0288 00000000 		.word	0
 8932 028c 00000000 		.word	.LANCHOR15
 8933 0290 00000000 		.word	.LANCHOR16
 8934 0294 00000000 		.word	.LANCHOR7
 8935 0298 00000000 		.word	.LANCHOR113
 8936 029c 00000000 		.word	.LANCHOR12
 8937 02a0 00000000 		.word	.LANCHOR112
 8938 02a4 00000000 		.word	.LANCHOR111
 8939 02a8 00000000 		.word	.LANCHOR114
 8940 02ac 00000000 		.word	.LANCHOR26
 8941 02b0 00000000 		.word	.LANCHOR90
 8942              	.LBE1739:
 8943              	.LBE1740:
 8944              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 294


 8945              	.LFE4818:
 8947              		.section	.text._ZL13AudioCallbackPKPKfPPfj,"ax",%progbits
 8948              		.align	1
 8949              		.p2align 2,,3
 8950              		.syntax unified
 8951              		.thumb
 8952              		.thumb_func
 8953              		.fpu fpv5-d16
 8955              	_ZL13AudioCallbackPKPKfPPfj:
 8956              	.LVL562:
 8957              	.LFB4798:
 251:Veno-Echo.cpp **** 
 8958              		.loc 20 251 1 is_stmt 1 view -0
 8959              		.cfi_startproc
 8960              		@ args = 0, pretend = 0, frame = 96
 8961              		@ frame_needed = 0, uses_anonymous_args = 0
 262:Veno-Echo.cpp **** 
 8962              		.loc 20 262 1 view .LVU2454
 280:Veno-Echo.cpp **** 
 8963              		.loc 20 280 1 view .LVU2455
 251:Veno-Echo.cpp **** 
 8964              		.loc 20 251 1 is_stmt 0 view .LVU2456
 8965 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8966              		.cfi_def_cfa_offset 36
 8967              		.cfi_offset 4, -36
 8968              		.cfi_offset 5, -32
 8969              		.cfi_offset 6, -28
 8970              		.cfi_offset 7, -24
 8971              		.cfi_offset 8, -20
 8972              		.cfi_offset 9, -16
 8973              		.cfi_offset 10, -12
 8974              		.cfi_offset 11, -8
 8975              		.cfi_offset 14, -4
 280:Veno-Echo.cpp **** 
 8976              		.loc 20 280 20 view .LVU2457
 8977 0004 1B4D     		ldr	r5, .L647
 280:Veno-Echo.cpp **** 
 8978              		.loc 20 280 25 view .LVU2458
 8979 0006 1C4B     		ldr	r3, .L647+4
 280:Veno-Echo.cpp **** 
 8980              		.loc 20 280 20 view .LVU2459
 8981 0008 2C68     		ldr	r4, [r5]
 251:Veno-Echo.cpp **** 
 8982              		.loc 20 251 1 view .LVU2460
 8983 000a 2DED108B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14, d15}
 8984              		.cfi_def_cfa_offset 100
 8985              		.cfi_offset 80, -100
 8986              		.cfi_offset 81, -96
 8987              		.cfi_offset 82, -92
 8988              		.cfi_offset 83, -88
 8989              		.cfi_offset 84, -84
 8990              		.cfi_offset 85, -80
 8991              		.cfi_offset 86, -76
 8992              		.cfi_offset 87, -72
 8993              		.cfi_offset 88, -68
 8994              		.cfi_offset 89, -64
 8995              		.cfi_offset 90, -60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 295


 8996              		.cfi_offset 91, -56
 8997              		.cfi_offset 92, -52
 8998              		.cfi_offset 93, -48
 8999              		.cfi_offset 94, -44
 9000              		.cfi_offset 95, -40
 9001 000e 99B0     		sub	sp, sp, #100
 9002              		.cfi_def_cfa_offset 200
 251:Veno-Echo.cpp **** 
 9003              		.loc 20 251 1 view .LVU2461
 9004 0010 CDE90601 		strd	r0, r1, [sp, #24]
 280:Veno-Echo.cpp **** 
 9005              		.loc 20 280 20 view .LVU2462
 9006 0014 611C     		adds	r1, r4, #1
 9007              	.LVL563:
 251:Veno-Echo.cpp **** 
 9008              		.loc 20 251 1 view .LVU2463
 9009 0016 0592     		str	r2, [sp, #20]
 280:Veno-Echo.cpp **** 
 9010              		.loc 20 280 25 view .LVU2464
 9011 0018 83FB0132 		smull	r3, r2, r3, r1
 9012              	.LVL564:
 280:Veno-Echo.cpp **** 
 9013              		.loc 20 280 25 view .LVU2465
 9014 001c CB17     		asrs	r3, r1, #31
 9015 001e 0A44     		add	r2, r2, r1
 9016 0020 C3EBE203 		rsb	r3, r3, r2, asr #3
 9017 0024 C3EB0313 		rsb	r3, r3, r3, lsl #4
 9018 0028 CB1A     		subs	r3, r1, r3
 280:Veno-Echo.cpp **** 
 9019              		.loc 20 280 9 view .LVU2466
 9020 002a 2B60     		str	r3, [r5]
 293:Veno-Echo.cpp ****         {
 9021              		.loc 20 293 9 is_stmt 1 view .LVU2467
 9022 002c 0E2B     		cmp	r3, #14
 9023 002e 17D8     		bhi	.L507
 9024 0030 DFE813F0 		tbh	[pc, r3, lsl #1]
 9025              	.L509:
 9026 0034 9B05     		.2byte	(.L523-.L509)/2
 9027 0036 0F00     		.2byte	(.L522-.L509)/2
 9028 0038 A305     		.2byte	(.L521-.L509)/2
 9029 003a AC05     		.2byte	(.L520-.L509)/2
 9030 003c B505     		.2byte	(.L519-.L509)/2
 9031 003e F605     		.2byte	(.L518-.L509)/2
 9032 0040 FF05     		.2byte	(.L517-.L509)/2
 9033 0042 0806     		.2byte	(.L516-.L509)/2
 9034 0044 1106     		.2byte	(.L515-.L509)/2
 9035 0046 1A06     		.2byte	(.L514-.L509)/2
 9036 0048 2306     		.2byte	(.L513-.L509)/2
 9037 004a 2C06     		.2byte	(.L512-.L509)/2
 9038 004c 3506     		.2byte	(.L511-.L509)/2
 9039 004e 3E06     		.2byte	(.L510-.L509)/2
 9040 0050 9205     		.2byte	(.L508-.L509)/2
 9041              		.p2align 1
 9042              	.L522:
 302:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 9043              		.loc 20 302 13 view .LVU2468
 303:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 296


 9044              		.loc 20 303 17 view .LVU2469
 9045              	.LBB1827:
 9046              	.LBI1827:
 852:Veno-Echo.cpp **** {
 9047              		.loc 20 852 6 view .LVU2470
 9048              	.LBB1828:
 854:Veno-Echo.cpp **** }
 9049              		.loc 20 854 5 view .LVU2471
 854:Veno-Echo.cpp **** }
 9050              		.loc 20 854 36 is_stmt 0 view .LVU2472
 9051 0052 0021     		movs	r1, #0
 9052 0054 0948     		ldr	r0, .L647+8
 9053              	.LVL565:
 854:Veno-Echo.cpp **** }
 9054              		.loc 20 854 36 view .LVU2473
 9055 0056 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9056              	.LVL566:
 854:Veno-Echo.cpp **** }
 9057              		.loc 20 854 19 view .LVU2474
 9058 005a 094B     		ldr	r3, .L647+12
 9059 005c 83ED000A 		vstr.32	s0, [r3]
 9060              	.L507:
 9061              	.LVL567:
 854:Veno-Echo.cpp **** }
 9062              		.loc 20 854 19 view .LVU2475
 9063              	.LBE1828:
 9064              	.LBE1827:
 9065              	.LBB1829:
 383:Veno-Echo.cpp ****     {   
 9066              		.loc 20 383 25 is_stmt 1 discriminator 1 view .LVU2476
 9067 0060 059B     		ldr	r3, [sp, #20]
 9068 0062 002B     		cmp	r3, #0
 9069 0064 00F05A85 		beq	.L506
 383:Veno-Echo.cpp ****     {   
 9070              		.loc 20 383 25 is_stmt 0 view .LVU2477
 9071 0068 0023     		movs	r3, #0
 9072 006a DFF81C90 		ldr	r9, .L647+20
 9073 006e 054E     		ldr	r6, .L647+16
 9074 0070 0193     		str	r3, [sp, #4]
 9075 0072 58E1     		b	.L524
 9076              	.L648:
 9077              		.align	2
 9078              	.L647:
 9079 0074 00000000 		.word	.LANCHOR115
 9080 0078 89888888 		.word	-2004318071
 9081 007c 18000000 		.word	.LANCHOR4+24
 9082 0080 00000000 		.word	.LANCHOR5
 9083 0084 00000000 		.word	.LANCHOR131
 9084 0088 00000000 		.word	.LANCHOR130
 9085              	.LVL568:
 9086              	.L646:
 9087              	.LBB1830:
 9088              	.LBB1831:
 9089              	.LBB1832:
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9090              		.loc 20 2007 10 is_stmt 1 view .LVU2478
 9091 008c B8EE007A 		vmov.f32	s14, #-2.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 297


2008:Veno-Echo.cpp ****     else
 9092              		.loc 20 2008 19 is_stmt 0 view .LVU2479
 9093 0090 F4EE477A 		vcmp.f32	s15, s14
 9094 0094 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9095 0098 48BF     		it	mi
 9096 009a F0EE477A 		vmovmi.f32	s15, s14
 9097              	.LVL569:
 9098              	.L545:
2012:Veno-Echo.cpp **** }
 9099              		.loc 20 2012 5 is_stmt 1 view .LVU2480
2012:Veno-Echo.cpp **** }
 9100              		.loc 20 2012 5 is_stmt 0 view .LVU2481
 9101              	.LBE1832:
 9102              	.LBE1831:
 9103              	.LBB1835:
 9104              	.LBB1836:
2005:Veno-Echo.cpp ****         returnval = limit;
 9105              		.loc 20 2005 5 view .LVU2482
 9106 009e B0EE007A 		vmov.f32	s14, #2.0e+0
 9107              	.LBE1836:
 9108              	.LBE1835:
 441:Veno-Echo.cpp **** 
 9109              		.loc 20 441 34 view .LVU2483
 9110 00a2 9DED0D0A 		vldr.32	s0, [sp, #52]
 440:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9111              		.loc 20 440 23 view .LVU2484
 9112 00a6 CDED0C7A 		vstr.32	s15, [sp, #48]
 441:Veno-Echo.cpp **** 
 9113              		.loc 20 441 9 is_stmt 1 view .LVU2485
 9114              	.LVL570:
 9115              	.LBB1840:
 9116              	.LBI1835:
2002:Veno-Echo.cpp **** {
 9117              		.loc 20 2002 7 view .LVU2486
 9118              	.LBB1837:
2004:Veno-Echo.cpp ****     if (input > limit)
 9119              		.loc 20 2004 5 view .LVU2487
2005:Veno-Echo.cpp ****         returnval = limit;
 9120              		.loc 20 2005 5 view .LVU2488
 9121 00aa B4EEC70A 		vcmpe.f32	s0, s14
 9122 00ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9123 00b2 00F37284 		bgt	.L583
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9124              		.loc 20 2007 10 view .LVU2489
 9125 00b6 B8EE007A 		vmov.f32	s14, #-2.0e+0
 9126              	.LBE1837:
 9127              	.LBE1840:
 9128              	.LBB1841:
 443:Veno-Echo.cpp **** {
 9129              		.loc 20 443 1 is_stmt 0 view .LVU2490
 9130 00ba DA4B     		ldr	r3, .L649
 9131 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9132              	.LBE1841:
 9133              	.LBB1863:
 9134              	.LBB1838:
2008:Veno-Echo.cpp ****     else
 9135              		.loc 20 2008 19 view .LVU2491
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 298


 9136 00be B4EE470A 		vcmp.f32	s0, s14
 9137 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9138 00c6 48BF     		it	mi
 9139 00c8 B0EE470A 		vmovmi.f32	s0, s14
 9140              	.LVL571:
2012:Veno-Echo.cpp **** }
 9141              		.loc 20 2012 5 is_stmt 1 view .LVU2492
2012:Veno-Echo.cpp **** }
 9142              		.loc 20 2012 5 is_stmt 0 view .LVU2493
 9143              	.LBE1838:
 9144              	.LBE1863:
 441:Veno-Echo.cpp **** 
 9145              		.loc 20 441 23 view .LVU2494
 9146 00cc 8DED0D0A 		vstr.32	s0, [sp, #52]
 443:Veno-Echo.cpp **** {
 9147              		.loc 20 443 1 is_stmt 1 view .LVU2495
 9148              	.LBB1864:
 9149 00d0 002B     		cmp	r3, #0
 9150 00d2 00F06B84 		beq	.L643
 9151              	.L549:
 9152              	.LBE1864:
 487:Veno-Echo.cpp ****         static float RNegFB{};
 9153              		.loc 20 487 9 view .LVU2496
 488:Veno-Echo.cpp **** 
 9154              		.loc 20 488 9 view .LVU2497
 491:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9155              		.loc 20 491 9 view .LVU2498
 491:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9156              		.loc 20 491 22 is_stmt 0 view .LVU2499
 9157 00d6 D44B     		ldr	r3, .L649+4
 9158              	.LBB1865:
 9159              	.LBB1866:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9160              		.loc 12 57 16 view .LVU2500
 9161 00d8 D9ED042A 		vldr.32	s5, [r9, #16]
 9162              	.LBE1866:
 9163              	.LBE1865:
 491:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9164              		.loc 20 491 22 view .LVU2501
 9165 00dc D3ED004A 		vldr.32	s9, [r3]
 9166 00e0 D24B     		ldr	r3, .L649+8
 9167              	.LBB1878:
 9168              	.LBB1867:
 9169              		.loc 12 57 37 view .LVU2502
 9170 00e2 99ED006A 		vldr.32	s12, [r9]
 9171              	.LBE1867:
 9172              	.LBE1878:
 491:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9173              		.loc 20 491 22 view .LVU2503
 9174 00e6 93ED007A 		vldr.32	s14, [r3]
 494:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9175              		.loc 20 494 22 view .LVU2504
 9176 00ea D14B     		ldr	r3, .L649+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 299


 491:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9177              		.loc 20 491 9 view .LVU2505
 9178 00ec F4EEC74A 		vcmpe.f32	s9, s14
 9179              	.LBB1879:
 9180              	.LBB1880:
 9181              		.loc 12 57 16 view .LVU2506
 9182 00f0 D6ED043A 		vldr.32	s7, [r6, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9183              		.loc 12 65 20 view .LVU2507
 9184 00f4 96ED054A 		vldr.32	s8, [r6, #20]
 9185              		.loc 12 65 53 view .LVU2508
 9186 00f8 96ED032A 		vldr.32	s4, [r6, #12]
 9187              	.LBE1880:
 9188              	.LBE1879:
 491:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9189              		.loc 20 491 9 view .LVU2509
 9190 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9191              	.LBB1889:
 9192              	.LBB1868:
 9193              		.loc 12 65 20 view .LVU2510
 9194 0100 99ED053A 		vldr.32	s6, [r9, #20]
 9195              		.loc 12 65 53 view .LVU2511
 9196 0104 99ED031A 		vldr.32	s2, [r9, #12]
 9197              	.LBE1868:
 9198              	.LBE1889:
 510:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9199              		.loc 20 510 13 view .LVU2512
 9200 0108 DFEDCA1A 		vldr.32	s3, .L649+16
 9201 010c 58BF     		it	pl
 9202 010e 74EEC74A 		vsubpl.f32	s9, s9, s14
 494:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9203              		.loc 20 494 9 is_stmt 1 view .LVU2513
 494:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9204              		.loc 20 494 22 is_stmt 0 view .LVU2514
 9205 0112 93ED007A 		vldr.32	s14, [r3]
 9206 0116 C84B     		ldr	r3, .L649+20
 9207 0118 D3ED006A 		vldr.32	s13, [r3]
 497:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9208              		.loc 20 497 15 view .LVU2515
 9209 011c 67EEA44A 		vmul.f32	s9, s15, s9
 9210              	.LBB1890:
 9211              	.LBB1881:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9212              		.loc 12 57 37 view .LVU2516
 9213 0120 D6ED007A 		vldr.32	s15, [r6]
 9214              	.LBE1881:
 9215              	.LBE1890:
 494:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9216              		.loc 20 494 9 view .LVU2517
 9217 0124 B4EEE67A 		vcmpe.f32	s14, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 300


 501:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9218              		.loc 20 501 36 view .LVU2518
 9219 0128 C44B     		ldr	r3, .L649+24
 494:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9220              		.loc 20 494 9 view .LVU2519
 9221 012a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9222 012e 58BF     		it	pl
 9223 0130 37EE667A 		vsubpl.f32	s14, s14, s13
 497:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9224              		.loc 20 497 9 is_stmt 1 view .LVU2520
 9225              	.LVL572:
 498:Veno-Echo.cpp **** 
 9226              		.loc 20 498 9 view .LVU2521
 501:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9227              		.loc 20 501 36 is_stmt 0 view .LVU2522
 9228 0134 F7EE006A 		vmov.f32	s13, #1.0e+0
 498:Veno-Echo.cpp **** 
 9229              		.loc 20 498 15 view .LVU2523
 9230 0138 20EE070A 		vmul.f32	s0, s0, s14
 9231              	.LVL573:
 501:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9232              		.loc 20 501 9 is_stmt 1 view .LVU2524
 9233              	.LBB1891:
 9234              	.LBB1869:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9235              		.loc 12 57 33 is_stmt 0 view .LVU2525
 9236 013c 36EEE25A 		vsub.f32	s10, s13, s5
 9237              	.LBE1869:
 9238              	.LBE1891:
 9239              	.LBB1892:
 9240              	.LBB1882:
 9241 0140 76EEE35A 		vsub.f32	s11, s13, s7
 9242              	.LBE1882:
 9243              	.LBE1892:
 9244              	.LBB1893:
 9245              	.LBB1870:
 9246              		.loc 12 65 45 view .LVU2526
 9247 0144 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9248              		.loc 12 57 37 view .LVU2527
 9249 0148 25EE065A 		vmul.f32	s10, s10, s12
 9250              	.LBE1870:
 9251              	.LBE1893:
 501:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9252              		.loc 20 501 36 view .LVU2528
 9253 014c 93ED006A 		vldr.32	s12, [r3]
 9254              	.LBB1894:
 9255              	.LBB1883:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9256              		.loc 12 57 37 view .LVU2529
 9257 0150 65EEA75A 		vmul.f32	s11, s11, s15
 9258              		.loc 12 65 45 view .LVU2530
 9259 0154 76EEC47A 		vsub.f32	s15, s13, s8
 9260              	.LBE1883:
 9261              	.LBE1894:
 9262              	.LBB1895:
 9263              	.LBB1871:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 301


  57:envFollow.h   ****         sample_noDC = sample - avg;
 9264              		.loc 12 57 28 view .LVU2531
 9265 0158 A4EEA25A 		vfma.f32	s10, s9, s5
 9266              	.LBE1871:
 9267              	.LBE1895:
 9268              	.LBB1896:
 9269              	.LBB1884:
 9270 015c E0EE235A 		vfma.f32	s11, s0, s7
 9271              		.loc 12 65 53 view .LVU2532
 9272 0160 67EE827A 		vmul.f32	s15, s15, s4
 9273              	.LBE1884:
 9274              	.LBE1896:
 9275              	.LBB1897:
 9276              	.LBB1872:
 9277 0164 27EE017A 		vmul.f32	s14, s14, s2
 9278              	.LBE1872:
 9279              	.LBE1897:
 501:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9280              		.loc 20 501 36 view .LVU2533
 9281 0168 76EEC66A 		vsub.f32	s13, s13, s12
 9282              	.LBB1898:
 9283              	.LBB1873:
  58:envFollow.h   **** 
 9284              		.loc 12 58 30 view .LVU2534
 9285 016c 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9286              		.loc 12 57 13 view .LVU2535
 9287 0170 89ED005A 		vstr.32	s10, [r9]
 9288              	.LBE1873:
 9289              	.LBE1898:
 9290              	.LBB1899:
 9291              	.LBB1885:
  58:envFollow.h   **** 
 9292              		.loc 12 58 30 view .LVU2536
 9293 0174 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9294              		.loc 12 57 13 view .LVU2537
 9295 0178 C6ED005A 		vstr.32	s11, [r6]
 9296              	.LBE1885:
 9297              	.LBE1899:
 501:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9298              		.loc 20 501 89 view .LVU2538
 9299 017c 66EE005A 		vmul.f32	s11, s12, s0
 9300              	.LBB1900:
 9301              	.LBB1874:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9302              		.loc 12 61 27 view .LVU2539
 9303 0180 F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9304              		.loc 12 58 21 view .LVU2540
 9305 0184 89ED022A 		vstr.32	s4, [r9, #8]
 9306              	.LBE1874:
 9307              	.LBE1900:
 9308              	.LBB1901:
 9309              	.LBB1886:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9310              		.loc 12 61 27 view .LVU2541
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 302


 9311 0188 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9312              		.loc 12 58 21 view .LVU2542
 9313 018c C6ED022A 		vstr.32	s5, [r6, #8]
 9314              	.LBE1886:
 9315              	.LBE1901:
 502:Veno-Echo.cpp **** 
 9316              		.loc 20 502 89 view .LVU2543
 9317 0190 26EE246A 		vmul.f32	s12, s12, s9
 9318              	.LBB1902:
 9319              	.LBB1875:
 9320              		.loc 12 65 40 view .LVU2544
 9321 0194 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9322              		.loc 12 61 20 view .LVU2545
 9323 0198 C9ED013A 		vstr.32	s7, [r9, #4]
 9324              	.LBE1875:
 9325              	.LBE1902:
 9326              	.LBB1903:
 9327              	.LBB1887:
 9328              		.loc 12 65 40 view .LVU2546
 9329 019c E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9330              		.loc 12 61 20 view .LVU2547
 9331 01a0 86ED015A 		vstr.32	s10, [r6, #4]
 9332              	.LBE1887:
 9333              	.LBE1903:
 501:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9334              		.loc 20 501 15 view .LVU2548
 9335 01a4 E6EEA45A 		vfma.f32	s11, s13, s9
 9336              	.LVL574:
 502:Veno-Echo.cpp **** 
 9337              		.loc 20 502 9 is_stmt 1 view .LVU2549
 502:Veno-Echo.cpp **** 
 9338              		.loc 20 502 15 is_stmt 0 view .LVU2550
 9339 01a8 A6EE806A 		vfma.f32	s12, s13, s0
 9340              	.LVL575:
 506:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9341              		.loc 20 506 9 is_stmt 1 view .LVU2551
 9342              	.LBB1904:
 9343              	.LBI1865:
  54:envFollow.h   ****     {
 9344              		.loc 12 54 11 view .LVU2552
 9345              	.LBB1876:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9346              		.loc 12 57 9 view .LVU2553
  58:envFollow.h   **** 
 9347              		.loc 12 58 9 view .LVU2554
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9348              		.loc 12 61 9 view .LVU2555
 9349              		.loc 12 65 9 view .LVU2556
 9350              	.LBE1876:
 9351              	.LBE1904:
 510:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9352              		.loc 20 510 13 is_stmt 0 view .LVU2557
 9353 01ac B4EEE17A 		vcmpe.f32	s14, s3
 9354              	.LBB1905:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 303


 9355              	.LBB1877:
 9356              		.loc 12 65 17 view .LVU2558
 9357 01b0 89ED037A 		vstr.32	s14, [r9, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9358              		.loc 12 67 9 is_stmt 1 view .LVU2559
 9359              	.LVL576:
 9360              		.loc 12 67 9 is_stmt 0 view .LVU2560
 9361              	.LBE1877:
 9362              	.LBE1905:
 507:Veno-Echo.cpp **** 
 9363              		.loc 20 507 9 is_stmt 1 view .LVU2561
 9364              	.LBB1906:
 9365              	.LBI1879:
  54:envFollow.h   ****     {
 9366              		.loc 12 54 11 view .LVU2562
 9367              	.LBB1888:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9368              		.loc 12 57 9 view .LVU2563
  58:envFollow.h   **** 
 9369              		.loc 12 58 9 view .LVU2564
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9370              		.loc 12 61 9 view .LVU2565
  65:envFollow.h   **** 
 9371              		.loc 12 65 9 view .LVU2566
  65:envFollow.h   **** 
 9372              		.loc 12 65 17 is_stmt 0 view .LVU2567
 9373 01b4 C6ED037A 		vstr.32	s15, [r6, #12]
 9374              		.loc 12 67 9 is_stmt 1 view .LVU2568
 9375              	.LVL577:
 9376              		.loc 12 67 9 is_stmt 0 view .LVU2569
 9377              	.LBE1888:
 9378              	.LBE1906:
 510:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9379              		.loc 20 510 13 is_stmt 1 view .LVU2570
 9380 01b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9381 01bc C0F2EA83 		blt	.L635
 511:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9382              		.loc 20 511 17 view .LVU2571
 511:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9383              		.loc 20 511 32 is_stmt 0 view .LVU2572
 9384 01c0 37EE617A 		vsub.f32	s14, s14, s3
 9385              	.LVL578:
 511:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9386              		.loc 20 511 47 view .LVU2573
 9387 01c4 F0EE086A 		vmov.f32	s13, #3.0e+0
 9388 01c8 27EE267A 		vmul.f32	s14, s14, s13
 9389              	.L555:
 515:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9390              		.loc 20 515 13 view .LVU2574
 9391 01cc DFED996A 		vldr.32	s13, .L649+16
 9392 01d0 964B     		ldr	r3, .L649+8
 9393 01d2 F4EEE67A 		vcmpe.f32	s15, s13
 9394 01d6 83ED007A 		vstr.32	s14, [r3]
 515:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9395              		.loc 20 515 13 is_stmt 1 view .LVU2575
 9396 01da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 304


 9397 01de C0F2D683 		blt	.L636
 516:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9398              		.loc 20 516 17 view .LVU2576
 516:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9399              		.loc 20 516 32 is_stmt 0 view .LVU2577
 9400 01e2 77EEE67A 		vsub.f32	s15, s15, s13
 9401              	.LVL579:
 516:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9402              		.loc 20 516 47 view .LVU2578
 9403 01e6 B0EE087A 		vmov.f32	s14, #3.0e+0
 9404 01ea 67EE877A 		vmul.f32	s15, s15, s14
 9405              	.L557:
 9406 01ee 924B     		ldr	r3, .L649+20
 520:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9407              		.loc 20 520 42 view .LVU2579
 9408 01f0 78EEA58A 		vadd.f32	s17, s17, s11
 9409              	.LVL580:
 521:Veno-Echo.cpp ****  
 9410              		.loc 20 521 42 view .LVU2580
 9411 01f4 38EE066A 		vadd.f32	s12, s16, s12
 9412              	.LVL581:
 521:Veno-Echo.cpp ****  
 9413              		.loc 20 521 42 view .LVU2581
 9414 01f8 C3ED007A 		vstr.32	s15, [r3]
 520:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9415              		.loc 20 520 9 is_stmt 1 view .LVU2582
 521:Veno-Echo.cpp ****  
 9416              		.loc 20 521 9 view .LVU2583
 524:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9417              		.loc 20 524 9 view .LVU2584
 9418              	.LVL582:
 9419              	.LBB1907:
 9420              	.LBI1907:
2002:Veno-Echo.cpp **** {
 9421              		.loc 20 2002 7 view .LVU2585
 9422              	.LBB1908:
2004:Veno-Echo.cpp ****     if (input > limit)
 9423              		.loc 20 2004 5 view .LVU2586
2005:Veno-Echo.cpp ****         returnval = limit;
 9424              		.loc 20 2005 5 view .LVU2587
 9425 01fc F0EE007A 		vmov.f32	s15, #2.0e+0
 9426 0200 F4EEE78A 		vcmpe.f32	s17, s15
 9427 0204 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9428 0208 00F36384 		bgt	.L589
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9429              		.loc 20 2007 10 view .LVU2588
 9430 020c F8EE007A 		vmov.f32	s15, #-2.0e+0
2008:Veno-Echo.cpp ****     else
 9431              		.loc 20 2008 19 is_stmt 0 view .LVU2589
 9432 0210 F4EE678A 		vcmp.f32	s17, s15
 9433 0214 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9434 0218 48BF     		it	mi
 9435 021a F0EE678A 		vmovmi.f32	s17, s15
 9436              	.LVL583:
 9437              	.L559:
2012:Veno-Echo.cpp **** }
 9438              		.loc 20 2012 5 is_stmt 1 view .LVU2590
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 305


2012:Veno-Echo.cpp **** }
 9439              		.loc 20 2012 5 is_stmt 0 view .LVU2591
 9440              	.LBE1908:
 9441              	.LBE1907:
 9442              	.LBB1910:
 9443              	.LBB1911:
2005:Veno-Echo.cpp ****         returnval = limit;
 9444              		.loc 20 2005 5 view .LVU2592
 9445 021e F0EE007A 		vmov.f32	s15, #2.0e+0
 9446              	.LBE1911:
 9447              	.LBE1910:
 524:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9448              		.loc 20 524 19 view .LVU2593
 9449 0222 CDED0E8A 		vstr.32	s17, [sp, #56]
 525:Veno-Echo.cpp **** 
 9450              		.loc 20 525 9 is_stmt 1 view .LVU2594
 9451              	.LVL584:
 9452              	.LBB1914:
 9453              	.LBI1910:
2002:Veno-Echo.cpp **** {
 9454              		.loc 20 2002 7 view .LVU2595
 9455              	.LBB1912:
2004:Veno-Echo.cpp ****     if (input > limit)
 9456              		.loc 20 2004 5 view .LVU2596
2005:Veno-Echo.cpp ****         returnval = limit;
 9457              		.loc 20 2005 5 view .LVU2597
 9458 0226 B4EEE76A 		vcmpe.f32	s12, s15
 9459 022a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9460 022e 00F34C84 		bgt	.L590
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9461              		.loc 20 2007 10 view .LVU2598
 9462 0232 F8EE007A 		vmov.f32	s15, #-2.0e+0
2008:Veno-Echo.cpp ****     else
 9463              		.loc 20 2008 19 is_stmt 0 view .LVU2599
 9464 0236 B4EE676A 		vcmp.f32	s12, s15
 9465 023a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9466 023e 48BF     		it	mi
 9467 0240 B0EE676A 		vmovmi.f32	s12, s15
 9468              	.LVL585:
 9469              	.L561:
2012:Veno-Echo.cpp **** }
 9470              		.loc 20 2012 5 is_stmt 1 view .LVU2600
2012:Veno-Echo.cpp **** }
 9471              		.loc 20 2012 5 is_stmt 0 view .LVU2601
 9472              	.LBE1912:
 9473              	.LBE1914:
 527:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9474              		.loc 20 527 21 view .LVU2602
 9475 0244 0EA9     		add	r1, sp, #56
 9476 0246 7E48     		ldr	r0, .L649+28
 525:Veno-Echo.cpp **** 
 9477              		.loc 20 525 19 view .LVU2603
 9478 0248 8DED0F6A 		vstr.32	s12, [sp, #60]
 527:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9479              		.loc 20 527 9 is_stmt 1 view .LVU2604
 527:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9480              		.loc 20 527 21 is_stmt 0 view .LVU2605
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 306


 9481 024c FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9482              	.LVL586:
 528:Veno-Echo.cpp **** 
 9483              		.loc 20 528 9 is_stmt 1 view .LVU2606
 528:Veno-Echo.cpp **** 
 9484              		.loc 20 528 21 is_stmt 0 view .LVU2607
 9485 0250 0FA9     		add	r1, sp, #60
 9486 0252 7C48     		ldr	r0, .L649+32
 9487 0254 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9488              	.LVL587:
 531:Veno-Echo.cpp ****         float mixR;
 9489              		.loc 20 531 9 is_stmt 1 view .LVU2608
 532:Veno-Echo.cpp **** 
 9490              		.loc 20 532 9 view .LVU2609
 534:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9491              		.loc 20 534 9 view .LVU2610
 534:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9492              		.loc 20 534 53 is_stmt 0 view .LVU2611
 9493 0258 0DAA     		add	r2, sp, #52
 9494 025a 0CA9     		add	r1, sp, #48
 9495 025c 7A48     		ldr	r0, .L649+36
 9496 025e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9497              	.LVL588:
 535:Veno-Echo.cpp **** 
 9498              		.loc 20 535 53 view .LVU2612
 9499 0262 0CAA     		add	r2, sp, #48
 9500 0264 0DA9     		add	r1, sp, #52
 9501 0266 7848     		ldr	r0, .L649+36
 534:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9502              		.loc 20 534 81 view .LVU2613
 9503 0268 8DED100A 		vstr.32	s0, [sp, #64]
 535:Veno-Echo.cpp **** 
 9504              		.loc 20 535 9 is_stmt 1 view .LVU2614
 535:Veno-Echo.cpp **** 
 9505              		.loc 20 535 53 is_stmt 0 view .LVU2615
 9506 026c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9507              	.LVL589:
 9508              	.LBB1915:
 9509              	.LBB1916:
2005:Veno-Echo.cpp ****         returnval = limit;
 9510              		.loc 20 2005 5 view .LVU2616
 9511 0270 B0EE007A 		vmov.f32	s14, #2.0e+0
 9512              	.LBE1916:
 9513              	.LBE1915:
 538:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9514              		.loc 20 538 38 view .LVU2617
 9515 0274 DDED107A 		vldr.32	s15, [sp, #64]
 538:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9516              		.loc 20 538 9 is_stmt 1 view .LVU2618
 9517              	.LVL590:
 9518              	.LBB1919:
 9519              	.LBI1915:
2002:Veno-Echo.cpp **** {
 9520              		.loc 20 2002 7 view .LVU2619
 9521              	.LBB1917:
2004:Veno-Echo.cpp ****     if (input > limit)
 9522              		.loc 20 2004 5 view .LVU2620
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 307


2005:Veno-Echo.cpp ****         returnval = limit;
 9523              		.loc 20 2005 5 view .LVU2621
 9524 0278 F4EEC77A 		vcmpe.f32	s15, s14
 9525 027c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9526 0280 00F32B84 		bgt	.L591
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9527              		.loc 20 2007 10 view .LVU2622
 9528 0284 B8EE007A 		vmov.f32	s14, #-2.0e+0
2008:Veno-Echo.cpp ****     else
 9529              		.loc 20 2008 19 is_stmt 0 view .LVU2623
 9530 0288 F4EE477A 		vcmp.f32	s15, s14
 9531 028c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9532 0290 48BF     		it	mi
 9533 0292 F0EE477A 		vmovmi.f32	s15, s14
 9534              	.LVL591:
 9535              	.L563:
2012:Veno-Echo.cpp **** }
 9536              		.loc 20 2012 5 is_stmt 1 view .LVU2624
2012:Veno-Echo.cpp **** }
 9537              		.loc 20 2012 5 is_stmt 0 view .LVU2625
 9538              	.LBE1917:
 9539              	.LBE1919:
 9540              	.LBB1920:
 9541              	.LBB1921:
2005:Veno-Echo.cpp ****         returnval = limit;
 9542              		.loc 20 2005 5 view .LVU2626
 9543 0296 B0EE007A 		vmov.f32	s14, #2.0e+0
 9544              	.LBE1921:
 9545              	.LBE1920:
 538:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9546              		.loc 20 538 27 view .LVU2627
 9547 029a CDED107A 		vstr.32	s15, [sp, #64]
 539:Veno-Echo.cpp **** 
 9548              		.loc 20 539 9 is_stmt 1 view .LVU2628
 9549              	.LVL592:
 9550              	.LBB1925:
 9551              	.LBI1920:
2002:Veno-Echo.cpp **** {
 9552              		.loc 20 2002 7 view .LVU2629
 9553              	.LBB1922:
2004:Veno-Echo.cpp ****     if (input > limit)
 9554              		.loc 20 2004 5 view .LVU2630
2005:Veno-Echo.cpp ****         returnval = limit;
 9555              		.loc 20 2005 5 view .LVU2631
 9556 029e B4EEC70A 		vcmpe.f32	s0, s14
 9557 02a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9558 02a6 00F3D982 		bgt	.L592
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9559              		.loc 20 2007 10 view .LVU2632
 9560 02aa B8EE007A 		vmov.f32	s14, #-2.0e+0
 9561              	.LBE1922:
 9562              	.LBE1925:
 9563              	.LBB1926:
 541:Veno-Echo.cpp **** {
 9564              		.loc 20 541 1 is_stmt 0 view .LVU2633
 9565 02ae 5D4B     		ldr	r3, .L649
 9566 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 308


 9567              	.LBE1926:
 9568              	.LBB1949:
 9569              	.LBB1923:
2008:Veno-Echo.cpp ****     else
 9570              		.loc 20 2008 19 view .LVU2634
 9571 02b2 B4EE470A 		vcmp.f32	s0, s14
 9572 02b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9573 02ba 48BF     		it	mi
 9574 02bc B0EE470A 		vmovmi.f32	s0, s14
 9575              	.LVL593:
2012:Veno-Echo.cpp **** }
 9576              		.loc 20 2012 5 is_stmt 1 view .LVU2635
2012:Veno-Echo.cpp **** }
 9577              		.loc 20 2012 5 is_stmt 0 view .LVU2636
 9578              	.LBE1923:
 9579              	.LBE1949:
 539:Veno-Echo.cpp **** 
 9580              		.loc 20 539 27 view .LVU2637
 9581 02c0 8DED110A 		vstr.32	s0, [sp, #68]
 541:Veno-Echo.cpp **** {
 9582              		.loc 20 541 1 is_stmt 1 view .LVU2638
 9583              	.LBB1950:
 9584 02c4 002B     		cmp	r3, #0
 9585 02c6 40F0D282 		bne	.L644
 9586              	.LVL594:
 9587              	.L567:
 541:Veno-Echo.cpp **** {
 9588              		.loc 20 541 1 is_stmt 0 view .LVU2639
 9589              	.LBE1950:
 582:Veno-Echo.cpp ****         {
 9590              		.loc 20 582 9 is_stmt 1 view .LVU2640
 582:Veno-Echo.cpp ****         {
 9591              		.loc 20 582 19 is_stmt 0 view .LVU2641
 9592 02ca 604B     		ldr	r3, .L649+40
 582:Veno-Echo.cpp ****         {
 9593              		.loc 20 582 9 view .LVU2642
 9594 02cc F6EE006A 		vmov.f32	s13, #5.0e-1
 582:Veno-Echo.cpp ****         {
 9595              		.loc 20 582 19 view .LVU2643
 9596 02d0 93ED007A 		vldr.32	s14, [r3]
 582:Veno-Echo.cpp ****         {
 9597              		.loc 20 582 9 view .LVU2644
 9598 02d4 B4EEE67A 		vcmpe.f32	s14, s13
 9599 02d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9600 02dc 40F18F82 		bpl	.L637
 584:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 9601              		.loc 20 584 13 is_stmt 1 view .LVU2645
 584:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 9602              		.loc 20 584 36 is_stmt 0 view .LVU2646
 9603 02e0 37EE077A 		vadd.f32	s14, s14, s14
 584:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 9604              		.loc 20 584 18 view .LVU2647
 9605 02e4 9DED086A 		vldr.32	s12, [sp, #32]
 585:Veno-Echo.cpp ****         }
 9606              		.loc 20 585 18 view .LVU2648
 9607 02e8 DDED096A 		vldr.32	s13, [sp, #36]
 584:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 309


 9608              		.loc 20 584 18 view .LVU2649
 9609 02ec A7EE276A 		vfma.f32	s12, s14, s15
 585:Veno-Echo.cpp ****         }
 9610              		.loc 20 585 18 view .LVU2650
 9611 02f0 E7EE006A 		vfma.f32	s13, s14, s0
 584:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 9612              		.loc 20 584 18 view .LVU2651
 9613 02f4 F0EE467A 		vmov.f32	s15, s12
 9614              	.LVL595:
 585:Veno-Echo.cpp ****         }
 9615              		.loc 20 585 13 is_stmt 1 view .LVU2652
 585:Veno-Echo.cpp ****         }
 9616              		.loc 20 585 18 is_stmt 0 view .LVU2653
 9617 02f8 B0EE660A 		vmov.f32	s0, s13
 9618              	.LVL596:
 9619              	.L573:
 599:Veno-Echo.cpp ****         {
 9620              		.loc 20 599 9 is_stmt 1 view .LVU2654
 9621 02fc 544B     		ldr	r3, .L649+44
 9622 02fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9623 0300 002B     		cmp	r3, #0
 9624 0302 00F07182 		beq	.L576
 601:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 9625              		.loc 20 601 13 view .LVU2655
 601:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 9626              		.loc 20 601 23 is_stmt 0 view .LVU2656
 9627 0306 079B     		ldr	r3, [sp, #28]
 9628 0308 0021     		movs	r1, #0
 9629 030a 0298     		ldr	r0, [sp, #8]
 9630 030c 1A68     		ldr	r2, [r3]
 602:Veno-Echo.cpp ****         }
 9631              		.loc 20 602 23 view .LVU2657
 9632 030e 5B68     		ldr	r3, [r3, #4]
 601:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 9633              		.loc 20 601 23 view .LVU2658
 9634 0310 0244     		add	r2, r2, r0
 602:Veno-Echo.cpp ****         }
 9635              		.loc 20 602 23 view .LVU2659
 9636 0312 0344     		add	r3, r3, r0
 601:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 9637              		.loc 20 601 23 view .LVU2660
 9638 0314 1160     		str	r1, [r2]	@ float
 602:Veno-Echo.cpp ****         }
 9639              		.loc 20 602 13 is_stmt 1 view .LVU2661
 602:Veno-Echo.cpp ****         }
 9640              		.loc 20 602 23 is_stmt 0 view .LVU2662
 9641 0316 1960     		str	r1, [r3]	@ float
 9642              	.L577:
 9643              	.LBE1830:
 383:Veno-Echo.cpp ****     {   
 9644              		.loc 20 383 5 is_stmt 1 discriminator 2 view .LVU2663
 9645 0318 019B     		ldr	r3, [sp, #4]
 383:Veno-Echo.cpp ****     {   
 9646              		.loc 20 383 25 is_stmt 0 discriminator 2 view .LVU2664
 9647 031a 059A     		ldr	r2, [sp, #20]
 383:Veno-Echo.cpp ****     {   
 9648              		.loc 20 383 5 discriminator 2 view .LVU2665
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 310


 9649 031c 0133     		adds	r3, r3, #1
 383:Veno-Echo.cpp ****     {   
 9650              		.loc 20 383 25 discriminator 2 view .LVU2666
 9651 031e 9A42     		cmp	r2, r3
 383:Veno-Echo.cpp ****     {   
 9652              		.loc 20 383 5 discriminator 2 view .LVU2667
 9653 0320 0193     		str	r3, [sp, #4]
 9654              	.LVL597:
 383:Veno-Echo.cpp ****     {   
 9655              		.loc 20 383 25 is_stmt 1 discriminator 2 view .LVU2668
 9656 0322 00F0FB83 		beq	.L506
 9657              	.LVL598:
 9658              	.L524:
 9659              	.LBB2219:
 385:Veno-Echo.cpp ****         Update_Mod();
 9660              		.loc 20 385 9 view .LVU2669
 385:Veno-Echo.cpp ****         Update_Mod();
 9661              		.loc 20 385 20 is_stmt 0 view .LVU2670
 9662 0326 FFF7FEFF 		bl	_Z11UpdateClockv
 9663              	.LVL599:
 386:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 9664              		.loc 20 386 9 is_stmt 1 view .LVU2671
 9665              	.LBB1951:
 9666              	.LBB1952:
 9667              	.LBB1953:
 9668              	.LBB1954:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 311


 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 312


 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9669              		.loc 19 174 71 is_stmt 0 view .LVU2672
 9670 032a DFF88881 		ldr	r8, .L649+144
 9671              	.LBE1954:
 9672              	.LBE1953:
 9673              	.LBE1952:
 9674              	.LBE1951:
 386:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 9675              		.loc 20 386 19 view .LVU2673
 9676 032e FFF7FEFF 		bl	_Z10Update_Modv
 9677              	.LVL600:
 387:Veno-Echo.cpp **** 
 9678              		.loc 20 387 9 is_stmt 1 view .LVU2674
 9679              	.LBB2006:
 9680              	.LBB1989:
 9681              	.LBB1972:
 9682              	.LBB1955:
 9683              		.loc 19 174 46 is_stmt 0 view .LVU2675
 9684 0332 9FED48AA 		vldr.32	s20, .L649+48
 9685              	.LBE1955:
 9686              	.LBE1972:
 9687              	.LBE1989:
 9688              	.LBE2006:
 387:Veno-Echo.cpp **** 
 9689              		.loc 20 387 30 view .LVU2676
 9690 0336 FFF7FEFF 		bl	_Z21Update_DelayBaseTempov
 9691              	.LVL601:
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9692              		.loc 20 390 9 is_stmt 1 view .LVU2677
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9693              		.loc 20 390 51 is_stmt 0 view .LVU2678
 9694 033a 4748     		ldr	r0, .L649+52
 9695 033c FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9696              	.LVL602:
 9697 0340 0146     		mov	r1, r0
 9698 0342 4648     		ldr	r0, .L649+56
 9699              	.LBB2007:
 9700              	.LBB1990:
 9701              	.LBB1973:
 9702              	.LBB1956:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9703              		.loc 19 175 77 view .LVU2679
 9704 0344 F7EE00AA 		vmov.f32	s21, #1.0e+0
 9705              	.LBE1956:
 9706              	.LBE1973:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 313


 9707              	.LBE1990:
 9708              	.LBE2007:
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9709              		.loc 20 390 51 view .LVU2680
 9710 0348 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9711              	.LVL603:
 391:Veno-Echo.cpp ****         
 9712              		.loc 20 391 51 view .LVU2681
 9713 034c 4448     		ldr	r0, .L649+60
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9714              		.loc 20 390 51 view .LVU2682
 9715 034e B0EE40CA 		vmov.f32	s24, s0
 9716              	.LVL604:
 391:Veno-Echo.cpp ****         
 9717              		.loc 20 391 9 is_stmt 1 view .LVU2683
 391:Veno-Echo.cpp ****         
 9718              		.loc 20 391 51 is_stmt 0 view .LVU2684
 9719 0352 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9720              	.LVL605:
 391:Veno-Echo.cpp ****         
 9721              		.loc 20 391 51 view .LVU2685
 9722 0356 0146     		mov	r1, r0
 9723 0358 4248     		ldr	r0, .L649+64
 9724 035a FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9725              	.LVL606:
 9726 035e 019C     		ldr	r4, [sp, #4]
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9727              		.loc 20 393 44 view .LVU2686
 9728 0360 4148     		ldr	r0, .L649+68
 391:Veno-Echo.cpp ****         
 9729              		.loc 20 391 51 view .LVU2687
 9730 0362 B0EE409A 		vmov.f32	s18, s0
 9731              	.LVL607:
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9732              		.loc 20 393 9 is_stmt 1 view .LVU2688
 9733 0366 A300     		lsls	r3, r4, #2
 9734              	.LBB2008:
 9735              	.LBB1991:
 9736              	.LBB1974:
 9737              	.LBB1957:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9738              		.loc 19 174 103 is_stmt 0 view .LVU2689
 9739 0368 DFED409A 		vldr.32	s19, .L649+72
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9740              		.loc 19 174 82 view .LVU2690
 9741 036c F6EE028A 		vmov.f32	s17, #5.625e-1
 9742              	.LBE1957:
 9743              	.LBE1974:
 9744              	.LBE1991:
 9745              	.LBE2008:
 9746              	.LBB2009:
 9747              	.LBB2010:
 9748              	.LBB2011:
  92:delayline_reverse.h ****         
 9749              		.loc 19 92 45 view .LVU2691
 9750 0370 DFF844A1 		ldr	r10, .L649+148
 9751 0374 0293     		str	r3, [sp, #8]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 314


 9752              	.LBE2011:
 9753              	.LBE2010:
 9754              	.LBE2009:
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9755              		.loc 20 393 44 view .LVU2692
 9756 0376 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9757              	.LVL608:
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9758              		.loc 20 393 44 view .LVU2693
 9759 037a 0146     		mov	r1, r0
 9760 037c 3C48     		ldr	r0, .L649+76
 9761 037e FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9762              	.LVL609:
 394:Veno-Echo.cpp ****         float Left_In = in[0][i];
 9763              		.loc 20 394 44 view .LVU2694
 9764 0382 3C48     		ldr	r0, .L649+80
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9765              		.loc 20 393 44 view .LVU2695
 9766 0384 B0EE408A 		vmov.f32	s16, s0
 9767              	.LVL610:
 394:Veno-Echo.cpp ****         float Left_In = in[0][i];
 9768              		.loc 20 394 9 is_stmt 1 view .LVU2696
 394:Veno-Echo.cpp ****         float Left_In = in[0][i];
 9769              		.loc 20 394 44 is_stmt 0 view .LVU2697
 9770 0388 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9771              	.LVL611:
 394:Veno-Echo.cpp ****         float Left_In = in[0][i];
 9772              		.loc 20 394 44 view .LVU2698
 9773 038c 0146     		mov	r1, r0
 9774 038e 3A48     		ldr	r0, .L649+84
 9775 0390 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9776              	.LVL612:
 395:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9777              		.loc 20 395 32 view .LVU2699
 9778 0394 0699     		ldr	r1, [sp, #24]
 419:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9779              		.loc 20 419 49 view .LVU2700
 9780 0396 394A     		ldr	r2, .L649+88
 394:Veno-Echo.cpp ****         float Left_In = in[0][i];
 9781              		.loc 20 394 44 view .LVU2701
 9782 0398 F0EE407A 		vmov.f32	s15, s0
 9783              	.LVL613:
 395:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9784              		.loc 20 395 9 is_stmt 1 view .LVU2702
 395:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9785              		.loc 20 395 32 is_stmt 0 view .LVU2703
 9786 039c 0B68     		ldr	r3, [r1]
 419:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9787              		.loc 20 419 49 view .LVU2704
 9788 039e 1568     		ldr	r5, [r2]
 395:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9789              		.loc 20 395 32 view .LVU2705
 9790 03a0 03EB8402 		add	r2, r3, r4, lsl #2
 396:Veno-Echo.cpp **** 
 9791              		.loc 20 396 33 view .LVU2706
 9792 03a4 4B68     		ldr	r3, [r1, #4]
 9793              	.LBB2032:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 315


 9794              	.LBB1992:
 9795              	.LBB1975:
 9796              	.LBB1958:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9797              		.loc 19 174 71 view .LVU2707
 9798 03a6 05EB0800 		add	r0, r5, r8
 162:delayline_reverse.h **** 
 9799              		.loc 19 162 23 view .LVU2708
 9800 03aa EF68     		ldr	r7, [r5, #12]
 9801              	.LBE1958:
 9802              	.LBE1975:
 9803              	.LBE1992:
 9804              	.LBE2032:
 395:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9805              		.loc 20 395 32 view .LVU2709
 9806 03ac 92ED00FA 		vldr.32	s30, [r2]
 396:Veno-Echo.cpp **** 
 9807              		.loc 20 396 33 view .LVU2710
 9808 03b0 03EB8403 		add	r3, r3, r4, lsl #2
 9809              	.LBB2033:
 9810              	.LBB1993:
 9811              	.LBB1976:
 9812              	.LBB1959:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9813              		.loc 19 174 71 view .LVU2711
 9814 03b4 90ED00BA 		vldr.32	s22, [r0]
 162:delayline_reverse.h **** 
 9815              		.loc 19 162 11 view .LVU2712
 9816 03b8 05EB8702 		add	r2, r5, r7, lsl #2
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9817              		.loc 19 174 71 view .LVU2713
 9818 03bc 0490     		str	r0, [sp, #16]
 9819              	.LBE1959:
 9820              	.LBE1976:
 9821              	.LBE1993:
 9822              	.LBE2033:
 9823              	.LBB2034:
 9824              	.LBB2035:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9825              		.loc 11 60 42 view .LVU2714
 9826 03be 3048     		ldr	r0, .L649+92
 9827              	.LBE2035:
 9828              	.LBE2034:
 9829              	.LBB2038:
 9830              	.LBB1994:
 9831              	.LBB1977:
 9832              	.LBB1960:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9833              		.loc 19 174 46 view .LVU2715
 9834 03c0 2BEE0A0A 		vmul.f32	s0, s22, s20
 9835              	.LVL614:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9836              		.loc 19 174 46 view .LVU2716
 9837              	.LBE1960:
 9838              	.LBE1977:
 9839              	.LBE1994:
 9840              	.LBE2038:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 316


 395:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9841              		.loc 20 395 15 view .LVU2717
 9842 03c4 8DED08FA 		vstr.32	s30, [sp, #32]
 396:Veno-Echo.cpp **** 
 9843              		.loc 20 396 9 is_stmt 1 view .LVU2718
 9844              	.LBB2039:
 9845              	.LBB1995:
 9846              	.LBB1978:
 9847              	.LBB1961:
 9848              		.loc 19 175 77 is_stmt 0 view .LVU2719
 9849 03c8 7AEECBCA 		vsub.f32	s25, s21, s22
 9850              	.LBE1961:
 9851              	.LBE1978:
 9852              	.LBE1995:
 9853              	.LBE2039:
 396:Veno-Echo.cpp **** 
 9854              		.loc 20 396 33 view .LVU2720
 9855 03cc D3ED00BA 		vldr.32	s23, [r3]
 9856              	.LBB2040:
 9857              	.LBB2036:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9858              		.loc 11 60 42 view .LVU2721
 9859 03d0 80ED00CA 		vstr.32	s24, [r0]
 9860              	.LBE2036:
 9861              	.LBE2040:
 9862              	.LBB2041:
 9863              	.LBB2042:
 9864 03d4 2B48     		ldr	r0, .L649+96
 9865              	.LBE2042:
 9866              	.LBE2041:
 412:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9867              		.loc 20 412 27 view .LVU2722
 9868 03d6 2C4B     		ldr	r3, .L649+100
 9869              	.LBB2045:
 9870              	.LBB2043:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9871              		.loc 11 60 42 view .LVU2723
 9872 03d8 80ED009A 		vstr.32	s18, [r0]
 9873              	.LBE2043:
 9874              	.LBE2045:
 9875              	.LBB2046:
 9876              	.LBB2047:
 9877 03dc 2B48     		ldr	r0, .L649+104
 9878              	.LBE2047:
 9879              	.LBE2046:
 412:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9880              		.loc 20 412 27 view .LVU2724
 9881 03de 1B68     		ldr	r3, [r3]	@ float
 9882              	.LBB2050:
 9883              	.LBB2048:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9884              		.loc 11 60 42 view .LVU2725
 9885 03e0 80ED008A 		vstr.32	s16, [r0]
 9886              	.LBE2048:
 9887              	.LBE2050:
 9888              	.LBB2051:
 9889              	.LBB2052:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 317


 9890 03e4 2A48     		ldr	r0, .L649+108
 9891              	.LBE2052:
 9892              	.LBE2051:
 9893              	.LBB2055:
 9894              	.LBB1996:
 9895              	.LBB1979:
 9896              	.LBB1962:
 162:delayline_reverse.h **** 
 9897              		.loc 19 162 11 view .LVU2726
 9898 03e6 92ED06EA 		vldr.32	s28, [r2, #24]
 9899              	.LBE1962:
 9900              	.LBE1979:
 9901              	.LBE1996:
 9902              	.LBE2055:
 9903              	.LBB2056:
 9904              	.LBB2053:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9905              		.loc 11 60 42 view .LVU2727
 9906 03ea 80ED008A 		vstr.32	s16, [r0]
 9907              	.LBE2053:
 9908              	.LBE2056:
 9909              	.LBB2057:
 9910              	.LBB2058:
 9911 03ee 2948     		ldr	r0, .L649+112
 9912              	.LBE2058:
 9913              	.LBE2057:
 9914              	.LBB2061:
 9915              	.LBB2062:
 9916 03f0 294A     		ldr	r2, .L649+116
 9917              	.LBE2062:
 9918              	.LBE2061:
 9919              	.LBB2065:
 9920              	.LBB2059:
 9921 03f2 80ED008A 		vstr.32	s16, [r0]
 9922              	.LBE2059:
 9923              	.LBE2065:
 9924              	.LBB2066:
 9925              	.LBB2067:
 9926 03f6 2948     		ldr	r0, .L649+120
 9927              	.LBE2067:
 9928              	.LBE2066:
 9929              	.LBB2070:
 9930              	.LBB2063:
 9931 03f8 1360     		str	r3, [r2]	@ float
 9932              	.LBE2063:
 9933              	.LBE2070:
 9934              	.LBB2071:
 9935              	.LBB2068:
 9936 03fa 80ED008A 		vstr.32	s16, [r0]
 9937              	.LBE2068:
 9938              	.LBE2071:
 9939              	.LBB2072:
 9940              	.LBB2073:
 9941 03fe 2848     		ldr	r0, .L649+124
 9942              	.LBE2073:
 9943              	.LBE2072:
 9944              	.LBB2076:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 318


 9945              	.LBB2077:
 9946 0400 284A     		ldr	r2, .L649+128
 9947              	.LBE2077:
 9948              	.LBE2076:
 9949              	.LBB2080:
 9950              	.LBB2074:
 9951 0402 C0ED007A 		vstr.32	s15, [r0]
 9952              	.LBE2074:
 9953              	.LBE2080:
 9954              	.LBB2081:
 9955              	.LBB2082:
 9956 0406 2848     		ldr	r0, .L649+132
 9957              	.LBE2082:
 9958              	.LBE2081:
 9959              	.LBB2085:
 9960              	.LBB2078:
 9961 0408 1360     		str	r3, [r2]	@ float
 9962              	.LBE2078:
 9963              	.LBE2085:
 9964              	.LBB2086:
 9965              	.LBB2083:
 9966 040a C0ED007A 		vstr.32	s15, [r0]
 9967              	.LBE2083:
 9968              	.LBE2086:
 9969              	.LBB2087:
 9970              	.LBB2088:
 9971 040e 274A     		ldr	r2, .L649+136
 9972              	.LBE2088:
 9973              	.LBE2087:
 9974              	.LBB2091:
 9975              	.LBB2092:
 9976 0410 2748     		ldr	r0, .L649+140
 9977              	.LBE2092:
 9978              	.LBE2091:
 9979              	.LBB2095:
 9980              	.LBB1997:
 9981              	.LBB1980:
 9982              	.LBB1963:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9983              		.loc 19 161 22 view .LVU2728
 9984 0412 D5F808B0 		ldr	fp, [r5, #8]
 9985              	.LBE1963:
 9986              	.LBE1980:
 9987              	.LBE1997:
 9988              	.LBE2095:
 9989              	.LBB2096:
 9990              	.LBB2093:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9991              		.loc 11 60 42 view .LVU2729
 9992 0416 C0ED007A 		vstr.32	s15, [r0]
 9993              	.LBE2093:
 9994              	.LBE2096:
 9995              	.LBB2097:
 9996              	.LBB2089:
 9997 041a 1360     		str	r3, [r2]	@ float
 9998              	.LBE2089:
 9999              	.LBE2097:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 319


 10000              	.LBB2098:
 10001              	.LBB1998:
 10002              	.LBB1981:
 10003              	.LBB1964:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10004              		.loc 19 161 11 view .LVU2730
 10005 041c 05EB8B01 		add	r1, r5, fp, lsl #2
 10006 0420 4CE0     		b	.L650
 10007              	.L651:
 10008 0422 00BF     		.align	2
 10009              	.L649:
 10010 0424 00000000 		.word	.LANCHOR83
 10011 0428 00000000 		.word	.LANCHOR32
 10012 042c 00000000 		.word	.LANCHOR128
 10013 0430 00000000 		.word	.LANCHOR44
 10014 0434 CDCCCC3E 		.word	1053609165
 10015 0438 00000000 		.word	.LANCHOR129
 10016 043c 00000000 		.word	.LANCHOR72
 10017 0440 00000000 		.word	.LANCHOR0
 10018 0444 00000000 		.word	.LANCHOR1
 10019 0448 00000000 		.word	.LANCHOR65
 10020 044c 00000000 		.word	.LANCHOR56
 10021 0450 00000000 		.word	.LANCHOR113
 10022 0454 DB0FC93F 		.word	1070141403
 10023 0458 00000000 		.word	.LANCHOR93
 10024 045c 00000000 		.word	.LANCHOR102
 10025 0460 00000000 		.word	.LANCHOR94
 10026 0464 00000000 		.word	.LANCHOR103
 10027 0468 00000000 		.word	.LANCHOR96
 10028 046c E4CB9640 		.word	1083624420
 10029 0470 00000000 		.word	.LANCHOR105
 10030 0474 00000000 		.word	.LANCHOR95
 10031 0478 00000000 		.word	.LANCHOR104
 10032 047c 00000000 		.word	.LANCHOR2
 10033 0480 00000000 		.word	.LANCHOR106
 10034 0484 00000000 		.word	.LANCHOR107
 10035 0488 00000000 		.word	.LANCHOR80
 10036 048c 00000000 		.word	.LANCHOR116
 10037 0490 00000000 		.word	.LANCHOR117
 10038 0494 00000000 		.word	.LANCHOR120
 10039 0498 00000000 		.word	.LANCHOR124
 10040 049c 00000000 		.word	.LANCHOR121
 10041 04a0 00000000 		.word	.LANCHOR118
 10042 04a4 00000000 		.word	.LANCHOR125
 10043 04a8 00000000 		.word	.LANCHOR119
 10044 04ac 00000000 		.word	.LANCHOR126
 10045 04b0 00000000 		.word	.LANCHOR122
 10046 04b4 209F2400 		.word	2400032
 10047 04b8 C1270900 		.word	600001
 10048              	.L650:
 10049              	.LBE1964:
 10050              	.LBE1981:
 10051              	.LBE1998:
 10052              	.LBE2098:
 10053              	.LBB2099:
 10054              	.LBB2100:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 320


 10055              		.loc 11 60 42 view .LVU2731
 10056 04bc D848     		ldr	r0, .L652
 10057              	.LBE2100:
 10058              	.LBE2099:
 10059              	.LBB2103:
 10060              	.LBB2104:
 10061 04be D94A     		ldr	r2, .L652+4
 10062              	.LBE2104:
 10063              	.LBE2103:
 10064              	.LBB2107:
 10065              	.LBB2101:
 10066 04c0 C0ED007A 		vstr.32	s15, [r0]
 10067              	.LBE2101:
 10068              	.LBE2107:
 10069              	.LBB2108:
 10070              	.LBB2105:
 10071 04c4 1360     		str	r3, [r2]	@ float
 10072              	.LBE2105:
 10073              	.LBE2108:
 10074              	.LBB2109:
 10075              	.LBB1999:
 10076              	.LBB1982:
 10077              	.LBB1965:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10078              		.loc 19 161 11 view .LVU2732
 10079 04c6 D1ED06EA 		vldr.32	s29, [r1, #24]
 10080              	.LBE1965:
 10081              	.LBE1982:
 10082              	.LBE1999:
 10083              	.LBE2109:
 396:Veno-Echo.cpp **** 
 10084              		.loc 20 396 15 view .LVU2733
 10085 04ca CDED09BA 		vstr.32	s23, [sp, #36]
 399:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 10086              		.loc 20 399 9 is_stmt 1 view .LVU2734
 10087              	.LVL615:
 10088              	.LBB2110:
 10089              	.LBI2034:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10090              		.loc 11 60 17 view .LVU2735
 10091              	.LBB2037:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10092              		.loc 11 60 37 view .LVU2736
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10093              		.loc 11 60 37 is_stmt 0 view .LVU2737
 10094              	.LBE2037:
 10095              	.LBE2110:
 400:Veno-Echo.cpp ****         
 10096              		.loc 20 400 9 is_stmt 1 view .LVU2738
 10097              	.LBB2111:
 10098              	.LBI2041:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10099              		.loc 11 60 17 view .LVU2739
 10100              	.LBB2044:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10101              		.loc 11 60 37 view .LVU2740
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 321


 10102              		.loc 11 60 37 is_stmt 0 view .LVU2741
 10103              	.LBE2044:
 10104              	.LBE2111:
 402:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 10105              		.loc 20 402 9 is_stmt 1 view .LVU2742
 10106              	.LBB2112:
 10107              	.LBI2046:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10108              		.loc 11 60 17 view .LVU2743
 10109              	.LBB2049:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10110              		.loc 11 60 37 view .LVU2744
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10111              		.loc 11 60 37 is_stmt 0 view .LVU2745
 10112              	.LBE2049:
 10113              	.LBE2112:
 403:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 10114              		.loc 20 403 9 is_stmt 1 view .LVU2746
 10115              	.LBB2113:
 10116              	.LBI2051:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10117              		.loc 11 60 17 view .LVU2747
 10118              	.LBB2054:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10119              		.loc 11 60 37 view .LVU2748
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10120              		.loc 11 60 37 is_stmt 0 view .LVU2749
 10121              	.LBE2054:
 10122              	.LBE2113:
 404:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 10123              		.loc 20 404 9 is_stmt 1 view .LVU2750
 10124              	.LBB2114:
 10125              	.LBI2072:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10126              		.loc 11 60 17 view .LVU2751
 10127              	.LBB2075:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10128              		.loc 11 60 37 view .LVU2752
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10129              		.loc 11 60 37 is_stmt 0 view .LVU2753
 10130              	.LBE2075:
 10131              	.LBE2114:
 405:Veno-Echo.cpp **** 
 10132              		.loc 20 405 9 is_stmt 1 view .LVU2754
 10133              	.LBB2115:
 10134              	.LBI2081:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10135              		.loc 11 60 17 view .LVU2755
 10136              	.LBB2084:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10137              		.loc 11 60 37 view .LVU2756
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10138              		.loc 11 60 37 is_stmt 0 view .LVU2757
 10139              	.LBE2084:
 10140              	.LBE2115:
 407:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 10141              		.loc 20 407 9 is_stmt 1 view .LVU2758
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 322


 10142              	.LBB2116:
 10143              	.LBI2057:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10144              		.loc 11 60 17 view .LVU2759
 10145              	.LBB2060:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10146              		.loc 11 60 37 view .LVU2760
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10147              		.loc 11 60 37 is_stmt 0 view .LVU2761
 10148              	.LBE2060:
 10149              	.LBE2116:
 408:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 10150              		.loc 20 408 9 is_stmt 1 view .LVU2762
 10151              	.LBB2117:
 10152              	.LBI2066:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10153              		.loc 11 60 17 view .LVU2763
 10154              	.LBB2069:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10155              		.loc 11 60 37 view .LVU2764
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10156              		.loc 11 60 37 is_stmt 0 view .LVU2765
 10157              	.LBE2069:
 10158              	.LBE2117:
 409:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 10159              		.loc 20 409 9 is_stmt 1 view .LVU2766
 10160              	.LBB2118:
 10161              	.LBI2091:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10162              		.loc 11 60 17 view .LVU2767
 10163              	.LBB2094:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10164              		.loc 11 60 37 view .LVU2768
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10165              		.loc 11 60 37 is_stmt 0 view .LVU2769
 10166              	.LBE2094:
 10167              	.LBE2118:
 410:Veno-Echo.cpp **** 
 10168              		.loc 20 410 9 is_stmt 1 view .LVU2770
 10169              	.LBB2119:
 10170              	.LBI2099:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10171              		.loc 11 60 17 view .LVU2771
 10172              	.LBB2102:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10173              		.loc 11 60 37 view .LVU2772
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10174              		.loc 11 60 37 is_stmt 0 view .LVU2773
 10175              	.LBE2102:
 10176              	.LBE2119:
 412:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10177              		.loc 20 412 9 is_stmt 1 view .LVU2774
 10178              	.LBB2120:
 10179              	.LBI2061:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10180              		.loc 11 60 17 view .LVU2775
 10181              	.LBB2064:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 323


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10182              		.loc 11 60 37 view .LVU2776
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10183              		.loc 11 60 37 is_stmt 0 view .LVU2777
 10184              	.LBE2064:
 10185              	.LBE2120:
 413:Veno-Echo.cpp **** 
 10186              		.loc 20 413 9 is_stmt 1 view .LVU2778
 10187              	.LBB2121:
 10188              	.LBI2076:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10189              		.loc 11 60 17 view .LVU2779
 10190              	.LBB2079:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10191              		.loc 11 60 37 view .LVU2780
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10192              		.loc 11 60 37 is_stmt 0 view .LVU2781
 10193              	.LBE2079:
 10194              	.LBE2121:
 415:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 10195              		.loc 20 415 9 is_stmt 1 view .LVU2782
 10196              	.LBB2122:
 10197              	.LBI2087:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10198              		.loc 11 60 17 view .LVU2783
 10199              	.LBB2090:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10200              		.loc 11 60 37 view .LVU2784
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10201              		.loc 11 60 37 is_stmt 0 view .LVU2785
 10202              	.LBE2090:
 10203              	.LBE2122:
 416:Veno-Echo.cpp **** 
 10204              		.loc 20 416 9 is_stmt 1 view .LVU2786
 10205              	.LBB2123:
 10206              	.LBI2103:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10207              		.loc 11 60 17 view .LVU2787
 10208              	.LBB2106:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10209              		.loc 11 60 37 view .LVU2788
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10210              		.loc 11 60 37 is_stmt 0 view .LVU2789
 10211              	.LBE2106:
 10212              	.LBE2123:
 419:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10213              		.loc 20 419 9 is_stmt 1 view .LVU2790
 10214              	.LBB2124:
 10215              	.LBI1951:
  79:Veno-Echo.cpp ****     {
 10216              		.loc 20 79 11 view .LVU2791
 10217              	.LBB2000:
  82:Veno-Echo.cpp ****         return read;
 10218              		.loc 20 82 9 view .LVU2792
 10219              	.LBB1983:
 10220              	.LBI1953:
 159:delayline_reverse.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 324


 10221              		.loc 19 159 20 view .LVU2793
 10222              	.LBB1966:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10223              		.loc 19 174 46 is_stmt 0 view .LVU2794
 10224 04ce FFF7FEFF 		bl	sinf
 10225              	.LVL616:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10226              		.loc 19 174 46 view .LVU2795
 10227 04d2 B0EE40CA 		vmov.f32	s24, s0
 10228              	.LVL617:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10229              		.loc 19 174 98 view .LVU2796
 10230 04d6 9FEDD49A 		vldr.32	s18, .L652+8
 10231              	.LVL618:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10232              		.loc 19 174 103 view .LVU2797
 10233 04da 2BEE290A 		vmul.f32	s0, s22, s19
 10234 04de FFF7FEFF 		bl	sinf
 10235              	.LVL619:
 10236 04e2 B0EE408A 		vmov.f32	s16, s0
 10237              	.LVL620:
 10238              		.loc 19 175 46 view .LVU2798
 10239 04e6 2CEE8A0A 		vmul.f32	s0, s25, s20
 10240 04ea FFF7FEFF 		bl	sinf
 10241              	.LVL621:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10242              		.loc 19 174 98 view .LVU2799
 10243 04ee 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10244              		.loc 19 174 82 view .LVU2800
 10245 04f2 ACEE288A 		vfma.f32	s16, s24, s17
 10246              	.LVL622:
 10247              		.loc 19 175 46 view .LVU2801
 10248 04f6 B0EE40CA 		vmov.f32	s24, s0
 10249              		.loc 19 175 112 view .LVU2802
 10250 04fa 2CEEA90A 		vmul.f32	s0, s25, s19
 10251 04fe FFF7FEFF 		bl	sinf
 10252              	.LVL623:
 10253              		.loc 19 175 107 view .LVU2803
 10254 0502 60EE097A 		vmul.f32	s15, s0, s18
 10255              	.LBE1966:
 10256              	.LBE1983:
 10257              	.LBE2000:
 10258              	.LBE2124:
 420:Veno-Echo.cpp **** 
 10259              		.loc 20 420 49 view .LVU2804
 10260 0506 C94B     		ldr	r3, .L652+12
 10261              	.LBB2125:
 10262              	.LBB2001:
 10263              	.LBB1984:
 10264              	.LBB1967:
 10265              		.loc 19 175 91 view .LVU2805
 10266 0508 ECEE287A 		vfma.f32	s15, s24, s17
 10267              	.LVL624:
 10268              		.loc 19 175 91 view .LVU2806
 10269              	.LBE1967:
 10270              	.LBE1984:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 325


 10271              	.LBE2001:
 10272              	.LBE2125:
 420:Veno-Echo.cpp **** 
 10273              		.loc 20 420 49 view .LVU2807
 10274 050c 1C68     		ldr	r4, [r3]
 10275              	.LBB2126:
 10276              	.LBB2002:
 10277              	.LBB1985:
 10278              	.LBB1968:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10279              		.loc 19 174 9 view .LVU2808
 10280 050e 38EE088A 		vadd.f32	s16, s16, s16
 10281              	.LVL625:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10282              		.loc 19 174 9 view .LVU2809
 10283              	.LBE1968:
 10284              	.LBE1985:
 10285              	.LBE2002:
 10286              	.LBE2126:
 10287              	.LBB2127:
 10288              	.LBB2128:
 10289              	.LBB2129:
 10290              	.LBB2130:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10291              		.loc 19 174 71 view .LVU2810
 10292 0512 08EB0401 		add	r1, r8, r4
 162:delayline_reverse.h **** 
 10293              		.loc 19 162 11 view .LVU2811
 10294 0516 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10295              		.loc 19 174 71 view .LVU2812
 10296 051a D1ED00CA 		vldr.32	s25, [r1]
 10297              	.LBE2130:
 10298              	.LBE2129:
 10299              	.LBE2128:
 10300              	.LBE2127:
 10301              	.LBB2155:
 10302              	.LBB2003:
 10303              	.LBB1986:
 10304              	.LBB1969:
 10305              		.loc 19 175 9 view .LVU2813
 10306 051e 77EEA77A 		vadd.f32	s15, s15, s15
 10307              	.LVL626:
 10308              		.loc 19 175 9 view .LVU2814
 10309              	.LBE1969:
 10310              	.LBE1986:
 10311              	.LBE2003:
 10312              	.LBE2155:
 10313              	.LBB2156:
 10314              	.LBB2147:
 10315              	.LBB2139:
 10316              	.LBB2131:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10317              		.loc 19 161 11 view .LVU2815
 10318 0522 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 10319              		.loc 19 162 11 view .LVU2816
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 326


 10320 0526 04EB8303 		add	r3, r4, r3, lsl #2
 10321              		.loc 19 175 77 view .LVU2817
 10322 052a 7AEEECAA 		vsub.f32	s21, s21, s25
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10323              		.loc 19 174 46 view .LVU2818
 10324 052e 2CEE8A0A 		vmul.f32	s0, s25, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10325              		.loc 19 161 11 view .LVU2819
 10326 0532 D2ED06DA 		vldr.32	s27, [r2, #24]
 10327              	.LBE2131:
 10328              	.LBE2139:
 10329              	.LBE2147:
 10330              	.LBE2156:
 10331              	.LBB2157:
 10332              	.LBB2004:
 10333              	.LBB1987:
 10334              	.LBB1970:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 10335              		.loc 19 177 44 view .LVU2820
 10336 0536 67EEAE7A 		vmul.f32	s15, s15, s29
 10337              	.LVL627:
 10338              		.loc 19 177 44 view .LVU2821
 10339              	.LBE1970:
 10340              	.LBE1987:
 10341              	.LBE2004:
 10342              	.LBE2157:
 10343              	.LBB2158:
 10344              	.LBB2148:
 10345              	.LBB2140:
 10346              	.LBB2132:
 162:delayline_reverse.h **** 
 10347              		.loc 19 162 11 view .LVU2822
 10348 053a 93ED06DA 		vldr.32	s26, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10349              		.loc 19 174 71 view .LVU2823
 10350 053e 0391     		str	r1, [sp, #12]
 10351              	.LBE2132:
 10352              	.LBE2140:
 10353              	.LBE2148:
 10354              	.LBE2158:
 10355              	.LBB2159:
 10356              	.LBB2005:
 10357              	.LBB1988:
 10358              	.LBB1971:
 10359              		.loc 19 177 54 view .LVU2824
 10360 0540 EEEE087A 		vfma.f32	s15, s28, s16
 10361              	.LVL628:
 10362              		.loc 19 177 54 view .LVU2825
 10363              	.LBE1971:
 10364              	.LBE1988:
  83:Veno-Echo.cpp ****     }
 10365              		.loc 20 83 9 is_stmt 1 view .LVU2826
  83:Veno-Echo.cpp ****     }
 10366              		.loc 20 83 9 is_stmt 0 view .LVU2827
 10367              	.LBE2005:
 10368              	.LBE2159:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 327


 419:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10369              		.loc 20 419 50 view .LVU2828
 10370 0544 CDED0A7A 		vstr.32	s15, [sp, #40]
 420:Veno-Echo.cpp **** 
 10371              		.loc 20 420 9 is_stmt 1 view .LVU2829
 10372              	.LVL629:
 10373              	.LBB2160:
 10374              	.LBI2127:
  79:Veno-Echo.cpp ****     {
 10375              		.loc 20 79 11 view .LVU2830
 10376              	.LBB2149:
  82:Veno-Echo.cpp ****         return read;
 10377              		.loc 20 82 9 view .LVU2831
 10378              	.LBB2141:
 10379              	.LBI2129:
 159:delayline_reverse.h ****     {
 10380              		.loc 19 159 20 view .LVU2832
 10381              	.LBB2133:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10382              		.loc 19 174 46 is_stmt 0 view .LVU2833
 10383 0548 FFF7FEFF 		bl	sinf
 10384              	.LVL630:
 10385 054c B0EE40CA 		vmov.f32	s24, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10386              		.loc 19 174 103 view .LVU2834
 10387 0550 2CEEA90A 		vmul.f32	s0, s25, s19
 10388 0554 FFF7FEFF 		bl	sinf
 10389              	.LVL631:
 10390 0558 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 10391              		.loc 19 175 46 view .LVU2835
 10392 055c 2AEE8A0A 		vmul.f32	s0, s21, s20
 10393 0560 FFF7FEFF 		bl	sinf
 10394              	.LVL632:
 10395 0564 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 10396              		.loc 19 175 112 view .LVU2836
 10397 0568 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10398              		.loc 19 174 98 view .LVU2837
 10399 056c 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 10400              		.loc 19 175 46 view .LVU2838
 10401 0570 F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 10402              		.loc 19 175 112 view .LVU2839
 10403 0574 FFF7FEFF 		bl	sinf
 10404              	.LVL633:
 175:delayline_reverse.h **** 
 10405              		.loc 19 175 107 view .LVU2840
 10406 0578 60EE097A 		vmul.f32	s15, s0, s18
 10407              	.LBE2133:
 10408              	.LBE2141:
 10409              	.LBE2149:
 10410              	.LBE2160:
 10411              	.LBB2161:
 10412              	.LBB2022:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 328


 10413              	.LBB2012:
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10414              		.loc 19 90 15 view .LVU2841
 10415 057c 6968     		ldr	r1, [r5, #4]
 10416              	.LBE2012:
 10417              	.LBE2022:
 10418              	.LBE2161:
 10419              	.LBB2162:
 10420              	.LBB2150:
 10421              	.LBB2142:
 10422              	.LBB2134:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10423              		.loc 19 174 82 view .LVU2842
 10424 057e ACEE288A 		vfma.f32	s16, s24, s17
 10425              	.LVL634:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10426              		.loc 19 174 82 view .LVU2843
 10427              	.LBE2134:
 10428              	.LBE2142:
 10429              	.LBE2150:
 10430              	.LBE2162:
 10431              	.LBB2163:
 10432              	.LBB2023:
 10433              	.LBB2013:
  92:delayline_reverse.h ****         
 10434              		.loc 19 92 45 view .LVU2844
 10435 0582 8A44     		add	r10, r10, r1
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10436              		.loc 19 90 9 view .LVU2845
 10437 0584 05EB8103 		add	r3, r5, r1, lsl #2
 10438              	.LBE2013:
 10439              	.LBE2023:
 10440              	.LBE2163:
 10441              	.LBB2164:
 10442              	.LBB2151:
 10443              	.LBB2143:
 10444              	.LBB2135:
 175:delayline_reverse.h **** 
 10445              		.loc 19 175 91 view .LVU2846
 10446 0588 E9EEA87A 		vfma.f32	s15, s19, s17
 10447              	.LVL635:
 175:delayline_reverse.h **** 
 10448              		.loc 19 175 91 view .LVU2847
 10449              	.LBE2135:
 10450              	.LBE2143:
 10451              	.LBE2151:
 10452              	.LBE2164:
 10453              	.LBB2165:
 10454              	.LBB2024:
 10455              	.LBB2014:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10456              		.loc 19 98 38 view .LVU2848
 10457 058c A849     		ldr	r1, .L652+16
  95:delayline_reverse.h **** 
 10458              		.loc 19 95 43 view .LVU2849
 10459 058e D5E904E2 		ldrd	lr, r2, [r5, #16]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 329


 10460              		.loc 19 98 38 view .LVU2850
 10461 0592 0BEB010C 		add	ip, fp, r1
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10462              		.loc 19 90 9 view .LVU2851
 10463 0596 83ED06FA 		vstr.32	s30, [r3, #24]
  92:delayline_reverse.h ****         
 10464              		.loc 19 92 57 view .LVU2852
 10465 059a A64B     		ldr	r3, .L652+20
  99:delayline_reverse.h ****  
 10466              		.loc 19 99 38 view .LVU2853
 10467 059c 0F44     		add	r7, r7, r1
  95:delayline_reverse.h **** 
 10468              		.loc 19 95 43 view .LVU2854
 10469 059e 7244     		add	r2, r2, lr
 10470              	.LBE2014:
 10471              	.LBE2024:
 10472              	.LBE2165:
 10473              	.LBB2166:
 10474              	.LBB2152:
 10475              	.LBB2144:
 10476              	.LBB2136:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10477              		.loc 19 174 9 view .LVU2855
 10478 05a0 38EE088A 		vadd.f32	s16, s16, s16
 10479              	.LVL636:
 175:delayline_reverse.h **** 
 10480              		.loc 19 175 9 view .LVU2856
 10481 05a4 37EEA70A 		vadd.f32	s0, s15, s15
 10482              	.LVL637:
 175:delayline_reverse.h **** 
 10483              		.loc 19 175 9 view .LVU2857
 10484              	.LBE2136:
 10485              	.LBE2144:
 10486              	.LBE2152:
 10487              	.LBE2166:
 10488              	.LBB2167:
 10489              	.LBB2025:
 10490              	.LBB2015:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10491              		.loc 19 98 50 view .LVU2858
 10492 05a8 A3FB0C10 		umull	r1, r0, r3, ip
  92:delayline_reverse.h ****         
 10493              		.loc 19 92 57 view .LVU2859
 10494 05ac A3FB0A81 		umull	r8, r1, r3, r10
 10495 05b0 DFF89CB2 		ldr	fp, .L652+48
  95:delayline_reverse.h **** 
 10496              		.loc 19 95 43 view .LVU2860
 10497 05b4 0132     		adds	r2, r2, #1
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10498              		.loc 19 98 50 view .LVU2861
 10499 05b6 800C     		lsrs	r0, r0, #18
 10500              	.LBE2015:
 10501              	.LBE2025:
 10502              	.LBE2167:
 10503              	.LBB2168:
 10504              	.LBB2153:
 10505              	.LBB2145:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 330


 10506              	.LBB2137:
 10507              		.loc 19 177 44 view .LVU2862
 10508 05b8 20EE2D0A 		vmul.f32	s0, s0, s27
 10509              	.LVL638:
 10510              		.loc 19 177 44 view .LVU2863
 10511              	.LBE2137:
 10512              	.LBE2145:
 10513              	.LBE2153:
 10514              	.LBE2168:
 10515              	.LBB2169:
 10516              	.LBB2026:
 10517              	.LBB2016:
  92:delayline_reverse.h ****         
 10518              		.loc 19 92 57 view .LVU2864
 10519 05bc 890C     		lsrs	r1, r1, #18
  99:delayline_reverse.h ****  
 10520              		.loc 19 99 50 view .LVU2865
 10521 05be A3FB0783 		umull	r8, r3, r3, r7
  92:delayline_reverse.h ****         
 10522              		.loc 19 92 57 view .LVU2866
 10523 05c2 0BFB11A1 		mls	r1, fp, r1, r10
 10524              	.LBE2016:
 10525              	.LBE2026:
 10526              	.LBE2169:
 10527              	.LBB2170:
 10528              	.LBB2154:
 10529              	.LBB2146:
 10530              	.LBB2138:
 10531              		.loc 19 177 54 view .LVU2867
 10532 05c6 ADEE080A 		vfma.f32	s0, s26, s16
 10533              	.LVL639:
 10534              		.loc 19 177 54 view .LVU2868
 10535              	.LBE2138:
 10536              	.LBE2146:
  83:Veno-Echo.cpp ****     }
 10537              		.loc 20 83 9 is_stmt 1 view .LVU2869
  83:Veno-Echo.cpp ****     }
 10538              		.loc 20 83 9 is_stmt 0 view .LVU2870
 10539              	.LBE2154:
 10540              	.LBE2170:
 10541              	.LBB2171:
 10542              	.LBB2027:
 10543              	.LBB2017:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10544              		.loc 19 98 50 view .LVU2871
 10545 05ca 0BFB10C0 		mls	r0, fp, r0, ip
  99:delayline_reverse.h ****  
 10546              		.loc 19 99 50 view .LVU2872
 10547 05ce 9B0C     		lsrs	r3, r3, #18
 101:delayline_reverse.h ****         {
 10548              		.loc 19 101 36 view .LVU2873
 10549 05d0 DFF880C2 		ldr	ip, .L652+52
  92:delayline_reverse.h ****         
 10550              		.loc 19 92 9 view .LVU2874
 10551 05d4 6960     		str	r1, [r5, #4]
  99:delayline_reverse.h ****  
 10552              		.loc 19 99 50 view .LVU2875
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 331


 10553 05d6 0BFB1373 		mls	r3, fp, r3, r7
 101:delayline_reverse.h ****         {
 10554              		.loc 19 101 45 view .LVU2876
 10555 05da 0EF1FF3B 		add	fp, lr, #-1
  95:delayline_reverse.h **** 
 10556              		.loc 19 95 54 view .LVU2877
 10557 05de B2FBFEFA 		udiv	r10, r2, lr
 10558 05e2 0EFB1A22 		mls	r2, lr, r10, r2
 10559              	.LBE2017:
 10560              	.LBE2027:
 10561              	.LBE2171:
 420:Veno-Echo.cpp **** 
 10562              		.loc 20 420 50 view .LVU2878
 10563 05e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 423:Veno-Echo.cpp ****         delaysR_REV.Write(Right_In);
 10564              		.loc 20 423 9 is_stmt 1 view .LVU2879
 10565              	.LVL640:
 10566              	.LBB2172:
 10567              	.LBI2009:
  92:Veno-Echo.cpp ****     {
 10568              		.loc 20 92 10 view .LVU2880
  92:Veno-Echo.cpp ****     {
 10569              		.loc 20 92 10 is_stmt 0 view .LVU2881
 10570              	.LBE2172:
 10571              	.LBE2219:
 10572              	.LBE1829:
  94:Veno-Echo.cpp ****     }
 10573              		.loc 20 94 9 is_stmt 1 view .LVU2882
 10574              	.LBB2231:
 10575              	.LBB2220:
 10576              	.LBB2173:
 10577              	.LBB2028:
 10578              	.LBI2010:
  88:delayline_reverse.h ****     {
 10579              		.loc 19 88 17 view .LVU2883
 10580              	.LBB2018:
  95:delayline_reverse.h **** 
 10581              		.loc 19 95 9 is_stmt 0 view .LVU2884
 10582 05ea 6A61     		str	r2, [r5, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10583              		.loc 19 98 9 view .LVU2885
 10584 05ec A860     		str	r0, [r5, #8]
 101:delayline_reverse.h ****         {
 10585              		.loc 19 101 36 view .LVU2886
 10586 05ee 55F80C00 		ldr	r0, [r5, ip]
  99:delayline_reverse.h ****  
 10587              		.loc 19 99 9 view .LVU2887
 10588 05f2 EB60     		str	r3, [r5, #12]
 101:delayline_reverse.h ****         {
 10589              		.loc 19 101 45 view .LVU2888
 10590 05f4 ABEB000B 		sub	fp, fp, r0
 101:delayline_reverse.h ****         {
 10591              		.loc 19 101 9 view .LVU2889
 10592 05f8 5A45     		cmp	r2, fp
 10593 05fa 40F2D480 		bls	.L525
 103:delayline_reverse.h ****             {
 10594              		.loc 19 103 17 view .LVU2890
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 332


 10595 05fe 8E4A     		ldr	r2, .L652+24
 103:delayline_reverse.h ****             {
 10596              		.loc 19 103 13 view .LVU2891
 10597 0600 AF5C     		ldrb	r7, [r5, r2]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10598              		.loc 19 103 17 view .LVU2892
 10599 0602 AB18     		adds	r3, r5, r2
 103:delayline_reverse.h ****             {
 10600              		.loc 19 103 13 view .LVU2893
 10601 0604 002F     		cmp	r7, #0
 10602 0606 40F0D480 		bne	.L640
 107:delayline_reverse.h ****                 {
 10603              		.loc 19 107 21 view .LVU2894
 10604 060a 8C4F     		ldr	r7, .L652+28
 105:delayline_reverse.h ****                 
 10605              		.loc 19 105 17 view .LVU2895
 10606 060c 4FF0010E 		mov	lr, #1
 110:delayline_reverse.h ****                 }
 10607              		.loc 19 110 45 view .LVU2896
 10608 0610 0139     		subs	r1, r1, #1
 107:delayline_reverse.h ****                 {
 10609              		.loc 19 107 17 view .LVU2897
 10610 0612 15F807C0 		ldrb	ip, [r5, r7]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10611              		.loc 19 107 21 view .LVU2898
 10612 0616 2F44     		add	r7, r7, r5
 105:delayline_reverse.h ****                 
 10613              		.loc 19 105 17 view .LVU2899
 10614 0618 05F802E0 		strb	lr, [r5, r2]
 107:delayline_reverse.h ****                 {
 10615              		.loc 19 107 17 view .LVU2900
 10616 061c BCF1000F 		cmp	ip, #0
 10617 0620 40F07882 		bne	.L527
 110:delayline_reverse.h ****                 }
 10618              		.loc 19 110 21 view .LVU2901
 10619 0624 E960     		str	r1, [r5, #12]
 10620              	.L528:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10621              		.loc 19 130 45 view .LVU2902
 10622 0626 07EE900A 		vmov	s15, r0	@ int
 10623 062a B7EE007A 		vmov.f32	s14, #1.0e+0
 10624 062e F8EE676A 		vcvt.f32.u32	s13, s15
 10625 0632 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10626              		.loc 19 130 37 view .LVU2903
 10627 0636 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 10628              		.loc 19 131 17 view .LVU2904
 10629 063a B4EEC7BA 		vcmpe.f32	s22, s14
 10630 063e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10631 0642 40F3CD80 		ble	.L641
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10632              		.loc 19 133 21 view .LVU2905
 10633 0646 0499     		ldr	r1, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10634              		.loc 19 134 21 view .LVU2906
 10635 0648 0022     		movs	r2, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 333


 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10636              		.loc 19 133 21 view .LVU2907
 10637 064a 81ED007A 		vstr.32	s14, [r1]
 135:delayline_reverse.h ****                 }
 10638              		.loc 19 135 21 view .LVU2908
 10639 064e 0121     		movs	r1, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10640              		.loc 19 134 21 view .LVU2909
 10641 0650 1A70     		strb	r2, [r3]
 135:delayline_reverse.h ****                 }
 10642              		.loc 19 135 21 view .LVU2910
 10643 0652 3970     		strb	r1, [r7]
 10644              	.L531:
 10645              	.LVL641:
 135:delayline_reverse.h ****                 }
 10646              		.loc 19 135 21 view .LVU2911
 10647              	.LBE2018:
 10648              	.LBE2028:
 10649              	.LBE2173:
 424:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10650              		.loc 20 424 9 is_stmt 1 view .LVU2912
 10651              	.LBB2174:
 10652              	.LBI2174:
  92:Veno-Echo.cpp ****     {
 10653              		.loc 20 92 10 view .LVU2913
  92:Veno-Echo.cpp ****     {
 10654              		.loc 20 92 10 is_stmt 0 view .LVU2914
 10655              	.LBE2174:
 10656              	.LBE2220:
 10657              	.LBE2231:
  94:Veno-Echo.cpp ****     }
 10658              		.loc 20 94 9 is_stmt 1 view .LVU2915
 10659              	.LBB2232:
 10660              	.LBB2221:
 10661              	.LBB2185:
 10662              	.LBB2175:
 10663              	.LBI2175:
  88:delayline_reverse.h ****     {
 10664              		.loc 19 88 17 view .LVU2916
 10665              	.LBB2176:
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10666              		.loc 19 90 15 is_stmt 0 view .LVU2917
 10667 0654 6568     		ldr	r5, [r4, #4]
  92:delayline_reverse.h ****         
 10668              		.loc 19 92 45 view .LVU2918
 10669 0656 DFF800C2 		ldr	ip, .L652+56
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10670              		.loc 19 98 38 view .LVU2919
 10671 065a A768     		ldr	r7, [r4, #8]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10672              		.loc 19 90 9 view .LVU2920
 10673 065c 04EB8503 		add	r3, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10674              		.loc 19 98 38 view .LVU2921
 10675 0660 7349     		ldr	r1, .L652+16
  92:delayline_reverse.h ****         
 10676              		.loc 19 92 45 view .LVU2922
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 334


 10677 0662 AC44     		add	ip, ip, r5
  99:delayline_reverse.h ****  
 10678              		.loc 19 99 38 view .LVU2923
 10679 0664 E568     		ldr	r5, [r4, #12]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10680              		.loc 19 98 38 view .LVU2924
 10681 0666 0F44     		add	r7, r7, r1
 101:delayline_reverse.h ****         {
 10682              		.loc 19 101 36 view .LVU2925
 10683 0668 DFF8E8A1 		ldr	r10, .L652+52
  99:delayline_reverse.h ****  
 10684              		.loc 19 99 38 view .LVU2926
 10685 066c 0D44     		add	r5, r5, r1
 101:delayline_reverse.h ****         {
 10686              		.loc 19 101 36 view .LVU2927
 10687 066e 54F80AA0 		ldr	r10, [r4, r10]
  95:delayline_reverse.h **** 
 10688              		.loc 19 95 43 view .LVU2928
 10689 0672 D4E90402 		ldrd	r0, r2, [r4, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10690              		.loc 19 90 9 view .LVU2929
 10691 0676 C3ED06BA 		vstr.32	s23, [r3, #24]
  95:delayline_reverse.h **** 
 10692              		.loc 19 95 43 view .LVU2930
 10693 067a 0244     		add	r2, r2, r0
  92:delayline_reverse.h ****         
 10694              		.loc 19 92 57 view .LVU2931
 10695 067c 6D4B     		ldr	r3, .L652+20
 101:delayline_reverse.h ****         {
 10696              		.loc 19 101 45 view .LVU2932
 10697 067e 00F1FF3E 		add	lr, r0, #-1
  95:delayline_reverse.h **** 
 10698              		.loc 19 95 43 view .LVU2933
 10699 0682 0132     		adds	r2, r2, #1
  92:delayline_reverse.h ****         
 10700              		.loc 19 92 57 view .LVU2934
 10701 0684 A3FB0C81 		umull	r8, r1, r3, ip
 101:delayline_reverse.h ****         {
 10702              		.loc 19 101 45 view .LVU2935
 10703 0688 AEEB0A0E 		sub	lr, lr, r10
  92:delayline_reverse.h ****         
 10704              		.loc 19 92 57 view .LVU2936
 10705 068c 890C     		lsrs	r1, r1, #18
  95:delayline_reverse.h **** 
 10706              		.loc 19 95 54 view .LVU2937
 10707 068e B2FBF0FB 		udiv	fp, r2, r0
 10708 0692 00FB1B22 		mls	r2, r0, fp, r2
  92:delayline_reverse.h ****         
 10709              		.loc 19 92 57 view .LVU2938
 10710 0696 DFF8B8B1 		ldr	fp, .L652+48
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10711              		.loc 19 98 50 view .LVU2939
 10712 069a A3FB0780 		umull	r8, r0, r3, r7
  99:delayline_reverse.h ****  
 10713              		.loc 19 99 50 view .LVU2940
 10714 069e A3FB0583 		umull	r8, r3, r3, r5
 101:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 335


 10715              		.loc 19 101 9 view .LVU2941
 10716 06a2 7245     		cmp	r2, lr
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10717              		.loc 19 98 50 view .LVU2942
 10718 06a4 4FEA9040 		lsr	r0, r0, #18
  92:delayline_reverse.h ****         
 10719              		.loc 19 92 57 view .LVU2943
 10720 06a8 0BFB11C1 		mls	r1, fp, r1, ip
  99:delayline_reverse.h ****  
 10721              		.loc 19 99 50 view .LVU2944
 10722 06ac 4FEA9343 		lsr	r3, r3, #18
  95:delayline_reverse.h **** 
 10723              		.loc 19 95 9 view .LVU2945
 10724 06b0 6261     		str	r2, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10725              		.loc 19 98 50 view .LVU2946
 10726 06b2 0BFB1070 		mls	r0, fp, r0, r7
  99:delayline_reverse.h ****  
 10727              		.loc 19 99 50 view .LVU2947
 10728 06b6 0BFB1353 		mls	r3, fp, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10729              		.loc 19 98 9 view .LVU2948
 10730 06ba C4E90110 		strd	r1, r0, [r4, #4]
  99:delayline_reverse.h ****  
 10731              		.loc 19 99 9 view .LVU2949
 10732 06be E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 10733              		.loc 19 101 9 view .LVU2950
 10734 06c0 50D9     		bls	.L535
 103:delayline_reverse.h ****             {
 10735              		.loc 19 103 17 view .LVU2951
 10736 06c2 5D4A     		ldr	r2, .L652+24
 103:delayline_reverse.h ****             {
 10737              		.loc 19 103 13 view .LVU2952
 10738 06c4 A05C     		ldrb	r0, [r4, r2]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10739              		.loc 19 103 17 view .LVU2953
 10740 06c6 A318     		adds	r3, r4, r2
 103:delayline_reverse.h ****             {
 10741              		.loc 19 103 13 view .LVU2954
 10742 06c8 0028     		cmp	r0, #0
 10743 06ca 50D1     		bne	.L642
 107:delayline_reverse.h ****                 {
 10744              		.loc 19 107 21 view .LVU2955
 10745 06cc 5B48     		ldr	r0, .L652+28
 105:delayline_reverse.h ****                 
 10746              		.loc 19 105 17 view .LVU2956
 10747 06ce 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10748              		.loc 19 110 45 view .LVU2957
 10749 06d0 0139     		subs	r1, r1, #1
 107:delayline_reverse.h ****                 {
 10750              		.loc 19 107 17 view .LVU2958
 10751 06d2 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10752              		.loc 19 107 21 view .LVU2959
 10753 06d4 2044     		add	r0, r0, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 336


 105:delayline_reverse.h ****                 
 10754              		.loc 19 105 17 view .LVU2960
 10755 06d6 A754     		strb	r7, [r4, r2]
 107:delayline_reverse.h ****                 {
 10756              		.loc 19 107 17 view .LVU2961
 10757 06d8 002D     		cmp	r5, #0
 10758 06da 40F01D82 		bne	.L537
 110:delayline_reverse.h ****                 }
 10759              		.loc 19 110 21 view .LVU2962
 10760 06de E160     		str	r1, [r4, #12]
 10761              	.L538:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10762              		.loc 19 130 45 view .LVU2963
 10763 06e0 07EE90AA 		vmov	s15, r10	@ int
 10764 06e4 B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10765              		.loc 19 130 37 view .LVU2964
 10766 06e8 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10767              		.loc 19 130 45 view .LVU2965
 10768 06ea B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10769              		.loc 19 130 37 view .LVU2966
 10770 06ee D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10771              		.loc 19 130 45 view .LVU2967
 10772 06f2 C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10773              		.loc 19 130 37 view .LVU2968
 10774 06f6 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 10775              		.loc 19 131 17 view .LVU2969
 10776 06fa F4EEC77A 		vcmpe.f32	s15, s14
 10777 06fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10778 0702 40F31C82 		ble	.L645
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10779              		.loc 19 133 21 view .LVU2970
 10780 0706 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10781              		.loc 19 134 21 view .LVU2971
 10782 0708 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10783              		.loc 19 133 21 view .LVU2972
 10784 070a 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10785              		.loc 19 135 21 view .LVU2973
 10786 070e 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10787              		.loc 19 134 21 view .LVU2974
 10788 0710 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10789              		.loc 19 135 21 view .LVU2975
 10790 0712 0270     		strb	r2, [r0]
 10791              	.LVL642:
 10792              	.L541:
 135:delayline_reverse.h ****                 }
 10793              		.loc 19 135 21 view .LVU2976
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 337


 10794              	.LBE2176:
 10795              	.LBE2175:
 10796              	.LBE2185:
 429:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(Right_In,delayRevSignalR);
 10797              		.loc 20 429 9 is_stmt 1 view .LVU2977
 429:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(Right_In,delayRevSignalR);
 10798              		.loc 20 429 56 is_stmt 0 view .LVU2978
 10799 0714 0AAA     		add	r2, sp, #40
 10800 0716 08A9     		add	r1, sp, #32
 10801 0718 4948     		ldr	r0, .L652+32
 10802 071a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10803              	.LVL643:
 430:Veno-Echo.cpp **** 
 10804              		.loc 20 430 56 view .LVU2979
 10805 071e 0BAA     		add	r2, sp, #44
 10806 0720 09A9     		add	r1, sp, #36
 10807 0722 4848     		ldr	r0, .L652+36
 429:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(Right_In,delayRevSignalR);
 10808              		.loc 20 429 56 view .LVU2980
 10809 0724 F0EE408A 		vmov.f32	s17, s0
 10810              	.LVL644:
 430:Veno-Echo.cpp **** 
 10811              		.loc 20 430 9 is_stmt 1 view .LVU2981
 430:Veno-Echo.cpp **** 
 10812              		.loc 20 430 56 is_stmt 0 view .LVU2982
 10813 0728 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10814              	.LVL645:
 433:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10815              		.loc 20 433 46 view .LVU2983
 10816 072c 4648     		ldr	r0, .L652+40
 430:Veno-Echo.cpp **** 
 10817              		.loc 20 430 56 view .LVU2984
 10818 072e B0EE408A 		vmov.f32	s16, s0
 10819              	.LVL646:
 433:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10820              		.loc 20 433 9 is_stmt 1 view .LVU2985
 433:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10821              		.loc 20 433 46 is_stmt 0 view .LVU2986
 10822 0732 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10823              	.LVL647:
 433:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10824              		.loc 20 433 46 view .LVU2987
 10825 0736 0346     		mov	r3, r0
 434:Veno-Echo.cpp **** 
 10826              		.loc 20 434 46 view .LVU2988
 10827 0738 4448     		ldr	r0, .L652+44
 433:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10828              		.loc 20 433 45 view .LVU2989
 10829 073a 1B68     		ldr	r3, [r3]	@ float
 433:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10830              		.loc 20 433 47 view .LVU2990
 10831 073c 0C93     		str	r3, [sp, #48]	@ float
 434:Veno-Echo.cpp **** 
 10832              		.loc 20 434 9 is_stmt 1 view .LVU2991
 434:Veno-Echo.cpp **** 
 10833              		.loc 20 434 46 is_stmt 0 view .LVU2992
 10834 073e FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 338


 10835              	.LVL648:
 434:Veno-Echo.cpp **** 
 10836              		.loc 20 434 45 view .LVU2993
 10837 0742 0368     		ldr	r3, [r0]	@ float
 434:Veno-Echo.cpp **** 
 10838              		.loc 20 434 47 view .LVU2994
 10839 0744 0D93     		str	r3, [sp, #52]	@ float
 437:Veno-Echo.cpp **** 
 10840              		.loc 20 437 9 is_stmt 1 view .LVU2995
 437:Veno-Echo.cpp **** 
 10841              		.loc 20 437 28 is_stmt 0 view .LVU2996
 10842 0746 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10843              	.LVL649:
 440:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10844              		.loc 20 440 9 is_stmt 1 view .LVU2997
 10845              	.LBB2186:
 10846              	.LBB1833:
2005:Veno-Echo.cpp ****         returnval = limit;
 10847              		.loc 20 2005 5 is_stmt 0 view .LVU2998
 10848 074a B0EE007A 		vmov.f32	s14, #2.0e+0
 10849              	.LBE1833:
 10850              	.LBE2186:
 440:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10851              		.loc 20 440 34 view .LVU2999
 10852 074e DDED0C7A 		vldr.32	s15, [sp, #48]
 10853              	.LVL650:
 10854              	.LBB2187:
 10855              	.LBI1831:
2002:Veno-Echo.cpp **** {
 10856              		.loc 20 2002 7 is_stmt 1 view .LVU3000
 10857              	.LBB1834:
2004:Veno-Echo.cpp ****     if (input > limit)
 10858              		.loc 20 2004 5 view .LVU3001
2005:Veno-Echo.cpp ****         returnval = limit;
 10859              		.loc 20 2005 5 view .LVU3002
 10860 0752 F4EEC77A 		vcmpe.f32	s15, s14
 10861 0756 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10862 075a 7FF797AC 		ble	.L646
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10863              		.loc 20 2006 19 is_stmt 0 view .LVU3003
 10864 075e F0EE477A 		vmov.f32	s15, s14
 10865              	.LVL651:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10866              		.loc 20 2006 19 view .LVU3004
 10867 0762 9CE4     		b	.L545
 10868              	.LVL652:
 10869              	.L535:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10870              		.loc 20 2006 19 view .LVU3005
 10871              	.LBE1834:
 10872              	.LBE2187:
 10873              	.LBB2188:
 10874              	.LBB2181:
 10875              	.LBB2177:
 126:delayline_reverse.h ****         {
 10876              		.loc 19 126 12 view .LVU3006
 10877 0764 344B     		ldr	r3, .L652+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 339


 126:delayline_reverse.h ****         {
 10878              		.loc 19 126 9 view .LVU3007
 10879 0766 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10880              		.loc 19 126 12 view .LVU3008
 10881 0768 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10882              		.loc 19 126 9 view .LVU3009
 10883 076a 002A     		cmp	r2, #0
 10884 076c D2D0     		beq	.L541
 10885              	.L642:
 126:delayline_reverse.h ****         {
 10886              		.loc 19 126 9 view .LVU3010
 10887 076e 334A     		ldr	r2, .L652+28
 10888 0770 A018     		adds	r0, r4, r2
 10889 0772 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10890              		.loc 19 128 13 view .LVU3011
 10891 0774 002A     		cmp	r2, #0
 10892 0776 B3D0     		beq	.L538
 10893              	.L539:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10894              		.loc 19 141 45 view .LVU3012
 10895 0778 07EE90AA 		vmov	s15, r10	@ int
 10896 077c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10897              		.loc 19 141 37 view .LVU3013
 10898 0780 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10899              		.loc 19 142 17 view .LVU3014
 10900 0782 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10901              		.loc 19 141 45 view .LVU3015
 10902 0784 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10903              		.loc 19 141 37 view .LVU3016
 10904 0788 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10905              		.loc 19 141 45 view .LVU3017
 10906 078c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10907              		.loc 19 141 37 view .LVU3018
 10908 0790 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10909              		.loc 19 142 17 view .LVU3019
 10910 0794 F5EEC07A 		vcmpe.f32	s15, #0
 10911 0798 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10912 079c 00F1C381 		bmi	.L544
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10913              		.loc 19 141 17 view .LVU3020
 10914 07a0 C1ED007A 		vstr.32	s15, [r1]
 10915 07a4 B6E7     		b	.L541
 10916              	.LVL653:
 10917              	.L525:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10918              		.loc 19 141 17 view .LVU3021
 10919              	.LBE2177:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 340


 10920              	.LBE2181:
 10921              	.LBE2188:
 10922              	.LBB2189:
 10923              	.LBB2029:
 10924              	.LBB2019:
 126:delayline_reverse.h ****         {
 10925              		.loc 19 126 12 view .LVU3022
 10926 07a6 244B     		ldr	r3, .L652+24
 126:delayline_reverse.h ****         {
 10927              		.loc 19 126 9 view .LVU3023
 10928 07a8 EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10929              		.loc 19 126 12 view .LVU3024
 10930 07aa 2B44     		add	r3, r3, r5
 126:delayline_reverse.h ****         {
 10931              		.loc 19 126 9 view .LVU3025
 10932 07ac 002A     		cmp	r2, #0
 10933 07ae 3FF451AF 		beq	.L531
 10934              	.L640:
 126:delayline_reverse.h ****         {
 10935              		.loc 19 126 9 view .LVU3026
 10936 07b2 224A     		ldr	r2, .L652+28
 10937 07b4 AF18     		adds	r7, r5, r2
 10938 07b6 AA5C     		ldrb	r2, [r5, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10939              		.loc 19 128 13 view .LVU3027
 10940 07b8 002A     		cmp	r2, #0
 10941 07ba 3FF434AF 		beq	.L528
 10942              	.L529:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10943              		.loc 19 141 45 view .LVU3028
 10944 07be 07EE900A 		vmov	s15, r0	@ int
 10945 07c2 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 10946              		.loc 19 142 17 view .LVU3029
 10947 07c6 0021     		movs	r1, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10948              		.loc 19 141 45 view .LVU3030
 10949 07c8 B8EE677A 		vcvt.f32.u32	s14, s15
 10950 07cc C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10951              		.loc 19 141 37 view .LVU3031
 10952 07d0 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 10953              		.loc 19 142 17 view .LVU3032
 10954 07d4 B5EEC0BA 		vcmpe.f32	s22, #0
 10955 07d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10956 07dc 00F1A981 		bmi	.L534
 10957              	.L641:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10958              		.loc 19 141 17 view .LVU3033
 10959 07e0 049B     		ldr	r3, [sp, #16]
 10960 07e2 83ED00BA 		vstr.32	s22, [r3]
 10961 07e6 35E7     		b	.L531
 10962              	.LVL654:
 10963              	.L576:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 341


 10964              		.loc 19 141 17 view .LVU3034
 10965              	.LBE2019:
 10966              	.LBE2029:
 10967              	.LBE2189:
 606:Veno-Echo.cpp ****             out[1][i] = mixR;
 10968              		.loc 20 606 13 is_stmt 1 view .LVU3035
 606:Veno-Echo.cpp ****             out[1][i] = mixR;
 10969              		.loc 20 606 23 is_stmt 0 view .LVU3036
 10970 07e8 079B     		ldr	r3, [sp, #28]
 10971 07ea 0299     		ldr	r1, [sp, #8]
 10972 07ec 1A68     		ldr	r2, [r3]
 607:Veno-Echo.cpp ****         }
 10973              		.loc 20 607 23 view .LVU3037
 10974 07ee 5B68     		ldr	r3, [r3, #4]
 606:Veno-Echo.cpp ****             out[1][i] = mixR;
 10975              		.loc 20 606 23 view .LVU3038
 10976 07f0 0A44     		add	r2, r2, r1
 607:Veno-Echo.cpp ****         }
 10977              		.loc 20 607 23 view .LVU3039
 10978 07f2 0B44     		add	r3, r3, r1
 606:Veno-Echo.cpp ****             out[1][i] = mixR;
 10979              		.loc 20 606 23 view .LVU3040
 10980 07f4 C2ED007A 		vstr.32	s15, [r2]
 607:Veno-Echo.cpp ****         }
 10981              		.loc 20 607 13 is_stmt 1 view .LVU3041
 607:Veno-Echo.cpp ****         }
 10982              		.loc 20 607 23 is_stmt 0 view .LVU3042
 10983 07f8 83ED000A 		vstr.32	s0, [r3]
 10984 07fc 8CE5     		b	.L577
 10985              	.LVL655:
 10986              	.L637:
 587:Veno-Echo.cpp ****         {
 10987              		.loc 20 587 14 is_stmt 1 view .LVU3043
 10988 07fe 40F37081 		ble	.L638
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 10989              		.loc 20 589 13 view .LVU3044
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 10990              		.loc 20 589 24 is_stmt 0 view .LVU3045
 10991 0802 F7EE006A 		vmov.f32	s13, #1.0e+0
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 10992              		.loc 20 589 18 view .LVU3046
 10993 0806 DDED085A 		vldr.32	s11, [sp, #32]
 590:Veno-Echo.cpp ****         }
 10994              		.loc 20 590 18 view .LVU3047
 10995 080a 9DED096A 		vldr.32	s12, [sp, #36]
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 10996              		.loc 20 589 24 view .LVU3048
 10997 080e 36EEC77A 		vsub.f32	s14, s13, s14
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 10998              		.loc 20 589 33 view .LVU3049
 10999 0812 37EE077A 		vadd.f32	s14, s14, s14
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 11000              		.loc 20 589 18 view .LVU3050
 11001 0816 E7EE257A 		vfma.f32	s15, s14, s11
 11002              	.LVL656:
 590:Veno-Echo.cpp ****         }
 11003              		.loc 20 590 13 is_stmt 1 view .LVU3051
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 342


 590:Veno-Echo.cpp ****         }
 11004              		.loc 20 590 18 is_stmt 0 view .LVU3052
 11005 081a A7EE060A 		vfma.f32	s0, s14, s12
 11006              	.LVL657:
 590:Veno-Echo.cpp ****         }
 11007              		.loc 20 590 18 view .LVU3053
 11008 081e 6DE5     		b	.L573
 11009              	.L653:
 11010              		.align	2
 11011              	.L652:
 11012 0820 00000000 		.word	.LANCHOR123
 11013 0824 00000000 		.word	.LANCHOR127
 11014 0828 0000803D 		.word	1031798784
 11015 082c 00000000 		.word	.LANCHOR3
 11016 0830 BF270900 		.word	599999
 11017 0834 851DD96F 		.word	1876499845
 11018 0838 249F2400 		.word	2400036
 11019 083c 1C9F2400 		.word	2400028
 11020 0840 00000000 		.word	.LANCHOR106
 11021 0844 00000000 		.word	.LANCHOR107
 11022 0848 00000000 		.word	.LANCHOR0
 11023 084c 00000000 		.word	.LANCHOR1
 11024 0850 C0270900 		.word	600000
 11025 0854 189F2400 		.word	2400024
 11026 0858 C1270900 		.word	600001
 11027              	.LVL658:
 11028              	.L592:
 11029              	.LBB2190:
 541:Veno-Echo.cpp **** {
 11030              		.loc 20 541 1 view .LVU3054
 11031 085c D44B     		ldr	r3, .L654
 11032              	.LBE2190:
 11033              	.LBB2191:
 11034              	.LBB1924:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11035              		.loc 20 2006 19 view .LVU3055
 11036 085e B0EE470A 		vmov.f32	s0, s14
 11037              	.LVL659:
2012:Veno-Echo.cpp **** }
 11038              		.loc 20 2012 5 is_stmt 1 view .LVU3056
2012:Veno-Echo.cpp **** }
 11039              		.loc 20 2012 5 is_stmt 0 view .LVU3057
 11040              	.LBE1924:
 11041              	.LBE2191:
 11042              	.LBB2192:
 541:Veno-Echo.cpp **** {
 11043              		.loc 20 541 1 view .LVU3058
 11044 0862 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11045              	.LBE2192:
 539:Veno-Echo.cpp **** 
 11046              		.loc 20 539 27 view .LVU3059
 11047 0864 8DED110A 		vstr.32	s0, [sp, #68]
 541:Veno-Echo.cpp **** {
 11048              		.loc 20 541 1 is_stmt 1 view .LVU3060
 11049              	.LBB2193:
 11050 0868 002B     		cmp	r3, #0
 11051 086a 3FF42EAD 		beq	.L567
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 343


 11052              	.L644:
 11053              	.LBB1927:
 547:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11054              		.loc 20 547 9 view .LVU3061
 547:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11055              		.loc 20 547 27 is_stmt 0 view .LVU3062
 11056 086e 9FEDD18A 		vldr.32	s16, .L654+4
 11057              	.LVL660:
 547:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11058              		.loc 20 547 27 view .LVU3063
 11059 0872 D14D     		ldr	r5, .L654+8
 11060 0874 27EE880A 		vmul.f32	s0, s15, s16
 548:Veno-Echo.cpp **** 
 11061              		.loc 20 548 27 view .LVU3064
 11062 0878 D04C     		ldr	r4, .L654+12
 547:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11063              		.loc 20 547 27 view .LVU3065
 11064 087a 2846     		mov	r0, r5
 11065 087c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11066              	.LVL661:
 548:Veno-Echo.cpp **** 
 11067              		.loc 20 548 9 is_stmt 1 view .LVU3066
 548:Veno-Echo.cpp **** 
 11068              		.loc 20 548 27 is_stmt 0 view .LVU3067
 11069 0880 9DED110A 		vldr.32	s0, [sp, #68]
 11070 0884 2046     		mov	r0, r4
 11071 0886 20EE080A 		vmul.f32	s0, s0, s16
 11072 088a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11073              	.LVL662:
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11074              		.loc 20 551 9 is_stmt 1 view .LVU3068
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11075              		.loc 20 551 9 is_stmt 0 view .LVU3069
 11076              	.LBE1927:
 11077              	.LBE2193:
 11078              	.LBE2221:
 11079              	.LBE2232:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 344


  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 11080              		.loc 10 52 26 is_stmt 1 view .LVU3070
 11081              	.LBB2233:
 11082              	.LBB2222:
 11083              	.LBB2194:
 11084              	.LBB1942:
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11085              		.loc 20 551 50 is_stmt 0 view .LVU3071
 11086 088e F2EE046A 		vmov.f32	s13, #1.0e+1
 11087 0892 95ED0C7A 		vldr.32	s14, [r5, #48]
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11088              		.loc 20 555 59 view .LVU3072
 11089 0896 10A9     		add	r1, sp, #64
 552:Veno-Echo.cpp ****         
 11090              		.loc 20 552 50 view .LVU3073
 11091 0898 D4ED0C7A 		vldr.32	s15, [r4, #48]
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11092              		.loc 20 555 59 view .LVU3074
 11093 089c 12AA     		add	r2, sp, #72
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11094              		.loc 20 551 50 view .LVU3075
 11095 089e 27EE267A 		vmul.f32	s14, s14, s13
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11096              		.loc 20 555 59 view .LVU3076
 11097 08a2 C748     		ldr	r0, .L654+16
 552:Veno-Echo.cpp ****         
 11098              		.loc 20 552 50 view .LVU3077
 11099 08a4 67EEA67A 		vmul.f32	s15, s15, s13
 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11100              		.loc 20 551 57 view .LVU3078
 11101 08a8 8DED127A 		vstr.32	s14, [sp, #72]
 552:Veno-Echo.cpp ****         
 11102              		.loc 20 552 9 is_stmt 1 view .LVU3079
 11103              	.LVL663:
 552:Veno-Echo.cpp ****         
 11104              		.loc 20 552 9 is_stmt 0 view .LVU3080
 11105              	.LBE1942:
 11106              	.LBE2194:
 11107              	.LBE2222:
 11108              	.LBE2233:
 11109              		.loc 10 52 26 is_stmt 1 view .LVU3081
 11110              	.LBB2234:
 11111              	.LBB2223:
 11112              	.LBB2195:
 11113              	.LBB1943:
 552:Veno-Echo.cpp ****         
 11114              		.loc 20 552 57 is_stmt 0 view .LVU3082
 11115 08ac CDED137A 		vstr.32	s15, [sp, #76]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 345


 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11116              		.loc 20 555 9 is_stmt 1 view .LVU3083
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11117              		.loc 20 555 59 is_stmt 0 view .LVU3084
 11118 08b0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11119              	.LVL664:
 556:Veno-Echo.cpp **** 
 11120              		.loc 20 556 59 view .LVU3085
 11121 08b4 11A9     		add	r1, sp, #68
 11122 08b6 13AA     		add	r2, sp, #76
 11123 08b8 C248     		ldr	r0, .L654+20
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11124              		.loc 20 555 97 view .LVU3086
 11125 08ba 8DED140A 		vstr.32	s0, [sp, #80]
 556:Veno-Echo.cpp **** 
 11126              		.loc 20 556 9 is_stmt 1 view .LVU3087
 556:Veno-Echo.cpp **** 
 11127              		.loc 20 556 59 is_stmt 0 view .LVU3088
 11128 08be FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11129              	.LVL665:
 11130              	.LBB1928:
 11131              	.LBB1929:
2005:Veno-Echo.cpp ****         returnval = limit;
 11132              		.loc 20 2005 5 view .LVU3089
 11133 08c2 F0EE006A 		vmov.f32	s13, #2.0e+0
 11134              	.LBE1929:
 11135              	.LBE1928:
 559:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11136              		.loc 20 559 41 view .LVU3090
 11137 08c6 9DED147A 		vldr.32	s14, [sp, #80]
 556:Veno-Echo.cpp **** 
 11138              		.loc 20 556 59 view .LVU3091
 11139 08ca F0EE407A 		vmov.f32	s15, s0
 559:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11140              		.loc 20 559 9 is_stmt 1 view .LVU3092
 11141              	.LVL666:
 11142              	.LBB1933:
 11143              	.LBI1928:
2002:Veno-Echo.cpp **** {
 11144              		.loc 20 2002 7 view .LVU3093
 11145              	.LBB1930:
2004:Veno-Echo.cpp ****     if (input > limit)
 11146              		.loc 20 2004 5 view .LVU3094
2005:Veno-Echo.cpp ****         returnval = limit;
 11147              		.loc 20 2005 5 view .LVU3095
 11148 08ce B4EEE67A 		vcmpe.f32	s14, s13
 11149 08d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11150 08d6 00F30D81 		bgt	.L593
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11151              		.loc 20 2007 10 view .LVU3096
 11152 08da F8EE006A 		vmov.f32	s13, #-2.0e+0
 11153 08de B4EEE67A 		vcmpe.f32	s14, s13
 11154 08e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11155 08e6 00F12D81 		bmi	.L594
 11156 08ea 27EE080A 		vmul.f32	s0, s14, s16
 11157              	.LVL667:
 11158              	.L568:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 346


2012:Veno-Echo.cpp **** }
 11159              		.loc 20 2012 5 view .LVU3097
2012:Veno-Echo.cpp **** }
 11160              		.loc 20 2012 5 is_stmt 0 view .LVU3098
 11161              	.LBE1930:
 11162              	.LBE1933:
 11163              	.LBB1934:
 11164              	.LBB1935:
2005:Veno-Echo.cpp ****         returnval = limit;
 11165              		.loc 20 2005 5 view .LVU3099
 11166 08ee F0EE006A 		vmov.f32	s13, #2.0e+0
 11167              	.LBE1935:
 11168              	.LBE1934:
 559:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11169              		.loc 20 559 30 view .LVU3100
 11170 08f2 8DED147A 		vstr.32	s14, [sp, #80]
 560:Veno-Echo.cpp **** 
 11171              		.loc 20 560 9 is_stmt 1 view .LVU3101
 11172              	.LVL668:
 11173              	.LBB1938:
 11174              	.LBI1934:
2002:Veno-Echo.cpp **** {
 11175              		.loc 20 2002 7 view .LVU3102
 11176              	.LBB1936:
2004:Veno-Echo.cpp ****     if (input > limit)
 11177              		.loc 20 2004 5 view .LVU3103
2005:Veno-Echo.cpp ****         returnval = limit;
 11178              		.loc 20 2005 5 view .LVU3104
 11179 08f6 F4EEE67A 		vcmpe.f32	s15, s13
 11180 08fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11181 08fe 00F30681 		bgt	.L595
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11182              		.loc 20 2007 10 view .LVU3105
 11183 0902 B8EE007A 		vmov.f32	s14, #-2.0e+0
2008:Veno-Echo.cpp ****     else
 11184              		.loc 20 2008 19 is_stmt 0 view .LVU3106
 11185 0906 F4EE477A 		vcmp.f32	s15, s14
 11186 090a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11187 090e 48BF     		it	mi
 11188 0910 F0EE477A 		vmovmi.f32	s15, s14
 11189              	.LVL669:
 11190              	.L569:
2012:Veno-Echo.cpp **** }
 11191              		.loc 20 2012 5 is_stmt 1 view .LVU3107
2012:Veno-Echo.cpp **** }
 11192              		.loc 20 2012 5 is_stmt 0 view .LVU3108
 11193              	.LBE1936:
 11194              	.LBE1938:
 563:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11195              		.loc 20 563 27 view .LVU3109
 11196 0914 AC4D     		ldr	r5, .L654+24
 564:Veno-Echo.cpp **** 
 11197              		.loc 20 564 27 view .LVU3110
 11198 0916 AD4C     		ldr	r4, .L654+28
 563:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11199              		.loc 20 563 27 view .LVU3111
 11200 0918 2846     		mov	r0, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 347


 560:Veno-Echo.cpp **** 
 11201              		.loc 20 560 30 view .LVU3112
 11202 091a CDED157A 		vstr.32	s15, [sp, #84]
 563:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11203              		.loc 20 563 9 is_stmt 1 view .LVU3113
 563:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11204              		.loc 20 563 27 is_stmt 0 view .LVU3114
 11205 091e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11206              	.LVL670:
 564:Veno-Echo.cpp **** 
 11207              		.loc 20 564 9 is_stmt 1 view .LVU3115
 564:Veno-Echo.cpp **** 
 11208              		.loc 20 564 27 is_stmt 0 view .LVU3116
 11209 0922 DFEDA47A 		vldr.32	s15, .L654+4
 11210 0926 9DED150A 		vldr.32	s0, [sp, #84]
 11211 092a 2046     		mov	r0, r4
 11212 092c 20EE270A 		vmul.f32	s0, s0, s15
 11213 0930 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11214              	.LVL671:
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11215              		.loc 20 566 9 is_stmt 1 view .LVU3117
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11216              		.loc 20 566 9 is_stmt 0 view .LVU3118
 11217              	.LBE1943:
 11218              	.LBE2195:
 11219              	.LBE2223:
 11220              	.LBE2234:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 11221              		.loc 10 56 27 is_stmt 1 view .LVU3119
 11222              	.LBB2235:
 11223              	.LBB2224:
 11224              	.LBB2196:
 11225              	.LBB1944:
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11226              		.loc 20 566 51 is_stmt 0 view .LVU3120
 11227 0934 F2EE046A 		vmov.f32	s13, #1.0e+1
 11228 0938 95ED0D7A 		vldr.32	s14, [r5, #52]
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11229              		.loc 20 569 55 view .LVU3121
 11230 093c 14A9     		add	r1, sp, #80
 567:Veno-Echo.cpp **** 
 11231              		.loc 20 567 51 view .LVU3122
 11232 093e D4ED0D7A 		vldr.32	s15, [r4, #52]
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11233              		.loc 20 569 55 view .LVU3123
 11234 0942 16AA     		add	r2, sp, #88
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11235              		.loc 20 566 51 view .LVU3124
 11236 0944 27EE267A 		vmul.f32	s14, s14, s13
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11237              		.loc 20 569 55 view .LVU3125
 11238 0948 A148     		ldr	r0, .L654+32
 567:Veno-Echo.cpp **** 
 11239              		.loc 20 567 51 view .LVU3126
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 348


 11240 094a 67EEA67A 		vmul.f32	s15, s15, s13
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11241              		.loc 20 566 58 view .LVU3127
 11242 094e 8DED167A 		vstr.32	s14, [sp, #88]
 567:Veno-Echo.cpp **** 
 11243              		.loc 20 567 9 is_stmt 1 view .LVU3128
 11244              	.LVL672:
 567:Veno-Echo.cpp **** 
 11245              		.loc 20 567 9 is_stmt 0 view .LVU3129
 11246              	.LBE1944:
 11247              	.LBE2196:
 11248              	.LBE2224:
 11249              	.LBE2235:
 11250              		.loc 10 56 27 is_stmt 1 view .LVU3130
 11251              	.LBB2236:
 11252              	.LBB2225:
 11253              	.LBB2197:
 11254              	.LBB1945:
 567:Veno-Echo.cpp **** 
 11255              		.loc 20 567 58 is_stmt 0 view .LVU3131
 11256 0952 CDED177A 		vstr.32	s15, [sp, #92]
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11257              		.loc 20 569 9 is_stmt 1 view .LVU3132
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11258              		.loc 20 569 55 is_stmt 0 view .LVU3133
 11259 0956 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11260              	.LVL673:
 570:Veno-Echo.cpp **** 
 11261              		.loc 20 570 55 view .LVU3134
 11262 095a 15A9     		add	r1, sp, #84
 11263 095c 17AA     		add	r2, sp, #92
 11264 095e 9D48     		ldr	r0, .L654+36
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11265              		.loc 20 569 30 view .LVU3135
 11266 0960 8DED140A 		vstr.32	s0, [sp, #80]
 570:Veno-Echo.cpp **** 
 11267              		.loc 20 570 9 is_stmt 1 view .LVU3136
 570:Veno-Echo.cpp **** 
 11268              		.loc 20 570 55 is_stmt 0 view .LVU3137
 11269 0964 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11270              	.LVL674:
 573:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11271              		.loc 20 573 53 view .LVU3138
 11272 0968 14AA     		add	r2, sp, #80
 11273 096a 10A9     		add	r1, sp, #64
 11274 096c 9A48     		ldr	r0, .L654+40
 570:Veno-Echo.cpp **** 
 11275              		.loc 20 570 30 view .LVU3139
 11276 096e 8DED150A 		vstr.32	s0, [sp, #84]
 573:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11277              		.loc 20 573 9 is_stmt 1 view .LVU3140
 573:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11278              		.loc 20 573 53 is_stmt 0 view .LVU3141
 11279 0972 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11280              	.LVL675:
 574:Veno-Echo.cpp **** 
 11281              		.loc 20 574 53 view .LVU3142
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 349


 11282 0976 15AA     		add	r2, sp, #84
 11283 0978 11A9     		add	r1, sp, #68
 11284 097a 9848     		ldr	r0, .L654+44
 573:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11285              		.loc 20 573 27 view .LVU3143
 11286 097c 8DED100A 		vstr.32	s0, [sp, #64]
 574:Veno-Echo.cpp **** 
 11287              		.loc 20 574 9 is_stmt 1 view .LVU3144
 574:Veno-Echo.cpp **** 
 11288              		.loc 20 574 53 is_stmt 0 view .LVU3145
 11289 0980 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11290              	.LVL676:
 11291 0984 DDED107A 		vldr.32	s15, [sp, #64]
 574:Veno-Echo.cpp **** 
 11292              		.loc 20 574 27 view .LVU3146
 11293 0988 8DED110A 		vstr.32	s0, [sp, #68]
 11294              	.LBE1945:
 11295 098c 9DE4     		b	.L567
 11296              	.LVL677:
 11297              	.L636:
 574:Veno-Echo.cpp **** 
 11298              		.loc 20 574 27 view .LVU3147
 11299              	.LBE2197:
 517:Veno-Echo.cpp **** 
 11300              		.loc 20 517 25 view .LVU3148
 11301 098e DFED947A 		vldr.32	s15, .L654+48
 11302              	.LVL678:
 517:Veno-Echo.cpp **** 
 11303              		.loc 20 517 25 view .LVU3149
 11304 0992 2CE4     		b	.L557
 11305              	.LVL679:
 11306              	.L635:
 513:Veno-Echo.cpp ****             
 11307              		.loc 20 513 25 view .LVU3150
 11308 0994 9FED927A 		vldr.32	s14, .L654+48
 11309              	.LVL680:
 513:Veno-Echo.cpp ****             
 11310              		.loc 20 513 25 view .LVU3151
 11311 0998 18E4     		b	.L555
 11312              	.LVL681:
 11313              	.L583:
 11314              	.LBB2198:
 443:Veno-Echo.cpp **** {
 11315              		.loc 20 443 1 view .LVU3152
 11316 099a 854B     		ldr	r3, .L654
 11317              	.LBE2198:
 11318              	.LBB2199:
 11319              	.LBB1839:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11320              		.loc 20 2006 19 view .LVU3153
 11321 099c B0EE470A 		vmov.f32	s0, s14
 11322              	.LVL682:
2012:Veno-Echo.cpp **** }
 11323              		.loc 20 2012 5 is_stmt 1 view .LVU3154
2012:Veno-Echo.cpp **** }
 11324              		.loc 20 2012 5 is_stmt 0 view .LVU3155
 11325              	.LBE1839:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 350


 11326              	.LBE2199:
 11327              	.LBB2200:
 443:Veno-Echo.cpp **** {
 11328              		.loc 20 443 1 view .LVU3156
 11329 09a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11330              	.LBE2200:
 441:Veno-Echo.cpp **** 
 11331              		.loc 20 441 23 view .LVU3157
 11332 09a2 8DED0D0A 		vstr.32	s0, [sp, #52]
 443:Veno-Echo.cpp **** {
 11333              		.loc 20 443 1 is_stmt 1 view .LVU3158
 11334              	.LBB2201:
 11335 09a6 002B     		cmp	r3, #0
 11336 09a8 7FF495AB 		bne	.L549
 11337              	.L643:
 11338              	.LBB1842:
 449:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11339              		.loc 20 449 9 view .LVU3159
 449:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11340              		.loc 20 449 22 is_stmt 0 view .LVU3160
 11341 09ac 9FED819A 		vldr.32	s18, .L654+4
 11342 09b0 8C4D     		ldr	r5, .L654+52
 11343 09b2 27EE890A 		vmul.f32	s0, s15, s18
 450:Veno-Echo.cpp **** 
 11344              		.loc 20 450 22 view .LVU3161
 11345 09b6 8C4C     		ldr	r4, .L654+56
 449:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11346              		.loc 20 449 22 view .LVU3162
 11347 09b8 2846     		mov	r0, r5
 11348 09ba FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11349              	.LVL683:
 450:Veno-Echo.cpp **** 
 11350              		.loc 20 450 9 is_stmt 1 view .LVU3163
 450:Veno-Echo.cpp **** 
 11351              		.loc 20 450 22 is_stmt 0 view .LVU3164
 11352 09be 9DED0D0A 		vldr.32	s0, [sp, #52]
 11353 09c2 2046     		mov	r0, r4
 11354 09c4 20EE090A 		vmul.f32	s0, s0, s18
 11355 09c8 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11356              	.LVL684:
 453:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11357              		.loc 20 453 9 is_stmt 1 view .LVU3165
 453:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11358              		.loc 20 453 9 is_stmt 0 view .LVU3166
 11359              	.LBE1842:
 11360              	.LBE2201:
 11361              	.LBE2225:
 11362              	.LBE2236:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11363              		.loc 10 52 26 is_stmt 1 view .LVU3167
 11364              	.LBB2237:
 11365              	.LBB2226:
 11366              	.LBB2202:
 11367              	.LBB1857:
 453:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11368              		.loc 20 453 40 is_stmt 0 view .LVU3168
 11369 09cc F2EE046A 		vmov.f32	s13, #1.0e+1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 351


 11370 09d0 95ED0C7A 		vldr.32	s14, [r5, #48]
 457:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11371              		.loc 20 457 49 view .LVU3169
 11372 09d4 12AA     		add	r2, sp, #72
 454:Veno-Echo.cpp ****         
 11373              		.loc 20 454 40 view .LVU3170
 11374 09d6 D4ED0C7A 		vldr.32	s15, [r4, #48]
 457:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11375              		.loc 20 457 49 view .LVU3171
 11376 09da 0CA9     		add	r1, sp, #48
 453:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11377              		.loc 20 453 40 view .LVU3172
 11378 09dc 27EE267A 		vmul.f32	s14, s14, s13
 457:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11379              		.loc 20 457 49 view .LVU3173
 11380 09e0 8248     		ldr	r0, .L654+60
 454:Veno-Echo.cpp ****         
 11381              		.loc 20 454 40 view .LVU3174
 11382 09e2 67EEA67A 		vmul.f32	s15, s15, s13
 453:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11383              		.loc 20 453 47 view .LVU3175
 11384 09e6 8DED127A 		vstr.32	s14, [sp, #72]
 454:Veno-Echo.cpp ****         
 11385              		.loc 20 454 9 is_stmt 1 view .LVU3176
 11386              	.LVL685:
 454:Veno-Echo.cpp ****         
 11387              		.loc 20 454 9 is_stmt 0 view .LVU3177
 11388              	.LBE1857:
 11389              	.LBE2202:
 11390              	.LBE2226:
 11391              	.LBE2237:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11392              		.loc 10 52 26 is_stmt 1 view .LVU3178
 11393              	.LBB2238:
 11394              	.LBB2227:
 11395              	.LBB2203:
 11396              	.LBB1858:
 454:Veno-Echo.cpp ****         
 11397              		.loc 20 454 47 is_stmt 0 view .LVU3179
 11398 09ea CDED137A 		vstr.32	s15, [sp, #76]
 457:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11399              		.loc 20 457 9 is_stmt 1 view .LVU3180
 457:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11400              		.loc 20 457 49 is_stmt 0 view .LVU3181
 11401 09ee FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11402              	.LVL686:
 458:Veno-Echo.cpp **** 
 11403              		.loc 20 458 49 view .LVU3182
 11404 09f2 13AA     		add	r2, sp, #76
 11405 09f4 0DA9     		add	r1, sp, #52
 11406 09f6 7E48     		ldr	r0, .L654+64
 457:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11407              		.loc 20 457 78 view .LVU3183
 11408 09f8 8DED140A 		vstr.32	s0, [sp, #80]
 458:Veno-Echo.cpp **** 
 11409              		.loc 20 458 9 is_stmt 1 view .LVU3184
 458:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 352


 11410              		.loc 20 458 49 is_stmt 0 view .LVU3185
 11411 09fc FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11412              	.LVL687:
 11413              	.LBB1843:
 11414              	.LBB1844:
2005:Veno-Echo.cpp ****         returnval = limit;
 11415              		.loc 20 2005 5 view .LVU3186
 11416 0a00 F0EE006A 		vmov.f32	s13, #2.0e+0
 11417              	.LBE1844:
 11418              	.LBE1843:
 461:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11419              		.loc 20 461 36 view .LVU3187
 11420 0a04 9DED147A 		vldr.32	s14, [sp, #80]
 458:Veno-Echo.cpp **** 
 11421              		.loc 20 458 49 view .LVU3188
 11422 0a08 F0EE407A 		vmov.f32	s15, s0
 461:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11423              		.loc 20 461 9 is_stmt 1 view .LVU3189
 11424              	.LVL688:
 11425              	.LBB1848:
 11426              	.LBI1843:
2002:Veno-Echo.cpp **** {
 11427              		.loc 20 2002 7 view .LVU3190
 11428              	.LBB1845:
2004:Veno-Echo.cpp ****     if (input > limit)
 11429              		.loc 20 2004 5 view .LVU3191
2005:Veno-Echo.cpp ****         returnval = limit;
 11430              		.loc 20 2005 5 view .LVU3192
 11431 0a0c B4EEE67A 		vcmpe.f32	s14, s13
 11432 0a10 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11433 0a14 76DC     		bgt	.L584
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11434              		.loc 20 2007 10 view .LVU3193
 11435 0a16 F8EE006A 		vmov.f32	s13, #-2.0e+0
 11436 0a1a B4EEE67A 		vcmpe.f32	s14, s13
 11437 0a1e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11438 0a22 00F19480 		bmi	.L585
 11439 0a26 27EE090A 		vmul.f32	s0, s14, s18
 11440              	.LVL689:
 11441              	.L550:
2012:Veno-Echo.cpp **** }
 11442              		.loc 20 2012 5 view .LVU3194
2012:Veno-Echo.cpp **** }
 11443              		.loc 20 2012 5 is_stmt 0 view .LVU3195
 11444              	.LBE1845:
 11445              	.LBE1848:
 11446              	.LBB1849:
 11447              	.LBB1850:
2005:Veno-Echo.cpp ****         returnval = limit;
 11448              		.loc 20 2005 5 view .LVU3196
 11449 0a2a F0EE006A 		vmov.f32	s13, #2.0e+0
 11450              	.LBE1850:
 11451              	.LBE1849:
 461:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11452              		.loc 20 461 25 view .LVU3197
 11453 0a2e 8DED147A 		vstr.32	s14, [sp, #80]
 462:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 353


 11454              		.loc 20 462 9 is_stmt 1 view .LVU3198
 11455              	.LVL690:
 11456              	.LBB1853:
 11457              	.LBI1849:
2002:Veno-Echo.cpp **** {
 11458              		.loc 20 2002 7 view .LVU3199
 11459              	.LBB1851:
2004:Veno-Echo.cpp ****     if (input > limit)
 11460              		.loc 20 2004 5 view .LVU3200
2005:Veno-Echo.cpp ****         returnval = limit;
 11461              		.loc 20 2005 5 view .LVU3201
 11462 0a32 F4EEE67A 		vcmpe.f32	s15, s13
 11463 0a36 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11464 0a3a 60DC     		bgt	.L586
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11465              		.loc 20 2007 10 view .LVU3202
 11466 0a3c B8EE007A 		vmov.f32	s14, #-2.0e+0
2008:Veno-Echo.cpp ****     else
 11467              		.loc 20 2008 19 is_stmt 0 view .LVU3203
 11468 0a40 F4EE477A 		vcmp.f32	s15, s14
 11469 0a44 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11470 0a48 48BF     		it	mi
 11471 0a4a F0EE477A 		vmovmi.f32	s15, s14
 11472              	.LVL691:
 11473              	.L551:
2012:Veno-Echo.cpp **** }
 11474              		.loc 20 2012 5 is_stmt 1 view .LVU3204
2012:Veno-Echo.cpp **** }
 11475              		.loc 20 2012 5 is_stmt 0 view .LVU3205
 11476              	.LBE1851:
 11477              	.LBE1853:
 465:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11478              		.loc 20 465 22 view .LVU3206
 11479 0a4e 694D     		ldr	r5, .L654+68
 466:Veno-Echo.cpp **** 
 11480              		.loc 20 466 22 view .LVU3207
 11481 0a50 694C     		ldr	r4, .L654+72
 465:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11482              		.loc 20 465 22 view .LVU3208
 11483 0a52 2846     		mov	r0, r5
 462:Veno-Echo.cpp **** 
 11484              		.loc 20 462 25 view .LVU3209
 11485 0a54 CDED157A 		vstr.32	s15, [sp, #84]
 465:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11486              		.loc 20 465 9 is_stmt 1 view .LVU3210
 465:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11487              		.loc 20 465 22 is_stmt 0 view .LVU3211
 11488 0a58 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11489              	.LVL692:
 466:Veno-Echo.cpp **** 
 11490              		.loc 20 466 9 is_stmt 1 view .LVU3212
 466:Veno-Echo.cpp **** 
 11491              		.loc 20 466 22 is_stmt 0 view .LVU3213
 11492 0a5c DFED557A 		vldr.32	s15, .L654+4
 11493 0a60 9DED150A 		vldr.32	s0, [sp, #84]
 11494 0a64 2046     		mov	r0, r4
 11495 0a66 20EE270A 		vmul.f32	s0, s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 354


 11496 0a6a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11497              	.LVL693:
 468:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11498              		.loc 20 468 9 is_stmt 1 view .LVU3214
 468:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11499              		.loc 20 468 9 is_stmt 0 view .LVU3215
 11500              	.LBE1858:
 11501              	.LBE2203:
 11502              	.LBE2227:
 11503              	.LBE2238:
 11504              		.loc 10 56 27 is_stmt 1 view .LVU3216
 11505              	.LBB2239:
 11506              	.LBB2228:
 11507              	.LBB2204:
 11508              	.LBB1859:
 468:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11509              		.loc 20 468 41 is_stmt 0 view .LVU3217
 11510 0a6e F2EE046A 		vmov.f32	s13, #1.0e+1
 11511 0a72 95ED0D7A 		vldr.32	s14, [r5, #52]
 471:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11512              		.loc 20 471 45 view .LVU3218
 11513 0a76 14A9     		add	r1, sp, #80
 469:Veno-Echo.cpp **** 
 11514              		.loc 20 469 41 view .LVU3219
 11515 0a78 D4ED0D7A 		vldr.32	s15, [r4, #52]
 471:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11516              		.loc 20 471 45 view .LVU3220
 11517 0a7c 16AA     		add	r2, sp, #88
 468:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11518              		.loc 20 468 41 view .LVU3221
 11519 0a7e 27EE267A 		vmul.f32	s14, s14, s13
 471:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11520              		.loc 20 471 45 view .LVU3222
 11521 0a82 5E48     		ldr	r0, .L654+76
 469:Veno-Echo.cpp **** 
 11522              		.loc 20 469 41 view .LVU3223
 11523 0a84 67EEA67A 		vmul.f32	s15, s15, s13
 468:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11524              		.loc 20 468 48 view .LVU3224
 11525 0a88 8DED167A 		vstr.32	s14, [sp, #88]
 469:Veno-Echo.cpp **** 
 11526              		.loc 20 469 9 is_stmt 1 view .LVU3225
 11527              	.LVL694:
 469:Veno-Echo.cpp **** 
 11528              		.loc 20 469 9 is_stmt 0 view .LVU3226
 11529              	.LBE1859:
 11530              	.LBE2204:
 11531              	.LBE2228:
 11532              	.LBE2239:
 11533              		.loc 10 56 27 is_stmt 1 view .LVU3227
 11534              	.LBB2240:
 11535              	.LBB2229:
 11536              	.LBB2205:
 11537              	.LBB1860:
 469:Veno-Echo.cpp **** 
 11538              		.loc 20 469 48 is_stmt 0 view .LVU3228
 11539 0a8c CDED177A 		vstr.32	s15, [sp, #92]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 355


 471:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11540              		.loc 20 471 9 is_stmt 1 view .LVU3229
 471:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11541              		.loc 20 471 45 is_stmt 0 view .LVU3230
 11542 0a90 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11543              	.LVL695:
 472:Veno-Echo.cpp **** 
 11544              		.loc 20 472 45 view .LVU3231
 11545 0a94 15A9     		add	r1, sp, #84
 11546 0a96 17AA     		add	r2, sp, #92
 11547 0a98 5948     		ldr	r0, .L654+80
 471:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11548              		.loc 20 471 25 view .LVU3232
 11549 0a9a 8DED140A 		vstr.32	s0, [sp, #80]
 472:Veno-Echo.cpp **** 
 11550              		.loc 20 472 9 is_stmt 1 view .LVU3233
 472:Veno-Echo.cpp **** 
 11551              		.loc 20 472 45 is_stmt 0 view .LVU3234
 11552 0a9e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11553              	.LVL696:
 476:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11554              		.loc 20 476 44 view .LVU3235
 11555 0aa2 14AA     		add	r2, sp, #80
 11556 0aa4 0CA9     		add	r1, sp, #48
 11557 0aa6 5748     		ldr	r0, .L654+84
 472:Veno-Echo.cpp **** 
 11558              		.loc 20 472 25 view .LVU3236
 11559 0aa8 8DED150A 		vstr.32	s0, [sp, #84]
 476:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11560              		.loc 20 476 9 is_stmt 1 view .LVU3237
 476:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11561              		.loc 20 476 44 is_stmt 0 view .LVU3238
 11562 0aac FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11563              	.LVL697:
 477:Veno-Echo.cpp **** 
 11564              		.loc 20 477 44 view .LVU3239
 11565 0ab0 15AA     		add	r2, sp, #84
 11566 0ab2 0DA9     		add	r1, sp, #52
 11567 0ab4 5448     		ldr	r0, .L654+88
 476:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11568              		.loc 20 476 23 view .LVU3240
 11569 0ab6 8DED0C0A 		vstr.32	s0, [sp, #48]
 477:Veno-Echo.cpp **** 
 11570              		.loc 20 477 9 is_stmt 1 view .LVU3241
 477:Veno-Echo.cpp **** 
 11571              		.loc 20 477 44 is_stmt 0 view .LVU3242
 11572 0aba FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11573              	.LVL698:
 11574 0abe DDED0C7A 		vldr.32	s15, [sp, #48]
 477:Veno-Echo.cpp **** 
 11575              		.loc 20 477 23 view .LVU3243
 11576 0ac2 8DED0D0A 		vstr.32	s0, [sp, #52]
 11577              	.LBE1860:
 11578 0ac6 FFF706BB 		b	.L549
 11579              	.LVL699:
 11580              	.L590:
 477:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 356


 11581              		.loc 20 477 23 view .LVU3244
 11582              	.LBE2205:
 11583              	.LBB2206:
 11584              	.LBB1913:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11585              		.loc 20 2006 19 view .LVU3245
 11586 0aca B0EE676A 		vmov.f32	s12, s15
 11587              	.LVL700:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11588              		.loc 20 2006 19 view .LVU3246
 11589 0ace FFF7B9BB 		b	.L561
 11590              	.LVL701:
 11591              	.L589:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11592              		.loc 20 2006 19 view .LVU3247
 11593              	.LBE1913:
 11594              	.LBE2206:
 11595              	.LBB2207:
 11596              	.LBB1909:
 11597 0ad2 F0EE678A 		vmov.f32	s17, s15
 11598              	.LVL702:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11599              		.loc 20 2006 19 view .LVU3248
 11600 0ad6 FFF7A2BB 		b	.L559
 11601              	.LVL703:
 11602              	.L591:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11603              		.loc 20 2006 19 view .LVU3249
 11604              	.LBE1909:
 11605              	.LBE2207:
 11606              	.LBB2208:
 11607              	.LBB1918:
 11608 0ada F0EE477A 		vmov.f32	s15, s14
 11609              	.LVL704:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11610              		.loc 20 2006 19 view .LVU3250
 11611 0ade FFF7DABB 		b	.L563
 11612              	.LVL705:
 11613              	.L638:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11614              		.loc 20 2006 19 view .LVU3251
 11615              	.LBE1918:
 11616              	.LBE2208:
 594:Veno-Echo.cpp ****             mixR = Right_In + delaySignal_R_SUM;
 11617              		.loc 20 594 13 is_stmt 1 view .LVU3252
 594:Veno-Echo.cpp ****             mixR = Right_In + delaySignal_R_SUM;
 11618              		.loc 20 594 18 is_stmt 0 view .LVU3253
 11619 0ae2 DDED086A 		vldr.32	s13, [sp, #32]
 595:Veno-Echo.cpp ****         }
 11620              		.loc 20 595 18 view .LVU3254
 11621 0ae6 9DED097A 		vldr.32	s14, [sp, #36]
 594:Veno-Echo.cpp ****             mixR = Right_In + delaySignal_R_SUM;
 11622              		.loc 20 594 18 view .LVU3255
 11623 0aea 77EEA67A 		vadd.f32	s15, s15, s13
 11624              	.LVL706:
 595:Veno-Echo.cpp ****         }
 11625              		.loc 20 595 13 is_stmt 1 view .LVU3256
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 357


 595:Veno-Echo.cpp ****         }
 11626              		.loc 20 595 18 is_stmt 0 view .LVU3257
 11627 0aee 30EE070A 		vadd.f32	s0, s0, s14
 11628              	.LVL707:
 595:Veno-Echo.cpp ****         }
 11629              		.loc 20 595 18 view .LVU3258
 11630 0af2 03E4     		b	.L573
 11631              	.LVL708:
 11632              	.L593:
 11633              	.LBB2209:
 11634              	.LBB1946:
 11635              	.LBB1939:
 11636              	.LBB1931:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11637              		.loc 20 2006 19 view .LVU3259
 11638 0af4 B0EE667A 		vmov.f32	s14, s13
 11639              	.LVL709:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11640              		.loc 20 2006 19 view .LVU3260
 11641 0af8 9FED440A 		vldr.32	s0, .L654+92
 11642 0afc F7E6     		b	.L568
 11643              	.LVL710:
 11644              	.L586:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11645              		.loc 20 2006 19 view .LVU3261
 11646              	.LBE1931:
 11647              	.LBE1939:
 11648              	.LBE1946:
 11649              	.LBE2209:
 11650              	.LBB2210:
 11651              	.LBB1861:
 11652              	.LBB1854:
 11653              	.LBB1852:
 11654 0afe F0EE667A 		vmov.f32	s15, s13
 11655              	.LVL711:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11656              		.loc 20 2006 19 view .LVU3262
 11657 0b02 A4E7     		b	.L551
 11658              	.LVL712:
 11659              	.L584:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11660              		.loc 20 2006 19 view .LVU3263
 11661              	.LBE1852:
 11662              	.LBE1854:
 11663              	.LBB1855:
 11664              	.LBB1846:
 11665 0b04 B0EE667A 		vmov.f32	s14, s13
 11666              	.LVL713:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11667              		.loc 20 2006 19 view .LVU3264
 11668 0b08 9FED400A 		vldr.32	s0, .L654+92
 11669 0b0c 8DE7     		b	.L550
 11670              	.LVL714:
 11671              	.L595:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11672              		.loc 20 2006 19 view .LVU3265
 11673              	.LBE1846:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 358


 11674              	.LBE1855:
 11675              	.LBE1861:
 11676              	.LBE2210:
 11677              	.LBB2211:
 11678              	.LBB1947:
 11679              	.LBB1940:
 11680              	.LBB1937:
 11681 0b0e F0EE667A 		vmov.f32	s15, s13
 11682              	.LVL715:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11683              		.loc 20 2006 19 view .LVU3266
 11684 0b12 FFE6     		b	.L569
 11685              	.LVL716:
 11686              	.L527:
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11687              		.loc 20 2006 19 view .LVU3267
 11688              	.LBE1937:
 11689              	.LBE1940:
 11690              	.LBE1947:
 11691              	.LBE2211:
 11692              	.LBB2212:
 11693              	.LBB2030:
 11694              	.LBB2020:
 116:delayline_reverse.h ****                 }
 11695              		.loc 19 116 21 view .LVU3268
 11696 0b14 A960     		str	r1, [r5, #8]
 11697 0b16 52E6     		b	.L529
 11698              	.LVL717:
 11699              	.L537:
 116:delayline_reverse.h ****                 }
 11700              		.loc 19 116 21 view .LVU3269
 11701              	.LBE2020:
 11702              	.LBE2030:
 11703              	.LBE2212:
 11704              	.LBB2213:
 11705              	.LBB2182:
 11706              	.LBB2178:
 11707 0b18 A160     		str	r1, [r4, #8]
 11708 0b1a 2DE6     		b	.L539
 11709              	.LVL718:
 11710              	.L506:
 116:delayline_reverse.h ****                 }
 11711              		.loc 19 116 21 view .LVU3270
 11712              	.LBE2178:
 11713              	.LBE2182:
 11714              	.LBE2213:
 11715              	.LBE2229:
 11716              	.LBE2240:
 615:Veno-Echo.cpp **** 
 11717              		.loc 20 615 1 view .LVU3271
 11718 0b1c 19B0     		add	sp, sp, #100
 11719              		.cfi_remember_state
 11720              		.cfi_def_cfa_offset 100
 11721              		@ sp needed
 11722 0b1e BDEC108B 		vldm	sp!, {d8-d15}
 11723              		.cfi_restore 94
 11724              		.cfi_restore 95
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 359


 11725              		.cfi_restore 92
 11726              		.cfi_restore 93
 11727              		.cfi_restore 90
 11728              		.cfi_restore 91
 11729              		.cfi_restore 88
 11730              		.cfi_restore 89
 11731              		.cfi_restore 86
 11732              		.cfi_restore 87
 11733              		.cfi_restore 84
 11734              		.cfi_restore 85
 11735              		.cfi_restore 82
 11736              		.cfi_restore 83
 11737              		.cfi_restore 80
 11738              		.cfi_restore 81
 11739              		.cfi_def_cfa_offset 36
 11740 0b22 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11741              	.LVL719:
 11742              	.L544:
 11743              		.cfi_restore_state
 11744              	.LBB2241:
 11745              	.LBB2230:
 11746              	.LBB2214:
 11747              	.LBB2183:
 11748              	.LBB2179:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11749              		.loc 19 145 21 view .LVU3272
 11750 0b26 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11751              		.loc 19 144 21 view .LVU3273
 11752 0b28 039C     		ldr	r4, [sp, #12]
 11753              	.LVL720:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11754              		.loc 19 144 21 view .LVU3274
 11755 0b2a 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11756              		.loc 19 145 21 view .LVU3275
 11757 0b2c 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11758              		.loc 19 146 21 view .LVU3276
 11759 0b2e 0170     		strb	r1, [r0]
 11760 0b30 F0E5     		b	.L541
 11761              	.LVL721:
 11762              	.L534:
 146:delayline_reverse.h ****                 }
 11763              		.loc 19 146 21 view .LVU3277
 11764              	.LBE2179:
 11765              	.LBE2183:
 11766              	.LBE2214:
 11767              	.LBB2215:
 11768              	.LBB2031:
 11769              	.LBB2021:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11770              		.loc 19 145 21 view .LVU3278
 11771 0b32 0022     		movs	r2, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11772              		.loc 19 144 21 view .LVU3279
 11773 0b34 0498     		ldr	r0, [sp, #16]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 360


 11774 0b36 0160     		str	r1, [r0]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11775              		.loc 19 145 21 view .LVU3280
 11776 0b38 1A70     		strb	r2, [r3]
 146:delayline_reverse.h ****                 }
 11777              		.loc 19 146 21 view .LVU3281
 11778 0b3a 3A70     		strb	r2, [r7]
 11779 0b3c 8AE5     		b	.L531
 11780              	.LVL722:
 11781              	.L645:
 146:delayline_reverse.h ****                 }
 11782              		.loc 19 146 21 view .LVU3282
 11783              	.LBE2021:
 11784              	.LBE2031:
 11785              	.LBE2215:
 11786              	.LBB2216:
 11787              	.LBB2184:
 11788              	.LBB2180:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11789              		.loc 19 130 17 view .LVU3283
 11790 0b3e C2ED007A 		vstr.32	s15, [r2]
 11791 0b42 E7E5     		b	.L541
 11792              	.LVL723:
 11793              	.L594:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11794              		.loc 19 130 17 view .LVU3284
 11795              	.LBE2180:
 11796              	.LBE2184:
 11797              	.LBE2216:
 11798              	.LBB2217:
 11799              	.LBB1948:
 11800              	.LBB1941:
 11801              	.LBB1932:
2008:Veno-Echo.cpp ****     else
 11802              		.loc 20 2008 19 view .LVU3285
 11803 0b44 B0EE667A 		vmov.f32	s14, s13
 11804              	.LVL724:
2008:Veno-Echo.cpp ****     else
 11805              		.loc 20 2008 19 view .LVU3286
 11806 0b48 9FED310A 		vldr.32	s0, .L654+96
 11807 0b4c CFE6     		b	.L568
 11808              	.LVL725:
 11809              	.L585:
2008:Veno-Echo.cpp ****     else
 11810              		.loc 20 2008 19 view .LVU3287
 11811              	.LBE1932:
 11812              	.LBE1941:
 11813              	.LBE1948:
 11814              	.LBE2217:
 11815              	.LBB2218:
 11816              	.LBB1862:
 11817              	.LBB1856:
 11818              	.LBB1847:
 11819 0b4e B0EE667A 		vmov.f32	s14, s13
 11820              	.LVL726:
2008:Veno-Echo.cpp ****     else
 11821              		.loc 20 2008 19 view .LVU3288
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 361


 11822 0b52 9FED2F0A 		vldr.32	s0, .L654+96
 11823 0b56 68E7     		b	.L550
 11824              	.LVL727:
 11825              	.L508:
2008:Veno-Echo.cpp ****     else
 11826              		.loc 20 2008 19 view .LVU3289
 11827              	.LBE1847:
 11828              	.LBE1856:
 11829              	.LBE1862:
 11830              	.LBE2218:
 11831              	.LBE2230:
 11832              	.LBE2241:
 375:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11833              		.loc 20 375 13 is_stmt 1 view .LVU3290
 376:Veno-Echo.cpp ****                 {
 11834              		.loc 20 376 17 view .LVU3291
 376:Veno-Echo.cpp ****                 {
 11835              		.loc 20 376 30 is_stmt 0 view .LVU3292
 11836 0b58 2E4B     		ldr	r3, .L654+100
 376:Veno-Echo.cpp ****                 {
 11837              		.loc 20 376 17 view .LVU3293
 11838 0b5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11839 0b5c 022B     		cmp	r3, #2
 11840 0b5e 3FF47FAA 		beq	.L507
 378:Veno-Echo.cpp ****                 }
 11841              		.loc 20 378 21 is_stmt 1 view .LVU3294
 378:Veno-Echo.cpp ****                 }
 11842              		.loc 20 378 39 is_stmt 0 view .LVU3295
 11843 0b62 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11844              	.LVL728:
 378:Veno-Echo.cpp ****                 }
 11845              		.loc 20 378 39 view .LVU3296
 11846 0b66 FFF77BBA 		b	.L507
 11847              	.LVL729:
 11848              	.L523:
 295:Veno-Echo.cpp ****                 Update_Buttons();
 11849              		.loc 20 295 13 is_stmt 1 view .LVU3297
 296:Veno-Echo.cpp ****                 GetModCV();
 11850              		.loc 20 296 17 view .LVU3298
 296:Veno-Echo.cpp ****                 GetModCV();
 11851              		.loc 20 296 31 is_stmt 0 view .LVU3299
 11852 0b6a FFF7FEFF 		bl	_Z14Update_Buttonsv
 11853              	.LVL730:
 297:Veno-Echo.cpp ****                 
 11854              		.loc 20 297 17 is_stmt 1 view .LVU3300
 297:Veno-Echo.cpp ****                 
 11855              		.loc 20 297 25 is_stmt 0 view .LVU3301
 11856 0b6e FFF7FEFF 		bl	_Z8GetModCVv
 11857              	.LVL731:
 299:Veno-Echo.cpp ****             break;
 11858              		.loc 20 299 17 is_stmt 1 view .LVU3302
 299:Veno-Echo.cpp ****             break;
 11859              		.loc 20 299 38 is_stmt 0 view .LVU3303
 11860 0b72 FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11861              	.LVL732:
 300:Veno-Echo.cpp **** 
 11862              		.loc 20 300 13 is_stmt 1 view .LVU3304
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 362


 11863 0b76 FFF773BA 		b	.L507
 11864              	.LVL733:
 11865              	.L521:
 306:Veno-Echo.cpp ****                 if(saveState != SAVING)
 11866              		.loc 20 306 13 view .LVU3305
 307:Veno-Echo.cpp ****                 {
 11867              		.loc 20 307 17 view .LVU3306
 307:Veno-Echo.cpp ****                 {
 11868              		.loc 20 307 30 is_stmt 0 view .LVU3307
 11869 0b7a 264B     		ldr	r3, .L654+100
 307:Veno-Echo.cpp ****                 {
 11870              		.loc 20 307 17 view .LVU3308
 11871 0b7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11872 0b7e 022B     		cmp	r3, #2
 11873 0b80 3FF46EAA 		beq	.L507
 309:Veno-Echo.cpp ****                 }
 11874              		.loc 20 309 21 is_stmt 1 view .LVU3309
 309:Veno-Echo.cpp ****                 }
 11875              		.loc 20 309 38 is_stmt 0 view .LVU3310
 11876 0b84 FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11877              	.LVL734:
 309:Veno-Echo.cpp ****                 }
 11878              		.loc 20 309 38 view .LVU3311
 11879 0b88 FFF76ABA 		b	.L507
 11880              	.LVL735:
 11881              	.L520:
 313:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11882              		.loc 20 313 13 is_stmt 1 view .LVU3312
 314:Veno-Echo.cpp ****             break;
 11883              		.loc 20 314 17 view .LVU3313
 11884              	.LBB2242:
 11885              	.LBI2242:
 951:Veno-Echo.cpp **** {
 11886              		.loc 20 951 6 view .LVU3314
 11887              	.LBB2243:
 953:Veno-Echo.cpp **** }
 11888              		.loc 20 953 5 view .LVU3315
 953:Veno-Echo.cpp **** }
 11889              		.loc 20 953 36 is_stmt 0 view .LVU3316
 11890 0b8c 0121     		movs	r1, #1
 11891 0b8e 2248     		ldr	r0, .L654+104
 11892              	.LVL736:
 953:Veno-Echo.cpp **** }
 11893              		.loc 20 953 36 view .LVU3317
 11894 0b90 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11895              	.LVL737:
 953:Veno-Echo.cpp **** }
 11896              		.loc 20 953 19 view .LVU3318
 11897 0b94 214B     		ldr	r3, .L654+108
 11898 0b96 83ED000A 		vstr.32	s0, [r3]
 954:Veno-Echo.cpp **** 
 11899              		.loc 20 954 1 view .LVU3319
 11900 0b9a FFF761BA 		b	.L507
 11901              	.LVL738:
 11902              	.L519:
 954:Veno-Echo.cpp **** 
 11903              		.loc 20 954 1 view .LVU3320
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 363


 11904              	.LBE2243:
 11905              	.LBE2242:
 317:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11906              		.loc 20 317 13 is_stmt 1 view .LVU3321
 318:Veno-Echo.cpp ****                 {
 11907              		.loc 20 318 17 view .LVU3322
 318:Veno-Echo.cpp ****                 {
 11908              		.loc 20 318 30 is_stmt 0 view .LVU3323
 11909 0b9e 1D4B     		ldr	r3, .L654+100
 318:Veno-Echo.cpp ****                 {
 11910              		.loc 20 318 17 view .LVU3324
 11911 0ba0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11912 0ba2 022B     		cmp	r3, #2
 11913 0ba4 3FF45CAA 		beq	.L507
 320:Veno-Echo.cpp ****                 }
 11914              		.loc 20 320 21 is_stmt 1 view .LVU3325
 320:Veno-Echo.cpp ****                 }
 11915              		.loc 20 320 38 is_stmt 0 view .LVU3326
 11916 0ba8 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11917              	.LVL739:
 320:Veno-Echo.cpp ****                 }
 11918              		.loc 20 320 38 view .LVU3327
 11919 0bac FFF758BA 		b	.L507
 11920              	.L655:
 11921              		.align	2
 11922              	.L654:
 11923 0bb0 00000000 		.word	.LANCHOR83
 11924 0bb4 CDCCCC3D 		.word	1036831949
 11925 0bb8 00000000 		.word	.LANCHOR49
 11926 0bbc 00000000 		.word	.LANCHOR50
 11927 0bc0 00000000 		.word	.LANCHOR122
 11928 0bc4 00000000 		.word	.LANCHOR123
 11929 0bc8 00000000 		.word	.LANCHOR37
 11930 0bcc 00000000 		.word	.LANCHOR38
 11931 0bd0 00000000 		.word	.LANCHOR120
 11932 0bd4 00000000 		.word	.LANCHOR121
 11933 0bd8 00000000 		.word	.LANCHOR126
 11934 0bdc 00000000 		.word	.LANCHOR127
 11935 0be0 00000000 		.word	0
 11936 0be4 00000000 		.word	.LANCHOR47
 11937 0be8 00000000 		.word	.LANCHOR48
 11938 0bec 00000000 		.word	.LANCHOR118
 11939 0bf0 00000000 		.word	.LANCHOR119
 11940 0bf4 00000000 		.word	.LANCHOR35
 11941 0bf8 00000000 		.word	.LANCHOR36
 11942 0bfc 00000000 		.word	.LANCHOR116
 11943 0c00 00000000 		.word	.LANCHOR117
 11944 0c04 00000000 		.word	.LANCHOR124
 11945 0c08 00000000 		.word	.LANCHOR125
 11946 0c0c CDCC4C3E 		.word	1045220557
 11947 0c10 CDCC4CBE 		.word	3192704205
 11948 0c14 00000000 		.word	.LANCHOR108
 11949 0c18 18000000 		.word	.LANCHOR4+24
 11950 0c1c 00000000 		.word	.LANCHOR17
 11951              	.LVL740:
 11952              	.L518:
 324:Veno-Echo.cpp ****                 Update_feedbackL_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 364


 11953              		.loc 20 324 13 is_stmt 1 view .LVU3328
 325:Veno-Echo.cpp ****             break;
 11954              		.loc 20 325 17 view .LVU3329
 11955              	.LBB2244:
 11956              	.LBI2244:
1050:Veno-Echo.cpp **** {
 11957              		.loc 20 1050 6 view .LVU3330
 11958              	.LBB2245:
1052:Veno-Echo.cpp **** }
 11959              		.loc 20 1052 5 view .LVU3331
1052:Veno-Echo.cpp **** }
 11960              		.loc 20 1052 35 is_stmt 0 view .LVU3332
 11961 0c20 0221     		movs	r1, #2
 11962 0c22 2848     		ldr	r0, .L656
 11963              	.LVL741:
1052:Veno-Echo.cpp **** }
 11964              		.loc 20 1052 35 view .LVU3333
 11965 0c24 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11966              	.LVL742:
1052:Veno-Echo.cpp **** }
 11967              		.loc 20 1052 18 view .LVU3334
 11968 0c28 274B     		ldr	r3, .L656+4
 11969 0c2a 83ED000A 		vstr.32	s0, [r3]
1053:Veno-Echo.cpp **** void Update_feedbackL()
 11970              		.loc 20 1053 1 view .LVU3335
 11971 0c2e FFF717BA 		b	.L507
 11972              	.LVL743:
 11973              	.L517:
1053:Veno-Echo.cpp **** void Update_feedbackL()
 11974              		.loc 20 1053 1 view .LVU3336
 11975              	.LBE2245:
 11976              	.LBE2244:
 328:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11977              		.loc 20 328 13 is_stmt 1 view .LVU3337
 329:Veno-Echo.cpp ****                 {
 11978              		.loc 20 329 17 view .LVU3338
 329:Veno-Echo.cpp ****                 {
 11979              		.loc 20 329 30 is_stmt 0 view .LVU3339
 11980 0c32 264B     		ldr	r3, .L656+8
 329:Veno-Echo.cpp ****                 {
 11981              		.loc 20 329 17 view .LVU3340
 11982 0c34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11983 0c36 022B     		cmp	r3, #2
 11984 0c38 3FF412AA 		beq	.L507
 331:Veno-Echo.cpp ****                 }
 11985              		.loc 20 331 21 is_stmt 1 view .LVU3341
 331:Veno-Echo.cpp ****                 }
 11986              		.loc 20 331 37 is_stmt 0 view .LVU3342
 11987 0c3c FFF7FEFF 		bl	_Z16Update_feedbackLv
 11988              	.LVL744:
 331:Veno-Echo.cpp ****                 }
 11989              		.loc 20 331 37 view .LVU3343
 11990 0c40 FFF70EBA 		b	.L507
 11991              	.LVL745:
 11992              	.L516:
 335:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 11993              		.loc 20 335 13 is_stmt 1 view .LVU3344
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 365


 336:Veno-Echo.cpp ****             break;
 11994              		.loc 20 336 17 view .LVU3345
 11995              	.LBB2246:
 11996              	.LBI2246:
1139:Veno-Echo.cpp **** {
 11997              		.loc 20 1139 6 view .LVU3346
 11998              	.LBB2247:
1141:Veno-Echo.cpp **** }
 11999              		.loc 20 1141 5 view .LVU3347
1141:Veno-Echo.cpp **** }
 12000              		.loc 20 1141 35 is_stmt 0 view .LVU3348
 12001 0c44 0321     		movs	r1, #3
 12002 0c46 1F48     		ldr	r0, .L656
 12003              	.LVL746:
1141:Veno-Echo.cpp **** }
 12004              		.loc 20 1141 35 view .LVU3349
 12005 0c48 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12006              	.LVL747:
1141:Veno-Echo.cpp **** }
 12007              		.loc 20 1141 18 view .LVU3350
 12008 0c4c 204B     		ldr	r3, .L656+12
 12009 0c4e 83ED000A 		vstr.32	s0, [r3]
1142:Veno-Echo.cpp **** 
 12010              		.loc 20 1142 1 view .LVU3351
 12011 0c52 FFF705BA 		b	.L507
 12012              	.LVL748:
 12013              	.L515:
1142:Veno-Echo.cpp **** 
 12014              		.loc 20 1142 1 view .LVU3352
 12015              	.LBE2247:
 12016              	.LBE2246:
 339:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12017              		.loc 20 339 13 is_stmt 1 view .LVU3353
 340:Veno-Echo.cpp ****                 {
 12018              		.loc 20 340 17 view .LVU3354
 340:Veno-Echo.cpp ****                 {
 12019              		.loc 20 340 30 is_stmt 0 view .LVU3355
 12020 0c56 1D4B     		ldr	r3, .L656+8
 340:Veno-Echo.cpp ****                 {
 12021              		.loc 20 340 17 view .LVU3356
 12022 0c58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12023 0c5a 022B     		cmp	r3, #2
 12024 0c5c 3FF400AA 		beq	.L507
 342:Veno-Echo.cpp ****                 }
 12025              		.loc 20 342 21 is_stmt 1 view .LVU3357
 342:Veno-Echo.cpp ****                 }
 12026              		.loc 20 342 37 is_stmt 0 view .LVU3358
 12027 0c60 FFF7FEFF 		bl	_Z16Update_feedbackRv
 12028              	.LVL749:
 342:Veno-Echo.cpp ****                 }
 12029              		.loc 20 342 37 view .LVU3359
 12030 0c64 FFF7FCB9 		b	.L507
 12031              	.LVL750:
 12032              	.L514:
 346:Veno-Echo.cpp ****                 Update_drywet_CV();
 12033              		.loc 20 346 13 is_stmt 1 view .LVU3360
 347:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 366


 12034              		.loc 20 347 17 view .LVU3361
 12035              	.LBB2248:
 12036              	.LBI2248:
1229:Veno-Echo.cpp **** {
 12037              		.loc 20 1229 6 view .LVU3362
 12038              	.LBB2249:
1231:Veno-Echo.cpp **** }
 12039              		.loc 20 1231 5 view .LVU3363
1231:Veno-Echo.cpp **** }
 12040              		.loc 20 1231 32 is_stmt 0 view .LVU3364
 12041 0c68 0421     		movs	r1, #4
 12042 0c6a 1648     		ldr	r0, .L656
 12043              	.LVL751:
1231:Veno-Echo.cpp **** }
 12044              		.loc 20 1231 32 view .LVU3365
 12045 0c6c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12046              	.LVL752:
1231:Veno-Echo.cpp **** }
 12047              		.loc 20 1231 15 view .LVU3366
 12048 0c70 184B     		ldr	r3, .L656+16
 12049 0c72 83ED000A 		vstr.32	s0, [r3]
1232:Veno-Echo.cpp **** 
 12050              		.loc 20 1232 1 view .LVU3367
 12051 0c76 FFF7F3B9 		b	.L507
 12052              	.LVL753:
 12053              	.L513:
1232:Veno-Echo.cpp **** 
 12054              		.loc 20 1232 1 view .LVU3368
 12055              	.LBE2249:
 12056              	.LBE2248:
 350:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12057              		.loc 20 350 13 is_stmt 1 view .LVU3369
 351:Veno-Echo.cpp ****                 {
 12058              		.loc 20 351 17 view .LVU3370
 351:Veno-Echo.cpp ****                 {
 12059              		.loc 20 351 30 is_stmt 0 view .LVU3371
 12060 0c7a 144B     		ldr	r3, .L656+8
 351:Veno-Echo.cpp ****                 {
 12061              		.loc 20 351 17 view .LVU3372
 12062 0c7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12063 0c7e 022B     		cmp	r3, #2
 12064 0c80 3FF4EEA9 		beq	.L507
 353:Veno-Echo.cpp ****                 }
 12065              		.loc 20 353 21 is_stmt 1 view .LVU3373
 353:Veno-Echo.cpp ****                 }
 12066              		.loc 20 353 34 is_stmt 0 view .LVU3374
 12067 0c84 FFF7FEFF 		bl	_Z13Update_drywetv
 12068              	.LVL754:
 353:Veno-Echo.cpp ****                 }
 12069              		.loc 20 353 34 view .LVU3375
 12070 0c88 FFF7EAB9 		b	.L507
 12071              	.LVL755:
 12072              	.L512:
 357:Veno-Echo.cpp ****                 Update_width_CV();
 12073              		.loc 20 357 13 is_stmt 1 view .LVU3376
 358:Veno-Echo.cpp ****             break;
 12074              		.loc 20 358 17 view .LVU3377
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 367


 12075              	.LBB2250:
 12076              	.LBI2250:
1344:Veno-Echo.cpp **** {
 12077              		.loc 20 1344 6 view .LVU3378
 12078              	.LBB2251:
1346:Veno-Echo.cpp **** }
 12079              		.loc 20 1346 5 view .LVU3379
1346:Veno-Echo.cpp **** }
 12080              		.loc 20 1346 30 is_stmt 0 view .LVU3380
 12081 0c8c 0521     		movs	r1, #5
 12082 0c8e 0D48     		ldr	r0, .L656
 12083              	.LVL756:
1346:Veno-Echo.cpp **** }
 12084              		.loc 20 1346 30 view .LVU3381
 12085 0c90 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12086              	.LVL757:
1346:Veno-Echo.cpp **** }
 12087              		.loc 20 1346 13 view .LVU3382
 12088 0c94 104B     		ldr	r3, .L656+20
 12089 0c96 83ED000A 		vstr.32	s0, [r3]
1347:Veno-Echo.cpp **** 
 12090              		.loc 20 1347 1 view .LVU3383
 12091 0c9a FFF7E1B9 		b	.L507
 12092              	.LVL758:
 12093              	.L511:
1347:Veno-Echo.cpp **** 
 12094              		.loc 20 1347 1 view .LVU3384
 12095              	.LBE2251:
 12096              	.LBE2250:
 361:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12097              		.loc 20 361 13 is_stmt 1 view .LVU3385
 362:Veno-Echo.cpp ****                 {
 12098              		.loc 20 362 17 view .LVU3386
 362:Veno-Echo.cpp ****                 {
 12099              		.loc 20 362 30 is_stmt 0 view .LVU3387
 12100 0c9e 0B4B     		ldr	r3, .L656+8
 362:Veno-Echo.cpp ****                 {
 12101              		.loc 20 362 17 view .LVU3388
 12102 0ca0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12103 0ca2 022B     		cmp	r3, #2
 12104 0ca4 3FF4DCA9 		beq	.L507
 364:Veno-Echo.cpp ****                 }
 12105              		.loc 20 364 21 is_stmt 1 view .LVU3389
 364:Veno-Echo.cpp ****                 }
 12106              		.loc 20 364 33 is_stmt 0 view .LVU3390
 12107 0ca8 FFF7FEFF 		bl	_Z12Update_widthv
 12108              	.LVL759:
 364:Veno-Echo.cpp ****                 }
 12109              		.loc 20 364 33 view .LVU3391
 12110 0cac FFF7D8B9 		b	.L507
 12111              	.LVL760:
 12112              	.L510:
 368:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12113              		.loc 20 368 13 is_stmt 1 view .LVU3392
 369:Veno-Echo.cpp ****                 {
 12114              		.loc 20 369 17 view .LVU3393
 369:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 368


 12115              		.loc 20 369 30 is_stmt 0 view .LVU3394
 12116 0cb0 064B     		ldr	r3, .L656+8
 369:Veno-Echo.cpp ****                 {
 12117              		.loc 20 369 17 view .LVU3395
 12118 0cb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12119 0cb4 022B     		cmp	r3, #2
 12120 0cb6 3FF4D3A9 		beq	.L507
 371:Veno-Echo.cpp ****                 }
 12121              		.loc 20 371 21 is_stmt 1 view .LVU3396
 371:Veno-Echo.cpp ****                 }
 12122              		.loc 20 371 41 is_stmt 0 view .LVU3397
 12123 0cba FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 12124              	.LVL761:
 371:Veno-Echo.cpp ****                 }
 12125              		.loc 20 371 41 view .LVU3398
 12126 0cbe FFF7CFB9 		b	.L507
 12127              	.L657:
 12128 0cc2 00BF     		.align	2
 12129              	.L656:
 12130 0cc4 18000000 		.word	.LANCHOR4+24
 12131 0cc8 00000000 		.word	.LANCHOR27
 12132 0ccc 00000000 		.word	.LANCHOR108
 12133 0cd0 00000000 		.word	.LANCHOR39
 12134 0cd4 00000000 		.word	.LANCHOR51
 12135 0cd8 00000000 		.word	.LANCHOR59
 12136              		.cfi_endproc
 12137              	.LFE4798:
 12139              		.section	.text._Z9HardLimitff,"ax",%progbits
 12140              		.align	1
 12141              		.p2align 2,,3
 12142              		.global	_Z9HardLimitff
 12143              		.syntax unified
 12144              		.thumb
 12145              		.thumb_func
 12146              		.fpu fpv5-d16
 12148              	_Z9HardLimitff:
 12149              	.LVL762:
 12150              	.LFB4825:
2003:Veno-Echo.cpp ****     float returnval{};
 12151              		.loc 20 2003 1 is_stmt 1 view -0
 12152              		.cfi_startproc
 12153              		@ args = 0, pretend = 0, frame = 0
 12154              		@ frame_needed = 0, uses_anonymous_args = 0
 12155              		@ link register save eliminated.
2004:Veno-Echo.cpp ****     if (input > limit)
 12156              		.loc 20 2004 5 view .LVU3400
2005:Veno-Echo.cpp ****         returnval = limit;
 12157              		.loc 20 2005 5 view .LVU3401
 12158 0000 B4EEE00A 		vcmpe.f32	s0, s1
 12159 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12160 0008 07DC     		bgt	.L659
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12161              		.loc 20 2007 10 view .LVU3402
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12162              		.loc 20 2007 28 is_stmt 0 view .LVU3403
 12163 000a F1EE600A 		vneg.f32	s1, s1
 12164              	.LVL763:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 369


2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12165              		.loc 20 2007 10 view .LVU3404
 12166 000e F4EEC00A 		vcmpe.f32	s1, s0
 12167 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2010:Veno-Echo.cpp **** 
 12168              		.loc 20 2010 19 view .LVU3405
 12169 0016 70FE800A 		vselgt.f32	s1, s1, s0
 12170              	.L659:
 12171              	.LVL764:
2012:Veno-Echo.cpp **** }
 12172              		.loc 20 2012 5 is_stmt 1 view .LVU3406
2013:Veno-Echo.cpp **** 
 12173              		.loc 20 2013 1 is_stmt 0 view .LVU3407
 12174 001a B0EE600A 		vmov.f32	s0, s1
 12175              	.LVL765:
2013:Veno-Echo.cpp **** 
 12176              		.loc 20 2013 1 view .LVU3408
 12177 001e 7047     		bx	lr
 12178              		.cfi_endproc
 12179              	.LFE4825:
 12181              		.section	.text._Z10PotCVComboff,"ax",%progbits
 12182              		.align	1
 12183              		.p2align 2,,3
 12184              		.global	_Z10PotCVComboff
 12185              		.syntax unified
 12186              		.thumb
 12187              		.thumb_func
 12188              		.fpu fpv5-d16
 12190              	_Z10PotCVComboff:
 12191              	.LVL766:
 12192              	.LFB4826:
2016:Veno-Echo.cpp ****     float output{};
 12193              		.loc 20 2016 1 is_stmt 1 view -0
 12194              		.cfi_startproc
 12195              		@ args = 0, pretend = 0, frame = 0
 12196              		@ frame_needed = 0, uses_anonymous_args = 0
 12197              		@ link register save eliminated.
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 12198              		.loc 20 2017 5 view .LVU3410
2018:Veno-Echo.cpp **** 
 12199              		.loc 20 2018 5 view .LVU3411
2018:Veno-Echo.cpp **** 
 12200              		.loc 20 2018 39 is_stmt 0 view .LVU3412
 12201 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2018:Veno-Echo.cpp **** 
 12202              		.loc 20 2018 49 view .LVU3413
 12203 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2018:Veno-Echo.cpp **** 
 12204              		.loc 20 2018 12 view .LVU3414
 12205 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2018:Veno-Echo.cpp **** 
 12206              		.loc 20 2018 39 view .LVU3415
 12207 000c 77EEE00A 		vsub.f32	s1, s15, s1
 12208              	.LVL767:
2018:Veno-Echo.cpp **** 
 12209              		.loc 20 2018 49 view .LVU3416
 12210 0010 70EEE60A 		vsub.f32	s1, s1, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 370


2018:Veno-Echo.cpp **** 
 12211              		.loc 20 2018 12 view .LVU3417
 12212 0014 A0EE870A 		vfma.f32	s0, s1, s14
 12213              	.LVL768:
2020:Veno-Echo.cpp ****     {
 12214              		.loc 20 2020 5 is_stmt 1 view .LVU3418
 12215 0018 B5EEC00A 		vcmpe.f32	s0, #0
 12216 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12217 0020 06D4     		bmi	.L665
2025:Veno-Echo.cpp ****     {
 12218              		.loc 20 2025 5 view .LVU3419
2027:Veno-Echo.cpp ****     }
 12219              		.loc 20 2027 16 is_stmt 0 view .LVU3420
 12220 0022 B4EE670A 		vcmp.f32	s0, s15
 12221 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12222 002a 37FE800A 		vselgt.f32	s0, s15, s0
 12223              	.LVL769:
2027:Veno-Echo.cpp ****     }
 12224              		.loc 20 2027 16 view .LVU3421
 12225 002e 7047     		bx	lr
 12226              	.LVL770:
 12227              	.L665:
2022:Veno-Echo.cpp ****     }
 12228              		.loc 20 2022 16 view .LVU3422
 12229 0030 9FED010A 		vldr.32	s0, .L667
 12230              	.LVL771:
2030:Veno-Echo.cpp **** }
 12231              		.loc 20 2030 5 is_stmt 1 view .LVU3423
2031:Veno-Echo.cpp **** 
 12232              		.loc 20 2031 1 is_stmt 0 view .LVU3424
 12233 0034 7047     		bx	lr
 12234              	.L668:
 12235 0036 00BF     		.align	2
 12236              	.L667:
 12237 0038 00000000 		.word	0
 12238              		.cfi_endproc
 12239              	.LFE4826:
 12241              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 12242              		.align	1
 12243              		.p2align 2,,3
 12244              		.global	_Z16checkPickupStateffbb
 12245              		.syntax unified
 12246              		.thumb
 12247              		.thumb_func
 12248              		.fpu fpv5-d16
 12250              	_Z16checkPickupStateffbb:
 12251              	.LVL772:
 12252              	.LFB4827:
2035:Veno-Echo.cpp ****     bool retval{};
 12253              		.loc 20 2035 1 is_stmt 1 view -0
 12254              		.cfi_startproc
 12255              		@ args = 0, pretend = 0, frame = 0
 12256              		@ frame_needed = 0, uses_anonymous_args = 0
 12257              		@ link register save eliminated.
2036:Veno-Echo.cpp ****     
 12258              		.loc 20 2036 5 view .LVU3426
2038:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 371


 12259              		.loc 20 2038 5 view .LVU3427
 12260 0000 69B1     		cbz	r1, .L670
2040:Veno-Echo.cpp ****         {
 12261              		.loc 20 2040 9 view .LVU3428
 12262              	.LVL773:
 12263              	.LBB2252:
 12264              	.LBI2252:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12265              		.loc 21 75 3 view .LVU3429
 12266              	.LBB2253:
 12267              		.loc 21 76 5 view .LVU3430
 12268              		.loc 21 76 5 is_stmt 0 view .LVU3431
 12269              	.LBE2253:
 12270              	.LBE2252:
2040:Veno-Echo.cpp ****         {
 12271              		.loc 20 2040 15 view .LVU3432
 12272 0002 70EE600A 		vsub.f32	s1, s0, s1
 12273              	.LVL774:
2040:Veno-Echo.cpp ****         {
 12274              		.loc 20 2040 9 view .LVU3433
 12275 0006 DFED0D7A 		vldr.32	s15, .L673
 12276              	.LBB2255:
 12277              	.LBB2254:
 12278              		.loc 21 76 31 view .LVU3434
 12279 000a B0EEE00A 		vabs.f32	s0, s1
 12280              	.LVL775:
 12281              		.loc 21 76 31 view .LVU3435
 12282              	.LBE2254:
 12283              	.LBE2255:
2040:Veno-Echo.cpp ****         {
 12284              		.loc 20 2040 9 view .LVU3436
 12285 000e B4EEE70A 		vcmpe.f32	s0, s15
 12286 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12287 0016 D4BF     		ite	le
 12288 0018 0120     		movle	r0, #1
 12289              	.LVL776:
2040:Veno-Echo.cpp ****         {
 12290              		.loc 20 2040 9 view .LVU3437
 12291 001a 0020     		movgt	r0, #0
 12292 001c 7047     		bx	lr
 12293              	.LVL777:
 12294              	.L670:
2052:Veno-Echo.cpp ****     {
 12295              		.loc 20 2052 5 is_stmt 1 view .LVU3438
 12296 001e 60B9     		cbnz	r0, .L671
2054:Veno-Echo.cpp ****         {
 12297              		.loc 20 2054 9 view .LVU3439
 12298              	.LVL778:
 12299              	.LBB2256:
 12300              	.LBI2256:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12301              		.loc 21 75 3 view .LVU3440
 12302              	.LBB2257:
 12303              		.loc 21 76 5 view .LVU3441
 12304              		.loc 21 76 5 is_stmt 0 view .LVU3442
 12305              	.LBE2257:
 12306              	.LBE2256:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 372


2054:Veno-Echo.cpp ****         {
 12307              		.loc 20 2054 15 view .LVU3443
 12308 0020 30EE600A 		vsub.f32	s0, s0, s1
 12309              	.LVL779:
2054:Veno-Echo.cpp ****         {
 12310              		.loc 20 2054 9 view .LVU3444
 12311 0024 DFED057A 		vldr.32	s15, .L673
 12312              	.LBB2259:
 12313              	.LBB2258:
 12314              		.loc 21 76 31 view .LVU3445
 12315 0028 B0EEC00A 		vabs.f32	s0, s0
 12316              	.LBE2258:
 12317              	.LBE2259:
2054:Veno-Echo.cpp ****         {
 12318              		.loc 20 2054 9 view .LVU3446
 12319 002c B4EEE70A 		vcmpe.f32	s0, s15
 12320 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12321 0034 CCBF     		ite	gt
 12322 0036 0120     		movgt	r0, #1
 12323              	.LVL780:
2054:Veno-Echo.cpp ****         {
 12324              		.loc 20 2054 9 view .LVU3447
 12325 0038 0020     		movle	r0, #0
 12326              	.L671:
 12327              	.LVL781:
2071:Veno-Echo.cpp **** 
 12328              		.loc 20 2071 5 is_stmt 1 view .LVU3448
2073:Veno-Echo.cpp **** 
 12329              		.loc 20 2073 1 is_stmt 0 view .LVU3449
 12330 003a 7047     		bx	lr
 12331              	.L674:
 12332              		.align	2
 12333              	.L673:
 12334 003c 0AD7A33B 		.word	1000593162
 12335              		.cfi_endproc
 12336              	.LFE4827:
 12338              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 12339              		.align	1
 12340              		.p2align 2,,3
 12341              		.global	_Z20checkPickupState_altff11pickupStateb
 12342              		.syntax unified
 12343              		.thumb
 12344              		.thumb_func
 12345              		.fpu fpv5-d16
 12347              	_Z20checkPickupState_altff11pickupStateb:
 12348              	.LVL782:
 12349              	.LFB4828:
2077:Veno-Echo.cpp ****     pickupState retval{};
 12350              		.loc 20 2077 1 is_stmt 1 view -0
 12351              		.cfi_startproc
 12352              		@ args = 0, pretend = 0, frame = 0
 12353              		@ frame_needed = 0, uses_anonymous_args = 0
 12354              		@ link register save eliminated.
2078:Veno-Echo.cpp **** 
 12355              		.loc 20 2078 5 view .LVU3451
2080:Veno-Echo.cpp ****     {
 12356              		.loc 20 2080 5 view .LVU3452
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 373


 12357 0000 A1B1     		cbz	r1, .L676
2082:Veno-Echo.cpp ****         {
 12358              		.loc 20 2082 9 view .LVU3453
2082:Veno-Echo.cpp ****         {
 12359              		.loc 20 2082 31 is_stmt 0 view .LVU3454
 12360 0002 DFED1A7A 		vldr.32	s15, .L693
 12361 0006 30EEE77A 		vsub.f32	s14, s1, s15
2082:Veno-Echo.cpp ****         {
 12362              		.loc 20 2082 9 view .LVU3455
 12363 000a B4EEC07A 		vcmpe.f32	s14, s0
 12364 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12365 0012 01DD     		ble	.L691
 12366 0014 0020     		movs	r0, #0
 12367              	.LVL783:
2082:Veno-Echo.cpp ****         {
 12368              		.loc 20 2082 9 view .LVU3456
 12369 0016 7047     		bx	lr
 12370              	.LVL784:
 12371              	.L691:
2087:Veno-Echo.cpp ****         {
 12372              		.loc 20 2087 14 is_stmt 1 view .LVU3457
2087:Veno-Echo.cpp ****         {
 12373              		.loc 20 2087 36 is_stmt 0 view .LVU3458
 12374 0018 70EEA70A 		vadd.f32	s1, s1, s15
 12375              	.LVL785:
2087:Veno-Echo.cpp ****         {
 12376              		.loc 20 2087 14 view .LVU3459
 12377 001c F4EEC00A 		vcmpe.f32	s1, s0
 12378 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2094:Veno-Echo.cpp ****         }
 12379              		.loc 20 2094 20 view .LVU3460
 12380 0024 4CBF     		ite	mi
 12381 0026 0120     		movmi	r0, #1
 12382              	.LVL786:
2094:Veno-Echo.cpp ****         }
 12383              		.loc 20 2094 20 view .LVU3461
 12384 0028 0220     		movpl	r0, #2
 12385 002a 7047     		bx	lr
 12386              	.LVL787:
 12387              	.L676:
2100:Veno-Echo.cpp ****         {
 12388              		.loc 20 2100 9 is_stmt 1 view .LVU3462
 12389 002c 0128     		cmp	r0, #1
 12390 002e 04D0     		beq	.L679
 12391 0030 0228     		cmp	r0, #2
 12392 0032 01D0     		beq	.L677
 12393 0034 68B1     		cbz	r0, .L692
 12394 0036 0846     		mov	r0, r1
 12395              	.LVL788:
 12396              	.L677:
2121:Veno-Echo.cpp **** }
 12397              		.loc 20 2121 5 view .LVU3463
2122:Veno-Echo.cpp **** 
 12398              		.loc 20 2122 1 is_stmt 0 view .LVU3464
 12399 0038 7047     		bx	lr
 12400              	.LVL789:
 12401              	.L679:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 374


2109:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 12402              		.loc 20 2109 13 is_stmt 1 view .LVU3465
2110:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12403              		.loc 20 2110 13 view .LVU3466
2110:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12404              		.loc 20 2110 35 is_stmt 0 view .LVU3467
 12405 003a DFED0C7A 		vldr.32	s15, .L693
 12406 003e 70EEA70A 		vadd.f32	s1, s1, s15
 12407              	.LVL790:
2110:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12408              		.loc 20 2110 13 view .LVU3468
 12409 0042 F4EEC00A 		vcmpe.f32	s1, s0
 12410 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12411 004a CCBF     		ite	gt
 12412 004c 0220     		movgt	r0, #2
 12413              	.LVL791:
2110:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12414              		.loc 20 2110 13 view .LVU3469
 12415 004e 0120     		movle	r0, #1
 12416 0050 7047     		bx	lr
 12417              	.LVL792:
 12418              	.L692:
2102:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 12419              		.loc 20 2102 13 is_stmt 1 view .LVU3470
2103:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12420              		.loc 20 2103 13 view .LVU3471
2103:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12421              		.loc 20 2103 35 is_stmt 0 view .LVU3472
 12422 0052 DFED067A 		vldr.32	s15, .L693
 12423 0056 70EEE70A 		vsub.f32	s1, s1, s15
 12424              	.LVL793:
2103:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12425              		.loc 20 2103 13 view .LVU3473
 12426 005a F4EEC00A 		vcmpe.f32	s1, s0
 12427 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12428 0062 4CBF     		ite	mi
 12429 0064 0220     		movmi	r0, #2
 12430              	.LVL794:
2103:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12431              		.loc 20 2103 13 view .LVU3474
 12432 0066 0020     		movpl	r0, #0
 12433 0068 7047     		bx	lr
 12434              	.L694:
 12435 006a 00BF     		.align	2
 12436              	.L693:
 12437 006c 0AD7A33B 		.word	1000593162
 12438              		.cfi_endproc
 12439              	.LFE4828:
 12441              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 12442              		.align	1
 12443              		.p2align 2,,3
 12444              		.global	_Z11GetTapRatio9TapRatios
 12445              		.syntax unified
 12446              		.thumb
 12447              		.thumb_func
 12448              		.fpu fpv5-d16
 12450              	_Z11GetTapRatio9TapRatios:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 375


 12451              	.LVL795:
 12452              	.LFB4829:
2125:Veno-Echo.cpp **** double retVal{};
 12453              		.loc 20 2125 1 is_stmt 1 view -0
 12454              		.cfi_startproc
 12455              		@ args = 0, pretend = 0, frame = 0
 12456              		@ frame_needed = 0, uses_anonymous_args = 0
 12457              		@ link register save eliminated.
2126:Veno-Echo.cpp ****     switch(ratio)
 12458              		.loc 20 2126 1 view .LVU3476
2127:Veno-Echo.cpp ****     {
 12459              		.loc 20 2127 5 view .LVU3477
 12460 0000 0138     		subs	r0, r0, #1
 12461              	.LVL796:
2127:Veno-Echo.cpp ****     {
 12462              		.loc 20 2127 5 is_stmt 0 view .LVU3478
 12463 0002 C0B2     		uxtb	r0, r0
 12464 0004 0228     		cmp	r0, #2
 12465 0006 05D8     		bhi	.L697
 12466 0008 044B     		ldr	r3, .L698
 12467 000a 03EBC000 		add	r0, r3, r0, lsl #3
 12468 000e 90ED000B 		vldr.64	d0, [r0]
 12469 0012 7047     		bx	lr
 12470              	.L697:
2125:Veno-Echo.cpp **** double retVal{};
 12471              		.loc 20 2125 1 view .LVU3479
 12472 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 12473              	.LVL797:
 12474              		.loc 20 2150 1 is_stmt 1 view .LVU3480
2151:Veno-Echo.cpp **** }
 12475              		.loc 20 2151 1 is_stmt 0 view .LVU3481
 12476 0018 7047     		bx	lr
 12477              	.L699:
 12478 001a 00BF     		.align	2
 12479              	.L698:
 12480 001c 00000000 		.word	.LANCHOR25
 12481              		.cfi_endproc
 12482              	.LFE4829:
 12484              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 12485              		.align	1
 12486              		.p2align 2,,3
 12487              		.syntax unified
 12488              		.thumb
 12489              		.thumb_func
 12490              		.fpu fpv5-d16
 12492              	_GLOBAL__sub_I_delMemsL:
 12493              	.LFB5419:
 12494              		.loc 20 2151 1 is_stmt 1 view -0
 12495              		.cfi_startproc
 12496              		@ args = 0, pretend = 0, frame = 0
 12497              		@ frame_needed = 0, uses_anonymous_args = 0
 12498              	.LBB2425:
 12499              	.LBI2425:
 12500              		.loc 20 2151 1 view .LVU3483
 12501              	.LVL798:
 12502              	.LBB2426:
 12503              	.LBB2427:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 376


 12504              	.LBI2427:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 12505              		.loc 3 21 5 view .LVU3484
 12506              	.LBB2428:
 12507              	.LBB2429:
 12508              	.LBI2429:
 12509              		.file 26 "../libdaisy/src/per/qspi.h"
   1:../libdaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../libdaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../libdaisy/src/per/qspi.h **** 
   4:../libdaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../libdaisy/src/per/qspi.h **** 
   6:../libdaisy/src/per/qspi.h **** #include <cstdint>
   7:../libdaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../libdaisy/src/per/qspi.h **** 
   9:../libdaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../libdaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../libdaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../libdaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../libdaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../libdaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../libdaisy/src/per/qspi.h **** 
  19:../libdaisy/src/per/qspi.h **** namespace daisy
  20:../libdaisy/src/per/qspi.h **** {
  21:../libdaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../libdaisy/src/per/qspi.h **** @{
  23:../libdaisy/src/per/qspi.h **** */
  24:../libdaisy/src/per/qspi.h **** 
  25:../libdaisy/src/per/qspi.h **** /** 
  26:../libdaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../libdaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../libdaisy/src/per/qspi.h ****     * IS25LP080D
  29:../libdaisy/src/per/qspi.h **** */
  30:../libdaisy/src/per/qspi.h **** class QSPIHandle
  31:../libdaisy/src/per/qspi.h **** {
  32:../libdaisy/src/per/qspi.h ****   public:
  33:../libdaisy/src/per/qspi.h ****     enum Result
  34:../libdaisy/src/per/qspi.h ****     {
  35:../libdaisy/src/per/qspi.h ****         OK = 0,
  36:../libdaisy/src/per/qspi.h ****         ERR
  37:../libdaisy/src/per/qspi.h ****     };
  38:../libdaisy/src/per/qspi.h **** 
  39:../libdaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../libdaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../libdaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../libdaisy/src/per/qspi.h ****          * 
  43:../libdaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../libdaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../libdaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../libdaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../libdaisy/src/per/qspi.h ****          */
  48:../libdaisy/src/per/qspi.h ****     enum Status
  49:../libdaisy/src/per/qspi.h ****     {
  50:../libdaisy/src/per/qspi.h ****         GOOD = 0,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 377


  51:../libdaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../libdaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../libdaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../libdaisy/src/per/qspi.h ****     };
  55:../libdaisy/src/per/qspi.h **** 
  56:../libdaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../libdaisy/src/per/qspi.h ****     struct Config
  58:../libdaisy/src/per/qspi.h ****     {
  59:../libdaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../libdaisy/src/per/qspi.h ****         enum Device
  61:../libdaisy/src/per/qspi.h ****         {
  62:../libdaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../libdaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../libdaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../libdaisy/src/per/qspi.h ****         };
  66:../libdaisy/src/per/qspi.h **** 
  67:../libdaisy/src/per/qspi.h ****         /** 
  68:../libdaisy/src/per/qspi.h ****         Modes of operation.
  69:../libdaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../libdaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../libdaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../libdaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../libdaisy/src/per/qspi.h ****         */
  74:../libdaisy/src/per/qspi.h ****         enum Mode
  75:../libdaisy/src/per/qspi.h ****         {
  76:../libdaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../libdaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../libdaisy/src/per/qspi.h ****             MODE_LAST,
  79:../libdaisy/src/per/qspi.h ****         };
  80:../libdaisy/src/per/qspi.h **** 
  81:../libdaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../libdaisy/src/per/qspi.h ****         struct
  83:../libdaisy/src/per/qspi.h ****         {
  84:../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../libdaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../libdaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../libdaisy/src/per/qspi.h ****         } pin_config;
  91:../libdaisy/src/per/qspi.h **** 
  92:../libdaisy/src/per/qspi.h ****         Device device;
  93:../libdaisy/src/per/qspi.h ****         Mode   mode;
  94:../libdaisy/src/per/qspi.h ****     };
  95:../libdaisy/src/per/qspi.h **** 
  96:../libdaisy/src/per/qspi.h ****     /** 
  97:../libdaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../libdaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../libdaisy/src/per/qspi.h ****         */
 101:../libdaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../libdaisy/src/per/qspi.h **** 
 103:../libdaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../libdaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../libdaisy/src/per/qspi.h **** 
 106:../libdaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../libdaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 378


 108:../libdaisy/src/per/qspi.h ****     /** 
 109:../libdaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../libdaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../libdaisy/src/per/qspi.h ****         */
 113:../libdaisy/src/per/qspi.h ****     Result DeInit();
 114:../libdaisy/src/per/qspi.h **** 
 115:../libdaisy/src/per/qspi.h ****     /** 
 116:../libdaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../libdaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../libdaisy/src/per/qspi.h ****         \param address Address to write to
 119:../libdaisy/src/per/qspi.h ****         \param size Buffer size
 120:../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../libdaisy/src/per/qspi.h ****         */
 123:../libdaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../libdaisy/src/per/qspi.h **** 
 125:../libdaisy/src/per/qspi.h ****     /** 
 126:../libdaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../libdaisy/src/per/qspi.h ****         \param address Address to write to
 128:../libdaisy/src/per/qspi.h ****         \param size Buffer size
 129:../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../libdaisy/src/per/qspi.h ****         */
 132:../libdaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../libdaisy/src/per/qspi.h **** 
 134:../libdaisy/src/per/qspi.h ****     /** 
 135:../libdaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../libdaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../libdaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../libdaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../libdaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../libdaisy/src/per/qspi.h ****         */
 142:../libdaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../libdaisy/src/per/qspi.h **** 
 144:../libdaisy/src/per/qspi.h ****     /**  
 145:../libdaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../libdaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../libdaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../libdaisy/src/per/qspi.h ****         */
 150:../libdaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../libdaisy/src/per/qspi.h **** 
 152:../libdaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../libdaisy/src/per/qspi.h ****      *  \returns Status
 154:../libdaisy/src/per/qspi.h ****      */
 155:../libdaisy/src/per/qspi.h ****     Status GetStatus();
 156:../libdaisy/src/per/qspi.h **** 
 157:../libdaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../libdaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../libdaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../libdaisy/src/per/qspi.h ****      * 
 161:../libdaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../libdaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../libdaisy/src/per/qspi.h ****     */
 164:../libdaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 379


 165:../libdaisy/src/per/qspi.h **** 
 166:../libdaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 12510              		.loc 26 166 5 view .LVU3485
 12511              	.LBE2429:
 12512              	.LBE2428:
 12513              	.LBE2427:
 12514              	.LBE2426:
 12515              	.LBE2425:
 12516              		.loc 20 2151 1 is_stmt 0 view .LVU3486
 12517 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 12518              		.cfi_def_cfa_offset 32
 12519              		.cfi_offset 3, -32
 12520              		.cfi_offset 4, -28
 12521              		.cfi_offset 5, -24
 12522              		.cfi_offset 6, -20
 12523              		.cfi_offset 7, -16
 12524              		.cfi_offset 8, -12
 12525              		.cfi_offset 9, -8
 12526              		.cfi_offset 14, -4
 12527              	.LBB2619:
 12528              	.LBB2611:
 12529              	.LBB2447:
 12530              	.LBB2445:
 12531              	.LBB2434:
 12532              	.LBB2430:
 12533              	.LBB2431:
 12534              		.loc 26 166 34 view .LVU3487
 12535 0004 BB48     		ldr	r0, .L702
 12536 0006 0027     		movs	r7, #0
 12537              	.LBE2431:
 12538              	.LBE2430:
 12539              	.LBE2434:
 12540              	.LBE2445:
 12541              	.LBE2447:
 12542              		.file 27 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 380


  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12543              		.loc 27 33 18 view .LVU3488
 12544 0008 BB4D     		ldr	r5, .L702+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12545              		.loc 20 40 12 view .LVU3489
 12546 000a BC4C     		ldr	r4, .L702+8
 12547              		.loc 27 33 18 view .LVU3490
 12548 000c 2A46     		mov	r2, r5
 12549 000e BC49     		ldr	r1, .L702+12
 12550              	.LBB2448:
 12551              	.LBB2446:
 12552              	.LBB2435:
 12553              	.LBB2433:
 12554              	.LBB2432:
 12555              		.loc 26 166 34 view .LVU3491
 12556 0010 0760     		str	r7, [r0]
 12557              	.LVL799:
 12558              		.loc 26 166 34 view .LVU3492
 12559              	.LBE2432:
 12560              	.LBE2433:
 12561              	.LBE2435:
 12562              	.LBB2436:
 12563              	.LBI2436:
  76:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12564              		.loc 7 76 5 is_stmt 1 view .LVU3493
 12565              	.LBB2437:
 12566              	.LBB2438:
  76:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12567              		.loc 7 76 35 is_stmt 0 view .LVU3494
 12568 0012 4761     		str	r7, [r0, #20]
 12569              	.LVL800:
  76:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12570              		.loc 7 76 35 view .LVU3495
 12571              	.LBE2438:
 12572              	.LBE2437:
 12573              	.LBE2436:
 12574              	.LBB2439:
 12575              	.LBI2439:
  92:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12576              		.loc 6 92 5 is_stmt 1 view .LVU3496
  92:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12577              		.loc 6 92 5 is_stmt 0 view .LVU3497
 12578              	.LBE2439:
 12579              	.LBB2440:
 12580              	.LBI2440:
 12581              		.file 28 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 381


   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../libdaisy/src/per/dac.h ****  ** 
  12:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../libdaisy/src/per/dac.h ****  **
  15:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../libdaisy/src/per/dac.h ****  **
  17:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../libdaisy/src/per/dac.h ****  ***/
  21:../libdaisy/src/per/dac.h **** class DacHandle
  22:../libdaisy/src/per/dac.h **** {
  23:../libdaisy/src/per/dac.h ****   public:
  24:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../libdaisy/src/per/dac.h ****     enum class Result
  26:../libdaisy/src/per/dac.h ****     {
  27:../libdaisy/src/per/dac.h ****         OK,
  28:../libdaisy/src/per/dac.h ****         ERR,
  29:../libdaisy/src/per/dac.h ****     };
  30:../libdaisy/src/per/dac.h **** 
  31:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../libdaisy/src/per/dac.h ****     enum class Channel
  33:../libdaisy/src/per/dac.h ****     {
  34:../libdaisy/src/per/dac.h ****         ONE,
  35:../libdaisy/src/per/dac.h ****         TWO,
  36:../libdaisy/src/per/dac.h ****         BOTH,
  37:../libdaisy/src/per/dac.h ****     };
  38:../libdaisy/src/per/dac.h **** 
  39:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../libdaisy/src/per/dac.h ****      **
  41:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../libdaisy/src/per/dac.h ****      **
  43:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../libdaisy/src/per/dac.h ****      ***/
  46:../libdaisy/src/per/dac.h ****     enum class Mode
  47:../libdaisy/src/per/dac.h ****     {
  48:../libdaisy/src/per/dac.h ****         POLLING,
  49:../libdaisy/src/per/dac.h ****         DMA,
  50:../libdaisy/src/per/dac.h ****     };
  51:../libdaisy/src/per/dac.h **** 
  52:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../libdaisy/src/per/dac.h ****      ***/
  56:../libdaisy/src/per/dac.h ****     enum class BitDepth
  57:../libdaisy/src/per/dac.h ****     {
  58:../libdaisy/src/per/dac.h ****         BITS_8,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 382


  59:../libdaisy/src/per/dac.h ****         BITS_12
  60:../libdaisy/src/per/dac.h ****     };
  61:../libdaisy/src/per/dac.h **** 
  62:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../libdaisy/src/per/dac.h ****     enum class BufferState
  64:../libdaisy/src/per/dac.h ****     {
  65:../libdaisy/src/per/dac.h ****         ENABLED,
  66:../libdaisy/src/per/dac.h ****         DISABLED,
  67:../libdaisy/src/per/dac.h ****     };
  68:../libdaisy/src/per/dac.h **** 
  69:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../libdaisy/src/per/dac.h ****     struct Config
  71:../libdaisy/src/per/dac.h ****     {
  72:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../libdaisy/src/per/dac.h **** 
  78:../libdaisy/src/per/dac.h ****         Channel     chn;
  79:../libdaisy/src/per/dac.h ****         Mode        mode;
  80:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  82:../libdaisy/src/per/dac.h ****     };
  83:../libdaisy/src/per/dac.h **** 
  84:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12582              		.loc 28 84 5 is_stmt 1 view .LVU3498
 12583              	.LBB2441:
 12584              	.LBB2442:
 12585              		.loc 28 84 33 is_stmt 0 view .LVU3499
 12586 0014 0762     		str	r7, [r0, #32]
 12587              	.LVL801:
 12588              		.loc 28 84 33 view .LVU3500
 12589              	.LBE2442:
 12590              	.LBE2441:
 12591              	.LBE2440:
 12592              	.LBB2443:
 12593              	.LBI2443:
  40:../libdaisy/src/hid/usb.h **** 
 12594              		.loc 5 40 5 is_stmt 1 view .LVU3501
  40:../libdaisy/src/hid/usb.h **** 
 12595              		.loc 5 40 5 is_stmt 0 view .LVU3502
 12596              	.LBE2443:
 12597              	.LBB2444:
 12598              	.LBI2444:
  77:../libdaisy/src/sys/system.h ****     ~System() {}
 12599              		.loc 4 77 5 is_stmt 1 view .LVU3503
  77:../libdaisy/src/sys/system.h ****     ~System() {}
 12600              		.loc 4 77 5 is_stmt 0 view .LVU3504
 12601              	.LBE2444:
 12602              	.LBE2446:
 12603              	.LBE2448:
 12604              		.loc 27 33 18 view .LVU3505
 12605 0016 FFF7FEFF 		bl	__aeabi_atexit
 12606              	.LVL802:
 12607              	.LBB2449:
 12608              	.LBI2449:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 383


  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12609              		.loc 10 21 5 is_stmt 1 view .LVU3506
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12610              		.loc 10 21 5 is_stmt 0 view .LVU3507
 12611              	.LBE2449:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12612              		.loc 20 40 12 view .LVU3508
 12613 001a 2A46     		mov	r2, r5
 12614 001c 2146     		mov	r1, r4
 12615 001e B948     		ldr	r0, .L702+16
 12616 0020 FFF7FEFF 		bl	__aeabi_atexit
 12617              	.LVL803:
 12618              	.LBB2450:
 12619              	.LBI2450:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12620              		.loc 10 21 5 is_stmt 1 view .LVU3509
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12621              		.loc 10 21 5 is_stmt 0 view .LVU3510
 12622              	.LBE2450:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12623              		.loc 20 41 12 view .LVU3511
 12624 0024 2A46     		mov	r2, r5
 12625 0026 2146     		mov	r1, r4
 12626 0028 B748     		ldr	r0, .L702+20
 12627 002a FFF7FEFF 		bl	__aeabi_atexit
 12628              	.LVL804:
 12629              	.LBB2451:
 12630              	.LBI2451:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12631              		.loc 10 21 5 is_stmt 1 view .LVU3512
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12632              		.loc 10 21 5 is_stmt 0 view .LVU3513
 12633              	.LBE2451:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12634              		.loc 20 42 12 view .LVU3514
 12635 002e 2A46     		mov	r2, r5
 12636 0030 2146     		mov	r1, r4
 12637 0032 B648     		ldr	r0, .L702+24
 12638 0034 FFF7FEFF 		bl	__aeabi_atexit
 12639              	.LVL805:
 12640              	.LBB2452:
 12641              	.LBI2452:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12642              		.loc 10 21 5 is_stmt 1 view .LVU3515
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12643              		.loc 10 21 5 is_stmt 0 view .LVU3516
 12644              	.LBE2452:
  43:Veno-Echo.cpp **** 
 12645              		.loc 20 43 12 view .LVU3517
 12646 0038 2A46     		mov	r2, r5
 12647 003a 2146     		mov	r1, r4
 12648 003c B448     		ldr	r0, .L702+28
 12649 003e FFF7FEFF 		bl	__aeabi_atexit
 12650              	.LVL806:
 12651              	.LBB2453:
 12652              	.LBI2453:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 384


 12653              		.loc 10 21 5 is_stmt 1 view .LVU3518
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12654              		.loc 10 21 5 is_stmt 0 view .LVU3519
 12655              	.LBE2453:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12656              		.loc 20 45 12 view .LVU3520
 12657 0042 2A46     		mov	r2, r5
 12658 0044 2146     		mov	r1, r4
 12659 0046 B348     		ldr	r0, .L702+32
 12660 0048 FFF7FEFF 		bl	__aeabi_atexit
 12661              	.LVL807:
 12662              	.LBB2454:
 12663              	.LBI2454:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12664              		.loc 10 21 5 is_stmt 1 view .LVU3521
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12665              		.loc 10 21 5 is_stmt 0 view .LVU3522
 12666              	.LBE2454:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12667              		.loc 20 46 12 view .LVU3523
 12668 004c 2A46     		mov	r2, r5
 12669 004e 2146     		mov	r1, r4
 12670 0050 B148     		ldr	r0, .L702+36
 12671 0052 FFF7FEFF 		bl	__aeabi_atexit
 12672              	.LVL808:
 12673              	.LBB2455:
 12674              	.LBI2455:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12675              		.loc 10 21 5 is_stmt 1 view .LVU3524
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12676              		.loc 10 21 5 is_stmt 0 view .LVU3525
 12677              	.LBE2455:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12678              		.loc 20 47 12 view .LVU3526
 12679 0056 2A46     		mov	r2, r5
 12680 0058 2146     		mov	r1, r4
 12681 005a B048     		ldr	r0, .L702+40
 12682 005c FFF7FEFF 		bl	__aeabi_atexit
 12683              	.LVL809:
 12684              	.LBB2456:
 12685              	.LBI2456:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12686              		.loc 10 21 5 is_stmt 1 view .LVU3527
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12687              		.loc 10 21 5 is_stmt 0 view .LVU3528
 12688              	.LBE2456:
  48:Veno-Echo.cpp **** 
 12689              		.loc 20 48 12 view .LVU3529
 12690 0060 2A46     		mov	r2, r5
 12691 0062 2146     		mov	r1, r4
 12692 0064 AE48     		ldr	r0, .L702+44
 12693 0066 FFF7FEFF 		bl	__aeabi_atexit
 12694              	.LVL810:
 12695              	.LBB2457:
 12696              	.LBI2457:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12697              		.loc 9 15 5 is_stmt 1 view .LVU3530
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 385


  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12698              		.loc 9 15 5 is_stmt 0 view .LVU3531
 12699              	.LBE2457:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12700              		.loc 20 50 19 view .LVU3532
 12701 006a 2A46     		mov	r2, r5
 12702 006c AD49     		ldr	r1, .L702+48
 12703              	.LBB2458:
 12704              	.LBB2459:
 12705              	.LBB2460:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12706              		.loc 12 45 13 view .LVU3533
 12707 006e 0024     		movs	r4, #0
 12708              	.LBE2460:
 12709              	.LBE2459:
 12710              	.LBE2458:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12711              		.loc 20 50 19 view .LVU3534
 12712 0070 AD48     		ldr	r0, .L702+52
 12713 0072 FFF7FEFF 		bl	__aeabi_atexit
 12714              	.LVL811:
 12715              	.LBB2465:
 12716              	.LBI2458:
  43:envFollow.h   ****     {
 12717              		.loc 12 43 5 is_stmt 1 view .LVU3535
 12718              	.LBB2463:
 12719              	.LBB2461:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12720              		.loc 12 45 9 view .LVU3536
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12721              		.loc 12 48 11 is_stmt 0 view .LVU3537
 12722 0076 DFF85083 		ldr	r8, .L702+212
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12723              		.loc 12 45 13 view .LVU3538
 12724 007a AC48     		ldr	r0, .L702+56
 12725              	.LBE2461:
 12726              	.LBE2463:
 12727              	.LBE2465:
  51:Veno-Echo.cpp **** 
 12728              		.loc 20 51 18 view .LVU3539
 12729 007c 2A46     		mov	r2, r5
 12730 007e AC49     		ldr	r1, .L702+60
 12731              	.LBB2466:
 12732              	.LBB2464:
 12733              	.LBB2462:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12734              		.loc 12 45 13 view .LVU3540
 12735 0080 0460     		str	r4, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12736              		.loc 12 46 9 is_stmt 1 view .LVU3541
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12737              		.loc 12 46 20 is_stmt 0 view .LVU3542
 12738 0082 4460     		str	r4, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12739              		.loc 12 47 9 is_stmt 1 view .LVU3543
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12740              		.loc 12 47 17 is_stmt 0 view .LVU3544
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 386


 12741 0084 C460     		str	r4, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12742              		.loc 12 48 9 is_stmt 1 view .LVU3545
  50:envFollow.h   ****     }  
 12743              		.loc 12 50 21 is_stmt 0 view .LVU3546
 12744 0086 8460     		str	r4, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12745              		.loc 12 48 11 view .LVU3547
 12746 0088 C0F81080 		str	r8, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12747              		.loc 12 49 9 is_stmt 1 view .LVU3548
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12748              		.loc 12 49 15 is_stmt 0 view .LVU3549
 12749 008c C0F81480 		str	r8, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12750              		.loc 12 50 9 is_stmt 1 view .LVU3550
 12751              	.LVL812:
  50:envFollow.h   ****     }  
 12752              		.loc 12 50 9 is_stmt 0 view .LVU3551
 12753              	.LBE2462:
 12754              	.LBE2464:
 12755              	.LBE2466:
  51:Veno-Echo.cpp **** 
 12756              		.loc 20 51 18 view .LVU3552
 12757 0090 FFF7FEFF 		bl	__aeabi_atexit
 12758              	.LVL813:
 12759              	.LBB2467:
 12760              	.LBI2467:
  43:envFollow.h   ****     {
 12761              		.loc 12 43 5 is_stmt 1 view .LVU3553
 12762              	.LBB2468:
 12763              	.LBB2469:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12764              		.loc 12 45 9 view .LVU3554
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12765              		.loc 12 45 13 is_stmt 0 view .LVU3555
 12766 0094 A748     		ldr	r0, .L702+64
 12767              	.LBE2469:
 12768              	.LBE2468:
 12769              	.LBE2467:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12770              		.loc 20 56 76 view .LVU3556
 12771 0096 DFF83493 		ldr	r9, .L702+216
  51:Veno-Echo.cpp **** 
 12772              		.loc 20 51 27 view .LVU3557
 12773 009a 2A46     		mov	r2, r5
 12774 009c A449     		ldr	r1, .L702+60
 12775              	.LBB2472:
 12776              	.LBB2471:
 12777              	.LBB2470:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12778              		.loc 12 45 13 view .LVU3558
 12779 009e 0460     		str	r4, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12780              		.loc 12 46 9 is_stmt 1 view .LVU3559
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12781              		.loc 12 46 20 is_stmt 0 view .LVU3560
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 387


 12782 00a0 4460     		str	r4, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12783              		.loc 12 47 9 is_stmt 1 view .LVU3561
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12784              		.loc 12 47 17 is_stmt 0 view .LVU3562
 12785 00a2 C460     		str	r4, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12786              		.loc 12 48 9 is_stmt 1 view .LVU3563
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12787              		.loc 12 48 11 is_stmt 0 view .LVU3564
 12788 00a4 C0F81080 		str	r8, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12789              		.loc 12 49 9 is_stmt 1 view .LVU3565
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12790              		.loc 12 49 15 is_stmt 0 view .LVU3566
 12791 00a8 C0F81480 		str	r8, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12792              		.loc 12 50 9 is_stmt 1 view .LVU3567
  50:envFollow.h   ****     }  
 12793              		.loc 12 50 21 is_stmt 0 view .LVU3568
 12794 00ac 8460     		str	r4, [r0, #8]	@ float
 12795              	.LVL814:
  50:envFollow.h   ****     }  
 12796              		.loc 12 50 21 view .LVU3569
 12797              	.LBE2470:
 12798              	.LBE2471:
 12799              	.LBE2472:
  51:Veno-Echo.cpp **** 
 12800              		.loc 20 51 27 view .LVU3570
 12801 00ae FFF7FEFF 		bl	__aeabi_atexit
 12802              	.LVL815:
 12803              	.LBB2473:
 12804              	.LBI2473:
  48:delayline_multitap.h ****     {
 12805              		.loc 18 48 5 is_stmt 1 view .LVU3571
  48:delayline_multitap.h ****     {
 12806              		.loc 18 48 5 is_stmt 0 view .LVU3572
 12807              	.LBE2473:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12808              		.loc 20 59 80 view .LVU3573
 12809 00b2 DFF81C83 		ldr	r8, .L702+220
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12810              		.loc 20 56 76 view .LVU3574
 12811 00b6 2A46     		mov	r2, r5
 12812 00b8 4946     		mov	r1, r9
 12813 00ba 9F48     		ldr	r0, .L702+68
 12814 00bc FFF7FEFF 		bl	__aeabi_atexit
 12815              	.LVL816:
 12816              	.LBB2474:
 12817              	.LBI2474:
  48:delayline_multitap.h ****     {
 12818              		.loc 18 48 5 is_stmt 1 view .LVU3575
  48:delayline_multitap.h ****     {
 12819              		.loc 18 48 5 is_stmt 0 view .LVU3576
 12820              	.LBE2474:
  57:Veno-Echo.cpp **** 
 12821              		.loc 20 57 76 view .LVU3577
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 388


 12822 00c0 2A46     		mov	r2, r5
 12823 00c2 4946     		mov	r1, r9
 12824 00c4 9D48     		ldr	r0, .L702+72
 12825 00c6 FFF7FEFF 		bl	__aeabi_atexit
 12826              	.LVL817:
 12827              	.LBB2475:
 12828              	.LBI2475:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12829              		.loc 19 38 5 is_stmt 1 view .LVU3578
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12830              		.loc 19 38 5 is_stmt 0 view .LVU3579
 12831              	.LBE2475:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12832              		.loc 20 59 80 view .LVU3580
 12833 00ca 2A46     		mov	r2, r5
 12834 00cc 4146     		mov	r1, r8
 12835 00ce 9C48     		ldr	r0, .L702+76
 12836 00d0 FFF7FEFF 		bl	__aeabi_atexit
 12837              	.LVL818:
 12838              	.LBB2476:
 12839              	.LBI2476:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12840              		.loc 19 38 5 is_stmt 1 view .LVU3581
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12841              		.loc 19 38 5 is_stmt 0 view .LVU3582
 12842              	.LBE2476:
  60:Veno-Echo.cpp **** 
 12843              		.loc 20 60 80 view .LVU3583
 12844 00d4 2A46     		mov	r2, r5
 12845 00d6 4146     		mov	r1, r8
 12846 00d8 9A48     		ldr	r0, .L702+80
 12847              	.LBB2477:
 12848              	.LBB2478:
 12849              	.LBB2479:
 12850              	.LBB2480:
 12851              	.LBB2481:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12852              		.loc 8 36 12 view .LVU3584
 12853 00da 9B4E     		ldr	r6, .L702+84
 12854              	.LBE2481:
 12855              	.LBE2480:
 12856              	.LBE2479:
 12857              	.LBE2478:
 12858              	.LBE2477:
  60:Veno-Echo.cpp **** 
 12859              		.loc 20 60 80 view .LVU3585
 12860 00dc FFF7FEFF 		bl	__aeabi_atexit
 12861              	.LVL819:
 12862              	.LBB2503:
 12863              	.LBI2477:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12864              		.loc 17 49 1 is_stmt 1 view .LVU3586
 12865              	.LBB2498:
 12866              	.LBB2490:
 12867              	.LBI2490:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12868              		.loc 14 47 1 view .LVU3587
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 389


 12869              	.LBB2491:
 12870              	.LBB2492:
 12871              	.LBI2492:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12872              		.loc 16 24 5 view .LVU3588
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12873              		.loc 16 24 5 is_stmt 0 view .LVU3589
 12874              	.LBE2492:
 12875              	.LBB2493:
 12876              	.LBI2493:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12877              		.loc 15 15 5 is_stmt 1 view .LVU3590
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12878              		.loc 15 15 5 is_stmt 0 view .LVU3591
 12879              	.LBE2493:
 12880              	.LBE2491:
 12881              	.LBE2490:
 12882              	.LBE2498:
 12883              	.LBE2503:
 12884              	.LBE2611:
 12885              	.LBE2619:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12886              		.loc 17 49 14 is_stmt 1 view .LVU3592
  49:DelayMulti.h  **** ~DelayMulti() {}
 12887              		.loc 17 49 14 view .LVU3593
 12888              	.LBB2620:
 12889              	.LBB2612:
 12890              	.LBB2504:
 12891              	.LBB2499:
 12892              	.LBB2494:
 12893              	.LBI2479:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12894              		.loc 8 36 5 view .LVU3594
 12895              	.LBB2486:
 12896              	.LBB2482:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12897              		.loc 8 36 12 is_stmt 0 view .LVU3595
 12898 00e0 9A48     		ldr	r0, .L702+88
 12899              	.LBE2482:
 12900              	.LBE2486:
 12901              	.LBE2494:
 12902              	.LBE2499:
 12903              	.LBE2504:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12904              		.loc 20 98 12 view .LVU3596
 12905 00e2 2A46     		mov	r2, r5
 12906 00e4 9A49     		ldr	r1, .L702+92
 12907              	.LBB2505:
 12908              	.LBB2500:
 12909              	.LBB2495:
 12910              	.LBB2487:
 12911              	.LBB2483:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12912              		.loc 8 36 12 view .LVU3597
 12913 00e6 C465     		str	r4, [r0, #92]	@ float
 12914 00e8 0466     		str	r4, [r0, #96]	@ float
 12915 00ea 8466     		str	r4, [r0, #104]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 390


 12916 00ec 8467     		str	r4, [r0, #120]	@ float
 12917 00ee C467     		str	r4, [r0, #124]	@ float
 12918 00f0 C0F88040 		str	r4, [r0, #128]	@ float
 12919 00f4 A0F88870 		strh	r7, [r0, #136]	@ movhi
 12920              	.LVL820:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12921              		.loc 8 36 12 view .LVU3598
 12922              	.LBE2483:
 12923              	.LBE2487:
 12924              	.LBE2495:
 12925              	.LBE2500:
 12926              	.LBE2505:
 12927              	.LBE2612:
 12928              	.LBE2620:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12929              		.loc 17 49 14 is_stmt 1 view .LVU3599
  49:DelayMulti.h  **** ~DelayMulti() {}
 12930              		.loc 17 49 14 view .LVU3600
 12931              	.LBB2621:
 12932              	.LBB2613:
 12933              	.LBB2506:
 12934              	.LBB2501:
 12935              	.LBB2496:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12936              		.loc 8 36 5 view .LVU3601
 12937              	.LBB2488:
 12938              	.LBB2484:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12939              		.loc 8 36 12 is_stmt 0 view .LVU3602
 12940 00f8 C0F88C40 		str	r4, [r0, #140]	@ float
 12941 00fc C0F89040 		str	r4, [r0, #144]	@ float
 12942 0100 C0F89840 		str	r4, [r0, #152]	@ float
 12943 0104 C0F8A840 		str	r4, [r0, #168]	@ float
 12944 0108 C0F8AC40 		str	r4, [r0, #172]	@ float
 12945 010c C0F8B040 		str	r4, [r0, #176]	@ float
 12946 0110 A0F8B870 		strh	r7, [r0, #184]	@ movhi
 12947              	.LVL821:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12948              		.loc 8 36 12 view .LVU3603
 12949              	.LBE2484:
 12950              	.LBE2488:
 12951              	.LBE2496:
 12952              	.LBE2501:
 12953              	.LBE2506:
 12954              	.LBE2613:
 12955              	.LBE2621:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12956              		.loc 17 49 14 is_stmt 1 view .LVU3604
  49:DelayMulti.h  **** ~DelayMulti() {}
 12957              		.loc 17 49 14 view .LVU3605
 12958              	.LBB2622:
 12959              	.LBB2614:
 12960              	.LBB2507:
 12961              	.LBB2502:
 12962              	.LBB2497:
 12963              	.LBB2489:
 12964              	.LBB2485:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 391


  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12965              		.loc 8 36 12 is_stmt 0 view .LVU3606
 12966 0114 4666     		str	r6, [r0, #100]	@ float
 12967 0116 C666     		str	r6, [r0, #108]	@ float
 12968 0118 0667     		str	r6, [r0, #112]	@ float
 12969 011a 4667     		str	r6, [r0, #116]	@ float
 12970 011c C0F89460 		str	r6, [r0, #148]	@ float
 12971 0120 C0F89C60 		str	r6, [r0, #156]	@ float
 12972 0124 C0F8A060 		str	r6, [r0, #160]	@ float
 12973 0128 C0F8A460 		str	r6, [r0, #164]	@ float
 12974              	.LBE2485:
 12975              	.LBE2489:
 12976              	.LBE2497:
 12977              	.LBE2502:
 12978              	.LBE2507:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12979              		.loc 20 98 12 view .LVU3607
 12980 012c FFF7FEFF 		bl	__aeabi_atexit
 12981              	.LVL822:
 12982              	.LBB2508:
 12983              	.LBI2508:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12984              		.loc 17 49 1 is_stmt 1 view .LVU3608
 12985              	.LBB2509:
 12986              	.LBB2510:
 12987              	.LBI2510:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12988              		.loc 14 47 1 view .LVU3609
 12989              	.LBB2511:
 12990              	.LBB2512:
 12991              	.LBI2512:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12992              		.loc 16 24 5 view .LVU3610
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12993              		.loc 16 24 5 is_stmt 0 view .LVU3611
 12994              	.LBE2512:
 12995              	.LBB2513:
 12996              	.LBI2513:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12997              		.loc 15 15 5 is_stmt 1 view .LVU3612
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12998              		.loc 15 15 5 is_stmt 0 view .LVU3613
 12999              	.LBE2513:
 13000              	.LBE2511:
 13001              	.LBE2510:
 13002              	.LBE2509:
 13003              	.LBE2508:
 13004              	.LBE2614:
 13005              	.LBE2622:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13006              		.loc 17 49 14 is_stmt 1 view .LVU3614
  49:DelayMulti.h  **** ~DelayMulti() {}
 13007              		.loc 17 49 14 view .LVU3615
 13008              	.LBB2623:
 13009              	.LBB2615:
 13010              	.LBB2526:
 13011              	.LBB2523:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 392


 13012              	.LBB2514:
 13013              	.LBI2514:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13014              		.loc 8 36 5 view .LVU3616
 13015              	.LBB2515:
 13016              	.LBB2516:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13017              		.loc 8 36 12 is_stmt 0 view .LVU3617
 13018 0130 8848     		ldr	r0, .L702+96
 13019              	.LBE2516:
 13020              	.LBE2515:
 13021              	.LBE2514:
 13022              	.LBE2523:
 13023              	.LBE2526:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13024              		.loc 20 102 11 view .LVU3618
 13025 0132 DFF8A082 		ldr	r8, .L702+224
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 13026              		.loc 20 98 19 view .LVU3619
 13027 0136 2A46     		mov	r2, r5
 13028 0138 8549     		ldr	r1, .L702+92
 13029              	.LBB2527:
 13030              	.LBB2524:
 13031              	.LBB2521:
 13032              	.LBB2519:
 13033              	.LBB2517:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13034              		.loc 8 36 12 view .LVU3620
 13035 013a C465     		str	r4, [r0, #92]	@ float
 13036 013c 0466     		str	r4, [r0, #96]	@ float
 13037 013e 4666     		str	r6, [r0, #100]	@ float
 13038 0140 8466     		str	r4, [r0, #104]	@ float
 13039 0142 C666     		str	r6, [r0, #108]	@ float
 13040 0144 0667     		str	r6, [r0, #112]	@ float
 13041 0146 4667     		str	r6, [r0, #116]	@ float
 13042 0148 8467     		str	r4, [r0, #120]	@ float
 13043 014a C467     		str	r4, [r0, #124]	@ float
 13044 014c C0F88040 		str	r4, [r0, #128]	@ float
 13045 0150 A0F88870 		strh	r7, [r0, #136]	@ movhi
 13046              	.LVL823:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13047              		.loc 8 36 12 view .LVU3621
 13048              	.LBE2517:
 13049              	.LBE2519:
 13050              	.LBE2521:
 13051              	.LBE2524:
 13052              	.LBE2527:
 13053              	.LBE2615:
 13054              	.LBE2623:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13055              		.loc 17 49 14 is_stmt 1 view .LVU3622
  49:DelayMulti.h  **** ~DelayMulti() {}
 13056              		.loc 17 49 14 view .LVU3623
 13057              	.LBB2624:
 13058              	.LBB2616:
 13059              	.LBB2528:
 13060              	.LBB2525:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 393


 13061              	.LBB2522:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13062              		.loc 8 36 5 view .LVU3624
 13063              	.LBB2520:
 13064              	.LBB2518:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13065              		.loc 8 36 12 is_stmt 0 view .LVU3625
 13066 0154 C0F88C40 		str	r4, [r0, #140]	@ float
 13067 0158 C0F89040 		str	r4, [r0, #144]	@ float
 13068 015c C0F89460 		str	r6, [r0, #148]	@ float
 13069 0160 C0F89840 		str	r4, [r0, #152]	@ float
 13070 0164 C0F89C60 		str	r6, [r0, #156]	@ float
 13071 0168 C0F8A060 		str	r6, [r0, #160]	@ float
 13072 016c C0F8A460 		str	r6, [r0, #164]	@ float
 13073 0170 C0F8A840 		str	r4, [r0, #168]	@ float
 13074 0174 C0F8AC40 		str	r4, [r0, #172]	@ float
 13075 0178 C0F8B040 		str	r4, [r0, #176]	@ float
 13076 017c A0F8B870 		strh	r7, [r0, #184]	@ movhi
 13077              	.LVL824:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13078              		.loc 8 36 12 view .LVU3626
 13079              	.LBE2518:
 13080              	.LBE2520:
 13081              	.LBE2522:
 13082              	.LBE2525:
 13083              	.LBE2528:
 13084              	.LBE2616:
 13085              	.LBE2624:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13086              		.loc 17 49 14 is_stmt 1 view .LVU3627
  49:DelayMulti.h  **** ~DelayMulti() {}
 13087              		.loc 17 49 14 view .LVU3628
 13088              	.LBB2625:
 13089              	.LBB2617:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 13090              		.loc 20 98 19 is_stmt 0 view .LVU3629
 13091 0180 FFF7FEFF 		bl	__aeabi_atexit
 13092              	.LVL825:
 13093              	.LBB2529:
 13094              	.LBI2529:
  78:LEDs.h        ****     ~ButtonLED() {}
 13095              		.loc 14 78 5 is_stmt 1 view .LVU3630
 13096              	.LBB2530:
 13097              	.LBB2531:
 13098              	.LBI2531:
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13099              		.loc 1 41 5 view .LVU3631
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13100              		.loc 1 41 5 is_stmt 0 view .LVU3632
 13101              	.LBE2531:
 13102              	.LBB2532:
 13103              	.LBI2532:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13104              		.loc 16 24 5 is_stmt 1 view .LVU3633
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13105              		.loc 16 24 5 is_stmt 0 view .LVU3634
 13106              	.LBE2532:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 394


 13107              	.LBE2530:
 13108              	.LBE2529:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13109              		.loc 20 102 11 view .LVU3635
 13110 0184 2A46     		mov	r2, r5
 13111 0186 4146     		mov	r1, r8
 13112 0188 7348     		ldr	r0, .L702+100
 13113 018a FFF7FEFF 		bl	__aeabi_atexit
 13114              	.LVL826:
 13115              	.LBB2533:
 13116              	.LBI2533:
  78:LEDs.h        ****     ~ButtonLED() {}
 13117              		.loc 14 78 5 is_stmt 1 view .LVU3636
 13118              	.LBB2534:
 13119              	.LBB2535:
 13120              	.LBI2535:
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13121              		.loc 1 41 5 view .LVU3637
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13122              		.loc 1 41 5 is_stmt 0 view .LVU3638
 13123              	.LBE2535:
 13124              	.LBB2536:
 13125              	.LBI2536:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13126              		.loc 16 24 5 is_stmt 1 view .LVU3639
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13127              		.loc 16 24 5 is_stmt 0 view .LVU3640
 13128              	.LBE2536:
 13129              	.LBE2534:
 13130              	.LBE2533:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13131              		.loc 20 102 18 view .LVU3641
 13132 018e 2A46     		mov	r2, r5
 13133 0190 4146     		mov	r1, r8
 13134 0192 7248     		ldr	r0, .L702+104
 13135 0194 FFF7FEFF 		bl	__aeabi_atexit
 13136              	.LVL827:
 13137              	.LBB2537:
 13138              	.LBI2537:
  78:LEDs.h        ****     ~ButtonLED() {}
 13139              		.loc 14 78 5 is_stmt 1 view .LVU3642
 13140              	.LBB2538:
 13141              	.LBB2539:
 13142              	.LBI2539:
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13143              		.loc 1 41 5 view .LVU3643
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13144              		.loc 1 41 5 is_stmt 0 view .LVU3644
 13145              	.LBE2539:
 13146              	.LBB2540:
 13147              	.LBI2540:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13148              		.loc 16 24 5 is_stmt 1 view .LVU3645
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13149              		.loc 16 24 5 is_stmt 0 view .LVU3646
 13150              	.LBE2540:
 13151              	.LBE2538:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 395


 13152              	.LBE2537:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13153              		.loc 20 102 25 view .LVU3647
 13154 0198 2A46     		mov	r2, r5
 13155 019a 4146     		mov	r1, r8
 13156 019c 7048     		ldr	r0, .L702+108
 13157 019e FFF7FEFF 		bl	__aeabi_atexit
 13158              	.LVL828:
 13159              	.LBB2541:
 13160              	.LBI2541:
  78:LEDs.h        ****     ~ButtonLED() {}
 13161              		.loc 14 78 5 is_stmt 1 view .LVU3648
 13162              	.LBB2542:
 13163              	.LBB2543:
 13164              	.LBI2543:
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13165              		.loc 1 41 5 view .LVU3649
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13166              		.loc 1 41 5 is_stmt 0 view .LVU3650
 13167              	.LBE2543:
 13168              	.LBB2544:
 13169              	.LBI2544:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13170              		.loc 16 24 5 is_stmt 1 view .LVU3651
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13171              		.loc 16 24 5 is_stmt 0 view .LVU3652
 13172              	.LBE2544:
 13173              	.LBE2542:
 13174              	.LBE2541:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13175              		.loc 20 102 34 view .LVU3653
 13176 01a2 2A46     		mov	r2, r5
 13177 01a4 4146     		mov	r1, r8
 13178 01a6 6F48     		ldr	r0, .L702+112
 13179 01a8 FFF7FEFF 		bl	__aeabi_atexit
 13180              	.LVL829:
 13181              	.LBB2545:
 13182              	.LBI2545:
  78:LEDs.h        ****     ~ButtonLED() {}
 13183              		.loc 14 78 5 is_stmt 1 view .LVU3654
 13184              	.LBB2546:
 13185              	.LBB2547:
 13186              	.LBI2547:
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13187              		.loc 1 41 5 view .LVU3655
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13188              		.loc 1 41 5 is_stmt 0 view .LVU3656
 13189              	.LBE2547:
 13190              	.LBB2548:
 13191              	.LBI2548:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13192              		.loc 16 24 5 is_stmt 1 view .LVU3657
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13193              		.loc 16 24 5 is_stmt 0 view .LVU3658
 13194              	.LBE2548:
 13195              	.LBE2546:
 13196              	.LBE2545:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 396


 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13197              		.loc 20 102 44 view .LVU3659
 13198 01ac 2A46     		mov	r2, r5
 13199 01ae 4146     		mov	r1, r8
 13200 01b0 6D48     		ldr	r0, .L702+116
 13201 01b2 FFF7FEFF 		bl	__aeabi_atexit
 13202              	.LVL830:
 13203              	.LBB2549:
 13204              	.LBI2549:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13205              		.loc 14 47 1 is_stmt 1 view .LVU3660
 13206              	.LBB2550:
 13207              	.LBB2551:
 13208              	.LBI2551:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13209              		.loc 16 24 5 view .LVU3661
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13210              		.loc 16 24 5 is_stmt 0 view .LVU3662
 13211              	.LBE2551:
 13212              	.LBB2552:
 13213              	.LBI2552:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13214              		.loc 15 15 5 is_stmt 1 view .LVU3663
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13215              		.loc 15 15 5 is_stmt 0 view .LVU3664
 13216              	.LBE2552:
 13217              	.LBE2550:
 13218              	.LBE2549:
 103:Veno-Echo.cpp **** 
 13219              		.loc 20 103 10 view .LVU3665
 13220 01b6 2A46     		mov	r2, r5
 13221 01b8 6C49     		ldr	r1, .L702+120
 13222 01ba 6D48     		ldr	r0, .L702+124
 13223 01bc FFF7FEFF 		bl	__aeabi_atexit
 13224              	.LVL831:
 13225              	.LBB2553:
 13226              	.LBI2553:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13227              		.loc 8 36 5 is_stmt 1 view .LVU3666
 13228              	.LBB2554:
 13229              	.LBB2555:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13230              		.loc 8 36 12 is_stmt 0 view .LVU3667
 13231 01c0 6C48     		ldr	r0, .L702+128
 13232              	.LBE2555:
 13233              	.LBE2554:
 13234              	.LBE2553:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13235              		.loc 20 150 13 view .LVU3668
 13236 01c2 2A46     		mov	r2, r5
 13237 01c4 6C49     		ldr	r1, .L702+132
 13238              	.LBB2558:
 13239              	.LBB2557:
 13240              	.LBB2556:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13241              		.loc 8 36 12 view .LVU3669
 13242 01c6 0460     		str	r4, [r0]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 397


 13243 01c8 4460     		str	r4, [r0, #4]	@ float
 13244 01ca 8660     		str	r6, [r0, #8]	@ float
 13245 01cc C460     		str	r4, [r0, #12]	@ float
 13246 01ce 0661     		str	r6, [r0, #16]	@ float
 13247 01d0 4661     		str	r6, [r0, #20]	@ float
 13248 01d2 8661     		str	r6, [r0, #24]	@ float
 13249 01d4 C461     		str	r4, [r0, #28]	@ float
 13250 01d6 0462     		str	r4, [r0, #32]	@ float
 13251 01d8 4462     		str	r4, [r0, #36]	@ float
 13252 01da 8785     		strh	r7, [r0, #44]	@ movhi
 13253              	.LVL832:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13254              		.loc 8 36 12 view .LVU3670
 13255              	.LBE2556:
 13256              	.LBE2557:
 13257              	.LBE2558:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13258              		.loc 20 150 13 view .LVU3671
 13259 01dc FFF7FEFF 		bl	__aeabi_atexit
 13260              	.LVL833:
 13261              	.LBB2559:
 13262              	.LBI2559:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13263              		.loc 8 36 5 is_stmt 1 view .LVU3672
 13264              	.LBB2560:
 13265              	.LBB2561:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13266              		.loc 8 36 12 is_stmt 0 view .LVU3673
 13267 01e0 6648     		ldr	r0, .L702+136
 13268              	.LBE2561:
 13269              	.LBE2560:
 13270              	.LBE2559:
 151:Veno-Echo.cpp **** 
 13271              		.loc 20 151 13 view .LVU3674
 13272 01e2 2A46     		mov	r2, r5
 13273 01e4 6449     		ldr	r1, .L702+132
 13274              	.LBB2564:
 13275              	.LBB2563:
 13276              	.LBB2562:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13277              		.loc 8 36 12 view .LVU3675
 13278 01e6 0460     		str	r4, [r0]	@ float
 13279 01e8 4460     		str	r4, [r0, #4]	@ float
 13280 01ea 8660     		str	r6, [r0, #8]	@ float
 13281 01ec C460     		str	r4, [r0, #12]	@ float
 13282 01ee 0661     		str	r6, [r0, #16]	@ float
 13283 01f0 4661     		str	r6, [r0, #20]	@ float
 13284 01f2 8661     		str	r6, [r0, #24]	@ float
 13285 01f4 C461     		str	r4, [r0, #28]	@ float
 13286 01f6 0462     		str	r4, [r0, #32]	@ float
 13287 01f8 4462     		str	r4, [r0, #36]	@ float
 13288 01fa 8785     		strh	r7, [r0, #44]	@ movhi
 13289              	.LVL834:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13290              		.loc 8 36 12 view .LVU3676
 13291              	.LBE2562:
 13292              	.LBE2563:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 398


 13293              	.LBE2564:
 151:Veno-Echo.cpp **** 
 13294              		.loc 20 151 13 view .LVU3677
 13295 01fc FFF7FEFF 		bl	__aeabi_atexit
 13296              	.LVL835:
 13297              	.LBB2565:
 13298              	.LBI2565:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13299              		.loc 8 36 5 is_stmt 1 view .LVU3678
 13300              	.LBB2566:
 13301              	.LBB2567:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13302              		.loc 8 36 12 is_stmt 0 view .LVU3679
 13303 0200 5F48     		ldr	r0, .L702+140
 13304              	.LBE2567:
 13305              	.LBE2566:
 13306              	.LBE2565:
 153:Veno-Echo.cpp **** static Adsr HPF_Env;
 13307              		.loc 20 153 13 view .LVU3680
 13308 0202 2A46     		mov	r2, r5
 13309 0204 5C49     		ldr	r1, .L702+132
 13310              	.LBB2570:
 13311              	.LBB2569:
 13312              	.LBB2568:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13313              		.loc 8 36 12 view .LVU3681
 13314 0206 0460     		str	r4, [r0]	@ float
 13315 0208 4460     		str	r4, [r0, #4]	@ float
 13316 020a 8660     		str	r6, [r0, #8]	@ float
 13317 020c C460     		str	r4, [r0, #12]	@ float
 13318 020e 0661     		str	r6, [r0, #16]	@ float
 13319 0210 4661     		str	r6, [r0, #20]	@ float
 13320 0212 8661     		str	r6, [r0, #24]	@ float
 13321 0214 C461     		str	r4, [r0, #28]	@ float
 13322 0216 0462     		str	r4, [r0, #32]	@ float
 13323 0218 4462     		str	r4, [r0, #36]	@ float
 13324 021a 8785     		strh	r7, [r0, #44]	@ movhi
 13325              	.LVL836:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13326              		.loc 8 36 12 view .LVU3682
 13327              	.LBE2568:
 13328              	.LBE2569:
 13329              	.LBE2570:
 153:Veno-Echo.cpp **** static Adsr HPF_Env;
 13330              		.loc 20 153 13 view .LVU3683
 13331 021c FFF7FEFF 		bl	__aeabi_atexit
 13332              	.LVL837:
 13333              	.LBB2571:
 13334              	.LBI2571:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13335              		.loc 8 36 5 is_stmt 1 view .LVU3684
 13336              	.LBB2572:
 13337              	.LBB2573:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13338              		.loc 8 36 12 is_stmt 0 view .LVU3685
 13339 0220 5848     		ldr	r0, .L702+144
 13340              	.LBE2573:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 399


 13341              	.LBE2572:
 13342              	.LBE2571:
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13343              		.loc 20 156 18 view .LVU3686
 13344 0222 DFF8B481 		ldr	r8, .L702+228
 154:Veno-Echo.cpp **** 
 13345              		.loc 20 154 13 view .LVU3687
 13346 0226 2A46     		mov	r2, r5
 13347 0228 5349     		ldr	r1, .L702+132
 13348              	.LBB2578:
 13349              	.LBB2576:
 13350              	.LBB2574:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13351              		.loc 8 36 12 view .LVU3688
 13352 022a 0460     		str	r4, [r0]	@ float
 13353 022c 4460     		str	r4, [r0, #4]	@ float
 13354 022e 8660     		str	r6, [r0, #8]	@ float
 13355 0230 C460     		str	r4, [r0, #12]	@ float
 13356 0232 0661     		str	r6, [r0, #16]	@ float
 13357 0234 4661     		str	r6, [r0, #20]	@ float
 13358 0236 8661     		str	r6, [r0, #24]	@ float
 13359              	.LBE2574:
 13360              	.LBE2576:
 13361              	.LBE2578:
 13362              	.LBB2579:
 13363              	.LBB2580:
 13364              	.LBB2581:
  55:taptempo.h    ****         clockLength_ = 0;
 13365              		.loc 13 55 19 view .LVU3689
 13366 0238 4FF07E56 		mov	r6, #1065353216
 13367              	.LBE2581:
 13368              	.LBE2580:
 13369              	.LBE2579:
 13370              	.LBB2588:
 13371              	.LBB2577:
 13372              	.LBB2575:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13373              		.loc 8 36 12 view .LVU3690
 13374 023c C461     		str	r4, [r0, #28]	@ float
 13375 023e 0462     		str	r4, [r0, #32]	@ float
 13376 0240 4462     		str	r4, [r0, #36]	@ float
 13377 0242 8785     		strh	r7, [r0, #44]	@ movhi
 13378              	.LVL838:
  36:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13379              		.loc 8 36 12 view .LVU3691
 13380              	.LBE2575:
 13381              	.LBE2577:
 13382              	.LBE2588:
 154:Veno-Echo.cpp **** 
 13383              		.loc 20 154 13 view .LVU3692
 13384 0244 FFF7FEFF 		bl	__aeabi_atexit
 13385              	.LVL839:
 13386              	.LBB2589:
 13387              	.LBI2589:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13388              		.loc 11 36 5 is_stmt 1 view .LVU3693
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 400


 13389              		.loc 11 36 5 is_stmt 0 view .LVU3694
 13390              	.LBE2589:
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13391              		.loc 20 156 18 view .LVU3695
 13392 0248 2A46     		mov	r2, r5
 13393 024a 4146     		mov	r1, r8
 13394 024c 4E48     		ldr	r0, .L702+148
 13395 024e FFF7FEFF 		bl	__aeabi_atexit
 13396              	.LVL840:
 13397              	.LBB2590:
 13398              	.LBI2590:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13399              		.loc 11 36 5 is_stmt 1 view .LVU3696
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13400              		.loc 11 36 5 is_stmt 0 view .LVU3697
 13401              	.LBE2590:
 157:Veno-Echo.cpp **** 
 13402              		.loc 20 157 18 view .LVU3698
 13403 0252 2A46     		mov	r2, r5
 13404 0254 4146     		mov	r1, r8
 13405 0256 4D48     		ldr	r0, .L702+152
 13406 0258 FFF7FEFF 		bl	__aeabi_atexit
 13407              	.LVL841:
 13408              	.LBB2591:
 13409              	.LBI2591:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13410              		.loc 11 36 5 is_stmt 1 view .LVU3699
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13411              		.loc 11 36 5 is_stmt 0 view .LVU3700
 13412              	.LBE2591:
 159:Veno-Echo.cpp **** 
 13413              		.loc 20 159 18 view .LVU3701
 13414 025c 2A46     		mov	r2, r5
 13415 025e 4146     		mov	r1, r8
 13416 0260 4B48     		ldr	r0, .L702+156
 13417 0262 FFF7FEFF 		bl	__aeabi_atexit
 13418              	.LVL842:
 13419              	.LBB2592:
 13420              	.LBI2592:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13421              		.loc 11 36 5 is_stmt 1 view .LVU3702
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13422              		.loc 11 36 5 is_stmt 0 view .LVU3703
 13423              	.LBE2592:
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 13424              		.loc 20 162 18 view .LVU3704
 13425 0266 2A46     		mov	r2, r5
 13426 0268 4146     		mov	r1, r8
 13427 026a 4A48     		ldr	r0, .L702+160
 13428 026c FFF7FEFF 		bl	__aeabi_atexit
 13429              	.LVL843:
 13430              	.LBB2593:
 13431              	.LBI2593:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13432              		.loc 11 36 5 is_stmt 1 view .LVU3705
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13433              		.loc 11 36 5 is_stmt 0 view .LVU3706
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 401


 13434              	.LBE2593:
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 13435              		.loc 20 163 18 view .LVU3707
 13436 0270 2A46     		mov	r2, r5
 13437 0272 4146     		mov	r1, r8
 13438 0274 4848     		ldr	r0, .L702+164
 13439 0276 FFF7FEFF 		bl	__aeabi_atexit
 13440              	.LVL844:
 13441              	.LBB2594:
 13442              	.LBI2594:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13443              		.loc 11 36 5 is_stmt 1 view .LVU3708
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13444              		.loc 11 36 5 is_stmt 0 view .LVU3709
 13445              	.LBE2594:
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 13446              		.loc 20 164 18 view .LVU3710
 13447 027a 2A46     		mov	r2, r5
 13448 027c 4146     		mov	r1, r8
 13449 027e 4748     		ldr	r0, .L702+168
 13450 0280 FFF7FEFF 		bl	__aeabi_atexit
 13451              	.LVL845:
 13452              	.LBB2595:
 13453              	.LBI2595:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13454              		.loc 11 36 5 is_stmt 1 view .LVU3711
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13455              		.loc 11 36 5 is_stmt 0 view .LVU3712
 13456              	.LBE2595:
 165:Veno-Echo.cpp **** 
 13457              		.loc 20 165 18 view .LVU3713
 13458 0284 2A46     		mov	r2, r5
 13459 0286 4146     		mov	r1, r8
 13460 0288 4548     		ldr	r0, .L702+172
 13461 028a FFF7FEFF 		bl	__aeabi_atexit
 13462              	.LVL846:
 13463              	.LBB2596:
 13464              	.LBI2596:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13465              		.loc 11 36 5 is_stmt 1 view .LVU3714
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13466              		.loc 11 36 5 is_stmt 0 view .LVU3715
 13467              	.LBE2596:
 168:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 13468              		.loc 20 168 18 view .LVU3716
 13469 028e 2A46     		mov	r2, r5
 13470 0290 4146     		mov	r1, r8
 13471 0292 4448     		ldr	r0, .L702+176
 13472 0294 FFF7FEFF 		bl	__aeabi_atexit
 13473              	.LVL847:
 13474              	.LBB2597:
 13475              	.LBI2597:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13476              		.loc 11 36 5 is_stmt 1 view .LVU3717
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13477              		.loc 11 36 5 is_stmt 0 view .LVU3718
 13478              	.LBE2597:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 402


 169:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 13479              		.loc 20 169 18 view .LVU3719
 13480 0298 2A46     		mov	r2, r5
 13481 029a 4146     		mov	r1, r8
 13482 029c 4248     		ldr	r0, .L702+180
 13483 029e FFF7FEFF 		bl	__aeabi_atexit
 13484              	.LVL848:
 13485              	.LBB2598:
 13486              	.LBI2598:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13487              		.loc 11 36 5 is_stmt 1 view .LVU3720
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13488              		.loc 11 36 5 is_stmt 0 view .LVU3721
 13489              	.LBE2598:
 170:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 13490              		.loc 20 170 18 view .LVU3722
 13491 02a2 2A46     		mov	r2, r5
 13492 02a4 4146     		mov	r1, r8
 13493 02a6 4148     		ldr	r0, .L702+184
 13494 02a8 FFF7FEFF 		bl	__aeabi_atexit
 13495              	.LVL849:
 13496              	.LBB2599:
 13497              	.LBI2599:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13498              		.loc 11 36 5 is_stmt 1 view .LVU3723
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13499              		.loc 11 36 5 is_stmt 0 view .LVU3724
 13500              	.LBE2599:
 171:Veno-Echo.cpp **** 
 13501              		.loc 20 171 18 view .LVU3725
 13502 02ac 2A46     		mov	r2, r5
 13503 02ae 4146     		mov	r1, r8
 13504 02b0 3F48     		ldr	r0, .L702+188
 13505 02b2 FFF7FEFF 		bl	__aeabi_atexit
 13506              	.LVL850:
 13507              	.LBB2600:
 13508              	.LBI2600:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13509              		.loc 11 36 5 is_stmt 1 view .LVU3726
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13510              		.loc 11 36 5 is_stmt 0 view .LVU3727
 13511              	.LBE2600:
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 13512              		.loc 20 174 18 view .LVU3728
 13513 02b6 2A46     		mov	r2, r5
 13514 02b8 4146     		mov	r1, r8
 13515 02ba 3E48     		ldr	r0, .L702+192
 13516 02bc FFF7FEFF 		bl	__aeabi_atexit
 13517              	.LVL851:
 13518              	.LBB2601:
 13519              	.LBI2601:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13520              		.loc 11 36 5 is_stmt 1 view .LVU3729
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13521              		.loc 11 36 5 is_stmt 0 view .LVU3730
 13522              	.LBE2601:
 175:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 403


 13523              		.loc 20 175 18 view .LVU3731
 13524 02c0 2A46     		mov	r2, r5
 13525 02c2 4146     		mov	r1, r8
 13526 02c4 3C48     		ldr	r0, .L702+196
 13527 02c6 FFF7FEFF 		bl	__aeabi_atexit
 13528              	.LVL852:
 13529              	.LBB2602:
 13530              	.LBI2602:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13531              		.loc 11 36 5 is_stmt 1 view .LVU3732
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13532              		.loc 11 36 5 is_stmt 0 view .LVU3733
 13533              	.LBE2602:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13534              		.loc 20 181 8 view .LVU3734
 13535 02ca DFF81091 		ldr	r9, .L702+232
 177:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 13536              		.loc 20 177 18 view .LVU3735
 13537 02ce 2A46     		mov	r2, r5
 13538 02d0 4146     		mov	r1, r8
 13539 02d2 3A48     		ldr	r0, .L702+200
 13540 02d4 FFF7FEFF 		bl	__aeabi_atexit
 13541              	.LVL853:
 13542              	.LBB2603:
 13543              	.LBI2603:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13544              		.loc 11 36 5 is_stmt 1 view .LVU3736
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13545              		.loc 11 36 5 is_stmt 0 view .LVU3737
 13546              	.LBE2603:
 178:Veno-Echo.cpp **** 
 13547              		.loc 20 178 18 view .LVU3738
 13548 02d8 2A46     		mov	r2, r5
 13549 02da 4146     		mov	r1, r8
 13550 02dc 3848     		ldr	r0, .L702+204
 13551 02de FFF7FEFF 		bl	__aeabi_atexit
 13552              	.LVL854:
 13553              	.LBB2604:
 13554              	.LBI2604:
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13555              		.loc 1 41 5 is_stmt 1 view .LVU3739
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13556              		.loc 1 41 5 is_stmt 0 view .LVU3740
 13557              	.LBE2604:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13558              		.loc 20 181 8 view .LVU3741
 13559 02e2 2A46     		mov	r2, r5
 13560 02e4 4946     		mov	r1, r9
 13561 02e6 3748     		ldr	r0, .L702+208
 13562 02e8 FFF7FEFF 		bl	__aeabi_atexit
 13563              	.LVL855:
 13564              	.LBB2605:
 13565              	.LBI2605:
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13566              		.loc 1 41 5 is_stmt 1 view .LVU3742
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13567              		.loc 1 41 5 is_stmt 0 view .LVU3743
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 404


 13568              	.LBE2605:
 182:Veno-Echo.cpp **** 
 13569              		.loc 20 182 8 view .LVU3744
 13570 02ec 2A46     		mov	r2, r5
 13571 02ee 4946     		mov	r1, r9
 13572 02f0 76E0     		b	.L703
 13573              	.L704:
 13574 02f2 00BF     		.align	2
 13575              	.L702:
 13576 02f4 00000000 		.word	.LANCHOR4
 13577 02f8 00000000 		.word	__dso_handle
 13578 02fc 00000000 		.word	_ZN7daisysp3SvfD1Ev
 13579 0300 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13580 0304 00000000 		.word	.LANCHOR47
 13581 0308 00000000 		.word	.LANCHOR48
 13582 030c 00000000 		.word	.LANCHOR35
 13583 0310 00000000 		.word	.LANCHOR36
 13584 0314 00000000 		.word	.LANCHOR49
 13585 0318 00000000 		.word	.LANCHOR50
 13586 031c 00000000 		.word	.LANCHOR37
 13587 0320 00000000 		.word	.LANCHOR38
 13588 0324 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 13589 0328 00000000 		.word	.LANCHOR76
 13590 032c 00000000 		.word	.LANCHOR130
 13591 0330 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 13592 0334 00000000 		.word	.LANCHOR131
 13593 0338 00000000 		.word	delMemsL
 13594 033c 00000000 		.word	delMemsR
 13595 0340 00000000 		.word	delMemsL_REV
 13596 0344 00000000 		.word	delMemsR_REV
 13597 0348 000080BF 		.word	-1082130432
 13598 034c 00000000 		.word	.LANCHOR0
 13599 0350 00000000 		.word	_ZN10DelayMultiD1Ev
 13600 0354 00000000 		.word	.LANCHOR1
 13601 0358 00000000 		.word	.LANCHOR95
 13602 035c 00000000 		.word	.LANCHOR96
 13603 0360 00000000 		.word	.LANCHOR93
 13604 0364 00000000 		.word	.LANCHOR94
 13605 0368 00000000 		.word	.LANCHOR97
 13606 036c 00000000 		.word	_ZN8TempoLEDD1Ev
 13607 0370 00000000 		.word	.LANCHOR90
 13608 0374 00000000 		.word	.LANCHOR102
 13609 0378 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 13610 037c 00000000 		.word	.LANCHOR103
 13611 0380 00000000 		.word	.LANCHOR104
 13612 0384 00000000 		.word	.LANCHOR105
 13613 0388 00000000 		.word	.LANCHOR106
 13614 038c 00000000 		.word	.LANCHOR107
 13615 0390 00000000 		.word	.LANCHOR65
 13616 0394 00000000 		.word	.LANCHOR118
 13617 0398 00000000 		.word	.LANCHOR119
 13618 039c 00000000 		.word	.LANCHOR116
 13619 03a0 00000000 		.word	.LANCHOR117
 13620 03a4 00000000 		.word	.LANCHOR122
 13621 03a8 00000000 		.word	.LANCHOR123
 13622 03ac 00000000 		.word	.LANCHOR120
 13623 03b0 00000000 		.word	.LANCHOR121
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 405


 13624 03b4 00000000 		.word	.LANCHOR124
 13625 03b8 00000000 		.word	.LANCHOR125
 13626 03bc 00000000 		.word	.LANCHOR126
 13627 03c0 00000000 		.word	.LANCHOR127
 13628 03c4 00000000 		.word	.LANCHOR98
 13629 03c8 17B7D138 		.word	953267991
 13630 03cc 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 13631 03d0 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 13632 03d4 00000000 		.word	_ZN9ButtonLEDD1Ev
 13633 03d8 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 13634 03dc 00000000 		.word	_ZN5daisy6SwitchD1Ev
 13635              	.L703:
 13636 03e0 1A48     		ldr	r0, .L705
 13637 03e2 FFF7FEFF 		bl	__aeabi_atexit
 13638              	.LVL856:
 13639              	.LBB2606:
 13640              	.LBI2606:
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13641              		.loc 1 41 5 is_stmt 1 view .LVU3745
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13642              		.loc 1 41 5 is_stmt 0 view .LVU3746
 13643              	.LBE2606:
 185:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 13644              		.loc 20 185 8 view .LVU3747
 13645 03e6 2A46     		mov	r2, r5
 13646 03e8 4946     		mov	r1, r9
 13647 03ea 1948     		ldr	r0, .L705+4
 13648 03ec FFF7FEFF 		bl	__aeabi_atexit
 13649              	.LVL857:
 186:Veno-Echo.cpp **** GateIn ClockIn;
 13650              		.loc 20 186 34 view .LVU3748
 13651 03f0 0520     		movs	r0, #5
 13652 03f2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 13653              	.LVL858:
 13654 03f6 174B     		ldr	r3, .L705+8
 13655 03f8 0446     		mov	r4, r0	@ movhi
 187:Veno-Echo.cpp **** //Switch ClockIn;
 13656              		.loc 20 187 8 view .LVU3749
 13657 03fa 2A46     		mov	r2, r5
 13658 03fc 1649     		ldr	r1, .L705+12
 13659 03fe 1748     		ldr	r0, .L705+16
 186:Veno-Echo.cpp **** GateIn ClockIn;
 13660              		.loc 20 186 34 view .LVU3750
 13661 0400 1C80     		strh	r4, [r3]	@ movhi
 13662              	.LVL859:
 13663              	.LBB2607:
 13664              	.LBI2607:
  20:../libdaisy/src/hid/gatein.h ****     /** GateIn~
 13665              		.loc 2 20 5 is_stmt 1 view .LVU3751
  20:../libdaisy/src/hid/gatein.h ****     /** GateIn~
 13666              		.loc 2 20 5 is_stmt 0 view .LVU3752
 13667              	.LBE2607:
 187:Veno-Echo.cpp **** //Switch ClockIn;
 13668              		.loc 20 187 8 view .LVU3753
 13669 0402 FFF7FEFF 		bl	__aeabi_atexit
 13670              	.LVL860:
 13671              	.LBB2608:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 406


 13672              	.LBI2579:
  45:taptempo.h    ****     {
 13673              		.loc 13 45 5 is_stmt 1 view .LVU3754
 13674              	.LBB2585:
 13675              	.LBB2582:
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13676              		.loc 13 47 9 view .LVU3755
  48:taptempo.h    ****         maxtap_ = 6000000;
 13677              		.loc 13 48 24 is_stmt 0 view .LVU3756
 13678 0406 DFF86480 		ldr	r8, .L705+32
  50:taptempo.h    ****         lastTapLength_ = 0;
 13679              		.loc 13 50 17 view .LVU3757
 13680 040a 44F6206E 		movw	lr, #20000
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13681              		.loc 13 47 18 view .LVU3758
 13682 040e 1448     		ldr	r0, .L705+20
  58:taptempo.h    ****         PPQN_ = 1;
 13683              		.loc 13 58 22 view .LVU3759
 13684 0410 42F21074 		movw	r4, #10000
  49:taptempo.h    ****         mintap_ = 20000;
 13685              		.loc 13 49 17 view .LVU3760
 13686 0414 1349     		ldr	r1, .L705+24
  59:taptempo.h    ****     }
 13687              		.loc 13 59 15 view .LVU3761
 13688 0416 0123     		movs	r3, #1
  52:taptempo.h    ****         lastTime_ = 0;
 13689              		.loc 13 52 16 view .LVU3762
 13690 0418 DFF854C0 		ldr	ip, .L705+36
 13691              	.LBE2582:
 13692              	.LBE2585:
 13693              	.LBE2608:
 191:Veno-Echo.cpp **** 
 13694              		.loc 20 191 10 view .LVU3763
 13695 041c 2A46     		mov	r2, r5
 13696              	.LBB2609:
 13697              	.LBB2586:
 13698              	.LBB2583:
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13699              		.loc 13 47 18 view .LVU3764
 13700 041e 80F83470 		strb	r7, [r0, #52]
  48:taptempo.h    ****         maxtap_ = 6000000;
 13701              		.loc 13 48 9 is_stmt 1 view .LVU3765
  54:taptempo.h    ****         tapRatio_ = 1.0f;
 13702              		.loc 13 54 22 is_stmt 0 view .LVU3766
 13703 0422 0761     		str	r7, [r0, #16]
  48:taptempo.h    ****         maxtap_ = 6000000;
 13704              		.loc 13 48 24 view .LVU3767
 13705 0424 C0F83880 		str	r8, [r0, #56]	@ float
  49:taptempo.h    ****         mintap_ = 20000;
 13706              		.loc 13 49 9 is_stmt 1 view .LVU3768
  49:taptempo.h    ****         mintap_ = 20000;
 13707              		.loc 13 49 17 is_stmt 0 view .LVU3769
 13708 0428 4160     		str	r1, [r0, #4]
  50:taptempo.h    ****         lastTapLength_ = 0;
 13709              		.loc 13 50 9 is_stmt 1 view .LVU3770
  50:taptempo.h    ****         lastTapLength_ = 0;
 13710              		.loc 13 50 17 is_stmt 0 view .LVU3771
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 407


 13711 042a C0F800E0 		str	lr, [r0]
  51:taptempo.h    ****         tempo_ = 500000.0f;
 13712              		.loc 13 51 9 is_stmt 1 view .LVU3772
  52:taptempo.h    ****         lastTime_ = 0;
 13713              		.loc 13 52 9 view .LVU3773
  55:taptempo.h    ****         clockLength_ = 0;
 13714              		.loc 13 55 19 is_stmt 0 view .LVU3774
 13715 042e 0664     		str	r6, [r0, #64]	@ float
  58:taptempo.h    ****         PPQN_ = 1;
 13716              		.loc 13 58 22 view .LVU3775
 13717 0430 8462     		str	r4, [r0, #40]
  59:taptempo.h    ****     }
 13718              		.loc 13 59 15 view .LVU3776
 13719 0432 4364     		str	r3, [r0, #68]
 13720              	.LBE2583:
 13721              	.LBE2586:
 13722              	.LBE2609:
 191:Veno-Echo.cpp **** 
 13723              		.loc 20 191 10 view .LVU3777
 13724 0434 0C49     		ldr	r1, .L705+28
 13725              	.LBB2610:
 13726              	.LBB2587:
 13727              	.LBB2584:
  52:taptempo.h    ****         lastTime_ = 0;
 13728              		.loc 13 52 16 view .LVU3778
 13729 0436 C0F83CC0 		str	ip, [r0, #60]	@ float
  53:taptempo.h    ****         currentTime_ = 0;
 13730              		.loc 13 53 9 is_stmt 1 view .LVU3779
  54:taptempo.h    ****         tapRatio_ = 1.0f;
 13731              		.loc 13 54 9 view .LVU3780
  55:taptempo.h    ****         clockLength_ = 0;
 13732              		.loc 13 55 9 view .LVU3781
  56:taptempo.h    ****         lastClockLength_ = 0;
 13733              		.loc 13 56 9 view .LVU3782
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13734              		.loc 13 57 9 view .LVU3783
  58:taptempo.h    ****         PPQN_ = 1;
 13735              		.loc 13 58 9 view .LVU3784
  59:taptempo.h    ****     }
 13736              		.loc 13 59 9 view .LVU3785
 13737              	.LVL861:
  53:taptempo.h    ****         currentTime_ = 0;
 13738              		.loc 13 53 19 is_stmt 0 view .LVU3786
 13739 043a C0E90577 		strd	r7, r7, [r0, #20]
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13740              		.loc 13 57 26 view .LVU3787
 13741 043e C0E90877 		strd	r7, r7, [r0, #32]
 13742              	.LBE2584:
 13743              	.LBE2587:
 13744              	.LBE2610:
 13745              	.LBE2617:
 13746              	.LBE2625:
 13747              		.loc 20 2151 1 view .LVU3788
 13748 0442 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 13749              		.cfi_restore 14
 13750              		.cfi_restore 9
 13751              		.cfi_restore 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 408


 13752              		.cfi_restore 7
 13753              		.cfi_restore 6
 13754              		.cfi_restore 5
 13755              		.cfi_restore 4
 13756              		.cfi_restore 3
 13757              		.cfi_def_cfa_offset 0
 13758              	.LBB2626:
 13759              	.LBB2618:
 191:Veno-Echo.cpp **** 
 13760              		.loc 20 191 10 view .LVU3789
 13761 0446 FFF7FEBF 		b	__aeabi_atexit
 13762              	.LVL862:
 13763              	.L706:
 13764 044a 00BF     		.align	2
 13765              	.L705:
 13766 044c 00000000 		.word	.LANCHOR99
 13767 0450 00000000 		.word	.LANCHOR100
 13768 0454 00000000 		.word	.LANCHOR101
 13769 0458 00000000 		.word	_ZN5daisy6GateInD1Ev
 13770 045c 00000000 		.word	.LANCHOR89
 13771 0460 00000000 		.word	.LANCHOR26
 13772 0464 808D5B00 		.word	6000000
 13773 0468 00000000 		.word	_ZN8TaptempoD1Ev
 13774 046c 0000A03F 		.word	1067450368
 13775 0470 0024F448 		.word	1223959552
 13776              	.LBE2618:
 13777              	.LBE2626:
 13778              		.cfi_endproc
 13779              	.LFE5419:
 13781              		.section	.init_array,"aw",%init_array
 13782              		.align	2
 13783 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 13784              		.global	AltControls
 13785              		.global	BaseTempo
 13786              		.global	ClockIn
 13787              		.global	ClockPin
 13788              		.global	Sync
 13789              		.global	ReverseGateR
 13790              		.global	ReverseGateL
 13791              		.global	CLOCK_DEBUG
 13792              		.global	PHASE_DEBUG
 13793              		.global	DELAYR_DEBUG
 13794              		.global	DELAYL_DEBUG
 13795              		.global	saveState
 13796              		.global	save_flag
 13797              		.global	PostFilters
 13798              		.global	ClockInFlag
 13799              		.global	mute
 13800              		.global	shift
 13801              		.global	syncMode
 13802              		.global	modulation_CV_Raw
 13803              		.global	ModDepth
 13804              		.global	filterXfade
 13805              		.global	width_CV
 13806              		.global	width
 13807              		.global	drywet_CV
 13808              		.global	drywet
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 409


 13809              		.global	crossfeedback_CV
 13810              		.global	crossfeedback
 13811              		.global	feedbackR_CV
 13812              		.global	feedbackR
 13813              		.global	feedbackL_CV
 13814              		.global	feedbackL
 13815              		.global	delayTimeR_CV
 13816              		.global	delayTimeL_CV
 13817              		.global	tempoLED_BASE
 13818              		.global	Tap_Button
 13819              		.global	Rev_R_sw
 13820              		.global	Rev_L_sw
 13821              		.global	HPF_sw
 13822              		.global	LPF_sw
 13823              		.global	delaysR_REV
 13824              		.global	delaysL_REV
 13825              		.global	delayR
 13826              		.global	delayL
 13827              		.global	delMemsR_REV
 13828              		.global	delMemsL_REV
 13829              		.global	delMemsR
 13830              		.global	delMemsL
 13831              		.section	.bss.AltControls,"aw",%nobits
 13832              		.align	2
 13833              		.set	.LANCHOR15,. + 0
 13836              	AltControls:
 13837 0000 00000000 		.space	44
 13837      00000000 
 13837      00000000 
 13837      00000000 
 13837      00000000 
 13838              		.section	.bss.BaseTempo,"aw",%nobits
 13839              		.align	2
 13840              		.set	.LANCHOR26,. + 0
 13843              	BaseTempo:
 13844 0000 00000000 		.space	72
 13844      00000000 
 13844      00000000 
 13844      00000000 
 13844      00000000 
 13845              		.section	.bss.CLOCK_DEBUG,"aw",%nobits
 13846              		.align	2
 13849              	CLOCK_DEBUG:
 13850 0000 00000000 		.space	4
 13851              		.section	.bss.ClockIn,"aw",%nobits
 13852              		.align	2
 13853              		.set	.LANCHOR89,. + 0
 13856              	ClockIn:
 13857 0000 00000000 		.space	6
 13857      0000
 13858              		.section	.bss.ClockInFlag,"aw",%nobits
 13861              	ClockInFlag:
 13862 0000 00       		.space	1
 13863              		.section	.bss.ClockPin,"aw",%nobits
 13864              		.align	2
 13865              		.set	.LANCHOR101,. + 0
 13868              	ClockPin:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 410


 13869 0000 0000     		.space	2
 13870              		.section	.bss.DELAYL_DEBUG,"aw",%nobits
 13871              		.align	2
 13874              	DELAYL_DEBUG:
 13875 0000 00000000 		.space	4
 13876              		.section	.bss.DELAYR_DEBUG,"aw",%nobits
 13877              		.align	2
 13880              	DELAYR_DEBUG:
 13881 0000 00000000 		.space	4
 13882              		.section	.bss.HPF_sw,"aw",%nobits
 13883              		.align	2
 13884              		.set	.LANCHOR96,. + 0
 13887              	HPF_sw:
 13888 0000 00000000 		.space	48
 13888      00000000 
 13888      00000000 
 13888      00000000 
 13888      00000000 
 13889              		.section	.bss.LPF_sw,"aw",%nobits
 13890              		.align	2
 13891              		.set	.LANCHOR95,. + 0
 13894              	LPF_sw:
 13895 0000 00000000 		.space	48
 13895      00000000 
 13895      00000000 
 13895      00000000 
 13895      00000000 
 13896              		.section	.bss.ModDepth,"aw",%nobits
 13897              		.align	2
 13898              		.set	.LANCHOR68,. + 0
 13901              	ModDepth:
 13902 0000 00000000 		.space	4
 13903              		.section	.bss.PHASE_DEBUG,"aw",%nobits
 13904              		.align	2
 13905              		.set	.LANCHOR92,. + 0
 13908              	PHASE_DEBUG:
 13909 0000 00000000 		.space	4
 13910              		.section	.bss.PostFilters,"aw",%nobits
 13911              		.set	.LANCHOR83,. + 0
 13914              	PostFilters:
 13915 0000 00       		.space	1
 13916              		.section	.bss.Rev_L_sw,"aw",%nobits
 13917              		.align	2
 13918              		.set	.LANCHOR93,. + 0
 13921              	Rev_L_sw:
 13922 0000 00000000 		.space	48
 13922      00000000 
 13922      00000000 
 13922      00000000 
 13922      00000000 
 13923              		.section	.bss.Rev_R_sw,"aw",%nobits
 13924              		.align	2
 13925              		.set	.LANCHOR94,. + 0
 13928              	Rev_R_sw:
 13929 0000 00000000 		.space	48
 13929      00000000 
 13929      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 411


 13929      00000000 
 13929      00000000 
 13930              		.section	.bss.ReverseGateL,"aw",%nobits
 13931              		.align	2
 13932              		.set	.LANCHOR98,. + 0
 13935              	ReverseGateL:
 13936 0000 00000000 		.space	12
 13936      00000000 
 13936      00000000 
 13937              		.section	.bss.ReverseGateR,"aw",%nobits
 13938              		.align	2
 13939              		.set	.LANCHOR99,. + 0
 13942              	ReverseGateR:
 13943 0000 00000000 		.space	12
 13943      00000000 
 13943      00000000 
 13944              		.section	.bss.Sync,"aw",%nobits
 13945              		.align	2
 13946              		.set	.LANCHOR100,. + 0
 13949              	Sync:
 13950 0000 00000000 		.space	12
 13950      00000000 
 13950      00000000 
 13951              		.section	.bss.Tap_Button,"aw",%nobits
 13952              		.align	2
 13953              		.set	.LANCHOR97,. + 0
 13956              	Tap_Button:
 13957 0000 00000000 		.space	48
 13957      00000000 
 13957      00000000 
 13957      00000000 
 13957      00000000 
 13958              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13959              		.align	2
 13960              		.set	.LANCHOR102,. + 0
 13963              	_ZL10FwdRevLEnv:
 13964 0000 00000000 		.space	48
 13964      00000000 
 13964      00000000 
 13964      00000000 
 13964      00000000 
 13965              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13966              		.align	2
 13967              		.set	.LANCHOR103,. + 0
 13970              	_ZL10FwdRevREnv:
 13971 0000 00000000 		.space	48
 13971      00000000 
 13971      00000000 
 13971      00000000 
 13971      00000000 
 13972              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13973              		.align	2
 13974              		.set	.LANCHOR116,. + 0
 13977              	_ZL10HPF_LXfade:
 13978 0000 00000000 		.space	8
 13978      00000000 
 13979              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 412


 13980              		.align	2
 13981              		.set	.LANCHOR37,. + 0
 13984              	_ZL10HPF_L_post:
 13985 0000 00000000 		.space	76
 13985      00000000 
 13985      00000000 
 13985      00000000 
 13985      00000000 
 13986              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13987              		.align	2
 13988              		.set	.LANCHOR117,. + 0
 13991              	_ZL10HPF_RXfade:
 13992 0000 00000000 		.space	8
 13992      00000000 
 13993              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13994              		.align	2
 13995              		.set	.LANCHOR38,. + 0
 13998              	_ZL10HPF_R_post:
 13999 0000 00000000 		.space	76
 13999      00000000 
 13999      00000000 
 13999      00000000 
 13999      00000000 
 14000              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 14001              		.align	2
 14002              		.set	.LANCHOR118,. + 0
 14005              	_ZL10LPF_LXfade:
 14006 0000 00000000 		.space	8
 14006      00000000 
 14007              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 14008              		.align	2
 14009              		.set	.LANCHOR49,. + 0
 14012              	_ZL10LPF_L_post:
 14013 0000 00000000 		.space	76
 14013      00000000 
 14013      00000000 
 14013      00000000 
 14013      00000000 
 14014              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 14015              		.align	2
 14016              		.set	.LANCHOR119,. + 0
 14019              	_ZL10LPF_RXfade:
 14020 0000 00000000 		.space	8
 14020      00000000 
 14021              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 14022              		.align	2
 14023              		.set	.LANCHOR50,. + 0
 14026              	_ZL10LPF_R_post:
 14027 0000 00000000 		.space	76
 14027      00000000 
 14027      00000000 
 14027      00000000 
 14027      00000000 
 14028              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 14029              		.align	2
 14030              		.set	.LANCHOR65,. + 0
 14033              	_ZL10WidthXfade:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 413


 14034 0000 00000000 		.space	8
 14034      00000000 
 14035              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 14036              		.align	2
 14037              		.set	.LANCHOR124,. + 0
 14040              	_ZL11FilterMix_L:
 14041 0000 00000000 		.space	8
 14041      00000000 
 14042              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 14043              		.align	2
 14044              		.set	.LANCHOR125,. + 0
 14047              	_ZL11FilterMix_R:
 14048 0000 00000000 		.space	8
 14048      00000000 
 14049              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 14050              		.align	2
 14051              		.set	.LANCHOR106,. + 0
 14054              	_ZL12FwdRevLXfade:
 14055 0000 00000000 		.space	8
 14055      00000000 
 14056              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 14057              		.align	2
 14058              		.set	.LANCHOR107,. + 0
 14061              	_ZL12FwdRevRXfade:
 14062 0000 00000000 		.space	8
 14062      00000000 
 14063              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 14064              		.align	2
 14065              		.set	.LANCHOR120,. + 0
 14068              	_ZL15HPF_LXfade_post:
 14069 0000 00000000 		.space	8
 14069      00000000 
 14070              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 14071              		.align	2
 14072              		.set	.LANCHOR121,. + 0
 14075              	_ZL15HPF_RXfade_post:
 14076 0000 00000000 		.space	8
 14076      00000000 
 14077              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 14078              		.align	2
 14079              		.set	.LANCHOR122,. + 0
 14082              	_ZL15LPF_LXfade_post:
 14083 0000 00000000 		.space	8
 14083      00000000 
 14084              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 14085              		.align	2
 14086              		.set	.LANCHOR123,. + 0
 14089              	_ZL15LPF_RXfade_post:
 14090 0000 00000000 		.space	8
 14090      00000000 
 14091              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 14092              		.align	2
 14093              		.set	.LANCHOR126,. + 0
 14096              	_ZL16FilterMix_L_post:
 14097 0000 00000000 		.space	8
 14097      00000000 
 14098              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 414


 14099              		.align	2
 14100              		.set	.LANCHOR127,. + 0
 14103              	_ZL16FilterMix_R_post:
 14104 0000 00000000 		.space	8
 14104      00000000 
 14105              		.section	.bss._ZL2hw,"aw",%nobits
 14106              		.align	2
 14107              		.set	.LANCHOR4,. + 0
 14110              	_ZL2hw:
 14111 0000 00000000 		.space	60
 14111      00000000 
 14111      00000000 
 14111      00000000 
 14111      00000000 
 14112              		.section	.bss._ZL3lfo,"aw",%nobits
 14113              		.align	2
 14114              		.set	.LANCHOR76,. + 0
 14117              	_ZL3lfo:
 14118 0000 00000000 		.space	40
 14118      00000000 
 14118      00000000 
 14118      00000000 
 14118      00000000 
 14119              		.section	.bss._ZL5HPF_L,"aw",%nobits
 14120              		.align	2
 14121              		.set	.LANCHOR35,. + 0
 14124              	_ZL5HPF_L:
 14125 0000 00000000 		.space	76
 14125      00000000 
 14125      00000000 
 14125      00000000 
 14125      00000000 
 14126              		.section	.bss._ZL5HPF_R,"aw",%nobits
 14127              		.align	2
 14128              		.set	.LANCHOR36,. + 0
 14131              	_ZL5HPF_R:
 14132 0000 00000000 		.space	76
 14132      00000000 
 14132      00000000 
 14132      00000000 
 14132      00000000 
 14133              		.section	.bss._ZL5LPF_L,"aw",%nobits
 14134              		.align	2
 14135              		.set	.LANCHOR47,. + 0
 14138              	_ZL5LPF_L:
 14139 0000 00000000 		.space	76
 14139      00000000 
 14139      00000000 
 14139      00000000 
 14139      00000000 
 14140              		.section	.bss._ZL5LPF_R,"aw",%nobits
 14141              		.align	2
 14142              		.set	.LANCHOR48,. + 0
 14145              	_ZL5LPF_R:
 14146 0000 00000000 		.space	76
 14146      00000000 
 14146      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 415


 14146      00000000 
 14146      00000000 
 14147              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 14148              		.align	2
 14149              		.set	.LANCHOR105,. + 0
 14152              	_ZL7HPF_Env:
 14153 0000 00000000 		.space	48
 14153      00000000 
 14153      00000000 
 14153      00000000 
 14153      00000000 
 14154              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 14155              		.align	2
 14156              		.set	.LANCHOR104,. + 0
 14159              	_ZL7LPF_Env:
 14160 0000 00000000 		.space	48
 14160      00000000 
 14160      00000000 
 14160      00000000 
 14160      00000000 
 14161              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 14162              		.align	2
 14163              		.set	.LANCHOR130,. + 0
 14166              	_ZL7LeftEnv:
 14167 0000 00000000 		.space	24
 14167      00000000 
 14167      00000000 
 14167      00000000 
 14167      00000000 
 14168              		.section	.bss._ZL8RightEnv,"aw",%nobits
 14169              		.align	2
 14170              		.set	.LANCHOR131,. + 0
 14173              	_ZL8RightEnv:
 14174 0000 00000000 		.space	24
 14174      00000000 
 14174      00000000 
 14174      00000000 
 14174      00000000 
 14175              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 14176              		.align	2
 14177              		.set	.LANCHOR86,. + 0
 14180              	_ZZ10Update_ModvE13modulation_CV:
 14181 0000 00000000 		.space	4
 14182              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 14183              		.align	2
 14184              		.set	.LANCHOR87,. + 0
 14187              	_ZZ10Update_ModvE17ModDepth_Filtered:
 14188 0000 00000000 		.space	4
 14189              		.section	.bss._ZZ11UpdateClockvE12ClockCounter,"aw",%nobits
 14190              		.align	2
 14191              		.set	.LANCHOR88,. + 0
 14194              	_ZZ11UpdateClockvE12ClockCounter:
 14195 0000 00000000 		.space	4
 14196              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 14197              		.align	2
 14198              		.set	.LANCHOR63,. + 0
 14201              	_ZZ12Update_widthvE10width_Last:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 416


 14202 0000 00000000 		.space	4
 14203              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 14204              		.align	2
 14205              		.set	.LANCHOR67,. + 0
 14208              	_ZZ12Update_widthvE12ModDepth_new:
 14209 0000 00000000 		.space	4
 14210              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 14211              		.set	.LANCHOR61,. + 0
 14214              	_ZZ12Update_widthvE12width_pickup:
 14215 0000 00       		.space	1
 14216              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 14217              		.set	.LANCHOR66,. + 0
 14220              	_ZZ12Update_widthvE15ModDepth_pickup:
 14221 0000 00       		.space	1
 14222              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 14223              		.set	.LANCHOR60,. + 0
 14226              	_ZZ12Update_widthvE9lastShift:
 14227 0000 00       		.space	1
 14228              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 14229              		.align	2
 14230              		.set	.LANCHOR62,. + 0
 14233              	_ZZ12Update_widthvE9width_new:
 14234 0000 00000000 		.space	4
 14235              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 14236              		.set	.LANCHOR57,. + 0
 14239              	_ZZ13Update_drywetvE10Res_pickup:
 14240 0000 00       		.space	1
 14241              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 14242              		.align	2
 14243              		.set	.LANCHOR54,. + 0
 14246              	_ZZ13Update_drywetvE10drywet_new:
 14247 0000 00000000 		.space	4
 14248              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 14249              		.align	2
 14250              		.set	.LANCHOR55,. + 0
 14253              	_ZZ13Update_drywetvE11drywet_Last:
 14254 0000 00000000 		.space	4
 14255              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 14256              		.set	.LANCHOR53,. + 0
 14259              	_ZZ13Update_drywetvE13drywet_pickup:
 14260 0000 00       		.space	1
 14261              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 14262              		.align	2
 14263              		.set	.LANCHOR58,. + 0
 14266              	_ZZ13Update_drywetvE7Res_new:
 14267 0000 00000000 		.space	4
 14268              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 14269              		.set	.LANCHOR52,. + 0
 14272              	_ZZ13Update_drywetvE9lastShift:
 14273 0000 00       		.space	1
 14274              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 14275              		.align	2
 14276              		.set	.LANCHOR110,. + 0
 14279              	_ZZ14Update_ButtonsvE11buttonstate:
 14280 0000 00000000 		.space	4
 14281              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 14282              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 417


 14283              		.set	.LANCHOR111,. + 0
 14286              	_ZZ14Update_ButtonsvE9resetTime:
 14287 0000 00000000 		.space	4
 14288              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 14289              		.align	2
 14290              		.set	.LANCHOR112,. + 0
 14293              	_ZZ14Update_ButtonsvE9shiftTime:
 14294 0000 00000000 		.space	4
 14295              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 14296              		.align	2
 14297              		.set	.LANCHOR34,. + 0
 14300              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 14301 0000 00000000 		.space	4
 14302              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 14303              		.align	2
 14304              		.set	.LANCHOR30,. + 0
 14307              	_ZZ16Update_feedbackLvE13feedbackL_new:
 14308 0000 00000000 		.space	4
 14309              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 14310              		.align	2
 14311              		.set	.LANCHOR31,. + 0
 14314              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 14315 0000 00000000 		.space	4
 14316              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 14317              		.set	.LANCHOR33,. + 0
 14320              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 14321 0000 00       		.space	1
 14322              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 14323              		.set	.LANCHOR29,. + 0
 14326              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 14327 0000 00       		.space	1
 14328              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 14329              		.set	.LANCHOR28,. + 0
 14332              	_ZZ16Update_feedbackLvE9lastShift:
 14333 0000 00       		.space	1
 14334              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 14335              		.align	2
 14336              		.set	.LANCHOR46,. + 0
 14339              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 14340 0000 00000000 		.space	4
 14341              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 14342              		.align	2
 14343              		.set	.LANCHOR42,. + 0
 14346              	_ZZ16Update_feedbackRvE13feedbackR_new:
 14347 0000 00000000 		.space	4
 14348              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 14349              		.align	2
 14350              		.set	.LANCHOR43,. + 0
 14353              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 14354 0000 00000000 		.space	4
 14355              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 14356              		.set	.LANCHOR45,. + 0
 14359              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 14360 0000 00       		.space	1
 14361              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 14362              		.set	.LANCHOR41,. + 0
 14365              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 418


 14366 0000 00       		.space	1
 14367              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 14368              		.set	.LANCHOR40,. + 0
 14371              	_ZZ16Update_feedbackRvE9lastShift:
 14372 0000 00       		.space	1
 14373              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 14374              		.align	2
 14375              		.set	.LANCHOR10,. + 0
 14378              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 14379 0000 00000000 		.space	4
 14380              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 14381              		.align	2
 14382              		.set	.LANCHOR11,. + 0
 14385              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 14386 0000 00000000 		.space	4
 14387              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 14388              		.align	2
 14389              		.set	.LANCHOR14,. + 0
 14392              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 14393 0000 00000000 		.space	4
 14394              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 14395              		.set	.LANCHOR9,. + 0
 14398              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 14399 0000 00       		.space	1
 14400              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 14401              		.set	.LANCHOR13,. + 0
 14404              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 14405 0000 00       		.space	1
 14406              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 14407              		.align	2
 14408              		.set	.LANCHOR6,. + 0
 14411              	_ZZ17Update_DelayTimeLvE8counterL:
 14412 0000 00000000 		.space	4
 14413              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 14414              		.set	.LANCHOR8,. + 0
 14417              	_ZZ17Update_DelayTimeLvE9lastShift:
 14418 0000 00       		.space	1
 14419              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 14420              		.align	2
 14421              		.set	.LANCHOR24,. + 0
 14424              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 14425 0000 00000000 		.space	4
 14426              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 14427              		.align	2
 14428              		.set	.LANCHOR21,. + 0
 14431              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 14432 0000 00000000 		.space	4
 14433              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 14434              		.align	2
 14435              		.set	.LANCHOR22,. + 0
 14438              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 14439 0000 00000000 		.space	4
 14440              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 14441              		.set	.LANCHOR23,. + 0
 14444              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 14445 0000 00       		.space	1
 14446              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 419


 14447              		.set	.LANCHOR20,. + 0
 14450              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 14451 0000 00       		.space	1
 14452              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 14453              		.align	2
 14454              		.set	.LANCHOR18,. + 0
 14457              	_ZZ17Update_DelayTimeRvE8counterR:
 14458 0000 00000000 		.space	4
 14459              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 14460              		.set	.LANCHOR19,. + 0
 14463              	_ZZ17Update_DelayTimeRvE9lastShift:
 14464 0000 00       		.space	1
 14465              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 14466              		.align	2
 14467              		.set	.LANCHOR82,. + 0
 14470              	_ZZ18Update_filterXfadevE15PostFilters_new:
 14471 0000 00000000 		.space	4
 14472              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 14473              		.align	2
 14474              		.set	.LANCHOR79,. + 0
 14477              	_ZZ18Update_filterXfadevE15filterXfade_new:
 14478 0000 00000000 		.space	4
 14479              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 14480              		.align	2
 14481              		.set	.LANCHOR84,. + 0
 14484              	_ZZ18Update_filterXfadevE16filterXfade_last:
 14485 0000 00000000 		.space	4
 14486              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 14487              		.set	.LANCHOR81,. + 0
 14490              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 14491 0000 00       		.space	1
 14492              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 14493              		.set	.LANCHOR78,. + 0
 14496              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 14497 0000 00       		.space	1
 14498              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 14499              		.set	.LANCHOR77,. + 0
 14502              	_ZZ18Update_filterXfadevE9lastShift:
 14503 0000 00       		.space	1
 14504              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 14505              		.align	2
 14506              		.set	.LANCHOR91,. + 0
 14509              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 14510 0000 00000000 		.space	4
 14511              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 14512              		.align	2
 14513              		.set	.LANCHOR74,. + 0
 14516              	_ZZ20Update_crossfeedbackvE11modRate_new:
 14517 0000 00000000 		.space	4
 14518              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 14519              		.set	.LANCHOR73,. + 0
 14522              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 14523 0000 00       		.space	1
 14524              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 14525              		.align	2
 14526              		.set	.LANCHOR71,. + 0
 14529              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 420


 14530 0000 00000000 		.space	4
 14531              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 14532              		.align	2
 14533              		.set	.LANCHOR75,. + 0
 14536              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 14537 0000 00000000 		.space	4
 14538              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 14539              		.set	.LANCHOR70,. + 0
 14542              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 14543 0000 00       		.space	1
 14544              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 14545              		.set	.LANCHOR69,. + 0
 14548              	_ZZ20Update_crossfeedbackvE9lastShift:
 14549 0000 00       		.space	1
 14550              		.section	.bss._ZZ4mainE9saveTimer,"aw",%nobits
 14551              		.align	2
 14552              		.set	.LANCHOR109,. + 0
 14555              	_ZZ4mainE9saveTimer:
 14556 0000 00000000 		.space	4
 14557              		.section	.bss._ZZL13AudioCallbackPKPKfPPfjE6LNegFB,"aw",%nobits
 14558              		.align	2
 14559              		.set	.LANCHOR128,. + 0
 14562              	_ZZL13AudioCallbackPKPKfPPfjE6LNegFB:
 14563 0000 00000000 		.space	4
 14564              		.section	.bss._ZZL13AudioCallbackPKPKfPPfjE6RNegFB,"aw",%nobits
 14565              		.align	2
 14566              		.set	.LANCHOR129,. + 0
 14569              	_ZZL13AudioCallbackPKPKfPPfjE6RNegFB:
 14570 0000 00000000 		.space	4
 14571              		.section	.bss._ZZL13AudioCallbackPKPKfPPfjE7Counter,"aw",%nobits
 14572              		.align	2
 14573              		.set	.LANCHOR115,. + 0
 14576              	_ZZL13AudioCallbackPKPKfPPfjE7Counter:
 14577 0000 00000000 		.space	4
 14578              		.section	.bss.crossfeedback,"aw",%nobits
 14579              		.align	2
 14580              		.set	.LANCHOR72,. + 0
 14583              	crossfeedback:
 14584 0000 00000000 		.space	4
 14585              		.section	.bss.crossfeedback_CV,"aw",%nobits
 14586              		.align	2
 14589              	crossfeedback_CV:
 14590 0000 00000000 		.space	4
 14591              		.section	.bss.delayL,"aw",%nobits
 14592              		.align	2
 14593              		.set	.LANCHOR0,. + 0
 14596              	delayL:
 14597 0000 00000000 		.space	280
 14597      00000000 
 14597      00000000 
 14597      00000000 
 14597      00000000 
 14598              		.section	.bss.delayR,"aw",%nobits
 14599              		.align	2
 14600              		.set	.LANCHOR1,. + 0
 14603              	delayR:
 14604 0000 00000000 		.space	280
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 421


 14604      00000000 
 14604      00000000 
 14604      00000000 
 14604      00000000 
 14605              		.section	.bss.delayTimeL_CV,"aw",%nobits
 14606              		.align	2
 14607              		.set	.LANCHOR5,. + 0
 14610              	delayTimeL_CV:
 14611 0000 00000000 		.space	4
 14612              		.section	.bss.delayTimeR_CV,"aw",%nobits
 14613              		.align	2
 14614              		.set	.LANCHOR17,. + 0
 14617              	delayTimeR_CV:
 14618 0000 00000000 		.space	4
 14619              		.section	.bss.delaysL_REV,"aw",%nobits
 14620              		.align	2
 14621              		.set	.LANCHOR2,. + 0
 14624              	delaysL_REV:
 14625 0000 00000000 		.space	8
 14625      00000000 
 14626              		.section	.bss.delaysR_REV,"aw",%nobits
 14627              		.align	2
 14628              		.set	.LANCHOR3,. + 0
 14631              	delaysR_REV:
 14632 0000 00000000 		.space	8
 14632      00000000 
 14633              		.section	.bss.drywet_CV,"aw",%nobits
 14634              		.align	2
 14635              		.set	.LANCHOR51,. + 0
 14638              	drywet_CV:
 14639 0000 00000000 		.space	4
 14640              		.section	.bss.feedbackL,"aw",%nobits
 14641              		.align	2
 14642              		.set	.LANCHOR32,. + 0
 14645              	feedbackL:
 14646 0000 00000000 		.space	4
 14647              		.section	.bss.feedbackL_CV,"aw",%nobits
 14648              		.align	2
 14649              		.set	.LANCHOR27,. + 0
 14652              	feedbackL_CV:
 14653 0000 00000000 		.space	4
 14654              		.section	.bss.feedbackR,"aw",%nobits
 14655              		.align	2
 14656              		.set	.LANCHOR44,. + 0
 14659              	feedbackR:
 14660 0000 00000000 		.space	4
 14661              		.section	.bss.feedbackR_CV,"aw",%nobits
 14662              		.align	2
 14663              		.set	.LANCHOR39,. + 0
 14666              	feedbackR_CV:
 14667 0000 00000000 		.space	4
 14668              		.section	.bss.filterXfade,"aw",%nobits
 14669              		.align	2
 14670              		.set	.LANCHOR80,. + 0
 14673              	filterXfade:
 14674 0000 00000000 		.space	4
 14675              		.section	.bss.modulation_CV_Raw,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 422


 14676              		.align	2
 14677              		.set	.LANCHOR85,. + 0
 14680              	modulation_CV_Raw:
 14681 0000 00000000 		.space	4
 14682              		.section	.bss.mute,"aw",%nobits
 14683              		.set	.LANCHOR113,. + 0
 14686              	mute:
 14687 0000 00       		.space	1
 14688              		.section	.bss.saveState,"aw",%nobits
 14689              		.set	.LANCHOR108,. + 0
 14692              	saveState:
 14693 0000 00       		.space	1
 14694              		.section	.bss.save_flag,"aw",%nobits
 14695              		.align	2
 14696              		.set	.LANCHOR16,. + 0
 14699              	save_flag:
 14700 0000 00       		.space	1
 14701              		.section	.bss.shift,"aw",%nobits
 14702              		.set	.LANCHOR7,. + 0
 14705              	shift:
 14706 0000 00       		.space	1
 14707              		.section	.bss.syncMode,"aw",%nobits
 14708              		.set	.LANCHOR12,. + 0
 14711              	syncMode:
 14712 0000 00       		.space	1
 14713              		.section	.bss.tempoLED_BASE,"aw",%nobits
 14714              		.align	2
 14715              		.set	.LANCHOR90,. + 0
 14718              	tempoLED_BASE:
 14719 0000 00000000 		.space	72
 14719      00000000 
 14719      00000000 
 14719      00000000 
 14719      00000000 
 14720              		.section	.bss.width_CV,"aw",%nobits
 14721              		.align	2
 14722              		.set	.LANCHOR59,. + 0
 14725              	width_CV:
 14726 0000 00000000 		.space	4
 14727              		.section	.data.drywet,"aw"
 14728              		.align	2
 14729              		.set	.LANCHOR56,. + 0
 14732              	drywet:
 14733 0000 0000003F 		.word	1056964608
 14734              		.section	.data.width,"aw"
 14735              		.align	2
 14736              		.set	.LANCHOR64,. + 0
 14739              	width:
 14740 0000 0000803F 		.word	1065353216
 14741              		.section	.rodata.CSWTCH.381,"a"
 14742              		.align	3
 14743              		.set	.LANCHOR25,. + 0
 14746              	CSWTCH.381:
 14747 0000 00000000 		.word	0
 14748 0004 0000F83F 		.word	1073217536
 14749 0008 00000000 		.word	0
 14750 000c 00000040 		.word	1073741824
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 423


 14751 0010 00000000 		.word	0
 14752 0014 00000840 		.word	1074266112
 14753              		.section	.rodata._ZL18defaultAltControls,"a"
 14754              		.align	2
 14755              		.set	.LANCHOR114,. + 0
 14758              	_ZL18defaultAltControls:
 14759 0000 00650148 		.word	1208050944
 14760 0004 0000803F 		.word	1065353216
 14761 0008 00000000 		.word	0
 14762 000c 9A99A140 		.word	1084332442
 14763 0010 00004843 		.word	1128792064
 14764 0014 00803B46 		.word	1178304512
 14765 0018 00000000 		.word	0
 14766 001c 00000000 		.word	0
 14767 0020 0080BB46 		.word	1186693120
 14768 0024 00000000 		.word	0
 14769 0028 00000000 		.word	0
 14770              		.section	.sdram_bss,"aw"
 14771              		.align	2
 14774              	delMemsR_REV:
 14775 0000 00000000 		.space	2400040
 14775      00000000 
 14775      00000000 
 14775      00000000 
 14775      00000000 
 14778              	delMemsL_REV:
 14779 249f28 00000000 		.space	2400040
 14779      00000000 
 14779      00000000 
 14779      00000000 
 14779      00000000 
 14782              	delMemsR:
 14783 493e50 00000000 		.space	6912136
 14783      00000000 
 14783      00000000 
 14783      00000000 
 14783      00000000 
 14786              	delMemsL:
 14787 b2b6d8 00000000 		.space	6912136
 14787      00000000 
 14787      00000000 
 14787      00000000 
 14787      00000000 
 14788              		.text
 14789              	.Letext0:
 14790              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 14791              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 14792              		.file 31 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 14793              		.file 32 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 14794              		.file 33 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 14795              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14796              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14797              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14798              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14799              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14800              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14801              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 424


 14802              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14803              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14804              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14805              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14806              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14807              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14808              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14809              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14810              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14811              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14812              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14813              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14814              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14815              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14816              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14817              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 14818              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 14819              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 14820              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 14821              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 14822              		.file 61 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14823              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 14824              		.file 63 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 14825              		.file 64 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14826              		.file 65 "../libdaisy/src/daisy_core.h"
 14827              		.file 66 "../libdaisy/src/per/tim.h"
 14828              		.file 67 "../libdaisy/src/per/sai.h"
 14829              		.file 68 "../libdaisy/src/util/wav_format.h"
 14830              		.file 69 "../libdaisy/src/per/gpio.h"
 14831              		.file 70 "../libdaisy/src/dev/sdram.h"
 14832              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14833              		.file 72 "<built-in>"
 14834              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 14835              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 14836              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 14837              		.file 76 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 14838              		.file 77 "../DaisySP/Source/Control/adenv.h"
 14839              		.file 78 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 14840              		.file 79 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 14841              		.file 80 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 14842              		.file 81 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 14843              		.file 82 "QSPI_Settings.h"
 14844              		.file 83 "scale.h"
 14845              		.file 84 "constants.h"
 14846              		.file 85 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 425


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:43     .text._ZN5daisy6GateInD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:68     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:117    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:142    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:167    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:192    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14786  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14782  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14778  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14774  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1636   .text._Z17Update_DelayTimeLv:00000000000001e0 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 426


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1666   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1674   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1699   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1705   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:1713   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2202   .text._Z17Update_DelayTimeRv:00000000000001ac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2229   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2237   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2262   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2268   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2276   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2731   .text._Z16Update_feedbackLv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2760   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2768   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2793   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2799   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:2807   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3261   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3290   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3298   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3323   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3329   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3337   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3846   .text._Z13Update_drywetv:00000000000001f8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3883   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3891   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3916   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3922   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:3930   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:4403   .text._Z12Update_widthv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:4429   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:4437   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:4798   .text._Z20Update_crossfeedbackv:000000000000011c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:4818   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:4826   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5163   .text._Z18Update_filterXfadev:0000000000000120 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5186   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5194   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5224   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5232   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5240   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5397   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5409   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5417   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5529   .text._Z11UpdateClockv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5543   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5551   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5603   .text._Z21Update_DelayBaseTempov:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5610   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5618   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5651   .text._Z21Update_DelayTempoLEDsv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5658   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5666   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5788   .text._Z19Update_BaseTempoLEDv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5799   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:5807   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:6509   .text._Z13ApplySettingsRK8Settings:000000000000036c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 427


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:6550   .text._Z13ApplySettingsRK8Settings:0000000000000404 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:6629   .text._Z13ApplySettingsRK8Settings:0000000000000450 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:6643   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:6651   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:7405   .text.startup.main:0000000000000370 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:7438   .text.startup.main:00000000000003f0 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8004   .text.startup.main:000000000000069c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8955   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000000 _ZL13AudioCallbackPKPKfPPfj
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8029   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8037   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8099   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8110   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8118   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8221   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8233   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8241   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8922   .text._Z14Update_Buttonsv:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:8948   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:9026   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000034 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:9041   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000052 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:9079   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000074 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:9091   .text._ZL13AudioCallbackPKPKfPPfj:000000000000008c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:10010  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000424 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:10056  .text._ZL13AudioCallbackPKPKfPPfj:00000000000004bc $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:11012  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000820 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:11031  .text._ZL13AudioCallbackPKPKfPPfj:000000000000085c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:11923  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000bb0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:11961  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000c20 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12130  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000cc4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12140  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12148  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12182  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12190  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12237  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12242  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12250  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12334  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12339  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12347  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12437  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12442  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12450  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12480  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12485  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:12492  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13576  .text.startup._GLOBAL__sub_I_delMemsL:00000000000002f4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13636  .text.startup._GLOBAL__sub_I_delMemsL:00000000000003e0 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13766  .text.startup._GLOBAL__sub_I_delMemsL:000000000000044c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13782  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13836  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13843  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13856  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13868  .bss.ClockPin:0000000000000000 ClockPin
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13949  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13942  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13935  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13849  .bss.CLOCK_DEBUG:0000000000000000 CLOCK_DEBUG
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 428


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13908  .bss.PHASE_DEBUG:0000000000000000 PHASE_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13880  .bss.DELAYR_DEBUG:0000000000000000 DELAYR_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13874  .bss.DELAYL_DEBUG:0000000000000000 DELAYL_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14692  .bss.saveState:0000000000000000 saveState
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14699  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13914  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13861  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14686  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14705  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14711  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14680  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13901  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14673  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14725  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14739  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14638  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14732  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14589  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14583  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14666  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14659  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14652  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14645  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14617  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14610  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14718  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13956  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13928  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13921  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13887  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13894  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14631  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14624  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14603  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14596  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13832  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13839  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13846  .bss.CLOCK_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13852  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13862  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13864  .bss.ClockPin:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13871  .bss.DELAYL_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13877  .bss.DELAYR_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13883  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13890  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13897  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13904  .bss.PHASE_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13915  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13917  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13924  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13931  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13938  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13945  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13952  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13959  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13963  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13966  .bss._ZL10FwdRevREnv:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 429


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13970  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13973  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13977  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13980  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13984  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13987  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13991  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13994  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:13998  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14001  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14005  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14008  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14012  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14015  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14019  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14022  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14026  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14029  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14033  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14036  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14040  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14043  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14047  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14050  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14054  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14057  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14061  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14064  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14068  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14071  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14075  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14078  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14082  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14085  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14089  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14092  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14096  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14099  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14103  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14106  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14110  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14113  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14117  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14120  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14124  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14127  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14131  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14134  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14138  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14141  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14145  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14148  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14152  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14155  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14159  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14162  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14166  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 430


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14169  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14173  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14176  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14180  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14183  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14187  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14190  .bss._ZZ11UpdateClockvE12ClockCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14194  .bss._ZZ11UpdateClockvE12ClockCounter:0000000000000000 _ZZ11UpdateClockvE12ClockCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14197  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14201  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14204  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14208  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14214  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14215  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14220  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14221  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14226  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14227  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14229  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14233  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14239  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14240  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14242  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14246  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14249  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14253  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14259  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14260  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14262  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14266  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14272  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14273  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14275  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14279  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14282  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14286  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14289  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14293  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14296  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14300  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14303  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14307  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14310  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14314  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14320  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14321  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14326  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14327  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14332  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14333  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14335  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14339  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14342  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14346  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14349  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14353  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14359  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 431


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14360  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14365  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14366  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14371  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14372  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14374  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14378  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14381  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14385  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14388  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14392  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14398  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14399  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14404  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14405  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14407  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14411  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14417  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14418  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14420  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14424  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14427  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14431  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14434  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14438  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14444  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14445  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14450  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14451  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14453  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14457  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14463  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14464  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14466  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14470  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14473  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14477  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14480  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14484  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14490  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14491  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14496  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14497  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14502  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14503  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14505  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14509  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14512  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14516  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14522  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14523  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14525  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14529  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14532  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14536  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14542  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14543  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 432


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14548  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14549  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14551  .bss._ZZ4mainE9saveTimer:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14555  .bss._ZZ4mainE9saveTimer:0000000000000000 _ZZ4mainE9saveTimer
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14558  .bss._ZZL13AudioCallbackPKPKfPPfjE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14562  .bss._ZZL13AudioCallbackPKPKfPPfjE6LNegFB:0000000000000000 _ZZL13AudioCallbackPKPKfPPfjE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14565  .bss._ZZL13AudioCallbackPKPKfPPfjE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14569  .bss._ZZL13AudioCallbackPKPKfPPfjE6RNegFB:0000000000000000 _ZZL13AudioCallbackPKPKfPPfjE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14572  .bss._ZZL13AudioCallbackPKPKfPPfjE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14576  .bss._ZZL13AudioCallbackPKPKfPPfjE7Counter:0000000000000000 _ZZL13AudioCallbackPKPKfPPfjE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14579  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14586  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14592  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14599  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14606  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14613  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14620  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14627  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14634  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14641  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14648  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14655  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14662  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14669  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14676  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14687  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14693  .bss.saveState:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14695  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14706  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14712  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14714  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14721  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14728  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14735  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14742  .rodata.CSWTCH.381:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14746  .rodata.CSWTCH.381:0000000000000000 CSWTCH.381
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14754  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14758  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s:14771  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy6GateInD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 433


_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6GateIn4TrigEv
_ZN8Taptempo5clockEm
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8Taptempo8getTempoEv
_ZN8Taptempo14getDelayLengthEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo8setTempoEf
_ZN9ButtonLED6turnONEv
_ZN9ButtonLED7turnOFFEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
_ZN7daisysp4Adsr4InitEfi
_ZN7daisysp4Adsr7SetTimeEif
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN8Taptempo4initEmmfi
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_Z12LoadSettingsv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy6System6GetNowEv
_Z12SaveSettingsRK8Settings
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN5daisy6Switch8DebounceEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN9ButtonLED6toggleEv
_ZN8Taptempo3tapEv
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc9fsnWu.s 			page 434


_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
