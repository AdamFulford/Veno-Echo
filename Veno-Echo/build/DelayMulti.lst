ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"DelayMulti.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN10DelayMulti4initE12dsy_gpio_pinf,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN10DelayMulti4initE12dsy_gpio_pinf
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN10DelayMulti4initE12dsy_gpio_pinf:
  27              	.LVL0:
  28              	.LFB3966:
  29              		.file 1 "DelayMulti.cpp"
   1:DelayMulti.cpp **** // Copyright 2021 Adam Fulford
   2:DelayMulti.cpp **** // 
   3:DelayMulti.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.cpp **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.cpp **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.cpp **** // 
  10:DelayMulti.cpp **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.cpp **** // all copies or substantial portions of the Software.
  12:DelayMulti.cpp **** // 
  13:DelayMulti.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.cpp **** // THE SOFTWARE.
  20:DelayMulti.cpp **** // 
  21:DelayMulti.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.cpp **** 
  23:DelayMulti.cpp **** #include "DelayMulti.h"
  24:DelayMulti.cpp **** 
  25:DelayMulti.cpp **** //initialises delay class
  26:DelayMulti.cpp **** void DelayMulti::init(dsy_gpio_pin ledpin,float samplerate)
  27:DelayMulti.cpp **** {
  30              		.loc 1 27 1 view -0
  31              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  28:DelayMulti.cpp ****     samplerate_ = samplerate;
  34              		.loc 1 28 5 view .LVU1
  27:DelayMulti.cpp ****     samplerate_ = samplerate;
  35              		.loc 1 27 1 is_stmt 0 view .LVU2
  36 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  37              		.cfi_def_cfa_offset 28
  38              		.cfi_offset 4, -28
  39              		.cfi_offset 5, -24
  40              		.cfi_offset 6, -20
  41              		.cfi_offset 7, -16
  42              		.cfi_offset 8, -12
  43              		.cfi_offset 9, -8
  44              		.cfi_offset 14, -4
  45 0004 83B0     		sub	sp, sp, #12
  46              		.cfi_def_cfa_offset 40
  47 0006 394C     		ldr	r4, .L8
  27:DelayMulti.cpp ****     samplerate_ = samplerate;
  48              		.loc 1 27 1 view .LVU3
  49 0008 0546     		mov	r5, r0
  50 000a ADF80410 		strh	r1, [sp, #4]	@ movhi
  29:DelayMulti.cpp ****     del -> Init(totalNumHeads);
  51              		.loc 1 29 5 view .LVU4
  52 000e 0168     		ldr	r1, [r0]
  28:DelayMulti.cpp ****     samplerate_ = samplerate;
  53              		.loc 1 28 17 view .LVU5
  54 0010 80ED430A 		vstr.32	s0, [r0, #268]
  55              		.loc 1 29 5 is_stmt 1 view .LVU6
  56              	.LVL1:
  57              	.LBB103:
  58              	.LBI103:
  59              		.file 2 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 3


  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
  60              		.loc 2 56 10 view .LVU7
  61              	.LBB104:
  62              	.LBB105:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
  63              		.loc 2 58 29 view .LVU8
  64 0014 01F18403 		add	r3, r1, #132
  65 0018 0C44     		add	r4, r4, r1
  66              	.LVL2:
  67              	.L2:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
  68              		.loc 2 60 13 is_stmt 0 view .LVU9
  69 001a 0022     		movs	r2, #0
  70 001c 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
  71              		.loc 2 58 9 is_stmt 1 view .LVU10
  58:delayline_multitap.h ****         {
  72              		.loc 2 58 29 view .LVU11
  73 0020 A342     		cmp	r3, r4
  74 0022 FAD1     		bne	.L2
  75              	.LBE105:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 4


  76              		.loc 2 63 9 is_stmt 0 view .LVU12
  77 0024 0020     		movs	r0, #0
  78              	.LVL3:
  64:delayline_multitap.h ****         num_heads_ = num_heads;
  79              		.loc 2 64 9 view .LVU13
  80 0026 314E     		ldr	r6, .L8
  81 0028 0227     		movs	r7, #2
  82 002a 0A46     		mov	r2, r1
  83              	.LBB106:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
  84              		.loc 2 66 21 view .LVU14
  85 002c 0346     		mov	r3, r0
  86              	.LBE106:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
  87              		.loc 2 63 9 view .LVU15
  88 002e 0860     		str	r0, [r1]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
  89              		.loc 2 64 9 view .LVU16
  90 0030 8F51     		str	r7, [r1, r6]
  91              	.LVL4:
  92              	.LBB107:
  93              		.loc 2 66 31 is_stmt 1 view .LVU17
  94              	.L3:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
  95              		.loc 2 68 13 is_stmt 0 view .LVU18
  96 0032 0026     		movs	r6, #0
  66:delayline_multitap.h ****         {
  97              		.loc 2 66 9 view .LVU19
  98 0034 0133     		adds	r3, r3, #1
  99              	.LVL5:
  69:delayline_multitap.h ****             frac_[i] = 0;
 100              		.loc 2 69 13 view .LVU20
 101 0036 0027     		movs	r7, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 102              		.loc 2 68 13 view .LVU21
 103 0038 42F8046F 		str	r6, [r2, #4]!
  66:delayline_multitap.h ****         {
 104              		.loc 2 66 31 view .LVU22
 105 003c 2168     		ldr	r1, [r4]
 106              		.loc 2 69 13 view .LVU23
 107 003e 1764     		str	r7, [r2, #64]	@ float
  66:delayline_multitap.h ****         {
 108              		.loc 2 66 9 is_stmt 1 view .LVU24
 109              	.LVL6:
  66:delayline_multitap.h ****         {
 110              		.loc 2 66 31 view .LVU25
 111 0040 9942     		cmp	r1, r3
 112 0042 F6D8     		bhi	.L3
 113              	.LVL7:
  66:delayline_multitap.h ****         {
 114              		.loc 2 66 31 is_stmt 0 view .LVU26
 115              	.LBE107:
 116              	.LBE104:
 117              	.LBE103:
  30:DelayMulti.cpp ****     tempoled.init(ledpin,samplerate_/static_cast<float> (updateDiv));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 5


 118              		.loc 1 30 5 is_stmt 1 view .LVU27
 119              		.loc 1 30 18 is_stmt 0 view .LVU28
 120 0044 F2EE0E7A 		vmov.f32	s15, #1.5e+1
 121 0048 95ED430A 		vldr.32	s0, [r5, #268]
 122              	.LVL8:
  31:DelayMulti.cpp ****     //dsy_tim_init(); //start timer
  32:DelayMulti.cpp ****     //dsy_tim_start();
  33:DelayMulti.cpp **** 
  34:DelayMulti.cpp ****     XfadeGate_[0] = true;
  35:DelayMulti.cpp ****     XfadeGate_[1] = false;
  36:DelayMulti.cpp **** 
  37:DelayMulti.cpp ****     Gain_[0] = 1.0f;
 123              		.loc 1 37 14 view .LVU29
 124 004c 4FF07E54 		mov	r4, #1065353216
  34:DelayMulti.cpp ****     XfadeGate_[1] = false;
 125              		.loc 1 34 19 view .LVU30
 126 0050 4FF00108 		mov	r8, #1
  30:DelayMulti.cpp ****     tempoled.init(ledpin,samplerate_/static_cast<float> (updateDiv));
 127              		.loc 1 30 18 view .LVU31
 128 0054 0199     		ldr	r1, [sp, #4]
 129 0056 281D     		adds	r0, r5, #4
 130 0058 80EE270A 		vdiv.f32	s0, s0, s15
 131              	.LBB108:
 132              	.LBB109:
 133              	.LBB110:
 134              	.LBB111:
 135              		.file 3 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 6


  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
 136              		.loc 3 45 16 view .LVU32
 137 005c 4FF07C59 		mov	r9, #1056964608
 138              	.LBE111:
 139              	.LBE110:
 140              	.LBE109:
 141              	.LBE108:
  30:DelayMulti.cpp ****     //dsy_tim_init(); //start timer
 142              		.loc 1 30 18 view .LVU33
 143 0060 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 144              	.LVL9:
  34:DelayMulti.cpp ****     XfadeGate_[1] = false;
 145              		.loc 1 34 5 is_stmt 1 view .LVU34
  35:DelayMulti.cpp **** 
 146              		.loc 1 35 5 view .LVU35
 147              		.loc 1 37 14 is_stmt 0 view .LVU36
 148 0064 C5F8D840 		str	r4, [r5, #216]	@ float
  38:DelayMulti.cpp ****     Gain_[1] = 1.0f;
 149              		.loc 1 38 14 view .LVU37
 150 0068 C5F8DC40 		str	r4, [r5, #220]	@ float
  39:DelayMulti.cpp **** 
  40:DelayMulti.cpp ****     delayLast_ = 1;
 151              		.loc 1 40 16 view .LVU38
 152 006c C5F82441 		str	r4, [r5, #292]	@ float
  34:DelayMulti.cpp ****     XfadeGate_[1] = false;
 153              		.loc 1 34 19 view .LVU39
 154 0070 A5F8CC80 		strh	r8, [r5, #204]	@ movhi
  37:DelayMulti.cpp ****     Gain_[1] = 1.0f;
 155              		.loc 1 37 5 is_stmt 1 view .LVU40
  38:DelayMulti.cpp **** 
 156              		.loc 1 38 5 view .LVU41
 157              		.loc 1 40 5 view .LVU42
  41:DelayMulti.cpp ****     timer_ = System::GetNow();
 158              		.loc 1 41 5 view .LVU43
 159              		.loc 1 41 28 is_stmt 0 view .LVU44
 160 0074 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 161              	.LVL10:
 162              	.LBB162:
  42:DelayMulti.cpp ****     active_head_set_ = true;    //set 1 active
  43:DelayMulti.cpp ****     waiting_flag_ = false;
  44:DelayMulti.cpp ****     mod_ = 0.0f;
  45:DelayMulti.cpp ****     //timethresh_ = 5;    //length of wait before triggering xfade
  46:DelayMulti.cpp ****     output_ = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 7


  47:DelayMulti.cpp ****     TimeChange_ = false;
  48:DelayMulti.cpp ****     for(size_t i{0}; i < totalNumHeads; i++)
  49:DelayMulti.cpp ****     {
  50:DelayMulti.cpp ****         Xfade_[i].Init();
  51:DelayMulti.cpp ****         Xfade_[i].SetCurve(CROSSFADE_CPOW);
  52:DelayMulti.cpp ****         
  53:DelayMulti.cpp ****         XfadeEnv_[i].Init(samplerate_);
 163              		.loc 1 53 26 view .LVU45
 164 0078 95ED430A 		vldr.32	s0, [r5, #268]
 165              	.LBE162:
  41:DelayMulti.cpp ****     timer_ = System::GetNow();
 166              		.loc 1 41 12 view .LVU46
 167 007c C5F8FC00 		str	r0, [r5, #252]
  42:DelayMulti.cpp ****     active_head_set_ = true;    //set 1 active
 168              		.loc 1 42 5 is_stmt 1 view .LVU47
  43:DelayMulti.cpp ****     mod_ = 0.0f;
 169              		.loc 1 43 5 view .LVU48
 170              	.LBB163:
 171              		.loc 1 53 26 is_stmt 0 view .LVU49
 172 0080 05F15C00 		add	r0, r5, #92
 173              	.LBE163:
  43:DelayMulti.cpp ****     mod_ = 0.0f;
 174              		.loc 1 43 19 view .LVU50
 175 0084 85F80861 		strb	r6, [r5, #264]
  44:DelayMulti.cpp ****     //timethresh_ = 5;    //length of wait before triggering xfade
 176              		.loc 1 44 5 is_stmt 1 view .LVU51
  44:DelayMulti.cpp ****     //timethresh_ = 5;    //length of wait before triggering xfade
 177              		.loc 1 44 10 is_stmt 0 view .LVU52
 178 0088 C5F8F870 		str	r7, [r5, #248]	@ float
  46:DelayMulti.cpp ****     TimeChange_ = false;
 179              		.loc 1 46 5 is_stmt 1 view .LVU53
  46:DelayMulti.cpp ****     TimeChange_ = false;
 180              		.loc 1 46 13 is_stmt 0 view .LVU54
 181 008c C5F81871 		str	r7, [r5, #280]	@ float
  47:DelayMulti.cpp ****     for(size_t i{0}; i < totalNumHeads; i++)
 182              		.loc 1 47 5 is_stmt 1 view .LVU55
  47:DelayMulti.cpp ****     for(size_t i{0}; i < totalNumHeads; i++)
 183              		.loc 1 47 17 is_stmt 0 view .LVU56
 184 0090 85F81C61 		strb	r6, [r5, #284]
  48:DelayMulti.cpp ****     {
 185              		.loc 1 48 5 is_stmt 1 view .LVU57
 186              	.LVL11:
 187              	.LBB164:
  48:DelayMulti.cpp ****     {
 188              		.loc 1 48 24 view .LVU58
  50:DelayMulti.cpp ****         Xfade_[i].SetCurve(CROSSFADE_CPOW);
 189              		.loc 1 50 9 view .LVU59
 190              	.LBB120:
 191              	.LBI109:
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
 192              		.loc 3 51 17 view .LVU60
 193              	.LBE120:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 8


 194              	.LBE164:
 195              		.loc 3 51 26 view .LVU61
 196              	.LBB165:
 197              	.LBB121:
 198              	.LBB116:
 199              	.LBI110:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 200              		.loc 3 43 17 view .LVU62
 201              	.LBB112:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 202              		.loc 3 45 9 view .LVU63
 203              	.LBE112:
 204              	.LBE116:
 205              	.LBE121:
 206              	.LBB122:
 207              	.LBB123:
 208              		.file 4 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 9


  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
 209              		.loc 4 54 63 is_stmt 0 view .LVU64
 210 0094 164F     		ldr	r7, .L8+4
 211              	.LBE123:
 212              	.LBE122:
 213              	.LBB127:
 214              	.LBB128:
 215 0096 174E     		ldr	r6, .L8+8
 216              	.LBE128:
 217              	.LBE127:
 218              	.LBE165:
  42:DelayMulti.cpp ****     waiting_flag_ = false;
 219              		.loc 1 42 22 view .LVU65
 220 0098 85F80081 		strb	r8, [r5, #256]
 221              	.LBB166:
 222              	.LBB132:
 223              	.LBB133:
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 224              		.loc 3 64 50 view .LVU66
 225 009c 85F85080 		strb	r8, [r5, #80]
 226              	.LBE133:
 227              	.LBE132:
 228              	.LBB137:
 229              	.LBB117:
 230              	.LBB113:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 231              		.loc 3 45 16 view .LVU67
 232 00a0 C5F84C90 		str	r9, [r5, #76]	@ float
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 233              		.loc 3 46 9 is_stmt 1 view .LVU68
 234              	.LVL12:
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 10


 235              		.loc 3 46 9 is_stmt 0 view .LVU69
 236              	.LBE113:
 237              	.LBE117:
 238              	.LBE137:
  51:DelayMulti.cpp ****         
 239              		.loc 1 51 9 is_stmt 1 view .LVU70
 240              	.LBB138:
 241              	.LBI132:
 242              		.loc 3 64 17 view .LVU71
 243              	.LBB134:
 244              		.loc 3 64 43 view .LVU72
 245              		.loc 3 64 43 is_stmt 0 view .LVU73
 246              	.LBE134:
 247              	.LBE138:
 248              		.loc 1 53 9 is_stmt 1 view .LVU74
 249              		.loc 1 53 26 is_stmt 0 view .LVU75
 250 00a4 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 251              	.LVL13:
  54:DelayMulti.cpp ****         //Head envelope attack and decay times:
  55:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADENV_SEG_ATTACK, XFadeTime);
 252              		.loc 1 55 9 is_stmt 1 view .LVU76
 253              	.LBB139:
 254              	.LBI122:
 255              		.loc 4 54 17 view .LVU77
 256              	.LBB124:
 257              		.loc 4 54 48 view .LVU78
 258              	.LBE124:
 259              	.LBE139:
  53:DelayMulti.cpp ****         //Head envelope attack and decay times:
 260              		.loc 1 53 26 is_stmt 0 view .LVU79
 261 00a8 05F19400 		add	r0, r5, #148
 262 00ac 95ED430A 		vldr.32	s0, [r5, #268]
 263              	.LBB140:
 264              	.LBB141:
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 265              		.loc 4 58 57 view .LVU80
 266 00b0 EC65     		str	r4, [r5, #92]	@ float
 267              	.LBE141:
 268              	.LBE140:
  56:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADENV_SEG_DECAY, 0.00001f);
  57:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADSR_SEG_RELEASE, XFadeTime);
  58:DelayMulti.cpp ****         XfadeEnv_[i].SetSustainLevel(1.0);
  59:DelayMulti.cpp **** 
  60:DelayMulti.cpp ****         delayTime_[i] = 1.0f;
 269              		.loc 1 60 23 view .LVU81
 270 00b2 C5F8E040 		str	r4, [r5, #224]	@ float
  61:DelayMulti.cpp ****         delayTarget_[i] = 1.0f;
 271              		.loc 1 61 25 view .LVU82
 272 00b6 C5F8E840 		str	r4, [r5, #232]	@ float
 273              	.LBB144:
 274              	.LBB118:
 275              	.LBB114:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 276              		.loc 3 45 16 view .LVU83
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 11


 277 00ba C5F85490 		str	r9, [r5, #84]	@ float
 278              	.LBE114:
 279              	.LBE118:
 280              	.LBE144:
 281              	.LBB145:
 282              	.LBB135:
 283              		.loc 3 64 50 view .LVU84
 284 00be 85F85880 		strb	r8, [r5, #88]
 285              	.LBE135:
 286              	.LBE145:
 287              	.LBB146:
 288              	.LBB125:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 289              		.loc 4 54 63 view .LVU85
 290 00c2 6F66     		str	r7, [r5, #100]	@ float
 291              	.LVL14:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 292              		.loc 4 54 63 view .LVU86
 293              	.LBE125:
 294              	.LBE146:
  56:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADSR_SEG_RELEASE, XFadeTime);
 295              		.loc 1 56 9 is_stmt 1 view .LVU87
 296              	.LBB147:
 297              	.LBI127:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 298              		.loc 4 54 17 view .LVU88
 299              	.LBB129:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 300              		.loc 4 54 48 view .LVU89
 301              	.LBE129:
 302              	.LBE147:
 303              	.LBB148:
 304              	.LBB149:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 305              		.loc 4 54 63 is_stmt 0 view .LVU90
 306 00c4 2F67     		str	r7, [r5, #112]	@ float
 307              	.LBE149:
 308              	.LBE148:
 309              	.LBB152:
 310              	.LBB130:
 311 00c6 AE66     		str	r6, [r5, #104]	@ float
 312              	.LVL15:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 313              		.loc 4 54 63 view .LVU91
 314              	.LBE130:
 315              	.LBE152:
  57:DelayMulti.cpp ****         XfadeEnv_[i].SetSustainLevel(1.0);
 316              		.loc 1 57 9 is_stmt 1 view .LVU92
 317              	.LBB153:
 318              	.LBI148:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 319              		.loc 4 54 17 view .LVU93
 320              	.LBB150:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 321              		.loc 4 54 48 view .LVU94
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 322              		.loc 4 54 48 is_stmt 0 view .LVU95
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 12


 323              	.LBE150:
 324              	.LBE153:
  58:DelayMulti.cpp **** 
 325              		.loc 1 58 9 is_stmt 1 view .LVU96
 326              	.LBB154:
 327              	.LBI140:
 328              		.loc 4 58 17 view .LVU97
 329              	.LBB142:
 330              		.loc 4 58 52 view .LVU98
 331              		.loc 4 58 52 is_stmt 0 view .LVU99
 332              	.LBE142:
 333              	.LBE154:
  60:DelayMulti.cpp ****         delayTarget_[i] = 1.0f;
 334              		.loc 1 60 9 is_stmt 1 view .LVU100
 335              		.loc 1 61 9 view .LVU101
  48:DelayMulti.cpp ****     {
 336              		.loc 1 48 5 view .LVU102
  48:DelayMulti.cpp ****     {
 337              		.loc 1 48 24 view .LVU103
  50:DelayMulti.cpp ****         Xfade_[i].SetCurve(CROSSFADE_CPOW);
 338              		.loc 1 50 9 view .LVU104
 339              	.LBB155:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 340              		.loc 3 51 17 view .LVU105
 341              	.LBE155:
 342              	.LBE166:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 343              		.loc 3 51 26 view .LVU106
 344              	.LBB167:
 345              	.LBB156:
 346              	.LBB119:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 347              		.loc 3 43 17 view .LVU107
 348              	.LBB115:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 349              		.loc 3 45 9 view .LVU108
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 350              		.loc 3 46 9 view .LVU109
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 351              		.loc 3 46 9 is_stmt 0 view .LVU110
 352              	.LBE115:
 353              	.LBE119:
 354              	.LBE156:
  51:DelayMulti.cpp ****         
 355              		.loc 1 51 9 is_stmt 1 view .LVU111
 356              	.LBB157:
 357              		.loc 3 64 17 view .LVU112
 358              	.LBB136:
 359              		.loc 3 64 43 view .LVU113
 360              		.loc 3 64 43 is_stmt 0 view .LVU114
 361              	.LBE136:
 362              	.LBE157:
  53:DelayMulti.cpp ****         //Head envelope attack and decay times:
 363              		.loc 1 53 9 is_stmt 1 view .LVU115
  53:DelayMulti.cpp ****         //Head envelope attack and decay times:
 364              		.loc 1 53 26 is_stmt 0 view .LVU116
 365 00c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 13


 366              	.LVL16:
  55:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADENV_SEG_DECAY, 0.00001f);
 367              		.loc 1 55 9 is_stmt 1 view .LVU117
 368              	.LBB158:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 369              		.loc 4 54 17 view .LVU118
 370              	.LBB126:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 371              		.loc 4 54 48 view .LVU119
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 372              		.loc 4 54 63 is_stmt 0 view .LVU120
 373 00cc C5F89C70 		str	r7, [r5, #156]	@ float
 374              	.LVL17:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 375              		.loc 4 54 63 view .LVU121
 376              	.LBE126:
 377              	.LBE158:
  56:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADSR_SEG_RELEASE, XFadeTime);
 378              		.loc 1 56 9 is_stmt 1 view .LVU122
 379              	.LBB159:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 380              		.loc 4 54 17 view .LVU123
 381              	.LBB131:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 382              		.loc 4 54 48 view .LVU124
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 383              		.loc 4 54 63 is_stmt 0 view .LVU125
 384 00d0 C5F8A060 		str	r6, [r5, #160]	@ float
 385              	.LVL18:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 386              		.loc 4 54 63 view .LVU126
 387              	.LBE131:
 388              	.LBE159:
  57:DelayMulti.cpp ****         XfadeEnv_[i].SetSustainLevel(1.0);
 389              		.loc 1 57 9 is_stmt 1 view .LVU127
 390              	.LBB160:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 391              		.loc 4 54 17 view .LVU128
 392              	.LBB151:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 393              		.loc 4 54 48 view .LVU129
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 394              		.loc 4 54 63 is_stmt 0 view .LVU130
 395 00d4 C5F8A870 		str	r7, [r5, #168]	@ float
 396              	.LVL19:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 397              		.loc 4 54 63 view .LVU131
 398              	.LBE151:
 399              	.LBE160:
  58:DelayMulti.cpp **** 
 400              		.loc 1 58 9 is_stmt 1 view .LVU132
 401              	.LBB161:
 402              		.loc 4 58 17 view .LVU133
 403              	.LBB143:
 404              		.loc 4 58 52 view .LVU134
 405              		.loc 4 58 57 is_stmt 0 view .LVU135
 406 00d8 C5F89440 		str	r4, [r5, #148]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 14


 407              	.LVL20:
 408              		.loc 4 58 57 view .LVU136
 409              	.LBE143:
 410              	.LBE161:
  60:DelayMulti.cpp ****         delayTarget_[i] = 1.0f;
 411              		.loc 1 60 9 is_stmt 1 view .LVU137
  60:DelayMulti.cpp ****         delayTarget_[i] = 1.0f;
 412              		.loc 1 60 23 is_stmt 0 view .LVU138
 413 00dc C5F8E440 		str	r4, [r5, #228]	@ float
 414              		.loc 1 61 9 is_stmt 1 view .LVU139
 415              		.loc 1 61 25 is_stmt 0 view .LVU140
 416 00e0 C5F8EC40 		str	r4, [r5, #236]	@ float
  48:DelayMulti.cpp ****     {
 417              		.loc 1 48 5 is_stmt 1 view .LVU141
 418              	.LVL21:
  48:DelayMulti.cpp ****     {
 419              		.loc 1 48 24 view .LVU142
 420              	.LBE167:
  62:DelayMulti.cpp ****     }
  63:DelayMulti.cpp **** 
  64:DelayMulti.cpp **** }
 421              		.loc 1 64 1 is_stmt 0 view .LVU143
 422 00e4 03B0     		add	sp, sp, #12
 423              		.cfi_def_cfa_offset 28
 424              		@ sp needed
 425 00e6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 426              	.LVL22:
 427              	.L9:
 428              		.loc 1 64 1 view .LVU144
 429 00ea 00BF     		.align	2
 430              	.L8:
 431 00ec 84786900 		.word	6912132
 432 00f0 0AD7233C 		.word	1008981770
 433 00f4 ACC52737 		.word	925353388
 434              		.cfi_endproc
 435              	.LFE3966:
 437              		.section	.text._ZN10DelayMulti9GetOutputEv,"ax",%progbits
 438              		.align	1
 439              		.p2align 2,,3
 440              		.global	_ZN10DelayMulti9GetOutputEv
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv5-d16
 446              	_ZN10DelayMulti9GetOutputEv:
 447              	.LVL23:
 448              	.LFB3968:
  65:DelayMulti.cpp **** 
  66:DelayMulti.cpp **** //Updates delay time in samples. Returns high if tempo was updated
  67:DelayMulti.cpp **** bool DelayMulti::SetDelayTime(float delaytime_pot, bool syncMode)
  68:DelayMulti.cpp **** {
  69:DelayMulti.cpp **** 
  70:DelayMulti.cpp **** float delaytime{};
  71:DelayMulti.cpp **** 
  72:DelayMulti.cpp **** if(syncMode)
  73:DelayMulti.cpp **** {
  74:DelayMulti.cpp ****     delaytime = static_cast<float> (GetDiv(delaytime_pot) * baseTempo_) * 0.048f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 15


  75:DelayMulti.cpp **** }
  76:DelayMulti.cpp **** 
  77:DelayMulti.cpp **** else
  78:DelayMulti.cpp **** {
  79:DelayMulti.cpp ****     delaytime = scale(delaytime_pot,minDelay,maxDelay,LOGARITHMIC);
  80:DelayMulti.cpp **** }
  81:DelayMulti.cpp ****     
  82:DelayMulti.cpp **** //If change in delaytime exceeds 0.1% of last value
  83:DelayMulti.cpp **** if( abs( delaytime - delayLast_)> (0.001 * delayLast_)) 
  84:DelayMulti.cpp **** {
  85:DelayMulti.cpp ****     timer_ = System::GetNow(); //reset timer
  86:DelayMulti.cpp ****     waiting_flag_ = true;
  87:DelayMulti.cpp ****     TimeChange_ = true;
  88:DelayMulti.cpp ****     delayLast_ = delaytime;
  89:DelayMulti.cpp ****     return false;
  90:DelayMulti.cpp **** }
  91:DelayMulti.cpp **** 
  92:DelayMulti.cpp **** else    //change in delaytime smaller than threshold (I.e. stopped moving)
  93:DelayMulti.cpp **** {
  94:DelayMulti.cpp ****     if(TimeChange_)
  95:DelayMulti.cpp ****     {
  96:DelayMulti.cpp **** 
  97:DelayMulti.cpp ****      //set delaytime of next head set
  98:DelayMulti.cpp ****     if(active_head_set_)    //if set 1 active
  99:DelayMulti.cpp ****     {
 100:DelayMulti.cpp ****         for (size_t j=0; j < numHeads; j++)
 101:DelayMulti.cpp ****         {
 102:DelayMulti.cpp ****             //set delaytime for set 2
 103:DelayMulti.cpp ****             delayTarget_[numHeads + j] = static_cast<float> (delaytime);
 104:DelayMulti.cpp ****         }
 105:DelayMulti.cpp ****     }
 106:DelayMulti.cpp ****     else
 107:DelayMulti.cpp ****     {
 108:DelayMulti.cpp ****         for (size_t j=0; j < numHeads; j++) //set 2 active
 109:DelayMulti.cpp ****         {
 110:DelayMulti.cpp ****             //set delay time for set 1
 111:DelayMulti.cpp ****             delayTarget_[j] = static_cast<float> (delaytime);
 112:DelayMulti.cpp ****         }
 113:DelayMulti.cpp ****     }
 114:DelayMulti.cpp **** 
 115:DelayMulti.cpp ****     TimeChange_ = false;    //reset timechange flag so it only happens once
 116:DelayMulti.cpp **** 
 117:DelayMulti.cpp ****     }
 118:DelayMulti.cpp ****     //if timer has exceeded threshold and waiting flag is on:
 119:DelayMulti.cpp ****     if ((System::GetNow() - timer_) > timethresh && waiting_flag_ == true)  
 120:DelayMulti.cpp ****     {
 121:DelayMulti.cpp ****         //flip all gates
 122:DelayMulti.cpp ****             for (size_t j=0; j < totalNumHeads; j++)
 123:DelayMulti.cpp ****             {
 124:DelayMulti.cpp ****                 XfadeGate_[j] = !XfadeGate_[j];
 125:DelayMulti.cpp ****             }
 126:DelayMulti.cpp **** 
 127:DelayMulti.cpp ****         //flip active head
 128:DelayMulti.cpp ****         active_head_set_ = !active_head_set_;
 129:DelayMulti.cpp **** 
 130:DelayMulti.cpp ****         timer_ = System::GetNow(); //reset timer
 131:DelayMulti.cpp ****         waiting_flag_ = false;  //reset wait flag
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 16


 132:DelayMulti.cpp **** 
 133:DelayMulti.cpp ****         //update freq of tempo LED oscillator
 134:DelayMulti.cpp ****         tempoled.setTempo(1.0f / (delaytime / samplerate_ ));
 135:DelayMulti.cpp ****         return true;
 136:DelayMulti.cpp ****     }
 137:DelayMulti.cpp ****     else //still waiting for (System::GetNow() - timer_) to exceed timethresh
 138:DelayMulti.cpp ****     {
 139:DelayMulti.cpp ****         return false;
 140:DelayMulti.cpp ****     }  
 141:DelayMulti.cpp **** }
 142:DelayMulti.cpp **** 
 143:DelayMulti.cpp **** }
 144:DelayMulti.cpp **** 
 145:DelayMulti.cpp **** //Updates xfades, updates delayline with delayTime[] + modulation and 
 146:DelayMulti.cpp **** //returns combined output from delay heads, and updates LEDs. 
 147:DelayMulti.cpp **** //Call at audio samplerate
 148:DelayMulti.cpp **** const float& DelayMulti::GetOutput()
 149:DelayMulti.cpp **** {
 449              		.loc 1 149 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 8
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 150:DelayMulti.cpp ****     //float output{};    
 151:DelayMulti.cpp ****     output_ = 0.0f;
 453              		.loc 1 151 5 view .LVU146
 149:DelayMulti.cpp ****     //float output{};    
 454              		.loc 1 149 1 is_stmt 0 view .LVU147
 455 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 456              		.cfi_def_cfa_offset 36
 457              		.cfi_offset 4, -36
 458              		.cfi_offset 5, -32
 459              		.cfi_offset 6, -28
 460              		.cfi_offset 7, -24
 461              		.cfi_offset 8, -20
 462              		.cfi_offset 9, -16
 463              		.cfi_offset 10, -12
 464              		.cfi_offset 11, -8
 465              		.cfi_offset 14, -4
 466              		.loc 1 151 13 view .LVU148
 467 0004 0023     		movs	r3, #0
 468              	.LBB193:
 152:DelayMulti.cpp ****     float zero{};
 153:DelayMulti.cpp ****     //for (size_t i=0; i < numDelayHeads;i++)
 154:DelayMulti.cpp ****     for (size_t i=0; i < totalNumHeads; i++)
 469              		.loc 1 154 17 view .LVU149
 470 0006 0027     		movs	r7, #0
 471              	.LBE193:
 149:DelayMulti.cpp ****     //float output{};    
 472              		.loc 1 149 1 view .LVU150
 473 0008 0446     		mov	r4, r0
 474 000a 00F1D005 		add	r5, r0, #208
 475 000e 00F1CC09 		add	r9, r0, #204
 476 0012 00F15C08 		add	r8, r0, #92
 477 0016 00F14C06 		add	r6, r0, #76
 478 001a 2DED028B 		vpush.64	{d8}
 479              		.cfi_def_cfa_offset 44
 480              		.cfi_offset 80, -44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 17


 481              		.cfi_offset 81, -40
 482 001e 83B0     		sub	sp, sp, #12
 483              		.cfi_def_cfa_offset 56
 151:DelayMulti.cpp ****     float zero{};
 484              		.loc 1 151 13 view .LVU151
 485 0020 C0F81831 		str	r3, [r0, #280]	@ float
 152:DelayMulti.cpp ****     float zero{};
 486              		.loc 1 152 5 is_stmt 1 view .LVU152
 487              		.loc 1 154 5 view .LVU153
 488              	.LVL24:
 489              	.LBB219:
 490              		.loc 1 154 24 view .LVU154
 491              	.LBE219:
 152:DelayMulti.cpp ****     float zero{};
 492              		.loc 1 152 11 is_stmt 0 view .LVU155
 493 0024 0193     		str	r3, [sp, #4]	@ float
 494              	.LVL25:
 495              	.L12:
 496              	.LBB220:
 155:DelayMulti.cpp ****     {   
 156:DelayMulti.cpp ****         delayTime_[i] = delayTarget_[i] + mod_;
 497              		.loc 1 156 9 is_stmt 1 discriminator 2 view .LVU156
 157:DelayMulti.cpp ****         del-> SetDelay( delayTime_[i],i); //set delaytime
 498              		.loc 1 157 9 is_stmt 0 discriminator 2 view .LVU157
 499 0026 2368     		ldr	r3, [r4]
 500              	.LBB194:
 501              	.LBB195:
  70:delayline_multitap.h ****         }
  71:delayline_multitap.h **** 
  72:delayline_multitap.h ****     }
  73:delayline_multitap.h **** 
  74:delayline_multitap.h ****     /** sets the delay time in samples for a given head
  75:delayline_multitap.h ****     */
  76:delayline_multitap.h ****     inline void SetDelay(size_t delay, size_t head)
  77:delayline_multitap.h ****     {
  78:delayline_multitap.h ****         if (head >= num_heads_)
  79:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
  80:delayline_multitap.h **** 
  81:delayline_multitap.h ****         delay_[head] = delay < max_size ? delay : max_size - 1;
  82:delayline_multitap.h ****         frac_[head] = 0.0f;
  83:delayline_multitap.h ****     }
  84:delayline_multitap.h **** 
  85:delayline_multitap.h ****     /** sets the delay time in samples for a given head
  86:delayline_multitap.h ****     */
  87:delayline_multitap.h ****     inline void SetDelay(const float &delay, size_t head)   //passing by reference
  88:delayline_multitap.h ****     {
  89:delayline_multitap.h ****         if (head >= num_heads_)
 502              		.loc 2 89 21 discriminator 2 view .LVU158
 503 0028 DFF8DCE0 		ldr	lr, .L16+8
 504              	.LBE195:
 505              	.LBE194:
 156:DelayMulti.cpp ****         del-> SetDelay( delayTime_[i],i); //set delaytime
 506              		.loc 1 156 41 discriminator 2 view .LVU159
 507 002c 94ED3E7A 		vldr.32	s14, [r4, #248]
 508 0030 03EB8701 		add	r1, r3, r7, lsl #2
 509 0034 D5ED067A 		vldr.32	s15, [r5, #24]
 510              	.LBB200:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 18


 511              	.LBB196:
 512              		.loc 2 89 9 discriminator 2 view .LVU160
 513 0038 53F80EE0 		ldr	lr, [r3, lr]
 514              	.LBE196:
 515              	.LBE200:
 156:DelayMulti.cpp ****         del-> SetDelay( delayTime_[i],i); //set delaytime
 516              		.loc 1 156 41 discriminator 2 view .LVU161
 517 003c 77EE877A 		vadd.f32	s15, s15, s14
 518              	.LBB201:
 519              	.LBB197:
  90:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
  91:delayline_multitap.h **** 
  92:delayline_multitap.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  93:delayline_multitap.h ****         frac_[head] = delay - static_cast<float>(int_delay);
  94:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 520              		.loc 2 94 9 discriminator 2 view .LVU162
 521 0040 2F4A     		ldr	r2, .L16
  89:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
 522              		.loc 2 89 9 discriminator 2 view .LVU163
 523 0042 BE45     		cmp	lr, r7
 524              	.LBE197:
 525              	.LBE201:
 526              	.LBB202:
 527              	.LBB203:
 528              	.LBB204:
  95:delayline_multitap.h ****                                                         : max_size - 1;  
  96:delayline_multitap.h ****     }
  97:delayline_multitap.h **** 
  98:delayline_multitap.h ****      /*   
  99:delayline_multitap.h ****     //Sets the delay time in samples for a given head. Int for base time, float for modulation
 100:delayline_multitap.h ****     
 101:delayline_multitap.h ****     inline void SetDelay(const size_t &delay, const float &mod,size_t head)   //passing by referenc
 102:delayline_multitap.h ****     {
 103:delayline_multitap.h ****         if (head >= num_heads_)
 104:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
 105:delayline_multitap.h **** 
 106:delayline_multitap.h ****         int32_t int_mod = static_cast<int32_t>(mod);
 107:delayline_multitap.h ****         int32_t int_delay = delay + int_mod;
 108:delayline_multitap.h ****         frac_[head] = mod - static_cast<float>(int_mod);
 109:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay)  < max_size ? int_delay
 110:delayline_multitap.h ****                                                         : max_size - 1;  
 111:delayline_multitap.h ****     }
 112:delayline_multitap.h **** 
 113:delayline_multitap.h ****     */
 114:delayline_multitap.h **** 
 115:delayline_multitap.h **** 
 116:delayline_multitap.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
 117:delayline_multitap.h ****     */
 118:delayline_multitap.h ****     inline void Write(const T& sample)
 119:delayline_multitap.h ****     {
 120:delayline_multitap.h ****         line_[write_ptr_] = sample;
 121:delayline_multitap.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 122:delayline_multitap.h ****     }
 123:delayline_multitap.h **** 
 124:delayline_multitap.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 125:delayline_multitap.h ****     */
 126:delayline_multitap.h ****    //final const means this function can't change any variables.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 19


 127:delayline_multitap.h ****     inline const T Read(size_t head) const 
 128:delayline_multitap.h ****     {
 129:delayline_multitap.h ****         if(head >= num_heads_)
 130:delayline_multitap.h ****         {
 131:delayline_multitap.h ****             return 0.0f; //not a valid head index
 132:delayline_multitap.h ****         }
 133:delayline_multitap.h ****         else
 134:delayline_multitap.h ****         {
 135:delayline_multitap.h ****             T  a = line_[(write_ptr_ + delay_[head]) % max_size];
 529              		.loc 2 135 54 discriminator 2 view .LVU164
 530 0044 DFF8C4B0 		ldr	fp, .L16+12
 531 0048 DFF8C4C0 		ldr	ip, .L16+16
 532              	.LBE204:
 533              	.LBE203:
 534              	.LBE202:
 156:DelayMulti.cpp ****         del-> SetDelay( delayTime_[i],i); //set delaytime
 535              		.loc 1 156 23 discriminator 2 view .LVU165
 536 004c C5ED047A 		vstr.32	s15, [r5, #16]
 537              		.loc 1 157 9 is_stmt 1 discriminator 2 view .LVU166
 538              	.LVL26:
 539              	.LBB210:
 540              	.LBI194:
  87:delayline_multitap.h ****     {
 541              		.loc 2 87 17 discriminator 2 view .LVU167
 542              	.LBB198:
  89:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
 543              		.loc 2 89 9 is_stmt 0 discriminator 2 view .LVU168
 544 0050 52D9     		bls	.L13
  92:delayline_multitap.h ****         frac_[head] = delay - static_cast<float>(int_delay);
 545              		.loc 2 92 17 view .LVU169
 546 0052 BDEEE77A 		vcvt.s32.f32	s14, s15
 547              	.LVL27:
  94:delayline_multitap.h ****                                                         : max_size - 1;  
 548              		.loc 2 94 9 view .LVU170
 549 0056 17EE100A 		vmov	r0, s14	@ int
  93:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 550              		.loc 2 93 29 view .LVU171
 551 005a B8EEC77A 		vcvt.f32.s32	s14, s14
 552              	.LVL28:
  94:delayline_multitap.h ****                                                         : max_size - 1;  
 553              		.loc 2 94 9 view .LVU172
 554 005e 8242     		cmp	r2, r0
  93:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 555              		.loc 2 93 29 view .LVU173
 556 0060 77EEC77A 		vsub.f32	s15, s15, s14
  94:delayline_multitap.h ****                                                         : max_size - 1;  
 557              		.loc 2 94 9 view .LVU174
 558 0064 28BF     		it	cs
 559 0066 0246     		movcs	r2, r0
 560 0068 4A60     		str	r2, [r1, #4]
 561              	.LBE198:
 562              	.LBE210:
 563              	.LBB211:
 564              	.LBB207:
 565              	.LBB205:
 566              		.loc 2 135 38 view .LVU175
 567 006a 1868     		ldr	r0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 20


 568              	.LVL29:
 569              		.loc 2 135 38 view .LVU176
 570              	.LBE205:
 571              	.LBE207:
 572              	.LBE211:
 573              	.LBB212:
 574              	.LBB199:
  93:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 575              		.loc 2 93 9 view .LVU177
 576 006c C1ED117A 		vstr.32	s15, [r1, #68]
 577              	.LVL30:
  93:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 578              		.loc 2 93 9 view .LVU178
 579              	.LBE199:
 580              	.LBE212:
 158:DelayMulti.cpp ****         delayOutput_[i] = del->Read(i); //read head
 581              		.loc 1 158 9 is_stmt 1 view .LVU179
 582              	.LBB213:
 583              	.LBI202:
 127:delayline_multitap.h ****     {
 584              		.loc 2 127 20 view .LVU180
 585              	.LBB208:
 586              	.LBI203:
 127:delayline_multitap.h ****     {
 587              		.loc 2 127 20 view .LVU181
 588              	.LBB206:
 589              		.loc 2 135 38 is_stmt 0 view .LVU182
 590 0070 0244     		add	r2, r2, r0
 136:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 591              		.loc 2 136 52 view .LVU183
 592 0072 02F1010E 		add	lr, r2, #1
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 593              		.loc 2 135 54 view .LVU184
 594 0076 510A     		lsrs	r1, r2, #9
 595              		.loc 2 136 57 view .LVU185
 596 0078 4FEA5E2A 		lsr	r10, lr, #9
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 597              		.loc 2 135 54 view .LVU186
 598 007c ABFB0101 		umull	r0, r1, fp, r1
 599              		.loc 2 136 57 view .LVU187
 600 0080 ABFB0AA0 		umull	r10, r0, fp, r10
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 601              		.loc 2 135 54 view .LVU188
 602 0084 0CFB1122 		mls	r2, ip, r1, r2
 603              		.loc 2 136 57 view .LVU189
 604 0088 0CFB10E1 		mls	r1, ip, r0, lr
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 605              		.loc 2 135 16 view .LVU190
 606 008c 03EB8202 		add	r2, r3, r2, lsl #2
 607              		.loc 2 136 15 view .LVU191
 608 0090 03EB8103 		add	r3, r3, r1, lsl #2
 609              	.LVL31:
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 610              		.loc 2 135 16 view .LVU192
 611 0094 92ED217A 		vldr.32	s14, [r2, #132]
 612              	.LVL32:
 137:delayline_multitap.h ****             return a + (b-a) * frac_[head];
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 21


 613              		.loc 2 137 26 view .LVU193
 614 0098 D3ED216A 		vldr.32	s13, [r3, #132]
 615 009c 76EEC76A 		vsub.f32	s13, s13, s14
 616              		.loc 2 137 42 view .LVU194
 617 00a0 A6EEA77A 		vfma.f32	s14, s13, s15
 618              	.LVL33:
 619              		.loc 2 137 42 view .LVU195
 620 00a4 F0EE477A 		vmov.f32	s15, s14
 621              	.LVL34:
 622              	.L11:
 623              		.loc 2 137 42 view .LVU196
 624              	.LBE206:
 625              	.LBE208:
 626              	.LBE213:
 159:DelayMulti.cpp ****         //update xfade
 160:DelayMulti.cpp ****         XfadePos_[i] = XfadeEnv_[i].Process(XfadeGate_[i]);
 627              		.loc 1 160 22 view .LVU197
 628 00a8 AA46     		mov	r10, r5
 629              		.loc 1 160 44 view .LVU198
 630 00aa 19F8011B 		ldrb	r1, [r9], #1	@ zero_extendqisi2
 631 00ae 4046     		mov	r0, r8
 158:DelayMulti.cpp ****         //update xfade
 632              		.loc 1 158 25 view .LVU199
 633 00b0 C5ED087A 		vstr.32	s15, [r5, #32]
 634              		.loc 1 160 9 is_stmt 1 view .LVU200
 635              		.loc 1 160 44 is_stmt 0 view .LVU201
 636 00b4 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 637              	.LVL35:
 161:DelayMulti.cpp ****         Xfade_[i].SetPos(XfadePos_[i]);
 162:DelayMulti.cpp **** 
 163:DelayMulti.cpp ****         //sum all head outputs * gains
 164:DelayMulti.cpp ****         output_ +=  Gain_[i] * Xfade_[i].Process(zero,delayOutput_[i]);
 638              		.loc 1 164 49 view .LVU202
 639 00b8 05F12002 		add	r2, r5, #32
 160:DelayMulti.cpp ****         Xfade_[i].SetPos(XfadePos_[i]);
 640              		.loc 1 160 22 view .LVU203
 641 00bc AAEC010A 		vstmia.32	r10!, {s0}
 161:DelayMulti.cpp ****         Xfade_[i].SetPos(XfadePos_[i]);
 642              		.loc 1 161 9 is_stmt 1 view .LVU204
 643              	.LVL36:
 644              	.LBB214:
 645              	.LBI214:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 646              		.loc 3 60 17 view .LVU205
 647              	.LBB215:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 648              		.loc 3 60 37 view .LVU206
 649              	.LBE215:
 650              	.LBE214:
 651              		.loc 1 164 49 is_stmt 0 view .LVU207
 652 00c0 3046     		mov	r0, r6
 653              	.LBB217:
 654              	.LBB216:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 655              		.loc 3 60 42 view .LVU208
 656 00c2 86ED000A 		vstr.32	s0, [r6]
 657              	.LVL37:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 22


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 658              		.loc 3 60 42 view .LVU209
 659              	.LBE216:
 660              	.LBE217:
 661              		.loc 1 164 9 is_stmt 1 view .LVU210
 662              		.loc 1 164 49 is_stmt 0 view .LVU211
 663 00c6 01A9     		add	r1, sp, #4
 664              		.loc 1 164 28 view .LVU212
 665 00c8 9AED018A 		vldr.32	s16, [r10, #4]
 666              		.loc 1 164 49 view .LVU213
 667 00cc FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 668              	.LVL38:
 669              		.loc 1 164 17 view .LVU214
 670 00d0 D4ED467A 		vldr.32	s15, [r4, #280]
 671 00d4 08F13808 		add	r8, r8, #56
 672 00d8 5546     		mov	r5, r10
 673 00da 0836     		adds	r6, r6, #8
 674              	.LVL39:
 675              		.loc 1 164 17 view .LVU215
 676 00dc E8EE007A 		vfma.f32	s15, s16, s0
 677 00e0 C4ED467A 		vstr.32	s15, [r4, #280]
 154:DelayMulti.cpp ****     {   
 678              		.loc 1 154 5 is_stmt 1 view .LVU216
 679              	.LVL40:
 154:DelayMulti.cpp ****     {   
 680              		.loc 1 154 24 view .LVU217
 681 00e4 37B1     		cbz	r7, .L14
 682              	.LBE220:
 165:DelayMulti.cpp ****     }
 166:DelayMulti.cpp **** 
 167:DelayMulti.cpp ****     return output_;
 683              		.loc 1 167 5 view .LVU218
 168:DelayMulti.cpp **** }
 684              		.loc 1 168 1 is_stmt 0 view .LVU219
 685 00e6 04F58C70 		add	r0, r4, #280
 686 00ea 03B0     		add	sp, sp, #12
 687              		.cfi_remember_state
 688              		.cfi_def_cfa_offset 44
 689              		@ sp needed
 690 00ec BDEC028B 		vldm	sp!, {d8}
 691              		.cfi_restore 80
 692              		.cfi_restore 81
 693              		.cfi_def_cfa_offset 36
 694 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 695              	.LVL41:
 696              	.L14:
 697              		.cfi_restore_state
 698              	.LBB221:
 699              		.loc 1 168 1 view .LVU220
 700 00f4 0127     		movs	r7, #1
 701              	.LVL42:
 702              		.loc 1 168 1 view .LVU221
 703 00f6 96E7     		b	.L12
 704              	.LVL43:
 705              	.L13:
 706              	.LBB218:
 707              	.LBB209:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 23


 131:delayline_multitap.h ****         }
 708              		.loc 2 131 20 view .LVU222
 709 00f8 DFED027A 		vldr.32	s15, .L16+4
 710 00fc D4E7     		b	.L11
 711              	.L17:
 712 00fe 00BF     		.align	2
 713              	.L16:
 714 0100 FF5D1A00 		.word	1727999
 715 0104 00000000 		.word	0
 716 0108 84786900 		.word	6912132
 717 010c 076B1300 		.word	1272583
 718 0110 005E1A00 		.word	1728000
 719              	.LBE209:
 720              	.LBE218:
 721              	.LBE221:
 722              		.cfi_endproc
 723              	.LFE3968:
 725              		.section	.text._ZN10DelayMulti14updateTempoLEDEb,"ax",%progbits
 726              		.align	1
 727              		.p2align 2,,3
 728              		.global	_ZN10DelayMulti14updateTempoLEDEb
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 732              		.fpu fpv5-d16
 734              	_ZN10DelayMulti14updateTempoLEDEb:
 735              	.LVL44:
 736              	.LFB3969:
 169:DelayMulti.cpp **** 
 170:DelayMulti.cpp **** void DelayMulti::updateTempoLED(bool syncMode)
 171:DelayMulti.cpp **** {
 737              		.loc 1 171 1 is_stmt 1 view -0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 172:DelayMulti.cpp ****     if(syncMode)
 742              		.loc 1 172 5 view .LVU224
 171:DelayMulti.cpp ****     if(syncMode)
 743              		.loc 1 171 1 is_stmt 0 view .LVU225
 744 0000 0346     		mov	r3, r0
 745              		.loc 1 172 5 view .LVU226
 746 0002 31B1     		cbz	r1, .L19
 173:DelayMulti.cpp ****     {
 174:DelayMulti.cpp ****         tempoled.update(div_,basePhase_);
 747              		.loc 1 174 9 is_stmt 1 view .LVU227
 748              		.loc 1 174 24 is_stmt 0 view .LVU228
 749 0004 90ED480A 		vldr.32	s0, [r0, #288]
 750 0008 0430     		adds	r0, r0, #4
 751              	.LVL45:
 752              		.loc 1 174 24 view .LVU229
 753 000a 93F81D11 		ldrb	r1, [r3, #285]	@ zero_extendqisi2
 754              	.LVL46:
 755              		.loc 1 174 24 view .LVU230
 756 000e FFF7FEBF 		b	_ZN8TempoLED6updateE9TempoDivsf
 757              	.LVL47:
 758              	.L19:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 24


 175:DelayMulti.cpp ****     }
 176:DelayMulti.cpp ****     else
 177:DelayMulti.cpp ****     {
 178:DelayMulti.cpp ****         tempoled.update();
 759              		.loc 1 178 9 is_stmt 1 view .LVU231
 760              		.loc 1 178 24 is_stmt 0 view .LVU232
 761 0012 0430     		adds	r0, r0, #4
 762              	.LVL48:
 763              		.loc 1 178 24 view .LVU233
 764 0014 FFF7FEBF 		b	_ZN8TempoLED6updateEv
 765              	.LVL49:
 766              		.loc 1 178 24 view .LVU234
 767              		.cfi_endproc
 768              	.LFE3969:
 770              		.section	.text._ZN10DelayMulti5WriteERKf,"ax",%progbits
 771              		.align	1
 772              		.p2align 2,,3
 773              		.global	_ZN10DelayMulti5WriteERKf
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv5-d16
 779              	_ZN10DelayMulti5WriteERKf:
 780              	.LVL50:
 781              	.LFB3970:
 179:DelayMulti.cpp ****     }
 180:DelayMulti.cpp **** }
 181:DelayMulti.cpp **** 
 182:DelayMulti.cpp **** //Writes to delayline
 183:DelayMulti.cpp **** void DelayMulti::Write(const float& in)
 184:DelayMulti.cpp **** {
 782              		.loc 1 184 1 is_stmt 1 view -0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 185:DelayMulti.cpp ****     del->Write(in);
 787              		.loc 1 185 5 is_stmt 0 view .LVU236
 788 0000 0068     		ldr	r0, [r0]
 789              	.LVL51:
 790              	.LBB222:
 791              	.LBB223:
 121:delayline_multitap.h ****     }
 792              		.loc 2 121 45 view .LVU237
 793 0002 094A     		ldr	r2, .L22
 794              	.LBE223:
 795              	.LBE222:
 796              		.loc 1 185 5 is_stmt 1 view .LVU238
 184:DelayMulti.cpp ****     del->Write(in);
 797              		.loc 1 184 1 is_stmt 0 view .LVU239
 798 0004 70B4     		push	{r4, r5, r6}
 799              		.cfi_def_cfa_offset 12
 800              		.cfi_offset 4, -12
 801              		.cfi_offset 5, -8
 802              		.cfi_offset 6, -4
 803              		.loc 1 185 15 view .LVU240
 804 0006 0E68     		ldr	r6, [r1]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 25


 805              	.LVL52:
 806              	.LBB226:
 807              	.LBI222:
 118:delayline_multitap.h ****     {
 808              		.loc 2 118 17 is_stmt 1 view .LVU241
 809              	.LBB224:
 120:delayline_multitap.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 810              		.loc 2 120 15 is_stmt 0 view .LVU242
 811 0008 0168     		ldr	r1, [r0]
 812              	.LVL53:
 121:delayline_multitap.h ****     }
 813              		.loc 2 121 57 view .LVU243
 814 000a 084D     		ldr	r5, .L22+4
 121:delayline_multitap.h ****     }
 815              		.loc 2 121 45 view .LVU244
 816 000c 0A44     		add	r2, r2, r1
 120:delayline_multitap.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 817              		.loc 2 120 9 view .LVU245
 818 000e 00EB8101 		add	r1, r0, r1, lsl #2
 121:delayline_multitap.h ****     }
 819              		.loc 2 121 57 view .LVU246
 820 0012 074C     		ldr	r4, .L22+8
 821 0014 530A     		lsrs	r3, r2, #9
 120:delayline_multitap.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 822              		.loc 2 120 9 view .LVU247
 823 0016 C1F88460 		str	r6, [r1, #132]	@ float
 121:delayline_multitap.h ****     }
 824              		.loc 2 121 57 view .LVU248
 825 001a A5FB0313 		umull	r1, r3, r5, r3
 826 001e 04FB1323 		mls	r3, r4, r3, r2
 827              	.LBE224:
 828              	.LBE226:
 186:DelayMulti.cpp **** }
 829              		.loc 1 186 1 view .LVU249
 830 0022 70BC     		pop	{r4, r5, r6}
 831              		.cfi_restore 6
 832              		.cfi_restore 5
 833              		.cfi_restore 4
 834              		.cfi_def_cfa_offset 0
 835              	.LBB227:
 836              	.LBB225:
 121:delayline_multitap.h ****     }
 837              		.loc 2 121 9 view .LVU250
 838 0024 0360     		str	r3, [r0]
 839              	.LVL54:
 121:delayline_multitap.h ****     }
 840              		.loc 2 121 9 view .LVU251
 841              	.LBE225:
 842              	.LBE227:
 843              		.loc 1 186 1 view .LVU252
 844 0026 7047     		bx	lr
 845              	.L23:
 846              		.align	2
 847              	.L22:
 848 0028 FF5D1A00 		.word	1727999
 849 002c 076B1300 		.word	1272583
 850 0030 005E1A00 		.word	1728000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 26


 851              		.cfi_endproc
 852              	.LFE3970:
 854              		.section	.text._ZN10DelayMulti12GetDelayTimeEv,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.global	_ZN10DelayMulti12GetDelayTimeEv
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 861              		.fpu fpv5-d16
 863              	_ZN10DelayMulti12GetDelayTimeEv:
 864              	.LVL55:
 865              	.LFB3971:
 187:DelayMulti.cpp **** 
 188:DelayMulti.cpp **** float DelayMulti::GetDelayTime()
 189:DelayMulti.cpp **** {
 866              		.loc 1 189 1 is_stmt 1 view -0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870              		@ link register save eliminated.
 190:DelayMulti.cpp ****     float retVal;
 871              		.loc 1 190 5 view .LVU254
 191:DelayMulti.cpp ****     if(active_head_set_)
 872              		.loc 1 191 5 view .LVU255
 873 0000 90F80031 		ldrb	r3, [r0, #256]	@ zero_extendqisi2
 874 0004 13B1     		cbz	r3, .L25
 192:DelayMulti.cpp ****         retVal = delayTarget_[0];
 875              		.loc 1 192 9 view .LVU256
 876              		.loc 1 192 16 is_stmt 0 view .LVU257
 877 0006 90ED3A0A 		vldr.32	s0, [r0, #232]
 878              	.LVL56:
 879              		.loc 1 192 16 view .LVU258
 880 000a 7047     		bx	lr
 881              	.LVL57:
 882              	.L25:
 193:DelayMulti.cpp ****     else
 194:DelayMulti.cpp ****         retVal = delayTarget_[1];
 883              		.loc 1 194 9 is_stmt 1 view .LVU259
 884              		.loc 1 194 16 is_stmt 0 view .LVU260
 885 000c 90ED3B0A 		vldr.32	s0, [r0, #236]
 886              	.LVL58:
 195:DelayMulti.cpp **** 
 196:DelayMulti.cpp ****     return retVal;
 887              		.loc 1 196 5 is_stmt 1 view .LVU261
 197:DelayMulti.cpp **** }
 888              		.loc 1 197 1 is_stmt 0 view .LVU262
 889 0010 7047     		bx	lr
 890              		.cfi_endproc
 891              	.LFE3971:
 893 0012 00BF     		.section	.text._ZN10DelayMulti6GetDivEf,"ax",%progbits
 894              		.align	1
 895              		.p2align 2,,3
 896              		.global	_ZN10DelayMulti6GetDivEf
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 27


 900              		.fpu fpv5-d16
 902              	_ZN10DelayMulti6GetDivEf:
 903              	.LVL59:
 904              	.LFB3972:
 198:DelayMulti.cpp **** 
 199:DelayMulti.cpp **** int DelayMulti::GetDiv(float potValue)
 200:DelayMulti.cpp **** {
 905              		.loc 1 200 1 is_stmt 1 view -0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 201:DelayMulti.cpp ****     int retVal{};
 910              		.loc 1 201 5 view .LVU264
 202:DelayMulti.cpp **** 
 203:DelayMulti.cpp ****     if (potValue < 0.0909f)
 911              		.loc 1 203 5 view .LVU265
 912 0000 DFED427A 		vldr.32	s15, .L73
 200:DelayMulti.cpp ****     int retVal{};
 913              		.loc 1 200 1 is_stmt 0 view .LVU266
 914 0004 0346     		mov	r3, r0
 915              		.loc 1 203 5 view .LVU267
 916 0006 B4EEE70A 		vcmpe.f32	s0, s15
 917 000a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 918 000e 04D5     		bpl	.L61
 204:DelayMulti.cpp ****     {
 205:DelayMulti.cpp ****         retVal = 4;
 919              		.loc 1 205 9 is_stmt 1 view .LVU268
 920              	.LVL60:
 206:DelayMulti.cpp ****         div_ = DIV6;
 921              		.loc 1 206 9 view .LVU269
 922              		.loc 1 206 14 is_stmt 0 view .LVU270
 923 0010 0022     		movs	r2, #0
 205:DelayMulti.cpp ****         div_ = DIV6;
 924              		.loc 1 205 16 view .LVU271
 925 0012 0420     		movs	r0, #4
 926              	.LVL61:
 927              		.loc 1 206 14 view .LVU272
 928 0014 83F81D21 		strb	r2, [r3, #285]
 929 0018 7047     		bx	lr
 930              	.LVL62:
 931              	.L61:
 207:DelayMulti.cpp ****     }
 208:DelayMulti.cpp **** 
 209:DelayMulti.cpp ****     else if (potValue < 0.1818f)
 932              		.loc 1 209 10 is_stmt 1 view .LVU273
 933 001a DFED3D7A 		vldr.32	s15, .L73+4
 934 001e B4EEE70A 		vcmpe.f32	s0, s15
 935 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 936 0026 04D5     		bpl	.L62
 210:DelayMulti.cpp ****     {
 211:DelayMulti.cpp ****        retVal = static_cast<int> (24.f/ 5.f);
 937              		.loc 1 211 8 view .LVU274
 938              	.LVL63:
 212:DelayMulti.cpp ****        div_ = DIV5;
 939              		.loc 1 212 8 view .LVU275
 940              		.loc 1 212 13 is_stmt 0 view .LVU276
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 28


 941 0028 0122     		movs	r2, #1
 211:DelayMulti.cpp ****        div_ = DIV5;
 942              		.loc 1 211 15 view .LVU277
 943 002a 0420     		movs	r0, #4
 944              	.LVL64:
 945              		.loc 1 212 13 view .LVU278
 946 002c 83F81D21 		strb	r2, [r3, #285]
 947 0030 7047     		bx	lr
 948              	.LVL65:
 949              	.L62:
 213:DelayMulti.cpp ****     }
 214:DelayMulti.cpp **** 
 215:DelayMulti.cpp ****     else if (potValue < 0.2727f)
 950              		.loc 1 215 10 is_stmt 1 view .LVU279
 951 0032 DFED387A 		vldr.32	s15, .L73+8
 952 0036 B4EEE70A 		vcmpe.f32	s0, s15
 953 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 954 003e 0BD4     		bmi	.L71
 216:DelayMulti.cpp ****     {
 217:DelayMulti.cpp ****         retVal = 6;
 218:DelayMulti.cpp ****         div_ = DIV4;
 219:DelayMulti.cpp ****     }
 220:DelayMulti.cpp **** 
 221:DelayMulti.cpp ****     else if (potValue < 0.3636f)
 955              		.loc 1 221 10 view .LVU280
 956 0040 DFED357A 		vldr.32	s15, .L73+12
 957 0044 B4EEE70A 		vcmpe.f32	s0, s15
 958 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 959 004c 09D5     		bpl	.L64
 222:DelayMulti.cpp ****     {
 223:DelayMulti.cpp ****         retVal = 8;
 960              		.loc 1 223 9 view .LVU281
 961              	.LVL66:
 224:DelayMulti.cpp ****         div_ = DIV3;
 962              		.loc 1 224 9 view .LVU282
 963              		.loc 1 224 14 is_stmt 0 view .LVU283
 964 004e 0322     		movs	r2, #3
 223:DelayMulti.cpp ****         div_ = DIV3;
 965              		.loc 1 223 16 view .LVU284
 966 0050 0820     		movs	r0, #8
 967              	.LVL67:
 968              		.loc 1 224 14 view .LVU285
 969 0052 83F81D21 		strb	r2, [r3, #285]
 970 0056 7047     		bx	lr
 971              	.LVL68:
 972              	.L71:
 217:DelayMulti.cpp ****         div_ = DIV4;
 973              		.loc 1 217 9 is_stmt 1 view .LVU286
 218:DelayMulti.cpp ****     }
 974              		.loc 1 218 9 view .LVU287
 218:DelayMulti.cpp ****     }
 975              		.loc 1 218 14 is_stmt 0 view .LVU288
 976 0058 0222     		movs	r2, #2
 217:DelayMulti.cpp ****         div_ = DIV4;
 977              		.loc 1 217 16 view .LVU289
 978 005a 0620     		movs	r0, #6
 979              	.LVL69:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 29


 218:DelayMulti.cpp ****     }
 980              		.loc 1 218 14 view .LVU290
 981 005c 83F81D21 		strb	r2, [r3, #285]
 982 0060 7047     		bx	lr
 983              	.LVL70:
 984              	.L64:
 225:DelayMulti.cpp ****     }
 226:DelayMulti.cpp **** 
 227:DelayMulti.cpp ****     else if (potValue < 0.4545f)
 985              		.loc 1 227 10 is_stmt 1 view .LVU291
 986 0062 DFED2E7A 		vldr.32	s15, .L73+16
 987 0066 B4EEE70A 		vcmpe.f32	s0, s15
 988 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 989 006e 0BD4     		bmi	.L72
 228:DelayMulti.cpp ****     {
 229:DelayMulti.cpp ****         retVal = 12;
 230:DelayMulti.cpp ****         div_ = DIV2;
 231:DelayMulti.cpp ****     }
 232:DelayMulti.cpp **** 
 233:DelayMulti.cpp ****     else if (potValue <  0.5455f)
 990              		.loc 1 233 10 view .LVU292
 991 0070 DFED2B7A 		vldr.32	s15, .L73+20
 992 0074 B4EEE70A 		vcmpe.f32	s0, s15
 993 0078 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 994 007c 09D5     		bpl	.L66
 995              	.L49:
 234:DelayMulti.cpp ****     {
 235:DelayMulti.cpp ****         retVal = 24;
 996              		.loc 1 235 9 view .LVU293
 997              	.LVL71:
 236:DelayMulti.cpp ****         div_ = UNITY;
 998              		.loc 1 236 9 view .LVU294
 999              		.loc 1 236 14 is_stmt 0 view .LVU295
 1000 007e 0522     		movs	r2, #5
 235:DelayMulti.cpp ****         div_ = UNITY;
 1001              		.loc 1 235 16 view .LVU296
 1002 0080 1820     		movs	r0, #24
 1003              	.LVL72:
 1004              		.loc 1 236 14 view .LVU297
 1005 0082 83F81D21 		strb	r2, [r3, #285]
 1006 0086 7047     		bx	lr
 1007              	.LVL73:
 1008              	.L72:
 229:DelayMulti.cpp ****         div_ = DIV2;
 1009              		.loc 1 229 9 is_stmt 1 view .LVU298
 230:DelayMulti.cpp ****     }
 1010              		.loc 1 230 9 view .LVU299
 230:DelayMulti.cpp ****     }
 1011              		.loc 1 230 14 is_stmt 0 view .LVU300
 1012 0088 0422     		movs	r2, #4
 229:DelayMulti.cpp ****         div_ = DIV2;
 1013              		.loc 1 229 16 view .LVU301
 1014 008a 0C20     		movs	r0, #12
 1015              	.LVL74:
 230:DelayMulti.cpp ****     }
 1016              		.loc 1 230 14 view .LVU302
 1017 008c 83F81D21 		strb	r2, [r3, #285]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 30


 1018 0090 7047     		bx	lr
 1019              	.LVL75:
 1020              	.L66:
 237:DelayMulti.cpp ****     }
 238:DelayMulti.cpp **** 
 239:DelayMulti.cpp ****     else if (potValue < 0.6364f)
 1021              		.loc 1 239 10 is_stmt 1 view .LVU303
 1022 0092 DFED247A 		vldr.32	s15, .L73+24
 1023 0096 B4EEE70A 		vcmpe.f32	s0, s15
 1024 009a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1025 009e 04D5     		bpl	.L67
 240:DelayMulti.cpp ****     {
 241:DelayMulti.cpp ****         retVal = 48;
 1026              		.loc 1 241 9 view .LVU304
 1027              	.LVL76:
 242:DelayMulti.cpp ****         div_ = MULT2;
 1028              		.loc 1 242 9 view .LVU305
 1029              		.loc 1 242 14 is_stmt 0 view .LVU306
 1030 00a0 0622     		movs	r2, #6
 241:DelayMulti.cpp ****         div_ = MULT2;
 1031              		.loc 1 241 16 view .LVU307
 1032 00a2 3020     		movs	r0, #48
 1033              	.LVL77:
 1034              		.loc 1 242 14 view .LVU308
 1035 00a4 83F81D21 		strb	r2, [r3, #285]
 1036 00a8 7047     		bx	lr
 1037              	.LVL78:
 1038              	.L67:
 243:DelayMulti.cpp ****     }
 244:DelayMulti.cpp **** 
 245:DelayMulti.cpp ****     else if (potValue < 0.7273f)
 1039              		.loc 1 245 10 is_stmt 1 view .LVU309
 1040 00aa DFED1F7A 		vldr.32	s15, .L73+28
 1041 00ae B4EEE70A 		vcmpe.f32	s0, s15
 1042 00b2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1043 00b6 04D5     		bpl	.L68
 246:DelayMulti.cpp ****     {
 247:DelayMulti.cpp ****         retVal = 72;
 1044              		.loc 1 247 9 view .LVU310
 1045              	.LVL79:
 248:DelayMulti.cpp ****         div_ = MULT3;
 1046              		.loc 1 248 9 view .LVU311
 1047              		.loc 1 248 14 is_stmt 0 view .LVU312
 1048 00b8 0722     		movs	r2, #7
 247:DelayMulti.cpp ****         div_ = MULT3;
 1049              		.loc 1 247 16 view .LVU313
 1050 00ba 4820     		movs	r0, #72
 1051              	.LVL80:
 1052              		.loc 1 248 14 view .LVU314
 1053 00bc 83F81D21 		strb	r2, [r3, #285]
 1054 00c0 7047     		bx	lr
 1055              	.LVL81:
 1056              	.L68:
 249:DelayMulti.cpp ****     }
 250:DelayMulti.cpp **** 
 251:DelayMulti.cpp ****     else if (potValue < 0.8182f)
 1057              		.loc 1 251 10 is_stmt 1 view .LVU315
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 31


 1058 00c2 DFED1A7A 		vldr.32	s15, .L73+32
 1059 00c6 B4EEE70A 		vcmpe.f32	s0, s15
 1060 00ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1061 00ce 04D5     		bpl	.L69
 252:DelayMulti.cpp ****     {
 253:DelayMulti.cpp ****         retVal = 96;
 1062              		.loc 1 253 9 view .LVU316
 1063              	.LVL82:
 254:DelayMulti.cpp ****         div_ = MULT4;
 1064              		.loc 1 254 9 view .LVU317
 1065              		.loc 1 254 14 is_stmt 0 view .LVU318
 1066 00d0 0822     		movs	r2, #8
 253:DelayMulti.cpp ****         div_ = MULT4;
 1067              		.loc 1 253 16 view .LVU319
 1068 00d2 6020     		movs	r0, #96
 1069              	.LVL83:
 1070              		.loc 1 254 14 view .LVU320
 1071 00d4 83F81D21 		strb	r2, [r3, #285]
 1072 00d8 7047     		bx	lr
 1073              	.LVL84:
 1074              	.L69:
 1075              	.LBB230:
 1076              	.LBI230:
 199:DelayMulti.cpp **** {
 1077              		.loc 1 199 5 is_stmt 1 view .LVU321
 1078              	.LBB231:
 255:DelayMulti.cpp ****     }
 256:DelayMulti.cpp ****     
 257:DelayMulti.cpp ****     else if (potValue < 0.9091f)
 1079              		.loc 1 257 10 view .LVU322
 1080 00da DFED157A 		vldr.32	s15, .L73+36
 1081 00de B4EEE70A 		vcmpe.f32	s0, s15
 1082 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1083 00e6 04D5     		bpl	.L70
 258:DelayMulti.cpp ****     {
 259:DelayMulti.cpp ****         retVal = 120;
 1084              		.loc 1 259 9 view .LVU323
 1085              	.LVL85:
 260:DelayMulti.cpp ****         div_ = MULT5;
 1086              		.loc 1 260 9 view .LVU324
 1087              		.loc 1 260 14 is_stmt 0 view .LVU325
 1088 00e8 0922     		movs	r2, #9
 259:DelayMulti.cpp ****         div_ = MULT5;
 1089              		.loc 1 259 16 view .LVU326
 1090 00ea 7820     		movs	r0, #120
 1091              	.LVL86:
 1092              		.loc 1 260 14 view .LVU327
 1093 00ec 83F81D21 		strb	r2, [r3, #285]
 1094 00f0 7047     		bx	lr
 1095              	.LVL87:
 1096              	.L70:
 261:DelayMulti.cpp ****     }
 262:DelayMulti.cpp **** 
 263:DelayMulti.cpp ****     else if (potValue <= 1.0f)
 1097              		.loc 1 263 10 is_stmt 1 view .LVU328
 1098 00f2 F7EE007A 		vmov.f32	s15, #1.0e+0
 1099 00f6 B4EEE70A 		vcmpe.f32	s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 32


 1100 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1101 00fe BED8     		bhi	.L49
 264:DelayMulti.cpp ****     {
 265:DelayMulti.cpp ****        retVal = 144; 
 1102              		.loc 1 265 8 view .LVU329
 1103              	.LVL88:
 266:DelayMulti.cpp ****        div_ = MULT6;
 1104              		.loc 1 266 8 view .LVU330
 1105              		.loc 1 266 13 is_stmt 0 view .LVU331
 1106 0100 0A22     		movs	r2, #10
 265:DelayMulti.cpp ****        div_ = MULT6;
 1107              		.loc 1 265 15 view .LVU332
 1108 0102 9020     		movs	r0, #144
 1109              	.LVL89:
 265:DelayMulti.cpp ****        div_ = MULT6;
 1110              		.loc 1 265 15 view .LVU333
 1111              	.LBE231:
 1112              	.LBE230:
 267:DelayMulti.cpp ****     }
 268:DelayMulti.cpp ****     else
 269:DelayMulti.cpp ****     {
 270:DelayMulti.cpp ****         retVal = 24; 
 271:DelayMulti.cpp ****        div_ = UNITY;
 272:DelayMulti.cpp ****     }
 273:DelayMulti.cpp **** 
 274:DelayMulti.cpp **** return retVal;
 1113              		.loc 1 274 1 is_stmt 1 view .LVU334
 1114              	.LBB233:
 1115              	.LBB232:
 266:DelayMulti.cpp ****     }
 1116              		.loc 1 266 13 is_stmt 0 view .LVU335
 1117 0104 83F81D21 		strb	r2, [r3, #285]
 1118              	.LBE232:
 1119              	.LBE233:
 275:DelayMulti.cpp **** }
 1120              		.loc 1 275 1 view .LVU336
 1121 0108 7047     		bx	lr
 1122              	.L74:
 1123 010a 00BF     		.align	2
 1124              	.L73:
 1125 010c C729BA3D 		.word	1035610567
 1126 0110 C7293A3E 		.word	1043999175
 1127 0114 569F8B3E 		.word	1049337686
 1128 0118 C729BA3E 		.word	1052387783
 1129 011c 39B4E83E 		.word	1055437881
 1130 0120 E3A50B3F 		.word	1057727971
 1131 0124 1CEB223F 		.word	1059253020
 1132 0128 55303A3F 		.word	1060778069
 1133 012c 8E75513F 		.word	1062303118
 1134 0130 C7BA683F 		.word	1063828167
 1135              		.cfi_endproc
 1136              	.LFE3972:
 1138              		.section	.text._ZN10DelayMulti12SetDelayTimeEfb,"ax",%progbits
 1139              		.align	1
 1140              		.p2align 2,,3
 1141              		.global	_ZN10DelayMulti12SetDelayTimeEfb
 1142              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 33


 1143              		.thumb
 1144              		.thumb_func
 1145              		.fpu fpv5-d16
 1147              	_ZN10DelayMulti12SetDelayTimeEfb:
 1148              	.LVL90:
 1149              	.LFB3967:
  68:DelayMulti.cpp **** 
 1150              		.loc 1 68 1 is_stmt 1 view -0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
  70:DelayMulti.cpp **** 
 1154              		.loc 1 70 1 view .LVU338
  72:DelayMulti.cpp **** {
 1155              		.loc 1 72 1 view .LVU339
  68:DelayMulti.cpp **** 
 1156              		.loc 1 68 1 is_stmt 0 view .LVU340
 1157 0000 38B5     		push	{r3, r4, r5, lr}
 1158              		.cfi_def_cfa_offset 16
 1159              		.cfi_offset 3, -16
 1160              		.cfi_offset 4, -12
 1161              		.cfi_offset 5, -8
 1162              		.cfi_offset 14, -4
 1163 0002 0446     		mov	r4, r0
 1164 0004 2DED028B 		vpush.64	{d8}
 1165              		.cfi_def_cfa_offset 24
 1166              		.cfi_offset 80, -24
 1167              		.cfi_offset 81, -20
  72:DelayMulti.cpp **** {
 1168              		.loc 1 72 1 view .LVU341
 1169 0008 0029     		cmp	r1, #0
 1170 000a 51D0     		beq	.L76
  74:DelayMulti.cpp **** }
 1171              		.loc 1 74 5 is_stmt 1 view .LVU342
  74:DelayMulti.cpp **** }
 1172              		.loc 1 74 43 is_stmt 0 view .LVU343
 1173 000c FFF7FEFF 		bl	_ZN10DelayMulti6GetDivEf
 1174              	.LVL91:
  74:DelayMulti.cpp **** }
 1175              		.loc 1 74 59 view .LVU344
 1176 0010 D4F81431 		ldr	r3, [r4, #276]
  74:DelayMulti.cpp **** }
 1177              		.loc 1 74 15 view .LVU345
 1178 0014 9FED420A 		vldr.32	s0, .L98+8
 1179              	.LVL92:
  74:DelayMulti.cpp **** }
 1180              		.loc 1 74 59 view .LVU346
 1181 0018 03FB00F3 		mul	r3, r3, r0
 1182 001c 08EE103A 		vmov	s16, r3	@ int
  74:DelayMulti.cpp **** }
 1183              		.loc 1 74 17 view .LVU347
 1184 0020 B8EE488A 		vcvt.f32.u32	s16, s16
  74:DelayMulti.cpp **** }
 1185              		.loc 1 74 15 view .LVU348
 1186 0024 28EE008A 		vmul.f32	s16, s16, s0
 1187              	.LVL93:
 1188              	.L77:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 34


  83:DelayMulti.cpp **** {
 1189              		.loc 1 83 1 is_stmt 1 view .LVU349
 1190              	.LBB234:
  83:DelayMulti.cpp **** {
 1191              		.loc 1 83 22 is_stmt 0 view .LVU350
 1192 0028 94ED497A 		vldr.32	s14, [r4, #292]
 1193              	.LVL94:
 1194              	.LBB235:
 1195              	.LBI235:
 1196              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/b
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 35


  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
 1197              		.loc 5 75 3 is_stmt 1 view .LVU351
 1198              	.LBB236:
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1199              		.loc 5 76 5 view .LVU352
 1200              		.loc 5 76 5 is_stmt 0 view .LVU353
 1201              	.LBE236:
 1202              	.LBE235:
  83:DelayMulti.cpp **** {
 1203              		.loc 1 83 42 view .LVU354
 1204 002c 9FED3A5B 		vldr.64	d5, .L98
  83:DelayMulti.cpp **** {
 1205              		.loc 1 83 8 view .LVU355
 1206 0030 38EE476A 		vsub.f32	s12, s16, s14
  83:DelayMulti.cpp **** {
 1207              		.loc 1 83 44 view .LVU356
 1208 0034 B7EEC77A 		vcvt.f64.f32	d7, s14
 1209              	.LBB238:
 1210              	.LBB237:
 1211              		.loc 5 76 31 view .LVU357
 1212 0038 B0EEC66A 		vabs.f32	s12, s12
 1213              	.LBE237:
 1214              	.LBE238:
  83:DelayMulti.cpp **** {
 1215              		.loc 1 83 42 view .LVU358
 1216 003c 27EE057B 		vmul.f64	d7, d7, d5
  83:DelayMulti.cpp **** {
 1217              		.loc 1 83 8 view .LVU359
 1218 0040 B7EEC66A 		vcvt.f64.f32	d6, s12
  83:DelayMulti.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 36


 1219              		.loc 1 83 1 view .LVU360
 1220 0044 B4EEC76B 		vcmpe.f64	d6, d7
 1221 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1222 004c 4EDC     		bgt	.L94
  83:DelayMulti.cpp **** {
 1223              		.loc 1 83 1 view .LVU361
 1224              	.LBE234:
  94:DelayMulti.cpp ****     {
 1225              		.loc 1 94 5 is_stmt 1 view .LVU362
 1226              	.LBB255:
 1227              	.LBB239:
 1228 004e 94F81C31 		ldrb	r3, [r4, #284]	@ zero_extendqisi2
 1229 0052 BBBB     		cbnz	r3, .L95
 1230              	.LBE239:
 1231              	.LBE255:
 119:DelayMulti.cpp ****     {
 1232              		.loc 1 119 5 view .LVU363
 1233              	.LBB256:
 1234              	.LBB246:
 119:DelayMulti.cpp ****     {
 1235              		.loc 1 119 24 is_stmt 0 view .LVU364
 1236 0054 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1237              	.LVL95:
 119:DelayMulti.cpp ****     {
 1238              		.loc 1 119 27 view .LVU365
 1239 0058 D4F8FC30 		ldr	r3, [r4, #252]
 1240 005c C01A     		subs	r0, r0, r3
 119:DelayMulti.cpp ****     {
 1241              		.loc 1 119 50 view .LVU366
 1242 005e 1928     		cmp	r0, #25
 1243 0060 3FD9     		bls	.L84
 1244              	.L97:
 119:DelayMulti.cpp ****     {
 1245              		.loc 1 119 53 discriminator 1 view .LVU367
 1246 0062 94F80851 		ldrb	r5, [r4, #264]	@ zero_extendqisi2
 119:DelayMulti.cpp ****     {
 1247              		.loc 1 119 50 discriminator 1 view .LVU368
 1248 0066 FDB1     		cbz	r5, .L80
 1249              	.LVL96:
 1250              	.LBB247:
 1251              	.LBB248:
 122:DelayMulti.cpp ****             {
 1252              		.loc 1 122 32 is_stmt 1 view .LVU369
 124:DelayMulti.cpp ****             }
 1253              		.loc 1 124 17 view .LVU370
 122:DelayMulti.cpp ****             {
 1254              		.loc 1 122 13 view .LVU371
 122:DelayMulti.cpp ****             {
 1255              		.loc 1 122 32 view .LVU372
 124:DelayMulti.cpp ****             }
 1256              		.loc 1 124 17 view .LVU373
 124:DelayMulti.cpp ****             }
 1257              		.loc 1 124 46 is_stmt 0 view .LVU374
 1258 0068 B4F8CC30 		ldrh	r3, [r4, #204]
 1259              	.LBE248:
 128:DelayMulti.cpp **** 
 1260              		.loc 1 128 28 view .LVU375
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 37


 1261 006c 94F80021 		ldrb	r2, [r4, #256]	@ zero_extendqisi2
 1262              	.LBB249:
 124:DelayMulti.cpp ****             }
 1263              		.loc 1 124 46 view .LVU376
 1264 0070 83F48073 		eor	r3, r3, #256
 1265              	.LBE249:
 128:DelayMulti.cpp **** 
 1266              		.loc 1 128 28 view .LVU377
 1267 0074 82F00102 		eor	r2, r2, #1
 1268              	.LBB250:
 124:DelayMulti.cpp ****             }
 1269              		.loc 1 124 46 view .LVU378
 1270 0078 83F00103 		eor	r3, r3, #1
 1271              	.LBE250:
 128:DelayMulti.cpp **** 
 1272              		.loc 1 128 26 view .LVU379
 1273 007c 84F80021 		strb	r2, [r4, #256]
 1274              	.LBB251:
 124:DelayMulti.cpp ****             }
 1275              		.loc 1 124 31 view .LVU380
 1276 0080 A4F8CC30 		strh	r3, [r4, #204]	@ movhi
 122:DelayMulti.cpp ****             {
 1277              		.loc 1 122 13 is_stmt 1 view .LVU381
 1278              	.LVL97:
 122:DelayMulti.cpp ****             {
 1279              		.loc 1 122 32 view .LVU382
 1280              	.LBE251:
 128:DelayMulti.cpp **** 
 1281              		.loc 1 128 9 view .LVU383
 130:DelayMulti.cpp ****         waiting_flag_ = false;  //reset wait flag
 1282              		.loc 1 130 9 view .LVU384
 130:DelayMulti.cpp ****         waiting_flag_ = false;  //reset wait flag
 1283              		.loc 1 130 32 is_stmt 0 view .LVU385
 1284 0084 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1285              	.LVL98:
 134:DelayMulti.cpp ****         return true;
 1286              		.loc 1 134 45 view .LVU386
 1287 0088 94ED437A 		vldr.32	s14, [r4, #268]
 134:DelayMulti.cpp ****         return true;
 1288              		.loc 1 134 26 view .LVU387
 1289 008c B7EE000A 		vmov.f32	s0, #1.0e+0
 131:DelayMulti.cpp **** 
 1290              		.loc 1 131 23 view .LVU388
 1291 0090 0023     		movs	r3, #0
 134:DelayMulti.cpp ****         return true;
 1292              		.loc 1 134 45 view .LVU389
 1293 0092 C8EE077A 		vdiv.f32	s15, s16, s14
 130:DelayMulti.cpp ****         waiting_flag_ = false;  //reset wait flag
 1294              		.loc 1 130 16 view .LVU390
 1295 0096 C4F8FC00 		str	r0, [r4, #252]
 131:DelayMulti.cpp **** 
 1296              		.loc 1 131 9 is_stmt 1 view .LVU391
 131:DelayMulti.cpp **** 
 1297              		.loc 1 131 23 is_stmt 0 view .LVU392
 1298 009a 84F80831 		strb	r3, [r4, #264]
 134:DelayMulti.cpp ****         return true;
 1299              		.loc 1 134 9 is_stmt 1 view .LVU393
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 38


 134:DelayMulti.cpp ****         return true;
 1300              		.loc 1 134 26 is_stmt 0 view .LVU394
 1301 009e 201D     		adds	r0, r4, #4
 1302 00a0 80EE270A 		vdiv.f32	s0, s0, s15
 1303 00a4 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 1304              	.LVL99:
 135:DelayMulti.cpp ****     }
 1305              		.loc 1 135 9 is_stmt 1 view .LVU395
 1306              	.L80:
 135:DelayMulti.cpp ****     }
 1307              		.loc 1 135 9 is_stmt 0 view .LVU396
 1308              	.LBE247:
 1309              	.LBE246:
 1310              	.LBE256:
 143:DelayMulti.cpp **** 
 1311              		.loc 1 143 1 view .LVU397
 1312 00a8 2846     		mov	r0, r5
 1313 00aa BDEC028B 		vldm	sp!, {d8}
 1314              		.cfi_remember_state
 1315              		.cfi_restore 80
 1316              		.cfi_restore 81
 1317              		.cfi_def_cfa_offset 16
 1318              	.LVL100:
 143:DelayMulti.cpp **** 
 1319              		.loc 1 143 1 view .LVU398
 1320 00ae 38BD     		pop	{r3, r4, r5, pc}
 1321              	.LVL101:
 1322              	.L76:
 1323              		.cfi_restore_state
  79:DelayMulti.cpp **** }
 1324              		.loc 1 79 5 is_stmt 1 view .LVU399
  79:DelayMulti.cpp **** }
 1325              		.loc 1 79 22 is_stmt 0 view .LVU400
 1326 00b0 0220     		movs	r0, #2
 1327              	.LVL102:
  79:DelayMulti.cpp **** }
 1328              		.loc 1 79 22 view .LVU401
 1329 00b2 9FED1C1A 		vldr.32	s2, .L98+12
 1330 00b6 DFED1C0A 		vldr.32	s1, .L98+16
 1331 00ba FFF7FEFF 		bl	_Z5scalefff9CurveType
 1332              	.LVL103:
  79:DelayMulti.cpp **** }
 1333              		.loc 1 79 22 view .LVU402
 1334 00be B0EE408A 		vmov.f32	s16, s0
 1335              	.LVL104:
  79:DelayMulti.cpp **** }
 1336              		.loc 1 79 22 view .LVU403
 1337 00c2 B1E7     		b	.L77
 1338              	.LVL105:
 1339              	.L95:
 1340              	.LBB257:
 1341              	.LBB252:
 1342              	.LBB240:
  98:DelayMulti.cpp ****     {
 1343              		.loc 1 98 5 is_stmt 1 view .LVU404
 1344              	.LBB241:
 1345 00c4 94F80031 		ldrb	r3, [r4, #256]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 39


 1346 00c8 03BB     		cbnz	r3, .L96
 1347              	.LVL106:
 1348              	.LBB242:
 108:DelayMulti.cpp ****         {
 1349              		.loc 1 108 28 discriminator 3 view .LVU405
 111:DelayMulti.cpp ****         }
 1350              		.loc 1 111 13 discriminator 3 view .LVU406
 111:DelayMulti.cpp ****         }
 1351              		.loc 1 111 29 is_stmt 0 discriminator 3 view .LVU407
 1352 00ca 84ED3A8A 		vstr.32	s16, [r4, #232]
 108:DelayMulti.cpp ****         {
 1353              		.loc 1 108 9 is_stmt 1 discriminator 3 view .LVU408
 1354              	.LVL107:
 108:DelayMulti.cpp ****         {
 1355              		.loc 1 108 28 discriminator 3 view .LVU409
 1356              	.L83:
 108:DelayMulti.cpp ****         {
 1357              		.loc 1 108 28 is_stmt 0 discriminator 3 view .LVU410
 1358              	.LBE242:
 1359              	.LBE241:
 115:DelayMulti.cpp **** 
 1360              		.loc 1 115 5 is_stmt 1 view .LVU411
 115:DelayMulti.cpp **** 
 1361              		.loc 1 115 17 is_stmt 0 view .LVU412
 1362 00ce 0023     		movs	r3, #0
 1363 00d0 84F81C31 		strb	r3, [r4, #284]
 1364              	.LBE240:
 1365              	.LBE252:
 1366              	.LBE257:
 119:DelayMulti.cpp ****     {
 1367              		.loc 1 119 5 is_stmt 1 view .LVU413
 1368              	.LBB258:
 1369              	.LBB253:
 119:DelayMulti.cpp ****     {
 1370              		.loc 1 119 24 is_stmt 0 view .LVU414
 1371 00d4 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1372              	.LVL108:
 119:DelayMulti.cpp ****     {
 1373              		.loc 1 119 27 view .LVU415
 1374 00d8 D4F8FC30 		ldr	r3, [r4, #252]
 1375 00dc C01A     		subs	r0, r0, r3
 119:DelayMulti.cpp ****     {
 1376              		.loc 1 119 50 view .LVU416
 1377 00de 1928     		cmp	r0, #25
 1378 00e0 BFD8     		bhi	.L97
 1379              	.L84:
 139:DelayMulti.cpp ****     }  
 1380              		.loc 1 139 16 view .LVU417
 1381 00e2 0025     		movs	r5, #0
 1382              	.LBE253:
 1383              	.LBE258:
 143:DelayMulti.cpp **** 
 1384              		.loc 1 143 1 view .LVU418
 1385 00e4 BDEC028B 		vldm	sp!, {d8}
 1386              		.cfi_remember_state
 1387              		.cfi_restore 80
 1388              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 40


 1389              		.cfi_def_cfa_offset 16
 1390              	.LVL109:
 143:DelayMulti.cpp **** 
 1391              		.loc 1 143 1 view .LVU419
 1392 00e8 2846     		mov	r0, r5
 1393 00ea 38BD     		pop	{r3, r4, r5, pc}
 1394              	.LVL110:
 1395              	.L94:
 1396              		.cfi_restore_state
 1397              	.LBB259:
  85:DelayMulti.cpp ****     waiting_flag_ = true;
 1398              		.loc 1 85 5 is_stmt 1 view .LVU420
  85:DelayMulti.cpp ****     waiting_flag_ = true;
 1399              		.loc 1 85 28 is_stmt 0 view .LVU421
 1400 00ec FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1401              	.LVL111:
  89:DelayMulti.cpp **** }
 1402              		.loc 1 89 12 view .LVU422
 1403 00f0 0025     		movs	r5, #0
  86:DelayMulti.cpp ****     TimeChange_ = true;
 1404              		.loc 1 86 19 view .LVU423
 1405 00f2 0123     		movs	r3, #1
  88:DelayMulti.cpp ****     return false;
 1406              		.loc 1 88 16 view .LVU424
 1407 00f4 84ED498A 		vstr.32	s16, [r4, #292]
  85:DelayMulti.cpp ****     waiting_flag_ = true;
 1408              		.loc 1 85 12 view .LVU425
 1409 00f8 C4F8FC00 		str	r0, [r4, #252]
  86:DelayMulti.cpp ****     TimeChange_ = true;
 1410              		.loc 1 86 5 is_stmt 1 view .LVU426
 1411              	.LBE259:
 143:DelayMulti.cpp **** 
 1412              		.loc 1 143 1 is_stmt 0 view .LVU427
 1413 00fc 2846     		mov	r0, r5
 1414              	.LBB260:
  86:DelayMulti.cpp ****     TimeChange_ = true;
 1415              		.loc 1 86 19 view .LVU428
 1416 00fe 84F80831 		strb	r3, [r4, #264]
  87:DelayMulti.cpp ****     delayLast_ = delaytime;
 1417              		.loc 1 87 5 is_stmt 1 view .LVU429
  87:DelayMulti.cpp ****     delayLast_ = delaytime;
 1418              		.loc 1 87 17 is_stmt 0 view .LVU430
 1419 0102 84F81C31 		strb	r3, [r4, #284]
  88:DelayMulti.cpp ****     return false;
 1420              		.loc 1 88 5 is_stmt 1 view .LVU431
  89:DelayMulti.cpp **** }
 1421              		.loc 1 89 5 view .LVU432
 1422              	.LBE260:
 143:DelayMulti.cpp **** 
 1423              		.loc 1 143 1 is_stmt 0 view .LVU433
 1424 0106 BDEC028B 		vldm	sp!, {d8}
 1425              		.cfi_remember_state
 1426              		.cfi_restore 80
 1427              		.cfi_restore 81
 1428              		.cfi_def_cfa_offset 16
 1429              	.LVL112:
 143:DelayMulti.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 41


 1430              		.loc 1 143 1 view .LVU434
 1431 010a 38BD     		pop	{r3, r4, r5, pc}
 1432              	.LVL113:
 1433              	.L96:
 1434              		.cfi_restore_state
 1435              	.LBB261:
 1436              	.LBB254:
 1437              	.LBB245:
 1438              	.LBB244:
 1439              	.LBB243:
 100:DelayMulti.cpp ****         {
 1440              		.loc 1 100 28 is_stmt 1 view .LVU435
 103:DelayMulti.cpp ****         }
 1441              		.loc 1 103 13 view .LVU436
 103:DelayMulti.cpp ****         }
 1442              		.loc 1 103 40 is_stmt 0 view .LVU437
 1443 010c 84ED3B8A 		vstr.32	s16, [r4, #236]
 100:DelayMulti.cpp ****         {
 1444              		.loc 1 100 9 is_stmt 1 view .LVU438
 1445              	.LVL114:
 100:DelayMulti.cpp ****         {
 1446              		.loc 1 100 28 view .LVU439
 1447 0110 DDE7     		b	.L83
 1448              	.L99:
 1449 0112 00BFAFF3 		.align	3
 1449      0080
 1450              	.L98:
 1451 0118 FCA9F1D2 		.word	3539053052
 1452 011c 4D62503F 		.word	1062232653
 1453 0120 A69B443D 		.word	1027906470
 1454 0124 00606A48 		.word	1214930944
 1455 0128 00007045 		.word	1164967936
 1456              	.LBE243:
 1457              	.LBE244:
 1458              	.LBE245:
 1459              	.LBE254:
 1460              	.LBE261:
 1461              		.cfi_endproc
 1462              	.LFE3967:
 1464              		.text
 1465              	.Letext0:
 1466              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 1467              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 1468              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 1469              		.file 9 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 1470              		.file 10 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1471              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 1472              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1473              		.file 13 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1474              		.file 14 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1475              		.file 15 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1476              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1477              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1478              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1479              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1480              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1481              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 42


 1482              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1483              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1484              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1485              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1486              		.file 26 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1487              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1488              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1489              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1490              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1491              		.file 31 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1492              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1493              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1494              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 1495              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 1496              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 1497              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 1498              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 1499              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1500              		.file 40 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1501              		.file 41 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1502              		.file 42 "../DaisySP/Source/Control/adenv.h"
 1503              		.file 43 "../DaisySP/Source/Utility/dsp.h"
 1504              		.file 44 "oscillator_p.h"
 1505              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 1506              		.file 46 "<built-in>"
 1507              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 1508              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 1509              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 1510              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 1511              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 1512              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1513              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 1514              		.file 54 "../libdaisy/src/daisy_core.h"
 1515              		.file 55 "../libdaisy/src/per/tim.h"
 1516              		.file 56 "../libdaisy/src/sys/system.h"
 1517              		.file 57 "../libdaisy/src/util/wav_format.h"
 1518              		.file 58 "../libdaisy/src/hid/led.h"
 1519              		.file 59 "../libdaisy/src/per/gpio.h"
 1520              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 1521              		.file 61 "../libdaisy/src/util/oled_fonts.h"
 1522              		.file 62 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 1523              		.file 63 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 1524              		.file 64 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 1525              		.file 65 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1526              		.file 66 "../libdaisy/src/util/sd_diskio.h"
 1527              		.file 67 "../libdaisy/src/sys/fatfs.h"
 1528              		.file 68 "constants.h"
 1529              		.file 69 "LEDs.h"
 1530              		.file 70 "scale.h"
 1531              		.file 71 "DelayMulti.h"
 1532              		.file 72 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 DelayMulti.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:17     .text._ZN10DelayMulti4initE12dsy_gpio_pinf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:26     .text._ZN10DelayMulti4initE12dsy_gpio_pinf:0000000000000000 _ZN10DelayMulti4initE12dsy_gpio_pinf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:431    .text._ZN10DelayMulti4initE12dsy_gpio_pinf:00000000000000ec $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:438    .text._ZN10DelayMulti9GetOutputEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:446    .text._ZN10DelayMulti9GetOutputEv:0000000000000000 _ZN10DelayMulti9GetOutputEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:714    .text._ZN10DelayMulti9GetOutputEv:0000000000000100 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:726    .text._ZN10DelayMulti14updateTempoLEDEb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:734    .text._ZN10DelayMulti14updateTempoLEDEb:0000000000000000 _ZN10DelayMulti14updateTempoLEDEb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:771    .text._ZN10DelayMulti5WriteERKf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:779    .text._ZN10DelayMulti5WriteERKf:0000000000000000 _ZN10DelayMulti5WriteERKf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:848    .text._ZN10DelayMulti5WriteERKf:0000000000000028 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:855    .text._ZN10DelayMulti12GetDelayTimeEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:863    .text._ZN10DelayMulti12GetDelayTimeEv:0000000000000000 _ZN10DelayMulti12GetDelayTimeEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:894    .text._ZN10DelayMulti6GetDivEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:902    .text._ZN10DelayMulti6GetDivEf:0000000000000000 _ZN10DelayMulti6GetDivEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:1125   .text._ZN10DelayMulti6GetDivEf:000000000000010c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:1139   .text._ZN10DelayMulti12SetDelayTimeEfb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:1147   .text._ZN10DelayMulti12SetDelayTimeEfb:0000000000000000 _ZN10DelayMulti12SetDelayTimeEfb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccKFDlnG.s:1451   .text._ZN10DelayMulti12SetDelayTimeEfb:0000000000000118 $d

UNDEFINED SYMBOLS
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN5daisy6System6GetNowEv
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp4Adsr7ProcessEb
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN8TempoLED6updateE9TempoDivsf
_ZN8TempoLED6updateEv
_ZN8TempoLED8setTempoEf
_Z5scalefff9CurveType
