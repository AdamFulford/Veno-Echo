ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"DelayMulti.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN10DelayMulti4initE12dsy_gpio_pinf,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN10DelayMulti4initE12dsy_gpio_pinf
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN10DelayMulti4initE12dsy_gpio_pinf:
  27              	.LVL0:
  28              	.LFB4455:
  29              		.file 1 "DelayMulti.cpp"
   1:DelayMulti.cpp **** // Copyright 2021 Adam Fulford
   2:DelayMulti.cpp **** // 
   3:DelayMulti.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.cpp **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.cpp **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.cpp **** // 
  10:DelayMulti.cpp **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.cpp **** // all copies or substantial portions of the Software.
  12:DelayMulti.cpp **** // 
  13:DelayMulti.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.cpp **** // THE SOFTWARE.
  20:DelayMulti.cpp **** // 
  21:DelayMulti.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.cpp **** 
  23:DelayMulti.cpp **** #include "DelayMulti.h"
  24:DelayMulti.cpp **** 
  25:DelayMulti.cpp **** //initialises delay class
  26:DelayMulti.cpp **** void DelayMulti::init(dsy_gpio_pin ledpin,float samplerate)
  27:DelayMulti.cpp **** {
  30              		.loc 1 27 1 view -0
  31              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  28:DelayMulti.cpp ****     samplerate_ = samplerate;
  34              		.loc 1 28 5 view .LVU1
  27:DelayMulti.cpp ****     samplerate_ = samplerate;
  35              		.loc 1 27 1 is_stmt 0 view .LVU2
  36 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 83B0     		sub	sp, sp, #12
  48              		.cfi_def_cfa_offset 48
  49 0006 474C     		ldr	r4, .L8
  27:DelayMulti.cpp ****     samplerate_ = samplerate;
  50              		.loc 1 27 1 view .LVU3
  51 0008 0546     		mov	r5, r0
  52 000a ADF80410 		strh	r1, [sp, #4]	@ movhi
  29:DelayMulti.cpp ****     del -> Init(totalNumHeads);
  53              		.loc 1 29 5 view .LVU4
  54 000e 0168     		ldr	r1, [r0]
  28:DelayMulti.cpp ****     samplerate_ = samplerate;
  55              		.loc 1 28 17 view .LVU5
  56 0010 80ED3F0A 		vstr.32	s0, [r0, #252]
  57              		.loc 1 29 5 is_stmt 1 view .LVU6
  58              	.LVL1:
  59              	.LBB97:
  60              	.LBI97:
  61              		.file 2 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 3


  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
  62              		.loc 2 56 10 view .LVU7
  63              	.LBB98:
  64              	.LBB99:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
  65              		.loc 2 58 29 view .LVU8
  66 0014 01F18403 		add	r3, r1, #132
  67 0018 0C44     		add	r4, r4, r1
  68              	.LVL2:
  69              	.L2:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
  70              		.loc 2 60 13 is_stmt 0 view .LVU9
  71 001a 0022     		movs	r2, #0
  72 001c 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
  73              		.loc 2 58 9 is_stmt 1 view .LVU10
  58:delayline_multitap.h ****         {
  74              		.loc 2 58 29 view .LVU11
  75 0020 A342     		cmp	r3, r4
  76 0022 FAD1     		bne	.L2
  77              	.LBE99:
  61:delayline_multitap.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 4


  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
  78              		.loc 2 63 9 is_stmt 0 view .LVU12
  79 0024 0020     		movs	r0, #0
  80              	.LVL3:
  64:delayline_multitap.h ****         num_heads_ = num_heads;
  81              		.loc 2 64 9 view .LVU13
  82 0026 3F4E     		ldr	r6, .L8
  83 0028 0227     		movs	r7, #2
  84 002a 0A46     		mov	r2, r1
  85              	.LBB100:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
  86              		.loc 2 66 21 view .LVU14
  87 002c 0346     		mov	r3, r0
  88              	.LBE100:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
  89              		.loc 2 63 9 view .LVU15
  90 002e 0860     		str	r0, [r1]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
  91              		.loc 2 64 9 view .LVU16
  92 0030 8F51     		str	r7, [r1, r6]
  93              	.LVL4:
  94              	.LBB101:
  95              		.loc 2 66 31 is_stmt 1 view .LVU17
  96              	.L3:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
  97              		.loc 2 68 13 is_stmt 0 view .LVU18
  98 0032 0026     		movs	r6, #0
  66:delayline_multitap.h ****         {
  99              		.loc 2 66 9 view .LVU19
 100 0034 0133     		adds	r3, r3, #1
 101              	.LVL5:
  69:delayline_multitap.h ****             frac_[i] = 0;
 102              		.loc 2 69 13 view .LVU20
 103 0036 0027     		movs	r7, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 104              		.loc 2 68 13 view .LVU21
 105 0038 42F8046F 		str	r6, [r2, #4]!
  66:delayline_multitap.h ****         {
 106              		.loc 2 66 31 view .LVU22
 107 003c 2168     		ldr	r1, [r4]
 108              		.loc 2 69 13 view .LVU23
 109 003e 1764     		str	r7, [r2, #64]	@ float
  66:delayline_multitap.h ****         {
 110              		.loc 2 66 9 is_stmt 1 view .LVU24
 111              	.LVL6:
  66:delayline_multitap.h ****         {
 112              		.loc 2 66 31 view .LVU25
 113 0040 9942     		cmp	r1, r3
 114 0042 F6D8     		bhi	.L3
 115              	.LVL7:
  66:delayline_multitap.h ****         {
 116              		.loc 2 66 31 is_stmt 0 view .LVU26
 117              	.LBE101:
 118              	.LBE98:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 5


 119              	.LBE97:
  30:DelayMulti.cpp ****     tempoled.init(ledpin,samplerate_/static_cast<float> (updateDiv));
 120              		.loc 1 30 5 is_stmt 1 view .LVU27
 121              		.loc 1 30 18 is_stmt 0 view .LVU28
 122 0044 F2EE0E7A 		vmov.f32	s15, #1.5e+1
 123 0048 95ED3F0A 		vldr.32	s0, [r5, #252]
 124              	.LVL8:
  31:DelayMulti.cpp ****     //dsy_tim_init(); //start timer
  32:DelayMulti.cpp ****     //dsy_tim_start();
  33:DelayMulti.cpp **** 
  34:DelayMulti.cpp ****     XfadeGate_[0] = true;
  35:DelayMulti.cpp ****     XfadeGate_[1] = false;
  36:DelayMulti.cpp **** 
  37:DelayMulti.cpp ****     Gain_[0] = 1.0f;
 125              		.loc 1 37 14 view .LVU29
 126 004c 4FF07E54 		mov	r4, #1065353216
  34:DelayMulti.cpp ****     XfadeGate_[1] = false;
 127              		.loc 1 34 19 view .LVU30
 128 0050 4FF00108 		mov	r8, #1
 129              	.LBB102:
  38:DelayMulti.cpp ****     Gain_[1] = 1.0f;
  39:DelayMulti.cpp **** 
  40:DelayMulti.cpp ****     delayLast_ = 1;
  41:DelayMulti.cpp ****     timer_ = System::GetNow();
  42:DelayMulti.cpp ****     active_head_set_ = true;    //set 1 active
  43:DelayMulti.cpp ****     waiting_flag_ = false;
  44:DelayMulti.cpp ****     mod_ = 0.0f;
  45:DelayMulti.cpp ****     //timethresh_ = 5;    //length of wait before triggering xfade
  46:DelayMulti.cpp ****     output_ = 0.0f;
  47:DelayMulti.cpp ****     TimeChange_ = false;
  48:DelayMulti.cpp ****     for(size_t i{0}; i < totalNumHeads; i++)
  49:DelayMulti.cpp ****     {
  50:DelayMulti.cpp ****         Xfade_[i].Init();
  51:DelayMulti.cpp ****         Xfade_[i].SetCurve(CROSSFADE_CPOW);
  52:DelayMulti.cpp ****         
  53:DelayMulti.cpp ****         XfadeEnv_[i].Init(samplerate_);
 130              		.loc 1 53 26 view .LVU31
 131 0054 05F15C0A 		add	r10, r5, #92
 132              	.LBE102:
  30:DelayMulti.cpp ****     //dsy_tim_init(); //start timer
 133              		.loc 1 30 18 view .LVU32
 134 0058 0199     		ldr	r1, [sp, #4]
 135 005a 80EE270A 		vdiv.f32	s0, s0, s15
 136 005e 281D     		adds	r0, r5, #4
 137              	.LBB129:
 138              	.LBB103:
 139              	.LBB104:
 140              	.LBB105:
 141              		.file 3 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 6


   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
 142              		.loc 3 45 16 view .LVU33
 143 0060 4FF07C5B 		mov	fp, #1056964608
 144              	.LBE105:
 145              	.LBE104:
 146              	.LBE103:
 147              	.LBE129:
  30:DelayMulti.cpp ****     //dsy_tim_init(); //start timer
 148              		.loc 1 30 18 view .LVU34
 149 0064 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 150              	.LVL9:
  34:DelayMulti.cpp ****     XfadeGate_[1] = false;
 151              		.loc 1 34 5 is_stmt 1 view .LVU35
  35:DelayMulti.cpp **** 
 152              		.loc 1 35 5 view .LVU36
  37:DelayMulti.cpp ****     Gain_[1] = 1.0f;
 153              		.loc 1 37 14 is_stmt 0 view .LVU37
 154 0068 C5F8C840 		str	r4, [r5, #200]	@ float
 155              	.LBB130:
 156              		.loc 1 53 26 view .LVU38
 157 006c 05F18C09 		add	r9, r5, #140
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 7


 158              	.LBE130:
  38:DelayMulti.cpp **** 
 159              		.loc 1 38 14 view .LVU39
 160 0070 C5F8CC40 		str	r4, [r5, #204]	@ float
  40:DelayMulti.cpp ****     timer_ = System::GetNow();
 161              		.loc 1 40 16 view .LVU40
 162 0074 C5F81441 		str	r4, [r5, #276]	@ float
  34:DelayMulti.cpp ****     XfadeGate_[1] = false;
 163              		.loc 1 34 19 view .LVU41
 164 0078 A5F8BC80 		strh	r8, [r5, #188]	@ movhi
  37:DelayMulti.cpp ****     Gain_[1] = 1.0f;
 165              		.loc 1 37 5 is_stmt 1 view .LVU42
  38:DelayMulti.cpp **** 
 166              		.loc 1 38 5 view .LVU43
  40:DelayMulti.cpp ****     timer_ = System::GetNow();
 167              		.loc 1 40 5 view .LVU44
  41:DelayMulti.cpp ****     active_head_set_ = true;    //set 1 active
 168              		.loc 1 41 5 view .LVU45
  41:DelayMulti.cpp ****     active_head_set_ = true;    //set 1 active
 169              		.loc 1 41 28 is_stmt 0 view .LVU46
 170 007c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 171              	.LVL10:
 172              	.LBB131:
 173              		.loc 1 53 26 view .LVU47
 174 0080 4146     		mov	r1, r8
 175 0082 95ED3F0A 		vldr.32	s0, [r5, #252]
 176              	.LBE131:
  41:DelayMulti.cpp ****     active_head_set_ = true;    //set 1 active
 177              		.loc 1 41 12 view .LVU48
 178 0086 C5F8EC00 		str	r0, [r5, #236]
  42:DelayMulti.cpp ****     waiting_flag_ = false;
 179              		.loc 1 42 5 is_stmt 1 view .LVU49
  43:DelayMulti.cpp ****     mod_ = 0.0f;
 180              		.loc 1 43 5 view .LVU50
 181              	.LBB132:
 182              		.loc 1 53 26 is_stmt 0 view .LVU51
 183 008a 5046     		mov	r0, r10
 184              	.LBE132:
  42:DelayMulti.cpp ****     waiting_flag_ = false;
 185              		.loc 1 42 22 view .LVU52
 186 008c 85F8F080 		strb	r8, [r5, #240]
 187              	.LBB133:
 188              	.LBB112:
 189              	.LBB113:
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 8


  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 190              		.loc 3 64 50 view .LVU53
 191 0090 85F85080 		strb	r8, [r5, #80]
 192              	.LBE113:
 193              	.LBE112:
 194              	.LBE133:
  43:DelayMulti.cpp ****     mod_ = 0.0f;
 195              		.loc 1 43 19 view .LVU54
 196 0094 85F8F860 		strb	r6, [r5, #248]
  44:DelayMulti.cpp ****     //timethresh_ = 5;    //length of wait before triggering xfade
 197              		.loc 1 44 5 is_stmt 1 view .LVU55
  44:DelayMulti.cpp ****     //timethresh_ = 5;    //length of wait before triggering xfade
 198              		.loc 1 44 10 is_stmt 0 view .LVU56
 199 0098 C5F8E870 		str	r7, [r5, #232]	@ float
  46:DelayMulti.cpp ****     TimeChange_ = false;
 200              		.loc 1 46 5 is_stmt 1 view .LVU57
  46:DelayMulti.cpp ****     TimeChange_ = false;
 201              		.loc 1 46 13 is_stmt 0 view .LVU58
 202 009c C5F80471 		str	r7, [r5, #260]	@ float
  47:DelayMulti.cpp ****     for(size_t i{0}; i < totalNumHeads; i++)
 203              		.loc 1 47 5 is_stmt 1 view .LVU59
  47:DelayMulti.cpp ****     for(size_t i{0}; i < totalNumHeads; i++)
 204              		.loc 1 47 17 is_stmt 0 view .LVU60
 205 00a0 85F80861 		strb	r6, [r5, #264]
  48:DelayMulti.cpp ****     {
 206              		.loc 1 48 5 is_stmt 1 view .LVU61
 207              	.LVL11:
 208              	.LBB134:
  48:DelayMulti.cpp ****     {
 209              		.loc 1 48 24 view .LVU62
  50:DelayMulti.cpp ****         Xfade_[i].SetCurve(CROSSFADE_CPOW);
 210              		.loc 1 50 9 view .LVU63
 211              	.LBB116:
 212              	.LBI103:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 213              		.loc 3 51 17 view .LVU64
 214              	.LBE116:
 215              	.LBE134:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 216              		.loc 3 51 26 view .LVU65
 217              	.LBB135:
 218              	.LBB117:
 219              	.LBB109:
 220              	.LBI104:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 221              		.loc 3 43 17 view .LVU66
 222              	.LBB106:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 223              		.loc 3 45 9 view .LVU67
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 224              		.loc 3 45 16 is_stmt 0 view .LVU68
 225 00a4 C5F84CB0 		str	fp, [r5, #76]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 9


  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 226              		.loc 3 46 9 is_stmt 1 view .LVU69
 227              	.LVL12:
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 228              		.loc 3 46 9 is_stmt 0 view .LVU70
 229              	.LBE106:
 230              	.LBE109:
 231              	.LBE117:
  51:DelayMulti.cpp ****         
 232              		.loc 1 51 9 is_stmt 1 view .LVU71
 233              	.LBB118:
 234              	.LBI112:
 235              		.loc 3 64 17 view .LVU72
 236              	.LBB114:
 237              		.loc 3 64 43 view .LVU73
 238              		.loc 3 64 43 is_stmt 0 view .LVU74
 239              	.LBE114:
 240              	.LBE118:
 241              		.loc 1 53 9 is_stmt 1 view .LVU75
 242              		.loc 1 53 26 is_stmt 0 view .LVU76
 243 00a8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEfi
 244              	.LVL13:
  54:DelayMulti.cpp ****         //Head envelope attack and decay times:
  55:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADENV_SEG_ATTACK, XFadeTime);
 245              		.loc 1 55 9 is_stmt 1 view .LVU77
 246              		.loc 1 55 29 is_stmt 0 view .LVU78
 247 00ac 4146     		mov	r1, r8
 248 00ae 5046     		mov	r0, r10
 249 00b0 9FED1D0A 		vldr.32	s0, .L8+4
 250 00b4 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 251              	.LVL14:
  56:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADENV_SEG_DECAY, 0.00001f);
 252              		.loc 1 56 9 is_stmt 1 view .LVU79
 253              		.loc 1 56 29 is_stmt 0 view .LVU80
 254 00b8 5046     		mov	r0, r10
 255 00ba 9FED1C0A 		vldr.32	s0, .L8+8
 256 00be 0221     		movs	r1, #2
 257 00c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 258              	.LVL15:
  57:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADSR_SEG_RELEASE, XFadeTime);
 259              		.loc 1 57 9 is_stmt 1 view .LVU81
 260              		.loc 1 57 29 is_stmt 0 view .LVU82
 261 00c4 5046     		mov	r0, r10
 262 00c6 9FED180A 		vldr.32	s0, .L8+4
 263 00ca 0421     		movs	r1, #4
 264 00cc FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 265              	.LVL16:
  58:DelayMulti.cpp ****         XfadeEnv_[i].SetSustainLevel(1.0);
 266              		.loc 1 58 9 is_stmt 1 view .LVU83
 267              	.LBB119:
 268              	.LBI119:
 269              		.file 4 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 10


   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  15:../DaisySP/Source/Control/adsr.h **** */
  16:../DaisySP/Source/Control/adsr.h **** enum
  17:../DaisySP/Source/Control/adsr.h **** {
  18:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE    = 0,
  19:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK  = 1,
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY   = 2,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE = 4
  22:../DaisySP/Source/Control/adsr.h **** };
  23:../DaisySP/Source/Control/adsr.h **** 
  24:../DaisySP/Source/Control/adsr.h **** 
  25:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  26:../DaisySP/Source/Control/adsr.h **** 
  27:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  30:../DaisySP/Source/Control/adsr.h ****  
  31:../DaisySP/Source/Control/adsr.h **** Remake by Steffan DIedrichsen, May 2021
  32:../DaisySP/Source/Control/adsr.h **** */
  33:../DaisySP/Source/Control/adsr.h **** class Adsr
  34:../DaisySP/Source/Control/adsr.h **** {
  35:../DaisySP/Source/Control/adsr.h ****   public:
  36:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  37:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
  38:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  39:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  40:../DaisySP/Source/Control/adsr.h ****     */
  41:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate, int blockSize = 1);
  42:../DaisySP/Source/Control/adsr.h ****     /**
  43:../DaisySP/Source/Control/adsr.h ****      \function Retrigger forces the envelope back to attack phase
  44:../DaisySP/Source/Control/adsr.h ****      \param hard  resets the history to zero, results in a click.
  45:../DaisySP/Source/Control/adsr.h ****      */
  46:../DaisySP/Source/Control/adsr.h ****     void Retrigger(bool hard);
  47:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  48:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  49:../DaisySP/Source/Control/adsr.h ****     */
  50:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     void SetTime(int seg, float time);
  55:../DaisySP/Source/Control/adsr.h ****     void SetAttackTime(float timeInS, float shape = 0.0f);
  56:../DaisySP/Source/Control/adsr.h ****     void SetDecayTime(float timeInS);
  57:../DaisySP/Source/Control/adsr.h ****     void SetReleaseTime(float timeInS);
  58:../DaisySP/Source/Control/adsr.h **** 
  59:../DaisySP/Source/Control/adsr.h ****   private:
  60:../DaisySP/Source/Control/adsr.h ****     void SetTimeConstant(float timeInS, float& time, float& coeff);
  61:../DaisySP/Source/Control/adsr.h **** 
  62:../DaisySP/Source/Control/adsr.h ****   public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 11


  63:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  64:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level, 0...1.0
  65:../DaisySP/Source/Control/adsr.h ****     */
  66:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level)
 270              		.loc 4 66 17 view .LVU84
 271              	.LBB120:
  67:../DaisySP/Source/Control/adsr.h ****     {
  68:../DaisySP/Source/Control/adsr.h ****         sus_level = (sus_level <= 0.f) ? -0.01f // forces envelope into idle
 272              		.loc 4 68 9 view .LVU85
  69:../DaisySP/Source/Control/adsr.h ****                                        : (sus_level > 1.f) ? 1.f : sus_level;
  70:../DaisySP/Source/Control/adsr.h ****         sus_level_ = sus_level;
 273              		.loc 4 70 9 view .LVU86
 274              	.LBE120:
 275              	.LBE119:
  53:DelayMulti.cpp ****         //Head envelope attack and decay times:
 276              		.loc 1 53 26 is_stmt 0 view .LVU87
 277 00d0 4146     		mov	r1, r8
 278 00d2 4846     		mov	r0, r9
 279 00d4 95ED3F0A 		vldr.32	s0, [r5, #252]
 280              	.LBB123:
 281              	.LBB110:
 282              	.LBB107:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 283              		.loc 3 45 16 view .LVU88
 284 00d8 C5F854B0 		str	fp, [r5, #84]	@ float
 285              	.LBE107:
 286              	.LBE110:
 287              	.LBE123:
 288              	.LBB124:
 289              	.LBB121:
 290              		.loc 4 70 20 view .LVU89
 291 00dc EC65     		str	r4, [r5, #92]	@ float
 292              	.LVL17:
 293              		.loc 4 70 20 view .LVU90
 294              	.LBE121:
 295              	.LBE124:
  59:DelayMulti.cpp **** 
  60:DelayMulti.cpp ****         delayTime_[i] = 1.0f;
 296              		.loc 1 60 9 is_stmt 1 view .LVU91
 297              		.loc 1 60 23 is_stmt 0 view .LVU92
 298 00de C5F8D040 		str	r4, [r5, #208]	@ float
  61:DelayMulti.cpp ****         delayTarget_[i] = 1.0f;
 299              		.loc 1 61 9 is_stmt 1 view .LVU93
 300              		.loc 1 61 25 is_stmt 0 view .LVU94
 301 00e2 C5F8D840 		str	r4, [r5, #216]	@ float
  48:DelayMulti.cpp ****     {
 302              		.loc 1 48 5 is_stmt 1 view .LVU95
 303              	.LVL18:
  48:DelayMulti.cpp ****     {
 304              		.loc 1 48 24 view .LVU96
  50:DelayMulti.cpp ****         Xfade_[i].SetCurve(CROSSFADE_CPOW);
 305              		.loc 1 50 9 view .LVU97
 306              	.LBB125:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 307              		.loc 3 51 17 view .LVU98
 308              	.LBE125:
 309              	.LBE135:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 12


  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 310              		.loc 3 51 26 view .LVU99
 311              	.LBB136:
 312              	.LBB126:
 313              	.LBB111:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 314              		.loc 3 43 17 view .LVU100
 315              	.LBB108:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 316              		.loc 3 45 9 view .LVU101
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 317              		.loc 3 46 9 view .LVU102
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 318              		.loc 3 46 9 is_stmt 0 view .LVU103
 319              	.LBE108:
 320              	.LBE111:
 321              	.LBE126:
  51:DelayMulti.cpp ****         
 322              		.loc 1 51 9 is_stmt 1 view .LVU104
 323              	.LBB127:
 324              		.loc 3 64 17 view .LVU105
 325              	.LBB115:
 326              		.loc 3 64 43 view .LVU106
 327              		.loc 3 64 50 is_stmt 0 view .LVU107
 328 00e6 85F85880 		strb	r8, [r5, #88]
 329              	.LVL19:
 330              		.loc 3 64 50 view .LVU108
 331              	.LBE115:
 332              	.LBE127:
  53:DelayMulti.cpp ****         //Head envelope attack and decay times:
 333              		.loc 1 53 9 is_stmt 1 view .LVU109
  53:DelayMulti.cpp ****         //Head envelope attack and decay times:
 334              		.loc 1 53 26 is_stmt 0 view .LVU110
 335 00ea FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEfi
 336              	.LVL20:
  55:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADENV_SEG_DECAY, 0.00001f);
 337              		.loc 1 55 9 is_stmt 1 view .LVU111
  55:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADENV_SEG_DECAY, 0.00001f);
 338              		.loc 1 55 29 is_stmt 0 view .LVU112
 339 00ee 4146     		mov	r1, r8
 340 00f0 4846     		mov	r0, r9
 341 00f2 9FED0D0A 		vldr.32	s0, .L8+4
 342 00f6 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 343              	.LVL21:
  56:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADSR_SEG_RELEASE, XFadeTime);
 344              		.loc 1 56 9 is_stmt 1 view .LVU113
  56:DelayMulti.cpp ****         XfadeEnv_[i].SetTime(ADSR_SEG_RELEASE, XFadeTime);
 345              		.loc 1 56 29 is_stmt 0 view .LVU114
 346 00fa 4846     		mov	r0, r9
 347 00fc 9FED0B0A 		vldr.32	s0, .L8+8
 348 0100 0221     		movs	r1, #2
 349 0102 FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 350              	.LVL22:
  57:DelayMulti.cpp ****         XfadeEnv_[i].SetSustainLevel(1.0);
 351              		.loc 1 57 9 is_stmt 1 view .LVU115
  57:DelayMulti.cpp ****         XfadeEnv_[i].SetSustainLevel(1.0);
 352              		.loc 1 57 29 is_stmt 0 view .LVU116
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 13


 353 0106 4846     		mov	r0, r9
 354 0108 9FED070A 		vldr.32	s0, .L8+4
 355 010c 0421     		movs	r1, #4
 356 010e FFF7FEFF 		bl	_ZN7daisysp4Adsr7SetTimeEif
 357              	.LVL23:
  58:DelayMulti.cpp **** 
 358              		.loc 1 58 9 is_stmt 1 view .LVU117
 359              	.LBB128:
  66:../DaisySP/Source/Control/adsr.h ****     {
 360              		.loc 4 66 17 view .LVU118
 361              	.LBB122:
  68:../DaisySP/Source/Control/adsr.h ****                                        : (sus_level > 1.f) ? 1.f : sus_level;
 362              		.loc 4 68 9 view .LVU119
 363              		.loc 4 70 9 view .LVU120
 364              		.loc 4 70 20 is_stmt 0 view .LVU121
 365 0112 C5F88C40 		str	r4, [r5, #140]	@ float
 366              	.LVL24:
 367              		.loc 4 70 20 view .LVU122
 368              	.LBE122:
 369              	.LBE128:
  60:DelayMulti.cpp ****         delayTarget_[i] = 1.0f;
 370              		.loc 1 60 9 is_stmt 1 view .LVU123
  60:DelayMulti.cpp ****         delayTarget_[i] = 1.0f;
 371              		.loc 1 60 23 is_stmt 0 view .LVU124
 372 0116 C5F8D440 		str	r4, [r5, #212]	@ float
 373              		.loc 1 61 9 is_stmt 1 view .LVU125
 374              		.loc 1 61 25 is_stmt 0 view .LVU126
 375 011a C5F8DC40 		str	r4, [r5, #220]	@ float
  48:DelayMulti.cpp ****     {
 376              		.loc 1 48 5 is_stmt 1 view .LVU127
 377              	.LVL25:
  48:DelayMulti.cpp ****     {
 378              		.loc 1 48 24 view .LVU128
 379              	.LBE136:
  62:DelayMulti.cpp ****     }
  63:DelayMulti.cpp **** 
  64:DelayMulti.cpp **** }
 380              		.loc 1 64 1 is_stmt 0 view .LVU129
 381 011e 03B0     		add	sp, sp, #12
 382              		.cfi_def_cfa_offset 36
 383              		@ sp needed
 384 0120 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 385              	.LVL26:
 386              	.L9:
 387              		.loc 1 64 1 view .LVU130
 388              		.align	2
 389              	.L8:
 390 0124 84786900 		.word	6912132
 391 0128 0AD7233C 		.word	1008981770
 392 012c ACC52737 		.word	925353388
 393              		.cfi_endproc
 394              	.LFE4455:
 396              		.section	.text._ZN10DelayMulti9GetOutputEv,"ax",%progbits
 397              		.align	1
 398              		.p2align 2,,3
 399              		.global	_ZN10DelayMulti9GetOutputEv
 400              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 14


 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv5-d16
 405              	_ZN10DelayMulti9GetOutputEv:
 406              	.LVL27:
 407              	.LFB4457:
  65:DelayMulti.cpp **** 
  66:DelayMulti.cpp **** //Updates delay time in samples. Returns high if tempo was updated
  67:DelayMulti.cpp **** bool DelayMulti::SetDelayTime(float delaytime_pot, bool syncMode)
  68:DelayMulti.cpp **** {
  69:DelayMulti.cpp **** 
  70:DelayMulti.cpp **** float delaytime{};
  71:DelayMulti.cpp **** 
  72:DelayMulti.cpp **** if(syncMode)
  73:DelayMulti.cpp **** {
  74:DelayMulti.cpp ****     //delaytime = GetDiv(delaytime_pot) * baseTempo_ * 0.048f;
  75:DelayMulti.cpp ****     delaytime = GetDiv(delaytime_pot) * baseTempo_;
  76:DelayMulti.cpp **** }
  77:DelayMulti.cpp **** 
  78:DelayMulti.cpp **** else
  79:DelayMulti.cpp **** {
  80:DelayMulti.cpp ****     delaytime = scale(delaytime_pot,minDelay,maxDelay,LOGARITHMIC);
  81:DelayMulti.cpp **** }
  82:DelayMulti.cpp ****     
  83:DelayMulti.cpp **** //If change in delaytime exceeds 0.1% of last value
  84:DelayMulti.cpp **** if( abs( delaytime - delayLast_)> (0.001 * delayLast_)) 
  85:DelayMulti.cpp **** {
  86:DelayMulti.cpp ****     timer_ = System::GetNow(); //reset timer
  87:DelayMulti.cpp ****     waiting_flag_ = true;
  88:DelayMulti.cpp ****     TimeChange_ = true;
  89:DelayMulti.cpp ****     delayLast_ = delaytime;
  90:DelayMulti.cpp ****     return false;
  91:DelayMulti.cpp **** }
  92:DelayMulti.cpp **** 
  93:DelayMulti.cpp **** else    //change in delaytime smaller than threshold (I.e. stopped moving)
  94:DelayMulti.cpp **** {
  95:DelayMulti.cpp ****     if(TimeChange_)
  96:DelayMulti.cpp ****     {
  97:DelayMulti.cpp **** 
  98:DelayMulti.cpp ****      //set delaytime of next head set
  99:DelayMulti.cpp ****     if(active_head_set_)    //if set 1 active
 100:DelayMulti.cpp ****     {
 101:DelayMulti.cpp ****         for (size_t j=0; j < numHeads; j++)
 102:DelayMulti.cpp ****         {
 103:DelayMulti.cpp ****             //set delaytime for set 2
 104:DelayMulti.cpp ****             delayTarget_[numHeads + j] = static_cast<float> (delaytime);
 105:DelayMulti.cpp ****         }
 106:DelayMulti.cpp ****     }
 107:DelayMulti.cpp ****     else
 108:DelayMulti.cpp ****     {
 109:DelayMulti.cpp ****         for (size_t j=0; j < numHeads; j++) //set 2 active
 110:DelayMulti.cpp ****         {
 111:DelayMulti.cpp ****             //set delay time for set 1
 112:DelayMulti.cpp ****             delayTarget_[j] = static_cast<float> (delaytime);
 113:DelayMulti.cpp ****         }
 114:DelayMulti.cpp ****     }
 115:DelayMulti.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 15


 116:DelayMulti.cpp ****     TimeChange_ = false;    //reset timechange flag so it only happens once
 117:DelayMulti.cpp **** 
 118:DelayMulti.cpp ****     }
 119:DelayMulti.cpp ****     //if timer has exceeded threshold and waiting flag is on:
 120:DelayMulti.cpp ****     if ((System::GetNow() - timer_) > timethresh && waiting_flag_ == true)  
 121:DelayMulti.cpp ****     {
 122:DelayMulti.cpp ****         //flip all gates
 123:DelayMulti.cpp ****             for (size_t j=0; j < totalNumHeads; j++)
 124:DelayMulti.cpp ****             {
 125:DelayMulti.cpp ****                 XfadeGate_[j] = !XfadeGate_[j];
 126:DelayMulti.cpp ****             }
 127:DelayMulti.cpp **** 
 128:DelayMulti.cpp ****         //flip active head
 129:DelayMulti.cpp ****         active_head_set_ = !active_head_set_;
 130:DelayMulti.cpp **** 
 131:DelayMulti.cpp ****         timer_ = System::GetNow(); //reset timer
 132:DelayMulti.cpp ****         waiting_flag_ = false;  //reset wait flag
 133:DelayMulti.cpp **** 
 134:DelayMulti.cpp ****         //update freq of tempo LED oscillator
 135:DelayMulti.cpp ****         tempoled.setTempo(1.0f / (delaytime / samplerate_ ));
 136:DelayMulti.cpp ****         return true;
 137:DelayMulti.cpp ****     }
 138:DelayMulti.cpp ****     else //still waiting for (System::GetNow() - timer_) to exceed timethresh
 139:DelayMulti.cpp ****     {
 140:DelayMulti.cpp ****         return false;
 141:DelayMulti.cpp ****     }  
 142:DelayMulti.cpp **** }
 143:DelayMulti.cpp **** 
 144:DelayMulti.cpp **** }
 145:DelayMulti.cpp **** 
 146:DelayMulti.cpp **** //Updates xfades, updates delayline with delayTime[] + modulation and 
 147:DelayMulti.cpp **** //returns combined output from delay heads, and updates LEDs. 
 148:DelayMulti.cpp **** //Call at audio samplerate
 149:DelayMulti.cpp **** const float& DelayMulti::GetOutput()
 150:DelayMulti.cpp **** {
 408              		.loc 1 150 1 is_stmt 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 8
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 151:DelayMulti.cpp ****     //float output{};    
 152:DelayMulti.cpp ****     output_ = 0.0f;
 412              		.loc 1 152 5 view .LVU132
 150:DelayMulti.cpp ****     //float output{};    
 413              		.loc 1 150 1 is_stmt 0 view .LVU133
 414 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 415              		.cfi_def_cfa_offset 36
 416              		.cfi_offset 4, -36
 417              		.cfi_offset 5, -32
 418              		.cfi_offset 6, -28
 419              		.cfi_offset 7, -24
 420              		.cfi_offset 8, -20
 421              		.cfi_offset 9, -16
 422              		.cfi_offset 10, -12
 423              		.cfi_offset 11, -8
 424              		.cfi_offset 14, -4
 425              		.loc 1 152 13 view .LVU134
 426 0004 0023     		movs	r3, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 16


 427              	.LBB162:
 153:DelayMulti.cpp ****     float zero{};
 154:DelayMulti.cpp ****     //for (size_t i=0; i < numDelayHeads;i++)
 155:DelayMulti.cpp ****     for (size_t i=0; i < totalNumHeads; i++)
 428              		.loc 1 155 17 view .LVU135
 429 0006 0027     		movs	r7, #0
 430              	.LBE162:
 150:DelayMulti.cpp ****     //float output{};    
 431              		.loc 1 150 1 view .LVU136
 432 0008 0446     		mov	r4, r0
 433 000a 00F1C005 		add	r5, r0, #192
 434 000e 00F1BC09 		add	r9, r0, #188
 435 0012 00F15C08 		add	r8, r0, #92
 436 0016 00F14C06 		add	r6, r0, #76
 437 001a 2DED028B 		vpush.64	{d8}
 438              		.cfi_def_cfa_offset 44
 439              		.cfi_offset 80, -44
 440              		.cfi_offset 81, -40
 441 001e 83B0     		sub	sp, sp, #12
 442              		.cfi_def_cfa_offset 56
 152:DelayMulti.cpp ****     float zero{};
 443              		.loc 1 152 13 view .LVU137
 444 0020 C0F80431 		str	r3, [r0, #260]	@ float
 153:DelayMulti.cpp ****     float zero{};
 445              		.loc 1 153 5 is_stmt 1 view .LVU138
 446              		.loc 1 155 5 view .LVU139
 447              	.LVL28:
 448              	.LBB188:
 449              		.loc 1 155 24 view .LVU140
 450              	.LBE188:
 153:DelayMulti.cpp ****     float zero{};
 451              		.loc 1 153 11 is_stmt 0 view .LVU141
 452 0024 0193     		str	r3, [sp, #4]	@ float
 453              	.LVL29:
 454              	.L12:
 455              	.LBB189:
 156:DelayMulti.cpp ****     {   
 157:DelayMulti.cpp ****         delayTime_[i] = delayTarget_[i] + mod_;
 456              		.loc 1 157 9 is_stmt 1 discriminator 2 view .LVU142
 158:DelayMulti.cpp ****         del-> SetDelay( delayTime_[i],i); //set delaytime
 457              		.loc 1 158 9 is_stmt 0 discriminator 2 view .LVU143
 458 0026 2368     		ldr	r3, [r4]
 459              	.LBB163:
 460              	.LBB164:
  70:delayline_multitap.h ****         }
  71:delayline_multitap.h **** 
  72:delayline_multitap.h ****     }
  73:delayline_multitap.h **** 
  74:delayline_multitap.h ****     /** sets the delay time in samples for a given head
  75:delayline_multitap.h ****     */
  76:delayline_multitap.h ****     inline void SetDelay(size_t delay, size_t head)
  77:delayline_multitap.h ****     {
  78:delayline_multitap.h ****         if (head >= num_heads_)
  79:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
  80:delayline_multitap.h **** 
  81:delayline_multitap.h ****         delay_[head] = delay < max_size ? delay : max_size - 1;
  82:delayline_multitap.h ****         frac_[head] = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 17


  83:delayline_multitap.h ****     }
  84:delayline_multitap.h **** 
  85:delayline_multitap.h ****     /** sets the delay time in samples for a given head
  86:delayline_multitap.h ****     */
  87:delayline_multitap.h ****     inline void SetDelay(const float &delay, size_t head)   //passing by reference
  88:delayline_multitap.h ****     {
  89:delayline_multitap.h ****         if (head >= num_heads_)
 461              		.loc 2 89 21 discriminator 2 view .LVU144
 462 0028 DFF8DCE0 		ldr	lr, .L16+8
 463              	.LBE164:
 464              	.LBE163:
 157:DelayMulti.cpp ****         del-> SetDelay( delayTime_[i],i); //set delaytime
 465              		.loc 1 157 41 discriminator 2 view .LVU145
 466 002c 94ED3A7A 		vldr.32	s14, [r4, #232]
 467 0030 03EB8701 		add	r1, r3, r7, lsl #2
 468 0034 D5ED067A 		vldr.32	s15, [r5, #24]
 469              	.LBB169:
 470              	.LBB165:
 471              		.loc 2 89 9 discriminator 2 view .LVU146
 472 0038 53F80EE0 		ldr	lr, [r3, lr]
 473              	.LBE165:
 474              	.LBE169:
 157:DelayMulti.cpp ****         del-> SetDelay( delayTime_[i],i); //set delaytime
 475              		.loc 1 157 41 discriminator 2 view .LVU147
 476 003c 77EE877A 		vadd.f32	s15, s15, s14
 477              	.LBB170:
 478              	.LBB166:
  90:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
  91:delayline_multitap.h **** 
  92:delayline_multitap.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  93:delayline_multitap.h ****         frac_[head] = delay - static_cast<float>(int_delay);
  94:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 479              		.loc 2 94 9 discriminator 2 view .LVU148
 480 0040 2F4A     		ldr	r2, .L16
  89:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
 481              		.loc 2 89 9 discriminator 2 view .LVU149
 482 0042 BE45     		cmp	lr, r7
 483              	.LBE166:
 484              	.LBE170:
 485              	.LBB171:
 486              	.LBB172:
 487              	.LBB173:
  95:delayline_multitap.h ****                                                         : max_size - 1;  
  96:delayline_multitap.h ****     }
  97:delayline_multitap.h **** 
  98:delayline_multitap.h ****      /*   
  99:delayline_multitap.h ****     //Sets the delay time in samples for a given head. Int for base time, float for modulation
 100:delayline_multitap.h ****     
 101:delayline_multitap.h ****     inline void SetDelay(const size_t &delay, const float &mod,size_t head)   //passing by referenc
 102:delayline_multitap.h ****     {
 103:delayline_multitap.h ****         if (head >= num_heads_)
 104:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
 105:delayline_multitap.h **** 
 106:delayline_multitap.h ****         int32_t int_mod = static_cast<int32_t>(mod);
 107:delayline_multitap.h ****         int32_t int_delay = delay + int_mod;
 108:delayline_multitap.h ****         frac_[head] = mod - static_cast<float>(int_mod);
 109:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay)  < max_size ? int_delay
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 18


 110:delayline_multitap.h ****                                                         : max_size - 1;  
 111:delayline_multitap.h ****     }
 112:delayline_multitap.h **** 
 113:delayline_multitap.h ****     */
 114:delayline_multitap.h **** 
 115:delayline_multitap.h **** 
 116:delayline_multitap.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
 117:delayline_multitap.h ****     */
 118:delayline_multitap.h ****     inline void Write(const T& sample)
 119:delayline_multitap.h ****     {
 120:delayline_multitap.h ****         line_[write_ptr_] = sample;
 121:delayline_multitap.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 122:delayline_multitap.h ****     }
 123:delayline_multitap.h **** 
 124:delayline_multitap.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 125:delayline_multitap.h ****     */
 126:delayline_multitap.h ****    //final const means this function can't change any variables.
 127:delayline_multitap.h ****     inline const T Read(size_t head) const 
 128:delayline_multitap.h ****     {
 129:delayline_multitap.h ****         if(head >= num_heads_)
 130:delayline_multitap.h ****         {
 131:delayline_multitap.h ****             return 0.0f; //not a valid head index
 132:delayline_multitap.h ****         }
 133:delayline_multitap.h ****         else
 134:delayline_multitap.h ****         {
 135:delayline_multitap.h ****             T  a = line_[(write_ptr_ + delay_[head]) % max_size];
 488              		.loc 2 135 54 discriminator 2 view .LVU150
 489 0044 DFF8C4B0 		ldr	fp, .L16+12
 490 0048 DFF8C4C0 		ldr	ip, .L16+16
 491              	.LBE173:
 492              	.LBE172:
 493              	.LBE171:
 157:DelayMulti.cpp ****         del-> SetDelay( delayTime_[i],i); //set delaytime
 494              		.loc 1 157 23 discriminator 2 view .LVU151
 495 004c C5ED047A 		vstr.32	s15, [r5, #16]
 496              		.loc 1 158 9 is_stmt 1 discriminator 2 view .LVU152
 497              	.LVL30:
 498              	.LBB179:
 499              	.LBI163:
  87:delayline_multitap.h ****     {
 500              		.loc 2 87 17 discriminator 2 view .LVU153
 501              	.LBB167:
  89:delayline_multitap.h ****             return; //return without setting delay time as not valid head index
 502              		.loc 2 89 9 is_stmt 0 discriminator 2 view .LVU154
 503 0050 52D9     		bls	.L13
  92:delayline_multitap.h ****         frac_[head] = delay - static_cast<float>(int_delay);
 504              		.loc 2 92 17 view .LVU155
 505 0052 BDEEE77A 		vcvt.s32.f32	s14, s15
 506              	.LVL31:
  94:delayline_multitap.h ****                                                         : max_size - 1;  
 507              		.loc 2 94 9 view .LVU156
 508 0056 17EE100A 		vmov	r0, s14	@ int
  93:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 509              		.loc 2 93 29 view .LVU157
 510 005a B8EEC77A 		vcvt.f32.s32	s14, s14
 511              	.LVL32:
  94:delayline_multitap.h ****                                                         : max_size - 1;  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 19


 512              		.loc 2 94 9 view .LVU158
 513 005e 8242     		cmp	r2, r0
  93:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 514              		.loc 2 93 29 view .LVU159
 515 0060 77EEC77A 		vsub.f32	s15, s15, s14
  94:delayline_multitap.h ****                                                         : max_size - 1;  
 516              		.loc 2 94 9 view .LVU160
 517 0064 28BF     		it	cs
 518 0066 0246     		movcs	r2, r0
 519 0068 4A60     		str	r2, [r1, #4]
 520              	.LBE167:
 521              	.LBE179:
 522              	.LBB180:
 523              	.LBB176:
 524              	.LBB174:
 525              		.loc 2 135 38 view .LVU161
 526 006a 1868     		ldr	r0, [r3]
 527              	.LVL33:
 528              		.loc 2 135 38 view .LVU162
 529              	.LBE174:
 530              	.LBE176:
 531              	.LBE180:
 532              	.LBB181:
 533              	.LBB168:
  93:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 534              		.loc 2 93 9 view .LVU163
 535 006c C1ED117A 		vstr.32	s15, [r1, #68]
 536              	.LVL34:
  93:delayline_multitap.h ****         delay_[head] = static_cast<size_t>(int_delay) < max_size ? int_delay
 537              		.loc 2 93 9 view .LVU164
 538              	.LBE168:
 539              	.LBE181:
 159:DelayMulti.cpp ****         delayOutput_[i] = del->Read(i); //read head
 540              		.loc 1 159 9 is_stmt 1 view .LVU165
 541              	.LBB182:
 542              	.LBI171:
 127:delayline_multitap.h ****     {
 543              		.loc 2 127 20 view .LVU166
 544              	.LBB177:
 545              	.LBI172:
 127:delayline_multitap.h ****     {
 546              		.loc 2 127 20 view .LVU167
 547              	.LBB175:
 548              		.loc 2 135 38 is_stmt 0 view .LVU168
 549 0070 0244     		add	r2, r2, r0
 136:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 550              		.loc 2 136 52 view .LVU169
 551 0072 02F1010E 		add	lr, r2, #1
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 552              		.loc 2 135 54 view .LVU170
 553 0076 510A     		lsrs	r1, r2, #9
 554              		.loc 2 136 57 view .LVU171
 555 0078 4FEA5E2A 		lsr	r10, lr, #9
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 556              		.loc 2 135 54 view .LVU172
 557 007c ABFB0101 		umull	r0, r1, fp, r1
 558              		.loc 2 136 57 view .LVU173
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 20


 559 0080 ABFB0AA0 		umull	r10, r0, fp, r10
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 560              		.loc 2 135 54 view .LVU174
 561 0084 0CFB1122 		mls	r2, ip, r1, r2
 562              		.loc 2 136 57 view .LVU175
 563 0088 0CFB10E1 		mls	r1, ip, r0, lr
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 564              		.loc 2 135 16 view .LVU176
 565 008c 03EB8202 		add	r2, r3, r2, lsl #2
 566              		.loc 2 136 15 view .LVU177
 567 0090 03EB8103 		add	r3, r3, r1, lsl #2
 568              	.LVL35:
 135:delayline_multitap.h ****             T b = line_[(write_ptr_ + delay_[head] + 1) % max_size];
 569              		.loc 2 135 16 view .LVU178
 570 0094 92ED217A 		vldr.32	s14, [r2, #132]
 571              	.LVL36:
 137:delayline_multitap.h ****             return a + (b-a) * frac_[head];
 572              		.loc 2 137 26 view .LVU179
 573 0098 D3ED216A 		vldr.32	s13, [r3, #132]
 574 009c 76EEC76A 		vsub.f32	s13, s13, s14
 575              		.loc 2 137 42 view .LVU180
 576 00a0 A6EEA77A 		vfma.f32	s14, s13, s15
 577              	.LVL37:
 578              		.loc 2 137 42 view .LVU181
 579 00a4 F0EE477A 		vmov.f32	s15, s14
 580              	.LVL38:
 581              	.L11:
 582              		.loc 2 137 42 view .LVU182
 583              	.LBE175:
 584              	.LBE177:
 585              	.LBE182:
 160:DelayMulti.cpp ****         //update xfade
 161:DelayMulti.cpp ****         XfadePos_[i] = XfadeEnv_[i].Process(XfadeGate_[i]);
 586              		.loc 1 161 22 view .LVU183
 587 00a8 AA46     		mov	r10, r5
 588              		.loc 1 161 44 view .LVU184
 589 00aa 19F8011B 		ldrb	r1, [r9], #1	@ zero_extendqisi2
 590 00ae 4046     		mov	r0, r8
 159:DelayMulti.cpp ****         //update xfade
 591              		.loc 1 159 25 view .LVU185
 592 00b0 C5ED087A 		vstr.32	s15, [r5, #32]
 593              		.loc 1 161 9 is_stmt 1 view .LVU186
 594              		.loc 1 161 44 is_stmt 0 view .LVU187
 595 00b4 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 596              	.LVL39:
 162:DelayMulti.cpp ****         Xfade_[i].SetPos(XfadePos_[i]);
 163:DelayMulti.cpp **** 
 164:DelayMulti.cpp ****         //sum all head outputs * gains
 165:DelayMulti.cpp ****         output_ +=  Gain_[i] * Xfade_[i].Process(zero,delayOutput_[i]);
 597              		.loc 1 165 49 view .LVU188
 598 00b8 05F12002 		add	r2, r5, #32
 161:DelayMulti.cpp ****         Xfade_[i].SetPos(XfadePos_[i]);
 599              		.loc 1 161 22 view .LVU189
 600 00bc AAEC010A 		vstmia.32	r10!, {s0}
 162:DelayMulti.cpp ****         Xfade_[i].SetPos(XfadePos_[i]);
 601              		.loc 1 162 9 is_stmt 1 view .LVU190
 602              	.LVL40:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 21


 603              	.LBB183:
 604              	.LBI183:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 605              		.loc 3 60 17 view .LVU191
 606              	.LBB184:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 607              		.loc 3 60 37 view .LVU192
 608              	.LBE184:
 609              	.LBE183:
 610              		.loc 1 165 49 is_stmt 0 view .LVU193
 611 00c0 3046     		mov	r0, r6
 612              	.LBB186:
 613              	.LBB185:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 614              		.loc 3 60 42 view .LVU194
 615 00c2 86ED000A 		vstr.32	s0, [r6]
 616              	.LVL41:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 617              		.loc 3 60 42 view .LVU195
 618              	.LBE185:
 619              	.LBE186:
 620              		.loc 1 165 9 is_stmt 1 view .LVU196
 621              		.loc 1 165 49 is_stmt 0 view .LVU197
 622 00c6 01A9     		add	r1, sp, #4
 623              		.loc 1 165 28 view .LVU198
 624 00c8 9AED018A 		vldr.32	s16, [r10, #4]
 625              		.loc 1 165 49 view .LVU199
 626 00cc FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 627              	.LVL42:
 628              		.loc 1 165 17 view .LVU200
 629 00d0 D4ED417A 		vldr.32	s15, [r4, #260]
 630 00d4 08F13008 		add	r8, r8, #48
 631 00d8 5546     		mov	r5, r10
 632 00da 0836     		adds	r6, r6, #8
 633              	.LVL43:
 634              		.loc 1 165 17 view .LVU201
 635 00dc E8EE007A 		vfma.f32	s15, s16, s0
 636 00e0 C4ED417A 		vstr.32	s15, [r4, #260]
 155:DelayMulti.cpp ****     {   
 637              		.loc 1 155 5 is_stmt 1 view .LVU202
 638              	.LVL44:
 155:DelayMulti.cpp ****     {   
 639              		.loc 1 155 24 view .LVU203
 640 00e4 37B1     		cbz	r7, .L14
 641              	.LBE189:
 166:DelayMulti.cpp ****     }
 167:DelayMulti.cpp **** 
 168:DelayMulti.cpp ****     return output_;
 642              		.loc 1 168 5 view .LVU204
 169:DelayMulti.cpp **** }
 643              		.loc 1 169 1 is_stmt 0 view .LVU205
 644 00e6 04F58270 		add	r0, r4, #260
 645 00ea 03B0     		add	sp, sp, #12
 646              		.cfi_remember_state
 647              		.cfi_def_cfa_offset 44
 648              		@ sp needed
 649 00ec BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 22


 650              		.cfi_restore 80
 651              		.cfi_restore 81
 652              		.cfi_def_cfa_offset 36
 653 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 654              	.LVL45:
 655              	.L14:
 656              		.cfi_restore_state
 657              	.LBB190:
 658              		.loc 1 169 1 view .LVU206
 659 00f4 0127     		movs	r7, #1
 660              	.LVL46:
 661              		.loc 1 169 1 view .LVU207
 662 00f6 96E7     		b	.L12
 663              	.LVL47:
 664              	.L13:
 665              	.LBB187:
 666              	.LBB178:
 131:delayline_multitap.h ****         }
 667              		.loc 2 131 20 view .LVU208
 668 00f8 DFED027A 		vldr.32	s15, .L16+4
 669 00fc D4E7     		b	.L11
 670              	.L17:
 671 00fe 00BF     		.align	2
 672              	.L16:
 673 0100 FF5D1A00 		.word	1727999
 674 0104 00000000 		.word	0
 675 0108 84786900 		.word	6912132
 676 010c 076B1300 		.word	1272583
 677 0110 005E1A00 		.word	1728000
 678              	.LBE178:
 679              	.LBE187:
 680              	.LBE190:
 681              		.cfi_endproc
 682              	.LFE4457:
 684              		.section	.text._ZN10DelayMulti14updateTempoLEDEb,"ax",%progbits
 685              		.align	1
 686              		.p2align 2,,3
 687              		.global	_ZN10DelayMulti14updateTempoLEDEb
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv5-d16
 693              	_ZN10DelayMulti14updateTempoLEDEb:
 694              	.LVL48:
 695              	.LFB4458:
 170:DelayMulti.cpp **** 
 171:DelayMulti.cpp **** void DelayMulti::updateTempoLED(bool syncMode)
 172:DelayMulti.cpp **** {
 696              		.loc 1 172 1 is_stmt 1 view -0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 173:DelayMulti.cpp ****     if(syncMode)
 701              		.loc 1 173 5 view .LVU210
 172:DelayMulti.cpp ****     if(syncMode)
 702              		.loc 1 172 1 is_stmt 0 view .LVU211
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 23


 703 0000 0346     		mov	r3, r0
 704              		.loc 1 173 5 view .LVU212
 705 0002 31B1     		cbz	r1, .L19
 174:DelayMulti.cpp ****     {
 175:DelayMulti.cpp ****         tempoled.update(div_,basePhase_);
 706              		.loc 1 175 9 is_stmt 1 view .LVU213
 707              		.loc 1 175 24 is_stmt 0 view .LVU214
 708 0004 90ED430A 		vldr.32	s0, [r0, #268]
 709 0008 0430     		adds	r0, r0, #4
 710              	.LVL49:
 711              		.loc 1 175 24 view .LVU215
 712 000a 93F80911 		ldrb	r1, [r3, #265]	@ zero_extendqisi2
 713              	.LVL50:
 714              		.loc 1 175 24 view .LVU216
 715 000e FFF7FEBF 		b	_ZN8TempoLED6updateE9TempoDivsf
 716              	.LVL51:
 717              	.L19:
 176:DelayMulti.cpp ****     }
 177:DelayMulti.cpp ****     else
 178:DelayMulti.cpp ****     {
 179:DelayMulti.cpp ****         tempoled.update();
 718              		.loc 1 179 9 is_stmt 1 view .LVU217
 719              		.loc 1 179 24 is_stmt 0 view .LVU218
 720 0012 0430     		adds	r0, r0, #4
 721              	.LVL52:
 722              		.loc 1 179 24 view .LVU219
 723 0014 FFF7FEBF 		b	_ZN8TempoLED6updateEv
 724              	.LVL53:
 725              		.loc 1 179 24 view .LVU220
 726              		.cfi_endproc
 727              	.LFE4458:
 729              		.section	.text._ZN10DelayMulti5WriteERKf,"ax",%progbits
 730              		.align	1
 731              		.p2align 2,,3
 732              		.global	_ZN10DelayMulti5WriteERKf
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu fpv5-d16
 738              	_ZN10DelayMulti5WriteERKf:
 739              	.LVL54:
 740              	.LFB4459:
 180:DelayMulti.cpp ****     }
 181:DelayMulti.cpp **** }
 182:DelayMulti.cpp **** 
 183:DelayMulti.cpp **** //Writes to delayline
 184:DelayMulti.cpp **** void DelayMulti::Write(const float& in)
 185:DelayMulti.cpp **** {
 741              		.loc 1 185 1 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 186:DelayMulti.cpp ****     del->Write(in);
 746              		.loc 1 186 5 is_stmt 0 view .LVU222
 747 0000 0068     		ldr	r0, [r0]
 748              	.LVL55:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 24


 749              	.LBB191:
 750              	.LBB192:
 121:delayline_multitap.h ****     }
 751              		.loc 2 121 45 view .LVU223
 752 0002 094A     		ldr	r2, .L22
 753              	.LBE192:
 754              	.LBE191:
 755              		.loc 1 186 5 is_stmt 1 view .LVU224
 185:DelayMulti.cpp ****     del->Write(in);
 756              		.loc 1 185 1 is_stmt 0 view .LVU225
 757 0004 70B4     		push	{r4, r5, r6}
 758              		.cfi_def_cfa_offset 12
 759              		.cfi_offset 4, -12
 760              		.cfi_offset 5, -8
 761              		.cfi_offset 6, -4
 762              		.loc 1 186 15 view .LVU226
 763 0006 0E68     		ldr	r6, [r1]	@ float
 764              	.LVL56:
 765              	.LBB195:
 766              	.LBI191:
 118:delayline_multitap.h ****     {
 767              		.loc 2 118 17 is_stmt 1 view .LVU227
 768              	.LBB193:
 120:delayline_multitap.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 769              		.loc 2 120 15 is_stmt 0 view .LVU228
 770 0008 0168     		ldr	r1, [r0]
 771              	.LVL57:
 121:delayline_multitap.h ****     }
 772              		.loc 2 121 57 view .LVU229
 773 000a 084D     		ldr	r5, .L22+4
 121:delayline_multitap.h ****     }
 774              		.loc 2 121 45 view .LVU230
 775 000c 0A44     		add	r2, r2, r1
 120:delayline_multitap.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 776              		.loc 2 120 9 view .LVU231
 777 000e 00EB8101 		add	r1, r0, r1, lsl #2
 121:delayline_multitap.h ****     }
 778              		.loc 2 121 57 view .LVU232
 779 0012 074C     		ldr	r4, .L22+8
 780 0014 530A     		lsrs	r3, r2, #9
 120:delayline_multitap.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 781              		.loc 2 120 9 view .LVU233
 782 0016 C1F88460 		str	r6, [r1, #132]	@ float
 121:delayline_multitap.h ****     }
 783              		.loc 2 121 57 view .LVU234
 784 001a A5FB0313 		umull	r1, r3, r5, r3
 785 001e 04FB1323 		mls	r3, r4, r3, r2
 786              	.LBE193:
 787              	.LBE195:
 187:DelayMulti.cpp **** }
 788              		.loc 1 187 1 view .LVU235
 789 0022 70BC     		pop	{r4, r5, r6}
 790              		.cfi_restore 6
 791              		.cfi_restore 5
 792              		.cfi_restore 4
 793              		.cfi_def_cfa_offset 0
 794              	.LBB196:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 25


 795              	.LBB194:
 121:delayline_multitap.h ****     }
 796              		.loc 2 121 9 view .LVU236
 797 0024 0360     		str	r3, [r0]
 798              	.LVL58:
 121:delayline_multitap.h ****     }
 799              		.loc 2 121 9 view .LVU237
 800              	.LBE194:
 801              	.LBE196:
 802              		.loc 1 187 1 view .LVU238
 803 0026 7047     		bx	lr
 804              	.L23:
 805              		.align	2
 806              	.L22:
 807 0028 FF5D1A00 		.word	1727999
 808 002c 076B1300 		.word	1272583
 809 0030 005E1A00 		.word	1728000
 810              		.cfi_endproc
 811              	.LFE4459:
 813              		.section	.text._ZN10DelayMulti12GetDelayTimeEv,"ax",%progbits
 814              		.align	1
 815              		.p2align 2,,3
 816              		.global	_ZN10DelayMulti12GetDelayTimeEv
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv5-d16
 822              	_ZN10DelayMulti12GetDelayTimeEv:
 823              	.LVL59:
 824              	.LFB4460:
 188:DelayMulti.cpp **** 
 189:DelayMulti.cpp **** float DelayMulti::GetDelayTime()
 190:DelayMulti.cpp **** {
 825              		.loc 1 190 1 is_stmt 1 view -0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 191:DelayMulti.cpp ****     float retVal;
 830              		.loc 1 191 5 view .LVU240
 192:DelayMulti.cpp ****     if(active_head_set_)
 831              		.loc 1 192 5 view .LVU241
 832 0000 90F8F030 		ldrb	r3, [r0, #240]	@ zero_extendqisi2
 833 0004 13B1     		cbz	r3, .L25
 193:DelayMulti.cpp ****         retVal = delayTarget_[0];
 834              		.loc 1 193 9 view .LVU242
 835              		.loc 1 193 16 is_stmt 0 view .LVU243
 836 0006 90ED360A 		vldr.32	s0, [r0, #216]
 837              	.LVL60:
 838              		.loc 1 193 16 view .LVU244
 839 000a 7047     		bx	lr
 840              	.LVL61:
 841              	.L25:
 194:DelayMulti.cpp ****     else
 195:DelayMulti.cpp ****         retVal = delayTarget_[1];
 842              		.loc 1 195 9 is_stmt 1 view .LVU245
 843              		.loc 1 195 16 is_stmt 0 view .LVU246
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 26


 844 000c 90ED370A 		vldr.32	s0, [r0, #220]
 845              	.LVL62:
 196:DelayMulti.cpp **** 
 197:DelayMulti.cpp ****     return retVal;
 846              		.loc 1 197 5 is_stmt 1 view .LVU247
 198:DelayMulti.cpp **** }
 847              		.loc 1 198 1 is_stmt 0 view .LVU248
 848 0010 7047     		bx	lr
 849              		.cfi_endproc
 850              	.LFE4460:
 852 0012 00BF     		.section	.text._ZN10DelayMulti6GetDivEf,"ax",%progbits
 853              		.align	1
 854              		.p2align 2,,3
 855              		.global	_ZN10DelayMulti6GetDivEf
 856              		.syntax unified
 857              		.thumb
 858              		.thumb_func
 859              		.fpu fpv5-d16
 861              	_ZN10DelayMulti6GetDivEf:
 862              	.LVL63:
 863              	.LFB4461:
 199:DelayMulti.cpp **** 
 200:DelayMulti.cpp **** float DelayMulti::GetDiv(float potValue)
 201:DelayMulti.cpp **** {
 864              		.loc 1 201 1 is_stmt 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 202:DelayMulti.cpp ****     float retVal{};
 869              		.loc 1 202 5 view .LVU250
 203:DelayMulti.cpp **** 
 204:DelayMulti.cpp ****     if (potValue < 0.0909f)
 870              		.loc 1 204 5 view .LVU251
 871 0000 DFED477A 		vldr.32	s15, .L73
 872 0004 B4EEE70A 		vcmpe.f32	s0, s15
 873 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 874 000c 05D5     		bpl	.L61
 205:DelayMulti.cpp ****     {
 206:DelayMulti.cpp ****         retVal = (1.0f / 6.0f);
 875              		.loc 1 206 9 view .LVU252
 876              	.LVL64:
 207:DelayMulti.cpp ****         div_ = DIV6;
 877              		.loc 1 207 9 view .LVU253
 878              		.loc 1 207 14 is_stmt 0 view .LVU254
 879 000e 0023     		movs	r3, #0
 206:DelayMulti.cpp ****         div_ = DIV6;
 880              		.loc 1 206 16 view .LVU255
 881 0010 9FED440A 		vldr.32	s0, .L73+4
 882              	.LVL65:
 883              		.loc 1 207 14 view .LVU256
 884 0014 80F80931 		strb	r3, [r0, #265]
 885 0018 7047     		bx	lr
 886              	.LVL66:
 887              	.L61:
 208:DelayMulti.cpp ****     }
 209:DelayMulti.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 27


 210:DelayMulti.cpp ****     else if (potValue < 0.1818f)
 888              		.loc 1 210 10 is_stmt 1 view .LVU257
 889 001a DFED437A 		vldr.32	s15, .L73+8
 890 001e B4EEE70A 		vcmpe.f32	s0, s15
 891 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 892 0026 05D5     		bpl	.L62
 211:DelayMulti.cpp ****     {
 212:DelayMulti.cpp ****        retVal = (1.0f / 5.0f);
 893              		.loc 1 212 8 view .LVU258
 894              	.LVL67:
 213:DelayMulti.cpp ****        div_ = DIV5;
 895              		.loc 1 213 8 view .LVU259
 896              		.loc 1 213 13 is_stmt 0 view .LVU260
 897 0028 0123     		movs	r3, #1
 212:DelayMulti.cpp ****        div_ = DIV5;
 898              		.loc 1 212 15 view .LVU261
 899 002a 9FED400A 		vldr.32	s0, .L73+12
 900              	.LVL68:
 901              		.loc 1 213 13 view .LVU262
 902 002e 80F80931 		strb	r3, [r0, #265]
 903 0032 7047     		bx	lr
 904              	.LVL69:
 905              	.L62:
 214:DelayMulti.cpp ****     }
 215:DelayMulti.cpp **** 
 216:DelayMulti.cpp ****     else if (potValue < 0.2727f)
 906              		.loc 1 216 10 is_stmt 1 view .LVU263
 907 0034 DFED3E7A 		vldr.32	s15, .L73+16
 908 0038 B4EEE70A 		vcmpe.f32	s0, s15
 909 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 910 0040 0CD4     		bmi	.L71
 217:DelayMulti.cpp ****     {
 218:DelayMulti.cpp ****         retVal = (1.0f / 4.0f);
 219:DelayMulti.cpp ****         div_ = DIV4;
 220:DelayMulti.cpp ****     }
 221:DelayMulti.cpp **** 
 222:DelayMulti.cpp ****     else if (potValue < 0.3636f)
 911              		.loc 1 222 10 view .LVU264
 912 0042 DFED3C7A 		vldr.32	s15, .L73+20
 913 0046 B4EEE70A 		vcmpe.f32	s0, s15
 914 004a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 915 004e 0BD5     		bpl	.L64
 223:DelayMulti.cpp ****     {
 224:DelayMulti.cpp ****         retVal = (1.0f / 3.0f);
 916              		.loc 1 224 9 view .LVU265
 917              	.LVL70:
 225:DelayMulti.cpp ****         div_ = DIV3;
 918              		.loc 1 225 9 view .LVU266
 919              		.loc 1 225 14 is_stmt 0 view .LVU267
 920 0050 0323     		movs	r3, #3
 224:DelayMulti.cpp ****         div_ = DIV3;
 921              		.loc 1 224 16 view .LVU268
 922 0052 9FED390A 		vldr.32	s0, .L73+24
 923              	.LVL71:
 924              		.loc 1 225 14 view .LVU269
 925 0056 80F80931 		strb	r3, [r0, #265]
 926 005a 7047     		bx	lr
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 28


 927              	.LVL72:
 928              	.L71:
 218:DelayMulti.cpp ****         div_ = DIV4;
 929              		.loc 1 218 9 is_stmt 1 view .LVU270
 219:DelayMulti.cpp ****     }
 930              		.loc 1 219 9 view .LVU271
 219:DelayMulti.cpp ****     }
 931              		.loc 1 219 14 is_stmt 0 view .LVU272
 932 005c 0223     		movs	r3, #2
 218:DelayMulti.cpp ****         div_ = DIV4;
 933              		.loc 1 218 16 view .LVU273
 934 005e B5EE000A 		vmov.f32	s0, #2.5e-1
 935              	.LVL73:
 219:DelayMulti.cpp ****     }
 936              		.loc 1 219 14 view .LVU274
 937 0062 80F80931 		strb	r3, [r0, #265]
 938 0066 7047     		bx	lr
 939              	.LVL74:
 940              	.L64:
 226:DelayMulti.cpp ****     }
 227:DelayMulti.cpp **** 
 228:DelayMulti.cpp ****     else if (potValue < 0.4545f)
 941              		.loc 1 228 10 is_stmt 1 view .LVU275
 942 0068 DFED347A 		vldr.32	s15, .L73+28
 943 006c B4EEE70A 		vcmpe.f32	s0, s15
 944 0070 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 945 0074 0CD4     		bmi	.L72
 229:DelayMulti.cpp ****     {
 230:DelayMulti.cpp ****         retVal = (1.0f / 2.0f);
 231:DelayMulti.cpp ****         div_ = DIV2;
 232:DelayMulti.cpp ****     }
 233:DelayMulti.cpp **** 
 234:DelayMulti.cpp ****     else if (potValue <  0.5455f)
 946              		.loc 1 234 10 view .LVU276
 947 0076 DFED327A 		vldr.32	s15, .L73+32
 948 007a B4EEE70A 		vcmpe.f32	s0, s15
 949 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0082 0BD5     		bpl	.L66
 951              	.L49:
 235:DelayMulti.cpp ****     {
 236:DelayMulti.cpp ****         retVal = 1.0f;
 952              		.loc 1 236 9 view .LVU277
 953              	.LVL75:
 237:DelayMulti.cpp ****         div_ = UNITY;
 954              		.loc 1 237 9 view .LVU278
 955              		.loc 1 237 14 is_stmt 0 view .LVU279
 956 0084 0523     		movs	r3, #5
 236:DelayMulti.cpp ****         div_ = UNITY;
 957              		.loc 1 236 16 view .LVU280
 958 0086 B7EE000A 		vmov.f32	s0, #1.0e+0
 959              	.LVL76:
 960              		.loc 1 237 14 view .LVU281
 961 008a 80F80931 		strb	r3, [r0, #265]
 962 008e 7047     		bx	lr
 963              	.LVL77:
 964              	.L72:
 230:DelayMulti.cpp ****         div_ = DIV2;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 29


 965              		.loc 1 230 9 is_stmt 1 view .LVU282
 231:DelayMulti.cpp ****     }
 966              		.loc 1 231 9 view .LVU283
 231:DelayMulti.cpp ****     }
 967              		.loc 1 231 14 is_stmt 0 view .LVU284
 968 0090 0423     		movs	r3, #4
 230:DelayMulti.cpp ****         div_ = DIV2;
 969              		.loc 1 230 16 view .LVU285
 970 0092 B6EE000A 		vmov.f32	s0, #5.0e-1
 971              	.LVL78:
 231:DelayMulti.cpp ****     }
 972              		.loc 1 231 14 view .LVU286
 973 0096 80F80931 		strb	r3, [r0, #265]
 974 009a 7047     		bx	lr
 975              	.LVL79:
 976              	.L66:
 238:DelayMulti.cpp ****     }
 239:DelayMulti.cpp **** 
 240:DelayMulti.cpp ****     else if (potValue < 0.6364f)
 977              		.loc 1 240 10 is_stmt 1 view .LVU287
 978 009c DFED297A 		vldr.32	s15, .L73+36
 979 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 980 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 981 00a8 05D5     		bpl	.L67
 241:DelayMulti.cpp ****     {
 242:DelayMulti.cpp ****         retVal = 2.0f;
 982              		.loc 1 242 9 view .LVU288
 983              	.LVL80:
 243:DelayMulti.cpp ****         div_ = MULT2;
 984              		.loc 1 243 9 view .LVU289
 985              		.loc 1 243 14 is_stmt 0 view .LVU290
 986 00aa 0623     		movs	r3, #6
 242:DelayMulti.cpp ****         div_ = MULT2;
 987              		.loc 1 242 16 view .LVU291
 988 00ac B0EE000A 		vmov.f32	s0, #2.0e+0
 989              	.LVL81:
 990              		.loc 1 243 14 view .LVU292
 991 00b0 80F80931 		strb	r3, [r0, #265]
 992 00b4 7047     		bx	lr
 993              	.LVL82:
 994              	.L67:
 244:DelayMulti.cpp ****     }
 245:DelayMulti.cpp **** 
 246:DelayMulti.cpp ****     else if (potValue < 0.7273f)
 995              		.loc 1 246 10 is_stmt 1 view .LVU293
 996 00b6 DFED247A 		vldr.32	s15, .L73+40
 997 00ba B4EEE70A 		vcmpe.f32	s0, s15
 998 00be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 999 00c2 05D5     		bpl	.L68
 247:DelayMulti.cpp ****     {
 248:DelayMulti.cpp ****         retVal = 3.0f;
 1000              		.loc 1 248 9 view .LVU294
 1001              	.LVL83:
 249:DelayMulti.cpp ****         div_ = MULT3;
 1002              		.loc 1 249 9 view .LVU295
 1003              		.loc 1 249 14 is_stmt 0 view .LVU296
 1004 00c4 0723     		movs	r3, #7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 30


 248:DelayMulti.cpp ****         div_ = MULT3;
 1005              		.loc 1 248 16 view .LVU297
 1006 00c6 B0EE080A 		vmov.f32	s0, #3.0e+0
 1007              	.LVL84:
 1008              		.loc 1 249 14 view .LVU298
 1009 00ca 80F80931 		strb	r3, [r0, #265]
 1010 00ce 7047     		bx	lr
 1011              	.LVL85:
 1012              	.L68:
 250:DelayMulti.cpp ****     }
 251:DelayMulti.cpp **** 
 252:DelayMulti.cpp ****     else if (potValue < 0.8182f)
 1013              		.loc 1 252 10 is_stmt 1 view .LVU299
 1014 00d0 DFED1E7A 		vldr.32	s15, .L73+44
 1015 00d4 B4EEE70A 		vcmpe.f32	s0, s15
 1016 00d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1017 00dc 05D5     		bpl	.L69
 253:DelayMulti.cpp ****     {
 254:DelayMulti.cpp ****         retVal = 4.0f;
 1018              		.loc 1 254 9 view .LVU300
 1019              	.LVL86:
 255:DelayMulti.cpp ****         div_ = MULT4;
 1020              		.loc 1 255 9 view .LVU301
 1021              		.loc 1 255 14 is_stmt 0 view .LVU302
 1022 00de 0823     		movs	r3, #8
 254:DelayMulti.cpp ****         div_ = MULT4;
 1023              		.loc 1 254 16 view .LVU303
 1024 00e0 B1EE000A 		vmov.f32	s0, #4.0e+0
 1025              	.LVL87:
 1026              		.loc 1 255 14 view .LVU304
 1027 00e4 80F80931 		strb	r3, [r0, #265]
 1028 00e8 7047     		bx	lr
 1029              	.LVL88:
 1030              	.L69:
 1031              	.LBB199:
 1032              	.LBI199:
 200:DelayMulti.cpp **** {
 1033              		.loc 1 200 7 is_stmt 1 view .LVU305
 1034              	.LBB200:
 256:DelayMulti.cpp ****     }
 257:DelayMulti.cpp ****     
 258:DelayMulti.cpp ****     else if (potValue < 0.9091f)
 1035              		.loc 1 258 10 view .LVU306
 1036 00ea DFED197A 		vldr.32	s15, .L73+48
 1037 00ee B4EEE70A 		vcmpe.f32	s0, s15
 1038 00f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1039 00f6 05D5     		bpl	.L70
 259:DelayMulti.cpp ****     {
 260:DelayMulti.cpp ****         retVal = 5.0f;
 1040              		.loc 1 260 9 view .LVU307
 1041              	.LVL89:
 261:DelayMulti.cpp ****         div_ = MULT5;
 1042              		.loc 1 261 9 view .LVU308
 1043              		.loc 1 261 14 is_stmt 0 view .LVU309
 1044 00f8 0923     		movs	r3, #9
 260:DelayMulti.cpp ****         div_ = MULT5;
 1045              		.loc 1 260 16 view .LVU310
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 31


 1046 00fa B1EE040A 		vmov.f32	s0, #5.0e+0
 1047              	.LVL90:
 1048              		.loc 1 261 14 view .LVU311
 1049 00fe 80F80931 		strb	r3, [r0, #265]
 1050 0102 7047     		bx	lr
 1051              	.LVL91:
 1052              	.L70:
 262:DelayMulti.cpp ****     }
 263:DelayMulti.cpp **** 
 264:DelayMulti.cpp ****     else if (potValue <= 1.0f)
 1053              		.loc 1 264 10 is_stmt 1 view .LVU312
 1054 0104 F7EE007A 		vmov.f32	s15, #1.0e+0
 1055 0108 B4EEE70A 		vcmpe.f32	s0, s15
 1056 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1057 0110 B8D8     		bhi	.L49
 265:DelayMulti.cpp ****     {
 266:DelayMulti.cpp ****        retVal = 6.0f; 
 1058              		.loc 1 266 8 view .LVU313
 1059              	.LVL92:
 267:DelayMulti.cpp ****        div_ = MULT6;
 1060              		.loc 1 267 8 view .LVU314
 1061              		.loc 1 267 13 is_stmt 0 view .LVU315
 1062 0112 0A23     		movs	r3, #10
 266:DelayMulti.cpp ****        div_ = MULT6;
 1063              		.loc 1 266 15 view .LVU316
 1064 0114 B1EE080A 		vmov.f32	s0, #6.0e+0
 1065              	.LVL93:
 266:DelayMulti.cpp ****        div_ = MULT6;
 1066              		.loc 1 266 15 view .LVU317
 1067              	.LBE200:
 1068              	.LBE199:
 268:DelayMulti.cpp ****     }
 269:DelayMulti.cpp ****     else
 270:DelayMulti.cpp ****     {
 271:DelayMulti.cpp ****         retVal = 1.0f; 
 272:DelayMulti.cpp ****        div_ = UNITY;
 273:DelayMulti.cpp ****     }
 274:DelayMulti.cpp **** 
 275:DelayMulti.cpp **** return retVal;
 1069              		.loc 1 275 1 is_stmt 1 view .LVU318
 1070              	.LBB202:
 1071              	.LBB201:
 267:DelayMulti.cpp ****     }
 1072              		.loc 1 267 13 is_stmt 0 view .LVU319
 1073 0118 80F80931 		strb	r3, [r0, #265]
 1074              	.LBE201:
 1075              	.LBE202:
 276:DelayMulti.cpp **** }
 1076              		.loc 1 276 1 view .LVU320
 1077 011c 7047     		bx	lr
 1078              	.L74:
 1079 011e 00BF     		.align	2
 1080              	.L73:
 1081 0120 C729BA3D 		.word	1035610567
 1082 0124 ABAA2A3E 		.word	1042983595
 1083 0128 C7293A3E 		.word	1043999175
 1084 012c CDCC4C3E 		.word	1045220557
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 32


 1085 0130 569F8B3E 		.word	1049337686
 1086 0134 C729BA3E 		.word	1052387783
 1087 0138 ABAAAA3E 		.word	1051372203
 1088 013c 39B4E83E 		.word	1055437881
 1089 0140 E3A50B3F 		.word	1057727971
 1090 0144 1CEB223F 		.word	1059253020
 1091 0148 55303A3F 		.word	1060778069
 1092 014c 8E75513F 		.word	1062303118
 1093 0150 C7BA683F 		.word	1063828167
 1094              		.cfi_endproc
 1095              	.LFE4461:
 1097              		.section	.text._ZN10DelayMulti12SetDelayTimeEfb,"ax",%progbits
 1098              		.align	1
 1099              		.p2align 2,,3
 1100              		.global	_ZN10DelayMulti12SetDelayTimeEfb
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1104              		.fpu fpv5-d16
 1106              	_ZN10DelayMulti12SetDelayTimeEfb:
 1107              	.LVL94:
 1108              	.LFB4456:
  68:DelayMulti.cpp **** 
 1109              		.loc 1 68 1 is_stmt 1 view -0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
  70:DelayMulti.cpp **** 
 1113              		.loc 1 70 1 view .LVU322
  72:DelayMulti.cpp **** {
 1114              		.loc 1 72 1 view .LVU323
  68:DelayMulti.cpp **** 
 1115              		.loc 1 68 1 is_stmt 0 view .LVU324
 1116 0000 38B5     		push	{r3, r4, r5, lr}
 1117              		.cfi_def_cfa_offset 16
 1118              		.cfi_offset 3, -16
 1119              		.cfi_offset 4, -12
 1120              		.cfi_offset 5, -8
 1121              		.cfi_offset 14, -4
 1122 0002 0446     		mov	r4, r0
 1123 0004 2DED028B 		vpush.64	{d8}
 1124              		.cfi_def_cfa_offset 24
 1125              		.cfi_offset 80, -24
 1126              		.cfi_offset 81, -20
  72:DelayMulti.cpp **** {
 1127              		.loc 1 72 1 view .LVU325
 1128 0008 0029     		cmp	r1, #0
 1129 000a 49D0     		beq	.L76
  75:DelayMulti.cpp **** }
 1130              		.loc 1 75 5 is_stmt 1 view .LVU326
  75:DelayMulti.cpp **** }
 1131              		.loc 1 75 23 is_stmt 0 view .LVU327
 1132 000c FFF7FEFF 		bl	_ZN10DelayMulti6GetDivEf
 1133              	.LVL95:
  75:DelayMulti.cpp **** }
 1134              		.loc 1 75 15 view .LVU328
 1135 0010 90ED448A 		vldr.32	s16, [r0, #272]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 33


 1136 0014 20EE088A 		vmul.f32	s16, s0, s16
 1137              	.LVL96:
 1138              	.L77:
  84:DelayMulti.cpp **** {
 1139              		.loc 1 84 1 is_stmt 1 view .LVU329
 1140              	.LBB203:
  84:DelayMulti.cpp **** {
 1141              		.loc 1 84 22 is_stmt 0 view .LVU330
 1142 0018 94ED457A 		vldr.32	s14, [r4, #276]
 1143              	.LVL97:
 1144              	.LBB204:
 1145              	.LBI204:
 1146              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/b
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 34


  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
 1147              		.loc 5 75 3 is_stmt 1 view .LVU331
 1148              	.LBB205:
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1149              		.loc 5 76 5 view .LVU332
 1150              		.loc 5 76 5 is_stmt 0 view .LVU333
 1151              	.LBE205:
 1152              	.LBE204:
  84:DelayMulti.cpp **** {
 1153              		.loc 1 84 42 view .LVU334
 1154 001c 9FED3A5B 		vldr.64	d5, .L98
  84:DelayMulti.cpp **** {
 1155              		.loc 1 84 8 view .LVU335
 1156 0020 38EE476A 		vsub.f32	s12, s16, s14
  84:DelayMulti.cpp **** {
 1157              		.loc 1 84 44 view .LVU336
 1158 0024 B7EEC77A 		vcvt.f64.f32	d7, s14
 1159              	.LBB207:
 1160              	.LBB206:
 1161              		.loc 5 76 31 view .LVU337
 1162 0028 B0EEC66A 		vabs.f32	s12, s12
 1163              	.LBE206:
 1164              	.LBE207:
  84:DelayMulti.cpp **** {
 1165              		.loc 1 84 42 view .LVU338
 1166 002c 27EE057B 		vmul.f64	d7, d7, d5
  84:DelayMulti.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 35


 1167              		.loc 1 84 8 view .LVU339
 1168 0030 B7EEC66A 		vcvt.f64.f32	d6, s12
  84:DelayMulti.cpp **** {
 1169              		.loc 1 84 1 view .LVU340
 1170 0034 B4EEC76B 		vcmpe.f64	d6, d7
 1171 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1172 003c 4EDC     		bgt	.L94
  84:DelayMulti.cpp **** {
 1173              		.loc 1 84 1 view .LVU341
 1174              	.LBE203:
  95:DelayMulti.cpp ****     {
 1175              		.loc 1 95 5 is_stmt 1 view .LVU342
 1176              	.LBB224:
 1177              	.LBB208:
 1178 003e 94F80831 		ldrb	r3, [r4, #264]	@ zero_extendqisi2
 1179 0042 BBBB     		cbnz	r3, .L95
 1180              	.LBE208:
 1181              	.LBE224:
 120:DelayMulti.cpp ****     {
 1182              		.loc 1 120 5 view .LVU343
 1183              	.LBB225:
 1184              	.LBB215:
 120:DelayMulti.cpp ****     {
 1185              		.loc 1 120 24 is_stmt 0 view .LVU344
 1186 0044 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1187              	.LVL98:
 120:DelayMulti.cpp ****     {
 1188              		.loc 1 120 27 view .LVU345
 1189 0048 D4F8EC30 		ldr	r3, [r4, #236]
 1190 004c C01A     		subs	r0, r0, r3
 120:DelayMulti.cpp ****     {
 1191              		.loc 1 120 50 view .LVU346
 1192 004e 1928     		cmp	r0, #25
 1193 0050 3FD9     		bls	.L84
 1194              	.L97:
 120:DelayMulti.cpp ****     {
 1195              		.loc 1 120 53 discriminator 1 view .LVU347
 1196 0052 94F8F850 		ldrb	r5, [r4, #248]	@ zero_extendqisi2
 120:DelayMulti.cpp ****     {
 1197              		.loc 1 120 50 discriminator 1 view .LVU348
 1198 0056 FDB1     		cbz	r5, .L80
 1199              	.LVL99:
 1200              	.LBB216:
 1201              	.LBB217:
 123:DelayMulti.cpp ****             {
 1202              		.loc 1 123 32 is_stmt 1 view .LVU349
 125:DelayMulti.cpp ****             }
 1203              		.loc 1 125 17 view .LVU350
 123:DelayMulti.cpp ****             {
 1204              		.loc 1 123 13 view .LVU351
 123:DelayMulti.cpp ****             {
 1205              		.loc 1 123 32 view .LVU352
 125:DelayMulti.cpp ****             }
 1206              		.loc 1 125 17 view .LVU353
 125:DelayMulti.cpp ****             }
 1207              		.loc 1 125 46 is_stmt 0 view .LVU354
 1208 0058 B4F8BC30 		ldrh	r3, [r4, #188]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 36


 1209              	.LBE217:
 129:DelayMulti.cpp **** 
 1210              		.loc 1 129 28 view .LVU355
 1211 005c 94F8F020 		ldrb	r2, [r4, #240]	@ zero_extendqisi2
 1212              	.LBB218:
 125:DelayMulti.cpp ****             }
 1213              		.loc 1 125 46 view .LVU356
 1214 0060 83F48073 		eor	r3, r3, #256
 1215              	.LBE218:
 129:DelayMulti.cpp **** 
 1216              		.loc 1 129 28 view .LVU357
 1217 0064 82F00102 		eor	r2, r2, #1
 1218              	.LBB219:
 125:DelayMulti.cpp ****             }
 1219              		.loc 1 125 46 view .LVU358
 1220 0068 83F00103 		eor	r3, r3, #1
 1221              	.LBE219:
 129:DelayMulti.cpp **** 
 1222              		.loc 1 129 26 view .LVU359
 1223 006c 84F8F020 		strb	r2, [r4, #240]
 1224              	.LBB220:
 125:DelayMulti.cpp ****             }
 1225              		.loc 1 125 31 view .LVU360
 1226 0070 A4F8BC30 		strh	r3, [r4, #188]	@ movhi
 123:DelayMulti.cpp ****             {
 1227              		.loc 1 123 13 is_stmt 1 view .LVU361
 1228              	.LVL100:
 123:DelayMulti.cpp ****             {
 1229              		.loc 1 123 32 view .LVU362
 1230              	.LBE220:
 129:DelayMulti.cpp **** 
 1231              		.loc 1 129 9 view .LVU363
 131:DelayMulti.cpp ****         waiting_flag_ = false;  //reset wait flag
 1232              		.loc 1 131 9 view .LVU364
 131:DelayMulti.cpp ****         waiting_flag_ = false;  //reset wait flag
 1233              		.loc 1 131 32 is_stmt 0 view .LVU365
 1234 0074 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1235              	.LVL101:
 135:DelayMulti.cpp ****         return true;
 1236              		.loc 1 135 45 view .LVU366
 1237 0078 94ED3F7A 		vldr.32	s14, [r4, #252]
 135:DelayMulti.cpp ****         return true;
 1238              		.loc 1 135 26 view .LVU367
 1239 007c B7EE000A 		vmov.f32	s0, #1.0e+0
 132:DelayMulti.cpp **** 
 1240              		.loc 1 132 23 view .LVU368
 1241 0080 0023     		movs	r3, #0
 135:DelayMulti.cpp ****         return true;
 1242              		.loc 1 135 45 view .LVU369
 1243 0082 C8EE077A 		vdiv.f32	s15, s16, s14
 131:DelayMulti.cpp ****         waiting_flag_ = false;  //reset wait flag
 1244              		.loc 1 131 16 view .LVU370
 1245 0086 C4F8EC00 		str	r0, [r4, #236]
 132:DelayMulti.cpp **** 
 1246              		.loc 1 132 9 is_stmt 1 view .LVU371
 132:DelayMulti.cpp **** 
 1247              		.loc 1 132 23 is_stmt 0 view .LVU372
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 37


 1248 008a 84F8F830 		strb	r3, [r4, #248]
 135:DelayMulti.cpp ****         return true;
 1249              		.loc 1 135 9 is_stmt 1 view .LVU373
 135:DelayMulti.cpp ****         return true;
 1250              		.loc 1 135 26 is_stmt 0 view .LVU374
 1251 008e 201D     		adds	r0, r4, #4
 1252 0090 80EE270A 		vdiv.f32	s0, s0, s15
 1253 0094 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 1254              	.LVL102:
 136:DelayMulti.cpp ****     }
 1255              		.loc 1 136 9 is_stmt 1 view .LVU375
 1256              	.L80:
 136:DelayMulti.cpp ****     }
 1257              		.loc 1 136 9 is_stmt 0 view .LVU376
 1258              	.LBE216:
 1259              	.LBE215:
 1260              	.LBE225:
 144:DelayMulti.cpp **** 
 1261              		.loc 1 144 1 view .LVU377
 1262 0098 2846     		mov	r0, r5
 1263 009a BDEC028B 		vldm	sp!, {d8}
 1264              		.cfi_remember_state
 1265              		.cfi_restore 80
 1266              		.cfi_restore 81
 1267              		.cfi_def_cfa_offset 16
 1268              	.LVL103:
 144:DelayMulti.cpp **** 
 1269              		.loc 1 144 1 view .LVU378
 1270 009e 38BD     		pop	{r3, r4, r5, pc}
 1271              	.LVL104:
 1272              	.L76:
 1273              		.cfi_restore_state
  80:DelayMulti.cpp **** }
 1274              		.loc 1 80 5 is_stmt 1 view .LVU379
  80:DelayMulti.cpp **** }
 1275              		.loc 1 80 22 is_stmt 0 view .LVU380
 1276 00a0 0220     		movs	r0, #2
 1277              	.LVL105:
  80:DelayMulti.cpp **** }
 1278              		.loc 1 80 22 view .LVU381
 1279 00a2 9FED1B1A 		vldr.32	s2, .L98+8
 1280 00a6 DFED1B0A 		vldr.32	s1, .L98+12
 1281 00aa FFF7FEFF 		bl	_Z5scalefff9CurveType
 1282              	.LVL106:
  80:DelayMulti.cpp **** }
 1283              		.loc 1 80 22 view .LVU382
 1284 00ae B0EE408A 		vmov.f32	s16, s0
 1285              	.LVL107:
  80:DelayMulti.cpp **** }
 1286              		.loc 1 80 22 view .LVU383
 1287 00b2 B1E7     		b	.L77
 1288              	.LVL108:
 1289              	.L95:
 1290              	.LBB226:
 1291              	.LBB221:
 1292              	.LBB209:
  99:DelayMulti.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 38


 1293              		.loc 1 99 5 is_stmt 1 view .LVU384
 1294              	.LBB210:
 1295 00b4 94F8F030 		ldrb	r3, [r4, #240]	@ zero_extendqisi2
 1296 00b8 03BB     		cbnz	r3, .L96
 1297              	.LVL109:
 1298              	.LBB211:
 109:DelayMulti.cpp ****         {
 1299              		.loc 1 109 28 discriminator 3 view .LVU385
 112:DelayMulti.cpp ****         }
 1300              		.loc 1 112 13 discriminator 3 view .LVU386
 112:DelayMulti.cpp ****         }
 1301              		.loc 1 112 29 is_stmt 0 discriminator 3 view .LVU387
 1302 00ba 84ED368A 		vstr.32	s16, [r4, #216]
 109:DelayMulti.cpp ****         {
 1303              		.loc 1 109 9 is_stmt 1 discriminator 3 view .LVU388
 1304              	.LVL110:
 109:DelayMulti.cpp ****         {
 1305              		.loc 1 109 28 discriminator 3 view .LVU389
 1306              	.L83:
 109:DelayMulti.cpp ****         {
 1307              		.loc 1 109 28 is_stmt 0 discriminator 3 view .LVU390
 1308              	.LBE211:
 1309              	.LBE210:
 116:DelayMulti.cpp **** 
 1310              		.loc 1 116 5 is_stmt 1 view .LVU391
 116:DelayMulti.cpp **** 
 1311              		.loc 1 116 17 is_stmt 0 view .LVU392
 1312 00be 0023     		movs	r3, #0
 1313 00c0 84F80831 		strb	r3, [r4, #264]
 1314              	.LBE209:
 1315              	.LBE221:
 1316              	.LBE226:
 120:DelayMulti.cpp ****     {
 1317              		.loc 1 120 5 is_stmt 1 view .LVU393
 1318              	.LBB227:
 1319              	.LBB222:
 120:DelayMulti.cpp ****     {
 1320              		.loc 1 120 24 is_stmt 0 view .LVU394
 1321 00c4 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1322              	.LVL111:
 120:DelayMulti.cpp ****     {
 1323              		.loc 1 120 27 view .LVU395
 1324 00c8 D4F8EC30 		ldr	r3, [r4, #236]
 1325 00cc C01A     		subs	r0, r0, r3
 120:DelayMulti.cpp ****     {
 1326              		.loc 1 120 50 view .LVU396
 1327 00ce 1928     		cmp	r0, #25
 1328 00d0 BFD8     		bhi	.L97
 1329              	.L84:
 140:DelayMulti.cpp ****     }  
 1330              		.loc 1 140 16 view .LVU397
 1331 00d2 0025     		movs	r5, #0
 1332              	.LBE222:
 1333              	.LBE227:
 144:DelayMulti.cpp **** 
 1334              		.loc 1 144 1 view .LVU398
 1335 00d4 BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 39


 1336              		.cfi_remember_state
 1337              		.cfi_restore 80
 1338              		.cfi_restore 81
 1339              		.cfi_def_cfa_offset 16
 1340              	.LVL112:
 144:DelayMulti.cpp **** 
 1341              		.loc 1 144 1 view .LVU399
 1342 00d8 2846     		mov	r0, r5
 1343 00da 38BD     		pop	{r3, r4, r5, pc}
 1344              	.LVL113:
 1345              	.L94:
 1346              		.cfi_restore_state
 1347              	.LBB228:
  86:DelayMulti.cpp ****     waiting_flag_ = true;
 1348              		.loc 1 86 5 is_stmt 1 view .LVU400
  86:DelayMulti.cpp ****     waiting_flag_ = true;
 1349              		.loc 1 86 28 is_stmt 0 view .LVU401
 1350 00dc FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1351              	.LVL114:
  90:DelayMulti.cpp **** }
 1352              		.loc 1 90 12 view .LVU402
 1353 00e0 0025     		movs	r5, #0
  87:DelayMulti.cpp ****     TimeChange_ = true;
 1354              		.loc 1 87 19 view .LVU403
 1355 00e2 0123     		movs	r3, #1
  89:DelayMulti.cpp ****     return false;
 1356              		.loc 1 89 16 view .LVU404
 1357 00e4 84ED458A 		vstr.32	s16, [r4, #276]
  86:DelayMulti.cpp ****     waiting_flag_ = true;
 1358              		.loc 1 86 12 view .LVU405
 1359 00e8 C4F8EC00 		str	r0, [r4, #236]
  87:DelayMulti.cpp ****     TimeChange_ = true;
 1360              		.loc 1 87 5 is_stmt 1 view .LVU406
 1361              	.LBE228:
 144:DelayMulti.cpp **** 
 1362              		.loc 1 144 1 is_stmt 0 view .LVU407
 1363 00ec 2846     		mov	r0, r5
 1364              	.LBB229:
  87:DelayMulti.cpp ****     TimeChange_ = true;
 1365              		.loc 1 87 19 view .LVU408
 1366 00ee 84F8F830 		strb	r3, [r4, #248]
  88:DelayMulti.cpp ****     delayLast_ = delaytime;
 1367              		.loc 1 88 5 is_stmt 1 view .LVU409
  88:DelayMulti.cpp ****     delayLast_ = delaytime;
 1368              		.loc 1 88 17 is_stmt 0 view .LVU410
 1369 00f2 84F80831 		strb	r3, [r4, #264]
  89:DelayMulti.cpp ****     return false;
 1370              		.loc 1 89 5 is_stmt 1 view .LVU411
  90:DelayMulti.cpp **** }
 1371              		.loc 1 90 5 view .LVU412
 1372              	.LBE229:
 144:DelayMulti.cpp **** 
 1373              		.loc 1 144 1 is_stmt 0 view .LVU413
 1374 00f6 BDEC028B 		vldm	sp!, {d8}
 1375              		.cfi_remember_state
 1376              		.cfi_restore 80
 1377              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 40


 1378              		.cfi_def_cfa_offset 16
 1379              	.LVL115:
 144:DelayMulti.cpp **** 
 1380              		.loc 1 144 1 view .LVU414
 1381 00fa 38BD     		pop	{r3, r4, r5, pc}
 1382              	.LVL116:
 1383              	.L96:
 1384              		.cfi_restore_state
 1385              	.LBB230:
 1386              	.LBB223:
 1387              	.LBB214:
 1388              	.LBB213:
 1389              	.LBB212:
 101:DelayMulti.cpp ****         {
 1390              		.loc 1 101 28 is_stmt 1 view .LVU415
 104:DelayMulti.cpp ****         }
 1391              		.loc 1 104 13 view .LVU416
 104:DelayMulti.cpp ****         }
 1392              		.loc 1 104 40 is_stmt 0 view .LVU417
 1393 00fc 84ED378A 		vstr.32	s16, [r4, #220]
 101:DelayMulti.cpp ****         {
 1394              		.loc 1 101 9 is_stmt 1 view .LVU418
 1395              	.LVL117:
 101:DelayMulti.cpp ****         {
 1396              		.loc 1 101 28 view .LVU419
 1397 0100 DDE7     		b	.L83
 1398              	.L99:
 1399 0102 00BFAFF3 		.align	3
 1399      0080
 1400              	.L98:
 1401 0108 FCA9F1D2 		.word	3539053052
 1402 010c 4D62503F 		.word	1062232653
 1403 0110 00606A48 		.word	1214930944
 1404 0114 00007045 		.word	1164967936
 1405              	.LBE212:
 1406              	.LBE213:
 1407              	.LBE214:
 1408              	.LBE223:
 1409              	.LBE230:
 1410              		.cfi_endproc
 1411              	.LFE4456:
 1413              		.text
 1414              	.Letext0:
 1415              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 1416              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 1417              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 1418              		.file 9 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 1419              		.file 10 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1420              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 1421              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1422              		.file 13 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1423              		.file 14 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1424              		.file 15 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1425              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1426              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1427              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1428              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 41


 1429              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1430              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1431              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1432              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1433              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1434              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1435              		.file 26 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1436              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1437              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1438              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1439              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1440              		.file 31 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1441              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1442              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1443              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 1444              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 1445              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 1446              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 1447              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 1448              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1449              		.file 40 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1450              		.file 41 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1451              		.file 42 "../DaisySP/Source/Control/adenv.h"
 1452              		.file 43 "../DaisySP/Source/Utility/dsp.h"
 1453              		.file 44 "oscillator_p.h"
 1454              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 1455              		.file 46 "<built-in>"
 1456              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 1457              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 1458              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 1459              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 1460              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 1461              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 1462              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 1463              		.file 54 "../libdaisy/src/daisy_core.h"
 1464              		.file 55 "../libdaisy/src/per/tim.h"
 1465              		.file 56 "../libdaisy/src/sys/system.h"
 1466              		.file 57 "../libdaisy/src/util/wav_format.h"
 1467              		.file 58 "../libdaisy/src/hid/led.h"
 1468              		.file 59 "../libdaisy/src/daisy_seed.h"
 1469              		.file 60 "../libdaisy/src/per/gpio.h"
 1470              		.file 61 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 1471              		.file 62 "../libdaisy/src/util/oled_fonts.h"
 1472              		.file 63 "constants.h"
 1473              		.file 64 "LEDs.h"
 1474              		.file 65 "scale.h"
 1475              		.file 66 "DelayMulti.h"
 1476              		.file 67 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 DelayMulti.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:17     .text._ZN10DelayMulti4initE12dsy_gpio_pinf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:26     .text._ZN10DelayMulti4initE12dsy_gpio_pinf:0000000000000000 _ZN10DelayMulti4initE12dsy_gpio_pinf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:390    .text._ZN10DelayMulti4initE12dsy_gpio_pinf:0000000000000124 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:397    .text._ZN10DelayMulti9GetOutputEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:405    .text._ZN10DelayMulti9GetOutputEv:0000000000000000 _ZN10DelayMulti9GetOutputEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:673    .text._ZN10DelayMulti9GetOutputEv:0000000000000100 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:685    .text._ZN10DelayMulti14updateTempoLEDEb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:693    .text._ZN10DelayMulti14updateTempoLEDEb:0000000000000000 _ZN10DelayMulti14updateTempoLEDEb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:730    .text._ZN10DelayMulti5WriteERKf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:738    .text._ZN10DelayMulti5WriteERKf:0000000000000000 _ZN10DelayMulti5WriteERKf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:807    .text._ZN10DelayMulti5WriteERKf:0000000000000028 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:814    .text._ZN10DelayMulti12GetDelayTimeEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:822    .text._ZN10DelayMulti12GetDelayTimeEv:0000000000000000 _ZN10DelayMulti12GetDelayTimeEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:853    .text._ZN10DelayMulti6GetDivEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:861    .text._ZN10DelayMulti6GetDivEf:0000000000000000 _ZN10DelayMulti6GetDivEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:1081   .text._ZN10DelayMulti6GetDivEf:0000000000000120 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:1098   .text._ZN10DelayMulti12SetDelayTimeEfb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:1106   .text._ZN10DelayMulti12SetDelayTimeEfb:0000000000000000 _ZN10DelayMulti12SetDelayTimeEfb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccm8eXH0.s:1401   .text._ZN10DelayMulti12SetDelayTimeEfb:0000000000000108 $d

UNDEFINED SYMBOLS
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN5daisy6System6GetNowEv
_ZN7daisysp4Adsr4InitEfi
_ZN7daisysp4Adsr7SetTimeEif
_ZN7daisysp4Adsr7ProcessEb
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN8TempoLED6updateE9TempoDivsf
_ZN8TempoLED6updateEv
_ZN8TempoLED8setTempoEf
_Z5scalefff9CurveType
