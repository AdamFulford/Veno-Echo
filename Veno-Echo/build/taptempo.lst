ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"taptempo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN8Taptempo4initEmmf,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN8Taptempo4initEmmf
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN8Taptempo4initEmmf:
  27              	.LVL0:
  28              	.LFB3884:
  29              		.file 1 "taptempo.cpp"
   1:taptempo.cpp  **** // Copyright 2021 Adam Fulford
   2:taptempo.cpp  **** // 
   3:taptempo.cpp  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.cpp  **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.cpp  **** // in the Software without restriction, including without limitation the rights
   6:taptempo.cpp  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.cpp  **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.cpp  **** // furnished to do so, subject to the following conditions:
   9:taptempo.cpp  **** // 
  10:taptempo.cpp  **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.cpp  **** // all copies or substantial portions of the Software.
  12:taptempo.cpp  **** // 
  13:taptempo.cpp  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.cpp  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.cpp  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.cpp  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.cpp  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.cpp  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.cpp  **** // THE SOFTWARE.
  20:taptempo.cpp  **** // 
  21:taptempo.cpp  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.cpp  **** 
  23:taptempo.cpp  **** #include "taptempo.h"
  24:taptempo.cpp  **** 
  25:taptempo.cpp  ****     //set mintap (ms), maxtap (ms), tap tolerance
  26:taptempo.cpp  ****     void Taptempo::init(uint32_t mintap, uint32_t maxtap, float tap_tolerance)
  27:taptempo.cpp  ****     {
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  28:taptempo.cpp  ****         mintap_ = mintap;
  35              		.loc 1 28 9 view .LVU1
  27:taptempo.cpp  ****         mintap_ = mintap;
  36              		.loc 1 27 5 is_stmt 0 view .LVU2
  37 0000 70B4     		push	{r4, r5, r6}
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 6, -4
  29:taptempo.cpp  ****         maxtap_ = maxtap;
  30:taptempo.cpp  ****         tap_tolerance_ = tap_tolerance;
  31:taptempo.cpp  ****         tapLength_ = 0;
  42              		.loc 1 31 20 view .LVU3
  43 0002 0023     		movs	r3, #0
  32:taptempo.cpp  ****         lastTapLength_ = 0;
  33:taptempo.cpp  ****         tempo_ = 500000.0f; //in Us. Default 120BPM
  34:taptempo.cpp  ****         lastTime_ = 0;
  35:taptempo.cpp  ****         currentTime_ = 0;
  36:taptempo.cpp  ****         tapflag_ = false;
  37:taptempo.cpp  ****         tapRatio_ = 1.0;
  44              		.loc 1 37 19 view .LVU4
  45 0004 4FF07E55 		mov	r5, #1065353216
  33:taptempo.cpp  ****         lastTime_ = 0;
  46              		.loc 1 33 16 view .LVU5
  47 0008 0A4E     		ldr	r6, .L4
  38:taptempo.cpp  ****         PPQN_ = 24;
  48              		.loc 1 38 15 view .LVU6
  49 000a 1824     		movs	r4, #24
  28:taptempo.cpp  ****         maxtap_ = maxtap;
  50              		.loc 1 28 17 view .LVU7
  51 000c 0160     		str	r1, [r0]
  29:taptempo.cpp  ****         tap_tolerance_ = tap_tolerance;
  52              		.loc 1 29 9 is_stmt 1 view .LVU8
  39:taptempo.cpp  ****         minclock_ = 3840/PPQN_;
  53              		.loc 1 39 19 is_stmt 0 view .LVU9
  54 000e A021     		movs	r1, #160
  55              	.LVL1:
  29:taptempo.cpp  ****         tap_tolerance_ = tap_tolerance;
  56              		.loc 1 29 17 view .LVU10
  57 0010 4260     		str	r2, [r0, #4]
  30:taptempo.cpp  ****         tapLength_ = 0;
  58              		.loc 1 30 9 is_stmt 1 view .LVU11
  40:taptempo.cpp  ****         maxclock_ = 96000/PPQN_;
  59              		.loc 1 40 19 is_stmt 0 view .LVU12
  60 0012 4FF47A62 		mov	r2, #4000
  61              	.LVL2:
  33:taptempo.cpp  ****         lastTime_ = 0;
  62              		.loc 1 33 16 view .LVU13
  63 0016 C663     		str	r6, [r0, #60]	@ float
  37:taptempo.cpp  ****         PPQN_ = 24;
  64              		.loc 1 37 19 view .LVU14
  65 0018 0564     		str	r5, [r0, #64]	@ float
  38:taptempo.cpp  ****         minclock_ = 3840/PPQN_;
  66              		.loc 1 38 15 view .LVU15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 3


  67 001a 4464     		str	r4, [r0, #68]
  30:taptempo.cpp  ****         tapLength_ = 0;
  68              		.loc 1 30 24 view .LVU16
  69 001c 80ED0E0A 		vstr.32	s0, [r0, #56]
  31:taptempo.cpp  ****         lastTapLength_ = 0;
  70              		.loc 1 31 9 is_stmt 1 view .LVU17
  36:taptempo.cpp  ****         tapRatio_ = 1.0;
  71              		.loc 1 36 18 is_stmt 0 view .LVU18
  72 0020 80F83430 		strb	r3, [r0, #52]
  41:taptempo.cpp  **** 
  42:taptempo.cpp  ****         //dsy_tim_init(); //start timer
  43:taptempo.cpp  ****         //dsy_tim_start();
  44:taptempo.cpp  ****     }
  73              		.loc 1 44 5 view .LVU19
  74 0024 70BC     		pop	{r4, r5, r6}
  75              		.cfi_restore 6
  76              		.cfi_restore 5
  77              		.cfi_restore 4
  78              		.cfi_def_cfa_offset 0
  40:taptempo.cpp  **** 
  79              		.loc 1 40 19 view .LVU20
  80 0026 C0E90212 		strd	r1, r2, [r0, #8]
  32:taptempo.cpp  ****         tempo_ = 500000.0f; //in Us. Default 120BPM
  81              		.loc 1 32 24 view .LVU21
  82 002a C0E90633 		strd	r3, r3, [r0, #24]
  33:taptempo.cpp  ****         lastTime_ = 0;
  83              		.loc 1 33 9 is_stmt 1 view .LVU22
  34:taptempo.cpp  ****         currentTime_ = 0;
  84              		.loc 1 34 9 view .LVU23
  35:taptempo.cpp  ****         tapflag_ = false;
  85              		.loc 1 35 22 is_stmt 0 view .LVU24
  86 002e C0E90433 		strd	r3, r3, [r0, #16]
  36:taptempo.cpp  ****         tapRatio_ = 1.0;
  87              		.loc 1 36 9 is_stmt 1 view .LVU25
  37:taptempo.cpp  ****         PPQN_ = 24;
  88              		.loc 1 37 9 view .LVU26
  38:taptempo.cpp  ****         minclock_ = 3840/PPQN_;
  89              		.loc 1 38 9 view .LVU27
  39:taptempo.cpp  ****         maxclock_ = 96000/PPQN_;
  90              		.loc 1 39 9 view .LVU28
  40:taptempo.cpp  **** 
  91              		.loc 1 40 9 view .LVU29
  92              		.loc 1 44 5 is_stmt 0 view .LVU30
  93 0032 7047     		bx	lr
  94              	.L5:
  95              		.align	2
  96              	.L4:
  97 0034 0024F448 		.word	1223959552
  98              		.cfi_endproc
  99              	.LFE3884:
 101              		.section	.text._ZN8Taptempo3tapEv,"ax",%progbits
 102              		.align	1
 103              		.p2align 2,,3
 104              		.global	_ZN8Taptempo3tapEv
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 4


 108              		.fpu fpv5-d16
 110              	_ZN8Taptempo3tapEv:
 111              	.LVL3:
 112              	.LFB3885:
  45:taptempo.cpp  ****     
  46:taptempo.cpp  ****     //call when tap is triggered. currentTime in ms. Returns high if tempo updated
  47:taptempo.cpp  ****     bool Taptempo::tap()
  48:taptempo.cpp  ****     {
 113              		.loc 1 48 5 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
  49:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 117              		.loc 1 49 9 view .LVU32
  48:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 118              		.loc 1 48 5 is_stmt 0 view .LVU33
 119 0000 10B5     		push	{r4, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
  48:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 123              		.loc 1 48 5 view .LVU34
 124 0002 0446     		mov	r4, r0
 125              		.loc 1 49 37 view .LVU35
 126 0004 FFF7FEFF 		bl	_ZN5daisy6System5GetUsEv
 127              	.LVL4:
  50:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 128              		.loc 1 50 35 view .LVU36
 129 0008 6369     		ldr	r3, [r4, #20]
  51:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
  52:taptempo.cpp  ****         
  53:taptempo.cpp  ****         if(mintap_ <= tapLength_ && tapLength_ <= maxtap_)  //if between limits
 130              		.loc 1 53 9 view .LVU37
 131 000a 2268     		ldr	r2, [r4]
  50:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 132              		.loc 1 50 35 view .LVU38
 133 000c C31A     		subs	r3, r0, r3
 134              		.loc 1 53 9 view .LVU39
 135 000e 9342     		cmp	r3, r2
  50:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 136              		.loc 1 50 20 view .LVU40
 137 0010 E361     		str	r3, [r4, #28]
  51:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 138              		.loc 1 51 9 is_stmt 1 view .LVU41
 139              		.loc 1 53 9 view .LVU42
 140              		.loc 1 53 34 is_stmt 0 view .LVU43
 141 0012 6268     		ldr	r2, [r4, #4]
  51:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 142              		.loc 1 51 19 view .LVU44
 143 0014 C4E90400 		strd	r0, r0, [r4, #16]
 144              		.loc 1 53 9 view .LVU45
 145 0018 22D3     		bcc	.L7
 146              		.loc 1 53 34 discriminator 1 view .LVU46
 147 001a 9342     		cmp	r3, r2
 148 001c 24D8     		bhi	.L8
  54:taptempo.cpp  ****         {
  55:taptempo.cpp  ****             if(tapflag_)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 5


 149              		.loc 1 55 13 is_stmt 1 view .LVU47
 150              		.loc 1 55 16 is_stmt 0 view .LVU48
 151 001e 94F83400 		ldrb	r0, [r4, #52]	@ zero_extendqisi2
  56:taptempo.cpp  ****             {
  57:taptempo.cpp  ****                 tapflag_ = false;   //reset tapflag
  58:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_ * 0.048f;
 152              		.loc 1 58 26 view .LVU49
 153 0022 07EE903A 		vmov	s15, r3	@ int
  55:taptempo.cpp  ****             {
 154              		.loc 1 55 13 view .LVU50
 155 0026 20BB     		cbnz	r0, .L15
  59:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
  60:taptempo.cpp  ****                 return true;
  61:taptempo.cpp  ****             }
  62:taptempo.cpp  **** 
  63:taptempo.cpp  ****             else    //tapflag_ not set
  64:taptempo.cpp  ****             {
  65:taptempo.cpp  ****                 if(static_cast<float>(tapLength_) >= tap_tolerance_ * static_cast<float>(lastTapLen
 156              		.loc 1 65 17 is_stmt 1 view .LVU51
 157              		.loc 1 65 20 is_stmt 0 view .LVU52
 158 0028 B8EE677A 		vcvt.f32.u32	s14, s15
 159              		.loc 1 65 71 view .LVU53
 160 002c D4ED067A 		vldr.32	s15, [r4, #24]	@ int
 161              		.loc 1 65 69 view .LVU54
 162 0030 D4ED0E6A 		vldr.32	s13, [r4, #56]
 163              		.loc 1 65 71 view .LVU55
 164 0034 F8EE677A 		vcvt.f32.u32	s15, s15
 165              		.loc 1 65 69 view .LVU56
 166 0038 67EEA67A 		vmul.f32	s15, s15, s13
 167              		.loc 1 65 17 view .LVU57
 168 003c B4EEE77A 		vcmpe.f32	s14, s15
 169 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 170 0044 10DA     		bge	.L8
  66:taptempo.cpp  ****                 {
  67:taptempo.cpp  ****                     tapflag_ = true;
  68:taptempo.cpp  ****                     return false;
  69:taptempo.cpp  ****                 }
  70:taptempo.cpp  ****                 else
  71:taptempo.cpp  ****                 {
  72:taptempo.cpp  ****                     tempo_ = static_cast<float>(tapLength_) / tapRatio_ * 0.048f;
 171              		.loc 1 72 21 is_stmt 1 view .LVU58
 172              		.loc 1 72 61 is_stmt 0 view .LVU59
 173 0046 94ED106A 		vldr.32	s12, [r4, #64]
  73:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
  74:taptempo.cpp  ****                     return true;
 174              		.loc 1 74 28 view .LVU60
 175 004a 0120     		movs	r0, #1
  72:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 176              		.loc 1 72 73 view .LVU61
 177 004c DFED116A 		vldr.32	s13, .L16
  72:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 178              		.loc 1 72 61 view .LVU62
 179 0050 C7EE067A 		vdiv.f32	s15, s14, s12
  73:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 180              		.loc 1 73 36 view .LVU63
 181 0054 A361     		str	r3, [r4, #24]
  72:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 6


 182              		.loc 1 72 73 view .LVU64
 183 0056 67EEA67A 		vmul.f32	s15, s15, s13
  72:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 184              		.loc 1 72 28 view .LVU65
 185 005a C4ED0F7A 		vstr.32	s15, [r4, #60]
  73:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 186              		.loc 1 73 21 is_stmt 1 view .LVU66
 187              		.loc 1 74 21 view .LVU67
  75:taptempo.cpp  ****                 }
  76:taptempo.cpp  ****             }
  77:taptempo.cpp  ****         }
  78:taptempo.cpp  ****         //if tap length too long then set tap_flag (to say this is first tap) and reset LFO
  79:taptempo.cpp  ****         else if(tapLength_ > maxtap_)
  80:taptempo.cpp  ****         {
  81:taptempo.cpp  ****             tapflag_ = true;
  82:taptempo.cpp  ****             return false;
  83:taptempo.cpp  ****         }
  84:taptempo.cpp  ****         //if tap time too short do nothing
  85:taptempo.cpp  ****         else if(tapLength_ < mintap_)
  86:taptempo.cpp  ****         {
  87:taptempo.cpp  ****             return false;
  88:taptempo.cpp  ****         }
  89:taptempo.cpp  **** 
  90:taptempo.cpp  ****         else
  91:taptempo.cpp  ****         {
  92:taptempo.cpp  ****             return false;
  93:taptempo.cpp  ****         }
  94:taptempo.cpp  **** 
  95:taptempo.cpp  ****     }
 188              		.loc 1 95 5 is_stmt 0 view .LVU68
 189 005e 10BD     		pop	{r4, pc}
 190              	.LVL5:
 191              	.L7:
  79:taptempo.cpp  ****         {
 192              		.loc 1 79 14 is_stmt 1 view .LVU69
 193 0060 9342     		cmp	r3, r2
 194 0062 01D8     		bhi	.L8
  87:taptempo.cpp  ****         }
 195              		.loc 1 87 20 is_stmt 0 view .LVU70
 196 0064 0020     		movs	r0, #0
 197              		.loc 1 95 5 view .LVU71
 198 0066 10BD     		pop	{r4, pc}
 199              	.LVL6:
 200              	.L8:
  67:taptempo.cpp  ****                     return false;
 201              		.loc 1 67 21 is_stmt 1 view .LVU72
  67:taptempo.cpp  ****                     return false;
 202              		.loc 1 67 30 is_stmt 0 view .LVU73
 203 0068 0123     		movs	r3, #1
  68:taptempo.cpp  ****                 }
 204              		.loc 1 68 28 view .LVU74
 205 006a 0020     		movs	r0, #0
  67:taptempo.cpp  ****                     return false;
 206              		.loc 1 67 30 view .LVU75
 207 006c 84F83430 		strb	r3, [r4, #52]
  68:taptempo.cpp  ****                 }
 208              		.loc 1 68 21 is_stmt 1 view .LVU76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 7


 209              		.loc 1 95 5 is_stmt 0 view .LVU77
 210 0070 10BD     		pop	{r4, pc}
 211              	.LVL7:
 212              	.L15:
  57:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_ * 0.048f;
 213              		.loc 1 57 17 is_stmt 1 view .LVU78
  58:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 214              		.loc 1 58 26 is_stmt 0 view .LVU79
 215 0072 B8EE676A 		vcvt.f32.u32	s12, s15
  58:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 216              		.loc 1 58 57 view .LVU80
 217 0076 D4ED106A 		vldr.32	s13, [r4, #64]
  58:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 218              		.loc 1 58 69 view .LVU81
 219 007a 9FED067A 		vldr.32	s14, .L16
  57:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_ * 0.048f;
 220              		.loc 1 57 26 view .LVU82
 221 007e 0022     		movs	r2, #0
  59:taptempo.cpp  ****                 return true;
 222              		.loc 1 59 32 view .LVU83
 223 0080 A361     		str	r3, [r4, #24]
  58:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 224              		.loc 1 58 57 view .LVU84
 225 0082 C6EE267A 		vdiv.f32	s15, s12, s13
  57:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_ * 0.048f;
 226              		.loc 1 57 26 view .LVU85
 227 0086 84F83420 		strb	r2, [r4, #52]
  58:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 228              		.loc 1 58 17 is_stmt 1 view .LVU86
  58:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 229              		.loc 1 58 69 is_stmt 0 view .LVU87
 230 008a 67EE877A 		vmul.f32	s15, s15, s14
  58:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 231              		.loc 1 58 24 view .LVU88
 232 008e C4ED0F7A 		vstr.32	s15, [r4, #60]
  59:taptempo.cpp  ****                 return true;
 233              		.loc 1 59 17 is_stmt 1 view .LVU89
  60:taptempo.cpp  ****             }
 234              		.loc 1 60 17 view .LVU90
 235              		.loc 1 95 5 is_stmt 0 view .LVU91
 236 0092 10BD     		pop	{r4, pc}
 237              	.LVL8:
 238              	.L17:
 239              		.loc 1 95 5 view .LVU92
 240              		.align	2
 241              	.L16:
 242 0094 A69B443D 		.word	1027906470
 243              		.cfi_endproc
 244              	.LFE3885:
 246              		.section	.text._ZN8Taptempo5clockEm,"ax",%progbits
 247              		.align	1
 248              		.p2align 2,,3
 249              		.global	_ZN8Taptempo5clockEm
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 8


 255              	_ZN8Taptempo5clockEm:
 256              	.LVL9:
 257              	.LFB3886:
  96:taptempo.cpp  **** 
  97:taptempo.cpp  **** bool Taptempo::clock(uint32_t count)
  98:taptempo.cpp  ****     {
 258              		.loc 1 98 5 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
  99:taptempo.cpp  ****         //currentClockTime_ = System::GetUs();    //get current time
 100:taptempo.cpp  ****         //clockLength_ = currentClockTime_ - lastClockTime_;  //calculate length between taps
 101:taptempo.cpp  ****         //lastClockTime_ = currentClockTime_;   //always update lastTime_
 102:taptempo.cpp  ****         uint32_t ClockTempo{count};
 263              		.loc 1 102 9 view .LVU94
 103:taptempo.cpp  ****         //int buffsize{PPQN_};
 104:taptempo.cpp  ****         static uint32_t ClockTempoBuff[24];
 264              		.loc 1 104 9 view .LVU95
 105:taptempo.cpp  ****         static int index{};
 265              		.loc 1 105 9 view .LVU96
 106:taptempo.cpp  ****         //if within tempo limits
 107:taptempo.cpp  ****         if(minclock_ <= ClockTempo && ClockTempo <= maxclock_) 
 266              		.loc 1 107 9 view .LVU97
 267              	.LBB4:
 268 0000 8368     		ldr	r3, [r0, #8]
 269 0002 8B42     		cmp	r3, r1
 270 0004 32D8     		bhi	.L29
 271              		.loc 1 107 36 is_stmt 0 discriminator 1 view .LVU98
 272 0006 C368     		ldr	r3, [r0, #12]
 273 0008 8B42     		cmp	r3, r1
 274              	.LBE4:
  98:taptempo.cpp  ****         //currentClockTime_ = System::GetUs();    //get current time
 275              		.loc 1 98 5 discriminator 1 view .LVU99
 276 000a 70B4     		push	{r4, r5, r6}
 277              		.cfi_def_cfa_offset 12
 278              		.cfi_offset 4, -12
 279              		.cfi_offset 5, -8
 280              		.cfi_offset 6, -4
 281 000c 0446     		mov	r4, r0
 282              	.LBB9:
 283              		.loc 1 107 36 discriminator 1 view .LVU100
 284 000e 2AD3     		bcc	.L21
 285              	.LBB5:
 108:taptempo.cpp  ****         {
 109:taptempo.cpp  ****             //update clockLength_ with rolling average
 110:taptempo.cpp  ****             index = (index + 1) % PPQN_;
 286              		.loc 1 110 13 is_stmt 1 view .LVU101
 287              		.loc 1 110 28 is_stmt 0 view .LVU102
 288 0010 1748     		ldr	r0, .L31
 289              	.LVL10:
 290              		.loc 1 110 35 view .LVU103
 291 0012 666C     		ldr	r6, [r4, #68]
 292              		.loc 1 110 28 view .LVU104
 293 0014 0568     		ldr	r5, [r0]
 111:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 294              		.loc 1 111 35 view .LVU105
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 9


 295 0016 174B     		ldr	r3, .L31+4
 296              	.LBB6:
 112:taptempo.cpp  **** 
 113:taptempo.cpp  ****             uint32_t ClockTempoSum{};
 114:taptempo.cpp  ****             for(int i=0; i <PPQN_; i += 1)
 297              		.loc 1 114 28 view .LVU106
 298 0018 002E     		cmp	r6, #0
 299              	.LBE6:
 110:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 300              		.loc 1 110 28 view .LVU107
 301 001a 05F10102 		add	r2, r5, #1
 110:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 302              		.loc 1 110 33 view .LVU108
 303 001e 92FBF6F5 		sdiv	r5, r2, r6
 304 0022 06FB1525 		mls	r5, r6, r5, r2
 113:taptempo.cpp  ****             for(int i=0; i <PPQN_; i += 1)
 305              		.loc 1 113 22 view .LVU109
 306 0026 4FF00002 		mov	r2, #0
 110:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 307              		.loc 1 110 19 view .LVU110
 308 002a 0560     		str	r5, [r0]
 111:taptempo.cpp  **** 
 309              		.loc 1 111 13 is_stmt 1 view .LVU111
 111:taptempo.cpp  **** 
 310              		.loc 1 111 35 is_stmt 0 view .LVU112
 311 002c 43F82510 		str	r1, [r3, r5, lsl #2]
 113:taptempo.cpp  ****             for(int i=0; i <PPQN_; i += 1)
 312              		.loc 1 113 13 is_stmt 1 view .LVU113
 313              	.LVL11:
 314              		.loc 1 114 13 view .LVU114
 315              	.LBB7:
 316              		.loc 1 114 28 view .LVU115
 317 0030 08DD     		ble	.L22
 318 0032 03EB8600 		add	r0, r3, r6, lsl #2
 319              	.LVL12:
 320              	.L23:
 115:taptempo.cpp  ****             {
 116:taptempo.cpp  ****                 ClockTempoSum += ClockTempoBuff[i];
 321              		.loc 1 116 17 discriminator 2 view .LVU116
 322              		.loc 1 116 50 is_stmt 0 discriminator 2 view .LVU117
 323 0036 53F8041B 		ldr	r1, [r3], #4
 114:taptempo.cpp  ****             {
 324              		.loc 1 114 28 discriminator 2 view .LVU118
 325 003a 8342     		cmp	r3, r0
 326              		.loc 1 116 31 discriminator 2 view .LVU119
 327 003c 0A44     		add	r2, r2, r1
 328              	.LVL13:
 114:taptempo.cpp  ****             {
 329              		.loc 1 114 13 is_stmt 1 discriminator 2 view .LVU120
 114:taptempo.cpp  ****             {
 330              		.loc 1 114 28 discriminator 2 view .LVU121
 331 003e FAD1     		bne	.L23
 332              	.LBE7:
 117:taptempo.cpp  ****             }
 118:taptempo.cpp  **** 
 119:taptempo.cpp  ****             ClockTempo = ClockTempoSum;
 333              		.loc 1 119 13 view .LVU122
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 10


 334              	.LVL14:
 120:taptempo.cpp  ****       
 121:taptempo.cpp  ****             //clock tempo update rate: every pulse if PPQN = 1, or every 12 pulses if PPQN = 24
 122:taptempo.cpp  ****             if(index % ((PPQN_ == 24) ? 12: 1) == 0) 
 335              		.loc 1 122 13 view .LVU123
 336              		.loc 1 122 39 is_stmt 0 view .LVU124
 337 0040 182E     		cmp	r6, #24
 338 0042 08D0     		beq	.L30
 339              	.LVL15:
 340              	.L22:
 123:taptempo.cpp  ****             {
 124:taptempo.cpp  ****                 tempo_ = static_cast<float> (ClockTempo);
 341              		.loc 1 124 17 is_stmt 1 view .LVU125
 342              		.loc 1 124 26 is_stmt 0 view .LVU126
 343 0044 07EE902A 		vmov	s15, r2	@ int
 125:taptempo.cpp  ****                 return true;
 344              		.loc 1 125 24 view .LVU127
 345 0048 0120     		movs	r0, #1
 124:taptempo.cpp  ****                 return true;
 346              		.loc 1 124 26 view .LVU128
 347 004a F8EE677A 		vcvt.f32.u32	s15, s15
 348 004e C4ED0F7A 		vstr.32	s15, [r4, #60]
 349              		.loc 1 125 17 is_stmt 1 view .LVU129
 350              	.LBE5:
 351              	.LBE9:
 126:taptempo.cpp  ****             }
 127:taptempo.cpp  ****             else
 128:taptempo.cpp  ****             {
 129:taptempo.cpp  ****                 return false;
 130:taptempo.cpp  ****             }
 131:taptempo.cpp  ****         }
 132:taptempo.cpp  ****         else
 133:taptempo.cpp  ****         {
 134:taptempo.cpp  ****             return false;
 135:taptempo.cpp  ****         }
 136:taptempo.cpp  ****     }
 352              		.loc 1 136 5 is_stmt 0 view .LVU130
 353 0052 70BC     		pop	{r4, r5, r6}
 354              		.cfi_remember_state
 355              		.cfi_restore 6
 356              		.cfi_restore 5
 357              		.cfi_restore 4
 358              		.cfi_def_cfa_offset 0
 359              	.LVL16:
 360              		.loc 1 136 5 view .LVU131
 361 0054 7047     		bx	lr
 362              	.LVL17:
 363              	.L30:
 364              		.cfi_restore_state
 365              	.LBB10:
 366              	.LBB8:
 367              		.loc 1 136 5 view .LVU132
 368 0056 0848     		ldr	r0, .L31+8
 369 0058 0849     		ldr	r1, .L31+12
 122:taptempo.cpp  ****             {
 370              		.loc 1 122 13 discriminator 4 view .LVU133
 371 005a 094B     		ldr	r3, .L31+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 11


 372 005c 00FB0515 		mla	r5, r0, r5, r1
 373              	.LVL18:
 122:taptempo.cpp  ****             {
 374              		.loc 1 122 13 discriminator 4 view .LVU134
 375 0060 B3EBB50F 		cmp	r3, r5, ror #2
 376 0064 EED2     		bcs	.L22
 377              	.LVL19:
 378              	.L21:
 122:taptempo.cpp  ****             {
 379              		.loc 1 122 13 discriminator 4 view .LVU135
 380              	.LBE8:
 134:taptempo.cpp  ****         }
 381              		.loc 1 134 20 view .LVU136
 382 0066 0020     		movs	r0, #0
 383              	.LBE10:
 384              		.loc 1 136 5 view .LVU137
 385 0068 70BC     		pop	{r4, r5, r6}
 386              		.cfi_restore 6
 387              		.cfi_restore 5
 388              		.cfi_restore 4
 389              		.cfi_def_cfa_offset 0
 390              	.LVL20:
 391              		.loc 1 136 5 view .LVU138
 392 006a 7047     		bx	lr
 393              	.LVL21:
 394              	.L29:
 395              	.LBB11:
 134:taptempo.cpp  ****         }
 396              		.loc 1 134 20 view .LVU139
 397 006c 0020     		movs	r0, #0
 398              	.LVL22:
 134:taptempo.cpp  ****         }
 399              		.loc 1 134 20 view .LVU140
 400              	.LBE11:
 401              		.loc 1 136 5 view .LVU141
 402 006e 7047     		bx	lr
 403              	.L32:
 404              		.align	2
 405              	.L31:
 406 0070 00000000 		.word	.LANCHOR0
 407 0074 00000000 		.word	.LANCHOR1
 408 0078 ABAAAAAA 		.word	-1431655765
 409 007c A8AAAA2A 		.word	715827880
 410 0080 54555515 		.word	357913940
 411              		.cfi_endproc
 412              	.LFE3886:
 414              		.section	.text._ZN8Taptempo14getDelayLengthEv,"ax",%progbits
 415              		.align	1
 416              		.p2align 2,,3
 417              		.global	_ZN8Taptempo14getDelayLengthEv
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 421              		.fpu fpv5-d16
 423              	_ZN8Taptempo14getDelayLengthEv:
 424              	.LVL23:
 425              	.LFB3887:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 12


 137:taptempo.cpp  ****     
 138:taptempo.cpp  ****     //outputs tap length in Us
 139:taptempo.cpp  ****     float Taptempo::getDelayLength()
 140:taptempo.cpp  ****     {
 426              		.loc 1 140 5 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 141:taptempo.cpp  ****         static float tempo_Out{};
 431              		.loc 1 141 9 view .LVU143
 142:taptempo.cpp  ****         static float tempo_last{};
 432              		.loc 1 142 9 view .LVU144
 143:taptempo.cpp  ****         fonepole(tempo_Out,tempo_,(PPQN_ == 24) ? 0.0011f: 0.011f);
 433              		.loc 1 143 9 view .LVU145
 434              	.LBB12:
 435              	.LBB13:
 436              		.file 2 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 13


  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 14


  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 437              		.loc 2 137 9 is_stmt 0 view .LVU146
 438 0000 094B     		ldr	r3, .L36
 439              	.LBE13:
 440              	.LBE12:
 441              		.loc 1 143 17 view .LVU147
 442 0002 D0ED0F7A 		vldr.32	s15, [r0, #60]
 443              	.LBB17:
 444              	.LBB14:
 445              		.loc 2 137 9 view .LVU148
 446 0006 93ED000A 		vldr.32	s0, [r3]
 447              	.LBE14:
 448              	.LBE17:
 449              		.loc 1 143 17 view .LVU149
 450 000a 426C     		ldr	r2, [r0, #68]
 451              	.LBB18:
 452              	.LBB15:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 15


 453              		.loc 2 137 24 view .LVU150
 454 000c 77EEC07A 		vsub.f32	s15, s15, s0
 455              	.LBE15:
 456              	.LBE18:
 457              		.loc 1 143 17 view .LVU151
 458 0010 DFED066A 		vldr.32	s13, .L36+4
 459 0014 182A     		cmp	r2, #24
 460 0016 9FED067A 		vldr.32	s14, .L36+8
 461 001a 07FE267A 		vseleq.f32	s14, s14, s13
 462              	.LVL24:
 463              	.LBB19:
 464              	.LBI12:
 135:../DaisySP/Source/Utility/dsp.h **** {
 465              		.loc 2 135 13 is_stmt 1 view .LVU152
 466              	.LBB16:
 467              		.loc 2 137 5 view .LVU153
 468              		.loc 2 137 9 is_stmt 0 view .LVU154
 469 001e A7EE270A 		vfma.f32	s0, s14, s15
 470 0022 83ED000A 		vstr.32	s0, [r3]
 471              	.LVL25:
 472              		.loc 2 137 9 view .LVU155
 473              	.LBE16:
 474              	.LBE19:
 144:taptempo.cpp  **** 
 145:taptempo.cpp  ****         //if more than .5% of last value
 146:taptempo.cpp  ****         //if( abs( tempo_Out - tempo_last)> (0.005 * tempo_last)) 
 147:taptempo.cpp  ****         //{
 148:taptempo.cpp  ****         //    tempo_last = tempo_Out; //update tempo_last
 149:taptempo.cpp  ****        // }
 150:taptempo.cpp  **** 
 151:taptempo.cpp  ****         return tempo_Out;    //in Us
 475              		.loc 1 151 9 is_stmt 1 view .LVU156
 152:taptempo.cpp  ****     }  
 476              		.loc 1 152 5 is_stmt 0 view .LVU157
 477 0026 7047     		bx	lr
 478              	.L37:
 479              		.align	2
 480              	.L36:
 481 0028 00000000 		.word	.LANCHOR2
 482 002c 5839343C 		.word	1010055512
 483 0030 E02D903A 		.word	982527456
 484              		.cfi_endproc
 485              	.LFE3887:
 487              		.section	.text._ZN8Taptempo10getTapFreqEv,"ax",%progbits
 488              		.align	1
 489              		.p2align 2,,3
 490              		.global	_ZN8Taptempo10getTapFreqEv
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv5-d16
 496              	_ZN8Taptempo10getTapFreqEv:
 497              	.LVL26:
 498              	.LFB3888:
 153:taptempo.cpp  ****     
 154:taptempo.cpp  ****     //outputs tap frequency in Hz
 155:taptempo.cpp  ****     float Taptempo::getTapFreq()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 16


 156:taptempo.cpp  ****     {
 499              		.loc 1 156 5 is_stmt 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 157:taptempo.cpp  ****         return 1.0f / (tempo_ * 0.0000208333f); //in Hz
 504              		.loc 1 157 9 view .LVU159
 505              		.loc 1 157 31 is_stmt 0 view .LVU160
 506 0000 9FED057A 		vldr.32	s14, .L39
 507              		.loc 1 157 46 view .LVU161
 508 0004 B7EE000A 		vmov.f32	s0, #1.0e+0
 509              		.loc 1 157 31 view .LVU162
 510 0008 D0ED0F7A 		vldr.32	s15, [r0, #60]
 511 000c 67EE877A 		vmul.f32	s15, s15, s14
 158:taptempo.cpp  ****     }
 512              		.loc 1 158 5 view .LVU163
 513 0010 80EE270A 		vdiv.f32	s0, s0, s15
 514 0014 7047     		bx	lr
 515              	.L40:
 516 0016 00BF     		.align	2
 517              	.L39:
 518 0018 2CC3AE37 		.word	934200108
 519              		.cfi_endproc
 520              	.LFE3888:
 522              		.section	.text._ZN8Taptempo12getTapLengthEv,"ax",%progbits
 523              		.align	1
 524              		.p2align 2,,3
 525              		.global	_ZN8Taptempo12getTapLengthEv
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv5-d16
 531              	_ZN8Taptempo12getTapLengthEv:
 532              	.LVL27:
 533              	.LFB3889:
 159:taptempo.cpp  **** 
 160:taptempo.cpp  ****     //outputs delay length in Us;
 161:taptempo.cpp  ****     float Taptempo::getTapLength()
 162:taptempo.cpp  ****     {
 534              		.loc 1 162 5 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 163:taptempo.cpp  ****         return static_cast<float>(lastTapLength_);
 539              		.loc 1 163 9 view .LVU165
 540              		.loc 1 163 49 is_stmt 0 view .LVU166
 541 0000 90ED060A 		vldr.32	s0, [r0, #24]	@ int
 164:taptempo.cpp  ****     }
 542              		.loc 1 164 5 view .LVU167
 543 0004 B8EE400A 		vcvt.f32.u32	s0, s0
 544 0008 7047     		bx	lr
 545              		.cfi_endproc
 546              	.LFE3889:
 548 000a 00BF     		.section	.text._ZN8Taptempo11setTapRatioEf,"ax",%progbits
 549              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 17


 550              		.p2align 2,,3
 551              		.global	_ZN8Taptempo11setTapRatioEf
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv5-d16
 557              	_ZN8Taptempo11setTapRatioEf:
 558              	.LVL28:
 559              	.LFB3890:
 165:taptempo.cpp  **** 
 166:taptempo.cpp  ****     void Taptempo::setTapRatio(float tapRatio)
 167:taptempo.cpp  ****     {
 560              		.loc 1 167 5 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 168:taptempo.cpp  ****         tapRatio_ = tapRatio;
 565              		.loc 1 168 9 view .LVU169
 566              		.loc 1 168 19 is_stmt 0 view .LVU170
 567 0000 80ED100A 		vstr.32	s0, [r0, #64]
 169:taptempo.cpp  ****     }
 568              		.loc 1 169 5 view .LVU171
 569 0004 7047     		bx	lr
 570              		.cfi_endproc
 571              	.LFE3890:
 573 0006 00BF     		.section	.text._ZN8Taptempo12setTapLengthEf,"ax",%progbits
 574              		.align	1
 575              		.p2align 2,,3
 576              		.global	_ZN8Taptempo12setTapLengthEf
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu fpv5-d16
 582              	_ZN8Taptempo12setTapLengthEf:
 583              	.LVL29:
 584              	.LFB3891:
 170:taptempo.cpp  ****     
 171:taptempo.cpp  ****     void Taptempo::setTapLength(float tapLength)
 172:taptempo.cpp  ****     {
 585              		.loc 1 172 5 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 173:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 590              		.loc 1 173 9 view .LVU173
 591              		.loc 1 173 26 is_stmt 0 view .LVU174
 592 0000 FCEEC07A 		vcvt.u32.f32	s15, s0
 174:taptempo.cpp  ****         tempo_ = tapLength / tapRatio_; 
 593              		.loc 1 174 28 view .LVU175
 594 0004 90ED107A 		vldr.32	s14, [r0, #64]
 173:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 595              		.loc 1 173 26 view .LVU176
 596 0008 17EE903A 		vmov	r3, s15	@ int
 597              		.loc 1 174 28 view .LVU177
 598 000c C0EE077A 		vdiv.f32	s15, s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 18


 173:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 599              		.loc 1 173 26 view .LVU178
 600 0010 8361     		str	r3, [r0, #24]
 601              		.loc 1 174 9 is_stmt 1 view .LVU179
 602              		.loc 1 174 16 is_stmt 0 view .LVU180
 603 0012 C0ED0F7A 		vstr.32	s15, [r0, #60]
 175:taptempo.cpp  ****     }
 604              		.loc 1 175 5 view .LVU181
 605 0016 7047     		bx	lr
 606              		.cfi_endproc
 607              	.LFE3891:
 609              		.section	.bss._ZZN8Taptempo14getDelayLengthEvE9tempo_Out,"aw",%nobits
 610              		.align	2
 611              		.set	.LANCHOR2,. + 0
 614              	_ZZN8Taptempo14getDelayLengthEvE9tempo_Out:
 615 0000 00000000 		.space	4
 616              		.section	.bss._ZZN8Taptempo5clockEmE14ClockTempoBuff,"aw",%nobits
 617              		.align	2
 618              		.set	.LANCHOR1,. + 0
 621              	_ZZN8Taptempo5clockEmE14ClockTempoBuff:
 622 0000 00000000 		.space	96
 622      00000000 
 622      00000000 
 622      00000000 
 622      00000000 
 623              		.section	.bss._ZZN8Taptempo5clockEmE5index,"aw",%nobits
 624              		.align	2
 625              		.set	.LANCHOR0,. + 0
 628              	_ZZN8Taptempo5clockEmE5index:
 629 0000 00000000 		.space	4
 630              		.text
 631              	.Letext0:
 632              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 633              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 634              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 635              		.file 6 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 636              		.file 7 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 637              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/inclu
 638              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/c
 639              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 640              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 641              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 642              		.file 13 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 643              		.file 14 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 644              		.file 15 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 645              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 646              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 647              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 648              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 649              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 650              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 651              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 652              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 653              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 654              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 655              		.file 26 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 656              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 19


 657              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 658              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 659              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 660              		.file 31 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 661              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 662              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 663              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 664              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 665              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 666              		.file 37 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 667              		.file 38 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 668              		.file 39 "../DaisySP/Source/Control/adenv.h"
 669              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 670              		.file 41 "<built-in>"
 671              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 672              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 673              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 674              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 675              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 676              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 677              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 678              		.file 49 "../libdaisy/src/per/tim.h"
 679              		.file 50 "../libdaisy/src/sys/system.h"
 680              		.file 51 "../libdaisy/src/util/wav_format.h"
 681              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 682              		.file 53 "../libdaisy/src/util/oled_fonts.h"
 683              		.file 54 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 684              		.file 55 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 685              		.file 56 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 686              		.file 57 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 687              		.file 58 "../libdaisy/src/util/sd_diskio.h"
 688              		.file 59 "../libdaisy/src/sys/fatfs.h"
 689              		.file 60 "taptempo.h"
 690              		.file 61 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 taptempo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:17     .text._ZN8Taptempo4initEmmf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:26     .text._ZN8Taptempo4initEmmf:0000000000000000 _ZN8Taptempo4initEmmf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:97     .text._ZN8Taptempo4initEmmf:0000000000000034 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:102    .text._ZN8Taptempo3tapEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:110    .text._ZN8Taptempo3tapEv:0000000000000000 _ZN8Taptempo3tapEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:242    .text._ZN8Taptempo3tapEv:0000000000000094 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:247    .text._ZN8Taptempo5clockEm:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:255    .text._ZN8Taptempo5clockEm:0000000000000000 _ZN8Taptempo5clockEm
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:406    .text._ZN8Taptempo5clockEm:0000000000000070 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:415    .text._ZN8Taptempo14getDelayLengthEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:423    .text._ZN8Taptempo14getDelayLengthEv:0000000000000000 _ZN8Taptempo14getDelayLengthEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:481    .text._ZN8Taptempo14getDelayLengthEv:0000000000000028 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:488    .text._ZN8Taptempo10getTapFreqEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:496    .text._ZN8Taptempo10getTapFreqEv:0000000000000000 _ZN8Taptempo10getTapFreqEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:518    .text._ZN8Taptempo10getTapFreqEv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:523    .text._ZN8Taptempo12getTapLengthEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:531    .text._ZN8Taptempo12getTapLengthEv:0000000000000000 _ZN8Taptempo12getTapLengthEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:549    .text._ZN8Taptempo11setTapRatioEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:557    .text._ZN8Taptempo11setTapRatioEf:0000000000000000 _ZN8Taptempo11setTapRatioEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:574    .text._ZN8Taptempo12setTapLengthEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:582    .text._ZN8Taptempo12setTapLengthEf:0000000000000000 _ZN8Taptempo12setTapLengthEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:610    .bss._ZZN8Taptempo14getDelayLengthEvE9tempo_Out:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:614    .bss._ZZN8Taptempo14getDelayLengthEvE9tempo_Out:0000000000000000 _ZZN8Taptempo14getDelayLengthEvE9tempo_Out
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:617    .bss._ZZN8Taptempo5clockEmE14ClockTempoBuff:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:621    .bss._ZZN8Taptempo5clockEmE14ClockTempoBuff:0000000000000000 _ZZN8Taptempo5clockEmE14ClockTempoBuff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:624    .bss._ZZN8Taptempo5clockEmE5index:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccAQFfbK.s:628    .bss._ZZN8Taptempo5clockEmE5index:0000000000000000 _ZZN8Taptempo5clockEmE5index

UNDEFINED SYMBOLS
_ZN5daisy6System5GetUsEv
