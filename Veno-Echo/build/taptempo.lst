ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"taptempo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN8Taptempo4initEmmf,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN8Taptempo4initEmmf
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN8Taptempo4initEmmf:
  27              	.LVL0:
  28              	.LFB3884:
  29              		.file 1 "taptempo.cpp"
   1:taptempo.cpp  **** // Copyright 2021 Adam Fulford
   2:taptempo.cpp  **** // 
   3:taptempo.cpp  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.cpp  **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.cpp  **** // in the Software without restriction, including without limitation the rights
   6:taptempo.cpp  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.cpp  **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.cpp  **** // furnished to do so, subject to the following conditions:
   9:taptempo.cpp  **** // 
  10:taptempo.cpp  **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.cpp  **** // all copies or substantial portions of the Software.
  12:taptempo.cpp  **** // 
  13:taptempo.cpp  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.cpp  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.cpp  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.cpp  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.cpp  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.cpp  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.cpp  **** // THE SOFTWARE.
  20:taptempo.cpp  **** // 
  21:taptempo.cpp  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.cpp  **** 
  23:taptempo.cpp  **** #include "taptempo.h"
  24:taptempo.cpp  **** 
  25:taptempo.cpp  ****     //set mintap (ms), maxtap (ms), tap tolerance
  26:taptempo.cpp  ****     void Taptempo::init(uint32_t mintap, uint32_t maxtap, float tap_tolerance)
  27:taptempo.cpp  ****     {
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  28:taptempo.cpp  ****         mintap_ = mintap;
  35              		.loc 1 28 9 view .LVU1
  29:taptempo.cpp  ****         maxtap_ = maxtap;
  30:taptempo.cpp  ****         tap_tolerance_ = tap_tolerance;
  31:taptempo.cpp  ****         tapLength_ = 0;
  36              		.loc 1 31 20 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  30:taptempo.cpp  ****         tapLength_ = 0;
  38              		.loc 1 30 24 view .LVU3
  39 0002 80ED0D0A 		vstr.32	s0, [r0, #52]
  27:taptempo.cpp  ****         mintap_ = mintap;
  40              		.loc 1 27 5 view .LVU4
  41 0006 30B4     		push	{r4, r5}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 5, -4
  29:taptempo.cpp  ****         maxtap_ = maxtap;
  45              		.loc 1 29 17 view .LVU5
  46 0008 C0E90012 		strd	r1, r2, [r0]
  30:taptempo.cpp  ****         tapLength_ = 0;
  47              		.loc 1 30 9 is_stmt 1 view .LVU6
  48              		.loc 1 31 9 view .LVU7
  32:taptempo.cpp  ****         lastTapLength_ = 0;
  33:taptempo.cpp  ****         tempo_ = 500000; //in Us. Default 120BPM
  34:taptempo.cpp  ****         tempoFloat_ = 500000.0f;
  35:taptempo.cpp  ****         lastTime_ = 0;
  36:taptempo.cpp  ****         currentTime_ = 0;
  37:taptempo.cpp  ****         tapflag_ = false;
  38:taptempo.cpp  ****         tapRatio_ = 1.0;
  49              		.loc 1 38 19 is_stmt 0 view .LVU8
  50 000c 4FF07E54 		mov	r4, #1065353216
  33:taptempo.cpp  ****         tempoFloat_ = 500000.0f;
  51              		.loc 1 33 16 view .LVU9
  52 0010 064D     		ldr	r5, .L4
  34:taptempo.cpp  ****         lastTime_ = 0;
  53              		.loc 1 34 21 view .LVU10
  54 0012 074A     		ldr	r2, .L4+4
  55              	.LVL1:
  33:taptempo.cpp  ****         tempoFloat_ = 500000.0f;
  56              		.loc 1 33 16 view .LVU11
  57 0014 C562     		str	r5, [r0, #44]
  58              		.loc 1 38 19 view .LVU12
  59 0016 C463     		str	r4, [r0, #60]	@ float
  34:taptempo.cpp  ****         lastTime_ = 0;
  60              		.loc 1 34 21 view .LVU13
  61 0018 8263     		str	r2, [r0, #56]	@ float
  35:taptempo.cpp  ****         currentTime_ = 0;
  62              		.loc 1 35 19 view .LVU14
  63 001a 0361     		str	r3, [r0, #16]
  36:taptempo.cpp  ****         tapflag_ = false;
  64              		.loc 1 36 22 view .LVU15
  65 001c 8360     		str	r3, [r0, #8]
  37:taptempo.cpp  ****         tapRatio_ = 1.0;
  66              		.loc 1 37 18 view .LVU16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 3


  67 001e 80F83030 		strb	r3, [r0, #48]
  39:taptempo.cpp  **** 
  40:taptempo.cpp  ****         //dsy_tim_init(); //start timer
  41:taptempo.cpp  ****         //dsy_tim_start();
  42:taptempo.cpp  ****     }
  68              		.loc 1 42 5 view .LVU17
  69 0022 30BC     		pop	{r4, r5}
  70              		.cfi_restore 5
  71              		.cfi_restore 4
  72              		.cfi_def_cfa_offset 0
  32:taptempo.cpp  ****         tempo_ = 500000; //in Us. Default 120BPM
  73              		.loc 1 32 24 view .LVU18
  74 0024 C0E90633 		strd	r3, r3, [r0, #24]
  33:taptempo.cpp  ****         tempoFloat_ = 500000.0f;
  75              		.loc 1 33 9 is_stmt 1 view .LVU19
  34:taptempo.cpp  ****         lastTime_ = 0;
  76              		.loc 1 34 9 view .LVU20
  35:taptempo.cpp  ****         currentTime_ = 0;
  77              		.loc 1 35 9 view .LVU21
  36:taptempo.cpp  ****         tapflag_ = false;
  78              		.loc 1 36 9 view .LVU22
  37:taptempo.cpp  ****         tapRatio_ = 1.0;
  79              		.loc 1 37 9 view .LVU23
  38:taptempo.cpp  **** 
  80              		.loc 1 38 9 view .LVU24
  81              		.loc 1 42 5 is_stmt 0 view .LVU25
  82 0028 7047     		bx	lr
  83              	.L5:
  84 002a 00BF     		.align	2
  85              	.L4:
  86 002c 20A10700 		.word	500000
  87 0030 0024F448 		.word	1223959552
  88              		.cfi_endproc
  89              	.LFE3884:
  91              		.section	.text._ZN8Taptempo3tapEv,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.global	_ZN8Taptempo3tapEv
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN8Taptempo3tapEv:
 101              	.LVL2:
 102              	.LFB3885:
  43:taptempo.cpp  ****     
  44:taptempo.cpp  ****     //call when tap is triggered. currentTime in ms. Returns high if tempo updated
  45:taptempo.cpp  ****     bool Taptempo::tap()
  46:taptempo.cpp  ****     {
 103              		.loc 1 46 5 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
  47:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 107              		.loc 1 47 9 view .LVU27
  46:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 108              		.loc 1 46 5 is_stmt 0 view .LVU28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 4


 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
  46:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 113              		.loc 1 46 5 view .LVU29
 114 0002 0446     		mov	r4, r0
 115              		.loc 1 47 37 view .LVU30
 116 0004 FFF7FEFF 		bl	_ZN5daisy6System5GetUsEv
 117              	.LVL3:
  48:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 118              		.loc 1 48 35 view .LVU31
 119 0008 2369     		ldr	r3, [r4, #16]
  49:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
  50:taptempo.cpp  ****         
  51:taptempo.cpp  ****         if(mintap_ <= tapLength_ && tapLength_ <= maxtap_)  //if between limits
 120              		.loc 1 51 9 view .LVU32
 121 000a 2268     		ldr	r2, [r4]
  48:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 122              		.loc 1 48 35 view .LVU33
 123 000c C31A     		subs	r3, r0, r3
  47:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 124              		.loc 1 47 22 view .LVU34
 125 000e A060     		str	r0, [r4, #8]
  48:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 126              		.loc 1 48 9 is_stmt 1 view .LVU35
  49:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 127              		.loc 1 49 19 is_stmt 0 view .LVU36
 128 0010 2061     		str	r0, [r4, #16]
 129              		.loc 1 51 9 view .LVU37
 130 0012 9342     		cmp	r3, r2
  48:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 131              		.loc 1 48 20 view .LVU38
 132 0014 E361     		str	r3, [r4, #28]
  49:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 133              		.loc 1 49 9 is_stmt 1 view .LVU39
 134              		.loc 1 51 9 view .LVU40
 135              		.loc 1 51 34 is_stmt 0 view .LVU41
 136 0016 6268     		ldr	r2, [r4, #4]
 137              		.loc 1 51 9 view .LVU42
 138 0018 26D3     		bcc	.L7
 139              		.loc 1 51 34 discriminator 1 view .LVU43
 140 001a 9342     		cmp	r3, r2
 141 001c 28D8     		bhi	.L8
  52:taptempo.cpp  ****         {
  53:taptempo.cpp  ****             if(tapflag_)
 142              		.loc 1 53 13 is_stmt 1 view .LVU44
 143              		.loc 1 53 16 is_stmt 0 view .LVU45
 144 001e 94F83000 		ldrb	r0, [r4, #48]	@ zero_extendqisi2
  54:taptempo.cpp  ****             {
  55:taptempo.cpp  ****                 tapflag_ = false;   //reset tapflag
  56:taptempo.cpp  ****                 tempoFloat_ = static_cast<float>(tapLength_) / tapRatio_;
 145              		.loc 1 56 31 view .LVU46
 146 0022 07EE903A 		vmov	s15, r3	@ int
  53:taptempo.cpp  ****             {
 147              		.loc 1 53 13 view .LVU47
 148 0026 40BB     		cbnz	r0, .L15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 5


  57:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
  58:taptempo.cpp  ****                 tempo_ = static_cast<uint32_t>(tempoFloat_ / 24.0f);
  59:taptempo.cpp  ****                 return true;
  60:taptempo.cpp  ****             }
  61:taptempo.cpp  **** 
  62:taptempo.cpp  ****             else    //tapflag_ not set
  63:taptempo.cpp  ****             {
  64:taptempo.cpp  ****                 if(static_cast<float>(tapLength_) >= tap_tolerance_ * static_cast<float>(lastTapLen
 149              		.loc 1 64 17 is_stmt 1 view .LVU48
 150              		.loc 1 64 20 is_stmt 0 view .LVU49
 151 0028 B8EE677A 		vcvt.f32.u32	s14, s15
 152              		.loc 1 64 71 view .LVU50
 153 002c D4ED067A 		vldr.32	s15, [r4, #24]	@ int
 154              		.loc 1 64 69 view .LVU51
 155 0030 D4ED0D6A 		vldr.32	s13, [r4, #52]
 156              		.loc 1 64 71 view .LVU52
 157 0034 F8EE677A 		vcvt.f32.u32	s15, s15
 158              		.loc 1 64 69 view .LVU53
 159 0038 67EEA67A 		vmul.f32	s15, s15, s13
 160              		.loc 1 64 17 view .LVU54
 161 003c B4EEE77A 		vcmpe.f32	s14, s15
 162 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 163 0044 14DA     		bge	.L8
  65:taptempo.cpp  ****                 {
  66:taptempo.cpp  ****                     tapflag_ = true;
  67:taptempo.cpp  ****                     return false;
  68:taptempo.cpp  ****                 }
  69:taptempo.cpp  ****                 else
  70:taptempo.cpp  ****                 {
  71:taptempo.cpp  ****                     tempoFloat_ = static_cast<float>(tapLength_) / tapRatio_;
 164              		.loc 1 71 21 is_stmt 1 view .LVU55
 165              		.loc 1 71 66 is_stmt 0 view .LVU56
 166 0046 D4ED0F7A 		vldr.32	s15, [r4, #60]
  72:taptempo.cpp  ****                     tempo_ = static_cast<uint32_t>(tempoFloat_ / 24.0f);
 167              		.loc 1 72 64 view .LVU57
 168 004a B3EE086A 		vmov.f32	s12, #2.4e+1
  73:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
  74:taptempo.cpp  ****                     return true;
 169              		.loc 1 74 28 view .LVU58
 170 004e 0120     		movs	r0, #1
  73:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 171              		.loc 1 73 36 view .LVU59
 172 0050 A361     		str	r3, [r4, #24]
  71:taptempo.cpp  ****                     tempo_ = static_cast<uint32_t>(tempoFloat_ / 24.0f);
 173              		.loc 1 71 66 view .LVU60
 174 0052 C7EE276A 		vdiv.f32	s13, s14, s15
  72:taptempo.cpp  ****                     tempo_ = static_cast<uint32_t>(tempoFloat_ / 24.0f);
 175              		.loc 1 72 64 view .LVU61
 176 0056 C6EE867A 		vdiv.f32	s15, s13, s12
  71:taptempo.cpp  ****                     tempo_ = static_cast<uint32_t>(tempoFloat_ / 24.0f);
 177              		.loc 1 71 33 view .LVU62
 178 005a C4ED0E6A 		vstr.32	s13, [r4, #56]
  72:taptempo.cpp  ****                     tempo_ = static_cast<uint32_t>(tempoFloat_ / 24.0f);
 179              		.loc 1 72 21 is_stmt 1 view .LVU63
  72:taptempo.cpp  ****                     tempo_ = static_cast<uint32_t>(tempoFloat_ / 24.0f);
 180              		.loc 1 72 30 is_stmt 0 view .LVU64
 181 005e FCEEE77A 		vcvt.u32.f32	s15, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 6


 182 0062 C4ED0B7A 		vstr.32	s15, [r4, #44]	@ int
  73:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 183              		.loc 1 73 21 is_stmt 1 view .LVU65
 184              		.loc 1 74 21 view .LVU66
  75:taptempo.cpp  ****                 }
  76:taptempo.cpp  ****             }
  77:taptempo.cpp  ****         }
  78:taptempo.cpp  ****         //if tap length too long then set tap_flag (to say this is first tap) and reset LFO
  79:taptempo.cpp  ****         else if(tapLength_ > maxtap_)
  80:taptempo.cpp  ****         {
  81:taptempo.cpp  ****             tapflag_ = true;
  82:taptempo.cpp  ****             return false;
  83:taptempo.cpp  ****         }
  84:taptempo.cpp  ****         //if tap time too short do nothing
  85:taptempo.cpp  ****         else if(tapLength_ < mintap_)
  86:taptempo.cpp  ****         {
  87:taptempo.cpp  ****             return false;
  88:taptempo.cpp  ****         }
  89:taptempo.cpp  **** 
  90:taptempo.cpp  ****         else
  91:taptempo.cpp  ****         {
  92:taptempo.cpp  ****             return false;
  93:taptempo.cpp  ****         }
  94:taptempo.cpp  **** 
  95:taptempo.cpp  ****     }
 185              		.loc 1 95 5 is_stmt 0 view .LVU67
 186 0066 10BD     		pop	{r4, pc}
 187              	.LVL4:
 188              	.L7:
  79:taptempo.cpp  ****         {
 189              		.loc 1 79 14 is_stmt 1 view .LVU68
 190 0068 9342     		cmp	r3, r2
 191 006a 01D8     		bhi	.L8
  87:taptempo.cpp  ****         }
 192              		.loc 1 87 20 is_stmt 0 view .LVU69
 193 006c 0020     		movs	r0, #0
 194              		.loc 1 95 5 view .LVU70
 195 006e 10BD     		pop	{r4, pc}
 196              	.LVL5:
 197              	.L8:
  66:taptempo.cpp  ****                     return false;
 198              		.loc 1 66 21 is_stmt 1 view .LVU71
  66:taptempo.cpp  ****                     return false;
 199              		.loc 1 66 30 is_stmt 0 view .LVU72
 200 0070 0123     		movs	r3, #1
  67:taptempo.cpp  ****                 }
 201              		.loc 1 67 28 view .LVU73
 202 0072 0020     		movs	r0, #0
  66:taptempo.cpp  ****                     return false;
 203              		.loc 1 66 30 view .LVU74
 204 0074 84F83030 		strb	r3, [r4, #48]
  67:taptempo.cpp  ****                 }
 205              		.loc 1 67 21 is_stmt 1 view .LVU75
 206              		.loc 1 95 5 is_stmt 0 view .LVU76
 207 0078 10BD     		pop	{r4, pc}
 208              	.LVL6:
 209              	.L15:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 7


  55:taptempo.cpp  ****                 tempoFloat_ = static_cast<float>(tapLength_) / tapRatio_;
 210              		.loc 1 55 17 is_stmt 1 view .LVU77
  56:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 211              		.loc 1 56 31 is_stmt 0 view .LVU78
 212 007a B8EE676A 		vcvt.f32.u32	s12, s15
  56:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 213              		.loc 1 56 62 view .LVU79
 214 007e D4ED0F7A 		vldr.32	s15, [r4, #60]
  58:taptempo.cpp  ****                 return true;
 215              		.loc 1 58 60 view .LVU80
 216 0082 F3EE086A 		vmov.f32	s13, #2.4e+1
  55:taptempo.cpp  ****                 tempoFloat_ = static_cast<float>(tapLength_) / tapRatio_;
 217              		.loc 1 55 26 view .LVU81
 218 0086 0022     		movs	r2, #0
  57:taptempo.cpp  ****                 tempo_ = static_cast<uint32_t>(tempoFloat_ / 24.0f);
 219              		.loc 1 57 32 view .LVU82
 220 0088 A361     		str	r3, [r4, #24]
  56:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 221              		.loc 1 56 62 view .LVU83
 222 008a 86EE277A 		vdiv.f32	s14, s12, s15
  55:taptempo.cpp  ****                 tempoFloat_ = static_cast<float>(tapLength_) / tapRatio_;
 223              		.loc 1 55 26 view .LVU84
 224 008e 84F83020 		strb	r2, [r4, #48]
  56:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 225              		.loc 1 56 17 is_stmt 1 view .LVU85
  58:taptempo.cpp  ****                 return true;
 226              		.loc 1 58 60 is_stmt 0 view .LVU86
 227 0092 C7EE267A 		vdiv.f32	s15, s14, s13
  56:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 228              		.loc 1 56 29 view .LVU87
 229 0096 84ED0E7A 		vstr.32	s14, [r4, #56]
  57:taptempo.cpp  ****                 tempo_ = static_cast<uint32_t>(tempoFloat_ / 24.0f);
 230              		.loc 1 57 17 is_stmt 1 view .LVU88
  58:taptempo.cpp  ****                 return true;
 231              		.loc 1 58 17 view .LVU89
  58:taptempo.cpp  ****                 return true;
 232              		.loc 1 58 26 is_stmt 0 view .LVU90
 233 009a FCEEE77A 		vcvt.u32.f32	s15, s15
 234 009e C4ED0B7A 		vstr.32	s15, [r4, #44]	@ int
  59:taptempo.cpp  ****             }
 235              		.loc 1 59 17 is_stmt 1 view .LVU91
 236              		.loc 1 95 5 is_stmt 0 view .LVU92
 237 00a2 10BD     		pop	{r4, pc}
 238              		.loc 1 95 5 view .LVU93
 239              		.cfi_endproc
 240              	.LFE3885:
 242              		.section	.text._ZN8Taptempo5clockEv,"ax",%progbits
 243              		.align	1
 244              		.p2align 2,,3
 245              		.global	_ZN8Taptempo5clockEv
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv5-d16
 251              	_ZN8Taptempo5clockEv:
 252              	.LVL7:
 253              	.LFB3886:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 8


  96:taptempo.cpp  **** 
  97:taptempo.cpp  ****     bool Taptempo::clock()
  98:taptempo.cpp  ****     {
 254              		.loc 1 98 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
  99:taptempo.cpp  ****         currentClockTime_ = System::GetUs();    //get current time
 258              		.loc 1 99 9 view .LVU95
  98:taptempo.cpp  ****         currentClockTime_ = System::GetUs();    //get current time
 259              		.loc 1 98 5 is_stmt 0 view .LVU96
 260 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 261              		.cfi_def_cfa_offset 24
 262              		.cfi_offset 3, -24
 263              		.cfi_offset 4, -20
 264              		.cfi_offset 5, -16
 265              		.cfi_offset 6, -12
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
  98:taptempo.cpp  ****         currentClockTime_ = System::GetUs();    //get current time
 268              		.loc 1 98 5 view .LVU97
 269 0002 0546     		mov	r5, r0
 270              		.loc 1 99 42 view .LVU98
 271 0004 FFF7FEFF 		bl	_ZN5daisy6System5GetUsEv
 272              	.LVL8:
 100:taptempo.cpp  ****         clockLength_ = currentClockTime_ - lastClockTime_;  //calculate length between taps
 273              		.loc 1 100 42 view .LVU99
 274 0008 6969     		ldr	r1, [r5, #20]
 275              	.LBB2:
 101:taptempo.cpp  ****         lastClockTime_ = currentClockTime_;   //always update lastTime_
 102:taptempo.cpp  ****         uint32_t ClockTempo{clockLength_};
 103:taptempo.cpp  ****         static uint32_t ClockTempoBuff[24];
 104:taptempo.cpp  ****         static int index{};
 105:taptempo.cpp  ****         //if within tempo limits
 106:taptempo.cpp  ****         if(mintap_ <= ClockTempo && ClockTempo <= maxtap_) 
 276              		.loc 1 106 9 view .LVU100
 277 000a 2B68     		ldr	r3, [r5]
 278              	.LBE2:
 100:taptempo.cpp  ****         clockLength_ = currentClockTime_ - lastClockTime_;  //calculate length between taps
 279              		.loc 1 100 42 view .LVU101
 280 000c 411A     		subs	r1, r0, r1
  99:taptempo.cpp  ****         clockLength_ = currentClockTime_ - lastClockTime_;  //calculate length between taps
 281              		.loc 1 99 27 view .LVU102
 282 000e E860     		str	r0, [r5, #12]
 100:taptempo.cpp  ****         clockLength_ = currentClockTime_ - lastClockTime_;  //calculate length between taps
 283              		.loc 1 100 9 is_stmt 1 view .LVU103
 101:taptempo.cpp  ****         lastClockTime_ = currentClockTime_;   //always update lastTime_
 284              		.loc 1 101 24 is_stmt 0 view .LVU104
 285 0010 6861     		str	r0, [r5, #20]
 286              	.LBB5:
 287              		.loc 1 106 9 view .LVU105
 288 0012 9942     		cmp	r1, r3
 289              	.LBE5:
 100:taptempo.cpp  ****         clockLength_ = currentClockTime_ - lastClockTime_;  //calculate length between taps
 290              		.loc 1 100 22 view .LVU106
 291 0014 2962     		str	r1, [r5, #32]
 101:taptempo.cpp  ****         lastClockTime_ = currentClockTime_;   //always update lastTime_
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 9


 292              		.loc 1 101 9 is_stmt 1 view .LVU107
 102:taptempo.cpp  ****         static uint32_t ClockTempoBuff[24];
 293              		.loc 1 102 9 view .LVU108
 294              	.LVL9:
 103:taptempo.cpp  ****         static int index{};
 295              		.loc 1 103 9 view .LVU109
 104:taptempo.cpp  ****         //if within tempo limits
 296              		.loc 1 104 9 view .LVU110
 297              		.loc 1 106 9 view .LVU111
 298              	.LBB6:
 299 0016 27D3     		bcc	.L19
 300              		.loc 1 106 34 is_stmt 0 discriminator 1 view .LVU112
 301 0018 6B68     		ldr	r3, [r5, #4]
 302 001a 9942     		cmp	r1, r3
 303 001c 24D8     		bhi	.L19
 304              	.LBB3:
 107:taptempo.cpp  ****         {
 108:taptempo.cpp  ****             //update clockLength_ with rolling average
 109:taptempo.cpp  ****             index = (index + 1) % 24;
 305              		.loc 1 109 13 is_stmt 1 view .LVU113
 306              		.loc 1 109 28 is_stmt 0 view .LVU114
 307 001e DFF858C0 		ldr	ip, .L23+12
 110:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 111:taptempo.cpp  **** 
 112:taptempo.cpp  ****             uint32_t ClockTempoSum{};
 308              		.loc 1 112 22 view .LVU115
 309 0022 0022     		movs	r2, #0
 109:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 310              		.loc 1 109 33 view .LVU116
 311 0024 114B     		ldr	r3, .L23
 109:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 312              		.loc 1 109 28 view .LVU117
 313 0026 DCF80060 		ldr	r6, [ip]
 110:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 314              		.loc 1 110 35 view .LVU118
 315 002a 114F     		ldr	r7, .L23+4
 109:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 316              		.loc 1 109 28 view .LVU119
 317 002c 0136     		adds	r6, r6, #1
 318 002e 07F15C04 		add	r4, r7, #92
 109:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 319              		.loc 1 109 33 view .LVU120
 320 0032 83FB0603 		smull	r0, r3, r3, r6
 321 0036 F017     		asrs	r0, r6, #31
 322 0038 C0EBA300 		rsb	r0, r0, r3, asr #2
 323 003c 3B1F     		subs	r3, r7, #4
 324 003e 00EB4000 		add	r0, r0, r0, lsl #1
 325 0042 A6EBC000 		sub	r0, r6, r0, lsl #3
 109:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 326              		.loc 1 109 19 view .LVU121
 327 0046 CCF80000 		str	r0, [ip]
 110:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 328              		.loc 1 110 13 is_stmt 1 view .LVU122
 110:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 329              		.loc 1 110 35 is_stmt 0 view .LVU123
 330 004a 47F82010 		str	r1, [r7, r0, lsl #2]
 331              		.loc 1 112 13 is_stmt 1 view .LVU124
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 10


 332              	.LVL10:
 113:taptempo.cpp  ****             for(int i=0; i <24; i += 1)
 333              		.loc 1 113 13 view .LVU125
 334              	.LBB4:
 335              		.loc 1 113 28 view .LVU126
 336              	.L20:
 114:taptempo.cpp  ****             {
 115:taptempo.cpp  ****                 ClockTempoSum += ClockTempoBuff[i];
 337              		.loc 1 115 17 discriminator 2 view .LVU127
 338              		.loc 1 115 31 is_stmt 0 discriminator 2 view .LVU128
 339 004e 53F8041F 		ldr	r1, [r3, #4]!
 113:taptempo.cpp  ****             for(int i=0; i <24; i += 1)
 340              		.loc 1 113 28 discriminator 2 view .LVU129
 341 0052 A342     		cmp	r3, r4
 342              		.loc 1 115 31 discriminator 2 view .LVU130
 343 0054 0A44     		add	r2, r2, r1
 344              	.LVL11:
 113:taptempo.cpp  ****             for(int i=0; i <24; i += 1)
 345              		.loc 1 113 13 is_stmt 1 discriminator 2 view .LVU131
 113:taptempo.cpp  ****             for(int i=0; i <24; i += 1)
 346              		.loc 1 113 28 discriminator 2 view .LVU132
 347 0056 FAD1     		bne	.L20
 348              	.LBE4:
 116:taptempo.cpp  ****             }
 117:taptempo.cpp  **** 
 118:taptempo.cpp  ****             ClockTempo = ClockTempoSum / 24;
 349              		.loc 1 118 13 view .LVU133
 350              	.LVL12:
 119:taptempo.cpp  ****       
 120:taptempo.cpp  ****             //set tempo_ every 24:
 121:taptempo.cpp  ****             if(index == 0)
 351              		.loc 1 121 13 view .LVU134
 352 0058 30B9     		cbnz	r0, .L19
 122:taptempo.cpp  ****             {
 123:taptempo.cpp  ****                 tempo_ = ClockTempo;
 353              		.loc 1 123 17 view .LVU135
 118:taptempo.cpp  ****       
 354              		.loc 1 118 24 is_stmt 0 view .LVU136
 355 005a 064B     		ldr	r3, .L23+8
 124:taptempo.cpp  ****                 return true;
 356              		.loc 1 124 24 view .LVU137
 357 005c 0120     		movs	r0, #1
 118:taptempo.cpp  ****       
 358              		.loc 1 118 24 view .LVU138
 359 005e A3FB0232 		umull	r3, r2, r3, r2
 360              	.LVL13:
 118:taptempo.cpp  ****       
 361              		.loc 1 118 24 view .LVU139
 362 0062 1209     		lsrs	r2, r2, #4
 123:taptempo.cpp  ****                 return true;
 363              		.loc 1 123 24 view .LVU140
 364 0064 EA62     		str	r2, [r5, #44]
 365              		.loc 1 124 17 is_stmt 1 view .LVU141
 366              	.LBE3:
 367              	.LBE6:
 125:taptempo.cpp  ****             }
 126:taptempo.cpp  ****             else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 11


 127:taptempo.cpp  ****             {
 128:taptempo.cpp  ****                 return false;
 129:taptempo.cpp  ****             }
 130:taptempo.cpp  ****         }
 131:taptempo.cpp  ****         else
 132:taptempo.cpp  ****         {
 133:taptempo.cpp  ****             return false;
 134:taptempo.cpp  ****         }
 135:taptempo.cpp  ****     }
 368              		.loc 1 135 5 is_stmt 0 view .LVU142
 369 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 370              	.LVL14:
 371              	.L19:
 372              	.LBB7:
 133:taptempo.cpp  ****         }
 373              		.loc 1 133 20 view .LVU143
 374 0068 0020     		movs	r0, #0
 375              	.LBE7:
 376              		.loc 1 135 5 view .LVU144
 377 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 378              	.LVL15:
 379              	.L24:
 380              		.loc 1 135 5 view .LVU145
 381              		.align	2
 382              	.L23:
 383 006c ABAAAA2A 		.word	715827883
 384 0070 00000000 		.word	.LANCHOR1
 385 0074 ABAAAAAA 		.word	-1431655765
 386 0078 00000000 		.word	.LANCHOR0
 387              		.cfi_endproc
 388              	.LFE3886:
 390              		.section	.text._ZN8Taptempo14getDelayLengthEv,"ax",%progbits
 391              		.align	1
 392              		.p2align 2,,3
 393              		.global	_ZN8Taptempo14getDelayLengthEv
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv5-d16
 399              	_ZN8Taptempo14getDelayLengthEv:
 400              	.LVL16:
 401              	.LFB3887:
 136:taptempo.cpp  ****     
 137:taptempo.cpp  ****     //outputs tap length in Us
 138:taptempo.cpp  ****     uint32_t Taptempo::getDelayLength()
 139:taptempo.cpp  ****     {
 402              		.loc 1 139 5 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 140:taptempo.cpp  ****          //static float tempo_Out{};
 141:taptempo.cpp  ****         // static float tempo_last{};
 142:taptempo.cpp  ****         //fonepole(tempo_Out,tempo_,0.011f); //32Hz cutoff
 143:taptempo.cpp  **** 
 144:taptempo.cpp  ****          //if more than .5% of last value
 145:taptempo.cpp  ****          //if( abs( tempo_Out - tempo_last)> (0.005 * tempo_last)) 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 12


 146:taptempo.cpp  ****          //{
 147:taptempo.cpp  ****          //    tempo_last = tempo_Out; //update tempo_last
 148:taptempo.cpp  ****          //}
 149:taptempo.cpp  **** 
 150:taptempo.cpp  ****         return tempo_;    //in Us
 407              		.loc 1 150 9 view .LVU147
 151:taptempo.cpp  ****     }  
 408              		.loc 1 151 5 is_stmt 0 view .LVU148
 409 0000 C06A     		ldr	r0, [r0, #44]
 410              	.LVL17:
 411              		.loc 1 151 5 view .LVU149
 412 0002 7047     		bx	lr
 413              		.cfi_endproc
 414              	.LFE3887:
 416              		.section	.text._ZN8Taptempo10getTapFreqEv,"ax",%progbits
 417              		.align	1
 418              		.p2align 2,,3
 419              		.global	_ZN8Taptempo10getTapFreqEv
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu fpv5-d16
 425              	_ZN8Taptempo10getTapFreqEv:
 426              	.LVL18:
 427              	.LFB3888:
 152:taptempo.cpp  ****     
 153:taptempo.cpp  ****     //outputs tap frequency in Hz
 154:taptempo.cpp  ****     float Taptempo::getTapFreq()
 155:taptempo.cpp  ****     {
 428              		.loc 1 155 5 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 156:taptempo.cpp  ****         return 1.0f / (24 * tempo_/ 1000000.0f); //in Hz
 433              		.loc 1 156 9 view .LVU151
 434              		.loc 1 156 27 is_stmt 0 view .LVU152
 435 0000 C36A     		ldr	r3, [r0, #44]
 436              		.loc 1 156 47 view .LVU153
 437 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 438              		.loc 1 156 35 view .LVU154
 439 0006 DFED076A 		vldr.32	s13, .L27
 440              		.loc 1 156 27 view .LVU155
 441 000a 03EB4303 		add	r3, r3, r3, lsl #1
 442 000e DB00     		lsls	r3, r3, #3
 443              		.loc 1 156 35 view .LVU156
 444 0010 07EE903A 		vmov	s15, r3	@ int
 445 0014 F8EE677A 		vcvt.f32.u32	s15, s15
 446 0018 87EEA67A 		vdiv.f32	s14, s15, s13
 157:taptempo.cpp  ****     }
 447              		.loc 1 157 5 view .LVU157
 448 001c 80EE070A 		vdiv.f32	s0, s0, s14
 449 0020 7047     		bx	lr
 450              	.L28:
 451 0022 00BF     		.align	2
 452              	.L27:
 453 0024 00247449 		.word	1232348160
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 13


 454              		.cfi_endproc
 455              	.LFE3888:
 457              		.section	.text._ZN8Taptempo12getTapLengthEv,"ax",%progbits
 458              		.align	1
 459              		.p2align 2,,3
 460              		.global	_ZN8Taptempo12getTapLengthEv
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu fpv5-d16
 466              	_ZN8Taptempo12getTapLengthEv:
 467              	.LVL19:
 468              	.LFB3889:
 158:taptempo.cpp  **** 
 159:taptempo.cpp  ****     //outputs delay length in Us;
 160:taptempo.cpp  ****     float Taptempo::getTapLength()
 161:taptempo.cpp  ****     {
 469              		.loc 1 161 5 is_stmt 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 162:taptempo.cpp  ****         return static_cast<float>(lastTapLength_);
 474              		.loc 1 162 9 view .LVU159
 475              		.loc 1 162 49 is_stmt 0 view .LVU160
 476 0000 90ED060A 		vldr.32	s0, [r0, #24]	@ int
 163:taptempo.cpp  ****     }
 477              		.loc 1 163 5 view .LVU161
 478 0004 B8EE400A 		vcvt.f32.u32	s0, s0
 479 0008 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE3889:
 483 000a 00BF     		.section	.text._ZN8Taptempo11setTapRatioEf,"ax",%progbits
 484              		.align	1
 485              		.p2align 2,,3
 486              		.global	_ZN8Taptempo11setTapRatioEf
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv5-d16
 492              	_ZN8Taptempo11setTapRatioEf:
 493              	.LVL20:
 494              	.LFB3890:
 164:taptempo.cpp  **** 
 165:taptempo.cpp  ****     void Taptempo::setTapRatio(float tapRatio)
 166:taptempo.cpp  ****     {
 495              		.loc 1 166 5 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 167:taptempo.cpp  ****         tapRatio_ = tapRatio;
 500              		.loc 1 167 9 view .LVU163
 501              		.loc 1 167 19 is_stmt 0 view .LVU164
 502 0000 80ED0F0A 		vstr.32	s0, [r0, #60]
 168:taptempo.cpp  ****     }
 503              		.loc 1 168 5 view .LVU165
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 14


 504 0004 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE3890:
 508 0006 00BF     		.section	.text._ZN8Taptempo12setTapLengthEf,"ax",%progbits
 509              		.align	1
 510              		.p2align 2,,3
 511              		.global	_ZN8Taptempo12setTapLengthEf
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu fpv5-d16
 517              	_ZN8Taptempo12setTapLengthEf:
 518              	.LVL21:
 519              	.LFB3891:
 169:taptempo.cpp  ****     
 170:taptempo.cpp  ****     void Taptempo::setTapLength(float tapLength)
 171:taptempo.cpp  ****     {
 520              		.loc 1 171 5 is_stmt 1 view -0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 172:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 525              		.loc 1 172 9 view .LVU167
 526              		.loc 1 172 26 is_stmt 0 view .LVU168
 527 0000 FCEEC07A 		vcvt.u32.f32	s15, s0
 173:taptempo.cpp  ****         tempo_ = tapLength / tapRatio_; 
 528              		.loc 1 173 28 view .LVU169
 529 0004 90ED0F7A 		vldr.32	s14, [r0, #60]
 172:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 530              		.loc 1 172 26 view .LVU170
 531 0008 17EE903A 		vmov	r3, s15	@ int
 532              		.loc 1 173 28 view .LVU171
 533 000c C0EE077A 		vdiv.f32	s15, s0, s14
 172:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 534              		.loc 1 172 26 view .LVU172
 535 0010 8361     		str	r3, [r0, #24]
 536              		.loc 1 173 9 is_stmt 1 view .LVU173
 537              		.loc 1 173 16 is_stmt 0 view .LVU174
 538 0012 FCEEE77A 		vcvt.u32.f32	s15, s15
 539 0016 C0ED0B7A 		vstr.32	s15, [r0, #44]	@ int
 174:taptempo.cpp  ****     }
 540              		.loc 1 174 5 view .LVU175
 541 001a 7047     		bx	lr
 542              		.cfi_endproc
 543              	.LFE3891:
 545              		.section	.bss._ZZN8Taptempo5clockEvE14ClockTempoBuff,"aw",%nobits
 546              		.align	2
 547              		.set	.LANCHOR1,. + 0
 550              	_ZZN8Taptempo5clockEvE14ClockTempoBuff:
 551 0000 00000000 		.space	96
 551      00000000 
 551      00000000 
 551      00000000 
 551      00000000 
 552              		.section	.bss._ZZN8Taptempo5clockEvE5index,"aw",%nobits
 553              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 15


 554              		.set	.LANCHOR0,. + 0
 557              	_ZZN8Taptempo5clockEvE5index:
 558 0000 00000000 		.space	4
 559              		.text
 560              	.Letext0:
 561              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 562              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 563              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 564              		.file 5 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 565              		.file 6 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 566              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/inclu
 567              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/c
 568              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/b
 569              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 570              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 571              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 572              		.file 13 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 573              		.file 14 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 574              		.file 15 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 575              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 576              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 577              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 578              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 579              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 580              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 581              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 582              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 583              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 584              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 585              		.file 26 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 586              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 587              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 588              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 589              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 590              		.file 31 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 591              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 592              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 593              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 594              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 595              		.file 36 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 596              		.file 37 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 597              		.file 38 "../DaisySP/Source/Control/adenv.h"
 598              		.file 39 "../DaisySP/Source/Utility/dsp.h"
 599              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 600              		.file 41 "<built-in>"
 601              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 602              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 603              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 604              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 605              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 606              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 607              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 608              		.file 49 "../libdaisy/src/per/tim.h"
 609              		.file 50 "../libdaisy/src/sys/system.h"
 610              		.file 51 "../libdaisy/src/util/wav_format.h"
 611              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 612              		.file 53 "../libdaisy/src/util/oled_fonts.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 16


 613              		.file 54 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 614              		.file 55 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 615              		.file 56 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 616              		.file 57 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 617              		.file 58 "../libdaisy/src/util/sd_diskio.h"
 618              		.file 59 "../libdaisy/src/sys/fatfs.h"
 619              		.file 60 "taptempo.h"
 620              		.file 61 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 taptempo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:17     .text._ZN8Taptempo4initEmmf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:26     .text._ZN8Taptempo4initEmmf:0000000000000000 _ZN8Taptempo4initEmmf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:86     .text._ZN8Taptempo4initEmmf:000000000000002c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:92     .text._ZN8Taptempo3tapEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:100    .text._ZN8Taptempo3tapEv:0000000000000000 _ZN8Taptempo3tapEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:243    .text._ZN8Taptempo5clockEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:251    .text._ZN8Taptempo5clockEv:0000000000000000 _ZN8Taptempo5clockEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:383    .text._ZN8Taptempo5clockEv:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:391    .text._ZN8Taptempo14getDelayLengthEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:399    .text._ZN8Taptempo14getDelayLengthEv:0000000000000000 _ZN8Taptempo14getDelayLengthEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:417    .text._ZN8Taptempo10getTapFreqEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:425    .text._ZN8Taptempo10getTapFreqEv:0000000000000000 _ZN8Taptempo10getTapFreqEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:453    .text._ZN8Taptempo10getTapFreqEv:0000000000000024 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:458    .text._ZN8Taptempo12getTapLengthEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:466    .text._ZN8Taptempo12getTapLengthEv:0000000000000000 _ZN8Taptempo12getTapLengthEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:484    .text._ZN8Taptempo11setTapRatioEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:492    .text._ZN8Taptempo11setTapRatioEf:0000000000000000 _ZN8Taptempo11setTapRatioEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:509    .text._ZN8Taptempo12setTapLengthEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:517    .text._ZN8Taptempo12setTapLengthEf:0000000000000000 _ZN8Taptempo12setTapLengthEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:546    .bss._ZZN8Taptempo5clockEvE14ClockTempoBuff:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:550    .bss._ZZN8Taptempo5clockEvE14ClockTempoBuff:0000000000000000 _ZZN8Taptempo5clockEvE14ClockTempoBuff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:553    .bss._ZZN8Taptempo5clockEvE5index:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccdi5GhR.s:557    .bss._ZZN8Taptempo5clockEvE5index:0000000000000000 _ZZN8Taptempo5clockEvE5index

UNDEFINED SYMBOLS
_ZN5daisy6System5GetUsEv
