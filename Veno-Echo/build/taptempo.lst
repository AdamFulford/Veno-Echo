ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"taptempo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN8Taptempo4initEmmf,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN8Taptempo4initEmmf
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN8Taptempo4initEmmf:
  27              	.LVL0:
  28              	.LFB3884:
  29              		.file 1 "taptempo.cpp"
   1:taptempo.cpp  **** // Copyright 2021 Adam Fulford
   2:taptempo.cpp  **** // 
   3:taptempo.cpp  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.cpp  **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.cpp  **** // in the Software without restriction, including without limitation the rights
   6:taptempo.cpp  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.cpp  **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.cpp  **** // furnished to do so, subject to the following conditions:
   9:taptempo.cpp  **** // 
  10:taptempo.cpp  **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.cpp  **** // all copies or substantial portions of the Software.
  12:taptempo.cpp  **** // 
  13:taptempo.cpp  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.cpp  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.cpp  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.cpp  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.cpp  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.cpp  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.cpp  **** // THE SOFTWARE.
  20:taptempo.cpp  **** // 
  21:taptempo.cpp  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.cpp  **** 
  23:taptempo.cpp  **** #include "taptempo.h"
  24:taptempo.cpp  **** 
  25:taptempo.cpp  ****     //set mintap (ms), maxtap (ms), tap tolerance
  26:taptempo.cpp  ****     void Taptempo::init(uint32_t mintap, uint32_t maxtap, float tap_tolerance)
  27:taptempo.cpp  ****     {
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  28:taptempo.cpp  ****         mintap_ = mintap;
  35              		.loc 1 28 9 view .LVU1
  29:taptempo.cpp  ****         maxtap_ = maxtap;
  30:taptempo.cpp  ****         tap_tolerance_ = tap_tolerance;
  31:taptempo.cpp  ****         tapLength_ = 0;
  36              		.loc 1 31 20 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  30:taptempo.cpp  ****         tapLength_ = 0;
  38              		.loc 1 30 24 view .LVU3
  39 0002 80ED0E0A 		vstr.32	s0, [r0, #56]
  27:taptempo.cpp  ****         mintap_ = mintap;
  40              		.loc 1 27 5 view .LVU4
  41 0006 30B4     		push	{r4, r5}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 5, -4
  32:taptempo.cpp  ****         lastTapLength_ = 0;
  33:taptempo.cpp  ****         tempo_ = 500000.0f; //in Us. Default 120BPM
  34:taptempo.cpp  ****         lastTime_ = 0;
  35:taptempo.cpp  ****         currentTime_ = 0;
  36:taptempo.cpp  ****         tapflag_ = false;
  37:taptempo.cpp  ****         tapRatio_ = 1.0;
  45              		.loc 1 37 19 view .LVU5
  46 0008 4FF07E54 		mov	r4, #1065353216
  33:taptempo.cpp  ****         lastTime_ = 0;
  47              		.loc 1 33 16 view .LVU6
  48 000c 064D     		ldr	r5, .L4
  36:taptempo.cpp  ****         tapRatio_ = 1.0;
  49              		.loc 1 36 18 view .LVU7
  50 000e 80F83430 		strb	r3, [r0, #52]
  33:taptempo.cpp  ****         lastTime_ = 0;
  51              		.loc 1 33 16 view .LVU8
  52 0012 C563     		str	r5, [r0, #60]	@ float
  53              		.loc 1 37 19 view .LVU9
  54 0014 0464     		str	r4, [r0, #64]	@ float
  29:taptempo.cpp  ****         tap_tolerance_ = tap_tolerance;
  55              		.loc 1 29 17 view .LVU10
  56 0016 C0E90012 		strd	r1, r2, [r0]
  30:taptempo.cpp  ****         tapLength_ = 0;
  57              		.loc 1 30 9 is_stmt 1 view .LVU11
  31:taptempo.cpp  ****         lastTapLength_ = 0;
  58              		.loc 1 31 9 view .LVU12
  38:taptempo.cpp  **** 
  39:taptempo.cpp  ****         //dsy_tim_init(); //start timer
  40:taptempo.cpp  ****         //dsy_tim_start();
  41:taptempo.cpp  ****     }
  59              		.loc 1 41 5 is_stmt 0 view .LVU13
  60 001a 30BC     		pop	{r4, r5}
  61              		.cfi_restore 5
  62              		.cfi_restore 4
  63              		.cfi_def_cfa_offset 0
  32:taptempo.cpp  ****         tempo_ = 500000.0f; //in Us. Default 120BPM
  64              		.loc 1 32 24 view .LVU14
  65 001c C0E90633 		strd	r3, r3, [r0, #24]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 3


  33:taptempo.cpp  ****         lastTime_ = 0;
  66              		.loc 1 33 9 is_stmt 1 view .LVU15
  34:taptempo.cpp  ****         currentTime_ = 0;
  67              		.loc 1 34 9 view .LVU16
  35:taptempo.cpp  ****         tapflag_ = false;
  68              		.loc 1 35 22 is_stmt 0 view .LVU17
  69 0020 C0E90433 		strd	r3, r3, [r0, #16]
  36:taptempo.cpp  ****         tapRatio_ = 1.0;
  70              		.loc 1 36 9 is_stmt 1 view .LVU18
  37:taptempo.cpp  **** 
  71              		.loc 1 37 9 view .LVU19
  72              		.loc 1 41 5 is_stmt 0 view .LVU20
  73 0024 7047     		bx	lr
  74              	.L5:
  75 0026 00BF     		.align	2
  76              	.L4:
  77 0028 0024F448 		.word	1223959552
  78              		.cfi_endproc
  79              	.LFE3884:
  81              		.section	.text._ZN8Taptempo3tapEv,"ax",%progbits
  82              		.align	1
  83              		.p2align 2,,3
  84              		.global	_ZN8Taptempo3tapEv
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv5-d16
  90              	_ZN8Taptempo3tapEv:
  91              	.LVL1:
  92              	.LFB3885:
  42:taptempo.cpp  ****     
  43:taptempo.cpp  ****     //call when tap is triggered. currentTime in ms. Returns high if tempo updated
  44:taptempo.cpp  ****     bool Taptempo::tap()
  45:taptempo.cpp  ****     {
  93              		.loc 1 45 5 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  46:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
  97              		.loc 1 46 9 view .LVU22
  45:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
  98              		.loc 1 45 5 is_stmt 0 view .LVU23
  99 0000 10B5     		push	{r4, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 4, -8
 102              		.cfi_offset 14, -4
  45:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 103              		.loc 1 45 5 view .LVU24
 104 0002 0446     		mov	r4, r0
 105              		.loc 1 46 37 view .LVU25
 106 0004 FFF7FEFF 		bl	_ZN5daisy6System5GetUsEv
 107              	.LVL2:
  47:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 108              		.loc 1 47 35 view .LVU26
 109 0008 6369     		ldr	r3, [r4, #20]
  48:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
  49:taptempo.cpp  ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 4


  50:taptempo.cpp  ****         if(mintap_ <= tapLength_ && tapLength_ <= maxtap_)  //if between limits
 110              		.loc 1 50 9 view .LVU27
 111 000a 2268     		ldr	r2, [r4]
  47:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 112              		.loc 1 47 35 view .LVU28
 113 000c C31A     		subs	r3, r0, r3
 114              		.loc 1 50 9 view .LVU29
 115 000e 9342     		cmp	r3, r2
  47:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 116              		.loc 1 47 20 view .LVU30
 117 0010 E361     		str	r3, [r4, #28]
  48:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 118              		.loc 1 48 9 is_stmt 1 view .LVU31
 119              		.loc 1 50 9 view .LVU32
 120              		.loc 1 50 34 is_stmt 0 view .LVU33
 121 0012 6268     		ldr	r2, [r4, #4]
  48:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 122              		.loc 1 48 19 view .LVU34
 123 0014 C4E90400 		strd	r0, r0, [r4, #16]
 124              		.loc 1 50 9 view .LVU35
 125 0018 1ED3     		bcc	.L7
 126              		.loc 1 50 34 discriminator 1 view .LVU36
 127 001a 9342     		cmp	r3, r2
 128 001c 20D8     		bhi	.L8
  51:taptempo.cpp  ****         {
  52:taptempo.cpp  ****             if(tapflag_)
 129              		.loc 1 52 13 is_stmt 1 view .LVU37
 130              		.loc 1 52 16 is_stmt 0 view .LVU38
 131 001e 94F83400 		ldrb	r0, [r4, #52]	@ zero_extendqisi2
  53:taptempo.cpp  ****             {
  54:taptempo.cpp  ****                 tapflag_ = false;   //reset tapflag
  55:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 132              		.loc 1 55 26 view .LVU39
 133 0022 07EE903A 		vmov	s15, r3	@ int
  52:taptempo.cpp  ****             {
 134              		.loc 1 52 13 view .LVU40
 135 0026 00BB     		cbnz	r0, .L15
  56:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
  57:taptempo.cpp  ****                 return true;
  58:taptempo.cpp  ****             }
  59:taptempo.cpp  **** 
  60:taptempo.cpp  ****             else    //tapflag_ not set
  61:taptempo.cpp  ****             {
  62:taptempo.cpp  ****                 if(static_cast<float>(tapLength_) >= tap_tolerance_ * static_cast<float>(lastTapLen
 136              		.loc 1 62 17 is_stmt 1 view .LVU41
 137              		.loc 1 62 20 is_stmt 0 view .LVU42
 138 0028 B8EE677A 		vcvt.f32.u32	s14, s15
 139              		.loc 1 62 71 view .LVU43
 140 002c D4ED067A 		vldr.32	s15, [r4, #24]	@ int
 141              		.loc 1 62 69 view .LVU44
 142 0030 D4ED0E6A 		vldr.32	s13, [r4, #56]
 143              		.loc 1 62 71 view .LVU45
 144 0034 F8EE677A 		vcvt.f32.u32	s15, s15
 145              		.loc 1 62 69 view .LVU46
 146 0038 67EEA67A 		vmul.f32	s15, s15, s13
 147              		.loc 1 62 17 view .LVU47
 148 003c B4EEE77A 		vcmpe.f32	s14, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 5


 149 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 150 0044 0CDA     		bge	.L8
  63:taptempo.cpp  ****                 {
  64:taptempo.cpp  ****                     tapflag_ = true;
  65:taptempo.cpp  ****                     return false;
  66:taptempo.cpp  ****                 }
  67:taptempo.cpp  ****                 else
  68:taptempo.cpp  ****                 {
  69:taptempo.cpp  ****                     tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 151              		.loc 1 69 21 is_stmt 1 view .LVU48
 152              		.loc 1 69 61 is_stmt 0 view .LVU49
 153 0046 D4ED106A 		vldr.32	s13, [r4, #64]
  70:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
  71:taptempo.cpp  ****                     return true;
 154              		.loc 1 71 28 view .LVU50
 155 004a 0120     		movs	r0, #1
  70:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 156              		.loc 1 70 36 view .LVU51
 157 004c A361     		str	r3, [r4, #24]
  69:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 158              		.loc 1 69 61 view .LVU52
 159 004e C7EE267A 		vdiv.f32	s15, s14, s13
  69:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 160              		.loc 1 69 28 view .LVU53
 161 0052 C4ED0F7A 		vstr.32	s15, [r4, #60]
  70:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 162              		.loc 1 70 21 is_stmt 1 view .LVU54
 163              		.loc 1 71 21 view .LVU55
  72:taptempo.cpp  ****                 }
  73:taptempo.cpp  ****             }
  74:taptempo.cpp  ****         }
  75:taptempo.cpp  ****         //if tap length too long then set tap_flag (to say this is first tap) and reset LFO
  76:taptempo.cpp  ****         else if(tapLength_ > maxtap_)
  77:taptempo.cpp  ****         {
  78:taptempo.cpp  ****             tapflag_ = true;
  79:taptempo.cpp  ****             return false;
  80:taptempo.cpp  ****         }
  81:taptempo.cpp  ****         //if tap time too short do nothing
  82:taptempo.cpp  ****         else if(tapLength_ < mintap_)
  83:taptempo.cpp  ****         {
  84:taptempo.cpp  ****             return false;
  85:taptempo.cpp  ****         }
  86:taptempo.cpp  **** 
  87:taptempo.cpp  ****         else
  88:taptempo.cpp  ****         {
  89:taptempo.cpp  ****             return false;
  90:taptempo.cpp  ****         }
  91:taptempo.cpp  **** 
  92:taptempo.cpp  ****     }
 164              		.loc 1 92 5 is_stmt 0 view .LVU56
 165 0056 10BD     		pop	{r4, pc}
 166              	.LVL3:
 167              	.L7:
  76:taptempo.cpp  ****         {
 168              		.loc 1 76 14 is_stmt 1 view .LVU57
 169 0058 9342     		cmp	r3, r2
 170 005a 01D8     		bhi	.L8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 6


  84:taptempo.cpp  ****         }
 171              		.loc 1 84 20 is_stmt 0 view .LVU58
 172 005c 0020     		movs	r0, #0
 173              		.loc 1 92 5 view .LVU59
 174 005e 10BD     		pop	{r4, pc}
 175              	.LVL4:
 176              	.L8:
  64:taptempo.cpp  ****                     return false;
 177              		.loc 1 64 21 is_stmt 1 view .LVU60
  64:taptempo.cpp  ****                     return false;
 178              		.loc 1 64 30 is_stmt 0 view .LVU61
 179 0060 0123     		movs	r3, #1
  65:taptempo.cpp  ****                 }
 180              		.loc 1 65 28 view .LVU62
 181 0062 0020     		movs	r0, #0
  64:taptempo.cpp  ****                     return false;
 182              		.loc 1 64 30 view .LVU63
 183 0064 84F83430 		strb	r3, [r4, #52]
  65:taptempo.cpp  ****                 }
 184              		.loc 1 65 21 is_stmt 1 view .LVU64
 185              		.loc 1 92 5 is_stmt 0 view .LVU65
 186 0068 10BD     		pop	{r4, pc}
 187              	.LVL5:
 188              	.L15:
  54:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 189              		.loc 1 54 17 is_stmt 1 view .LVU66
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 190              		.loc 1 55 26 is_stmt 0 view .LVU67
 191 006a F8EE676A 		vcvt.f32.u32	s13, s15
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 192              		.loc 1 55 57 view .LVU68
 193 006e 94ED107A 		vldr.32	s14, [r4, #64]
  54:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 194              		.loc 1 54 26 view .LVU69
 195 0072 0022     		movs	r2, #0
  56:taptempo.cpp  ****                 return true;
 196              		.loc 1 56 32 view .LVU70
 197 0074 A361     		str	r3, [r4, #24]
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 198              		.loc 1 55 57 view .LVU71
 199 0076 C6EE877A 		vdiv.f32	s15, s13, s14
  54:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 200              		.loc 1 54 26 view .LVU72
 201 007a 84F83420 		strb	r2, [r4, #52]
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 202              		.loc 1 55 17 is_stmt 1 view .LVU73
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 203              		.loc 1 55 24 is_stmt 0 view .LVU74
 204 007e C4ED0F7A 		vstr.32	s15, [r4, #60]
  56:taptempo.cpp  ****                 return true;
 205              		.loc 1 56 17 is_stmt 1 view .LVU75
  57:taptempo.cpp  ****             }
 206              		.loc 1 57 17 view .LVU76
 207              		.loc 1 92 5 is_stmt 0 view .LVU77
 208 0082 10BD     		pop	{r4, pc}
 209              		.loc 1 92 5 view .LVU78
 210              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 7


 211              	.LFE3885:
 213              		.section	.text._ZN8Taptempo5clockEm,"ax",%progbits
 214              		.align	1
 215              		.p2align 2,,3
 216              		.global	_ZN8Taptempo5clockEm
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv5-d16
 222              	_ZN8Taptempo5clockEm:
 223              	.LVL6:
 224              	.LFB3886:
  93:taptempo.cpp  **** 
  94:taptempo.cpp  **** bool Taptempo::clock(uint32_t count)
  95:taptempo.cpp  ****     {
 225              		.loc 1 95 5 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
  96:taptempo.cpp  ****         //currentClockTime_ = System::GetUs();    //get current time
  97:taptempo.cpp  ****         //clockLength_ = currentClockTime_ - lastClockTime_;  //calculate length between taps
  98:taptempo.cpp  ****         //lastClockTime_ = currentClockTime_;   //always update lastTime_
  99:taptempo.cpp  ****         uint32_t ClockTempo{count};
 230              		.loc 1 99 9 view .LVU80
 100:taptempo.cpp  ****         const int buffsize{8};
 231              		.loc 1 100 9 view .LVU81
 101:taptempo.cpp  ****         static uint32_t ClockTempoBuff[buffsize];
 232              		.loc 1 101 9 view .LVU82
 102:taptempo.cpp  ****         static int index{};
 233              		.loc 1 102 9 view .LVU83
 103:taptempo.cpp  ****         //if within tempo limits
 104:taptempo.cpp  ****         if(minclock_ <= ClockTempo && ClockTempo <= maxclock_) 
 234              		.loc 1 104 9 view .LVU84
 235              	.LBB4:
 236 0000 8368     		ldr	r3, [r0, #8]
 237 0002 8B42     		cmp	r3, r1
 238 0004 28D8     		bhi	.L19
 239              		.loc 1 104 36 is_stmt 0 discriminator 1 view .LVU85
 240 0006 C368     		ldr	r3, [r0, #12]
 241 0008 8B42     		cmp	r3, r1
 242              	.LBE4:
  95:taptempo.cpp  ****         //currentClockTime_ = System::GetUs();    //get current time
 243              		.loc 1 95 5 discriminator 1 view .LVU86
 244 000a F0B4     		push	{r4, r5, r6, r7}
 245              		.cfi_def_cfa_offset 16
 246              		.cfi_offset 4, -16
 247              		.cfi_offset 5, -12
 248              		.cfi_offset 6, -8
 249              		.cfi_offset 7, -4
 250 000c 0446     		mov	r4, r0
 251              	.LBB7:
 252              		.loc 1 104 36 discriminator 1 view .LVU87
 253 000e 20D3     		bcc	.L20
 254              	.LBB5:
 105:taptempo.cpp  ****         {
 106:taptempo.cpp  ****             //update clockLength_ with rolling average
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 8


 107:taptempo.cpp  ****             index = (index + 1) % buffsize;
 255              		.loc 1 107 13 is_stmt 1 view .LVU88
 256              		.loc 1 107 28 is_stmt 0 view .LVU89
 257 0010 124F     		ldr	r7, .L26
 108:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 109:taptempo.cpp  **** 
 110:taptempo.cpp  ****             uint32_t ClockTempoSum{};
 258              		.loc 1 110 22 view .LVU90
 259 0012 0022     		movs	r2, #0
 108:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 260              		.loc 1 108 35 view .LVU91
 261 0014 124E     		ldr	r6, .L26+4
 107:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 262              		.loc 1 107 28 view .LVU92
 263 0016 3868     		ldr	r0, [r7]
 264              	.LVL7:
 107:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 265              		.loc 1 107 28 view .LVU93
 266 0018 331F     		subs	r3, r6, #4
 267 001a 0130     		adds	r0, r0, #1
 107:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 268              		.loc 1 107 33 view .LVU94
 269 001c 151A     		subs	r5, r2, r0
 270 001e 00F00700 		and	r0, r0, #7
 271 0022 05F00705 		and	r5, r5, #7
 272 0026 58BF     		it	pl
 273 0028 6842     		rsbpl	r0, r5, #0
 274 002a 06F11C05 		add	r5, r6, #28
 107:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 275              		.loc 1 107 19 view .LVU95
 276 002e 3860     		str	r0, [r7]
 108:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 277              		.loc 1 108 13 is_stmt 1 view .LVU96
 108:taptempo.cpp  ****             ClockTempoBuff[index] = ClockTempo;
 278              		.loc 1 108 35 is_stmt 0 view .LVU97
 279 0030 46F82010 		str	r1, [r6, r0, lsl #2]
 280              		.loc 1 110 13 is_stmt 1 view .LVU98
 281              	.LVL8:
 111:taptempo.cpp  ****             for(int i=0; i <buffsize; i += 1)
 282              		.loc 1 111 13 view .LVU99
 283              	.LBB6:
 284              		.loc 1 111 28 view .LVU100
 285              	.L18:
 112:taptempo.cpp  ****             {
 113:taptempo.cpp  ****                 ClockTempoSum += ClockTempoBuff[i];
 286              		.loc 1 113 17 discriminator 2 view .LVU101
 287              		.loc 1 113 31 is_stmt 0 discriminator 2 view .LVU102
 288 0034 53F8041F 		ldr	r1, [r3, #4]!
 111:taptempo.cpp  ****             for(int i=0; i <buffsize; i += 1)
 289              		.loc 1 111 28 discriminator 2 view .LVU103
 290 0038 AB42     		cmp	r3, r5
 291              		.loc 1 113 31 discriminator 2 view .LVU104
 292 003a 0A44     		add	r2, r2, r1
 293              	.LVL9:
 111:taptempo.cpp  ****             for(int i=0; i <buffsize; i += 1)
 294              		.loc 1 111 13 is_stmt 1 discriminator 2 view .LVU105
 111:taptempo.cpp  ****             for(int i=0; i <buffsize; i += 1)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 9


 295              		.loc 1 111 28 discriminator 2 view .LVU106
 296 003c FAD1     		bne	.L18
 297              	.LBE6:
 114:taptempo.cpp  ****             }
 115:taptempo.cpp  **** 
 116:taptempo.cpp  ****             ClockTempo = ClockTempoSum / buffsize;
 298              		.loc 1 116 13 view .LVU107
 299              	.LVL10:
 117:taptempo.cpp  ****       
 118:taptempo.cpp  ****             //set tempo_ every 8:
 119:taptempo.cpp  ****             if(index % 1 == 0)
 300              		.loc 1 119 13 view .LVU108
 120:taptempo.cpp  ****             {
 121:taptempo.cpp  ****                 tempo_ = static_cast<float> (ClockTempo);
 301              		.loc 1 121 17 view .LVU109
 116:taptempo.cpp  ****       
 302              		.loc 1 116 24 is_stmt 0 view .LVU110
 303 003e D208     		lsrs	r2, r2, #3
 304              	.LVL11:
 122:taptempo.cpp  ****                 return true;
 305              		.loc 1 122 24 view .LVU111
 306 0040 0120     		movs	r0, #1
 307              	.LVL12:
 121:taptempo.cpp  ****                 return true;
 308              		.loc 1 121 26 view .LVU112
 309 0042 07EE902A 		vmov	s15, r2	@ int
 310 0046 F8EEE77A 		vcvt.f32.s32	s15, s15
 311 004a C4ED0F7A 		vstr.32	s15, [r4, #60]
 312              		.loc 1 122 17 is_stmt 1 view .LVU113
 313              	.LBE5:
 314              	.LBE7:
 123:taptempo.cpp  ****             }
 124:taptempo.cpp  ****             else
 125:taptempo.cpp  ****             {
 126:taptempo.cpp  ****                 return false;
 127:taptempo.cpp  ****             }
 128:taptempo.cpp  ****         }
 129:taptempo.cpp  ****         else
 130:taptempo.cpp  ****         {
 131:taptempo.cpp  ****             return false;
 132:taptempo.cpp  ****         }
 133:taptempo.cpp  ****     }
 315              		.loc 1 133 5 is_stmt 0 view .LVU114
 316 004e F0BC     		pop	{r4, r5, r6, r7}
 317              		.cfi_remember_state
 318              		.cfi_restore 7
 319              		.cfi_restore 6
 320              		.cfi_restore 5
 321              		.cfi_restore 4
 322              		.cfi_def_cfa_offset 0
 323              	.LVL13:
 324              		.loc 1 133 5 view .LVU115
 325 0050 7047     		bx	lr
 326              	.LVL14:
 327              	.L20:
 328              		.cfi_restore_state
 329              	.LBB8:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 10


 131:taptempo.cpp  ****         }
 330              		.loc 1 131 20 view .LVU116
 331 0052 0020     		movs	r0, #0
 332              	.LVL15:
 131:taptempo.cpp  ****         }
 333              		.loc 1 131 20 view .LVU117
 334              	.LBE8:
 335              		.loc 1 133 5 view .LVU118
 336 0054 F0BC     		pop	{r4, r5, r6, r7}
 337              		.cfi_restore 7
 338              		.cfi_restore 6
 339              		.cfi_restore 5
 340              		.cfi_restore 4
 341              		.cfi_def_cfa_offset 0
 342              	.LVL16:
 343              		.loc 1 133 5 view .LVU119
 344 0056 7047     		bx	lr
 345              	.LVL17:
 346              	.L19:
 347              	.LBB9:
 131:taptempo.cpp  ****         }
 348              		.loc 1 131 20 view .LVU120
 349 0058 0020     		movs	r0, #0
 350              	.LVL18:
 131:taptempo.cpp  ****         }
 351              		.loc 1 131 20 view .LVU121
 352              	.LBE9:
 353              		.loc 1 133 5 view .LVU122
 354 005a 7047     		bx	lr
 355              	.L27:
 356              		.align	2
 357              	.L26:
 358 005c 00000000 		.word	.LANCHOR0
 359 0060 00000000 		.word	.LANCHOR1
 360              		.cfi_endproc
 361              	.LFE3886:
 363              		.section	.text._ZN8Taptempo14getDelayLengthEv,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.global	_ZN8Taptempo14getDelayLengthEv
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv5-d16
 372              	_ZN8Taptempo14getDelayLengthEv:
 373              	.LVL19:
 374              	.LFB3887:
 134:taptempo.cpp  ****     
 135:taptempo.cpp  ****     //outputs tap length in Us
 136:taptempo.cpp  ****     float Taptempo::getDelayLength()
 137:taptempo.cpp  ****     {
 375              		.loc 1 137 5 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 138:taptempo.cpp  ****         static float tempo_Out{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 11


 380              		.loc 1 138 9 view .LVU124
 139:taptempo.cpp  ****         static float tempo_last{};
 381              		.loc 1 139 9 view .LVU125
 140:taptempo.cpp  ****         fonepole(tempo_Out,tempo_,0.011f); //32Hz cutoff
 382              		.loc 1 140 9 view .LVU126
 383              	.LBB10:
 384              	.LBI10:
 385              		.file 2 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 12


  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 13


 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 386              		.loc 2 135 13 view .LVU127
 387              	.LBB11:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 388              		.loc 2 137 5 view .LVU128
 389              		.loc 2 137 9 is_stmt 0 view .LVU129
 390 0000 064B     		ldr	r3, .L29
 391              		.loc 2 137 24 view .LVU130
 392 0002 D0ED0F7A 		vldr.32	s15, [r0, #60]
 393              		.loc 2 137 9 view .LVU131
 394 0006 93ED000A 		vldr.32	s0, [r3]
 395 000a 9FED057A 		vldr.32	s14, .L29+4
 396              		.loc 2 137 24 view .LVU132
 397 000e 77EEC07A 		vsub.f32	s15, s15, s0
 398              		.loc 2 137 9 view .LVU133
 399 0012 A7EE870A 		vfma.f32	s0, s15, s14
 400 0016 83ED000A 		vstr.32	s0, [r3]
 401              	.LVL20:
 402              		.loc 2 137 9 view .LVU134
 403              	.LBE11:
 404              	.LBE10:
 141:taptempo.cpp  **** 
 142:taptempo.cpp  ****         //if more than .5% of last value
 143:taptempo.cpp  ****         //if( abs( tempo_Out - tempo_last)> (0.005 * tempo_last)) 
 144:taptempo.cpp  ****         //{
 145:taptempo.cpp  ****         //    tempo_last = tempo_Out; //update tempo_last
 146:taptempo.cpp  ****        // }
 147:taptempo.cpp  **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 14


 148:taptempo.cpp  ****         return tempo_Out;    //in Us
 405              		.loc 1 148 9 is_stmt 1 view .LVU135
 149:taptempo.cpp  ****     }  
 406              		.loc 1 149 5 is_stmt 0 view .LVU136
 407 001a 7047     		bx	lr
 408              	.L30:
 409              		.align	2
 410              	.L29:
 411 001c 00000000 		.word	.LANCHOR2
 412 0020 5839343C 		.word	1010055512
 413              		.cfi_endproc
 414              	.LFE3887:
 416              		.section	.text._ZN8Taptempo10getTapFreqEv,"ax",%progbits
 417              		.align	1
 418              		.p2align 2,,3
 419              		.global	_ZN8Taptempo10getTapFreqEv
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu fpv5-d16
 425              	_ZN8Taptempo10getTapFreqEv:
 426              	.LVL21:
 427              	.LFB3888:
 150:taptempo.cpp  ****     
 151:taptempo.cpp  ****     //outputs tap frequency in Hz
 152:taptempo.cpp  ****     float Taptempo::getTapFreq()
 153:taptempo.cpp  ****     {
 428              		.loc 1 153 5 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 154:taptempo.cpp  ****         return 1.0f / (tempo_ * 0.0000208333f); //in Hz
 433              		.loc 1 154 9 view .LVU138
 434              		.loc 1 154 31 is_stmt 0 view .LVU139
 435 0000 9FED057A 		vldr.32	s14, .L32
 436              		.loc 1 154 46 view .LVU140
 437 0004 B7EE000A 		vmov.f32	s0, #1.0e+0
 438              		.loc 1 154 31 view .LVU141
 439 0008 D0ED0F7A 		vldr.32	s15, [r0, #60]
 440 000c 67EE877A 		vmul.f32	s15, s15, s14
 155:taptempo.cpp  ****     }
 441              		.loc 1 155 5 view .LVU142
 442 0010 80EE270A 		vdiv.f32	s0, s0, s15
 443 0014 7047     		bx	lr
 444              	.L33:
 445 0016 00BF     		.align	2
 446              	.L32:
 447 0018 2CC3AE37 		.word	934200108
 448              		.cfi_endproc
 449              	.LFE3888:
 451              		.section	.text._ZN8Taptempo12getTapLengthEv,"ax",%progbits
 452              		.align	1
 453              		.p2align 2,,3
 454              		.global	_ZN8Taptempo12getTapLengthEv
 455              		.syntax unified
 456              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 15


 457              		.thumb_func
 458              		.fpu fpv5-d16
 460              	_ZN8Taptempo12getTapLengthEv:
 461              	.LVL22:
 462              	.LFB3889:
 156:taptempo.cpp  **** 
 157:taptempo.cpp  ****     //outputs delay length in Us;
 158:taptempo.cpp  ****     float Taptempo::getTapLength()
 159:taptempo.cpp  ****     {
 463              		.loc 1 159 5 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 160:taptempo.cpp  ****         return static_cast<float>(lastTapLength_);
 468              		.loc 1 160 9 view .LVU144
 469              		.loc 1 160 49 is_stmt 0 view .LVU145
 470 0000 90ED060A 		vldr.32	s0, [r0, #24]	@ int
 161:taptempo.cpp  ****     }
 471              		.loc 1 161 5 view .LVU146
 472 0004 B8EE400A 		vcvt.f32.u32	s0, s0
 473 0008 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE3889:
 477 000a 00BF     		.section	.text._ZN8Taptempo11setTapRatioEf,"ax",%progbits
 478              		.align	1
 479              		.p2align 2,,3
 480              		.global	_ZN8Taptempo11setTapRatioEf
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 484              		.fpu fpv5-d16
 486              	_ZN8Taptempo11setTapRatioEf:
 487              	.LVL23:
 488              	.LFB3890:
 162:taptempo.cpp  **** 
 163:taptempo.cpp  ****     void Taptempo::setTapRatio(float tapRatio)
 164:taptempo.cpp  ****     {
 489              		.loc 1 164 5 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 165:taptempo.cpp  ****         tapRatio_ = tapRatio;
 494              		.loc 1 165 9 view .LVU148
 495              		.loc 1 165 19 is_stmt 0 view .LVU149
 496 0000 80ED100A 		vstr.32	s0, [r0, #64]
 166:taptempo.cpp  ****     }
 497              		.loc 1 166 5 view .LVU150
 498 0004 7047     		bx	lr
 499              		.cfi_endproc
 500              	.LFE3890:
 502 0006 00BF     		.section	.text._ZN8Taptempo12setTapLengthEf,"ax",%progbits
 503              		.align	1
 504              		.p2align 2,,3
 505              		.global	_ZN8Taptempo12setTapLengthEf
 506              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 16


 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv5-d16
 511              	_ZN8Taptempo12setTapLengthEf:
 512              	.LVL24:
 513              	.LFB3891:
 167:taptempo.cpp  ****     
 168:taptempo.cpp  ****     void Taptempo::setTapLength(float tapLength)
 169:taptempo.cpp  ****     {
 514              		.loc 1 169 5 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 170:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 519              		.loc 1 170 9 view .LVU152
 520              		.loc 1 170 26 is_stmt 0 view .LVU153
 521 0000 FCEEC07A 		vcvt.u32.f32	s15, s0
 171:taptempo.cpp  ****         tempo_ = tapLength / tapRatio_; 
 522              		.loc 1 171 28 view .LVU154
 523 0004 90ED107A 		vldr.32	s14, [r0, #64]
 170:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 524              		.loc 1 170 26 view .LVU155
 525 0008 17EE903A 		vmov	r3, s15	@ int
 526              		.loc 1 171 28 view .LVU156
 527 000c C0EE077A 		vdiv.f32	s15, s0, s14
 170:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 528              		.loc 1 170 26 view .LVU157
 529 0010 8361     		str	r3, [r0, #24]
 530              		.loc 1 171 9 is_stmt 1 view .LVU158
 531              		.loc 1 171 16 is_stmt 0 view .LVU159
 532 0012 C0ED0F7A 		vstr.32	s15, [r0, #60]
 172:taptempo.cpp  ****     }
 533              		.loc 1 172 5 view .LVU160
 534 0016 7047     		bx	lr
 535              		.cfi_endproc
 536              	.LFE3891:
 538              		.section	.bss._ZZN8Taptempo14getDelayLengthEvE9tempo_Out,"aw",%nobits
 539              		.align	2
 540              		.set	.LANCHOR2,. + 0
 543              	_ZZN8Taptempo14getDelayLengthEvE9tempo_Out:
 544 0000 00000000 		.space	4
 545              		.section	.bss._ZZN8Taptempo5clockEmE14ClockTempoBuff,"aw",%nobits
 546              		.align	2
 547              		.set	.LANCHOR1,. + 0
 550              	_ZZN8Taptempo5clockEmE14ClockTempoBuff:
 551 0000 00000000 		.space	32
 551      00000000 
 551      00000000 
 551      00000000 
 551      00000000 
 552              		.section	.bss._ZZN8Taptempo5clockEmE5index,"aw",%nobits
 553              		.align	2
 554              		.set	.LANCHOR0,. + 0
 557              	_ZZN8Taptempo5clockEmE5index:
 558 0000 00000000 		.space	4
 559              		.text
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 17


 560              	.Letext0:
 561              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 562              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 563              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 564              		.file 6 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 565              		.file 7 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 566              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/inclu
 567              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/c
 568              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 569              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 570              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 571              		.file 13 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 572              		.file 14 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 573              		.file 15 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 574              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 575              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 576              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 577              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 578              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 579              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 580              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 581              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 582              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 583              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 584              		.file 26 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 585              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 586              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 587              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 588              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 589              		.file 31 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 590              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 591              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 592              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 593              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 594              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 595              		.file 37 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 596              		.file 38 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 597              		.file 39 "../DaisySP/Source/Control/adenv.h"
 598              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 599              		.file 41 "<built-in>"
 600              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 601              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 602              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 603              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 604              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 605              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 606              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 607              		.file 49 "../libdaisy/src/per/tim.h"
 608              		.file 50 "../libdaisy/src/sys/system.h"
 609              		.file 51 "../libdaisy/src/util/wav_format.h"
 610              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 611              		.file 53 "../libdaisy/src/util/oled_fonts.h"
 612              		.file 54 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 613              		.file 55 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 614              		.file 56 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 615              		.file 57 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 616              		.file 58 "../libdaisy/src/util/sd_diskio.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 18


 617              		.file 59 "../libdaisy/src/sys/fatfs.h"
 618              		.file 60 "taptempo.h"
 619              		.file 61 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 taptempo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:17     .text._ZN8Taptempo4initEmmf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:26     .text._ZN8Taptempo4initEmmf:0000000000000000 _ZN8Taptempo4initEmmf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:77     .text._ZN8Taptempo4initEmmf:0000000000000028 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:82     .text._ZN8Taptempo3tapEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:90     .text._ZN8Taptempo3tapEv:0000000000000000 _ZN8Taptempo3tapEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:214    .text._ZN8Taptempo5clockEm:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:222    .text._ZN8Taptempo5clockEm:0000000000000000 _ZN8Taptempo5clockEm
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:358    .text._ZN8Taptempo5clockEm:000000000000005c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:364    .text._ZN8Taptempo14getDelayLengthEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:372    .text._ZN8Taptempo14getDelayLengthEv:0000000000000000 _ZN8Taptempo14getDelayLengthEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:411    .text._ZN8Taptempo14getDelayLengthEv:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:417    .text._ZN8Taptempo10getTapFreqEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:425    .text._ZN8Taptempo10getTapFreqEv:0000000000000000 _ZN8Taptempo10getTapFreqEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:447    .text._ZN8Taptempo10getTapFreqEv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:452    .text._ZN8Taptempo12getTapLengthEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:460    .text._ZN8Taptempo12getTapLengthEv:0000000000000000 _ZN8Taptempo12getTapLengthEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:478    .text._ZN8Taptempo11setTapRatioEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:486    .text._ZN8Taptempo11setTapRatioEf:0000000000000000 _ZN8Taptempo11setTapRatioEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:503    .text._ZN8Taptempo12setTapLengthEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:511    .text._ZN8Taptempo12setTapLengthEf:0000000000000000 _ZN8Taptempo12setTapLengthEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:539    .bss._ZZN8Taptempo14getDelayLengthEvE9tempo_Out:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:543    .bss._ZZN8Taptempo14getDelayLengthEvE9tempo_Out:0000000000000000 _ZZN8Taptempo14getDelayLengthEvE9tempo_Out
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:546    .bss._ZZN8Taptempo5clockEmE14ClockTempoBuff:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:550    .bss._ZZN8Taptempo5clockEmE14ClockTempoBuff:0000000000000000 _ZZN8Taptempo5clockEmE14ClockTempoBuff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:553    .bss._ZZN8Taptempo5clockEmE5index:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpoyaCg.s:557    .bss._ZZN8Taptempo5clockEmE5index:0000000000000000 _ZZN8Taptempo5clockEmE5index

UNDEFINED SYMBOLS
_ZN5daisy6System5GetUsEv
