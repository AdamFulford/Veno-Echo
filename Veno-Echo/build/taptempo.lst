ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"taptempo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN8Taptempo4initEmmf,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN8Taptempo4initEmmf
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN8Taptempo4initEmmf:
  27              	.LVL0:
  28              	.LFB4345:
  29              		.file 1 "taptempo.cpp"
   1:taptempo.cpp  **** // Copyright 2021 Adam Fulford
   2:taptempo.cpp  **** // 
   3:taptempo.cpp  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.cpp  **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.cpp  **** // in the Software without restriction, including without limitation the rights
   6:taptempo.cpp  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.cpp  **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.cpp  **** // furnished to do so, subject to the following conditions:
   9:taptempo.cpp  **** // 
  10:taptempo.cpp  **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.cpp  **** // all copies or substantial portions of the Software.
  12:taptempo.cpp  **** // 
  13:taptempo.cpp  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.cpp  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.cpp  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.cpp  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.cpp  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.cpp  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.cpp  **** // THE SOFTWARE.
  20:taptempo.cpp  **** // 
  21:taptempo.cpp  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.cpp  **** 
  23:taptempo.cpp  **** #include "taptempo.h"
  24:taptempo.cpp  **** 
  25:taptempo.cpp  ****     //set mintap (ms), maxtap (ms), tap tolerance
  26:taptempo.cpp  ****     void Taptempo::init(uint32_t mintap, uint32_t maxtap, float tap_tolerance)
  27:taptempo.cpp  ****     {
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  28:taptempo.cpp  ****         mintap_ = mintap;
  35              		.loc 1 28 9 view .LVU1
  29:taptempo.cpp  ****         maxtap_ = maxtap;
  30:taptempo.cpp  ****         tap_tolerance_ = tap_tolerance;
  31:taptempo.cpp  ****         tapLength_ = 0;
  36              		.loc 1 31 20 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  30:taptempo.cpp  ****         tapLength_ = 0;
  38              		.loc 1 30 24 view .LVU3
  39 0002 80ED0A0A 		vstr.32	s0, [r0, #40]
  27:taptempo.cpp  ****         mintap_ = mintap;
  40              		.loc 1 27 5 view .LVU4
  41 0006 30B4     		push	{r4, r5}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 5, -4
  32:taptempo.cpp  ****         lastTapLength_ = 0;
  33:taptempo.cpp  ****         tempo_ = 500000.0f; //in Us. Default 120BPM
  34:taptempo.cpp  ****         lastTime_ = 0;
  35:taptempo.cpp  ****         currentTime_ = 0;
  36:taptempo.cpp  ****         tapflag_ = false;
  37:taptempo.cpp  ****         tapRatio_ = 1.0;
  45              		.loc 1 37 19 view .LVU5
  46 0008 4FF07E54 		mov	r4, #1065353216
  33:taptempo.cpp  ****         lastTime_ = 0;
  47              		.loc 1 33 16 view .LVU6
  48 000c 064D     		ldr	r5, .L4
  36:taptempo.cpp  ****         tapRatio_ = 1.0;
  49              		.loc 1 36 18 view .LVU7
  50 000e 80F82430 		strb	r3, [r0, #36]
  33:taptempo.cpp  ****         lastTime_ = 0;
  51              		.loc 1 33 16 view .LVU8
  52 0012 C562     		str	r5, [r0, #44]	@ float
  53              		.loc 1 37 19 view .LVU9
  54 0014 0463     		str	r4, [r0, #48]	@ float
  29:taptempo.cpp  ****         tap_tolerance_ = tap_tolerance;
  55              		.loc 1 29 17 view .LVU10
  56 0016 C0E90012 		strd	r1, r2, [r0]
  30:taptempo.cpp  ****         tapLength_ = 0;
  57              		.loc 1 30 9 is_stmt 1 view .LVU11
  31:taptempo.cpp  ****         lastTapLength_ = 0;
  58              		.loc 1 31 9 view .LVU12
  38:taptempo.cpp  **** 
  39:taptempo.cpp  ****         //dsy_tim_init(); //start timer
  40:taptempo.cpp  ****         //dsy_tim_start();
  41:taptempo.cpp  ****     }
  59              		.loc 1 41 5 is_stmt 0 view .LVU13
  60 001a 30BC     		pop	{r4, r5}
  61              		.cfi_restore 5
  62              		.cfi_restore 4
  63              		.cfi_def_cfa_offset 0
  32:taptempo.cpp  ****         tempo_ = 500000.0f; //in Us. Default 120BPM
  64              		.loc 1 32 24 view .LVU14
  65 001c C0E90433 		strd	r3, r3, [r0, #16]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 3


  33:taptempo.cpp  ****         lastTime_ = 0;
  66              		.loc 1 33 9 is_stmt 1 view .LVU15
  34:taptempo.cpp  ****         currentTime_ = 0;
  67              		.loc 1 34 9 view .LVU16
  35:taptempo.cpp  ****         tapflag_ = false;
  68              		.loc 1 35 22 is_stmt 0 view .LVU17
  69 0020 C0E90233 		strd	r3, r3, [r0, #8]
  36:taptempo.cpp  ****         tapRatio_ = 1.0;
  70              		.loc 1 36 9 is_stmt 1 view .LVU18
  37:taptempo.cpp  **** 
  71              		.loc 1 37 9 view .LVU19
  72              		.loc 1 41 5 is_stmt 0 view .LVU20
  73 0024 7047     		bx	lr
  74              	.L5:
  75 0026 00BF     		.align	2
  76              	.L4:
  77 0028 0024F448 		.word	1223959552
  78              		.cfi_endproc
  79              	.LFE4345:
  81              		.section	.text._ZN8Taptempo3tapEv,"ax",%progbits
  82              		.align	1
  83              		.p2align 2,,3
  84              		.global	_ZN8Taptempo3tapEv
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv5-d16
  90              	_ZN8Taptempo3tapEv:
  91              	.LVL1:
  92              	.LFB4346:
  42:taptempo.cpp  ****     
  43:taptempo.cpp  ****     //call when tap is triggered. currentTime in ms. Returns high if tempo updated
  44:taptempo.cpp  ****     bool Taptempo::tap()
  45:taptempo.cpp  ****     {
  93              		.loc 1 45 5 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  46:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
  97              		.loc 1 46 9 view .LVU22
  45:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
  98              		.loc 1 45 5 is_stmt 0 view .LVU23
  99 0000 10B5     		push	{r4, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 4, -8
 102              		.cfi_offset 14, -4
  45:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 103              		.loc 1 45 5 view .LVU24
 104 0002 0446     		mov	r4, r0
 105              		.loc 1 46 37 view .LVU25
 106 0004 FFF7FEFF 		bl	_ZN5daisy6System5GetUsEv
 107              	.LVL2:
  47:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 108              		.loc 1 47 35 view .LVU26
 109 0008 E368     		ldr	r3, [r4, #12]
  48:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
  49:taptempo.cpp  ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 4


  50:taptempo.cpp  ****         if(mintap_ <= tapLength_ && tapLength_ <= maxtap_)  //if between limits
 110              		.loc 1 50 9 view .LVU27
 111 000a 2268     		ldr	r2, [r4]
  47:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 112              		.loc 1 47 35 view .LVU28
 113 000c C31A     		subs	r3, r0, r3
 114              		.loc 1 50 9 view .LVU29
 115 000e 9342     		cmp	r3, r2
  47:taptempo.cpp  ****         tapLength_ = currentTime_ - lastTime_;  //calculate length between taps
 116              		.loc 1 47 20 view .LVU30
 117 0010 6361     		str	r3, [r4, #20]
  48:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 118              		.loc 1 48 9 is_stmt 1 view .LVU31
 119              		.loc 1 50 9 view .LVU32
 120              		.loc 1 50 34 is_stmt 0 view .LVU33
 121 0012 6268     		ldr	r2, [r4, #4]
  48:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 122              		.loc 1 48 19 view .LVU34
 123 0014 C4E90200 		strd	r0, r0, [r4, #8]
 124              		.loc 1 50 9 view .LVU35
 125 0018 1ED3     		bcc	.L7
 126              		.loc 1 50 34 discriminator 1 view .LVU36
 127 001a 9342     		cmp	r3, r2
 128 001c 20D8     		bhi	.L8
  51:taptempo.cpp  ****         {
  52:taptempo.cpp  ****             if(tapflag_)
 129              		.loc 1 52 13 is_stmt 1 view .LVU37
 130              		.loc 1 52 16 is_stmt 0 view .LVU38
 131 001e 94F82400 		ldrb	r0, [r4, #36]	@ zero_extendqisi2
  53:taptempo.cpp  ****             {
  54:taptempo.cpp  ****                 tapflag_ = false;   //reset tapflag
  55:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 132              		.loc 1 55 26 view .LVU39
 133 0022 07EE903A 		vmov	s15, r3	@ int
  52:taptempo.cpp  ****             {
 134              		.loc 1 52 13 view .LVU40
 135 0026 00BB     		cbnz	r0, .L15
  56:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
  57:taptempo.cpp  ****                 return true;
  58:taptempo.cpp  ****             }
  59:taptempo.cpp  **** 
  60:taptempo.cpp  ****             else    //tapflag_ not set
  61:taptempo.cpp  ****             {
  62:taptempo.cpp  ****                 if(static_cast<float>(tapLength_) >= tap_tolerance_ * static_cast<float>(lastTapLen
 136              		.loc 1 62 17 is_stmt 1 view .LVU41
 137              		.loc 1 62 20 is_stmt 0 view .LVU42
 138 0028 B8EE677A 		vcvt.f32.u32	s14, s15
 139              		.loc 1 62 71 view .LVU43
 140 002c D4ED047A 		vldr.32	s15, [r4, #16]	@ int
 141              		.loc 1 62 69 view .LVU44
 142 0030 D4ED0A6A 		vldr.32	s13, [r4, #40]
 143              		.loc 1 62 71 view .LVU45
 144 0034 F8EE677A 		vcvt.f32.u32	s15, s15
 145              		.loc 1 62 69 view .LVU46
 146 0038 67EEA67A 		vmul.f32	s15, s15, s13
 147              		.loc 1 62 17 view .LVU47
 148 003c B4EEE77A 		vcmpe.f32	s14, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 5


 149 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 150 0044 0CDA     		bge	.L8
  63:taptempo.cpp  ****                 {
  64:taptempo.cpp  ****                     tapflag_ = true;
  65:taptempo.cpp  ****                     return false;
  66:taptempo.cpp  ****                 }
  67:taptempo.cpp  ****                 else
  68:taptempo.cpp  ****                 {
  69:taptempo.cpp  ****                     tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 151              		.loc 1 69 21 is_stmt 1 view .LVU48
 152              		.loc 1 69 61 is_stmt 0 view .LVU49
 153 0046 D4ED0C6A 		vldr.32	s13, [r4, #48]
  70:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
  71:taptempo.cpp  ****                     return true;
 154              		.loc 1 71 28 view .LVU50
 155 004a 0120     		movs	r0, #1
  70:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 156              		.loc 1 70 36 view .LVU51
 157 004c 2361     		str	r3, [r4, #16]
  69:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 158              		.loc 1 69 61 view .LVU52
 159 004e C7EE267A 		vdiv.f32	s15, s14, s13
  69:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 160              		.loc 1 69 28 view .LVU53
 161 0052 C4ED0B7A 		vstr.32	s15, [r4, #44]
  70:taptempo.cpp  ****                     lastTapLength_ = tapLength_;
 162              		.loc 1 70 21 is_stmt 1 view .LVU54
 163              		.loc 1 71 21 view .LVU55
  72:taptempo.cpp  ****                 }
  73:taptempo.cpp  ****             }
  74:taptempo.cpp  ****         }
  75:taptempo.cpp  ****         //if tap length too long then set tap_flag (to say this is first tap) and reset LFO
  76:taptempo.cpp  ****         else if(tapLength_ > maxtap_)
  77:taptempo.cpp  ****         {
  78:taptempo.cpp  ****             tapflag_ = true;
  79:taptempo.cpp  ****             return false;
  80:taptempo.cpp  ****         }
  81:taptempo.cpp  ****         //if tap time too short do nothing
  82:taptempo.cpp  ****         else if(tapLength_ < mintap_)
  83:taptempo.cpp  ****         {
  84:taptempo.cpp  ****             return false;
  85:taptempo.cpp  ****         }
  86:taptempo.cpp  **** 
  87:taptempo.cpp  ****         else
  88:taptempo.cpp  ****         {
  89:taptempo.cpp  ****             return false;
  90:taptempo.cpp  ****         }
  91:taptempo.cpp  **** 
  92:taptempo.cpp  ****     }
 164              		.loc 1 92 5 is_stmt 0 view .LVU56
 165 0056 10BD     		pop	{r4, pc}
 166              	.LVL3:
 167              	.L7:
  76:taptempo.cpp  ****         {
 168              		.loc 1 76 14 is_stmt 1 view .LVU57
 169 0058 9342     		cmp	r3, r2
 170 005a 01D8     		bhi	.L8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 6


  84:taptempo.cpp  ****         }
 171              		.loc 1 84 20 is_stmt 0 view .LVU58
 172 005c 0020     		movs	r0, #0
 173              		.loc 1 92 5 view .LVU59
 174 005e 10BD     		pop	{r4, pc}
 175              	.LVL4:
 176              	.L8:
  64:taptempo.cpp  ****                     return false;
 177              		.loc 1 64 21 is_stmt 1 view .LVU60
  64:taptempo.cpp  ****                     return false;
 178              		.loc 1 64 30 is_stmt 0 view .LVU61
 179 0060 0123     		movs	r3, #1
  65:taptempo.cpp  ****                 }
 180              		.loc 1 65 28 view .LVU62
 181 0062 0020     		movs	r0, #0
  64:taptempo.cpp  ****                     return false;
 182              		.loc 1 64 30 view .LVU63
 183 0064 84F82430 		strb	r3, [r4, #36]
  65:taptempo.cpp  ****                 }
 184              		.loc 1 65 21 is_stmt 1 view .LVU64
 185              		.loc 1 92 5 is_stmt 0 view .LVU65
 186 0068 10BD     		pop	{r4, pc}
 187              	.LVL5:
 188              	.L15:
  54:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 189              		.loc 1 54 17 is_stmt 1 view .LVU66
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 190              		.loc 1 55 26 is_stmt 0 view .LVU67
 191 006a F8EE676A 		vcvt.f32.u32	s13, s15
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 192              		.loc 1 55 57 view .LVU68
 193 006e 94ED0C7A 		vldr.32	s14, [r4, #48]
  54:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 194              		.loc 1 54 26 view .LVU69
 195 0072 0022     		movs	r2, #0
  56:taptempo.cpp  ****                 return true;
 196              		.loc 1 56 32 view .LVU70
 197 0074 2361     		str	r3, [r4, #16]
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 198              		.loc 1 55 57 view .LVU71
 199 0076 C6EE877A 		vdiv.f32	s15, s13, s14
  54:taptempo.cpp  ****                 tempo_ = static_cast<float>(tapLength_) / tapRatio_;
 200              		.loc 1 54 26 view .LVU72
 201 007a 84F82420 		strb	r2, [r4, #36]
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 202              		.loc 1 55 17 is_stmt 1 view .LVU73
  55:taptempo.cpp  ****                 lastTapLength_ = tapLength_;
 203              		.loc 1 55 24 is_stmt 0 view .LVU74
 204 007e C4ED0B7A 		vstr.32	s15, [r4, #44]
  56:taptempo.cpp  ****                 return true;
 205              		.loc 1 56 17 is_stmt 1 view .LVU75
  57:taptempo.cpp  ****             }
 206              		.loc 1 57 17 view .LVU76
 207              		.loc 1 92 5 is_stmt 0 view .LVU77
 208 0082 10BD     		pop	{r4, pc}
 209              		.loc 1 92 5 view .LVU78
 210              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 7


 211              	.LFE4346:
 213              		.section	.text._ZN8Taptempo5clockEv,"ax",%progbits
 214              		.align	1
 215              		.p2align 2,,3
 216              		.global	_ZN8Taptempo5clockEv
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv5-d16
 222              	_ZN8Taptempo5clockEv:
 223              	.LVL6:
 224              	.LFB4347:
  93:taptempo.cpp  **** 
  94:taptempo.cpp  ****     bool Taptempo::clock()
  95:taptempo.cpp  ****     {
 225              		.loc 1 95 5 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
  96:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 229              		.loc 1 96 9 view .LVU80
  95:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 230              		.loc 1 95 5 is_stmt 0 view .LVU81
 231 0000 10B5     		push	{r4, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 4, -8
 234              		.cfi_offset 14, -4
  95:taptempo.cpp  ****         currentTime_ = System::GetUs();    //get current time
 235              		.loc 1 95 5 view .LVU82
 236 0002 0446     		mov	r4, r0
 237              		.loc 1 96 37 view .LVU83
 238 0004 FFF7FEFF 		bl	_ZN5daisy6System5GetUsEv
 239              	.LVL7:
  97:taptempo.cpp  ****         clockLength_ = currentTime_ - lastTime_;  //calculate length between taps
 240              		.loc 1 97 37 view .LVU84
 241 0008 E368     		ldr	r3, [r4, #12]
  98:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
  99:taptempo.cpp  ****         
 100:taptempo.cpp  ****         //if clock length changed more than threshold
 101:taptempo.cpp  ****         if( abs( static_cast<int> (clockLength_ - lastClockLength_)) > clockThresh_)
 242              		.loc 1 101 9 view .LVU85
 243 000a D4E90721 		ldrd	r2, r1, [r4, #28]
  97:taptempo.cpp  ****         clockLength_ = currentTime_ - lastTime_;  //calculate length between taps
 244              		.loc 1 97 37 view .LVU86
 245 000e C31A     		subs	r3, r0, r3
 246              		.loc 1 101 49 view .LVU87
 247 0010 9A1A     		subs	r2, r3, r2
  97:taptempo.cpp  ****         clockLength_ = currentTime_ - lastTime_;  //calculate length between taps
 248              		.loc 1 97 22 view .LVU88
 249 0012 A361     		str	r3, [r4, #24]
  98:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 250              		.loc 1 98 9 is_stmt 1 view .LVU89
 251              		.loc 1 101 9 view .LVU90
 252              		.loc 1 101 16 is_stmt 0 view .LVU91
 253 0014 002A     		cmp	r2, #0
 254 0016 B8BF     		it	lt
 255 0018 5242     		rsblt	r2, r2, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 8


 256              		.loc 1 101 9 view .LVU92
 257 001a 8A42     		cmp	r2, r1
  98:taptempo.cpp  ****         lastTime_ = currentTime_;   //always update lastTime_
 258              		.loc 1 98 19 view .LVU93
 259 001c C4E90200 		strd	r0, r0, [r4, #8]
 260              		.loc 1 101 9 view .LVU94
 261 0020 0ED9     		bls	.L20
 102:taptempo.cpp  ****         {
 103:taptempo.cpp  ****             //if within tempo limits
 104:taptempo.cpp  ****             if(mintap_ <= clockLength_ && clockLength_ <= maxtap_) 
 262              		.loc 1 104 13 is_stmt 1 view .LVU95
 263 0022 2268     		ldr	r2, [r4]
 264 0024 9342     		cmp	r3, r2
 265 0026 0BD3     		bcc	.L20
 266              		.loc 1 104 40 is_stmt 0 discriminator 1 view .LVU96
 267 0028 6268     		ldr	r2, [r4, #4]
 268 002a 9342     		cmp	r3, r2
 269 002c 08D8     		bhi	.L20
 105:taptempo.cpp  ****             {
 106:taptempo.cpp  ****                 //set tempo_
 107:taptempo.cpp  ****                 tempo_ = static_cast<float>(clockLength_);
 270              		.loc 1 107 17 is_stmt 1 view .LVU97
 271              		.loc 1 107 26 is_stmt 0 view .LVU98
 272 002e 07EE903A 		vmov	s15, r3	@ int
 108:taptempo.cpp  ****                 lastClockLength_ = clockLength_;
 109:taptempo.cpp  ****                 return true;
 273              		.loc 1 109 24 view .LVU99
 274 0032 0120     		movs	r0, #1
 108:taptempo.cpp  ****                 lastClockLength_ = clockLength_;
 275              		.loc 1 108 34 view .LVU100
 276 0034 E361     		str	r3, [r4, #28]
 107:taptempo.cpp  ****                 lastClockLength_ = clockLength_;
 277              		.loc 1 107 26 view .LVU101
 278 0036 F8EE677A 		vcvt.f32.u32	s15, s15
 279 003a C4ED0B7A 		vstr.32	s15, [r4, #44]
 108:taptempo.cpp  ****                 lastClockLength_ = clockLength_;
 280              		.loc 1 108 17 is_stmt 1 view .LVU102
 281              		.loc 1 109 17 view .LVU103
 110:taptempo.cpp  **** 
 111:taptempo.cpp  ****             }
 112:taptempo.cpp  ****             else
 113:taptempo.cpp  ****             {
 114:taptempo.cpp  ****                 return false;
 115:taptempo.cpp  ****             }
 116:taptempo.cpp  **** 
 117:taptempo.cpp  ****         }
 118:taptempo.cpp  ****         else
 119:taptempo.cpp  ****         {
 120:taptempo.cpp  ****             return false;
 121:taptempo.cpp  ****         }
 122:taptempo.cpp  ****     }
 282              		.loc 1 122 5 is_stmt 0 view .LVU104
 283 003e 10BD     		pop	{r4, pc}
 284              	.LVL8:
 285              	.L20:
 120:taptempo.cpp  ****         }
 286              		.loc 1 120 20 view .LVU105
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 9


 287 0040 0020     		movs	r0, #0
 288              		.loc 1 122 5 view .LVU106
 289 0042 10BD     		pop	{r4, pc}
 290              		.loc 1 122 5 view .LVU107
 291              		.cfi_endproc
 292              	.LFE4347:
 294              		.section	.text._ZN8Taptempo14getDelayLengthEv,"ax",%progbits
 295              		.align	1
 296              		.p2align 2,,3
 297              		.global	_ZN8Taptempo14getDelayLengthEv
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv5-d16
 303              	_ZN8Taptempo14getDelayLengthEv:
 304              	.LVL9:
 305              	.LFB4348:
 123:taptempo.cpp  ****     
 124:taptempo.cpp  ****     //outputs tap length in Us
 125:taptempo.cpp  ****     float Taptempo::getDelayLength()
 126:taptempo.cpp  ****     {
 306              		.loc 1 126 5 is_stmt 1 view -0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 127:taptempo.cpp  ****         static float tempo_Out{};
 311              		.loc 1 127 9 view .LVU109
 128:taptempo.cpp  ****         static float tempo_last{};
 312              		.loc 1 128 9 view .LVU110
 129:taptempo.cpp  ****         fonepole(tempo_Out,tempo_,0.011f); //32Hz cutoff
 313              		.loc 1 129 9 view .LVU111
 314              	.LBB6:
 315              	.LBI6:
 316              		.file 2 "../DaisySP//Source/Utility/dsp.h"
   1:../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP//Source/Utility/dsp.h **** */
   3:../DaisySP//Source/Utility/dsp.h **** #pragma once
   4:../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP//Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP//Source/Utility/dsp.h **** #include <random>
   9:../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP//Source/Utility/dsp.h **** 
  11:../DaisySP//Source/Utility/dsp.h **** /** PIs
  12:../DaisySP//Source/Utility/dsp.h **** */
  13:../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP//Source/Utility/dsp.h **** 
  21:../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP//Source/Utility/dsp.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 10


  23:../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP//Source/Utility/dsp.h **** 
  26:../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP//Source/Utility/dsp.h **** 
  29:../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP//Source/Utility/dsp.h **** */
  32:../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP//Source/Utility/dsp.h **** {
  34:../DaisySP//Source/Utility/dsp.h ****     float r;
  35:../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP//Source/Utility/dsp.h **** #else
  38:../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP//Source/Utility/dsp.h ****     return r;
  41:../DaisySP//Source/Utility/dsp.h **** }
  42:../DaisySP//Source/Utility/dsp.h **** 
  43:../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP//Source/Utility/dsp.h **** {
  45:../DaisySP//Source/Utility/dsp.h ****     float r;
  46:../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP//Source/Utility/dsp.h **** #else
  49:../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP//Source/Utility/dsp.h ****     return r;
  52:../DaisySP//Source/Utility/dsp.h **** }
  53:../DaisySP//Source/Utility/dsp.h **** 
  54:../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP//Source/Utility/dsp.h **** */
  56:../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP//Source/Utility/dsp.h **** {
  58:../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP//Source/Utility/dsp.h **** }
  60:../DaisySP//Source/Utility/dsp.h **** 
  61:../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP//Source/Utility/dsp.h **** These are approximations
  64:../DaisySP//Source/Utility/dsp.h **** */
  65:../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP//Source/Utility/dsp.h **** {
  67:../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP//Source/Utility/dsp.h ****     return f;
  75:../DaisySP//Source/Utility/dsp.h **** }
  76:../DaisySP//Source/Utility/dsp.h **** 
  77:../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP//Source/Utility/dsp.h **** {
  79:../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 11


  80:../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP//Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP//Source/Utility/dsp.h ****     return f;
  87:../DaisySP//Source/Utility/dsp.h **** }
  88:../DaisySP//Source/Utility/dsp.h **** 
  89:../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP//Source/Utility/dsp.h **** */
  92:../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP//Source/Utility/dsp.h **** {
  94:../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP//Source/Utility/dsp.h **** }
  96:../DaisySP//Source/Utility/dsp.h **** 
  97:../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP//Source/Utility/dsp.h **** */
 100:../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP//Source/Utility/dsp.h **** {
 102:../DaisySP//Source/Utility/dsp.h ****     float frac;
 103:../DaisySP//Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP//Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP//Source/Utility/dsp.h ****     return (f);
 114:../DaisySP//Source/Utility/dsp.h **** }
 115:../DaisySP//Source/Utility/dsp.h **** 
 116:../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP//Source/Utility/dsp.h **** {
 118:../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP//Source/Utility/dsp.h **** }
 120:../DaisySP//Source/Utility/dsp.h **** 
 121:../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP//Source/Utility/dsp.h **** */
 123:../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP//Source/Utility/dsp.h **** {
 125:../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP//Source/Utility/dsp.h **** }
 127:../DaisySP//Source/Utility/dsp.h **** 
 128:../DaisySP//Source/Utility/dsp.h **** 
 129:../DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP//Source/Utility/dsp.h **** */
 135:../DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 317              		.loc 2 135 13 view .LVU112
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 12


 318              	.LBB7:
 136:../DaisySP//Source/Utility/dsp.h **** {
 137:../DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 319              		.loc 2 137 5 view .LVU113
 320              		.loc 2 137 9 is_stmt 0 view .LVU114
 321 0000 154B     		ldr	r3, .L26+8
 322              		.loc 2 137 24 view .LVU115
 323 0002 90ED0B7A 		vldr.32	s14, [r0, #44]
 324              		.loc 2 137 9 view .LVU116
 325 0006 D3ED007A 		vldr.32	s15, [r3]
 326 000a DFED146A 		vldr.32	s13, .L26+12
 327              		.loc 2 137 24 view .LVU117
 328 000e 37EE677A 		vsub.f32	s14, s14, s15
 329              	.LBE7:
 330              	.LBE6:
 130:taptempo.cpp  **** 
 131:taptempo.cpp  ****         //if more than .5% of last value
 132:taptempo.cpp  ****         if( abs( tempo_Out - tempo_last)> (0.005 * tempo_last)) 
 331              		.loc 1 132 16 view .LVU118
 332 0012 134A     		ldr	r2, .L26+16
 333 0014 92ED000A 		vldr.32	s0, [r2]
 334              	.LBB10:
 335              	.LBB8:
 336              		.loc 2 137 9 view .LVU119
 337 0018 E7EE267A 		vfma.f32	s15, s14, s13
 338              	.LBE8:
 339              	.LBE10:
 340              		.loc 1 132 52 view .LVU120
 341 001c B7EEC05A 		vcvt.f64.f32	d5, s0
 342              		.loc 1 132 50 view .LVU121
 343 0020 9FED0B4B 		vldr.64	d4, .L26
 344              		.loc 1 132 16 view .LVU122
 345 0024 37EEC06A 		vsub.f32	s12, s15, s0
 346              	.LBB11:
 347              	.LBB9:
 348              		.loc 2 137 9 view .LVU123
 349 0028 C3ED007A 		vstr.32	s15, [r3]
 350              	.LVL10:
 351              		.loc 2 137 9 view .LVU124
 352              	.LBE9:
 353              	.LBE11:
 354              		.loc 1 132 9 is_stmt 1 view .LVU125
 355              	.LBB12:
 356              	.LBI12:
 357              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/b
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 13


  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 14


  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
 358              		.loc 3 75 3 view .LVU126
 359              	.LBB13:
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 360              		.loc 3 76 5 view .LVU127
 361              		.loc 3 76 5 is_stmt 0 view .LVU128
 362              	.LBE13:
 363              	.LBE12:
 364              		.loc 1 132 50 view .LVU129
 365 002c 25EE045B 		vmul.f64	d5, d5, d4
 366              	.LBB15:
 367              	.LBB14:
 368              		.loc 3 76 31 view .LVU130
 369 0030 B0EEC66A 		vabs.f32	s12, s12
 370              	.LBE14:
 371              	.LBE15:
 372              		.loc 1 132 16 view .LVU131
 373 0034 B7EEC66A 		vcvt.f64.f32	d6, s12
 374              		.loc 1 132 9 view .LVU132
 375 0038 B4EEC56B 		vcmpe.f64	d6, d5
 376 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 377 0040 03DD     		ble	.L22
 133:taptempo.cpp  ****         {
 134:taptempo.cpp  ****             tempo_last = tempo_Out; //update tempo_last
 378              		.loc 1 134 13 is_stmt 1 view .LVU133
 379 0042 B0EE670A 		vmov.f32	s0, s15
 135:taptempo.cpp  ****         }
 136:taptempo.cpp  **** 
 137:taptempo.cpp  ****         return tempo_last;    //in Us
 380              		.loc 1 137 9 view .LVU134
 134:taptempo.cpp  ****         }
 381              		.loc 1 134 24 is_stmt 0 view .LVU135
 382 0046 C2ED007A 		vstr.32	s15, [r2]
 383              	.L22:
 138:taptempo.cpp  ****     }  
 384              		.loc 1 138 5 view .LVU136
 385 004a 7047     		bx	lr
 386              	.L27:
 387 004c AFF30080 		.align	3
 388              	.L26:
 389 0050 7B14AE47 		.word	1202590843
 390 0054 E17A743F 		.word	1064598241
 391 0058 00000000 		.word	.LANCHOR0
 392 005c 5839343C 		.word	1010055512
 393 0060 00000000 		.word	.LANCHOR1
 394              		.cfi_endproc
 395              	.LFE4348:
 397              		.section	.text._ZN8Taptempo10getTapFreqEv,"ax",%progbits
 398              		.align	1
 399              		.p2align 2,,3
 400              		.global	_ZN8Taptempo10getTapFreqEv
 401              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 15


 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv5-d16
 406              	_ZN8Taptempo10getTapFreqEv:
 407              	.LVL11:
 408              	.LFB4349:
 139:taptempo.cpp  ****     
 140:taptempo.cpp  ****     //outputs tap frequency in Hz
 141:taptempo.cpp  ****     float Taptempo::getTapFreq()
 142:taptempo.cpp  ****     {
 409              		.loc 1 142 5 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 143:taptempo.cpp  ****         return 1.0f / (tempo_/ 1000000.0f); //in Hz
 414              		.loc 1 143 9 view .LVU138
 415              		.loc 1 143 30 is_stmt 0 view .LVU139
 416 0000 9FED057A 		vldr.32	s14, .L29
 417              		.loc 1 143 42 view .LVU140
 418 0004 B7EE000A 		vmov.f32	s0, #1.0e+0
 419              		.loc 1 143 30 view .LVU141
 420 0008 D0ED0B6A 		vldr.32	s13, [r0, #44]
 421 000c C6EE877A 		vdiv.f32	s15, s13, s14
 144:taptempo.cpp  ****     }
 422              		.loc 1 144 5 view .LVU142
 423 0010 80EE270A 		vdiv.f32	s0, s0, s15
 424 0014 7047     		bx	lr
 425              	.L30:
 426 0016 00BF     		.align	2
 427              	.L29:
 428 0018 00247449 		.word	1232348160
 429              		.cfi_endproc
 430              	.LFE4349:
 432              		.section	.text._ZN8Taptempo12getTapLengthEv,"ax",%progbits
 433              		.align	1
 434              		.p2align 2,,3
 435              		.global	_ZN8Taptempo12getTapLengthEv
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv5-d16
 441              	_ZN8Taptempo12getTapLengthEv:
 442              	.LVL12:
 443              	.LFB4350:
 145:taptempo.cpp  **** 
 146:taptempo.cpp  ****     //outputs delay length in Us;
 147:taptempo.cpp  ****     float Taptempo::getTapLength()
 148:taptempo.cpp  ****     {
 444              		.loc 1 148 5 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 149:taptempo.cpp  ****         return static_cast<float>(lastTapLength_);
 449              		.loc 1 149 9 view .LVU144
 450              		.loc 1 149 49 is_stmt 0 view .LVU145
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 16


 451 0000 90ED040A 		vldr.32	s0, [r0, #16]	@ int
 150:taptempo.cpp  ****     }
 452              		.loc 1 150 5 view .LVU146
 453 0004 B8EE400A 		vcvt.f32.u32	s0, s0
 454 0008 7047     		bx	lr
 455              		.cfi_endproc
 456              	.LFE4350:
 458 000a 00BF     		.section	.text._ZN8Taptempo11setTapRatioEf,"ax",%progbits
 459              		.align	1
 460              		.p2align 2,,3
 461              		.global	_ZN8Taptempo11setTapRatioEf
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 465              		.fpu fpv5-d16
 467              	_ZN8Taptempo11setTapRatioEf:
 468              	.LVL13:
 469              	.LFB4351:
 151:taptempo.cpp  **** 
 152:taptempo.cpp  ****     void Taptempo::setTapRatio(float tapRatio)
 153:taptempo.cpp  ****     {
 470              		.loc 1 153 5 is_stmt 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 154:taptempo.cpp  ****         tapRatio_ = tapRatio;
 475              		.loc 1 154 9 view .LVU148
 476              		.loc 1 154 19 is_stmt 0 view .LVU149
 477 0000 80ED0C0A 		vstr.32	s0, [r0, #48]
 155:taptempo.cpp  ****     }
 478              		.loc 1 155 5 view .LVU150
 479 0004 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE4351:
 483 0006 00BF     		.section	.text._ZN8Taptempo12setTapLengthEf,"ax",%progbits
 484              		.align	1
 485              		.p2align 2,,3
 486              		.global	_ZN8Taptempo12setTapLengthEf
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv5-d16
 492              	_ZN8Taptempo12setTapLengthEf:
 493              	.LVL14:
 494              	.LFB4352:
 156:taptempo.cpp  ****     
 157:taptempo.cpp  ****     void Taptempo::setTapLength(float tapLength)
 158:taptempo.cpp  ****     {
 495              		.loc 1 158 5 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 159:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 500              		.loc 1 159 9 view .LVU152
 501              		.loc 1 159 26 is_stmt 0 view .LVU153
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 17


 502 0000 FCEEC07A 		vcvt.u32.f32	s15, s0
 160:taptempo.cpp  ****         tempo_ = tapLength / tapRatio_; 
 503              		.loc 1 160 28 view .LVU154
 504 0004 90ED0C7A 		vldr.32	s14, [r0, #48]
 159:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 505              		.loc 1 159 26 view .LVU155
 506 0008 17EE903A 		vmov	r3, s15	@ int
 507              		.loc 1 160 28 view .LVU156
 508 000c C0EE077A 		vdiv.f32	s15, s0, s14
 159:taptempo.cpp  ****         lastTapLength_ = static_cast<uint32_t>(tapLength);
 509              		.loc 1 159 26 view .LVU157
 510 0010 0361     		str	r3, [r0, #16]
 511              		.loc 1 160 9 is_stmt 1 view .LVU158
 512              		.loc 1 160 16 is_stmt 0 view .LVU159
 513 0012 C0ED0B7A 		vstr.32	s15, [r0, #44]
 161:taptempo.cpp  ****     }
 514              		.loc 1 161 5 view .LVU160
 515 0016 7047     		bx	lr
 516              		.cfi_endproc
 517              	.LFE4352:
 519              		.section	.bss._ZZN8Taptempo14getDelayLengthEvE10tempo_last,"aw",%nobits
 520              		.align	2
 521              		.set	.LANCHOR1,. + 0
 524              	_ZZN8Taptempo14getDelayLengthEvE10tempo_last:
 525 0000 00000000 		.space	4
 526              		.section	.bss._ZZN8Taptempo14getDelayLengthEvE9tempo_Out,"aw",%nobits
 527              		.align	2
 528              		.set	.LANCHOR0,. + 0
 531              	_ZZN8Taptempo14getDelayLengthEvE9tempo_Out:
 532 0000 00000000 		.space	4
 533              		.text
 534              	.Letext0:
 535              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 536              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 537              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 538              		.file 7 "../libDaisy//Drivers/CMSIS/Include/core_cm7.h"
 539              		.file 8 "../libDaisy//Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 540              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/inclu
 541              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 542              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 543              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 544              		.file 13 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 545              		.file 14 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 546              		.file 15 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 547              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 548              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 549              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 550              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 551              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 552              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 553              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 554              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 555              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 556              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 557              		.file 26 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 558              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 559              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 18


 560              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 561              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 562              		.file 31 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 563              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 564              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 565              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 566              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 567              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 568              		.file 37 "../libDaisy//Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 569              		.file 38 "../libDaisy//Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 570              		.file 39 "../DaisySP//Source/Control/adenv.h"
 571              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 572              		.file 41 "<built-in>"
 573              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 574              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 575              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 576              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 577              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 578              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 579              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 580              		.file 49 "../libDaisy//src/daisy_core.h"
 581              		.file 50 "../libDaisy//src/per/tim.h"
 582              		.file 51 "../libDaisy//src/sys/system.h"
 583              		.file 52 "../libDaisy//src/util/wav_format.h"
 584              		.file 53 "../libDaisy//src/daisy_seed.h"
 585              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 586              		.file 55 "../libDaisy//src/util/oled_fonts.h"
 587              		.file 56 "taptempo.h"
 588              		.file 57 "../libDaisy//src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 taptempo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:17     .text._ZN8Taptempo4initEmmf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:26     .text._ZN8Taptempo4initEmmf:0000000000000000 _ZN8Taptempo4initEmmf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:77     .text._ZN8Taptempo4initEmmf:0000000000000028 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:82     .text._ZN8Taptempo3tapEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:90     .text._ZN8Taptempo3tapEv:0000000000000000 _ZN8Taptempo3tapEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:214    .text._ZN8Taptempo5clockEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:222    .text._ZN8Taptempo5clockEv:0000000000000000 _ZN8Taptempo5clockEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:295    .text._ZN8Taptempo14getDelayLengthEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:303    .text._ZN8Taptempo14getDelayLengthEv:0000000000000000 _ZN8Taptempo14getDelayLengthEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:389    .text._ZN8Taptempo14getDelayLengthEv:0000000000000050 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:398    .text._ZN8Taptempo10getTapFreqEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:406    .text._ZN8Taptempo10getTapFreqEv:0000000000000000 _ZN8Taptempo10getTapFreqEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:428    .text._ZN8Taptempo10getTapFreqEv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:433    .text._ZN8Taptempo12getTapLengthEv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:441    .text._ZN8Taptempo12getTapLengthEv:0000000000000000 _ZN8Taptempo12getTapLengthEv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:459    .text._ZN8Taptempo11setTapRatioEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:467    .text._ZN8Taptempo11setTapRatioEf:0000000000000000 _ZN8Taptempo11setTapRatioEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:484    .text._ZN8Taptempo12setTapLengthEf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:492    .text._ZN8Taptempo12setTapLengthEf:0000000000000000 _ZN8Taptempo12setTapLengthEf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:520    .bss._ZZN8Taptempo14getDelayLengthEvE10tempo_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:524    .bss._ZZN8Taptempo14getDelayLengthEvE10tempo_last:0000000000000000 _ZZN8Taptempo14getDelayLengthEvE10tempo_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:527    .bss._ZZN8Taptempo14getDelayLengthEvE9tempo_Out:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccD3fFkB.s:531    .bss._ZZN8Taptempo14getDelayLengthEvE9tempo_Out:0000000000000000 _ZZN8Taptempo14getDelayLengthEvE9tempo_Out

UNDEFINED SYMBOLS
_ZN5daisy6System5GetUsEv
